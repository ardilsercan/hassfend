/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
export const id = "vendors-node_modules_vaadin_combo-box_lit_js-node_modules_vaadin_combo-box_theme_material_vaa-dad3c3";
export const ids = ["vendors-node_modules_vaadin_combo-box_lit_js-node_modules_vaadin_combo-box_theme_material_vaa-dad3c3"];
export const modules = {

/***/ "./node_modules/@vaadin/a11y-base/src/aria-hidden.js":
/*!***********************************************************!*\
  !*** ./node_modules/@vaadin/a11y-base/src/aria-hidden.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hideOthers: () => (/* binding */ hideOthers),\n/* harmony export */   inertOthers: () => (/* binding */ inertOthers),\n/* harmony export */   supportsInert: () => (/* binding */ supportsInert),\n/* harmony export */   suppressOthers: () => (/* binding */ suppressOthers)\n/* harmony export */ });\n/**\n * @license\n * Copyright (c) 2017 Anton Korzunov\n * SPDX-License-Identifier: MIT\n */\n\n/**\n * @fileoverview\n *\n * This module includes JS code copied from the `aria-hidden` package:\n * https://github.com/theKashey/aria-hidden/blob/master/src/index.ts\n */\n\n/** @type {WeakMap<Element, number>} */\nlet counterMap = new WeakMap();\n\n/** @type {WeakMap<Element, boolean>} */\nlet uncontrolledNodes = new WeakMap();\n\n/** @type {Record<string, WeakMap<Element, number>>} */\nlet markerMap = {};\n\n/** @type {number} */\nlet lockCount = 0;\n\n/**\n * @param {?Node} node\n * @return {boolean}\n */\nconst isElement = node => node && node.nodeType === Node.ELEMENT_NODE;\n\n/**\n * @param  {...unknown} args\n */\nconst logError = (...args) => {\n  console.error(`Error: ${args.join(' ')}. Skip setting aria-hidden.`);\n};\n\n/**\n * @param {HTMLElement} parent\n * @param {Element[]} targets\n * @return {Element[]}\n */\nconst correctTargets = (parent, targets) => {\n  if (!isElement(parent)) {\n    logError(parent, 'is not a valid element');\n    return [];\n  }\n  return targets.map(target => {\n    if (!isElement(target)) {\n      logError(target, 'is not a valid element');\n      return null;\n    }\n    let node = target;\n    while (node && node !== parent) {\n      if (parent.contains(node)) {\n        return target;\n      }\n      node = node.getRootNode().host;\n    }\n    logError(target, 'is not contained inside', parent);\n    return null;\n  }).filter(x => Boolean(x));\n};\n\n/**\n * Marks everything except given node(or nodes) as aria-hidden\n * @param {Element | Element[]} originalTarget - elements to keep on the page\n * @param {HTMLElement} [parentNode] - top element, defaults to document.body\n * @param {String} [markerName] - a special attribute to mark every node\n * @param {String} [controlAttribute] - html Attribute to control\n * @return {Function}\n */\nconst applyAttributeToOthers = (originalTarget, parentNode, markerName, controlAttribute) => {\n  const targets = correctTargets(parentNode, Array.isArray(originalTarget) ? originalTarget : [originalTarget]);\n  if (!markerMap[markerName]) {\n    markerMap[markerName] = new WeakMap();\n  }\n  const markerCounter = markerMap[markerName];\n\n  /** @type {Element[]} */\n  const hiddenNodes = [];\n\n  /** @type {Set<Node>} */\n  const elementsToKeep = new Set();\n\n  /** @type {Set<Node>} */\n  const elementsToStop = new Set(targets);\n\n  /**\n   * @param {?Node} el\n   */\n  const keep = el => {\n    if (!el || elementsToKeep.has(el)) {\n      return;\n    }\n    elementsToKeep.add(el);\n    const slot = el.assignedSlot;\n    if (slot) {\n      keep(slot);\n    }\n    keep(el.parentNode || el.host);\n  };\n  targets.forEach(keep);\n\n  /**\n   * @param {?Node} el\n   */\n  const deep = parent => {\n    if (!parent || elementsToStop.has(parent)) {\n      return;\n    }\n    const root = parent.shadowRoot;\n    const children = root ? [...parent.children, ...root.children] : [...parent.children];\n    children.forEach(node => {\n      // Skip elements that don't need to be hidden\n      if (['template', 'script', 'style'].includes(node.localName)) {\n        return;\n      }\n      if (elementsToKeep.has(node)) {\n        deep(node);\n      } else {\n        const attr = node.getAttribute(controlAttribute);\n        const alreadyHidden = attr !== null && attr !== 'false';\n        const counterValue = (counterMap.get(node) || 0) + 1;\n        const markerValue = (markerCounter.get(node) || 0) + 1;\n        counterMap.set(node, counterValue);\n        markerCounter.set(node, markerValue);\n        hiddenNodes.push(node);\n        if (counterValue === 1 && alreadyHidden) {\n          uncontrolledNodes.set(node, true);\n        }\n        if (markerValue === 1) {\n          node.setAttribute(markerName, 'true');\n        }\n        if (!alreadyHidden) {\n          node.setAttribute(controlAttribute, 'true');\n        }\n      }\n    });\n  };\n  deep(parentNode);\n  elementsToKeep.clear();\n  lockCount += 1;\n  return () => {\n    hiddenNodes.forEach(node => {\n      const counterValue = counterMap.get(node) - 1;\n      const markerValue = markerCounter.get(node) - 1;\n      counterMap.set(node, counterValue);\n      markerCounter.set(node, markerValue);\n      if (!counterValue) {\n        if (uncontrolledNodes.has(node)) {\n          uncontrolledNodes.delete(node);\n        } else {\n          node.removeAttribute(controlAttribute);\n        }\n      }\n      if (!markerValue) {\n        node.removeAttribute(markerName);\n      }\n    });\n    lockCount -= 1;\n    if (!lockCount) {\n      // clear\n      counterMap = new WeakMap();\n      counterMap = new WeakMap();\n      uncontrolledNodes = new WeakMap();\n      markerMap = {};\n    }\n  };\n};\n\n/**\n * Marks everything except given node(or nodes) as aria-hidden\n * @param {Element | Element[]} originalTarget - elements to keep on the page\n * @param {HTMLElement} [parentNode] - top element, defaults to document.body\n * @param {String} [markerName] - a special attribute to mark every node\n * @return {Function} undo command\n */\nconst hideOthers = (originalTarget, parentNode = document.body, markerName = 'data-aria-hidden') => {\n  const targets = Array.from(Array.isArray(originalTarget) ? originalTarget : [originalTarget]);\n  if (parentNode) {\n    // We should not hide ariaLive elements - https://github.com/theKashey/aria-hidden/issues/10\n    targets.push(...Array.from(parentNode.querySelectorAll('[aria-live]')));\n  }\n  return applyAttributeToOthers(targets, parentNode, markerName, 'aria-hidden');\n};\n\n/**\n * Marks everything except given node(or nodes) as inert\n * @param {Element | Element[]} originalTarget - elements to keep on the page\n * @param {HTMLElement} [parentNode] - top element, defaults to document.body\n * @param {String} [markerName] - a special attribute to mark every node\n * @return {Function} undo command\n */\nconst inertOthers = (originalTarget, parentNode = document.body, markerName = 'data-inert-ed') => {\n  return applyAttributeToOthers(originalTarget, parentNode, markerName, 'inert');\n};\n\n/**\n * @return if current browser supports inert\n */\nconst supportsInert = ('inert' in HTMLElement.prototype);\n\n/**\n * Automatic function to \"suppress\" DOM elements - _hide_ or _inert_ in the best possible way\n * @param {Element | Element[]} originalTarget - elements to keep on the page\n * @param {HTMLElement} [parentNode] - top element, defaults to document.body\n * @param {String} [markerName] - a special attribute to mark every node\n * @return {Function} undo command\n */\nconst suppressOthers = (originalTarget, parentNode, markerName) => (supportsInert ? inertOthers : hideOthers)(originalTarget, parentNode, markerName);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/a11y-base/src/aria-hidden.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/a11y-base/src/aria-modal-controller.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@vaadin/a11y-base/src/aria-modal-controller.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AriaModalController: () => (/* binding */ AriaModalController)\n/* harmony export */ });\n/* harmony import */ var _aria_hidden_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./aria-hidden.js */ \"./node_modules/@vaadin/a11y-base/src/aria-hidden.js\");\n/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\n/**\n * A controller for handling modal state on the elements with `dialog` and `alertdialog` role.\n * See https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-modal\n *\n * Note, the actual `role` and `aria-modal` attributes are supposed to be handled by the\n * consumer web component. This is done in to ensure the controller only does one thing.\n */\nclass AriaModalController {\n  /**\n   * @param {HTMLElement} host\n   */\n  constructor(host, callback) {\n    /**\n     * The controller host element.\n     *\n     * @type {HTMLElement}\n     */\n    this.host = host;\n\n    /**\n     * The callback used to detect which element\n     * to use as a target. Defaults to the host.\n     *\n     * @type {Function}\n     */\n    this.callback = typeof callback === 'function' ? callback : () => host;\n  }\n\n  /**\n   * Make the controller host modal by hiding other elements from screen readers\n   * using `aria-hidden` attribute (can be replaced with `inert` in the future).\n   *\n   * The method name is chosen to align with the one provided by native `<dialog>`:\n   * https://developer.mozilla.org/en-US/docs/Web/API/HTMLDialogElement/showModal\n   */\n  showModal() {\n    const targets = this.callback();\n    this.__showOthers = (0,_aria_hidden_js__WEBPACK_IMPORTED_MODULE_0__.hideOthers)(targets);\n  }\n\n  /**\n   * Remove `aria-hidden` from other elements unless there are any other\n   * controller hosts on the page activated by using `showModal()` call.\n   */\n  close() {\n    if (this.__showOthers) {\n      this.__showOthers();\n      this.__showOthers = null;\n    }\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9hMTF5LWJhc2Uvc3JjL2FyaWEtbW9kYWwtY29udHJvbGxlci5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob21lLWFzc2lzdGFudC1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AdmFhZGluL2ExMXktYmFzZS9zcmMvYXJpYS1tb2RhbC1jb250cm9sbGVyLmpzP2Q4ODAiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IChjKSAyMDIxIC0gMjAyMyBWYWFkaW4gTHRkLlxuICogVGhpcyBwcm9ncmFtIGlzIGF2YWlsYWJsZSB1bmRlciBBcGFjaGUgTGljZW5zZSBWZXJzaW9uIDIuMCwgYXZhaWxhYmxlIGF0IGh0dHBzOi8vdmFhZGluLmNvbS9saWNlbnNlL1xuICovXG5pbXBvcnQgeyBoaWRlT3RoZXJzIH0gZnJvbSAnLi9hcmlhLWhpZGRlbi5qcyc7XG5cbi8qKlxuICogQSBjb250cm9sbGVyIGZvciBoYW5kbGluZyBtb2RhbCBzdGF0ZSBvbiB0aGUgZWxlbWVudHMgd2l0aCBgZGlhbG9nYCBhbmQgYGFsZXJ0ZGlhbG9nYCByb2xlLlxuICogU2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0FjY2Vzc2liaWxpdHkvQVJJQS9BdHRyaWJ1dGVzL2FyaWEtbW9kYWxcbiAqXG4gKiBOb3RlLCB0aGUgYWN0dWFsIGByb2xlYCBhbmQgYGFyaWEtbW9kYWxgIGF0dHJpYnV0ZXMgYXJlIHN1cHBvc2VkIHRvIGJlIGhhbmRsZWQgYnkgdGhlXG4gKiBjb25zdW1lciB3ZWIgY29tcG9uZW50LiBUaGlzIGlzIGRvbmUgaW4gdG8gZW5zdXJlIHRoZSBjb250cm9sbGVyIG9ubHkgZG9lcyBvbmUgdGhpbmcuXG4gKi9cbmV4cG9ydCBjbGFzcyBBcmlhTW9kYWxDb250cm9sbGVyIHtcbiAgLyoqXG4gICAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IGhvc3RcbiAgICovXG4gIGNvbnN0cnVjdG9yKGhvc3QsIGNhbGxiYWNrKSB7XG4gICAgLyoqXG4gICAgICogVGhlIGNvbnRyb2xsZXIgaG9zdCBlbGVtZW50LlxuICAgICAqXG4gICAgICogQHR5cGUge0hUTUxFbGVtZW50fVxuICAgICAqL1xuICAgIHRoaXMuaG9zdCA9IGhvc3Q7XG5cbiAgICAvKipcbiAgICAgKiBUaGUgY2FsbGJhY2sgdXNlZCB0byBkZXRlY3Qgd2hpY2ggZWxlbWVudFxuICAgICAqIHRvIHVzZSBhcyBhIHRhcmdldC4gRGVmYXVsdHMgdG8gdGhlIGhvc3QuXG4gICAgICpcbiAgICAgKiBAdHlwZSB7RnVuY3Rpb259XG4gICAgICovXG4gICAgdGhpcy5jYWxsYmFjayA9IHR5cGVvZiBjYWxsYmFjayA9PT0gJ2Z1bmN0aW9uJyA/IGNhbGxiYWNrIDogKCkgPT4gaG9zdDtcbiAgfVxuXG4gIC8qKlxuICAgKiBNYWtlIHRoZSBjb250cm9sbGVyIGhvc3QgbW9kYWwgYnkgaGlkaW5nIG90aGVyIGVsZW1lbnRzIGZyb20gc2NyZWVuIHJlYWRlcnNcbiAgICogdXNpbmcgYGFyaWEtaGlkZGVuYCBhdHRyaWJ1dGUgKGNhbiBiZSByZXBsYWNlZCB3aXRoIGBpbmVydGAgaW4gdGhlIGZ1dHVyZSkuXG4gICAqXG4gICAqIFRoZSBtZXRob2QgbmFtZSBpcyBjaG9zZW4gdG8gYWxpZ24gd2l0aCB0aGUgb25lIHByb3ZpZGVkIGJ5IG5hdGl2ZSBgPGRpYWxvZz5gOlxuICAgKiBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9BUEkvSFRNTERpYWxvZ0VsZW1lbnQvc2hvd01vZGFsXG4gICAqL1xuICBzaG93TW9kYWwoKSB7XG4gICAgY29uc3QgdGFyZ2V0cyA9IHRoaXMuY2FsbGJhY2soKTtcbiAgICB0aGlzLl9fc2hvd090aGVycyA9IGhpZGVPdGhlcnModGFyZ2V0cyk7XG4gIH1cblxuICAvKipcbiAgICogUmVtb3ZlIGBhcmlhLWhpZGRlbmAgZnJvbSBvdGhlciBlbGVtZW50cyB1bmxlc3MgdGhlcmUgYXJlIGFueSBvdGhlclxuICAgKiBjb250cm9sbGVyIGhvc3RzIG9uIHRoZSBwYWdlIGFjdGl2YXRlZCBieSB1c2luZyBgc2hvd01vZGFsKClgIGNhbGwuXG4gICAqL1xuICBjbG9zZSgpIHtcbiAgICBpZiAodGhpcy5fX3Nob3dPdGhlcnMpIHtcbiAgICAgIHRoaXMuX19zaG93T3RoZXJzKCk7XG4gICAgICB0aGlzLl9fc2hvd090aGVycyA9IG51bGw7XG4gICAgfVxuICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/a11y-base/src/aria-modal-controller.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/a11y-base/src/disabled-mixin.js":
/*!**************************************************************!*\
  !*** ./node_modules/@vaadin/a11y-base/src/disabled-mixin.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DisabledMixin: () => (/* binding */ DisabledMixin)\n/* harmony export */ });\n/* harmony import */ var _polymer_polymer_lib_utils_mixin_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polymer/polymer/lib/utils/mixin.js */ \"./node_modules/@polymer/polymer/lib/utils/mixin.js\");\n/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\n/**\n * A mixin to provide disabled property for field components.\n *\n * @polymerMixin\n */\nconst DisabledMixin = (0,_polymer_polymer_lib_utils_mixin_js__WEBPACK_IMPORTED_MODULE_0__.dedupingMixin)(superclass => class DisabledMixinClass extends superclass {\n  static get properties() {\n    return {\n      /**\n       * If true, the user cannot interact with this element.\n       */\n      disabled: {\n        type: Boolean,\n        value: false,\n        observer: '_disabledChanged',\n        reflectToAttribute: true\n      }\n    };\n  }\n\n  /**\n   * @param {boolean} disabled\n   * @protected\n   */\n  _disabledChanged(disabled) {\n    this._setAriaDisabled(disabled);\n  }\n\n  /**\n   * @param {boolean} disabled\n   * @protected\n   */\n  _setAriaDisabled(disabled) {\n    if (disabled) {\n      this.setAttribute('aria-disabled', 'true');\n    } else {\n      this.removeAttribute('aria-disabled');\n    }\n  }\n\n  /**\n   * Overrides the default element `click` method in order to prevent\n   * firing the `click` event when the element is disabled.\n   * @protected\n   * @override\n   */\n  click() {\n    if (!this.disabled) {\n      super.click();\n    }\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9hMTF5LWJhc2Uvc3JjL2Rpc2FibGVkLW1peGluLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9tZS1hc3Npc3RhbnQtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9hMTF5LWJhc2Uvc3JjL2Rpc2FibGVkLW1peGluLmpzPzc1NGUiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IChjKSAyMDIxIC0gMjAyMyBWYWFkaW4gTHRkLlxuICogVGhpcyBwcm9ncmFtIGlzIGF2YWlsYWJsZSB1bmRlciBBcGFjaGUgTGljZW5zZSBWZXJzaW9uIDIuMCwgYXZhaWxhYmxlIGF0IGh0dHBzOi8vdmFhZGluLmNvbS9saWNlbnNlL1xuICovXG5pbXBvcnQgeyBkZWR1cGluZ01peGluIH0gZnJvbSAnQHBvbHltZXIvcG9seW1lci9saWIvdXRpbHMvbWl4aW4uanMnO1xuXG4vKipcbiAqIEEgbWl4aW4gdG8gcHJvdmlkZSBkaXNhYmxlZCBwcm9wZXJ0eSBmb3IgZmllbGQgY29tcG9uZW50cy5cbiAqXG4gKiBAcG9seW1lck1peGluXG4gKi9cbmV4cG9ydCBjb25zdCBEaXNhYmxlZE1peGluID0gZGVkdXBpbmdNaXhpbihcbiAgKHN1cGVyY2xhc3MpID0+XG4gICAgY2xhc3MgRGlzYWJsZWRNaXhpbkNsYXNzIGV4dGVuZHMgc3VwZXJjbGFzcyB7XG4gICAgICBzdGF0aWMgZ2V0IHByb3BlcnRpZXMoKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgLyoqXG4gICAgICAgICAgICogSWYgdHJ1ZSwgdGhlIHVzZXIgY2Fubm90IGludGVyYWN0IHdpdGggdGhpcyBlbGVtZW50LlxuICAgICAgICAgICAqL1xuICAgICAgICAgIGRpc2FibGVkOiB7XG4gICAgICAgICAgICB0eXBlOiBCb29sZWFuLFxuICAgICAgICAgICAgdmFsdWU6IGZhbHNlLFxuICAgICAgICAgICAgb2JzZXJ2ZXI6ICdfZGlzYWJsZWRDaGFuZ2VkJyxcbiAgICAgICAgICAgIHJlZmxlY3RUb0F0dHJpYnV0ZTogdHJ1ZSxcbiAgICAgICAgICB9LFxuICAgICAgICB9O1xuICAgICAgfVxuXG4gICAgICAvKipcbiAgICAgICAqIEBwYXJhbSB7Ym9vbGVhbn0gZGlzYWJsZWRcbiAgICAgICAqIEBwcm90ZWN0ZWRcbiAgICAgICAqL1xuICAgICAgX2Rpc2FibGVkQ2hhbmdlZChkaXNhYmxlZCkge1xuICAgICAgICB0aGlzLl9zZXRBcmlhRGlzYWJsZWQoZGlzYWJsZWQpO1xuICAgICAgfVxuXG4gICAgICAvKipcbiAgICAgICAqIEBwYXJhbSB7Ym9vbGVhbn0gZGlzYWJsZWRcbiAgICAgICAqIEBwcm90ZWN0ZWRcbiAgICAgICAqL1xuICAgICAgX3NldEFyaWFEaXNhYmxlZChkaXNhYmxlZCkge1xuICAgICAgICBpZiAoZGlzYWJsZWQpIHtcbiAgICAgICAgICB0aGlzLnNldEF0dHJpYnV0ZSgnYXJpYS1kaXNhYmxlZCcsICd0cnVlJyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhpcy5yZW1vdmVBdHRyaWJ1dGUoJ2FyaWEtZGlzYWJsZWQnKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAvKipcbiAgICAgICAqIE92ZXJyaWRlcyB0aGUgZGVmYXVsdCBlbGVtZW50IGBjbGlja2AgbWV0aG9kIGluIG9yZGVyIHRvIHByZXZlbnRcbiAgICAgICAqIGZpcmluZyB0aGUgYGNsaWNrYCBldmVudCB3aGVuIHRoZSBlbGVtZW50IGlzIGRpc2FibGVkLlxuICAgICAgICogQHByb3RlY3RlZFxuICAgICAgICogQG92ZXJyaWRlXG4gICAgICAgKi9cbiAgICAgIGNsaWNrKCkge1xuICAgICAgICBpZiAoIXRoaXMuZGlzYWJsZWQpIHtcbiAgICAgICAgICBzdXBlci5jbGljaygpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcbik7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/a11y-base/src/disabled-mixin.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/a11y-base/src/focus-mixin.js":
/*!***********************************************************!*\
  !*** ./node_modules/@vaadin/a11y-base/src/focus-mixin.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FocusMixin: () => (/* binding */ FocusMixin)\n/* harmony export */ });\n/* harmony import */ var _polymer_polymer_lib_utils_mixin_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polymer/polymer/lib/utils/mixin.js */ \"./node_modules/@polymer/polymer/lib/utils/mixin.js\");\n/* harmony import */ var _focus_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./focus-utils.js */ \"./node_modules/@vaadin/a11y-base/src/focus-utils.js\");\n/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\n\n/**\n * A mixin to handle `focused` and `focus-ring` attributes based on focus.\n *\n * @polymerMixin\n */\nconst FocusMixin = (0,_polymer_polymer_lib_utils_mixin_js__WEBPACK_IMPORTED_MODULE_0__.dedupingMixin)(superclass => class FocusMixinClass extends superclass {\n  /**\n   * @protected\n   * @return {boolean}\n   */\n  get _keyboardActive() {\n    return (0,_focus_utils_js__WEBPACK_IMPORTED_MODULE_1__.isKeyboardActive)();\n  }\n\n  /** @protected */\n  ready() {\n    this.addEventListener('focusin', e => {\n      if (this._shouldSetFocus(e)) {\n        this._setFocused(true);\n      }\n    });\n    this.addEventListener('focusout', e => {\n      if (this._shouldRemoveFocus(e)) {\n        this._setFocused(false);\n      }\n    });\n\n    // In super.ready() other 'focusin' and 'focusout' listeners might be\n    // added, so we call it after our own ones to ensure they execute first.\n    // Issue to watch out: when incorrect, <vaadin-combo-box> refocuses the\n    // input field on iOS after \"Done\" is pressed.\n    super.ready();\n  }\n\n  /** @protected */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    // In non-Chrome browsers, blur does not fire on the element when it is disconnected.\n    // reproducible in `<vaadin-date-picker>` when closing on `Cancel` or `Today` click.\n    if (this.hasAttribute('focused')) {\n      this._setFocused(false);\n    }\n  }\n\n  /**\n   * Override to change how focused and focus-ring attributes are set.\n   *\n   * @param {boolean} focused\n   * @protected\n   */\n  _setFocused(focused) {\n    this.toggleAttribute('focused', focused);\n\n    // Focus-ring is true when the element was focused from the keyboard.\n    // Focus Ring [A11ycasts]: https://youtu.be/ilj2P5-5CjI\n    this.toggleAttribute('focus-ring', focused && this._keyboardActive);\n  }\n\n  /**\n   * Override to define if the field receives focus based on the event.\n   *\n   * @param {FocusEvent} _event\n   * @return {boolean}\n   * @protected\n   */\n  _shouldSetFocus(_event) {\n    return true;\n  }\n\n  /**\n   * Override to define if the field loses focus based on the event.\n   *\n   * @param {FocusEvent} _event\n   * @return {boolean}\n   * @protected\n   */\n  _shouldRemoveFocus(_event) {\n    return true;\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9hMTF5LWJhc2Uvc3JjL2ZvY3VzLW1peGluLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob21lLWFzc2lzdGFudC1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AdmFhZGluL2ExMXktYmFzZS9zcmMvZm9jdXMtbWl4aW4uanM/ZTI4YiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgKGMpIDIwMjEgLSAyMDIzIFZhYWRpbiBMdGQuXG4gKiBUaGlzIHByb2dyYW0gaXMgYXZhaWxhYmxlIHVuZGVyIEFwYWNoZSBMaWNlbnNlIFZlcnNpb24gMi4wLCBhdmFpbGFibGUgYXQgaHR0cHM6Ly92YWFkaW4uY29tL2xpY2Vuc2UvXG4gKi9cbmltcG9ydCB7IGRlZHVwaW5nTWl4aW4gfSBmcm9tICdAcG9seW1lci9wb2x5bWVyL2xpYi91dGlscy9taXhpbi5qcyc7XG5pbXBvcnQgeyBpc0tleWJvYXJkQWN0aXZlIH0gZnJvbSAnLi9mb2N1cy11dGlscy5qcyc7XG5cbi8qKlxuICogQSBtaXhpbiB0byBoYW5kbGUgYGZvY3VzZWRgIGFuZCBgZm9jdXMtcmluZ2AgYXR0cmlidXRlcyBiYXNlZCBvbiBmb2N1cy5cbiAqXG4gKiBAcG9seW1lck1peGluXG4gKi9cbmV4cG9ydCBjb25zdCBGb2N1c01peGluID0gZGVkdXBpbmdNaXhpbihcbiAgKHN1cGVyY2xhc3MpID0+XG4gICAgY2xhc3MgRm9jdXNNaXhpbkNsYXNzIGV4dGVuZHMgc3VwZXJjbGFzcyB7XG4gICAgICAvKipcbiAgICAgICAqIEBwcm90ZWN0ZWRcbiAgICAgICAqIEByZXR1cm4ge2Jvb2xlYW59XG4gICAgICAgKi9cbiAgICAgIGdldCBfa2V5Ym9hcmRBY3RpdmUoKSB7XG4gICAgICAgIHJldHVybiBpc0tleWJvYXJkQWN0aXZlKCk7XG4gICAgICB9XG5cbiAgICAgIC8qKiBAcHJvdGVjdGVkICovXG4gICAgICByZWFkeSgpIHtcbiAgICAgICAgdGhpcy5hZGRFdmVudExpc3RlbmVyKCdmb2N1c2luJywgKGUpID0+IHtcbiAgICAgICAgICBpZiAodGhpcy5fc2hvdWxkU2V0Rm9jdXMoZSkpIHtcbiAgICAgICAgICAgIHRoaXMuX3NldEZvY3VzZWQodHJ1ZSk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICB0aGlzLmFkZEV2ZW50TGlzdGVuZXIoJ2ZvY3Vzb3V0JywgKGUpID0+IHtcbiAgICAgICAgICBpZiAodGhpcy5fc2hvdWxkUmVtb3ZlRm9jdXMoZSkpIHtcbiAgICAgICAgICAgIHRoaXMuX3NldEZvY3VzZWQoZmFsc2UpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgLy8gSW4gc3VwZXIucmVhZHkoKSBvdGhlciAnZm9jdXNpbicgYW5kICdmb2N1c291dCcgbGlzdGVuZXJzIG1pZ2h0IGJlXG4gICAgICAgIC8vIGFkZGVkLCBzbyB3ZSBjYWxsIGl0IGFmdGVyIG91ciBvd24gb25lcyB0byBlbnN1cmUgdGhleSBleGVjdXRlIGZpcnN0LlxuICAgICAgICAvLyBJc3N1ZSB0byB3YXRjaCBvdXQ6IHdoZW4gaW5jb3JyZWN0LCA8dmFhZGluLWNvbWJvLWJveD4gcmVmb2N1c2VzIHRoZVxuICAgICAgICAvLyBpbnB1dCBmaWVsZCBvbiBpT1MgYWZ0ZXIgXCJEb25lXCIgaXMgcHJlc3NlZC5cbiAgICAgICAgc3VwZXIucmVhZHkoKTtcbiAgICAgIH1cblxuICAgICAgLyoqIEBwcm90ZWN0ZWQgKi9cbiAgICAgIGRpc2Nvbm5lY3RlZENhbGxiYWNrKCkge1xuICAgICAgICBzdXBlci5kaXNjb25uZWN0ZWRDYWxsYmFjaygpO1xuXG4gICAgICAgIC8vIEluIG5vbi1DaHJvbWUgYnJvd3NlcnMsIGJsdXIgZG9lcyBub3QgZmlyZSBvbiB0aGUgZWxlbWVudCB3aGVuIGl0IGlzIGRpc2Nvbm5lY3RlZC5cbiAgICAgICAgLy8gcmVwcm9kdWNpYmxlIGluIGA8dmFhZGluLWRhdGUtcGlja2VyPmAgd2hlbiBjbG9zaW5nIG9uIGBDYW5jZWxgIG9yIGBUb2RheWAgY2xpY2suXG4gICAgICAgIGlmICh0aGlzLmhhc0F0dHJpYnV0ZSgnZm9jdXNlZCcpKSB7XG4gICAgICAgICAgdGhpcy5fc2V0Rm9jdXNlZChmYWxzZSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgLyoqXG4gICAgICAgKiBPdmVycmlkZSB0byBjaGFuZ2UgaG93IGZvY3VzZWQgYW5kIGZvY3VzLXJpbmcgYXR0cmlidXRlcyBhcmUgc2V0LlxuICAgICAgICpcbiAgICAgICAqIEBwYXJhbSB7Ym9vbGVhbn0gZm9jdXNlZFxuICAgICAgICogQHByb3RlY3RlZFxuICAgICAgICovXG4gICAgICBfc2V0Rm9jdXNlZChmb2N1c2VkKSB7XG4gICAgICAgIHRoaXMudG9nZ2xlQXR0cmlidXRlKCdmb2N1c2VkJywgZm9jdXNlZCk7XG5cbiAgICAgICAgLy8gRm9jdXMtcmluZyBpcyB0cnVlIHdoZW4gdGhlIGVsZW1lbnQgd2FzIGZvY3VzZWQgZnJvbSB0aGUga2V5Ym9hcmQuXG4gICAgICAgIC8vIEZvY3VzIFJpbmcgW0ExMXljYXN0c106IGh0dHBzOi8veW91dHUuYmUvaWxqMlA1LTVDaklcbiAgICAgICAgdGhpcy50b2dnbGVBdHRyaWJ1dGUoJ2ZvY3VzLXJpbmcnLCBmb2N1c2VkICYmIHRoaXMuX2tleWJvYXJkQWN0aXZlKTtcbiAgICAgIH1cblxuICAgICAgLyoqXG4gICAgICAgKiBPdmVycmlkZSB0byBkZWZpbmUgaWYgdGhlIGZpZWxkIHJlY2VpdmVzIGZvY3VzIGJhc2VkIG9uIHRoZSBldmVudC5cbiAgICAgICAqXG4gICAgICAgKiBAcGFyYW0ge0ZvY3VzRXZlbnR9IF9ldmVudFxuICAgICAgICogQHJldHVybiB7Ym9vbGVhbn1cbiAgICAgICAqIEBwcm90ZWN0ZWRcbiAgICAgICAqL1xuICAgICAgX3Nob3VsZFNldEZvY3VzKF9ldmVudCkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH1cblxuICAgICAgLyoqXG4gICAgICAgKiBPdmVycmlkZSB0byBkZWZpbmUgaWYgdGhlIGZpZWxkIGxvc2VzIGZvY3VzIGJhc2VkIG9uIHRoZSBldmVudC5cbiAgICAgICAqXG4gICAgICAgKiBAcGFyYW0ge0ZvY3VzRXZlbnR9IF9ldmVudFxuICAgICAgICogQHJldHVybiB7Ym9vbGVhbn1cbiAgICAgICAqIEBwcm90ZWN0ZWRcbiAgICAgICAqL1xuICAgICAgX3Nob3VsZFJlbW92ZUZvY3VzKF9ldmVudCkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH1cbiAgICB9LFxuKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/a11y-base/src/focus-mixin.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/a11y-base/src/focus-restoration-controller.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@vaadin/a11y-base/src/focus-restoration-controller.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FocusRestorationController: () => (/* binding */ FocusRestorationController)\n/* harmony export */ });\n/* harmony import */ var _focus_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./focus-utils.js */ \"./node_modules/@vaadin/a11y-base/src/focus-utils.js\");\n/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\n/**\n * A controller for saving a focused node and restoring focus to it later.\n */\nclass FocusRestorationController {\n  /**\n   * Saves the given node as a target for restoring focus to\n   * when `restoreFocus()` is called. If no node is provided,\n   * the currently focused node in the DOM is saved as a target.\n   *\n   * @param {Node | null | undefined} focusNode\n   */\n  saveFocus(focusNode) {\n    this.focusNode = focusNode || (0,_focus_utils_js__WEBPACK_IMPORTED_MODULE_0__.getDeepActiveElement)();\n  }\n\n  /**\n   * Restores focus to the target node that was saved previously with `saveFocus()`.\n   */\n  restoreFocus() {\n    const focusNode = this.focusNode;\n    if (!focusNode) {\n      return;\n    }\n    if ((0,_focus_utils_js__WEBPACK_IMPORTED_MODULE_0__.getDeepActiveElement)() === document.body) {\n      // In Firefox and Safari, focusing the node synchronously\n      // doesn't work as expected when the overlay is closing on outside click.\n      // These browsers force focus to move to the body element and retain it\n      // there until the next event loop iteration.\n      setTimeout(() => focusNode.focus());\n    } else {\n      focusNode.focus();\n    }\n    this.focusNode = null;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9hMTF5LWJhc2Uvc3JjL2ZvY3VzLXJlc3RvcmF0aW9uLWNvbnRyb2xsZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9tZS1hc3Npc3RhbnQtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9hMTF5LWJhc2Uvc3JjL2ZvY3VzLXJlc3RvcmF0aW9uLWNvbnRyb2xsZXIuanM/NzA2YyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgKGMpIDIwMjEgLSAyMDIzIFZhYWRpbiBMdGQuXG4gKiBUaGlzIHByb2dyYW0gaXMgYXZhaWxhYmxlIHVuZGVyIEFwYWNoZSBMaWNlbnNlIFZlcnNpb24gMi4wLCBhdmFpbGFibGUgYXQgaHR0cHM6Ly92YWFkaW4uY29tL2xpY2Vuc2UvXG4gKi9cbmltcG9ydCB7IGdldERlZXBBY3RpdmVFbGVtZW50IH0gZnJvbSAnLi9mb2N1cy11dGlscy5qcyc7XG5cbi8qKlxuICogQSBjb250cm9sbGVyIGZvciBzYXZpbmcgYSBmb2N1c2VkIG5vZGUgYW5kIHJlc3RvcmluZyBmb2N1cyB0byBpdCBsYXRlci5cbiAqL1xuZXhwb3J0IGNsYXNzIEZvY3VzUmVzdG9yYXRpb25Db250cm9sbGVyIHtcbiAgLyoqXG4gICAqIFNhdmVzIHRoZSBnaXZlbiBub2RlIGFzIGEgdGFyZ2V0IGZvciByZXN0b3JpbmcgZm9jdXMgdG9cbiAgICogd2hlbiBgcmVzdG9yZUZvY3VzKClgIGlzIGNhbGxlZC4gSWYgbm8gbm9kZSBpcyBwcm92aWRlZCxcbiAgICogdGhlIGN1cnJlbnRseSBmb2N1c2VkIG5vZGUgaW4gdGhlIERPTSBpcyBzYXZlZCBhcyBhIHRhcmdldC5cbiAgICpcbiAgICogQHBhcmFtIHtOb2RlIHwgbnVsbCB8IHVuZGVmaW5lZH0gZm9jdXNOb2RlXG4gICAqL1xuICBzYXZlRm9jdXMoZm9jdXNOb2RlKSB7XG4gICAgdGhpcy5mb2N1c05vZGUgPSBmb2N1c05vZGUgfHwgZ2V0RGVlcEFjdGl2ZUVsZW1lbnQoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXN0b3JlcyBmb2N1cyB0byB0aGUgdGFyZ2V0IG5vZGUgdGhhdCB3YXMgc2F2ZWQgcHJldmlvdXNseSB3aXRoIGBzYXZlRm9jdXMoKWAuXG4gICAqL1xuICByZXN0b3JlRm9jdXMoKSB7XG4gICAgY29uc3QgZm9jdXNOb2RlID0gdGhpcy5mb2N1c05vZGU7XG4gICAgaWYgKCFmb2N1c05vZGUpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAoZ2V0RGVlcEFjdGl2ZUVsZW1lbnQoKSA9PT0gZG9jdW1lbnQuYm9keSkge1xuICAgICAgLy8gSW4gRmlyZWZveCBhbmQgU2FmYXJpLCBmb2N1c2luZyB0aGUgbm9kZSBzeW5jaHJvbm91c2x5XG4gICAgICAvLyBkb2Vzbid0IHdvcmsgYXMgZXhwZWN0ZWQgd2hlbiB0aGUgb3ZlcmxheSBpcyBjbG9zaW5nIG9uIG91dHNpZGUgY2xpY2suXG4gICAgICAvLyBUaGVzZSBicm93c2VycyBmb3JjZSBmb2N1cyB0byBtb3ZlIHRvIHRoZSBib2R5IGVsZW1lbnQgYW5kIHJldGFpbiBpdFxuICAgICAgLy8gdGhlcmUgdW50aWwgdGhlIG5leHQgZXZlbnQgbG9vcCBpdGVyYXRpb24uXG4gICAgICBzZXRUaW1lb3V0KCgpID0+IGZvY3VzTm9kZS5mb2N1cygpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZm9jdXNOb2RlLmZvY3VzKCk7XG4gICAgfVxuXG4gICAgdGhpcy5mb2N1c05vZGUgPSBudWxsO1xuICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/a11y-base/src/focus-restoration-controller.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/a11y-base/src/focus-trap-controller.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@vaadin/a11y-base/src/focus-trap-controller.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FocusTrapController: () => (/* binding */ FocusTrapController)\n/* harmony export */ });\n/* harmony import */ var _focus_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./focus-utils.js */ \"./node_modules/@vaadin/a11y-base/src/focus-utils.js\");\n/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\nconst instances = [];\n\n/**\n * A controller for trapping focus within a DOM node.\n */\nclass FocusTrapController {\n  /**\n   * @param {HTMLElement} host\n   */\n  constructor(host) {\n    /**\n     * The controller host element.\n     *\n     * @type {HTMLElement}\n     */\n    this.host = host;\n\n    /**\n     * A node for trapping focus in.\n     *\n     * @type {HTMLElement | null}\n     * @private\n     */\n    this.__trapNode = null;\n    this.__onKeyDown = this.__onKeyDown.bind(this);\n  }\n\n  /**\n   * An array of tab-ordered focusable elements inside the trap node.\n   *\n   * @return {HTMLElement[]}\n   * @private\n   */\n  get __focusableElements() {\n    return (0,_focus_utils_js__WEBPACK_IMPORTED_MODULE_0__.getFocusableElements)(this.__trapNode);\n  }\n\n  /**\n   * The index of the element inside the trap node that currently has focus.\n   *\n   * @return {HTMLElement | undefined}\n   * @private\n   */\n  get __focusedElementIndex() {\n    const focusableElements = this.__focusableElements;\n    return focusableElements.indexOf(focusableElements.filter(_focus_utils_js__WEBPACK_IMPORTED_MODULE_0__.isElementFocused).pop());\n  }\n  hostConnected() {\n    document.addEventListener('keydown', this.__onKeyDown);\n  }\n  hostDisconnected() {\n    document.removeEventListener('keydown', this.__onKeyDown);\n  }\n\n  /**\n   * Activates a focus trap for a DOM node that will prevent focus from escaping the node.\n   * The trap can be deactivated with the `.releaseFocus()` method.\n   *\n   * If focus is initially outside the trap, the method will move focus inside,\n   * on the first focusable element of the trap in the tab order.\n   * The first focusable element can be the trap node itself if it is focusable\n   * and comes first in the tab order.\n   *\n   * If there are no focusable elements, the method will throw an exception\n   * and the trap will not be set.\n   *\n   * @param {HTMLElement} trapNode\n   */\n  trapFocus(trapNode) {\n    this.__trapNode = trapNode;\n    if (this.__focusableElements.length === 0) {\n      this.__trapNode = null;\n      throw new Error('The trap node should have at least one focusable descendant or be focusable itself.');\n    }\n    instances.push(this);\n    if (this.__focusedElementIndex === -1) {\n      this.__focusableElements[0].focus();\n    }\n  }\n\n  /**\n   * Deactivates the focus trap set with the `.trapFocus()` method\n   * so that it becomes possible to tab outside the trap node.\n   */\n  releaseFocus() {\n    this.__trapNode = null;\n    instances.pop();\n  }\n\n  /**\n   * A `keydown` event handler that manages tabbing navigation when the trap is enabled.\n   *\n   * - Moves focus to the next focusable element of the trap on `Tab` press.\n   * When no next element to focus, the method moves focus to the first focusable element.\n   * - Moves focus to the prev focusable element of the trap on `Shift+Tab` press.\n   * When no prev element to focus, the method moves focus to the last focusable element.\n   *\n   * @param {KeyboardEvent} event\n   * @private\n   */\n  __onKeyDown(event) {\n    if (!this.__trapNode) {\n      return;\n    }\n\n    // Only handle events for the last instance\n    if (this !== Array.from(instances).pop()) {\n      return;\n    }\n    if (event.key === 'Tab') {\n      event.preventDefault();\n      const backward = event.shiftKey;\n      this.__focusNextElement(backward);\n    }\n  }\n\n  /**\n   * - Moves focus to the next focusable element if `backward === false`.\n   * When no next element to focus, the method moves focus to the first focusable element.\n   * - Moves focus to the prev focusable element if `backward === true`.\n   * When no prev element to focus the method moves focus to the last focusable element.\n   *\n   * If no focusable elements, the method returns immediately.\n   *\n   * @param {boolean} backward\n   * @private\n   */\n  __focusNextElement(backward = false) {\n    const focusableElements = this.__focusableElements;\n    const step = backward ? -1 : 1;\n    const currentIndex = this.__focusedElementIndex;\n    const nextIndex = (focusableElements.length + currentIndex + step) % focusableElements.length;\n    const element = focusableElements[nextIndex];\n    element.focus();\n    if (element.localName === 'input') {\n      element.select();\n    }\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9hMTF5LWJhc2Uvc3JjL2ZvY3VzLXRyYXAtY29udHJvbGxlci5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9tZS1hc3Npc3RhbnQtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9hMTF5LWJhc2Uvc3JjL2ZvY3VzLXRyYXAtY29udHJvbGxlci5qcz84Y2JkIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAoYykgMjAyMSAtIDIwMjMgVmFhZGluIEx0ZC5cbiAqIFRoaXMgcHJvZ3JhbSBpcyBhdmFpbGFibGUgdW5kZXIgQXBhY2hlIExpY2Vuc2UgVmVyc2lvbiAyLjAsIGF2YWlsYWJsZSBhdCBodHRwczovL3ZhYWRpbi5jb20vbGljZW5zZS9cbiAqL1xuaW1wb3J0IHsgZ2V0Rm9jdXNhYmxlRWxlbWVudHMsIGlzRWxlbWVudEZvY3VzZWQgfSBmcm9tICcuL2ZvY3VzLXV0aWxzLmpzJztcblxuY29uc3QgaW5zdGFuY2VzID0gW107XG5cbi8qKlxuICogQSBjb250cm9sbGVyIGZvciB0cmFwcGluZyBmb2N1cyB3aXRoaW4gYSBET00gbm9kZS5cbiAqL1xuZXhwb3J0IGNsYXNzIEZvY3VzVHJhcENvbnRyb2xsZXIge1xuICAvKipcbiAgICogQHBhcmFtIHtIVE1MRWxlbWVudH0gaG9zdFxuICAgKi9cbiAgY29uc3RydWN0b3IoaG9zdCkge1xuICAgIC8qKlxuICAgICAqIFRoZSBjb250cm9sbGVyIGhvc3QgZWxlbWVudC5cbiAgICAgKlxuICAgICAqIEB0eXBlIHtIVE1MRWxlbWVudH1cbiAgICAgKi9cbiAgICB0aGlzLmhvc3QgPSBob3N0O1xuXG4gICAgLyoqXG4gICAgICogQSBub2RlIGZvciB0cmFwcGluZyBmb2N1cyBpbi5cbiAgICAgKlxuICAgICAqIEB0eXBlIHtIVE1MRWxlbWVudCB8IG51bGx9XG4gICAgICogQHByaXZhdGVcbiAgICAgKi9cbiAgICB0aGlzLl9fdHJhcE5vZGUgPSBudWxsO1xuXG4gICAgdGhpcy5fX29uS2V5RG93biA9IHRoaXMuX19vbktleURvd24uYmluZCh0aGlzKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBBbiBhcnJheSBvZiB0YWItb3JkZXJlZCBmb2N1c2FibGUgZWxlbWVudHMgaW5zaWRlIHRoZSB0cmFwIG5vZGUuXG4gICAqXG4gICAqIEByZXR1cm4ge0hUTUxFbGVtZW50W119XG4gICAqIEBwcml2YXRlXG4gICAqL1xuICBnZXQgX19mb2N1c2FibGVFbGVtZW50cygpIHtcbiAgICByZXR1cm4gZ2V0Rm9jdXNhYmxlRWxlbWVudHModGhpcy5fX3RyYXBOb2RlKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBUaGUgaW5kZXggb2YgdGhlIGVsZW1lbnQgaW5zaWRlIHRoZSB0cmFwIG5vZGUgdGhhdCBjdXJyZW50bHkgaGFzIGZvY3VzLlxuICAgKlxuICAgKiBAcmV0dXJuIHtIVE1MRWxlbWVudCB8IHVuZGVmaW5lZH1cbiAgICogQHByaXZhdGVcbiAgICovXG4gIGdldCBfX2ZvY3VzZWRFbGVtZW50SW5kZXgoKSB7XG4gICAgY29uc3QgZm9jdXNhYmxlRWxlbWVudHMgPSB0aGlzLl9fZm9jdXNhYmxlRWxlbWVudHM7XG4gICAgcmV0dXJuIGZvY3VzYWJsZUVsZW1lbnRzLmluZGV4T2YoZm9jdXNhYmxlRWxlbWVudHMuZmlsdGVyKGlzRWxlbWVudEZvY3VzZWQpLnBvcCgpKTtcbiAgfVxuXG4gIGhvc3RDb25uZWN0ZWQoKSB7XG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHRoaXMuX19vbktleURvd24pO1xuICB9XG5cbiAgaG9zdERpc2Nvbm5lY3RlZCgpIHtcbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdrZXlkb3duJywgdGhpcy5fX29uS2V5RG93bik7XG4gIH1cblxuICAvKipcbiAgICogQWN0aXZhdGVzIGEgZm9jdXMgdHJhcCBmb3IgYSBET00gbm9kZSB0aGF0IHdpbGwgcHJldmVudCBmb2N1cyBmcm9tIGVzY2FwaW5nIHRoZSBub2RlLlxuICAgKiBUaGUgdHJhcCBjYW4gYmUgZGVhY3RpdmF0ZWQgd2l0aCB0aGUgYC5yZWxlYXNlRm9jdXMoKWAgbWV0aG9kLlxuICAgKlxuICAgKiBJZiBmb2N1cyBpcyBpbml0aWFsbHkgb3V0c2lkZSB0aGUgdHJhcCwgdGhlIG1ldGhvZCB3aWxsIG1vdmUgZm9jdXMgaW5zaWRlLFxuICAgKiBvbiB0aGUgZmlyc3QgZm9jdXNhYmxlIGVsZW1lbnQgb2YgdGhlIHRyYXAgaW4gdGhlIHRhYiBvcmRlci5cbiAgICogVGhlIGZpcnN0IGZvY3VzYWJsZSBlbGVtZW50IGNhbiBiZSB0aGUgdHJhcCBub2RlIGl0c2VsZiBpZiBpdCBpcyBmb2N1c2FibGVcbiAgICogYW5kIGNvbWVzIGZpcnN0IGluIHRoZSB0YWIgb3JkZXIuXG4gICAqXG4gICAqIElmIHRoZXJlIGFyZSBubyBmb2N1c2FibGUgZWxlbWVudHMsIHRoZSBtZXRob2Qgd2lsbCB0aHJvdyBhbiBleGNlcHRpb25cbiAgICogYW5kIHRoZSB0cmFwIHdpbGwgbm90IGJlIHNldC5cbiAgICpcbiAgICogQHBhcmFtIHtIVE1MRWxlbWVudH0gdHJhcE5vZGVcbiAgICovXG4gIHRyYXBGb2N1cyh0cmFwTm9kZSkge1xuICAgIHRoaXMuX190cmFwTm9kZSA9IHRyYXBOb2RlO1xuXG4gICAgaWYgKHRoaXMuX19mb2N1c2FibGVFbGVtZW50cy5sZW5ndGggPT09IDApIHtcbiAgICAgIHRoaXMuX190cmFwTm9kZSA9IG51bGw7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1RoZSB0cmFwIG5vZGUgc2hvdWxkIGhhdmUgYXQgbGVhc3Qgb25lIGZvY3VzYWJsZSBkZXNjZW5kYW50IG9yIGJlIGZvY3VzYWJsZSBpdHNlbGYuJyk7XG4gICAgfVxuXG4gICAgaW5zdGFuY2VzLnB1c2godGhpcyk7XG5cbiAgICBpZiAodGhpcy5fX2ZvY3VzZWRFbGVtZW50SW5kZXggPT09IC0xKSB7XG4gICAgICB0aGlzLl9fZm9jdXNhYmxlRWxlbWVudHNbMF0uZm9jdXMoKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogRGVhY3RpdmF0ZXMgdGhlIGZvY3VzIHRyYXAgc2V0IHdpdGggdGhlIGAudHJhcEZvY3VzKClgIG1ldGhvZFxuICAgKiBzbyB0aGF0IGl0IGJlY29tZXMgcG9zc2libGUgdG8gdGFiIG91dHNpZGUgdGhlIHRyYXAgbm9kZS5cbiAgICovXG4gIHJlbGVhc2VGb2N1cygpIHtcbiAgICB0aGlzLl9fdHJhcE5vZGUgPSBudWxsO1xuXG4gICAgaW5zdGFuY2VzLnBvcCgpO1xuICB9XG5cbiAgLyoqXG4gICAqIEEgYGtleWRvd25gIGV2ZW50IGhhbmRsZXIgdGhhdCBtYW5hZ2VzIHRhYmJpbmcgbmF2aWdhdGlvbiB3aGVuIHRoZSB0cmFwIGlzIGVuYWJsZWQuXG4gICAqXG4gICAqIC0gTW92ZXMgZm9jdXMgdG8gdGhlIG5leHQgZm9jdXNhYmxlIGVsZW1lbnQgb2YgdGhlIHRyYXAgb24gYFRhYmAgcHJlc3MuXG4gICAqIFdoZW4gbm8gbmV4dCBlbGVtZW50IHRvIGZvY3VzLCB0aGUgbWV0aG9kIG1vdmVzIGZvY3VzIHRvIHRoZSBmaXJzdCBmb2N1c2FibGUgZWxlbWVudC5cbiAgICogLSBNb3ZlcyBmb2N1cyB0byB0aGUgcHJldiBmb2N1c2FibGUgZWxlbWVudCBvZiB0aGUgdHJhcCBvbiBgU2hpZnQrVGFiYCBwcmVzcy5cbiAgICogV2hlbiBubyBwcmV2IGVsZW1lbnQgdG8gZm9jdXMsIHRoZSBtZXRob2QgbW92ZXMgZm9jdXMgdG8gdGhlIGxhc3QgZm9jdXNhYmxlIGVsZW1lbnQuXG4gICAqXG4gICAqIEBwYXJhbSB7S2V5Ym9hcmRFdmVudH0gZXZlbnRcbiAgICogQHByaXZhdGVcbiAgICovXG4gIF9fb25LZXlEb3duKGV2ZW50KSB7XG4gICAgaWYgKCF0aGlzLl9fdHJhcE5vZGUpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICAvLyBPbmx5IGhhbmRsZSBldmVudHMgZm9yIHRoZSBsYXN0IGluc3RhbmNlXG4gICAgaWYgKHRoaXMgIT09IEFycmF5LmZyb20oaW5zdGFuY2VzKS5wb3AoKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmIChldmVudC5rZXkgPT09ICdUYWInKSB7XG4gICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgICBjb25zdCBiYWNrd2FyZCA9IGV2ZW50LnNoaWZ0S2V5O1xuICAgICAgdGhpcy5fX2ZvY3VzTmV4dEVsZW1lbnQoYmFja3dhcmQpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiAtIE1vdmVzIGZvY3VzIHRvIHRoZSBuZXh0IGZvY3VzYWJsZSBlbGVtZW50IGlmIGBiYWNrd2FyZCA9PT0gZmFsc2VgLlxuICAgKiBXaGVuIG5vIG5leHQgZWxlbWVudCB0byBmb2N1cywgdGhlIG1ldGhvZCBtb3ZlcyBmb2N1cyB0byB0aGUgZmlyc3QgZm9jdXNhYmxlIGVsZW1lbnQuXG4gICAqIC0gTW92ZXMgZm9jdXMgdG8gdGhlIHByZXYgZm9jdXNhYmxlIGVsZW1lbnQgaWYgYGJhY2t3YXJkID09PSB0cnVlYC5cbiAgICogV2hlbiBubyBwcmV2IGVsZW1lbnQgdG8gZm9jdXMgdGhlIG1ldGhvZCBtb3ZlcyBmb2N1cyB0byB0aGUgbGFzdCBmb2N1c2FibGUgZWxlbWVudC5cbiAgICpcbiAgICogSWYgbm8gZm9jdXNhYmxlIGVsZW1lbnRzLCB0aGUgbWV0aG9kIHJldHVybnMgaW1tZWRpYXRlbHkuXG4gICAqXG4gICAqIEBwYXJhbSB7Ym9vbGVhbn0gYmFja3dhcmRcbiAgICogQHByaXZhdGVcbiAgICovXG4gIF9fZm9jdXNOZXh0RWxlbWVudChiYWNrd2FyZCA9IGZhbHNlKSB7XG4gICAgY29uc3QgZm9jdXNhYmxlRWxlbWVudHMgPSB0aGlzLl9fZm9jdXNhYmxlRWxlbWVudHM7XG4gICAgY29uc3Qgc3RlcCA9IGJhY2t3YXJkID8gLTEgOiAxO1xuICAgIGNvbnN0IGN1cnJlbnRJbmRleCA9IHRoaXMuX19mb2N1c2VkRWxlbWVudEluZGV4O1xuICAgIGNvbnN0IG5leHRJbmRleCA9IChmb2N1c2FibGVFbGVtZW50cy5sZW5ndGggKyBjdXJyZW50SW5kZXggKyBzdGVwKSAlIGZvY3VzYWJsZUVsZW1lbnRzLmxlbmd0aDtcbiAgICBjb25zdCBlbGVtZW50ID0gZm9jdXNhYmxlRWxlbWVudHNbbmV4dEluZGV4XTtcbiAgICBlbGVtZW50LmZvY3VzKCk7XG4gICAgaWYgKGVsZW1lbnQubG9jYWxOYW1lID09PSAnaW5wdXQnKSB7XG4gICAgICBlbGVtZW50LnNlbGVjdCgpO1xuICAgIH1cbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/a11y-base/src/focus-trap-controller.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/a11y-base/src/focus-utils.js":
/*!***********************************************************!*\
  !*** ./node_modules/@vaadin/a11y-base/src/focus-utils.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDeepActiveElement: () => (/* binding */ getDeepActiveElement),\n/* harmony export */   getFocusableElements: () => (/* binding */ getFocusableElements),\n/* harmony export */   isElementFocusable: () => (/* binding */ isElementFocusable),\n/* harmony export */   isElementFocused: () => (/* binding */ isElementFocused),\n/* harmony export */   isElementHidden: () => (/* binding */ isElementHidden),\n/* harmony export */   isKeyboardActive: () => (/* binding */ isKeyboardActive)\n/* harmony export */ });\n/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n// We consider the keyboard to be active if the window has received a keydown\n// event since the last mousedown event.\nlet keyboardActive = false;\n\n// Listen for top-level keydown and mousedown events.\n// Use capture phase so we detect events even if they're handled.\nwindow.addEventListener('keydown', () => {\n  keyboardActive = true;\n}, {\n  capture: true\n});\nwindow.addEventListener('mousedown', () => {\n  keyboardActive = false;\n}, {\n  capture: true\n});\n\n/**\n * Returns the actually focused element by traversing shadow\n * trees recursively to ensure it's the leaf element.\n *\n * @return {Element}\n */\nfunction getDeepActiveElement() {\n  let host = document.activeElement || document.body;\n  while (host.shadowRoot && host.shadowRoot.activeElement) {\n    host = host.shadowRoot.activeElement;\n  }\n  return host;\n}\n\n/**\n * Returns true if the window has received a keydown\n * event since the last mousedown event.\n *\n * @return {boolean}\n */\nfunction isKeyboardActive() {\n  return keyboardActive;\n}\n\n/**\n * Returns true if the element is hidden directly with `display: none` or `visibility: hidden`,\n * false otherwise.\n *\n * The method doesn't traverse the element's ancestors, it only checks for the CSS properties\n * set directly to or inherited by the element.\n *\n * @param {HTMLElement} element\n * @return {boolean}\n */\nfunction isElementHiddenDirectly(element) {\n  // Check inline style first to save a re-flow.\n  const style = element.style;\n  if (style.visibility === 'hidden' || style.display === 'none') {\n    return true;\n  }\n  const computedStyle = window.getComputedStyle(element);\n  if (computedStyle.visibility === 'hidden' || computedStyle.display === 'none') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns if element `a` has lower tab order compared to element `b`\n * (both elements are assumed to be focusable and tabbable).\n * Elements with tabindex = 0 have lower tab order compared to elements\n * with tabindex > 0.\n * If both have same tabindex, it returns false.\n *\n * @param {HTMLElement} a\n * @param {HTMLElement} b\n * @return {boolean}\n */\nfunction hasLowerTabOrder(a, b) {\n  // Normalize tabIndexes\n  // e.g. in Firefox `<div contenteditable>` has `tabIndex = -1`\n  const ati = Math.max(a.tabIndex, 0);\n  const bti = Math.max(b.tabIndex, 0);\n  return ati === 0 || bti === 0 ? bti > ati : ati > bti;\n}\n\n/**\n * Merge sort iterator, merges the two arrays into one, sorted by tabindex.\n *\n * @param {HTMLElement[]} left\n * @param {HTMLElement[]} right\n * @return {HTMLElement[]}\n */\nfunction mergeSortByTabIndex(left, right) {\n  const result = [];\n  while (left.length > 0 && right.length > 0) {\n    if (hasLowerTabOrder(left[0], right[0])) {\n      result.push(right.shift());\n    } else {\n      result.push(left.shift());\n    }\n  }\n  return result.concat(left, right);\n}\n\n/**\n * Sorts an array of elements by tabindex. Returns a new array.\n *\n * @param {HTMLElement[]} elements\n * @return {HTMLElement[]}\n */\nfunction sortElementsByTabIndex(elements) {\n  // Implement a merge sort as Array.prototype.sort does a non-stable sort\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\n  const len = elements.length;\n  if (len < 2) {\n    return elements;\n  }\n  const pivot = Math.ceil(len / 2);\n  const left = sortElementsByTabIndex(elements.slice(0, pivot));\n  const right = sortElementsByTabIndex(elements.slice(pivot));\n  return mergeSortByTabIndex(left, right);\n}\n\n/**\n * Returns true if the element is hidden, false otherwise.\n *\n * An element is treated as hidden when any of the following conditions are met:\n * - the element itself or one of its ancestors has `display: none`.\n * - the element has or inherits `visibility: hidden`.\n *\n * @param {HTMLElement} element\n * @return {boolean}\n */\nfunction isElementHidden(element) {\n  // `offsetParent` is `null` when the element itself\n  // or one of its ancestors is hidden with `display: none`.\n  // https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent\n  // However `offsetParent` is also null when the element is using fixed\n  // positioning, so additionally check if the element takes up layout space.\n  if (element.offsetParent === null && element.clientWidth === 0 && element.clientHeight === 0) {\n    return true;\n  }\n  return isElementHiddenDirectly(element);\n}\n\n/**\n * Returns true if the element is focusable, otherwise false.\n *\n * The list of focusable elements is taken from http://stackoverflow.com/a/1600194/4228703.\n * However, there isn't a definite list, it's up to the browser.\n * The only standard we have is DOM Level 2 HTML https://www.w3.org/TR/DOM-Level-2-HTML/html.html,\n * according to which the only elements that have a `focus()` method are:\n * - HTMLInputElement\n * - HTMLSelectElement\n * - HTMLTextAreaElement\n * - HTMLAnchorElement\n *\n * This notably omits HTMLButtonElement and HTMLAreaElement.\n * Referring to these tests with tabbables in different browsers\n * http://allyjs.io/data-tables/focusable.html\n *\n * @param {HTMLElement} element\n * @return {boolean}\n */\nfunction isElementFocusable(element) {\n  // The element cannot be focused if its `tabindex` attribute is set to `-1`.\n  if (element.matches('[tabindex=\"-1\"]')) {\n    return false;\n  }\n\n  // Elements that cannot be focused if they have a `disabled` attribute.\n  if (element.matches('input, select, textarea, button, object')) {\n    return element.matches(':not([disabled])');\n  }\n\n  // Elements that can be focused even if they have a `disabled` attribute.\n  return element.matches('a[href], area[href], iframe, [tabindex], [contentEditable]');\n}\n\n/**\n * Returns true if the element is focused, false otherwise.\n *\n * @param {HTMLElement} element\n * @return {boolean}\n */\nfunction isElementFocused(element) {\n  return element.getRootNode().activeElement === element;\n}\n\n/**\n * Returns the normalized element tabindex. If not focusable, returns -1.\n * It checks for the attribute \"tabindex\" instead of the element property\n * `tabIndex` since browsers assign different values to it.\n * e.g. in Firefox `<div contenteditable>` has `tabIndex = -1`\n *\n * @param {HTMLElement} element\n * @return {number}\n */\nfunction normalizeTabIndex(element) {\n  if (!isElementFocusable(element)) {\n    return -1;\n  }\n  const tabIndex = element.getAttribute('tabindex') || 0;\n  return Number(tabIndex);\n}\n\n/**\n * Searches for nodes that are tabbable and adds them to the `result` array.\n * Returns if the `result` array needs to be sorted by tabindex.\n *\n * @param {Node} node The starting point for the search; added to `result` if tabbable.\n * @param {HTMLElement[]} result\n * @return {boolean}\n * @private\n */\nfunction collectFocusableNodes(node, result) {\n  if (node.nodeType !== Node.ELEMENT_NODE || isElementHiddenDirectly(node)) {\n    // Don't traverse children if the node is not an HTML element or not visible.\n    return false;\n  }\n  const element = /** @type {HTMLElement} */node;\n  const tabIndex = normalizeTabIndex(element);\n  let needsSort = tabIndex > 0;\n  if (tabIndex >= 0) {\n    result.push(element);\n  }\n  let children = [];\n  if (element.localName === 'slot') {\n    children = element.assignedNodes({\n      flatten: true\n    });\n  } else {\n    // Use shadow root if possible, will check for distributed nodes.\n    children = (element.shadowRoot || element).children;\n  }\n  [...children].forEach(child => {\n    // Ensure method is always invoked to collect focusable children.\n    needsSort = collectFocusableNodes(child, result) || needsSort;\n  });\n  return needsSort;\n}\n\n/**\n * Returns a tab-ordered array of focusable elements for a root element.\n * The resulting array will include the root element if it is focusable.\n *\n * The method traverses nodes in shadow DOM trees too if any.\n *\n * @param {HTMLElement} element\n * @return {HTMLElement[]}\n */\nfunction getFocusableElements(element) {\n  const focusableElements = [];\n  const needsSortByTabIndex = collectFocusableNodes(element, focusableElements);\n  // If there is at least one element with tabindex > 0,\n  // we need to sort the final array by tabindex.\n  if (needsSortByTabIndex) {\n    return sortElementsByTabIndex(focusableElements);\n  }\n  return focusableElements;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/a11y-base/src/focus-utils.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/a11y-base/src/keyboard-mixin.js":
/*!**************************************************************!*\
  !*** ./node_modules/@vaadin/a11y-base/src/keyboard-mixin.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   KeyboardMixin: () => (/* binding */ KeyboardMixin)\n/* harmony export */ });\n/* harmony import */ var _polymer_polymer_lib_utils_mixin_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polymer/polymer/lib/utils/mixin.js */ \"./node_modules/@polymer/polymer/lib/utils/mixin.js\");\n/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\n/**\n * A mixin that manages keyboard handling.\n * The mixin subscribes to the keyboard events while an actual implementation\n * for the event handlers is left to the client (a component or another mixin).\n *\n * @polymerMixin\n */\nconst KeyboardMixin = (0,_polymer_polymer_lib_utils_mixin_js__WEBPACK_IMPORTED_MODULE_0__.dedupingMixin)(superclass => class KeyboardMixinClass extends superclass {\n  /** @protected */\n  ready() {\n    super.ready();\n    this.addEventListener('keydown', event => {\n      this._onKeyDown(event);\n    });\n    this.addEventListener('keyup', event => {\n      this._onKeyUp(event);\n    });\n  }\n\n  /**\n   * A handler for the `keydown` event. By default, it calls\n   * separate methods for handling \"Enter\" and \"Escape\" keys.\n   * Override the method to implement your own behavior.\n   *\n   * @param {KeyboardEvent} event\n   * @protected\n   */\n  _onKeyDown(event) {\n    switch (event.key) {\n      case 'Enter':\n        this._onEnter(event);\n        break;\n      case 'Escape':\n        this._onEscape(event);\n        break;\n      default:\n        break;\n    }\n  }\n\n  /**\n   * A handler for the `keyup` event. By default, it does nothing.\n   * Override the method to implement your own behavior.\n   *\n   * @param {KeyboardEvent} _event\n   * @protected\n   */\n  _onKeyUp(_event) {\n    // To be implemented.\n  }\n\n  /**\n   * A handler for the \"Enter\" key. By default, it does nothing.\n   * Override the method to implement your own behavior.\n   *\n   * @param {KeyboardEvent} _event\n   * @protected\n   */\n  _onEnter(_event) {\n    // To be implemented.\n  }\n\n  /**\n   * A handler for the \"Escape\" key. By default, it does nothing.\n   * Override the method to implement your own behavior.\n   *\n   * @param {KeyboardEvent} _event\n   * @protected\n   */\n  _onEscape(_event) {\n    // To be implemented.\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9hMTF5LWJhc2Uvc3JjL2tleWJvYXJkLW1peGluLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBOztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBOztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob21lLWFzc2lzdGFudC1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AdmFhZGluL2ExMXktYmFzZS9zcmMva2V5Ym9hcmQtbWl4aW4uanM/N2I3YSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgKGMpIDIwMjEgLSAyMDIzIFZhYWRpbiBMdGQuXG4gKiBUaGlzIHByb2dyYW0gaXMgYXZhaWxhYmxlIHVuZGVyIEFwYWNoZSBMaWNlbnNlIFZlcnNpb24gMi4wLCBhdmFpbGFibGUgYXQgaHR0cHM6Ly92YWFkaW4uY29tL2xpY2Vuc2UvXG4gKi9cbmltcG9ydCB7IGRlZHVwaW5nTWl4aW4gfSBmcm9tICdAcG9seW1lci9wb2x5bWVyL2xpYi91dGlscy9taXhpbi5qcyc7XG5cbi8qKlxuICogQSBtaXhpbiB0aGF0IG1hbmFnZXMga2V5Ym9hcmQgaGFuZGxpbmcuXG4gKiBUaGUgbWl4aW4gc3Vic2NyaWJlcyB0byB0aGUga2V5Ym9hcmQgZXZlbnRzIHdoaWxlIGFuIGFjdHVhbCBpbXBsZW1lbnRhdGlvblxuICogZm9yIHRoZSBldmVudCBoYW5kbGVycyBpcyBsZWZ0IHRvIHRoZSBjbGllbnQgKGEgY29tcG9uZW50IG9yIGFub3RoZXIgbWl4aW4pLlxuICpcbiAqIEBwb2x5bWVyTWl4aW5cbiAqL1xuZXhwb3J0IGNvbnN0IEtleWJvYXJkTWl4aW4gPSBkZWR1cGluZ01peGluKFxuICAoc3VwZXJjbGFzcykgPT5cbiAgICBjbGFzcyBLZXlib2FyZE1peGluQ2xhc3MgZXh0ZW5kcyBzdXBlcmNsYXNzIHtcbiAgICAgIC8qKiBAcHJvdGVjdGVkICovXG4gICAgICByZWFkeSgpIHtcbiAgICAgICAgc3VwZXIucmVhZHkoKTtcblxuICAgICAgICB0aGlzLmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCAoZXZlbnQpID0+IHtcbiAgICAgICAgICB0aGlzLl9vbktleURvd24oZXZlbnQpO1xuICAgICAgICB9KTtcblxuICAgICAgICB0aGlzLmFkZEV2ZW50TGlzdGVuZXIoJ2tleXVwJywgKGV2ZW50KSA9PiB7XG4gICAgICAgICAgdGhpcy5fb25LZXlVcChldmVudCk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICAvKipcbiAgICAgICAqIEEgaGFuZGxlciBmb3IgdGhlIGBrZXlkb3duYCBldmVudC4gQnkgZGVmYXVsdCwgaXQgY2FsbHNcbiAgICAgICAqIHNlcGFyYXRlIG1ldGhvZHMgZm9yIGhhbmRsaW5nIFwiRW50ZXJcIiBhbmQgXCJFc2NhcGVcIiBrZXlzLlxuICAgICAgICogT3ZlcnJpZGUgdGhlIG1ldGhvZCB0byBpbXBsZW1lbnQgeW91ciBvd24gYmVoYXZpb3IuXG4gICAgICAgKlxuICAgICAgICogQHBhcmFtIHtLZXlib2FyZEV2ZW50fSBldmVudFxuICAgICAgICogQHByb3RlY3RlZFxuICAgICAgICovXG4gICAgICBfb25LZXlEb3duKGV2ZW50KSB7XG4gICAgICAgIHN3aXRjaCAoZXZlbnQua2V5KSB7XG4gICAgICAgICAgY2FzZSAnRW50ZXInOlxuICAgICAgICAgICAgdGhpcy5fb25FbnRlcihldmVudCk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlICdFc2NhcGUnOlxuICAgICAgICAgICAgdGhpcy5fb25Fc2NhcGUoZXZlbnQpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC8qKlxuICAgICAgICogQSBoYW5kbGVyIGZvciB0aGUgYGtleXVwYCBldmVudC4gQnkgZGVmYXVsdCwgaXQgZG9lcyBub3RoaW5nLlxuICAgICAgICogT3ZlcnJpZGUgdGhlIG1ldGhvZCB0byBpbXBsZW1lbnQgeW91ciBvd24gYmVoYXZpb3IuXG4gICAgICAgKlxuICAgICAgICogQHBhcmFtIHtLZXlib2FyZEV2ZW50fSBfZXZlbnRcbiAgICAgICAqIEBwcm90ZWN0ZWRcbiAgICAgICAqL1xuICAgICAgX29uS2V5VXAoX2V2ZW50KSB7XG4gICAgICAgIC8vIFRvIGJlIGltcGxlbWVudGVkLlxuICAgICAgfVxuXG4gICAgICAvKipcbiAgICAgICAqIEEgaGFuZGxlciBmb3IgdGhlIFwiRW50ZXJcIiBrZXkuIEJ5IGRlZmF1bHQsIGl0IGRvZXMgbm90aGluZy5cbiAgICAgICAqIE92ZXJyaWRlIHRoZSBtZXRob2QgdG8gaW1wbGVtZW50IHlvdXIgb3duIGJlaGF2aW9yLlxuICAgICAgICpcbiAgICAgICAqIEBwYXJhbSB7S2V5Ym9hcmRFdmVudH0gX2V2ZW50XG4gICAgICAgKiBAcHJvdGVjdGVkXG4gICAgICAgKi9cbiAgICAgIF9vbkVudGVyKF9ldmVudCkge1xuICAgICAgICAvLyBUbyBiZSBpbXBsZW1lbnRlZC5cbiAgICAgIH1cblxuICAgICAgLyoqXG4gICAgICAgKiBBIGhhbmRsZXIgZm9yIHRoZSBcIkVzY2FwZVwiIGtleS4gQnkgZGVmYXVsdCwgaXQgZG9lcyBub3RoaW5nLlxuICAgICAgICogT3ZlcnJpZGUgdGhlIG1ldGhvZCB0byBpbXBsZW1lbnQgeW91ciBvd24gYmVoYXZpb3IuXG4gICAgICAgKlxuICAgICAgICogQHBhcmFtIHtLZXlib2FyZEV2ZW50fSBfZXZlbnRcbiAgICAgICAqIEBwcm90ZWN0ZWRcbiAgICAgICAqL1xuICAgICAgX29uRXNjYXBlKF9ldmVudCkge1xuICAgICAgICAvLyBUbyBiZSBpbXBsZW1lbnRlZC5cbiAgICAgIH1cbiAgICB9LFxuKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/a11y-base/src/keyboard-mixin.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/combo-box/lit.js":
/*!***********************************************!*\
  !*** ./node_modules/@vaadin/combo-box/lit.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ComboBoxRendererDirective: () => (/* reexport safe */ _src_lit_renderer_directives_js__WEBPACK_IMPORTED_MODULE_0__.ComboBoxRendererDirective),
/* harmony export */   comboBoxRenderer: () => (/* reexport safe */ _src_lit_renderer_directives_js__WEBPACK_IMPORTED_MODULE_0__.comboBoxRenderer)
/* harmony export */ });
/* harmony import */ var _src_lit_renderer_directives_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/lit/renderer-directives.js */ "./node_modules/@vaadin/combo-box/src/lit/renderer-directives.js");


/***/ }),

/***/ "./node_modules/@vaadin/combo-box/src/lit/renderer-directives.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@vaadin/combo-box/src/lit/renderer-directives.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ComboBoxRendererDirective: () => (/* binding */ ComboBoxRendererDirective),\n/* harmony export */   comboBoxRenderer: () => (/* binding */ comboBoxRenderer)\n/* harmony export */ });\n/* harmony import */ var lit_directive_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit/directive.js */ \"./node_modules/lit/directive.js\");\n/* harmony import */ var _vaadin_lit_renderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @vaadin/lit-renderer */ \"./node_modules/@vaadin/lit-renderer/src/lit-renderer.js\");\n/**\n * @license\n * Copyright (c) 2017 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\nclass ComboBoxRendererDirective extends _vaadin_lit_renderer__WEBPACK_IMPORTED_MODULE_1__.LitRendererDirective {\n  /**\n   * Adds the renderer callback to the combo-box.\n   */\n  addRenderer() {\n    this.element.renderer = (root, comboBox, model) => {\n      this.renderRenderer(root, model.item, model, comboBox);\n    };\n  }\n\n  /**\n   * Runs the renderer callback on the combo-box.\n   */\n  runRenderer() {\n    this.element.requestContentUpdate();\n  }\n\n  /**\n   * Removes the renderer callback from the combo-box.\n   */\n  removeRenderer() {\n    this.element.renderer = null;\n  }\n}\n\n/**\n * A Lit directive for rendering the content of the `<vaadin-combo-box-item>` elements.\n *\n * The directive accepts a renderer callback returning a Lit template and assigns it to the combo-box\n * via the `renderer` property. The renderer is called for each combo-box item when assigned\n * and whenever a single dependency or an array of dependencies changes.\n * It is not guaranteed that the renderer will be called immediately (synchronously) in both cases.\n *\n * Dependencies can be a single value or an array of values.\n * Values are checked against previous values with strict equality (`===`),\n * so the check won't detect nested property changes inside objects or arrays.\n * When dependencies are provided as an array, each item is checked against the previous value\n * at the same index with strict equality. Nested arrays are also checked only by strict\n * equality.\n *\n * Example of usage:\n * ```js\n * `<vaadin-combo-box\n *   ${comboBoxRenderer((item, model, comboBox) => html`...`)}\n * ></vaadin-combo-box>`\n * ```\n *\n * @param renderer the renderer callback that returns a Lit template.\n * @param dependencies a single dependency or an array of dependencies\n *                     which trigger a re-render when changed.\n */\nconst comboBoxRenderer = (0,lit_directive_js__WEBPACK_IMPORTED_MODULE_0__.directive)(ComboBoxRendererDirective);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21iby1ib3gvc3JjL2xpdC9yZW5kZXJlci1kaXJlY3RpdmVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9tZS1hc3Npc3RhbnQtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21iby1ib3gvc3JjL2xpdC9yZW5kZXJlci1kaXJlY3RpdmVzLmpzPzZjMmIiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IChjKSAyMDE3IC0gMjAyMyBWYWFkaW4gTHRkLlxuICogVGhpcyBwcm9ncmFtIGlzIGF2YWlsYWJsZSB1bmRlciBBcGFjaGUgTGljZW5zZSBWZXJzaW9uIDIuMCwgYXZhaWxhYmxlIGF0IGh0dHBzOi8vdmFhZGluLmNvbS9saWNlbnNlL1xuICovXG5pbXBvcnQgeyBkaXJlY3RpdmUgfSBmcm9tICdsaXQvZGlyZWN0aXZlLmpzJztcbmltcG9ydCB7IExpdFJlbmRlcmVyRGlyZWN0aXZlIH0gZnJvbSAnQHZhYWRpbi9saXQtcmVuZGVyZXInO1xuXG5leHBvcnQgY2xhc3MgQ29tYm9Cb3hSZW5kZXJlckRpcmVjdGl2ZSBleHRlbmRzIExpdFJlbmRlcmVyRGlyZWN0aXZlIHtcbiAgLyoqXG4gICAqIEFkZHMgdGhlIHJlbmRlcmVyIGNhbGxiYWNrIHRvIHRoZSBjb21iby1ib3guXG4gICAqL1xuICBhZGRSZW5kZXJlcigpIHtcbiAgICB0aGlzLmVsZW1lbnQucmVuZGVyZXIgPSAocm9vdCwgY29tYm9Cb3gsIG1vZGVsKSA9PiB7XG4gICAgICB0aGlzLnJlbmRlclJlbmRlcmVyKHJvb3QsIG1vZGVsLml0ZW0sIG1vZGVsLCBjb21ib0JveCk7XG4gICAgfTtcbiAgfVxuXG4gIC8qKlxuICAgKiBSdW5zIHRoZSByZW5kZXJlciBjYWxsYmFjayBvbiB0aGUgY29tYm8tYm94LlxuICAgKi9cbiAgcnVuUmVuZGVyZXIoKSB7XG4gICAgdGhpcy5lbGVtZW50LnJlcXVlc3RDb250ZW50VXBkYXRlKCk7XG4gIH1cblxuICAvKipcbiAgICogUmVtb3ZlcyB0aGUgcmVuZGVyZXIgY2FsbGJhY2sgZnJvbSB0aGUgY29tYm8tYm94LlxuICAgKi9cbiAgcmVtb3ZlUmVuZGVyZXIoKSB7XG4gICAgdGhpcy5lbGVtZW50LnJlbmRlcmVyID0gbnVsbDtcbiAgfVxufVxuXG4vKipcbiAqIEEgTGl0IGRpcmVjdGl2ZSBmb3IgcmVuZGVyaW5nIHRoZSBjb250ZW50IG9mIHRoZSBgPHZhYWRpbi1jb21iby1ib3gtaXRlbT5gIGVsZW1lbnRzLlxuICpcbiAqIFRoZSBkaXJlY3RpdmUgYWNjZXB0cyBhIHJlbmRlcmVyIGNhbGxiYWNrIHJldHVybmluZyBhIExpdCB0ZW1wbGF0ZSBhbmQgYXNzaWducyBpdCB0byB0aGUgY29tYm8tYm94XG4gKiB2aWEgdGhlIGByZW5kZXJlcmAgcHJvcGVydHkuIFRoZSByZW5kZXJlciBpcyBjYWxsZWQgZm9yIGVhY2ggY29tYm8tYm94IGl0ZW0gd2hlbiBhc3NpZ25lZFxuICogYW5kIHdoZW5ldmVyIGEgc2luZ2xlIGRlcGVuZGVuY3kgb3IgYW4gYXJyYXkgb2YgZGVwZW5kZW5jaWVzIGNoYW5nZXMuXG4gKiBJdCBpcyBub3QgZ3VhcmFudGVlZCB0aGF0IHRoZSByZW5kZXJlciB3aWxsIGJlIGNhbGxlZCBpbW1lZGlhdGVseSAoc3luY2hyb25vdXNseSkgaW4gYm90aCBjYXNlcy5cbiAqXG4gKiBEZXBlbmRlbmNpZXMgY2FuIGJlIGEgc2luZ2xlIHZhbHVlIG9yIGFuIGFycmF5IG9mIHZhbHVlcy5cbiAqIFZhbHVlcyBhcmUgY2hlY2tlZCBhZ2FpbnN0IHByZXZpb3VzIHZhbHVlcyB3aXRoIHN0cmljdCBlcXVhbGl0eSAoYD09PWApLFxuICogc28gdGhlIGNoZWNrIHdvbid0IGRldGVjdCBuZXN0ZWQgcHJvcGVydHkgY2hhbmdlcyBpbnNpZGUgb2JqZWN0cyBvciBhcnJheXMuXG4gKiBXaGVuIGRlcGVuZGVuY2llcyBhcmUgcHJvdmlkZWQgYXMgYW4gYXJyYXksIGVhY2ggaXRlbSBpcyBjaGVja2VkIGFnYWluc3QgdGhlIHByZXZpb3VzIHZhbHVlXG4gKiBhdCB0aGUgc2FtZSBpbmRleCB3aXRoIHN0cmljdCBlcXVhbGl0eS4gTmVzdGVkIGFycmF5cyBhcmUgYWxzbyBjaGVja2VkIG9ubHkgYnkgc3RyaWN0XG4gKiBlcXVhbGl0eS5cbiAqXG4gKiBFeGFtcGxlIG9mIHVzYWdlOlxuICogYGBganNcbiAqIGA8dmFhZGluLWNvbWJvLWJveFxuICogICAke2NvbWJvQm94UmVuZGVyZXIoKGl0ZW0sIG1vZGVsLCBjb21ib0JveCkgPT4gaHRtbGAuLi5gKX1cbiAqID48L3ZhYWRpbi1jb21iby1ib3g+YFxuICogYGBgXG4gKlxuICogQHBhcmFtIHJlbmRlcmVyIHRoZSByZW5kZXJlciBjYWxsYmFjayB0aGF0IHJldHVybnMgYSBMaXQgdGVtcGxhdGUuXG4gKiBAcGFyYW0gZGVwZW5kZW5jaWVzIGEgc2luZ2xlIGRlcGVuZGVuY3kgb3IgYW4gYXJyYXkgb2YgZGVwZW5kZW5jaWVzXG4gKiAgICAgICAgICAgICAgICAgICAgIHdoaWNoIHRyaWdnZXIgYSByZS1yZW5kZXIgd2hlbiBjaGFuZ2VkLlxuICovXG5leHBvcnQgY29uc3QgY29tYm9Cb3hSZW5kZXJlciA9IGRpcmVjdGl2ZShDb21ib0JveFJlbmRlcmVyRGlyZWN0aXZlKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/combo-box/src/lit/renderer-directives.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/combo-box/src/vaadin-combo-box-data-provider-mixin.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@vaadin/combo-box/src/vaadin-combo-box-data-provider-mixin.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ComboBoxDataProviderMixin: () => (/* binding */ ComboBoxDataProviderMixin)\n/* harmony export */ });\n/* harmony import */ var _vaadin_combo_box_placeholder_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vaadin-combo-box-placeholder.js */ \"./node_modules/@vaadin/combo-box/src/vaadin-combo-box-placeholder.js\");\n/**\n * @license\n * Copyright (c) 2015 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\n/**\n * @polymerMixin\n */\nconst ComboBoxDataProviderMixin = superClass => class DataProviderMixin extends superClass {\n  static get properties() {\n    return {\n      /**\n       * Number of items fetched at a time from the dataprovider.\n       * @attr {number} page-size\n       * @type {number}\n       */\n      pageSize: {\n        type: Number,\n        value: 50,\n        observer: '_pageSizeChanged'\n      },\n      /**\n       * Total number of items.\n       * @type {number | undefined}\n       */\n      size: {\n        type: Number,\n        observer: '_sizeChanged'\n      },\n      /**\n       * Function that provides items lazily. Receives arguments `params`, `callback`\n       *\n       * `params.page` Requested page index\n       *\n       * `params.pageSize` Current page size\n       *\n       * `params.filter` Currently applied filter\n       *\n       * `callback(items, size)` Callback function with arguments:\n       *   - `items` Current page of items\n       *   - `size` Total number of items.\n       * @type {ComboBoxDataProvider | undefined}\n       */\n      dataProvider: {\n        type: Object,\n        observer: '_dataProviderChanged'\n      },\n      /** @private */\n      _pendingRequests: {\n        value: () => {\n          return {};\n        }\n      },\n      /** @private */\n      __placeHolder: {\n        value: new _vaadin_combo_box_placeholder_js__WEBPACK_IMPORTED_MODULE_0__.ComboBoxPlaceholder()\n      },\n      /** @private */\n      __previousDataProviderFilter: {\n        type: String\n      }\n    };\n  }\n  static get observers() {\n    return ['_dataProviderFilterChanged(filter)', '_warnDataProviderValue(dataProvider, value)', '_ensureFirstPage(opened)'];\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n    this._scroller.addEventListener('index-requested', e => {\n      const index = e.detail.index;\n      const currentScrollerPos = e.detail.currentScrollerPos;\n      const allowedIndexRange = Math.floor(this.pageSize * 1.5);\n\n      // Ignores the indexes, which are being re-sent during scrolling reset,\n      // if the corresponding page is around the current scroller position.\n      // Otherwise, there might be a last pages duplicates, which cause the\n      // loading indicator hanging and blank items\n      if (this._shouldSkipIndex(index, allowedIndexRange, currentScrollerPos)) {\n        return;\n      }\n      if (index !== undefined) {\n        const page = this._getPageForIndex(index);\n        if (this._shouldLoadPage(page)) {\n          this._loadPage(page);\n        }\n      }\n    });\n  }\n\n  /** @private */\n  _dataProviderFilterChanged(filter) {\n    if (this.__previousDataProviderFilter === undefined && filter === '') {\n      this.__previousDataProviderFilter = filter;\n      return;\n    }\n    if (this.__previousDataProviderFilter !== filter) {\n      this.__previousDataProviderFilter = filter;\n      this._pendingRequests = {};\n      // Immediately mark as loading if this refresh leads to re-fetching pages\n      // This prevents some issues with the properties below triggering\n      // observers that also rely on the loading state\n      this.loading = this._shouldFetchData();\n      // Reset size and internal loading state\n      this.size = undefined;\n      this.clearCache();\n    }\n  }\n\n  /** @private */\n  _shouldFetchData() {\n    if (!this.dataProvider) {\n      return false;\n    }\n    return this.opened || this.filter && this.filter.length;\n  }\n\n  /** @private */\n  _ensureFirstPage(opened) {\n    if (opened && this._shouldLoadPage(0)) {\n      this._loadPage(0);\n    }\n  }\n\n  /** @private */\n  _shouldSkipIndex(index, allowedIndexRange, currentScrollerPos) {\n    return currentScrollerPos !== 0 && index >= currentScrollerPos - allowedIndexRange && index <= currentScrollerPos + allowedIndexRange;\n  }\n\n  /** @private */\n  _shouldLoadPage(page) {\n    if (!this.filteredItems || this._forceNextRequest) {\n      this._forceNextRequest = false;\n      return true;\n    }\n    const loadedItem = this.filteredItems[page * this.pageSize];\n    if (loadedItem !== undefined) {\n      return loadedItem instanceof _vaadin_combo_box_placeholder_js__WEBPACK_IMPORTED_MODULE_0__.ComboBoxPlaceholder;\n    }\n    return this.size === undefined;\n  }\n\n  /** @private */\n  _loadPage(page) {\n    // Make sure same page isn't requested multiple times.\n    if (this._pendingRequests[page] || !this.dataProvider) {\n      return;\n    }\n    const params = {\n      page,\n      pageSize: this.pageSize,\n      filter: this.filter\n    };\n    const callback = (items, size) => {\n      if (this._pendingRequests[page] !== callback) {\n        return;\n      }\n      const filteredItems = this.filteredItems ? [...this.filteredItems] : [];\n      filteredItems.splice(params.page * params.pageSize, items.length, ...items);\n      this.filteredItems = filteredItems;\n      if (!this.opened && !this._isInputFocused()) {\n        this._commitValue();\n      }\n      if (size !== undefined) {\n        this.size = size;\n      }\n      delete this._pendingRequests[page];\n      if (Object.keys(this._pendingRequests).length === 0) {\n        this.loading = false;\n      }\n    };\n    this._pendingRequests[page] = callback;\n    // Set the `loading` flag only after marking the request as pending\n    // to prevent the same page from getting requested multiple times\n    // as a result of `__loadingChanged` in the scroller which requests\n    // a virtualizer update which in turn may trigger a data provider page request.\n    this.loading = true;\n    this.dataProvider(params, callback);\n  }\n\n  /** @private */\n  _getPageForIndex(index) {\n    return Math.floor(index / this.pageSize);\n  }\n\n  /**\n   * Clears the cached pages and reloads data from dataprovider when needed.\n   */\n  clearCache() {\n    if (!this.dataProvider) {\n      return;\n    }\n    this._pendingRequests = {};\n    const filteredItems = [];\n    for (let i = 0; i < (this.size || 0); i++) {\n      filteredItems.push(this.__placeHolder);\n    }\n    this.filteredItems = filteredItems;\n    if (this._shouldFetchData()) {\n      this._forceNextRequest = false;\n      this._loadPage(0);\n    } else {\n      this._forceNextRequest = true;\n    }\n  }\n\n  /** @private */\n  _sizeChanged(size = 0) {\n    const filteredItems = (this.filteredItems || []).slice(0, size);\n    for (let i = 0; i < size; i++) {\n      filteredItems[i] = filteredItems[i] !== undefined ? filteredItems[i] : this.__placeHolder;\n    }\n    this.filteredItems = filteredItems;\n\n    // Cleans up the redundant pending requests for pages > size\n    // Refers to https://github.com/vaadin/vaadin-flow-components/issues/229\n    this._flushPendingRequests(size);\n  }\n\n  /** @private */\n  _pageSizeChanged(pageSize, oldPageSize) {\n    if (Math.floor(pageSize) !== pageSize || pageSize < 1) {\n      this.pageSize = oldPageSize;\n      throw new Error('`pageSize` value must be an integer > 0');\n    }\n    this.clearCache();\n  }\n\n  /** @private */\n  _dataProviderChanged(dataProvider, oldDataProvider) {\n    this._ensureItemsOrDataProvider(() => {\n      this.dataProvider = oldDataProvider;\n    });\n    this.clearCache();\n  }\n\n  /** @private */\n  _ensureItemsOrDataProvider(restoreOldValueCallback) {\n    if (this.items !== undefined && this.dataProvider !== undefined) {\n      restoreOldValueCallback();\n      throw new Error('Using `items` and `dataProvider` together is not supported');\n    } else if (this.dataProvider && !this.filteredItems) {\n      this.filteredItems = [];\n    }\n  }\n\n  /** @private */\n  _warnDataProviderValue(dataProvider, value) {\n    if (dataProvider && value !== '' && (this.selectedItem === undefined || this.selectedItem === null)) {\n      const valueIndex = this.__getItemIndexByValue(this.filteredItems, value);\n      if (valueIndex < 0 || !this._getItemLabel(this.filteredItems[valueIndex])) {\n        console.warn('Warning: unable to determine the label for the provided `value`. ' + 'Nothing to display in the text field. This usually happens when ' + 'setting an initial `value` before any items are returned from ' + 'the `dataProvider` callback. Consider setting `selectedItem` ' + 'instead of `value`');\n      }\n    }\n  }\n\n  /**\n   * This method cleans up the page callbacks which refers to the\n   * non-existing pages, i.e. which item indexes are greater than the\n   * changed size.\n   * This case is basically happens when:\n   * 1. Users scroll fast to the bottom and combo box generates the\n   * redundant page request/callback\n   * 2. Server side uses undefined size lazy loading and suddenly reaches\n   * the exact size which is on the range edge\n   * (for default page size = 50, it will be 100, 200, 300, ...).\n   * @param size the new size of items\n   * @private\n   */\n  _flushPendingRequests(size) {\n    if (this._pendingRequests) {\n      const lastPage = Math.ceil(size / this.pageSize);\n      Object.entries(this._pendingRequests).forEach(([page, callback]) => {\n        if (parseInt(page) >= lastPage) {\n          callback([], size);\n        }\n      });\n    }\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21iby1ib3gvc3JjL3ZhYWRpbi1jb21iby1ib3gtZGF0YS1wcm92aWRlci1taXhpbi5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFLQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFLQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFPQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9tZS1hc3Npc3RhbnQtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21iby1ib3gvc3JjL3ZhYWRpbi1jb21iby1ib3gtZGF0YS1wcm92aWRlci1taXhpbi5qcz82NzAyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAoYykgMjAxNSAtIDIwMjMgVmFhZGluIEx0ZC5cbiAqIFRoaXMgcHJvZ3JhbSBpcyBhdmFpbGFibGUgdW5kZXIgQXBhY2hlIExpY2Vuc2UgVmVyc2lvbiAyLjAsIGF2YWlsYWJsZSBhdCBodHRwczovL3ZhYWRpbi5jb20vbGljZW5zZS9cbiAqL1xuaW1wb3J0IHsgQ29tYm9Cb3hQbGFjZWhvbGRlciB9IGZyb20gJy4vdmFhZGluLWNvbWJvLWJveC1wbGFjZWhvbGRlci5qcyc7XG5cbi8qKlxuICogQHBvbHltZXJNaXhpblxuICovXG5leHBvcnQgY29uc3QgQ29tYm9Cb3hEYXRhUHJvdmlkZXJNaXhpbiA9IChzdXBlckNsYXNzKSA9PlxuICBjbGFzcyBEYXRhUHJvdmlkZXJNaXhpbiBleHRlbmRzIHN1cGVyQ2xhc3Mge1xuICAgIHN0YXRpYyBnZXQgcHJvcGVydGllcygpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBOdW1iZXIgb2YgaXRlbXMgZmV0Y2hlZCBhdCBhIHRpbWUgZnJvbSB0aGUgZGF0YXByb3ZpZGVyLlxuICAgICAgICAgKiBAYXR0ciB7bnVtYmVyfSBwYWdlLXNpemVcbiAgICAgICAgICogQHR5cGUge251bWJlcn1cbiAgICAgICAgICovXG4gICAgICAgIHBhZ2VTaXplOiB7XG4gICAgICAgICAgdHlwZTogTnVtYmVyLFxuICAgICAgICAgIHZhbHVlOiA1MCxcbiAgICAgICAgICBvYnNlcnZlcjogJ19wYWdlU2l6ZUNoYW5nZWQnLFxuICAgICAgICB9LFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBUb3RhbCBudW1iZXIgb2YgaXRlbXMuXG4gICAgICAgICAqIEB0eXBlIHtudW1iZXIgfCB1bmRlZmluZWR9XG4gICAgICAgICAqL1xuICAgICAgICBzaXplOiB7XG4gICAgICAgICAgdHlwZTogTnVtYmVyLFxuICAgICAgICAgIG9ic2VydmVyOiAnX3NpemVDaGFuZ2VkJyxcbiAgICAgICAgfSxcblxuICAgICAgICAvKipcbiAgICAgICAgICogRnVuY3Rpb24gdGhhdCBwcm92aWRlcyBpdGVtcyBsYXppbHkuIFJlY2VpdmVzIGFyZ3VtZW50cyBgcGFyYW1zYCwgYGNhbGxiYWNrYFxuICAgICAgICAgKlxuICAgICAgICAgKiBgcGFyYW1zLnBhZ2VgIFJlcXVlc3RlZCBwYWdlIGluZGV4XG4gICAgICAgICAqXG4gICAgICAgICAqIGBwYXJhbXMucGFnZVNpemVgIEN1cnJlbnQgcGFnZSBzaXplXG4gICAgICAgICAqXG4gICAgICAgICAqIGBwYXJhbXMuZmlsdGVyYCBDdXJyZW50bHkgYXBwbGllZCBmaWx0ZXJcbiAgICAgICAgICpcbiAgICAgICAgICogYGNhbGxiYWNrKGl0ZW1zLCBzaXplKWAgQ2FsbGJhY2sgZnVuY3Rpb24gd2l0aCBhcmd1bWVudHM6XG4gICAgICAgICAqICAgLSBgaXRlbXNgIEN1cnJlbnQgcGFnZSBvZiBpdGVtc1xuICAgICAgICAgKiAgIC0gYHNpemVgIFRvdGFsIG51bWJlciBvZiBpdGVtcy5cbiAgICAgICAgICogQHR5cGUge0NvbWJvQm94RGF0YVByb3ZpZGVyIHwgdW5kZWZpbmVkfVxuICAgICAgICAgKi9cbiAgICAgICAgZGF0YVByb3ZpZGVyOiB7XG4gICAgICAgICAgdHlwZTogT2JqZWN0LFxuICAgICAgICAgIG9ic2VydmVyOiAnX2RhdGFQcm92aWRlckNoYW5nZWQnLFxuICAgICAgICB9LFxuXG4gICAgICAgIC8qKiBAcHJpdmF0ZSAqL1xuICAgICAgICBfcGVuZGluZ1JlcXVlc3RzOiB7XG4gICAgICAgICAgdmFsdWU6ICgpID0+IHtcbiAgICAgICAgICAgIHJldHVybiB7fTtcbiAgICAgICAgICB9LFxuICAgICAgICB9LFxuXG4gICAgICAgIC8qKiBAcHJpdmF0ZSAqL1xuICAgICAgICBfX3BsYWNlSG9sZGVyOiB7XG4gICAgICAgICAgdmFsdWU6IG5ldyBDb21ib0JveFBsYWNlaG9sZGVyKCksXG4gICAgICAgIH0sXG5cbiAgICAgICAgLyoqIEBwcml2YXRlICovXG4gICAgICAgIF9fcHJldmlvdXNEYXRhUHJvdmlkZXJGaWx0ZXI6IHtcbiAgICAgICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICAgIH0sXG4gICAgICB9O1xuICAgIH1cblxuICAgIHN0YXRpYyBnZXQgb2JzZXJ2ZXJzKCkge1xuICAgICAgcmV0dXJuIFtcbiAgICAgICAgJ19kYXRhUHJvdmlkZXJGaWx0ZXJDaGFuZ2VkKGZpbHRlciknLFxuICAgICAgICAnX3dhcm5EYXRhUHJvdmlkZXJWYWx1ZShkYXRhUHJvdmlkZXIsIHZhbHVlKScsXG4gICAgICAgICdfZW5zdXJlRmlyc3RQYWdlKG9wZW5lZCknLFxuICAgICAgXTtcbiAgICB9XG5cbiAgICAvKiogQHByb3RlY3RlZCAqL1xuICAgIHJlYWR5KCkge1xuICAgICAgc3VwZXIucmVhZHkoKTtcbiAgICAgIHRoaXMuX3Njcm9sbGVyLmFkZEV2ZW50TGlzdGVuZXIoJ2luZGV4LXJlcXVlc3RlZCcsIChlKSA9PiB7XG4gICAgICAgIGNvbnN0IGluZGV4ID0gZS5kZXRhaWwuaW5kZXg7XG4gICAgICAgIGNvbnN0IGN1cnJlbnRTY3JvbGxlclBvcyA9IGUuZGV0YWlsLmN1cnJlbnRTY3JvbGxlclBvcztcbiAgICAgICAgY29uc3QgYWxsb3dlZEluZGV4UmFuZ2UgPSBNYXRoLmZsb29yKHRoaXMucGFnZVNpemUgKiAxLjUpO1xuXG4gICAgICAgIC8vIElnbm9yZXMgdGhlIGluZGV4ZXMsIHdoaWNoIGFyZSBiZWluZyByZS1zZW50IGR1cmluZyBzY3JvbGxpbmcgcmVzZXQsXG4gICAgICAgIC8vIGlmIHRoZSBjb3JyZXNwb25kaW5nIHBhZ2UgaXMgYXJvdW5kIHRoZSBjdXJyZW50IHNjcm9sbGVyIHBvc2l0aW9uLlxuICAgICAgICAvLyBPdGhlcndpc2UsIHRoZXJlIG1pZ2h0IGJlIGEgbGFzdCBwYWdlcyBkdXBsaWNhdGVzLCB3aGljaCBjYXVzZSB0aGVcbiAgICAgICAgLy8gbG9hZGluZyBpbmRpY2F0b3IgaGFuZ2luZyBhbmQgYmxhbmsgaXRlbXNcbiAgICAgICAgaWYgKHRoaXMuX3Nob3VsZFNraXBJbmRleChpbmRleCwgYWxsb3dlZEluZGV4UmFuZ2UsIGN1cnJlbnRTY3JvbGxlclBvcykpIHtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoaW5kZXggIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgIGNvbnN0IHBhZ2UgPSB0aGlzLl9nZXRQYWdlRm9ySW5kZXgoaW5kZXgpO1xuICAgICAgICAgIGlmICh0aGlzLl9zaG91bGRMb2FkUGFnZShwYWdlKSkge1xuICAgICAgICAgICAgdGhpcy5fbG9hZFBhZ2UocGFnZSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICAvKiogQHByaXZhdGUgKi9cbiAgICBfZGF0YVByb3ZpZGVyRmlsdGVyQ2hhbmdlZChmaWx0ZXIpIHtcbiAgICAgIGlmICh0aGlzLl9fcHJldmlvdXNEYXRhUHJvdmlkZXJGaWx0ZXIgPT09IHVuZGVmaW5lZCAmJiBmaWx0ZXIgPT09ICcnKSB7XG4gICAgICAgIHRoaXMuX19wcmV2aW91c0RhdGFQcm92aWRlckZpbHRlciA9IGZpbHRlcjtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBpZiAodGhpcy5fX3ByZXZpb3VzRGF0YVByb3ZpZGVyRmlsdGVyICE9PSBmaWx0ZXIpIHtcbiAgICAgICAgdGhpcy5fX3ByZXZpb3VzRGF0YVByb3ZpZGVyRmlsdGVyID0gZmlsdGVyO1xuXG4gICAgICAgIHRoaXMuX3BlbmRpbmdSZXF1ZXN0cyA9IHt9O1xuICAgICAgICAvLyBJbW1lZGlhdGVseSBtYXJrIGFzIGxvYWRpbmcgaWYgdGhpcyByZWZyZXNoIGxlYWRzIHRvIHJlLWZldGNoaW5nIHBhZ2VzXG4gICAgICAgIC8vIFRoaXMgcHJldmVudHMgc29tZSBpc3N1ZXMgd2l0aCB0aGUgcHJvcGVydGllcyBiZWxvdyB0cmlnZ2VyaW5nXG4gICAgICAgIC8vIG9ic2VydmVycyB0aGF0IGFsc28gcmVseSBvbiB0aGUgbG9hZGluZyBzdGF0ZVxuICAgICAgICB0aGlzLmxvYWRpbmcgPSB0aGlzLl9zaG91bGRGZXRjaERhdGEoKTtcbiAgICAgICAgLy8gUmVzZXQgc2l6ZSBhbmQgaW50ZXJuYWwgbG9hZGluZyBzdGF0ZVxuICAgICAgICB0aGlzLnNpemUgPSB1bmRlZmluZWQ7XG5cbiAgICAgICAgdGhpcy5jbGVhckNhY2hlKCk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLyoqIEBwcml2YXRlICovXG4gICAgX3Nob3VsZEZldGNoRGF0YSgpIHtcbiAgICAgIGlmICghdGhpcy5kYXRhUHJvdmlkZXIpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdGhpcy5vcGVuZWQgfHwgKHRoaXMuZmlsdGVyICYmIHRoaXMuZmlsdGVyLmxlbmd0aCk7XG4gICAgfVxuXG4gICAgLyoqIEBwcml2YXRlICovXG4gICAgX2Vuc3VyZUZpcnN0UGFnZShvcGVuZWQpIHtcbiAgICAgIGlmIChvcGVuZWQgJiYgdGhpcy5fc2hvdWxkTG9hZFBhZ2UoMCkpIHtcbiAgICAgICAgdGhpcy5fbG9hZFBhZ2UoMCk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLyoqIEBwcml2YXRlICovXG4gICAgX3Nob3VsZFNraXBJbmRleChpbmRleCwgYWxsb3dlZEluZGV4UmFuZ2UsIGN1cnJlbnRTY3JvbGxlclBvcykge1xuICAgICAgcmV0dXJuIChcbiAgICAgICAgY3VycmVudFNjcm9sbGVyUG9zICE9PSAwICYmXG4gICAgICAgIGluZGV4ID49IGN1cnJlbnRTY3JvbGxlclBvcyAtIGFsbG93ZWRJbmRleFJhbmdlICYmXG4gICAgICAgIGluZGV4IDw9IGN1cnJlbnRTY3JvbGxlclBvcyArIGFsbG93ZWRJbmRleFJhbmdlXG4gICAgICApO1xuICAgIH1cblxuICAgIC8qKiBAcHJpdmF0ZSAqL1xuICAgIF9zaG91bGRMb2FkUGFnZShwYWdlKSB7XG4gICAgICBpZiAoIXRoaXMuZmlsdGVyZWRJdGVtcyB8fCB0aGlzLl9mb3JjZU5leHRSZXF1ZXN0KSB7XG4gICAgICAgIHRoaXMuX2ZvcmNlTmV4dFJlcXVlc3QgPSBmYWxzZTtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IGxvYWRlZEl0ZW0gPSB0aGlzLmZpbHRlcmVkSXRlbXNbcGFnZSAqIHRoaXMucGFnZVNpemVdO1xuICAgICAgaWYgKGxvYWRlZEl0ZW0gIT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gbG9hZGVkSXRlbSBpbnN0YW5jZW9mIENvbWJvQm94UGxhY2Vob2xkZXI7XG4gICAgICB9XG4gICAgICByZXR1cm4gdGhpcy5zaXplID09PSB1bmRlZmluZWQ7XG4gICAgfVxuXG4gICAgLyoqIEBwcml2YXRlICovXG4gICAgX2xvYWRQYWdlKHBhZ2UpIHtcbiAgICAgIC8vIE1ha2Ugc3VyZSBzYW1lIHBhZ2UgaXNuJ3QgcmVxdWVzdGVkIG11bHRpcGxlIHRpbWVzLlxuICAgICAgaWYgKHRoaXMuX3BlbmRpbmdSZXF1ZXN0c1twYWdlXSB8fCAhdGhpcy5kYXRhUHJvdmlkZXIpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBjb25zdCBwYXJhbXMgPSB7XG4gICAgICAgIHBhZ2UsXG4gICAgICAgIHBhZ2VTaXplOiB0aGlzLnBhZ2VTaXplLFxuICAgICAgICBmaWx0ZXI6IHRoaXMuZmlsdGVyLFxuICAgICAgfTtcblxuICAgICAgY29uc3QgY2FsbGJhY2sgPSAoaXRlbXMsIHNpemUpID0+IHtcbiAgICAgICAgaWYgKHRoaXMuX3BlbmRpbmdSZXF1ZXN0c1twYWdlXSAhPT0gY2FsbGJhY2spIHtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBmaWx0ZXJlZEl0ZW1zID0gdGhpcy5maWx0ZXJlZEl0ZW1zID8gWy4uLnRoaXMuZmlsdGVyZWRJdGVtc10gOiBbXTtcbiAgICAgICAgZmlsdGVyZWRJdGVtcy5zcGxpY2UocGFyYW1zLnBhZ2UgKiBwYXJhbXMucGFnZVNpemUsIGl0ZW1zLmxlbmd0aCwgLi4uaXRlbXMpO1xuICAgICAgICB0aGlzLmZpbHRlcmVkSXRlbXMgPSBmaWx0ZXJlZEl0ZW1zO1xuXG4gICAgICAgIGlmICghdGhpcy5vcGVuZWQgJiYgIXRoaXMuX2lzSW5wdXRGb2N1c2VkKCkpIHtcbiAgICAgICAgICB0aGlzLl9jb21taXRWYWx1ZSgpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHNpemUgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgIHRoaXMuc2l6ZSA9IHNpemU7XG4gICAgICAgIH1cblxuICAgICAgICBkZWxldGUgdGhpcy5fcGVuZGluZ1JlcXVlc3RzW3BhZ2VdO1xuXG4gICAgICAgIGlmIChPYmplY3Qua2V5cyh0aGlzLl9wZW5kaW5nUmVxdWVzdHMpLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgIHRoaXMubG9hZGluZyA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgICB9O1xuXG4gICAgICB0aGlzLl9wZW5kaW5nUmVxdWVzdHNbcGFnZV0gPSBjYWxsYmFjaztcbiAgICAgIC8vIFNldCB0aGUgYGxvYWRpbmdgIGZsYWcgb25seSBhZnRlciBtYXJraW5nIHRoZSByZXF1ZXN0IGFzIHBlbmRpbmdcbiAgICAgIC8vIHRvIHByZXZlbnQgdGhlIHNhbWUgcGFnZSBmcm9tIGdldHRpbmcgcmVxdWVzdGVkIG11bHRpcGxlIHRpbWVzXG4gICAgICAvLyBhcyBhIHJlc3VsdCBvZiBgX19sb2FkaW5nQ2hhbmdlZGAgaW4gdGhlIHNjcm9sbGVyIHdoaWNoIHJlcXVlc3RzXG4gICAgICAvLyBhIHZpcnR1YWxpemVyIHVwZGF0ZSB3aGljaCBpbiB0dXJuIG1heSB0cmlnZ2VyIGEgZGF0YSBwcm92aWRlciBwYWdlIHJlcXVlc3QuXG4gICAgICB0aGlzLmxvYWRpbmcgPSB0cnVlO1xuICAgICAgdGhpcy5kYXRhUHJvdmlkZXIocGFyYW1zLCBjYWxsYmFjayk7XG4gICAgfVxuXG4gICAgLyoqIEBwcml2YXRlICovXG4gICAgX2dldFBhZ2VGb3JJbmRleChpbmRleCkge1xuICAgICAgcmV0dXJuIE1hdGguZmxvb3IoaW5kZXggLyB0aGlzLnBhZ2VTaXplKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBDbGVhcnMgdGhlIGNhY2hlZCBwYWdlcyBhbmQgcmVsb2FkcyBkYXRhIGZyb20gZGF0YXByb3ZpZGVyIHdoZW4gbmVlZGVkLlxuICAgICAqL1xuICAgIGNsZWFyQ2FjaGUoKSB7XG4gICAgICBpZiAoIXRoaXMuZGF0YVByb3ZpZGVyKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdGhpcy5fcGVuZGluZ1JlcXVlc3RzID0ge307XG4gICAgICBjb25zdCBmaWx0ZXJlZEl0ZW1zID0gW107XG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8ICh0aGlzLnNpemUgfHwgMCk7IGkrKykge1xuICAgICAgICBmaWx0ZXJlZEl0ZW1zLnB1c2godGhpcy5fX3BsYWNlSG9sZGVyKTtcbiAgICAgIH1cbiAgICAgIHRoaXMuZmlsdGVyZWRJdGVtcyA9IGZpbHRlcmVkSXRlbXM7XG5cbiAgICAgIGlmICh0aGlzLl9zaG91bGRGZXRjaERhdGEoKSkge1xuICAgICAgICB0aGlzLl9mb3JjZU5leHRSZXF1ZXN0ID0gZmFsc2U7XG4gICAgICAgIHRoaXMuX2xvYWRQYWdlKDApO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5fZm9yY2VOZXh0UmVxdWVzdCA9IHRydWU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLyoqIEBwcml2YXRlICovXG4gICAgX3NpemVDaGFuZ2VkKHNpemUgPSAwKSB7XG4gICAgICBjb25zdCBmaWx0ZXJlZEl0ZW1zID0gKHRoaXMuZmlsdGVyZWRJdGVtcyB8fCBbXSkuc2xpY2UoMCwgc2l6ZSk7XG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNpemU7IGkrKykge1xuICAgICAgICBmaWx0ZXJlZEl0ZW1zW2ldID0gZmlsdGVyZWRJdGVtc1tpXSAhPT0gdW5kZWZpbmVkID8gZmlsdGVyZWRJdGVtc1tpXSA6IHRoaXMuX19wbGFjZUhvbGRlcjtcbiAgICAgIH1cbiAgICAgIHRoaXMuZmlsdGVyZWRJdGVtcyA9IGZpbHRlcmVkSXRlbXM7XG5cbiAgICAgIC8vIENsZWFucyB1cCB0aGUgcmVkdW5kYW50IHBlbmRpbmcgcmVxdWVzdHMgZm9yIHBhZ2VzID4gc2l6ZVxuICAgICAgLy8gUmVmZXJzIHRvIGh0dHBzOi8vZ2l0aHViLmNvbS92YWFkaW4vdmFhZGluLWZsb3ctY29tcG9uZW50cy9pc3N1ZXMvMjI5XG4gICAgICB0aGlzLl9mbHVzaFBlbmRpbmdSZXF1ZXN0cyhzaXplKTtcbiAgICB9XG5cbiAgICAvKiogQHByaXZhdGUgKi9cbiAgICBfcGFnZVNpemVDaGFuZ2VkKHBhZ2VTaXplLCBvbGRQYWdlU2l6ZSkge1xuICAgICAgaWYgKE1hdGguZmxvb3IocGFnZVNpemUpICE9PSBwYWdlU2l6ZSB8fCBwYWdlU2l6ZSA8IDEpIHtcbiAgICAgICAgdGhpcy5wYWdlU2l6ZSA9IG9sZFBhZ2VTaXplO1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2BwYWdlU2l6ZWAgdmFsdWUgbXVzdCBiZSBhbiBpbnRlZ2VyID4gMCcpO1xuICAgICAgfVxuICAgICAgdGhpcy5jbGVhckNhY2hlKCk7XG4gICAgfVxuXG4gICAgLyoqIEBwcml2YXRlICovXG4gICAgX2RhdGFQcm92aWRlckNoYW5nZWQoZGF0YVByb3ZpZGVyLCBvbGREYXRhUHJvdmlkZXIpIHtcbiAgICAgIHRoaXMuX2Vuc3VyZUl0ZW1zT3JEYXRhUHJvdmlkZXIoKCkgPT4ge1xuICAgICAgICB0aGlzLmRhdGFQcm92aWRlciA9IG9sZERhdGFQcm92aWRlcjtcbiAgICAgIH0pO1xuXG4gICAgICB0aGlzLmNsZWFyQ2FjaGUoKTtcbiAgICB9XG5cbiAgICAvKiogQHByaXZhdGUgKi9cbiAgICBfZW5zdXJlSXRlbXNPckRhdGFQcm92aWRlcihyZXN0b3JlT2xkVmFsdWVDYWxsYmFjaykge1xuICAgICAgaWYgKHRoaXMuaXRlbXMgIT09IHVuZGVmaW5lZCAmJiB0aGlzLmRhdGFQcm92aWRlciAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJlc3RvcmVPbGRWYWx1ZUNhbGxiYWNrKCk7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignVXNpbmcgYGl0ZW1zYCBhbmQgYGRhdGFQcm92aWRlcmAgdG9nZXRoZXIgaXMgbm90IHN1cHBvcnRlZCcpO1xuICAgICAgfSBlbHNlIGlmICh0aGlzLmRhdGFQcm92aWRlciAmJiAhdGhpcy5maWx0ZXJlZEl0ZW1zKSB7XG4gICAgICAgIHRoaXMuZmlsdGVyZWRJdGVtcyA9IFtdO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8qKiBAcHJpdmF0ZSAqL1xuICAgIF93YXJuRGF0YVByb3ZpZGVyVmFsdWUoZGF0YVByb3ZpZGVyLCB2YWx1ZSkge1xuICAgICAgaWYgKGRhdGFQcm92aWRlciAmJiB2YWx1ZSAhPT0gJycgJiYgKHRoaXMuc2VsZWN0ZWRJdGVtID09PSB1bmRlZmluZWQgfHwgdGhpcy5zZWxlY3RlZEl0ZW0gPT09IG51bGwpKSB7XG4gICAgICAgIGNvbnN0IHZhbHVlSW5kZXggPSB0aGlzLl9fZ2V0SXRlbUluZGV4QnlWYWx1ZSh0aGlzLmZpbHRlcmVkSXRlbXMsIHZhbHVlKTtcbiAgICAgICAgaWYgKHZhbHVlSW5kZXggPCAwIHx8ICF0aGlzLl9nZXRJdGVtTGFiZWwodGhpcy5maWx0ZXJlZEl0ZW1zW3ZhbHVlSW5kZXhdKSkge1xuICAgICAgICAgIGNvbnNvbGUud2FybihcbiAgICAgICAgICAgICdXYXJuaW5nOiB1bmFibGUgdG8gZGV0ZXJtaW5lIHRoZSBsYWJlbCBmb3IgdGhlIHByb3ZpZGVkIGB2YWx1ZWAuICcgK1xuICAgICAgICAgICAgICAnTm90aGluZyB0byBkaXNwbGF5IGluIHRoZSB0ZXh0IGZpZWxkLiBUaGlzIHVzdWFsbHkgaGFwcGVucyB3aGVuICcgK1xuICAgICAgICAgICAgICAnc2V0dGluZyBhbiBpbml0aWFsIGB2YWx1ZWAgYmVmb3JlIGFueSBpdGVtcyBhcmUgcmV0dXJuZWQgZnJvbSAnICtcbiAgICAgICAgICAgICAgJ3RoZSBgZGF0YVByb3ZpZGVyYCBjYWxsYmFjay4gQ29uc2lkZXIgc2V0dGluZyBgc2VsZWN0ZWRJdGVtYCAnICtcbiAgICAgICAgICAgICAgJ2luc3RlYWQgb2YgYHZhbHVlYCcsXG4gICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFRoaXMgbWV0aG9kIGNsZWFucyB1cCB0aGUgcGFnZSBjYWxsYmFja3Mgd2hpY2ggcmVmZXJzIHRvIHRoZVxuICAgICAqIG5vbi1leGlzdGluZyBwYWdlcywgaS5lLiB3aGljaCBpdGVtIGluZGV4ZXMgYXJlIGdyZWF0ZXIgdGhhbiB0aGVcbiAgICAgKiBjaGFuZ2VkIHNpemUuXG4gICAgICogVGhpcyBjYXNlIGlzIGJhc2ljYWxseSBoYXBwZW5zIHdoZW46XG4gICAgICogMS4gVXNlcnMgc2Nyb2xsIGZhc3QgdG8gdGhlIGJvdHRvbSBhbmQgY29tYm8gYm94IGdlbmVyYXRlcyB0aGVcbiAgICAgKiByZWR1bmRhbnQgcGFnZSByZXF1ZXN0L2NhbGxiYWNrXG4gICAgICogMi4gU2VydmVyIHNpZGUgdXNlcyB1bmRlZmluZWQgc2l6ZSBsYXp5IGxvYWRpbmcgYW5kIHN1ZGRlbmx5IHJlYWNoZXNcbiAgICAgKiB0aGUgZXhhY3Qgc2l6ZSB3aGljaCBpcyBvbiB0aGUgcmFuZ2UgZWRnZVxuICAgICAqIChmb3IgZGVmYXVsdCBwYWdlIHNpemUgPSA1MCwgaXQgd2lsbCBiZSAxMDAsIDIwMCwgMzAwLCAuLi4pLlxuICAgICAqIEBwYXJhbSBzaXplIHRoZSBuZXcgc2l6ZSBvZiBpdGVtc1xuICAgICAqIEBwcml2YXRlXG4gICAgICovXG4gICAgX2ZsdXNoUGVuZGluZ1JlcXVlc3RzKHNpemUpIHtcbiAgICAgIGlmICh0aGlzLl9wZW5kaW5nUmVxdWVzdHMpIHtcbiAgICAgICAgY29uc3QgbGFzdFBhZ2UgPSBNYXRoLmNlaWwoc2l6ZSAvIHRoaXMucGFnZVNpemUpO1xuICAgICAgICBPYmplY3QuZW50cmllcyh0aGlzLl9wZW5kaW5nUmVxdWVzdHMpLmZvckVhY2goKFtwYWdlLCBjYWxsYmFja10pID0+IHtcbiAgICAgICAgICBpZiAocGFyc2VJbnQocGFnZSkgPj0gbGFzdFBhZ2UpIHtcbiAgICAgICAgICAgIGNhbGxiYWNrKFtdLCBzaXplKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cbiAgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/combo-box/src/vaadin-combo-box-data-provider-mixin.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/combo-box/src/vaadin-combo-box-item-mixin.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@vaadin/combo-box/src/vaadin-combo-box-item-mixin.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ComboBoxItemMixin: () => (/* binding */ ComboBoxItemMixin)\n/* harmony export */ });\n/**\n * @license\n * Copyright (c) 2015 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * @polymerMixin\n */\nconst ComboBoxItemMixin = superClass => class ComboBoxItemMixinClass extends superClass {\n  static get properties() {\n    return {\n      /**\n       * The index of the item.\n       */\n      index: {\n        type: Number\n      },\n      /**\n       * The item to render.\n       */\n      item: {\n        type: Object\n      },\n      /**\n       * The text to render in the item.\n       */\n      label: {\n        type: String\n      },\n      /**\n       * True when item is selected.\n       */\n      selected: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n      /**\n       * True when item is focused.\n       */\n      focused: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n      /**\n       * Custom function for rendering the item content.\n       */\n      renderer: {\n        type: Function\n      }\n    };\n  }\n  static get observers() {\n    return ['__rendererOrItemChanged(renderer, index, item.*, selected, focused)', '__updateLabel(label, renderer)'];\n  }\n  static get observedAttributes() {\n    return [...super.observedAttributes, 'hidden'];\n  }\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (name === 'hidden' && newValue !== null) {\n      // The element is being hidden (by virtualizer). Mark one of the __rendererOrItemChanged\n      // dependencies as undefined to make sure it's called when the element is shown again\n      // and assigned properties with possibly identical values as before hiding.\n      this.index = undefined;\n    } else {\n      super.attributeChangedCallback(name, oldValue, newValue);\n    }\n  }\n\n  /** @protected */\n  connectedCallback() {\n    super.connectedCallback();\n    this._owner = this.parentNode.owner;\n    const hostDir = this._owner.getAttribute('dir');\n    if (hostDir) {\n      this.setAttribute('dir', hostDir);\n    }\n  }\n\n  /**\n   * Requests an update for the content of the item.\n   * While performing the update, it invokes the renderer passed in the `renderer` property.\n   *\n   * It is not guaranteed that the update happens immediately (synchronously) after it is requested.\n   */\n  requestContentUpdate() {\n    if (!this.renderer) {\n      return;\n    }\n    const model = {\n      index: this.index,\n      item: this.item,\n      focused: this.focused,\n      selected: this.selected\n    };\n    this.renderer(this, this._owner, model);\n  }\n\n  /** @private */\n  __rendererOrItemChanged(renderer, index, item) {\n    if (item === undefined || index === undefined) {\n      return;\n    }\n    if (this._oldRenderer !== renderer) {\n      this.innerHTML = '';\n      // Whenever a Lit-based renderer is used, it assigns a Lit part to the node it was rendered into.\n      // When clearing the rendered content, this part needs to be manually disposed of.\n      // Otherwise, using a Lit-based renderer on the same node will throw an exception or render nothing afterward.\n      delete this._$litPart$;\n    }\n    if (renderer) {\n      this._oldRenderer = renderer;\n      this.requestContentUpdate();\n    }\n  }\n\n  /** @private */\n  __updateLabel(label, renderer) {\n    if (renderer) {\n      return;\n    }\n    this.textContent = label;\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21iby1ib3gvc3JjL3ZhYWRpbi1jb21iby1ib3gtaXRlbS1taXhpbi5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2hvbWUtYXNzaXN0YW50LWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0B2YWFkaW4vY29tYm8tYm94L3NyYy92YWFkaW4tY29tYm8tYm94LWl0ZW0tbWl4aW4uanM/M2RkNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTUgLSAyMDIzIFZhYWRpbiBMdGQuXG4gKiBUaGlzIHByb2dyYW0gaXMgYXZhaWxhYmxlIHVuZGVyIEFwYWNoZSBMaWNlbnNlIFZlcnNpb24gMi4wLCBhdmFpbGFibGUgYXQgaHR0cHM6Ly92YWFkaW4uY29tL2xpY2Vuc2UvXG4gKi9cblxuLyoqXG4gKiBAcG9seW1lck1peGluXG4gKi9cbmV4cG9ydCBjb25zdCBDb21ib0JveEl0ZW1NaXhpbiA9IChzdXBlckNsYXNzKSA9PlxuICBjbGFzcyBDb21ib0JveEl0ZW1NaXhpbkNsYXNzIGV4dGVuZHMgc3VwZXJDbGFzcyB7XG4gICAgc3RhdGljIGdldCBwcm9wZXJ0aWVzKCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFRoZSBpbmRleCBvZiB0aGUgaXRlbS5cbiAgICAgICAgICovXG4gICAgICAgIGluZGV4OiB7XG4gICAgICAgICAgdHlwZTogTnVtYmVyLFxuICAgICAgICB9LFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBUaGUgaXRlbSB0byByZW5kZXIuXG4gICAgICAgICAqL1xuICAgICAgICBpdGVtOiB7XG4gICAgICAgICAgdHlwZTogT2JqZWN0LFxuICAgICAgICB9LFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBUaGUgdGV4dCB0byByZW5kZXIgaW4gdGhlIGl0ZW0uXG4gICAgICAgICAqL1xuICAgICAgICBsYWJlbDoge1xuICAgICAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgICAgfSxcblxuICAgICAgICAvKipcbiAgICAgICAgICogVHJ1ZSB3aGVuIGl0ZW0gaXMgc2VsZWN0ZWQuXG4gICAgICAgICAqL1xuICAgICAgICBzZWxlY3RlZDoge1xuICAgICAgICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgICAgICAgdmFsdWU6IGZhbHNlLFxuICAgICAgICAgIHJlZmxlY3RUb0F0dHJpYnV0ZTogdHJ1ZSxcbiAgICAgICAgfSxcblxuICAgICAgICAvKipcbiAgICAgICAgICogVHJ1ZSB3aGVuIGl0ZW0gaXMgZm9jdXNlZC5cbiAgICAgICAgICovXG4gICAgICAgIGZvY3VzZWQ6IHtcbiAgICAgICAgICB0eXBlOiBCb29sZWFuLFxuICAgICAgICAgIHZhbHVlOiBmYWxzZSxcbiAgICAgICAgICByZWZsZWN0VG9BdHRyaWJ1dGU6IHRydWUsXG4gICAgICAgIH0sXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIEN1c3RvbSBmdW5jdGlvbiBmb3IgcmVuZGVyaW5nIHRoZSBpdGVtIGNvbnRlbnQuXG4gICAgICAgICAqL1xuICAgICAgICByZW5kZXJlcjoge1xuICAgICAgICAgIHR5cGU6IEZ1bmN0aW9uLFxuICAgICAgICB9LFxuICAgICAgfTtcbiAgICB9XG5cbiAgICBzdGF0aWMgZ2V0IG9ic2VydmVycygpIHtcbiAgICAgIHJldHVybiBbJ19fcmVuZGVyZXJPckl0ZW1DaGFuZ2VkKHJlbmRlcmVyLCBpbmRleCwgaXRlbS4qLCBzZWxlY3RlZCwgZm9jdXNlZCknLCAnX191cGRhdGVMYWJlbChsYWJlbCwgcmVuZGVyZXIpJ107XG4gICAgfVxuXG4gICAgc3RhdGljIGdldCBvYnNlcnZlZEF0dHJpYnV0ZXMoKSB7XG4gICAgICByZXR1cm4gWy4uLnN1cGVyLm9ic2VydmVkQXR0cmlidXRlcywgJ2hpZGRlbiddO1xuICAgIH1cblxuICAgIGF0dHJpYnV0ZUNoYW5nZWRDYWxsYmFjayhuYW1lLCBvbGRWYWx1ZSwgbmV3VmFsdWUpIHtcbiAgICAgIGlmIChuYW1lID09PSAnaGlkZGVuJyAmJiBuZXdWYWx1ZSAhPT0gbnVsbCkge1xuICAgICAgICAvLyBUaGUgZWxlbWVudCBpcyBiZWluZyBoaWRkZW4gKGJ5IHZpcnR1YWxpemVyKS4gTWFyayBvbmUgb2YgdGhlIF9fcmVuZGVyZXJPckl0ZW1DaGFuZ2VkXG4gICAgICAgIC8vIGRlcGVuZGVuY2llcyBhcyB1bmRlZmluZWQgdG8gbWFrZSBzdXJlIGl0J3MgY2FsbGVkIHdoZW4gdGhlIGVsZW1lbnQgaXMgc2hvd24gYWdhaW5cbiAgICAgICAgLy8gYW5kIGFzc2lnbmVkIHByb3BlcnRpZXMgd2l0aCBwb3NzaWJseSBpZGVudGljYWwgdmFsdWVzIGFzIGJlZm9yZSBoaWRpbmcuXG4gICAgICAgIHRoaXMuaW5kZXggPSB1bmRlZmluZWQ7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzdXBlci5hdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2sobmFtZSwgb2xkVmFsdWUsIG5ld1ZhbHVlKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvKiogQHByb3RlY3RlZCAqL1xuICAgIGNvbm5lY3RlZENhbGxiYWNrKCkge1xuICAgICAgc3VwZXIuY29ubmVjdGVkQ2FsbGJhY2soKTtcblxuICAgICAgdGhpcy5fb3duZXIgPSB0aGlzLnBhcmVudE5vZGUub3duZXI7XG5cbiAgICAgIGNvbnN0IGhvc3REaXIgPSB0aGlzLl9vd25lci5nZXRBdHRyaWJ1dGUoJ2RpcicpO1xuICAgICAgaWYgKGhvc3REaXIpIHtcbiAgICAgICAgdGhpcy5zZXRBdHRyaWJ1dGUoJ2RpcicsIGhvc3REaXIpO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFJlcXVlc3RzIGFuIHVwZGF0ZSBmb3IgdGhlIGNvbnRlbnQgb2YgdGhlIGl0ZW0uXG4gICAgICogV2hpbGUgcGVyZm9ybWluZyB0aGUgdXBkYXRlLCBpdCBpbnZva2VzIHRoZSByZW5kZXJlciBwYXNzZWQgaW4gdGhlIGByZW5kZXJlcmAgcHJvcGVydHkuXG4gICAgICpcbiAgICAgKiBJdCBpcyBub3QgZ3VhcmFudGVlZCB0aGF0IHRoZSB1cGRhdGUgaGFwcGVucyBpbW1lZGlhdGVseSAoc3luY2hyb25vdXNseSkgYWZ0ZXIgaXQgaXMgcmVxdWVzdGVkLlxuICAgICAqL1xuICAgIHJlcXVlc3RDb250ZW50VXBkYXRlKCkge1xuICAgICAgaWYgKCF0aGlzLnJlbmRlcmVyKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgY29uc3QgbW9kZWwgPSB7XG4gICAgICAgIGluZGV4OiB0aGlzLmluZGV4LFxuICAgICAgICBpdGVtOiB0aGlzLml0ZW0sXG4gICAgICAgIGZvY3VzZWQ6IHRoaXMuZm9jdXNlZCxcbiAgICAgICAgc2VsZWN0ZWQ6IHRoaXMuc2VsZWN0ZWQsXG4gICAgICB9O1xuXG4gICAgICB0aGlzLnJlbmRlcmVyKHRoaXMsIHRoaXMuX293bmVyLCBtb2RlbCk7XG4gICAgfVxuXG4gICAgLyoqIEBwcml2YXRlICovXG4gICAgX19yZW5kZXJlck9ySXRlbUNoYW5nZWQocmVuZGVyZXIsIGluZGV4LCBpdGVtKSB7XG4gICAgICBpZiAoaXRlbSA9PT0gdW5kZWZpbmVkIHx8IGluZGV4ID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBpZiAodGhpcy5fb2xkUmVuZGVyZXIgIT09IHJlbmRlcmVyKSB7XG4gICAgICAgIHRoaXMuaW5uZXJIVE1MID0gJyc7XG4gICAgICAgIC8vIFdoZW5ldmVyIGEgTGl0LWJhc2VkIHJlbmRlcmVyIGlzIHVzZWQsIGl0IGFzc2lnbnMgYSBMaXQgcGFydCB0byB0aGUgbm9kZSBpdCB3YXMgcmVuZGVyZWQgaW50by5cbiAgICAgICAgLy8gV2hlbiBjbGVhcmluZyB0aGUgcmVuZGVyZWQgY29udGVudCwgdGhpcyBwYXJ0IG5lZWRzIHRvIGJlIG1hbnVhbGx5IGRpc3Bvc2VkIG9mLlxuICAgICAgICAvLyBPdGhlcndpc2UsIHVzaW5nIGEgTGl0LWJhc2VkIHJlbmRlcmVyIG9uIHRoZSBzYW1lIG5vZGUgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gb3IgcmVuZGVyIG5vdGhpbmcgYWZ0ZXJ3YXJkLlxuICAgICAgICBkZWxldGUgdGhpcy5fJGxpdFBhcnQkO1xuICAgICAgfVxuXG4gICAgICBpZiAocmVuZGVyZXIpIHtcbiAgICAgICAgdGhpcy5fb2xkUmVuZGVyZXIgPSByZW5kZXJlcjtcbiAgICAgICAgdGhpcy5yZXF1ZXN0Q29udGVudFVwZGF0ZSgpO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8qKiBAcHJpdmF0ZSAqL1xuICAgIF9fdXBkYXRlTGFiZWwobGFiZWwsIHJlbmRlcmVyKSB7XG4gICAgICBpZiAocmVuZGVyZXIpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICB0aGlzLnRleHRDb250ZW50ID0gbGFiZWw7XG4gICAgfVxuICB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/combo-box/src/vaadin-combo-box-item-mixin.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/combo-box/src/vaadin-combo-box-item.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@vaadin/combo-box/src/vaadin-combo-box-item.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ComboBoxItem: () => (/* binding */ ComboBoxItem)\n/* harmony export */ });\n/* harmony import */ var _polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polymer/polymer/polymer-element.js */ \"./node_modules/@polymer/polymer/polymer-element.js\");\n/* harmony import */ var _vaadin_component_base_src_define_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @vaadin/component-base/src/define.js */ \"./node_modules/@vaadin/component-base/src/define.js\");\n/* harmony import */ var _vaadin_component_base_src_dir_mixin_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @vaadin/component-base/src/dir-mixin.js */ \"./node_modules/@vaadin/component-base/src/dir-mixin.js\");\n/* harmony import */ var _vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js */ \"./node_modules/@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js\");\n/* harmony import */ var _vaadin_combo_box_item_mixin_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./vaadin-combo-box-item-mixin.js */ \"./node_modules/@vaadin/combo-box/src/vaadin-combo-box-item-mixin.js\");\n/**\n * @license\n * Copyright (c) 2015 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\n\n\n\n\n/**\n * An item element used by the `<vaadin-combo-box>` dropdown.\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name   | Description\n * ------------|--------------\n * `checkmark` | The graphical checkmark shown for a selected item\n * `content`   | The element that wraps the item content\n *\n * The following state attributes are exposed for styling:\n *\n * Attribute    | Description\n * -------------|-------------\n * `selected`   | Set when the item is selected\n * `focused`    | Set when the item is focused\n *\n * See [Styling Components](https://vaadin.com/docs/latest/styling/styling-components) documentation.\n *\n * @customElement\n * @mixes ComboBoxItemMixin\n * @mixes ThemableMixin\n * @mixes DirMixin\n * @private\n */\nclass ComboBoxItem extends (0,_vaadin_combo_box_item_mixin_js__WEBPACK_IMPORTED_MODULE_4__.ComboBoxItemMixin)((0,_vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_3__.ThemableMixin)((0,_vaadin_component_base_src_dir_mixin_js__WEBPACK_IMPORTED_MODULE_2__.DirMixin)(_polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_0__.PolymerElement))) {\n  static get template() {\n    return (0,_polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_0__.html)`\n      <style>\n        :host {\n          display: block;\n        }\n\n        :host([hidden]) {\n          display: none;\n        }\n      </style>\n      <span part=\"checkmark\" aria-hidden=\"true\"></span>\n      <div part=\"content\">\n        <slot></slot>\n      </div>\n    `;\n  }\n  static get is() {\n    return 'vaadin-combo-box-item';\n  }\n}\n(0,_vaadin_component_base_src_define_js__WEBPACK_IMPORTED_MODULE_1__.defineCustomElement)(ComboBoxItem);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21iby1ib3gvc3JjL3ZhYWRpbi1jb21iby1ib3gtaXRlbS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9tZS1hc3Npc3RhbnQtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21iby1ib3gvc3JjL3ZhYWRpbi1jb21iby1ib3gtaXRlbS5qcz8yOGE5Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAoYykgMjAxNSAtIDIwMjMgVmFhZGluIEx0ZC5cbiAqIFRoaXMgcHJvZ3JhbSBpcyBhdmFpbGFibGUgdW5kZXIgQXBhY2hlIExpY2Vuc2UgVmVyc2lvbiAyLjAsIGF2YWlsYWJsZSBhdCBodHRwczovL3ZhYWRpbi5jb20vbGljZW5zZS9cbiAqL1xuaW1wb3J0IHsgaHRtbCwgUG9seW1lckVsZW1lbnQgfSBmcm9tICdAcG9seW1lci9wb2x5bWVyL3BvbHltZXItZWxlbWVudC5qcyc7XG5pbXBvcnQgeyBkZWZpbmVDdXN0b21FbGVtZW50IH0gZnJvbSAnQHZhYWRpbi9jb21wb25lbnQtYmFzZS9zcmMvZGVmaW5lLmpzJztcbmltcG9ydCB7IERpck1peGluIH0gZnJvbSAnQHZhYWRpbi9jb21wb25lbnQtYmFzZS9zcmMvZGlyLW1peGluLmpzJztcbmltcG9ydCB7IFRoZW1hYmxlTWl4aW4gfSBmcm9tICdAdmFhZGluL3ZhYWRpbi10aGVtYWJsZS1taXhpbi92YWFkaW4tdGhlbWFibGUtbWl4aW4uanMnO1xuaW1wb3J0IHsgQ29tYm9Cb3hJdGVtTWl4aW4gfSBmcm9tICcuL3ZhYWRpbi1jb21iby1ib3gtaXRlbS1taXhpbi5qcyc7XG5cbi8qKlxuICogQW4gaXRlbSBlbGVtZW50IHVzZWQgYnkgdGhlIGA8dmFhZGluLWNvbWJvLWJveD5gIGRyb3Bkb3duLlxuICpcbiAqICMjIyBTdHlsaW5nXG4gKlxuICogVGhlIGZvbGxvd2luZyBzaGFkb3cgRE9NIHBhcnRzIGFyZSBhdmFpbGFibGUgZm9yIHN0eWxpbmc6XG4gKlxuICogUGFydCBuYW1lICAgfCBEZXNjcmlwdGlvblxuICogLS0tLS0tLS0tLS0tfC0tLS0tLS0tLS0tLS0tXG4gKiBgY2hlY2ttYXJrYCB8IFRoZSBncmFwaGljYWwgY2hlY2ttYXJrIHNob3duIGZvciBhIHNlbGVjdGVkIGl0ZW1cbiAqIGBjb250ZW50YCAgIHwgVGhlIGVsZW1lbnQgdGhhdCB3cmFwcyB0aGUgaXRlbSBjb250ZW50XG4gKlxuICogVGhlIGZvbGxvd2luZyBzdGF0ZSBhdHRyaWJ1dGVzIGFyZSBleHBvc2VkIGZvciBzdHlsaW5nOlxuICpcbiAqIEF0dHJpYnV0ZSAgICB8IERlc2NyaXB0aW9uXG4gKiAtLS0tLS0tLS0tLS0tfC0tLS0tLS0tLS0tLS1cbiAqIGBzZWxlY3RlZGAgICB8IFNldCB3aGVuIHRoZSBpdGVtIGlzIHNlbGVjdGVkXG4gKiBgZm9jdXNlZGAgICAgfCBTZXQgd2hlbiB0aGUgaXRlbSBpcyBmb2N1c2VkXG4gKlxuICogU2VlIFtTdHlsaW5nIENvbXBvbmVudHNdKGh0dHBzOi8vdmFhZGluLmNvbS9kb2NzL2xhdGVzdC9zdHlsaW5nL3N0eWxpbmctY29tcG9uZW50cykgZG9jdW1lbnRhdGlvbi5cbiAqXG4gKiBAY3VzdG9tRWxlbWVudFxuICogQG1peGVzIENvbWJvQm94SXRlbU1peGluXG4gKiBAbWl4ZXMgVGhlbWFibGVNaXhpblxuICogQG1peGVzIERpck1peGluXG4gKiBAcHJpdmF0ZVxuICovXG5leHBvcnQgY2xhc3MgQ29tYm9Cb3hJdGVtIGV4dGVuZHMgQ29tYm9Cb3hJdGVtTWl4aW4oVGhlbWFibGVNaXhpbihEaXJNaXhpbihQb2x5bWVyRWxlbWVudCkpKSB7XG4gIHN0YXRpYyBnZXQgdGVtcGxhdGUoKSB7XG4gICAgcmV0dXJuIGh0bWxgXG4gICAgICA8c3R5bGU+XG4gICAgICAgIDpob3N0IHtcbiAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgfVxuXG4gICAgICAgIDpob3N0KFtoaWRkZW5dKSB7XG4gICAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgfVxuICAgICAgPC9zdHlsZT5cbiAgICAgIDxzcGFuIHBhcnQ9XCJjaGVja21hcmtcIiBhcmlhLWhpZGRlbj1cInRydWVcIj48L3NwYW4+XG4gICAgICA8ZGl2IHBhcnQ9XCJjb250ZW50XCI+XG4gICAgICAgIDxzbG90Pjwvc2xvdD5cbiAgICAgIDwvZGl2PlxuICAgIGA7XG4gIH1cblxuICBzdGF0aWMgZ2V0IGlzKCkge1xuICAgIHJldHVybiAndmFhZGluLWNvbWJvLWJveC1pdGVtJztcbiAgfVxufVxuXG5kZWZpbmVDdXN0b21FbGVtZW50KENvbWJvQm94SXRlbSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/combo-box/src/vaadin-combo-box-item.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/combo-box/src/vaadin-combo-box-light.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@vaadin/combo-box/src/vaadin-combo-box-light.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ComboBoxLight: () => (/* binding */ ComboBoxLight)\n/* harmony export */ });\n/* harmony import */ var _vaadin_combo_box_item_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vaadin-combo-box-item.js */ \"./node_modules/@vaadin/combo-box/src/vaadin-combo-box-item.js\");\n/* harmony import */ var _vaadin_combo_box_overlay_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./vaadin-combo-box-overlay.js */ \"./node_modules/@vaadin/combo-box/src/vaadin-combo-box-overlay.js\");\n/* harmony import */ var _vaadin_combo_box_scroller_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./vaadin-combo-box-scroller.js */ \"./node_modules/@vaadin/combo-box/src/vaadin-combo-box-scroller.js\");\n/* harmony import */ var _polymer_polymer_lib_utils_case_map_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @polymer/polymer/lib/utils/case-map.js */ \"./node_modules/@polymer/polymer/lib/utils/case-map.js\");\n/* harmony import */ var _polymer_polymer_lib_utils_render_status_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @polymer/polymer/lib/utils/render-status.js */ \"./node_modules/@polymer/polymer/lib/utils/render-status.js\");\n/* harmony import */ var _polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @polymer/polymer/polymer-element.js */ \"./node_modules/@polymer/polymer/polymer-element.js\");\n/* harmony import */ var _vaadin_component_base_src_define_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @vaadin/component-base/src/define.js */ \"./node_modules/@vaadin/component-base/src/define.js\");\n/* harmony import */ var _vaadin_field_base_src_validate_mixin_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @vaadin/field-base/src/validate-mixin.js */ \"./node_modules/@vaadin/field-base/src/validate-mixin.js\");\n/* harmony import */ var _vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js */ \"./node_modules/@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js\");\n/* harmony import */ var _vaadin_combo_box_data_provider_mixin_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./vaadin-combo-box-data-provider-mixin.js */ \"./node_modules/@vaadin/combo-box/src/vaadin-combo-box-data-provider-mixin.js\");\n/* harmony import */ var _vaadin_combo_box_mixin_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./vaadin-combo-box-mixin.js */ \"./node_modules/@vaadin/combo-box/src/vaadin-combo-box-mixin.js\");\n/**\n * @license\n * Copyright (c) 2015 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * `<vaadin-combo-box-light>` is a customizable version of the `<vaadin-combo-box>` providing\n * only the dropdown functionality and leaving the input field definition to the user.\n *\n * The element has the same API as `<vaadin-combo-box>`.\n *\n * To create a custom input field, you need to add a child element which has a two-way\n * data-bindable property representing the input value. The property name is expected\n * to be `value` by default. For example, you can use `<vaadin-text-field>` element:\n *\n * ```html\n * <vaadin-combo-box-light>\n *   <vaadin-text-field></vaadin-text-field>\n * </vaadin-combo-box-light>\n * ```\n *\n * If you are using custom input field that has other property for value,\n * set `class=\"input\"` to enable corresponding logic, and use `attr-for-value`\n * attribute to specify which property to use:\n *\n * ```html\n * <vaadin-combo-box-light attr-for-value=\"input-value\">\n *   <custom-input class=\"input\"></custom-input>\n * </vaadin-combo-box-light>\n * ```\n *\n * You can also pass custom toggle and clear buttons with corresponding classes:\n *\n * ```html\n * <vaadin-combo-box-light>\n *   <custom-input class=\"input\" attr-for-value=\"input-value\">\n *     <button slot=\"suffix\" class=\"clear-button\">Clear</button>\n *     <button slot=\"suffix\" class=\"toggle-button\">Toggle</button>\n *   </custom-input>\n * </vaadin-combo-box-light>\n * ```\n *\n * @fires {Event} change - Fired when the user commits a value change.\n * @fires {CustomEvent} custom-value-set - Fired when the user sets a custom value.\n * @fires {CustomEvent} filter-changed - Fired when the `filter` property changes.\n * @fires {CustomEvent} invalid-changed - Fired when the `invalid` property changes.\n * @fires {CustomEvent} opened-changed - Fired when the `opened` property changes.\n * @fires {CustomEvent} selected-item-changed - Fired when the `selectedItem` property changes.\n * @fires {CustomEvent} value-changed - Fired when the `value` property changes.\n * @fires {CustomEvent} validated - Fired whenever the field is validated.\n *\n * @customElement\n * @extends HTMLElement\n * @mixes ComboBoxDataProviderMixin\n * @mixes ComboBoxMixin\n * @mixes ThemableMixin\n * @mixes ValidateMixin\n */\nclass ComboBoxLight extends (0,_vaadin_combo_box_data_provider_mixin_js__WEBPACK_IMPORTED_MODULE_9__.ComboBoxDataProviderMixin)((0,_vaadin_combo_box_mixin_js__WEBPACK_IMPORTED_MODULE_10__.ComboBoxMixin)((0,_vaadin_field_base_src_validate_mixin_js__WEBPACK_IMPORTED_MODULE_7__.ValidateMixin)((0,_vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_8__.ThemableMixin)(_polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_5__.PolymerElement)))) {\n  static get is() {\n    return 'vaadin-combo-box-light';\n  }\n  static get template() {\n    return (0,_polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_5__.html)`\n      <style>\n        :host([opened]) {\n          pointer-events: auto;\n        }\n      </style>\n\n      <slot></slot>\n\n      <vaadin-combo-box-overlay\n        id=\"overlay\"\n        opened=\"[[_overlayOpened]]\"\n        loading$=\"[[loading]]\"\n        theme$=\"[[_theme]]\"\n        position-target=\"[[inputElement]]\"\n        no-vertical-overlap\n        restore-focus-node=\"[[inputElement]]\"\n      ></vaadin-combo-box-overlay>\n    `;\n  }\n  static get properties() {\n    return {\n      /**\n       * Name of the two-way data-bindable property representing the\n       * value of the custom input field.\n       * @attr {string} attr-for-value\n       * @type {string}\n       */\n      attrForValue: {\n        type: String,\n        value: 'value'\n      }\n    };\n  }\n\n  /**\n   * Used by `InputControlMixin` as a reference to the clear button element.\n   * @protected\n   * @return {!HTMLElement}\n   */\n  get clearElement() {\n    return this.querySelector('.clear-button');\n  }\n\n  /**\n   * Override this getter from `InputMixin` to allow using\n   * an arbitrary property name instead of `value`\n   * for accessing the input element's value.\n   *\n   * @protected\n   * @override\n   * @return {string}\n   */\n  get _inputElementValueProperty() {\n    return (0,_polymer_polymer_lib_utils_case_map_js__WEBPACK_IMPORTED_MODULE_3__.dashToCamelCase)(this.attrForValue);\n  }\n\n  /**\n   * @protected\n   * @override\n   * @return {HTMLInputElement | undefined}\n   */\n  get _nativeInput() {\n    const input = this.inputElement;\n    if (input) {\n      // Support `<input class=\"input\">`\n      if (input instanceof HTMLInputElement) {\n        return input;\n      }\n\n      // Support `<input>` in light DOM (e.g. `vaadin-text-field`)\n      const slottedInput = input.querySelector('input');\n      if (slottedInput) {\n        return slottedInput;\n      }\n      if (input.shadowRoot) {\n        // Support `<input>` in Shadow DOM (e.g. `mwc-textfield`)\n        const shadowInput = input.shadowRoot.querySelector('input');\n        if (shadowInput) {\n          return shadowInput;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n    this._toggleElement = this.querySelector('.toggle-button');\n\n    // Wait until the slotted input DOM is ready\n    (0,_polymer_polymer_lib_utils_render_status_js__WEBPACK_IMPORTED_MODULE_4__.afterNextRender)(this, () => {\n      this._setInputElement(this.querySelector('vaadin-text-field,.input'));\n      this._revertInputValue();\n    });\n  }\n\n  /**\n   * Returns true if the current input value satisfies all constraints (if any).\n   * @return {boolean}\n   */\n  checkValidity() {\n    if (this.inputElement && this.inputElement.validate) {\n      return this.inputElement.validate();\n    }\n    return super.checkValidity();\n  }\n\n  /** @protected */\n  _isClearButton(event) {\n    return super._isClearButton(event) || event.type === 'input' && !event.isTrusted ||\n    // Fake input event dispatched by clear button\n    event.composedPath()[0].getAttribute('part') === 'clear-button';\n  }\n\n  /**\n   * @protected\n   * @override\n   */\n  _shouldRemoveFocus(event) {\n    const isBlurringControlButtons = event.target === this._toggleElement || event.target === this.clearElement;\n    const isFocusingInputElement = event.relatedTarget && event.relatedTarget === this._nativeInput;\n\n    // prevent closing the overlay when moving focus from clear or toggle buttons to the internal input\n    if (isBlurringControlButtons && isFocusingInputElement) {\n      return false;\n    }\n    return super._shouldRemoveFocus(event);\n  }\n}\n(0,_vaadin_component_base_src_define_js__WEBPACK_IMPORTED_MODULE_6__.defineCustomElement)(ComboBoxLight);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/combo-box/src/vaadin-combo-box-light.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/combo-box/src/vaadin-combo-box-mixin.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@vaadin/combo-box/src/vaadin-combo-box-mixin.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ComboBoxMixin: () => (/* binding */ ComboBoxMixin)\n/* harmony export */ });\n/* harmony import */ var _vaadin_a11y_base_src_disabled_mixin_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @vaadin/a11y-base/src/disabled-mixin.js */ \"./node_modules/@vaadin/a11y-base/src/disabled-mixin.js\");\n/* harmony import */ var _vaadin_a11y_base_src_focus_mixin_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @vaadin/a11y-base/src/focus-mixin.js */ \"./node_modules/@vaadin/a11y-base/src/focus-mixin.js\");\n/* harmony import */ var _vaadin_a11y_base_src_focus_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @vaadin/a11y-base/src/focus-utils.js */ \"./node_modules/@vaadin/a11y-base/src/focus-utils.js\");\n/* harmony import */ var _vaadin_a11y_base_src_keyboard_mixin_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @vaadin/a11y-base/src/keyboard-mixin.js */ \"./node_modules/@vaadin/a11y-base/src/keyboard-mixin.js\");\n/* harmony import */ var _vaadin_component_base_src_browser_utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @vaadin/component-base/src/browser-utils.js */ \"./node_modules/@vaadin/component-base/src/browser-utils.js\");\n/* harmony import */ var _vaadin_component_base_src_controller_mixin_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @vaadin/component-base/src/controller-mixin.js */ \"./node_modules/@vaadin/component-base/src/controller-mixin.js\");\n/* harmony import */ var _vaadin_component_base_src_overlay_class_mixin_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @vaadin/component-base/src/overlay-class-mixin.js */ \"./node_modules/@vaadin/component-base/src/overlay-class-mixin.js\");\n/* harmony import */ var _vaadin_component_base_src_path_utils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @vaadin/component-base/src/path-utils.js */ \"./node_modules/@vaadin/component-base/src/path-utils.js\");\n/* harmony import */ var _vaadin_component_base_src_templates_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @vaadin/component-base/src/templates.js */ \"./node_modules/@vaadin/component-base/src/templates.js\");\n/* harmony import */ var _vaadin_field_base_src_input_mixin_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @vaadin/field-base/src/input-mixin.js */ \"./node_modules/@vaadin/field-base/src/input-mixin.js\");\n/* harmony import */ var _vaadin_field_base_src_validate_mixin_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @vaadin/field-base/src/validate-mixin.js */ \"./node_modules/@vaadin/field-base/src/validate-mixin.js\");\n/* harmony import */ var _vaadin_field_base_src_virtual_keyboard_controller_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @vaadin/field-base/src/virtual-keyboard-controller.js */ \"./node_modules/@vaadin/field-base/src/virtual-keyboard-controller.js\");\n/* harmony import */ var _vaadin_combo_box_placeholder_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./vaadin-combo-box-placeholder.js */ \"./node_modules/@vaadin/combo-box/src/vaadin-combo-box-placeholder.js\");\n/**\n * @license\n * Copyright (c) 2015 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Checks if the value is supported as an item value in this control.\n *\n * @param {unknown} value\n * @return {boolean}\n */\nfunction isValidValue(value) {\n  return value !== undefined && value !== null;\n}\n\n/**\n * Returns the index of the first item that satisfies the provided testing function\n * ignoring placeholder items.\n *\n * @param {Array<ComboBoxItem | string>} items\n * @param {Function} callback\n * @return {number}\n */\nfunction findItemIndex(items, callback) {\n  return items.findIndex(item => {\n    if (item instanceof _vaadin_combo_box_placeholder_js__WEBPACK_IMPORTED_MODULE_12__.ComboBoxPlaceholder) {\n      return false;\n    }\n    return callback(item);\n  });\n}\n\n/**\n * @polymerMixin\n * @mixes ControllerMixin\n * @mixes ValidateMixin\n * @mixes DisabledMixin\n * @mixes InputMixin\n * @mixes KeyboardMixin\n * @mixes FocusMixin\n * @mixes OverlayClassMixin\n * @param {function(new:HTMLElement)} subclass\n */\nconst ComboBoxMixin = subclass => class ComboBoxMixinClass extends (0,_vaadin_component_base_src_overlay_class_mixin_js__WEBPACK_IMPORTED_MODULE_6__.OverlayClassMixin)((0,_vaadin_component_base_src_controller_mixin_js__WEBPACK_IMPORTED_MODULE_5__.ControllerMixin)((0,_vaadin_field_base_src_validate_mixin_js__WEBPACK_IMPORTED_MODULE_10__.ValidateMixin)((0,_vaadin_a11y_base_src_focus_mixin_js__WEBPACK_IMPORTED_MODULE_1__.FocusMixin)((0,_vaadin_a11y_base_src_keyboard_mixin_js__WEBPACK_IMPORTED_MODULE_3__.KeyboardMixin)((0,_vaadin_field_base_src_input_mixin_js__WEBPACK_IMPORTED_MODULE_9__.InputMixin)((0,_vaadin_a11y_base_src_disabled_mixin_js__WEBPACK_IMPORTED_MODULE_0__.DisabledMixin)(subclass))))))) {\n  static get properties() {\n    return {\n      /**\n       * True if the dropdown is open, false otherwise.\n       * @type {boolean}\n       */\n      opened: {\n        type: Boolean,\n        notify: true,\n        value: false,\n        reflectToAttribute: true,\n        observer: '_openedChanged'\n      },\n      /**\n       * Set true to prevent the overlay from opening automatically.\n       * @attr {boolean} auto-open-disabled\n       */\n      autoOpenDisabled: {\n        type: Boolean\n      },\n      /**\n       * When present, it specifies that the field is read-only.\n       * @type {boolean}\n       */\n      readonly: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n      /**\n       * Custom function for rendering the content of every item.\n       * Receives three arguments:\n       *\n       * - `root` The `<vaadin-combo-box-item>` internal container DOM element.\n       * - `comboBox` The reference to the `<vaadin-combo-box>` element.\n       * - `model` The object with the properties related with the rendered\n       *   item, contains:\n       *   - `model.index` The index of the rendered item.\n       *   - `model.item` The item.\n       * @type {ComboBoxRenderer | undefined}\n       */\n      renderer: Function,\n      /**\n       * A full set of items to filter the visible options from.\n       * The items can be of either `String` or `Object` type.\n       * @type {!Array<!ComboBoxItem | string> | undefined}\n       */\n      items: {\n        type: Array,\n        observer: '_itemsChanged'\n      },\n      /**\n       * If `true`, the user can input a value that is not present in the items list.\n       * `value` property will be set to the input value in this case.\n       * Also, when `value` is set programmatically, the input value will be set\n       * to reflect that value.\n       * @attr {boolean} allow-custom-value\n       * @type {boolean}\n       */\n      allowCustomValue: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * A subset of items, filtered based on the user input. Filtered items\n       * can be assigned directly to omit the internal filtering functionality.\n       * The items can be of either `String` or `Object` type.\n       * @type {!Array<!ComboBoxItem | string> | undefined}\n       */\n      filteredItems: {\n        type: Array,\n        observer: '_filteredItemsChanged'\n      },\n      /**\n       * Used to detect user value changes and fire `change` events.\n       * @private\n       */\n      _lastCommittedValue: String,\n      /**\n       * When set to `true`, \"loading\" attribute is added to host and the overlay element.\n       * @type {boolean}\n       */\n      loading: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n      /**\n       * @type {number}\n       * @protected\n       */\n      _focusedIndex: {\n        type: Number,\n        observer: '_focusedIndexChanged',\n        value: -1\n      },\n      /**\n       * Filtering string the user has typed into the input field.\n       * @type {string}\n       */\n      filter: {\n        type: String,\n        value: '',\n        notify: true\n      },\n      /**\n       * The selected item from the `items` array.\n       * @type {ComboBoxItem | string | undefined}\n       */\n      selectedItem: {\n        type: Object,\n        notify: true\n      },\n      /**\n       * Path for label of the item. If `items` is an array of objects, the\n       * `itemLabelPath` is used to fetch the displayed string label for each\n       * item.\n       *\n       * The item label is also used for matching items when processing user\n       * input, i.e., for filtering and selecting items.\n       * @attr {string} item-label-path\n       * @type {string}\n       */\n      itemLabelPath: {\n        type: String,\n        value: 'label',\n        observer: '_itemLabelPathChanged'\n      },\n      /**\n       * Path for the value of the item. If `items` is an array of objects, the\n       * `itemValuePath:` is used to fetch the string value for the selected\n       * item.\n       *\n       * The item value is used in the `value` property of the combo box,\n       * to provide the form value.\n       * @attr {string} item-value-path\n       * @type {string}\n       */\n      itemValuePath: {\n        type: String,\n        value: 'value'\n      },\n      /**\n       * Path for the id of the item. If `items` is an array of objects,\n       * the `itemIdPath` is used to compare and identify the same item\n       * in `selectedItem` and `filteredItems` (items given by the\n       * `dataProvider` callback).\n       * @attr {string} item-id-path\n       */\n      itemIdPath: String,\n      /**\n       * @type {!HTMLElement | undefined}\n       * @protected\n       */\n      _toggleElement: {\n        type: Object,\n        observer: '_toggleElementChanged'\n      },\n      /**\n       * Set of items to be rendered in the dropdown.\n       * @protected\n       */\n      _dropdownItems: {\n        type: Array\n      },\n      /** @private */\n      _closeOnBlurIsPrevented: Boolean,\n      /** @private */\n      _scroller: Object,\n      /** @private */\n      _overlayOpened: {\n        type: Boolean,\n        observer: '_overlayOpenedChanged'\n      }\n    };\n  }\n  static get observers() {\n    return ['_selectedItemChanged(selectedItem, itemValuePath, itemLabelPath)', '_openedOrItemsChanged(opened, _dropdownItems, loading)', '_updateScroller(_scroller, _dropdownItems, opened, loading, selectedItem, itemIdPath, _focusedIndex, renderer, theme)'];\n  }\n  constructor() {\n    super();\n    this._boundOverlaySelectedItemChanged = this._overlaySelectedItemChanged.bind(this);\n    this._boundOnClearButtonMouseDown = this.__onClearButtonMouseDown.bind(this);\n    this._boundOnClick = this._onClick.bind(this);\n    this._boundOnOverlayTouchAction = this._onOverlayTouchAction.bind(this);\n    this._boundOnTouchend = this._onTouchend.bind(this);\n  }\n\n  /**\n   * Tag name prefix used by scroller and items.\n   * @protected\n   * @return {string}\n   */\n  get _tagNamePrefix() {\n    return 'vaadin-combo-box';\n  }\n\n  /**\n   * Get a reference to the native `<input>` element.\n   * Override to provide a custom input.\n   * @protected\n   * @return {HTMLInputElement | undefined}\n   */\n  get _nativeInput() {\n    return this.inputElement;\n  }\n\n  /**\n   * Override method inherited from `InputMixin`\n   * to customize the input element.\n   * @protected\n   * @override\n   */\n  _inputElementChanged(inputElement) {\n    super._inputElementChanged(inputElement);\n    const input = this._nativeInput;\n    if (input) {\n      input.autocomplete = 'off';\n      input.autocapitalize = 'off';\n      input.setAttribute('role', 'combobox');\n      input.setAttribute('aria-autocomplete', 'list');\n      input.setAttribute('aria-expanded', !!this.opened);\n\n      // Disable the macOS Safari spell check auto corrections.\n      input.setAttribute('spellcheck', 'false');\n\n      // Disable iOS autocorrect suggestions.\n      input.setAttribute('autocorrect', 'off');\n      this._revertInputValueToValue();\n      if (this.clearElement) {\n        this.clearElement.addEventListener('mousedown', this._boundOnClearButtonMouseDown);\n      }\n    }\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n    this._initOverlay();\n    this._initScroller();\n    this._lastCommittedValue = this.value;\n    this.addEventListener('click', this._boundOnClick);\n    this.addEventListener('touchend', this._boundOnTouchend);\n    const bringToFrontListener = () => {\n      requestAnimationFrame(() => {\n        this._overlayElement.bringToFront();\n      });\n    };\n    this.addEventListener('mousedown', bringToFrontListener);\n    this.addEventListener('touchstart', bringToFrontListener);\n    (0,_vaadin_component_base_src_templates_js__WEBPACK_IMPORTED_MODULE_8__.processTemplates)(this);\n    this.addController(new _vaadin_field_base_src_virtual_keyboard_controller_js__WEBPACK_IMPORTED_MODULE_11__.VirtualKeyboardController(this));\n  }\n\n  /** @protected */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    // Close the overlay on detach\n    this.close();\n  }\n\n  /**\n   * Requests an update for the content of items.\n   * While performing the update, it invokes the renderer (passed in the `renderer` property) once an item.\n   *\n   * It is not guaranteed that the update happens immediately (synchronously) after it is requested.\n   */\n  requestContentUpdate() {\n    if (!this._scroller) {\n      return;\n    }\n    this._scroller.requestContentUpdate();\n    this._getItemElements().forEach(item => {\n      item.requestContentUpdate();\n    });\n  }\n\n  /**\n   * Opens the dropdown list.\n   */\n  open() {\n    // Prevent _open() being called when input is disabled or read-only\n    if (!this.disabled && !this.readonly) {\n      this.opened = true;\n    }\n  }\n\n  /**\n   * Closes the dropdown list.\n   */\n  close() {\n    this.opened = false;\n  }\n\n  /**\n   * Override Polymer lifecycle callback to handle `filter` property change after\n   * the observer for `opened` property is triggered. This is needed when opening\n   * combo-box on user input to ensure the focused index is set correctly.\n   *\n   * @param {!Object} currentProps Current accessor values\n   * @param {?Object} changedProps Properties changed since the last call\n   * @param {?Object} oldProps Previous values for each changed property\n   * @protected\n   * @override\n   */\n  _propertiesChanged(currentProps, changedProps, oldProps) {\n    super._propertiesChanged(currentProps, changedProps, oldProps);\n    if (changedProps.filter !== undefined) {\n      this._filterChanged(changedProps.filter);\n    }\n  }\n\n  /** @private */\n  _initOverlay() {\n    const overlay = this.$.overlay;\n\n    // Store instance for detecting \"dir\" attribute on opening\n    overlay._comboBox = this;\n    overlay.addEventListener('touchend', this._boundOnOverlayTouchAction);\n    overlay.addEventListener('touchmove', this._boundOnOverlayTouchAction);\n\n    // Prevent blurring the input when clicking inside the overlay\n    overlay.addEventListener('mousedown', e => e.preventDefault());\n\n    // Manual two-way binding for the overlay \"opened\" property\n    overlay.addEventListener('opened-changed', e => {\n      this._overlayOpened = e.detail.value;\n    });\n    this._overlayElement = overlay;\n  }\n\n  /**\n   * Create and initialize the scroller element.\n   * Override to provide custom host reference.\n   *\n   * @protected\n   */\n  _initScroller(host) {\n    const scrollerTag = `${this._tagNamePrefix}-scroller`;\n    const overlay = this._overlayElement;\n    overlay.renderer = root => {\n      if (!root.firstChild) {\n        root.appendChild(document.createElement(scrollerTag));\n      }\n    };\n\n    // Ensure the scroller is rendered\n    overlay.requestContentUpdate();\n    const scroller = overlay.querySelector(scrollerTag);\n    scroller.owner = host || this;\n    scroller.getItemLabel = this._getItemLabel.bind(this);\n    scroller.addEventListener('selection-changed', this._boundOverlaySelectedItemChanged);\n\n    // Trigger the observer to set properties\n    this._scroller = scroller;\n  }\n\n  /** @private */\n  // eslint-disable-next-line max-params\n  _updateScroller(scroller, items, opened, loading, selectedItem, itemIdPath, focusedIndex, renderer, theme) {\n    if (scroller) {\n      if (opened) {\n        scroller.style.maxHeight = getComputedStyle(this).getPropertyValue(`--${this._tagNamePrefix}-overlay-max-height`) || '65vh';\n      }\n      scroller.setProperties({\n        items: opened ? items : [],\n        opened,\n        loading,\n        selectedItem,\n        itemIdPath,\n        focusedIndex,\n        renderer,\n        theme\n      });\n    }\n  }\n\n  /** @private */\n  _openedOrItemsChanged(opened, items, loading) {\n    // Close the overlay if there are no items to display.\n    // See https://github.com/vaadin/vaadin-combo-box/pull/964\n    this._overlayOpened = !!(opened && (loading || items && items.length));\n  }\n\n  /** @private */\n  _overlayOpenedChanged(opened, wasOpened) {\n    if (opened) {\n      this.dispatchEvent(new CustomEvent('vaadin-combo-box-dropdown-opened', {\n        bubbles: true,\n        composed: true\n      }));\n      this._onOpened();\n    } else if (wasOpened && this._dropdownItems && this._dropdownItems.length) {\n      this.close();\n      this.dispatchEvent(new CustomEvent('vaadin-combo-box-dropdown-closed', {\n        bubbles: true,\n        composed: true\n      }));\n    }\n  }\n\n  /** @private */\n  _focusedIndexChanged(index, oldIndex) {\n    if (oldIndex === undefined) {\n      return;\n    }\n    this._updateActiveDescendant(index);\n  }\n\n  /** @protected */\n  _isInputFocused() {\n    return this.inputElement && (0,_vaadin_a11y_base_src_focus_utils_js__WEBPACK_IMPORTED_MODULE_2__.isElementFocused)(this.inputElement);\n  }\n\n  /** @private */\n  _updateActiveDescendant(index) {\n    const input = this._nativeInput;\n    if (!input) {\n      return;\n    }\n    const item = this._getItemElements().find(el => el.index === index);\n    if (item) {\n      input.setAttribute('aria-activedescendant', item.id);\n    } else {\n      input.removeAttribute('aria-activedescendant');\n    }\n  }\n\n  /** @private */\n  _openedChanged(opened, wasOpened) {\n    // Prevent _close() being called when opened is set to its default value (false).\n    if (wasOpened === undefined) {\n      return;\n    }\n    if (opened) {\n      this._openedWithFocusRing = this.hasAttribute('focus-ring');\n      // For touch devices, we don't want to popup virtual keyboard\n      // unless input element is explicitly focused by the user.\n      if (!this._isInputFocused() && !_vaadin_component_base_src_browser_utils_js__WEBPACK_IMPORTED_MODULE_4__.isTouch) {\n        if (this.inputElement) {\n          this.inputElement.focus();\n        }\n      }\n      this._overlayElement.restoreFocusOnClose = true;\n    } else {\n      this._onClosed();\n      if (this._openedWithFocusRing && this._isInputFocused()) {\n        this.setAttribute('focus-ring', '');\n      }\n    }\n    const input = this._nativeInput;\n    if (input) {\n      input.setAttribute('aria-expanded', !!opened);\n      if (opened) {\n        input.setAttribute('aria-controls', this._scroller.id);\n      } else {\n        input.removeAttribute('aria-controls');\n      }\n    }\n  }\n\n  /** @private */\n  _onOverlayTouchAction() {\n    // On touch devices, blur the input on touch start inside the overlay, in order to hide\n    // the virtual keyboard. But don't close the overlay on this blur.\n    this._closeOnBlurIsPrevented = true;\n    this.inputElement.blur();\n    this._closeOnBlurIsPrevented = false;\n  }\n\n  /** @protected */\n  _isClearButton(event) {\n    return event.composedPath()[0] === this.clearElement;\n  }\n\n  /** @private */\n  __onClearButtonMouseDown(event) {\n    event.preventDefault(); // Prevent native focusout event\n    this.inputElement.focus();\n  }\n\n  /**\n   * @param {Event} event\n   * @protected\n   */\n  _onClearButtonClick(event) {\n    event.preventDefault();\n    this._onClearAction();\n\n    // De-select dropdown item\n    if (this.opened) {\n      this.requestContentUpdate();\n    }\n  }\n\n  /**\n   * @param {Event} event\n   * @private\n   */\n  _onToggleButtonClick(event) {\n    // Prevent parent components such as `vaadin-grid`\n    // from handling the click event after it bubbles.\n    event.preventDefault();\n    if (this.opened) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * @param {Event} event\n   * @protected\n   */\n  _onHostClick(event) {\n    if (!this.autoOpenDisabled) {\n      event.preventDefault();\n      this.open();\n    }\n  }\n\n  /** @private */\n  _onClick(event) {\n    if (this._isClearButton(event)) {\n      this._onClearButtonClick(event);\n    } else if (event.composedPath().includes(this._toggleElement)) {\n      this._onToggleButtonClick(event);\n    } else {\n      this._onHostClick(event);\n    }\n  }\n\n  /**\n   * Override an event listener from `KeyboardMixin`.\n   *\n   * @param {KeyboardEvent} e\n   * @protected\n   * @override\n   */\n  _onKeyDown(e) {\n    super._onKeyDown(e);\n    if (e.key === 'Tab') {\n      this._overlayElement.restoreFocusOnClose = false;\n    } else if (e.key === 'ArrowDown') {\n      this._onArrowDown();\n\n      // Prevent caret from moving\n      e.preventDefault();\n    } else if (e.key === 'ArrowUp') {\n      this._onArrowUp();\n\n      // Prevent caret from moving\n      e.preventDefault();\n    }\n  }\n\n  /** @private */\n  _getItemLabel(item) {\n    let label = item && this.itemLabelPath ? (0,_vaadin_component_base_src_path_utils_js__WEBPACK_IMPORTED_MODULE_7__.get)(this.itemLabelPath, item) : undefined;\n    if (label === undefined || label === null) {\n      label = item ? item.toString() : '';\n    }\n    return label;\n  }\n\n  /** @private */\n  _getItemValue(item) {\n    let value = item && this.itemValuePath ? (0,_vaadin_component_base_src_path_utils_js__WEBPACK_IMPORTED_MODULE_7__.get)(this.itemValuePath, item) : undefined;\n    if (value === undefined) {\n      value = item ? item.toString() : '';\n    }\n    return value;\n  }\n\n  /** @private */\n  _onArrowDown() {\n    if (this.opened) {\n      const items = this._dropdownItems;\n      if (items) {\n        this._focusedIndex = Math.min(items.length - 1, this._focusedIndex + 1);\n        this._prefillFocusedItemLabel();\n      }\n    } else {\n      this.open();\n    }\n  }\n\n  /** @private */\n  _onArrowUp() {\n    if (this.opened) {\n      if (this._focusedIndex > -1) {\n        this._focusedIndex = Math.max(0, this._focusedIndex - 1);\n      } else {\n        const items = this._dropdownItems;\n        if (items) {\n          this._focusedIndex = items.length - 1;\n        }\n      }\n      this._prefillFocusedItemLabel();\n    } else {\n      this.open();\n    }\n  }\n\n  /** @private */\n  _prefillFocusedItemLabel() {\n    if (this._focusedIndex > -1) {\n      const focusedItem = this._dropdownItems[this._focusedIndex];\n      this._inputElementValue = this._getItemLabel(focusedItem);\n      this._markAllSelectionRange();\n    }\n  }\n\n  /** @private */\n  _setSelectionRange(start, end) {\n    // Setting selection range focuses and/or moves the caret in some browsers,\n    // and there's no need to modify the selection range if the input isn't focused anyway.\n    // This affects Safari. When the overlay is open, and then hitting tab, browser should focus\n    // the next focusable element instead of the combo-box itself.\n    if (this._isInputFocused() && this.inputElement.setSelectionRange) {\n      this.inputElement.setSelectionRange(start, end);\n    }\n  }\n\n  /** @private */\n  _markAllSelectionRange() {\n    if (this._inputElementValue !== undefined) {\n      this._setSelectionRange(0, this._inputElementValue.length);\n    }\n  }\n\n  /** @private */\n  _clearSelectionRange() {\n    if (this._inputElementValue !== undefined) {\n      const pos = this._inputElementValue ? this._inputElementValue.length : 0;\n      this._setSelectionRange(pos, pos);\n    }\n  }\n\n  /** @private */\n  _closeOrCommit() {\n    if (!this.opened && !this.loading) {\n      this._commitValue();\n    } else {\n      this.close();\n    }\n  }\n\n  /**\n   * Override an event listener from `KeyboardMixin`.\n   *\n   * @param {KeyboardEvent} e\n   * @protected\n   * @override\n   */\n  _onEnter(e) {\n    // Do not commit value when custom values are disallowed and input value is not a valid option\n    // also stop propagation of the event, otherwise the user could submit a form while the input\n    // still contains an invalid value\n    if (!this._hasValidInputValue()) {\n      // Do not submit the surrounding form.\n      e.preventDefault();\n      // Do not trigger global listeners\n      e.stopPropagation();\n      return;\n    }\n\n    // Stop propagation of the enter event only if the dropdown is opened, this\n    // \"consumes\" the enter event for the action of closing the dropdown\n    if (this.opened) {\n      // Do not submit the surrounding form.\n      e.preventDefault();\n      // Do not trigger global listeners\n      e.stopPropagation();\n    }\n    this._closeOrCommit();\n  }\n\n  /**\n   * @protected\n   */\n  _hasValidInputValue() {\n    const hasInvalidOption = this._focusedIndex < 0 && this._inputElementValue !== '' && this._getItemLabel(this.selectedItem) !== this._inputElementValue;\n    return this.allowCustomValue || !hasInvalidOption;\n  }\n\n  /**\n   * Override an event listener from `KeyboardMixin`.\n   * Do not call `super` in order to override clear\n   * button logic defined in `InputControlMixin`.\n   *\n   * @param {!KeyboardEvent} e\n   * @protected\n   * @override\n   */\n  _onEscape(e) {\n    if (this.autoOpenDisabled) {\n      // Auto-open is disabled\n      if (this.opened || this.value !== this._inputElementValue && this._inputElementValue.length > 0) {\n        // The overlay is open or\n        // The input value has changed but the change hasn't been committed, so cancel it.\n        e.stopPropagation();\n        this._focusedIndex = -1;\n        this.cancel();\n      } else if (this.clearButtonVisible && !this.opened && !!this.value) {\n        e.stopPropagation();\n        // The clear button is visible and the overlay is closed, so clear the value.\n        this._onClearAction();\n      }\n    } else if (this.opened) {\n      // Auto-open is enabled\n      // The overlay is open\n      e.stopPropagation();\n      if (this._focusedIndex > -1) {\n        // An item is focused, revert the input to the filtered value\n        this._focusedIndex = -1;\n        this._revertInputValue();\n      } else {\n        // No item is focused, cancel the change and close the overlay\n        this.cancel();\n      }\n    } else if (this.clearButtonVisible && !!this.value) {\n      e.stopPropagation();\n      // The clear button is visible and the overlay is closed, so clear the value.\n      this._onClearAction();\n    }\n  }\n\n  /** @private */\n  _toggleElementChanged(toggleElement) {\n    if (toggleElement) {\n      // Don't blur the input on toggle mousedown\n      toggleElement.addEventListener('mousedown', e => e.preventDefault());\n      // Unfocus previously focused element if focus is not inside combo box (on touch devices)\n      toggleElement.addEventListener('click', () => {\n        if (_vaadin_component_base_src_browser_utils_js__WEBPACK_IMPORTED_MODULE_4__.isTouch && !this._isInputFocused()) {\n          document.activeElement.blur();\n        }\n      });\n    }\n  }\n\n  /**\n   * Clears the current value.\n   * @protected\n   */\n  _onClearAction() {\n    this.selectedItem = null;\n    if (this.allowCustomValue) {\n      this.value = '';\n    }\n    this._detectAndDispatchChange();\n  }\n\n  /**\n   * Reverts back to original value.\n   */\n  cancel() {\n    this._revertInputValueToValue();\n    // In the next _detectAndDispatchChange() call, the change detection should not pass\n    this._lastCommittedValue = this.value;\n    this._closeOrCommit();\n  }\n\n  /** @private */\n  _onOpened() {\n    // _detectAndDispatchChange() should not consider value changes done before opening\n    this._lastCommittedValue = this.value;\n  }\n\n  /** @private */\n  _onClosed() {\n    if (!this.loading || this.allowCustomValue) {\n      this._commitValue();\n    }\n  }\n\n  /** @private */\n  _commitValue() {\n    if (this._focusedIndex > -1) {\n      const focusedItem = this._dropdownItems[this._focusedIndex];\n      if (this.selectedItem !== focusedItem) {\n        this.selectedItem = focusedItem;\n      }\n      // Make sure input field is updated in case value doesn't change (i.e. FOO -> foo)\n      this._inputElementValue = this._getItemLabel(this.selectedItem);\n      this._focusedIndex = -1;\n    } else if (this._inputElementValue === '' || this._inputElementValue === undefined) {\n      this.selectedItem = null;\n      if (this.allowCustomValue) {\n        this.value = '';\n      }\n    } else {\n      // Try to find an item which label matches the input value.\n      const items = [this.selectedItem, ...(this._dropdownItems || [])];\n      const itemMatchingInputValue = items[this.__getItemIndexByLabel(items, this._inputElementValue)];\n      if (this.allowCustomValue &&\n      // To prevent a repetitive input value being saved after pressing ESC and Tab.\n      !itemMatchingInputValue) {\n        const customValue = this._inputElementValue;\n\n        // Store reference to the last custom value for checking it on focusout.\n        this._lastCustomValue = customValue;\n\n        // An item matching by label was not found, but custom values are allowed.\n        // Dispatch a custom-value-set event with the input value.\n        const e = new CustomEvent('custom-value-set', {\n          detail: customValue,\n          composed: true,\n          cancelable: true,\n          bubbles: true\n        });\n        this.dispatchEvent(e);\n        if (!e.defaultPrevented) {\n          this.value = customValue;\n        }\n      } else if (!this.allowCustomValue && !this.opened && itemMatchingInputValue) {\n        // An item matching by label was found, select it.\n        this.value = this._getItemValue(itemMatchingInputValue);\n      } else {\n        // Revert the input value\n        this._inputElementValue = this.selectedItem ? this._getItemLabel(this.selectedItem) : this.value || '';\n      }\n    }\n    this._detectAndDispatchChange();\n    this._clearSelectionRange();\n    this.filter = '';\n  }\n\n  /**\n   * Override an event listener from `InputMixin`.\n   * @param {!Event} event\n   * @protected\n   * @override\n   */\n  _onInput(event) {\n    const filter = this._inputElementValue;\n\n    // When opening dropdown on user input, both `opened` and `filter` properties are set.\n    // Perform a batched property update instead of relying on sync property observers.\n    // This is necessary to avoid an extra data-provider request for loading first page.\n    const props = {};\n    if (this.filter === filter) {\n      // Filter and input value might get out of sync, while keyboard navigating for example.\n      // Afterwards, input value might be changed to the same value as used in filtering.\n      // In situation like these, we need to make sure all the filter changes handlers are run.\n      this._filterChanged(this.filter);\n    } else {\n      props.filter = filter;\n    }\n    if (!this.opened && !this._isClearButton(event) && !this.autoOpenDisabled) {\n      props.opened = true;\n    }\n    this.setProperties(props);\n  }\n\n  /**\n   * Override an event listener from `InputMixin`.\n   * @param {!Event} event\n   * @protected\n   * @override\n   */\n  _onChange(event) {\n    // Suppress the native change event fired on the native input.\n    // We use `_detectAndDispatchChange` to fire a custom event.\n    event.stopPropagation();\n  }\n\n  /** @private */\n  _itemLabelPathChanged(itemLabelPath) {\n    if (typeof itemLabelPath !== 'string') {\n      console.error('You should set itemLabelPath to a valid string');\n    }\n  }\n\n  /** @private */\n  _filterChanged(filter) {\n    // Scroll to the top of the list whenever the filter changes.\n    this._scrollIntoView(0);\n    this._focusedIndex = -1;\n    if (this.items) {\n      this.filteredItems = this._filterItems(this.items, filter);\n    } else {\n      // With certain use cases (e. g., external filtering), `items` are\n      // undefined. Filtering is unnecessary per se, but the filteredItems\n      // observer should still be invoked to update focused item.\n      this._filteredItemsChanged(this.filteredItems);\n    }\n  }\n\n  /** @protected */\n  _revertInputValue() {\n    if (this.filter !== '') {\n      this._inputElementValue = this.filter;\n    } else {\n      this._revertInputValueToValue();\n    }\n    this._clearSelectionRange();\n  }\n\n  /** @private */\n  _revertInputValueToValue() {\n    if (this.allowCustomValue && !this.selectedItem) {\n      this._inputElementValue = this.value;\n    } else {\n      this._inputElementValue = this._getItemLabel(this.selectedItem);\n    }\n  }\n\n  /** @private */\n  _selectedItemChanged(selectedItem) {\n    if (selectedItem === null || selectedItem === undefined) {\n      if (this.filteredItems) {\n        if (!this.allowCustomValue) {\n          this.value = '';\n        }\n        this._toggleHasValue(this._hasValue);\n        this._inputElementValue = this.value;\n      }\n    } else {\n      const value = this._getItemValue(selectedItem);\n      if (this.value !== value) {\n        this.value = value;\n        if (this.value !== value) {\n          // The value was changed to something else in value-changed listener,\n          // so prevent from resetting it to the previous value.\n          return;\n        }\n      }\n      this._toggleHasValue(true);\n      this._inputElementValue = this._getItemLabel(selectedItem);\n    }\n  }\n\n  /**\n   * Override an observer from `InputMixin`.\n   * @protected\n   * @override\n   */\n  _valueChanged(value, oldVal) {\n    if (value === '' && oldVal === undefined) {\n      // Initializing, no need to do anything\n      // See https://github.com/vaadin/vaadin-combo-box/issues/554\n      return;\n    }\n    if (isValidValue(value)) {\n      if (this._getItemValue(this.selectedItem) !== value) {\n        this._selectItemForValue(value);\n      }\n      if (!this.selectedItem && this.allowCustomValue) {\n        this._inputElementValue = value;\n      }\n      this._toggleHasValue(this._hasValue);\n    } else {\n      this.selectedItem = null;\n    }\n    this.filter = '';\n\n    // In the next _detectAndDispatchChange() call, the change detection should pass\n    this._lastCommittedValue = undefined;\n  }\n\n  /** @private */\n  _detectAndDispatchChange() {\n    // Do not validate when focusout is caused by document\n    // losing focus, which happens on browser tab switch.\n    if (document.hasFocus()) {\n      this.validate();\n    }\n    if (this.value !== this._lastCommittedValue) {\n      this.dispatchEvent(new CustomEvent('change', {\n        bubbles: true\n      }));\n      this._lastCommittedValue = this.value;\n    }\n  }\n\n  /** @private */\n  _itemsChanged(items, oldItems) {\n    this._ensureItemsOrDataProvider(() => {\n      this.items = oldItems;\n    });\n    if (items) {\n      this.filteredItems = items.slice(0);\n    } else if (oldItems) {\n      // Only clear filteredItems if the component had items previously but got cleared\n      this.filteredItems = null;\n    }\n  }\n\n  /** @private */\n  _filteredItemsChanged(filteredItems, oldFilteredItems) {\n    this._setDropdownItems(filteredItems);\n\n    // Store the currently focused item if any. The focused index preserves\n    // in the case when more filtered items are loading but it is reset\n    // when the user types in a filter query.\n    const focusedItem = oldFilteredItems ? oldFilteredItems[this._focusedIndex] : null;\n\n    // Try to sync `selectedItem` based on `value` once a new set of `filteredItems` is available\n    // (as a result of external filtering or when they have been loaded by the data provider).\n    // When `value` is specified but `selectedItem` is not, it means that there was no item\n    // matching `value` at the moment `value` was set, so `selectedItem` has remained unsynced.\n    const valueIndex = this.__getItemIndexByValue(filteredItems, this.value);\n    if ((this.selectedItem === null || this.selectedItem === undefined) && valueIndex >= 0) {\n      this.selectedItem = filteredItems[valueIndex];\n    }\n\n    // Try to first set focus on the item that had been focused before `filteredItems` were updated\n    // if it is still present in the `filteredItems` array. Otherwise, set the focused index\n    // depending on the selected item or the filter query.\n    const focusedItemIndex = this.__getItemIndexByValue(filteredItems, this._getItemValue(focusedItem));\n    if (focusedItemIndex > -1) {\n      this._focusedIndex = focusedItemIndex;\n    } else {\n      // When the user filled in something that is different from the current value = filtering is enabled,\n      // set the focused index to the item that matches the filter query.\n      this._focusedIndex = this.__getItemIndexByLabel(this.filteredItems, this.filter);\n    }\n  }\n\n  /** @private */\n  _filterItems(arr, filter) {\n    if (!arr) {\n      return arr;\n    }\n    const filteredItems = arr.filter(item => {\n      filter = filter ? filter.toString().toLowerCase() : '';\n      // Check if item contains input value.\n      return this._getItemLabel(item).toString().toLowerCase().indexOf(filter) > -1;\n    });\n    return filteredItems;\n  }\n\n  /** @private */\n  _selectItemForValue(value) {\n    const valueIndex = this.__getItemIndexByValue(this.filteredItems, value);\n    const previouslySelectedItem = this.selectedItem;\n    if (valueIndex >= 0) {\n      this.selectedItem = this.filteredItems[valueIndex];\n    } else if (this.dataProvider && this.selectedItem === undefined) {\n      this.selectedItem = undefined;\n    } else {\n      this.selectedItem = null;\n    }\n    if (this.selectedItem === null && previouslySelectedItem === null) {\n      this._selectedItemChanged(this.selectedItem);\n    }\n  }\n\n  /**\n   * Provide items to be rendered in the dropdown.\n   * Override this method to show custom items.\n   *\n   * @protected\n   */\n  _setDropdownItems(items) {\n    this._dropdownItems = items;\n  }\n\n  /** @private */\n  _getItemElements() {\n    return Array.from(this._scroller.querySelectorAll(`${this._tagNamePrefix}-item`));\n  }\n\n  /** @private */\n  _scrollIntoView(index) {\n    if (!this._scroller) {\n      return;\n    }\n    this._scroller.scrollIntoView(index);\n  }\n\n  /**\n   * Returns the first item that matches the provided value.\n   *\n   * @private\n   */\n  __getItemIndexByValue(items, value) {\n    if (!items || !isValidValue(value)) {\n      return -1;\n    }\n    return findItemIndex(items, item => {\n      return this._getItemValue(item) === value;\n    });\n  }\n\n  /**\n   * Returns the first item that matches the provided label.\n   * Labels are matched against each other case insensitively.\n   *\n   * @private\n   */\n  __getItemIndexByLabel(items, label) {\n    if (!items || !label) {\n      return -1;\n    }\n    return findItemIndex(items, item => {\n      return this._getItemLabel(item).toString().toLowerCase() === label.toString().toLowerCase();\n    });\n  }\n\n  /** @private */\n  _overlaySelectedItemChanged(e) {\n    // Stop this private event from leaking outside.\n    e.stopPropagation();\n    if (e.detail.item instanceof _vaadin_combo_box_placeholder_js__WEBPACK_IMPORTED_MODULE_12__.ComboBoxPlaceholder) {\n      // Placeholder items should not be selectable.\n      return;\n    }\n    if (this.opened) {\n      this._focusedIndex = this.filteredItems.indexOf(e.detail.item);\n      this.close();\n    }\n  }\n\n  /**\n   * Override method inherited from `FocusMixin`\n   * to close the overlay on blur and commit the value.\n   *\n   * @param {boolean} focused\n   * @protected\n   * @override\n   */\n  _setFocused(focused) {\n    super._setFocused(focused);\n    if (!focused && !this.readonly && !this._closeOnBlurIsPrevented) {\n      // User's logic in `custom-value-set` event listener might cause input to blur,\n      // which will result in attempting to commit the same custom value once again.\n      if (!this.opened && this.allowCustomValue && this._inputElementValue === this._lastCustomValue) {\n        delete this._lastCustomValue;\n        return;\n      }\n      this._closeOrCommit();\n    }\n  }\n\n  /**\n   * Override method inherited from `FocusMixin` to not remove focused\n   * state when focus moves to the overlay.\n   *\n   * @param {FocusEvent} event\n   * @return {boolean}\n   * @protected\n   * @override\n   */\n  _shouldRemoveFocus(event) {\n    // VoiceOver on iOS fires `focusout` event when moving focus to the item in the dropdown.\n    // Do not focus the input in this case, because it would break announcement for the item.\n    if (event.relatedTarget && event.relatedTarget.localName === `${this._tagNamePrefix}-item`) {\n      return false;\n    }\n\n    // Do not blur when focus moves to the overlay\n    // Also, fixes the problem with `focusout` happening when clicking on the scroll bar on Edge\n    if (event.relatedTarget === this._overlayElement) {\n      event.composedPath()[0].focus();\n      return false;\n    }\n    return true;\n  }\n\n  /** @private */\n  _onTouchend(event) {\n    if (!this.clearElement || event.composedPath()[0] !== this.clearElement) {\n      return;\n    }\n    event.preventDefault();\n    this._onClearAction();\n  }\n\n  /**\n   * Fired when the value changes.\n   *\n   * @event value-changed\n   * @param {Object} detail\n   * @param {String} detail.value the combobox value\n   */\n\n  /**\n   * Fired when selected item changes.\n   *\n   * @event selected-item-changed\n   * @param {Object} detail\n   * @param {Object|String} detail.value the selected item. Type is the same as the type of `items`.\n   */\n\n  /**\n   * Fired when the user sets a custom value.\n   * @event custom-value-set\n   * @param {String} detail the custom value\n   */\n\n  /**\n   * Fired when value changes.\n   * To comply with https://developer.mozilla.org/en-US/docs/Web/Events/change\n   * @event change\n   */\n\n  /**\n   * Fired after the `vaadin-combo-box-overlay` opens.\n   *\n   * @event vaadin-combo-box-dropdown-opened\n   */\n\n  /**\n   * Fired after the `vaadin-combo-box-overlay` closes.\n   *\n   * @event vaadin-combo-box-dropdown-closed\n   */\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/combo-box/src/vaadin-combo-box-mixin.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/combo-box/src/vaadin-combo-box-overlay-mixin.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@vaadin/combo-box/src/vaadin-combo-box-overlay-mixin.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ComboBoxOverlayMixin: () => (/* binding */ ComboBoxOverlayMixin)\n/* harmony export */ });\n/* harmony import */ var _vaadin_overlay_src_vaadin_overlay_position_mixin_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @vaadin/overlay/src/vaadin-overlay-position-mixin.js */ \"./node_modules/@vaadin/overlay/src/vaadin-overlay-position-mixin.js\");\n/**\n * @license\n * Copyright (c) 2015 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\n/**\n * @polymerMixin\n * @mixes PositionMixin\n */\nconst ComboBoxOverlayMixin = superClass => class ComboBoxOverlayMixin extends (0,_vaadin_overlay_src_vaadin_overlay_position_mixin_js__WEBPACK_IMPORTED_MODULE_0__.PositionMixin)(superClass) {\n  static get observers() {\n    return ['_setOverlayWidth(positionTarget, opened)'];\n  }\n  constructor() {\n    super();\n    this.requiredVerticalSpace = 200;\n  }\n\n  /** @protected */\n  connectedCallback() {\n    super.connectedCallback();\n    const comboBox = this._comboBox;\n    const hostDir = comboBox && comboBox.getAttribute('dir');\n    if (hostDir) {\n      this.setAttribute('dir', hostDir);\n    }\n  }\n\n  /**\n   * Override method inherited from `Overlay`\n   * to not close on position target click.\n   *\n   * @param {Event} event\n   * @return {boolean}\n   * @protected\n   */\n  _shouldCloseOnOutsideClick(event) {\n    const eventPath = event.composedPath();\n    return !eventPath.includes(this.positionTarget) && !eventPath.includes(this);\n  }\n\n  /** @protected */\n  _updateOverlayWidth() {\n    const propPrefix = this.localName;\n    this.style.setProperty(`--_${propPrefix}-default-width`, `${this.positionTarget.clientWidth}px`);\n    const customWidth = getComputedStyle(this._comboBox).getPropertyValue(`--${propPrefix}-width`);\n    if (customWidth === '') {\n      this.style.removeProperty(`--${propPrefix}-width`);\n    } else {\n      this.style.setProperty(`--${propPrefix}-width`, customWidth);\n    }\n  }\n\n  /** @private */\n  _setOverlayWidth(positionTarget, opened) {\n    if (positionTarget && opened) {\n      this._updateOverlayWidth();\n      this._updatePosition();\n    }\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21iby1ib3gvc3JjL3ZhYWRpbi1jb21iby1ib3gtb3ZlcmxheS1taXhpbi5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob21lLWFzc2lzdGFudC1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AdmFhZGluL2NvbWJvLWJveC9zcmMvdmFhZGluLWNvbWJvLWJveC1vdmVybGF5LW1peGluLmpzPzI2NzEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IChjKSAyMDE1IC0gMjAyMyBWYWFkaW4gTHRkLlxuICogVGhpcyBwcm9ncmFtIGlzIGF2YWlsYWJsZSB1bmRlciBBcGFjaGUgTGljZW5zZSBWZXJzaW9uIDIuMCwgYXZhaWxhYmxlIGF0IGh0dHBzOi8vdmFhZGluLmNvbS9saWNlbnNlL1xuICovXG5pbXBvcnQgeyBQb3NpdGlvbk1peGluIH0gZnJvbSAnQHZhYWRpbi9vdmVybGF5L3NyYy92YWFkaW4tb3ZlcmxheS1wb3NpdGlvbi1taXhpbi5qcyc7XG5cbi8qKlxuICogQHBvbHltZXJNaXhpblxuICogQG1peGVzIFBvc2l0aW9uTWl4aW5cbiAqL1xuZXhwb3J0IGNvbnN0IENvbWJvQm94T3ZlcmxheU1peGluID0gKHN1cGVyQ2xhc3MpID0+XG4gIGNsYXNzIENvbWJvQm94T3ZlcmxheU1peGluIGV4dGVuZHMgUG9zaXRpb25NaXhpbihzdXBlckNsYXNzKSB7XG4gICAgc3RhdGljIGdldCBvYnNlcnZlcnMoKSB7XG4gICAgICByZXR1cm4gWydfc2V0T3ZlcmxheVdpZHRoKHBvc2l0aW9uVGFyZ2V0LCBvcGVuZWQpJ107XG4gICAgfVxuXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICBzdXBlcigpO1xuXG4gICAgICB0aGlzLnJlcXVpcmVkVmVydGljYWxTcGFjZSA9IDIwMDtcbiAgICB9XG5cbiAgICAvKiogQHByb3RlY3RlZCAqL1xuICAgIGNvbm5lY3RlZENhbGxiYWNrKCkge1xuICAgICAgc3VwZXIuY29ubmVjdGVkQ2FsbGJhY2soKTtcblxuICAgICAgY29uc3QgY29tYm9Cb3ggPSB0aGlzLl9jb21ib0JveDtcblxuICAgICAgY29uc3QgaG9zdERpciA9IGNvbWJvQm94ICYmIGNvbWJvQm94LmdldEF0dHJpYnV0ZSgnZGlyJyk7XG4gICAgICBpZiAoaG9zdERpcikge1xuICAgICAgICB0aGlzLnNldEF0dHJpYnV0ZSgnZGlyJywgaG9zdERpcik7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogT3ZlcnJpZGUgbWV0aG9kIGluaGVyaXRlZCBmcm9tIGBPdmVybGF5YFxuICAgICAqIHRvIG5vdCBjbG9zZSBvbiBwb3NpdGlvbiB0YXJnZXQgY2xpY2suXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge0V2ZW50fSBldmVudFxuICAgICAqIEByZXR1cm4ge2Jvb2xlYW59XG4gICAgICogQHByb3RlY3RlZFxuICAgICAqL1xuICAgIF9zaG91bGRDbG9zZU9uT3V0c2lkZUNsaWNrKGV2ZW50KSB7XG4gICAgICBjb25zdCBldmVudFBhdGggPSBldmVudC5jb21wb3NlZFBhdGgoKTtcbiAgICAgIHJldHVybiAhZXZlbnRQYXRoLmluY2x1ZGVzKHRoaXMucG9zaXRpb25UYXJnZXQpICYmICFldmVudFBhdGguaW5jbHVkZXModGhpcyk7XG4gICAgfVxuXG4gICAgLyoqIEBwcm90ZWN0ZWQgKi9cbiAgICBfdXBkYXRlT3ZlcmxheVdpZHRoKCkge1xuICAgICAgY29uc3QgcHJvcFByZWZpeCA9IHRoaXMubG9jYWxOYW1lO1xuICAgICAgdGhpcy5zdHlsZS5zZXRQcm9wZXJ0eShgLS1fJHtwcm9wUHJlZml4fS1kZWZhdWx0LXdpZHRoYCwgYCR7dGhpcy5wb3NpdGlvblRhcmdldC5jbGllbnRXaWR0aH1weGApO1xuXG4gICAgICBjb25zdCBjdXN0b21XaWR0aCA9IGdldENvbXB1dGVkU3R5bGUodGhpcy5fY29tYm9Cb3gpLmdldFByb3BlcnR5VmFsdWUoYC0tJHtwcm9wUHJlZml4fS13aWR0aGApO1xuXG4gICAgICBpZiAoY3VzdG9tV2lkdGggPT09ICcnKSB7XG4gICAgICAgIHRoaXMuc3R5bGUucmVtb3ZlUHJvcGVydHkoYC0tJHtwcm9wUHJlZml4fS13aWR0aGApO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5zdHlsZS5zZXRQcm9wZXJ0eShgLS0ke3Byb3BQcmVmaXh9LXdpZHRoYCwgY3VzdG9tV2lkdGgpO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8qKiBAcHJpdmF0ZSAqL1xuICAgIF9zZXRPdmVybGF5V2lkdGgocG9zaXRpb25UYXJnZXQsIG9wZW5lZCkge1xuICAgICAgaWYgKHBvc2l0aW9uVGFyZ2V0ICYmIG9wZW5lZCkge1xuICAgICAgICB0aGlzLl91cGRhdGVPdmVybGF5V2lkdGgoKTtcblxuICAgICAgICB0aGlzLl91cGRhdGVQb3NpdGlvbigpO1xuICAgICAgfVxuICAgIH1cbiAgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/combo-box/src/vaadin-combo-box-overlay-mixin.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/combo-box/src/vaadin-combo-box-overlay.js":
/*!************************************************************************!*\
  !*** ./node_modules/@vaadin/combo-box/src/vaadin-combo-box-overlay.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ComboBoxOverlay: () => (/* binding */ ComboBoxOverlay)\n/* harmony export */ });\n/* harmony import */ var _polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polymer/polymer/polymer-element.js */ \"./node_modules/@polymer/polymer/polymer-element.js\");\n/* harmony import */ var _vaadin_component_base_src_define_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @vaadin/component-base/src/define.js */ \"./node_modules/@vaadin/component-base/src/define.js\");\n/* harmony import */ var _vaadin_component_base_src_dir_mixin_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @vaadin/component-base/src/dir-mixin.js */ \"./node_modules/@vaadin/component-base/src/dir-mixin.js\");\n/* harmony import */ var _vaadin_overlay_src_vaadin_overlay_mixin_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @vaadin/overlay/src/vaadin-overlay-mixin.js */ \"./node_modules/@vaadin/overlay/src/vaadin-overlay-mixin.js\");\n/* harmony import */ var _vaadin_overlay_src_vaadin_overlay_styles_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @vaadin/overlay/src/vaadin-overlay-styles.js */ \"./node_modules/@vaadin/overlay/src/vaadin-overlay-styles.js\");\n/* harmony import */ var _vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js */ \"./node_modules/@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js\");\n/* harmony import */ var _vaadin_combo_box_overlay_mixin_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./vaadin-combo-box-overlay-mixin.js */ \"./node_modules/@vaadin/combo-box/src/vaadin-combo-box-overlay-mixin.js\");\n/**\n * @license\n * Copyright (c) 2015 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\n\n\n\n\n\nconst comboBoxOverlayStyles = (0,_vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_5__.css)`\n  #overlay {\n    width: var(--vaadin-combo-box-overlay-width, var(--_vaadin-combo-box-overlay-default-width, auto));\n  }\n\n  [part='content'] {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n  }\n`;\n(0,_vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_5__.registerStyles)('vaadin-combo-box-overlay', [_vaadin_overlay_src_vaadin_overlay_styles_js__WEBPACK_IMPORTED_MODULE_4__.overlayStyles, comboBoxOverlayStyles], {\n  moduleId: 'vaadin-combo-box-overlay-styles'\n});\n\n/**\n * An element used internally by `<vaadin-combo-box>`. Not intended to be used separately.\n *\n * @customElement\n * @extends HTMLElement\n * @mixes ComboBoxOverlayMixin\n * @mixes DirMixin\n * @mixes OverlayMixin\n * @mixes ThemableMixin\n * @private\n */\nclass ComboBoxOverlay extends (0,_vaadin_combo_box_overlay_mixin_js__WEBPACK_IMPORTED_MODULE_6__.ComboBoxOverlayMixin)((0,_vaadin_overlay_src_vaadin_overlay_mixin_js__WEBPACK_IMPORTED_MODULE_3__.OverlayMixin)((0,_vaadin_component_base_src_dir_mixin_js__WEBPACK_IMPORTED_MODULE_2__.DirMixin)((0,_vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_5__.ThemableMixin)(_polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_0__.PolymerElement)))) {\n  static get is() {\n    return 'vaadin-combo-box-overlay';\n  }\n  static get template() {\n    return (0,_polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_0__.html)`\n      <div id=\"backdrop\" part=\"backdrop\" hidden></div>\n      <div part=\"overlay\" id=\"overlay\">\n        <div part=\"loader\"></div>\n        <div part=\"content\" id=\"content\"><slot></slot></div>\n      </div>\n    `;\n  }\n}\n(0,_vaadin_component_base_src_define_js__WEBPACK_IMPORTED_MODULE_1__.defineCustomElement)(ComboBoxOverlay);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21iby1ib3gvc3JjL3ZhYWRpbi1jb21iby1ib3gtb3ZlcmxheS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL2hvbWUtYXNzaXN0YW50LWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0B2YWFkaW4vY29tYm8tYm94L3NyYy92YWFkaW4tY29tYm8tYm94LW92ZXJsYXkuanM/NWRjMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTUgLSAyMDIzIFZhYWRpbiBMdGQuXG4gKiBUaGlzIHByb2dyYW0gaXMgYXZhaWxhYmxlIHVuZGVyIEFwYWNoZSBMaWNlbnNlIFZlcnNpb24gMi4wLCBhdmFpbGFibGUgYXQgaHR0cHM6Ly92YWFkaW4uY29tL2xpY2Vuc2UvXG4gKi9cbmltcG9ydCB7IGh0bWwsIFBvbHltZXJFbGVtZW50IH0gZnJvbSAnQHBvbHltZXIvcG9seW1lci9wb2x5bWVyLWVsZW1lbnQuanMnO1xuaW1wb3J0IHsgZGVmaW5lQ3VzdG9tRWxlbWVudCB9IGZyb20gJ0B2YWFkaW4vY29tcG9uZW50LWJhc2Uvc3JjL2RlZmluZS5qcyc7XG5pbXBvcnQgeyBEaXJNaXhpbiB9IGZyb20gJ0B2YWFkaW4vY29tcG9uZW50LWJhc2Uvc3JjL2Rpci1taXhpbi5qcyc7XG5pbXBvcnQgeyBPdmVybGF5TWl4aW4gfSBmcm9tICdAdmFhZGluL292ZXJsYXkvc3JjL3ZhYWRpbi1vdmVybGF5LW1peGluLmpzJztcbmltcG9ydCB7IG92ZXJsYXlTdHlsZXMgfSBmcm9tICdAdmFhZGluL292ZXJsYXkvc3JjL3ZhYWRpbi1vdmVybGF5LXN0eWxlcy5qcyc7XG5pbXBvcnQgeyBjc3MsIHJlZ2lzdGVyU3R5bGVzLCBUaGVtYWJsZU1peGluIH0gZnJvbSAnQHZhYWRpbi92YWFkaW4tdGhlbWFibGUtbWl4aW4vdmFhZGluLXRoZW1hYmxlLW1peGluLmpzJztcbmltcG9ydCB7IENvbWJvQm94T3ZlcmxheU1peGluIH0gZnJvbSAnLi92YWFkaW4tY29tYm8tYm94LW92ZXJsYXktbWl4aW4uanMnO1xuXG5jb25zdCBjb21ib0JveE92ZXJsYXlTdHlsZXMgPSBjc3NgXG4gICNvdmVybGF5IHtcbiAgICB3aWR0aDogdmFyKC0tdmFhZGluLWNvbWJvLWJveC1vdmVybGF5LXdpZHRoLCB2YXIoLS1fdmFhZGluLWNvbWJvLWJveC1vdmVybGF5LWRlZmF1bHQtd2lkdGgsIGF1dG8pKTtcbiAgfVxuXG4gIFtwYXJ0PSdjb250ZW50J10ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gIH1cbmA7XG5cbnJlZ2lzdGVyU3R5bGVzKCd2YWFkaW4tY29tYm8tYm94LW92ZXJsYXknLCBbb3ZlcmxheVN0eWxlcywgY29tYm9Cb3hPdmVybGF5U3R5bGVzXSwge1xuICBtb2R1bGVJZDogJ3ZhYWRpbi1jb21iby1ib3gtb3ZlcmxheS1zdHlsZXMnLFxufSk7XG5cbi8qKlxuICogQW4gZWxlbWVudCB1c2VkIGludGVybmFsbHkgYnkgYDx2YWFkaW4tY29tYm8tYm94PmAuIE5vdCBpbnRlbmRlZCB0byBiZSB1c2VkIHNlcGFyYXRlbHkuXG4gKlxuICogQGN1c3RvbUVsZW1lbnRcbiAqIEBleHRlbmRzIEhUTUxFbGVtZW50XG4gKiBAbWl4ZXMgQ29tYm9Cb3hPdmVybGF5TWl4aW5cbiAqIEBtaXhlcyBEaXJNaXhpblxuICogQG1peGVzIE92ZXJsYXlNaXhpblxuICogQG1peGVzIFRoZW1hYmxlTWl4aW5cbiAqIEBwcml2YXRlXG4gKi9cbmV4cG9ydCBjbGFzcyBDb21ib0JveE92ZXJsYXkgZXh0ZW5kcyBDb21ib0JveE92ZXJsYXlNaXhpbihPdmVybGF5TWl4aW4oRGlyTWl4aW4oVGhlbWFibGVNaXhpbihQb2x5bWVyRWxlbWVudCkpKSkge1xuICBzdGF0aWMgZ2V0IGlzKCkge1xuICAgIHJldHVybiAndmFhZGluLWNvbWJvLWJveC1vdmVybGF5JztcbiAgfVxuXG4gIHN0YXRpYyBnZXQgdGVtcGxhdGUoKSB7XG4gICAgcmV0dXJuIGh0bWxgXG4gICAgICA8ZGl2IGlkPVwiYmFja2Ryb3BcIiBwYXJ0PVwiYmFja2Ryb3BcIiBoaWRkZW4+PC9kaXY+XG4gICAgICA8ZGl2IHBhcnQ9XCJvdmVybGF5XCIgaWQ9XCJvdmVybGF5XCI+XG4gICAgICAgIDxkaXYgcGFydD1cImxvYWRlclwiPjwvZGl2PlxuICAgICAgICA8ZGl2IHBhcnQ9XCJjb250ZW50XCIgaWQ9XCJjb250ZW50XCI+PHNsb3Q+PC9zbG90PjwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgYDtcbiAgfVxufVxuXG5kZWZpbmVDdXN0b21FbGVtZW50KENvbWJvQm94T3ZlcmxheSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/combo-box/src/vaadin-combo-box-overlay.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/combo-box/src/vaadin-combo-box-placeholder.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@vaadin/combo-box/src/vaadin-combo-box-placeholder.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ComboBoxPlaceholder: () => (/* binding */ ComboBoxPlaceholder)\n/* harmony export */ });\n/**\n * @license\n * Copyright (c) 2015 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/*\n * Placeholder object class representing items being loaded.\n *\n * @private\n */\nconst ComboBoxPlaceholder = class ComboBoxPlaceholder {\n  toString() {\n    return '';\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21iby1ib3gvc3JjL3ZhYWRpbi1jb21iby1ib3gtcGxhY2Vob2xkZXIuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob21lLWFzc2lzdGFudC1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AdmFhZGluL2NvbWJvLWJveC9zcmMvdmFhZGluLWNvbWJvLWJveC1wbGFjZWhvbGRlci5qcz8zZDk5Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAoYykgMjAxNSAtIDIwMjMgVmFhZGluIEx0ZC5cbiAqIFRoaXMgcHJvZ3JhbSBpcyBhdmFpbGFibGUgdW5kZXIgQXBhY2hlIExpY2Vuc2UgVmVyc2lvbiAyLjAsIGF2YWlsYWJsZSBhdCBodHRwczovL3ZhYWRpbi5jb20vbGljZW5zZS9cbiAqL1xuXG4vKlxuICogUGxhY2Vob2xkZXIgb2JqZWN0IGNsYXNzIHJlcHJlc2VudGluZyBpdGVtcyBiZWluZyBsb2FkZWQuXG4gKlxuICogQHByaXZhdGVcbiAqL1xuZXhwb3J0IGNvbnN0IENvbWJvQm94UGxhY2Vob2xkZXIgPSBjbGFzcyBDb21ib0JveFBsYWNlaG9sZGVyIHtcbiAgdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuICcnO1xuICB9XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/combo-box/src/vaadin-combo-box-placeholder.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/combo-box/src/vaadin-combo-box-scroller-mixin.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@vaadin/combo-box/src/vaadin-combo-box-scroller-mixin.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ComboBoxScrollerMixin: () => (/* binding */ ComboBoxScrollerMixin)\n/* harmony export */ });\n/* harmony import */ var _vaadin_component_base_src_path_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @vaadin/component-base/src/path-utils.js */ \"./node_modules/@vaadin/component-base/src/path-utils.js\");\n/* harmony import */ var _vaadin_component_base_src_unique_id_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @vaadin/component-base/src/unique-id-utils.js */ \"./node_modules/@vaadin/component-base/src/unique-id-utils.js\");\n/* harmony import */ var _vaadin_component_base_src_virtualizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @vaadin/component-base/src/virtualizer.js */ \"./node_modules/@vaadin/component-base/src/virtualizer.js\");\n/* harmony import */ var _vaadin_combo_box_placeholder_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./vaadin-combo-box-placeholder.js */ \"./node_modules/@vaadin/combo-box/src/vaadin-combo-box-placeholder.js\");\n/**\n * @license\n * Copyright (c) 2015 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\n\n\n\n/**\n * @polymerMixin\n */\nconst ComboBoxScrollerMixin = superClass => class ComboBoxScrollerMixin extends superClass {\n  static get properties() {\n    return {\n      /**\n       * A full set of items to filter the visible options from.\n       * Set to an empty array when combo-box is not opened.\n       */\n      items: {\n        type: Array,\n        observer: '__itemsChanged'\n      },\n      /**\n       * Index of an item that has focus outline and is scrolled into view.\n       * The actual focus still remains in the input field.\n       */\n      focusedIndex: {\n        type: Number,\n        observer: '__focusedIndexChanged'\n      },\n      /**\n       * Set to true while combo-box fetches new page from the data provider.\n       */\n      loading: {\n        type: Boolean,\n        observer: '__loadingChanged'\n      },\n      /**\n       * Whether the combo-box is currently opened or not. If set to false,\n       * calling `scrollIntoView` does not have any effect.\n       */\n      opened: {\n        type: Boolean,\n        observer: '__openedChanged'\n      },\n      /**\n       * The selected item from the `items` array.\n       */\n      selectedItem: {\n        type: Object,\n        observer: '__selectedItemChanged'\n      },\n      /**\n       * Path for the id of the item, used to detect whether the item is selected.\n       */\n      itemIdPath: {\n        type: String\n      },\n      /**\n       * Reference to the owner (combo-box owner), used by the item elements.\n       */\n      owner: {\n        type: Object\n      },\n      /**\n       * Function used to set a label for every combo-box item.\n       */\n      getItemLabel: {\n        type: Object\n      },\n      /**\n       * Function used to render the content of every combo-box item.\n       */\n      renderer: {\n        type: Object,\n        observer: '__rendererChanged'\n      },\n      /**\n       * Used to propagate the `theme` attribute from the host element.\n       */\n      theme: {\n        type: String\n      }\n    };\n  }\n  constructor() {\n    super();\n    this.__boundOnItemClick = this.__onItemClick.bind(this);\n  }\n\n  /** @private */\n  get _viewportTotalPaddingBottom() {\n    if (this._cachedViewportTotalPaddingBottom === undefined) {\n      const itemsStyle = window.getComputedStyle(this.$.selector);\n      this._cachedViewportTotalPaddingBottom = [itemsStyle.paddingBottom, itemsStyle.borderBottomWidth].map(v => {\n        return parseInt(v, 10);\n      }).reduce((sum, v) => {\n        return sum + v;\n      });\n    }\n    return this._cachedViewportTotalPaddingBottom;\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n    this.setAttribute('role', 'listbox');\n\n    // Ensure every instance has unique ID\n    this.id = `${this.localName}-${(0,_vaadin_component_base_src_unique_id_utils_js__WEBPACK_IMPORTED_MODULE_1__.generateUniqueId)()}`;\n\n    // Allow extensions to customize tag name for the items\n    this.__hostTagName = this.constructor.is.replace('-scroller', '');\n    this.addEventListener('click', e => e.stopPropagation());\n    this.__patchWheelOverScrolling();\n    this.__virtualizer = new _vaadin_component_base_src_virtualizer_js__WEBPACK_IMPORTED_MODULE_2__.Virtualizer({\n      createElements: this.__createElements.bind(this),\n      updateElement: this._updateElement.bind(this),\n      elementsContainer: this,\n      scrollTarget: this,\n      scrollContainer: this.$.selector\n    });\n  }\n\n  /**\n   * Requests an update for the virtualizer to re-render items.\n   */\n  requestContentUpdate() {\n    if (this.__virtualizer) {\n      this.__virtualizer.update();\n    }\n  }\n\n  /**\n   * Scrolls an item at given index into view and adjusts `scrollTop`\n   * so that the element gets fully visible on Arrow Down key press.\n   * @param {number} index\n   */\n  scrollIntoView(index) {\n    if (!(this.opened && index >= 0)) {\n      return;\n    }\n    const visibleItemsCount = this._visibleItemsCount();\n    let targetIndex = index;\n    if (index > this.__virtualizer.lastVisibleIndex - 1) {\n      // Index is below the bottom, scrolling down. Make the item appear at the bottom.\n      // First scroll to target (will be at the top of the scroller) to make sure it's rendered.\n      this.__virtualizer.scrollToIndex(index);\n      // Then calculate the index for the following scroll (to get the target to bottom of the scroller).\n      targetIndex = index - visibleItemsCount + 1;\n    } else if (index > this.__virtualizer.firstVisibleIndex) {\n      // The item is already visible, scrolling is unnecessary per se. But we need to trigger iron-list to set\n      // the correct scrollTop on the scrollTarget. Scrolling to firstVisibleIndex.\n      targetIndex = this.__virtualizer.firstVisibleIndex;\n    }\n    this.__virtualizer.scrollToIndex(Math.max(0, targetIndex));\n\n    // Sometimes the item is partly below the bottom edge, detect and adjust.\n    const lastPhysicalItem = [...this.children].find(el => !el.hidden && el.index === this.__virtualizer.lastVisibleIndex);\n    if (!lastPhysicalItem || index !== lastPhysicalItem.index) {\n      return;\n    }\n    const lastPhysicalItemRect = lastPhysicalItem.getBoundingClientRect();\n    const scrollerRect = this.getBoundingClientRect();\n    const scrollTopAdjust = lastPhysicalItemRect.bottom - scrollerRect.bottom + this._viewportTotalPaddingBottom;\n    if (scrollTopAdjust > 0) {\n      this.scrollTop += scrollTopAdjust;\n    }\n  }\n\n  /**\n   * @param {string | object} item\n   * @param {string | object} selectedItem\n   * @param {string} itemIdPath\n   * @protected\n   */\n  _isItemSelected(item, selectedItem, itemIdPath) {\n    if (item instanceof _vaadin_combo_box_placeholder_js__WEBPACK_IMPORTED_MODULE_3__.ComboBoxPlaceholder) {\n      return false;\n    } else if (itemIdPath && item !== undefined && selectedItem !== undefined) {\n      return (0,_vaadin_component_base_src_path_utils_js__WEBPACK_IMPORTED_MODULE_0__.get)(itemIdPath, item) === (0,_vaadin_component_base_src_path_utils_js__WEBPACK_IMPORTED_MODULE_0__.get)(itemIdPath, selectedItem);\n    }\n    return item === selectedItem;\n  }\n\n  /** @private */\n  __itemsChanged(items) {\n    if (this.__virtualizer && items) {\n      this.__virtualizer.size = items.length;\n      this.__virtualizer.flush();\n      this.requestContentUpdate();\n    }\n  }\n\n  /** @private */\n  __loadingChanged() {\n    this.requestContentUpdate();\n  }\n\n  /** @private */\n  __openedChanged(opened) {\n    if (opened) {\n      this.requestContentUpdate();\n    }\n  }\n\n  /** @private */\n  __selectedItemChanged() {\n    this.requestContentUpdate();\n  }\n\n  /** @private */\n  __focusedIndexChanged(index, oldIndex) {\n    if (index !== oldIndex) {\n      this.requestContentUpdate();\n    }\n\n    // Do not jump back to the previously focused item while loading\n    // when requesting next page from the data provider on scroll.\n    if (index >= 0 && !this.loading) {\n      this.scrollIntoView(index);\n    }\n  }\n\n  /** @private */\n  __rendererChanged(renderer, oldRenderer) {\n    if (renderer || oldRenderer) {\n      this.requestContentUpdate();\n    }\n  }\n\n  /** @private */\n  __createElements(count) {\n    return [...Array(count)].map(() => {\n      const item = document.createElement(`${this.__hostTagName}-item`);\n      item.addEventListener('click', this.__boundOnItemClick);\n      // Negative tabindex prevents the item content from being focused.\n      item.tabIndex = '-1';\n      item.style.width = '100%';\n      return item;\n    });\n  }\n\n  /**\n   * @param {HTMLElement} el\n   * @param {number} index\n   * @protected\n   */\n  _updateElement(el, index) {\n    const item = this.items[index];\n    const focusedIndex = this.focusedIndex;\n    const selected = this._isItemSelected(item, this.selectedItem, this.itemIdPath);\n    el.setProperties({\n      item,\n      index,\n      label: this.getItemLabel(item),\n      selected,\n      renderer: this.renderer,\n      focused: !this.loading && focusedIndex === index\n    });\n    el.id = `${this.__hostTagName}-item-${index}`;\n    el.setAttribute('role', index !== undefined ? 'option' : false);\n    el.setAttribute('aria-selected', selected.toString());\n    el.setAttribute('aria-posinset', index + 1);\n    el.setAttribute('aria-setsize', this.items.length);\n    if (this.theme) {\n      el.setAttribute('theme', this.theme);\n    } else {\n      el.removeAttribute('theme');\n    }\n    if (item instanceof _vaadin_combo_box_placeholder_js__WEBPACK_IMPORTED_MODULE_3__.ComboBoxPlaceholder) {\n      this.__requestItemByIndex(index);\n    }\n  }\n\n  /** @private */\n  __onItemClick(e) {\n    this.dispatchEvent(new CustomEvent('selection-changed', {\n      detail: {\n        item: e.currentTarget.item\n      }\n    }));\n  }\n\n  /**\n   * We want to prevent the kinetic scrolling energy from being transferred from the overlay contents over to the parent.\n   * Further improvement ideas: after the contents have been scrolled to the top or bottom and scrolling has stopped, it could allow\n   * scrolling the parent similarly to touch scrolling.\n   * @private\n   */\n  __patchWheelOverScrolling() {\n    this.$.selector.addEventListener('wheel', e => {\n      const scrolledToTop = this.scrollTop === 0;\n      const scrolledToBottom = this.scrollHeight - this.scrollTop - this.clientHeight <= 1;\n      if (scrolledToTop && e.deltaY < 0) {\n        e.preventDefault();\n      } else if (scrolledToBottom && e.deltaY > 0) {\n        e.preventDefault();\n      }\n    });\n  }\n\n  /**\n   * Dispatches an `index-requested` event for the given index to notify\n   * the data provider that it should start loading the page containing the requested index.\n   *\n   * The event is dispatched asynchronously to prevent an immediate page request and therefore\n   * a possible infinite recursion in case the data provider implements page request cancelation logic\n   * by invoking data provider page callbacks with an empty array.\n   * The infinite recursion may occur otherwise since invoking a data provider page callback with an empty array\n   * triggers a synchronous scroller update and, if the callback corresponds to the currently visible page,\n   * the scroller will synchronously request the page again which may lead to looping in the end.\n   * That was the case for the Flow counterpart:\n   * https://github.com/vaadin/flow-components/issues/3553#issuecomment-1239344828\n   * @private\n   */\n  __requestItemByIndex(index) {\n    requestAnimationFrame(() => {\n      this.dispatchEvent(new CustomEvent('index-requested', {\n        detail: {\n          index,\n          currentScrollerPos: this._oldScrollerPosition\n        }\n      }));\n    });\n  }\n\n  /** @private */\n  _visibleItemsCount() {\n    // Ensure items are positioned\n    this.__virtualizer.scrollToIndex(this.__virtualizer.firstVisibleIndex);\n    const hasItems = this.__virtualizer.size > 0;\n    return hasItems ? this.__virtualizer.lastVisibleIndex - this.__virtualizer.firstVisibleIndex + 1 : 0;\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/combo-box/src/vaadin-combo-box-scroller-mixin.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/combo-box/src/vaadin-combo-box-scroller.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@vaadin/combo-box/src/vaadin-combo-box-scroller.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ComboBoxScroller: () => (/* binding */ ComboBoxScroller)\n/* harmony export */ });\n/* harmony import */ var _polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polymer/polymer/polymer-element.js */ \"./node_modules/@polymer/polymer/polymer-element.js\");\n/* harmony import */ var _vaadin_component_base_src_define_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @vaadin/component-base/src/define.js */ \"./node_modules/@vaadin/component-base/src/define.js\");\n/* harmony import */ var _vaadin_combo_box_scroller_mixin_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./vaadin-combo-box-scroller-mixin.js */ \"./node_modules/@vaadin/combo-box/src/vaadin-combo-box-scroller-mixin.js\");\n/**\n * @license\n * Copyright (c) 2015 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\n\n\n/**\n * An element used internally by `<vaadin-combo-box>`. Not intended to be used separately.\n *\n * @customElement\n * @extends HTMLElement\n * @mixes ComboBoxScrollerMixin\n * @private\n */\nclass ComboBoxScroller extends (0,_vaadin_combo_box_scroller_mixin_js__WEBPACK_IMPORTED_MODULE_2__.ComboBoxScrollerMixin)(_polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_0__.PolymerElement) {\n  static get is() {\n    return 'vaadin-combo-box-scroller';\n  }\n  static get template() {\n    return (0,_polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_0__.html)`\n      <style>\n        :host {\n          display: block;\n          min-height: 1px;\n          overflow: auto;\n\n          /* Fixes item background from getting on top of scrollbars on Safari */\n          transform: translate3d(0, 0, 0);\n\n          /* Enable momentum scrolling on iOS */\n          -webkit-overflow-scrolling: touch;\n\n          /* Fixes scrollbar disappearing when 'Show scroll bars: Always' enabled in Safari */\n          box-shadow: 0 0 0 white;\n        }\n\n        #selector {\n          border-width: var(--_vaadin-combo-box-items-container-border-width);\n          border-style: var(--_vaadin-combo-box-items-container-border-style);\n          border-color: var(--_vaadin-combo-box-items-container-border-color, transparent);\n          position: relative;\n        }\n      </style>\n      <div id=\"selector\">\n        <slot></slot>\n      </div>\n    `;\n  }\n}\n(0,_vaadin_component_base_src_define_js__WEBPACK_IMPORTED_MODULE_1__.defineCustomElement)(ComboBoxScroller);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21iby1ib3gvc3JjL3ZhYWRpbi1jb21iby1ib3gtc2Nyb2xsZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL2hvbWUtYXNzaXN0YW50LWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0B2YWFkaW4vY29tYm8tYm94L3NyYy92YWFkaW4tY29tYm8tYm94LXNjcm9sbGVyLmpzP2YwZjMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IChjKSAyMDE1IC0gMjAyMyBWYWFkaW4gTHRkLlxuICogVGhpcyBwcm9ncmFtIGlzIGF2YWlsYWJsZSB1bmRlciBBcGFjaGUgTGljZW5zZSBWZXJzaW9uIDIuMCwgYXZhaWxhYmxlIGF0IGh0dHBzOi8vdmFhZGluLmNvbS9saWNlbnNlL1xuICovXG5pbXBvcnQgeyBodG1sLCBQb2x5bWVyRWxlbWVudCB9IGZyb20gJ0Bwb2x5bWVyL3BvbHltZXIvcG9seW1lci1lbGVtZW50LmpzJztcbmltcG9ydCB7IGRlZmluZUN1c3RvbUVsZW1lbnQgfSBmcm9tICdAdmFhZGluL2NvbXBvbmVudC1iYXNlL3NyYy9kZWZpbmUuanMnO1xuaW1wb3J0IHsgQ29tYm9Cb3hTY3JvbGxlck1peGluIH0gZnJvbSAnLi92YWFkaW4tY29tYm8tYm94LXNjcm9sbGVyLW1peGluLmpzJztcblxuLyoqXG4gKiBBbiBlbGVtZW50IHVzZWQgaW50ZXJuYWxseSBieSBgPHZhYWRpbi1jb21iby1ib3g+YC4gTm90IGludGVuZGVkIHRvIGJlIHVzZWQgc2VwYXJhdGVseS5cbiAqXG4gKiBAY3VzdG9tRWxlbWVudFxuICogQGV4dGVuZHMgSFRNTEVsZW1lbnRcbiAqIEBtaXhlcyBDb21ib0JveFNjcm9sbGVyTWl4aW5cbiAqIEBwcml2YXRlXG4gKi9cbmV4cG9ydCBjbGFzcyBDb21ib0JveFNjcm9sbGVyIGV4dGVuZHMgQ29tYm9Cb3hTY3JvbGxlck1peGluKFBvbHltZXJFbGVtZW50KSB7XG4gIHN0YXRpYyBnZXQgaXMoKSB7XG4gICAgcmV0dXJuICd2YWFkaW4tY29tYm8tYm94LXNjcm9sbGVyJztcbiAgfVxuXG4gIHN0YXRpYyBnZXQgdGVtcGxhdGUoKSB7XG4gICAgcmV0dXJuIGh0bWxgXG4gICAgICA8c3R5bGU+XG4gICAgICAgIDpob3N0IHtcbiAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICBtaW4taGVpZ2h0OiAxcHg7XG4gICAgICAgICAgb3ZlcmZsb3c6IGF1dG87XG5cbiAgICAgICAgICAvKiBGaXhlcyBpdGVtIGJhY2tncm91bmQgZnJvbSBnZXR0aW5nIG9uIHRvcCBvZiBzY3JvbGxiYXJzIG9uIFNhZmFyaSAqL1xuICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgMCwgMCk7XG5cbiAgICAgICAgICAvKiBFbmFibGUgbW9tZW50dW0gc2Nyb2xsaW5nIG9uIGlPUyAqL1xuICAgICAgICAgIC13ZWJraXQtb3ZlcmZsb3ctc2Nyb2xsaW5nOiB0b3VjaDtcblxuICAgICAgICAgIC8qIEZpeGVzIHNjcm9sbGJhciBkaXNhcHBlYXJpbmcgd2hlbiAnU2hvdyBzY3JvbGwgYmFyczogQWx3YXlzJyBlbmFibGVkIGluIFNhZmFyaSAqL1xuICAgICAgICAgIGJveC1zaGFkb3c6IDAgMCAwIHdoaXRlO1xuICAgICAgICB9XG5cbiAgICAgICAgI3NlbGVjdG9yIHtcbiAgICAgICAgICBib3JkZXItd2lkdGg6IHZhcigtLV92YWFkaW4tY29tYm8tYm94LWl0ZW1zLWNvbnRhaW5lci1ib3JkZXItd2lkdGgpO1xuICAgICAgICAgIGJvcmRlci1zdHlsZTogdmFyKC0tX3ZhYWRpbi1jb21iby1ib3gtaXRlbXMtY29udGFpbmVyLWJvcmRlci1zdHlsZSk7XG4gICAgICAgICAgYm9yZGVyLWNvbG9yOiB2YXIoLS1fdmFhZGluLWNvbWJvLWJveC1pdGVtcy1jb250YWluZXItYm9yZGVyLWNvbG9yLCB0cmFuc3BhcmVudCk7XG4gICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICB9XG4gICAgICA8L3N0eWxlPlxuICAgICAgPGRpdiBpZD1cInNlbGVjdG9yXCI+XG4gICAgICAgIDxzbG90Pjwvc2xvdD5cbiAgICAgIDwvZGl2PlxuICAgIGA7XG4gIH1cbn1cblxuZGVmaW5lQ3VzdG9tRWxlbWVudChDb21ib0JveFNjcm9sbGVyKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/combo-box/src/vaadin-combo-box-scroller.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/combo-box/theme/material/vaadin-combo-box-item-styles.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@vaadin/combo-box/theme/material/vaadin-combo-box-item-styles.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   comboBoxItem: () => (/* binding */ comboBoxItem)\n/* harmony export */ });\n/* harmony import */ var _vaadin_vaadin_material_styles_color_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @vaadin/vaadin-material-styles/color.js */ \"./node_modules/@vaadin/vaadin-material-styles/color.js\");\n/* harmony import */ var _vaadin_vaadin_material_styles_font_icons_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @vaadin/vaadin-material-styles/font-icons.js */ \"./node_modules/@vaadin/vaadin-material-styles/font-icons.js\");\n/* harmony import */ var _vaadin_vaadin_material_styles_typography_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @vaadin/vaadin-material-styles/typography.js */ \"./node_modules/@vaadin/vaadin-material-styles/typography.js\");\n/* harmony import */ var _vaadin_item_theme_material_vaadin_item_styles_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @vaadin/item/theme/material/vaadin-item-styles.js */ \"./node_modules/@vaadin/item/theme/material/vaadin-item-styles.js\");\n/* harmony import */ var _vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js */ \"./node_modules/@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js\");\n\n\n\n\n\nconst comboBoxItem = (0,_vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_4__.css)`\n  :host {\n    cursor: pointer;\n    -webkit-tap-highlight-color: transparent;\n    padding: 4px 10px;\n    --_material-item-selected-icon-display: block;\n  }\n`;\n(0,_vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_4__.registerStyles)('vaadin-combo-box-item', [_vaadin_item_theme_material_vaadin_item_styles_js__WEBPACK_IMPORTED_MODULE_3__.item, comboBoxItem], {\n  moduleId: 'material-combo-box-item'\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21iby1ib3gvdGhlbWUvbWF0ZXJpYWwvdmFhZGluLWNvbWJvLWJveC1pdGVtLXN0eWxlcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2hvbWUtYXNzaXN0YW50LWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0B2YWFkaW4vY29tYm8tYm94L3RoZW1lL21hdGVyaWFsL3ZhYWRpbi1jb21iby1ib3gtaXRlbS1zdHlsZXMuanM/OWVlMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJ0B2YWFkaW4vdmFhZGluLW1hdGVyaWFsLXN0eWxlcy9jb2xvci5qcyc7XG5pbXBvcnQgJ0B2YWFkaW4vdmFhZGluLW1hdGVyaWFsLXN0eWxlcy9mb250LWljb25zLmpzJztcbmltcG9ydCAnQHZhYWRpbi92YWFkaW4tbWF0ZXJpYWwtc3R5bGVzL3R5cG9ncmFwaHkuanMnO1xuaW1wb3J0IHsgaXRlbSB9IGZyb20gJ0B2YWFkaW4vaXRlbS90aGVtZS9tYXRlcmlhbC92YWFkaW4taXRlbS1zdHlsZXMuanMnO1xuaW1wb3J0IHsgY3NzLCByZWdpc3RlclN0eWxlcyB9IGZyb20gJ0B2YWFkaW4vdmFhZGluLXRoZW1hYmxlLW1peGluL3ZhYWRpbi10aGVtYWJsZS1taXhpbi5qcyc7XG5cbmNvbnN0IGNvbWJvQm94SXRlbSA9IGNzc2BcbiAgOmhvc3Qge1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIHBhZGRpbmc6IDRweCAxMHB4O1xuICAgIC0tX21hdGVyaWFsLWl0ZW0tc2VsZWN0ZWQtaWNvbi1kaXNwbGF5OiBibG9jaztcbiAgfVxuYDtcblxucmVnaXN0ZXJTdHlsZXMoJ3ZhYWRpbi1jb21iby1ib3gtaXRlbScsIFtpdGVtLCBjb21ib0JveEl0ZW1dLCB7XG4gIG1vZHVsZUlkOiAnbWF0ZXJpYWwtY29tYm8tYm94LWl0ZW0nLFxufSk7XG5cbmV4cG9ydCB7IGNvbWJvQm94SXRlbSB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/combo-box/theme/material/vaadin-combo-box-item-styles.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/combo-box/theme/material/vaadin-combo-box-light.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@vaadin/combo-box/theme/material/vaadin-combo-box-light.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _vaadin_combo_box_item_styles_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vaadin-combo-box-item-styles.js */ \"./node_modules/@vaadin/combo-box/theme/material/vaadin-combo-box-item-styles.js\");\n/* harmony import */ var _vaadin_combo_box_overlay_styles_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./vaadin-combo-box-overlay-styles.js */ \"./node_modules/@vaadin/combo-box/theme/material/vaadin-combo-box-overlay-styles.js\");\n/* harmony import */ var _src_vaadin_combo_box_light_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../src/vaadin-combo-box-light.js */ \"./node_modules/@vaadin/combo-box/src/vaadin-combo-box-light.js\");\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21iby1ib3gvdGhlbWUvbWF0ZXJpYWwvdmFhZGluLWNvbWJvLWJveC1saWdodC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2hvbWUtYXNzaXN0YW50LWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0B2YWFkaW4vY29tYm8tYm94L3RoZW1lL21hdGVyaWFsL3ZhYWRpbi1jb21iby1ib3gtbGlnaHQuanM/ZmE5OCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJy4vdmFhZGluLWNvbWJvLWJveC1pdGVtLXN0eWxlcy5qcyc7XG5pbXBvcnQgJy4vdmFhZGluLWNvbWJvLWJveC1vdmVybGF5LXN0eWxlcy5qcyc7XG5pbXBvcnQgJy4uLy4uL3NyYy92YWFkaW4tY29tYm8tYm94LWxpZ2h0LmpzJztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/combo-box/theme/material/vaadin-combo-box-light.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/combo-box/theme/material/vaadin-combo-box-overlay-styles.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@vaadin/combo-box/theme/material/vaadin-combo-box-overlay-styles.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   comboBoxLoader: () => (/* binding */ comboBoxLoader),\n/* harmony export */   comboBoxOverlay: () => (/* binding */ comboBoxOverlay)\n/* harmony export */ });\n/* harmony import */ var _vaadin_vaadin_material_styles_color_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @vaadin/vaadin-material-styles/color.js */ \"./node_modules/@vaadin/vaadin-material-styles/color.js\");\n/* harmony import */ var _vaadin_vaadin_material_styles_mixins_loader_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @vaadin/vaadin-material-styles/mixins/loader.js */ \"./node_modules/@vaadin/vaadin-material-styles/mixins/loader.js\");\n/* harmony import */ var _vaadin_vaadin_material_styles_mixins_menu_overlay_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @vaadin/vaadin-material-styles/mixins/menu-overlay.js */ \"./node_modules/@vaadin/vaadin-material-styles/mixins/menu-overlay.js\");\n/* harmony import */ var _vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js */ \"./node_modules/@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js\");\n\n\n\n\nconst comboBoxOverlay = (0,_vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_3__.css)`\n  [part='overlay'] {\n    position: relative;\n    overflow: visible;\n    border-top-left-radius: 0;\n    border-top-right-radius: 0;\n  }\n\n  [part='content'] {\n    padding: 0;\n  }\n`;\nconst comboBoxLoader = (0,_vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_3__.css)`\n  [part~='loader'] {\n    position: absolute;\n    z-index: 1;\n    top: -2px;\n    left: 0;\n    right: 0;\n  }\n`;\n(0,_vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_3__.registerStyles)('vaadin-combo-box-overlay', [_vaadin_vaadin_material_styles_mixins_menu_overlay_js__WEBPACK_IMPORTED_MODULE_2__.menuOverlay, comboBoxOverlay, _vaadin_vaadin_material_styles_mixins_loader_js__WEBPACK_IMPORTED_MODULE_1__.loader, comboBoxLoader, (0,_vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_3__.css)`\n      :host {\n        --_vaadin-combo-box-items-container-border-width: 8px 0;\n        --_vaadin-combo-box-items-container-border-style: solid;\n      }\n    `], {\n  moduleId: 'material-combo-box-overlay'\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21iby1ib3gvdGhlbWUvbWF0ZXJpYWwvdmFhZGluLWNvbWJvLWJveC1vdmVybGF5LXN0eWxlcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBUUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob21lLWFzc2lzdGFudC1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AdmFhZGluL2NvbWJvLWJveC90aGVtZS9tYXRlcmlhbC92YWFkaW4tY29tYm8tYm94LW92ZXJsYXktc3R5bGVzLmpzPzA4YjYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICdAdmFhZGluL3ZhYWRpbi1tYXRlcmlhbC1zdHlsZXMvY29sb3IuanMnO1xuaW1wb3J0IHsgbG9hZGVyIH0gZnJvbSAnQHZhYWRpbi92YWFkaW4tbWF0ZXJpYWwtc3R5bGVzL21peGlucy9sb2FkZXIuanMnO1xuaW1wb3J0IHsgbWVudU92ZXJsYXkgfSBmcm9tICdAdmFhZGluL3ZhYWRpbi1tYXRlcmlhbC1zdHlsZXMvbWl4aW5zL21lbnUtb3ZlcmxheS5qcyc7XG5pbXBvcnQgeyBjc3MsIHJlZ2lzdGVyU3R5bGVzIH0gZnJvbSAnQHZhYWRpbi92YWFkaW4tdGhlbWFibGUtbWl4aW4vdmFhZGluLXRoZW1hYmxlLW1peGluLmpzJztcblxuY29uc3QgY29tYm9Cb3hPdmVybGF5ID0gY3NzYFxuICBbcGFydD0nb3ZlcmxheSddIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgb3ZlcmZsb3c6IHZpc2libGU7XG4gICAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMDtcbiAgICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMDtcbiAgfVxuXG4gIFtwYXJ0PSdjb250ZW50J10ge1xuICAgIHBhZGRpbmc6IDA7XG4gIH1cbmA7XG5cbmNvbnN0IGNvbWJvQm94TG9hZGVyID0gY3NzYFxuICBbcGFydH49J2xvYWRlciddIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgei1pbmRleDogMTtcbiAgICB0b3A6IC0ycHg7XG4gICAgbGVmdDogMDtcbiAgICByaWdodDogMDtcbiAgfVxuYDtcblxucmVnaXN0ZXJTdHlsZXMoXG4gICd2YWFkaW4tY29tYm8tYm94LW92ZXJsYXknLFxuICBbXG4gICAgbWVudU92ZXJsYXksXG4gICAgY29tYm9Cb3hPdmVybGF5LFxuICAgIGxvYWRlcixcbiAgICBjb21ib0JveExvYWRlcixcbiAgICBjc3NgXG4gICAgICA6aG9zdCB7XG4gICAgICAgIC0tX3ZhYWRpbi1jb21iby1ib3gtaXRlbXMtY29udGFpbmVyLWJvcmRlci13aWR0aDogOHB4IDA7XG4gICAgICAgIC0tX3ZhYWRpbi1jb21iby1ib3gtaXRlbXMtY29udGFpbmVyLWJvcmRlci1zdHlsZTogc29saWQ7XG4gICAgICB9XG4gICAgYCxcbiAgXSxcbiAgeyBtb2R1bGVJZDogJ21hdGVyaWFsLWNvbWJvLWJveC1vdmVybGF5JyB9LFxuKTtcblxuZXhwb3J0IHsgY29tYm9Cb3hMb2FkZXIsIGNvbWJvQm94T3ZlcmxheSB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/combo-box/theme/material/vaadin-combo-box-overlay-styles.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/component-base/src/async.js":
/*!**********************************************************!*\
  !*** ./node_modules/@vaadin/component-base/src/async.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   animationFrame: () => (/* binding */ animationFrame),\n/* harmony export */   idlePeriod: () => (/* binding */ idlePeriod),\n/* harmony export */   microTask: () => (/* binding */ microTask),\n/* harmony export */   timeOut: () => (/* binding */ timeOut)\n/* harmony export */ });\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @fileoverview\n *\n * This module provides a number of strategies for enqueuing asynchronous\n * tasks. Each sub-module provides a standard `run(fn)` interface that returns a\n * handle, and a `cancel(handle)` interface for canceling async tasks before\n * they run.\n *\n * @summary Module that provides a number of strategies for enqueuing\n * asynchronous tasks.\n */\n\nlet microtaskCurrHandle = 0;\nlet microtaskLastHandle = 0;\nconst microtaskCallbacks = [];\nlet microtaskScheduled = false;\nfunction microtaskFlush() {\n  microtaskScheduled = false;\n  const len = microtaskCallbacks.length;\n  for (let i = 0; i < len; i++) {\n    const cb = microtaskCallbacks[i];\n    if (cb) {\n      try {\n        cb();\n      } catch (e) {\n        setTimeout(() => {\n          throw e;\n        });\n      }\n    }\n  }\n  microtaskCallbacks.splice(0, len);\n  microtaskLastHandle += len;\n}\n\n/**\n * Async interface wrapper around `setTimeout`.\n *\n * @namespace\n * @summary Async interface wrapper around `setTimeout`.\n */\nconst timeOut = {\n  /**\n   * Returns a sub-module with the async interface providing the provided\n   * delay.\n   *\n   * @memberof timeOut\n   * @param {number=} delay Time to wait before calling callbacks in ms\n   * @return {!AsyncInterface} An async timeout interface\n   */\n  after(delay) {\n    return {\n      run(fn) {\n        return window.setTimeout(fn, delay);\n      },\n      cancel(handle) {\n        window.clearTimeout(handle);\n      }\n    };\n  },\n  /**\n   * Enqueues a function called in the next task.\n   *\n   * @memberof timeOut\n   * @param {!Function} fn Callback to run\n   * @param {number=} delay Delay in milliseconds\n   * @return {number} Handle used for canceling task\n   */\n  run(fn, delay) {\n    return window.setTimeout(fn, delay);\n  },\n  /**\n   * Cancels a previously enqueued `timeOut` callback.\n   *\n   * @memberof timeOut\n   * @param {number} handle Handle returned from `run` of callback to cancel\n   * @return {void}\n   */\n  cancel(handle) {\n    window.clearTimeout(handle);\n  }\n};\n\n\n/**\n * Async interface wrapper around `requestAnimationFrame`.\n *\n * @namespace\n * @summary Async interface wrapper around `requestAnimationFrame`.\n */\nconst animationFrame = {\n  /**\n   * Enqueues a function called at `requestAnimationFrame` timing.\n   *\n   * @memberof animationFrame\n   * @param {function(number):void} fn Callback to run\n   * @return {number} Handle used for canceling task\n   */\n  run(fn) {\n    return window.requestAnimationFrame(fn);\n  },\n  /**\n   * Cancels a previously enqueued `animationFrame` callback.\n   *\n   * @memberof animationFrame\n   * @param {number} handle Handle returned from `run` of callback to cancel\n   * @return {void}\n   */\n  cancel(handle) {\n    window.cancelAnimationFrame(handle);\n  }\n};\n\n\n/**\n * Async interface wrapper around `requestIdleCallback`.  Falls back to\n * `setTimeout` on browsers that do not support `requestIdleCallback`.\n *\n * @namespace\n * @summary Async interface wrapper around `requestIdleCallback`.\n */\nconst idlePeriod = {\n  /**\n   * Enqueues a function called at `requestIdleCallback` timing.\n   *\n   * @memberof idlePeriod\n   * @param {function(!IdleDeadline):void} fn Callback to run\n   * @return {number} Handle used for canceling task\n   */\n  run(fn) {\n    return window.requestIdleCallback ? window.requestIdleCallback(fn) : window.setTimeout(fn, 16);\n  },\n  /**\n   * Cancels a previously enqueued `idlePeriod` callback.\n   *\n   * @memberof idlePeriod\n   * @param {number} handle Handle returned from `run` of callback to cancel\n   * @return {void}\n   */\n  cancel(handle) {\n    if (window.cancelIdleCallback) {\n      window.cancelIdleCallback(handle);\n    } else {\n      window.clearTimeout(handle);\n    }\n  }\n};\n\n\n/**\n * Async interface for enqueuing callbacks that run at microtask timing.\n *\n * @namespace\n * @summary Async interface for enqueuing callbacks that run at microtask\n *   timing.\n */\nconst microTask = {\n  /**\n   * Enqueues a function called at microtask timing.\n   *\n   * @memberof microTask\n   * @param {!Function=} callback Callback to run\n   * @return {number} Handle used for canceling task\n   */\n  run(callback) {\n    if (!microtaskScheduled) {\n      microtaskScheduled = true;\n      queueMicrotask(() => microtaskFlush());\n    }\n    microtaskCallbacks.push(callback);\n    const result = microtaskCurrHandle;\n    microtaskCurrHandle += 1;\n    return result;\n  },\n  /**\n   * Cancels a previously enqueued `microTask` callback.\n   *\n   * @memberof microTask\n   * @param {number} handle Handle returned from `run` of callback to cancel\n   * @return {void}\n   */\n  cancel(handle) {\n    const idx = handle - microtaskLastHandle;\n    if (idx >= 0) {\n      if (!microtaskCallbacks[idx]) {\n        throw new Error(`invalid async handle: ${handle}`);\n      }\n      microtaskCallbacks[idx] = null;\n    }\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/component-base/src/async.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/component-base/src/browser-utils.js":
/*!******************************************************************!*\
  !*** ./node_modules/@vaadin/component-base/src/browser-utils.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isAndroid: () => (/* binding */ isAndroid),\n/* harmony export */   isChrome: () => (/* binding */ isChrome),\n/* harmony export */   isFirefox: () => (/* binding */ isFirefox),\n/* harmony export */   isIOS: () => (/* binding */ isIOS),\n/* harmony export */   isIPad: () => (/* binding */ isIPad),\n/* harmony export */   isIPhone: () => (/* binding */ isIPhone),\n/* harmony export */   isSafari: () => (/* binding */ isSafari),\n/* harmony export */   isTouch: () => (/* binding */ isTouch)\n/* harmony export */ });\n/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\nconst testUserAgent = regexp => regexp.test(navigator.userAgent);\nconst testPlatform = regexp => regexp.test(navigator.platform);\nconst testVendor = regexp => regexp.test(navigator.vendor);\nconst isAndroid = testUserAgent(/Android/u);\nconst isChrome = testUserAgent(/Chrome/u) && testVendor(/Google Inc/u);\nconst isFirefox = testUserAgent(/Firefox/u);\n\n// IPadOS 13 lies and says it's a Mac, but we can distinguish by detecting touch support.\nconst isIPad = testPlatform(/^iPad/u) || testPlatform(/^Mac/u) && navigator.maxTouchPoints > 1;\nconst isIPhone = testPlatform(/^iPhone/u);\nconst isIOS = isIPhone || isIPad;\nconst isSafari = testUserAgent(/^((?!chrome|android).)*safari/iu);\nconst isTouch = (() => {\n  try {\n    document.createEvent('TouchEvent');\n    return true;\n  } catch (e) {\n    return false;\n  }\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21wb25lbnQtYmFzZS9zcmMvYnJvd3Nlci11dGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFFQTtBQUVBO0FBRUE7QUFFQTtBQUVBOztBQUVBO0FBQ0E7QUFFQTtBQUVBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9tZS1hc3Npc3RhbnQtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21wb25lbnQtYmFzZS9zcmMvYnJvd3Nlci11dGlscy5qcz85ZTMzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAoYykgMjAyMSAtIDIwMjMgVmFhZGluIEx0ZC5cbiAqIFRoaXMgcHJvZ3JhbSBpcyBhdmFpbGFibGUgdW5kZXIgQXBhY2hlIExpY2Vuc2UgVmVyc2lvbiAyLjAsIGF2YWlsYWJsZSBhdCBodHRwczovL3ZhYWRpbi5jb20vbGljZW5zZS9cbiAqL1xuXG5jb25zdCB0ZXN0VXNlckFnZW50ID0gKHJlZ2V4cCkgPT4gcmVnZXhwLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCk7XG5cbmNvbnN0IHRlc3RQbGF0Zm9ybSA9IChyZWdleHApID0+IHJlZ2V4cC50ZXN0KG5hdmlnYXRvci5wbGF0Zm9ybSk7XG5cbmNvbnN0IHRlc3RWZW5kb3IgPSAocmVnZXhwKSA9PiByZWdleHAudGVzdChuYXZpZ2F0b3IudmVuZG9yKTtcblxuZXhwb3J0IGNvbnN0IGlzQW5kcm9pZCA9IHRlc3RVc2VyQWdlbnQoL0FuZHJvaWQvdSk7XG5cbmV4cG9ydCBjb25zdCBpc0Nocm9tZSA9IHRlc3RVc2VyQWdlbnQoL0Nocm9tZS91KSAmJiB0ZXN0VmVuZG9yKC9Hb29nbGUgSW5jL3UpO1xuXG5leHBvcnQgY29uc3QgaXNGaXJlZm94ID0gdGVzdFVzZXJBZ2VudCgvRmlyZWZveC91KTtcblxuLy8gSVBhZE9TIDEzIGxpZXMgYW5kIHNheXMgaXQncyBhIE1hYywgYnV0IHdlIGNhbiBkaXN0aW5ndWlzaCBieSBkZXRlY3RpbmcgdG91Y2ggc3VwcG9ydC5cbmV4cG9ydCBjb25zdCBpc0lQYWQgPSB0ZXN0UGxhdGZvcm0oL15pUGFkL3UpIHx8ICh0ZXN0UGxhdGZvcm0oL15NYWMvdSkgJiYgbmF2aWdhdG9yLm1heFRvdWNoUG9pbnRzID4gMSk7XG5cbmV4cG9ydCBjb25zdCBpc0lQaG9uZSA9IHRlc3RQbGF0Zm9ybSgvXmlQaG9uZS91KTtcblxuZXhwb3J0IGNvbnN0IGlzSU9TID0gaXNJUGhvbmUgfHwgaXNJUGFkO1xuXG5leHBvcnQgY29uc3QgaXNTYWZhcmkgPSB0ZXN0VXNlckFnZW50KC9eKCg/IWNocm9tZXxhbmRyb2lkKS4pKnNhZmFyaS9pdSk7XG5cbmV4cG9ydCBjb25zdCBpc1RvdWNoID0gKCgpID0+IHtcbiAgdHJ5IHtcbiAgICBkb2N1bWVudC5jcmVhdGVFdmVudCgnVG91Y2hFdmVudCcpO1xuICAgIHJldHVybiB0cnVlO1xuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59KSgpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/component-base/src/browser-utils.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/component-base/src/controller-mixin.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@vaadin/component-base/src/controller-mixin.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ControllerMixin: () => (/* binding */ ControllerMixin)\n/* harmony export */ });\n/* harmony import */ var _polymer_polymer_lib_utils_mixin_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polymer/polymer/lib/utils/mixin.js */ \"./node_modules/@polymer/polymer/lib/utils/mixin.js\");\n/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\n/**\n * @typedef ReactiveController\n * @type {import('lit').ReactiveController}\n */\n\n/**\n * A mixin for connecting controllers to the element.\n *\n * @polymerMixin\n */\nconst ControllerMixin = (0,_polymer_polymer_lib_utils_mixin_js__WEBPACK_IMPORTED_MODULE_0__.dedupingMixin)(superClass => {\n  // If the superclass extends from LitElement,\n  // use its own controllers implementation.\n  if (typeof superClass.prototype.addController === 'function') {\n    return superClass;\n  }\n  return class ControllerMixinClass extends superClass {\n    constructor() {\n      super();\n\n      /**\n       * @type {Set<ReactiveController>}\n       */\n      this.__controllers = new Set();\n    }\n\n    /** @protected */\n    connectedCallback() {\n      super.connectedCallback();\n      this.__controllers.forEach(c => {\n        if (c.hostConnected) {\n          c.hostConnected();\n        }\n      });\n    }\n\n    /** @protected */\n    disconnectedCallback() {\n      super.disconnectedCallback();\n      this.__controllers.forEach(c => {\n        if (c.hostDisconnected) {\n          c.hostDisconnected();\n        }\n      });\n    }\n\n    /**\n     * Registers a controller to participate in the element update cycle.\n     *\n     * @param {ReactiveController} controller\n     * @protected\n     */\n    addController(controller) {\n      this.__controllers.add(controller);\n      // Call hostConnected if a controller is added after the element is attached.\n      if (this.$ !== undefined && this.isConnected && controller.hostConnected) {\n        controller.hostConnected();\n      }\n    }\n\n    /**\n     * Removes a controller from the element.\n     *\n     * @param {ReactiveController} controller\n     * @protected\n     */\n    removeController(controller) {\n      this.__controllers.delete(controller);\n    }\n  };\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21wb25lbnQtYmFzZS9zcmMvY29udHJvbGxlci1taXhpbi5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9tZS1hc3Npc3RhbnQtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21wb25lbnQtYmFzZS9zcmMvY29udHJvbGxlci1taXhpbi5qcz9hOWEzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAoYykgMjAyMSAtIDIwMjMgVmFhZGluIEx0ZC5cbiAqIFRoaXMgcHJvZ3JhbSBpcyBhdmFpbGFibGUgdW5kZXIgQXBhY2hlIExpY2Vuc2UgVmVyc2lvbiAyLjAsIGF2YWlsYWJsZSBhdCBodHRwczovL3ZhYWRpbi5jb20vbGljZW5zZS9cbiAqL1xuaW1wb3J0IHsgZGVkdXBpbmdNaXhpbiB9IGZyb20gJ0Bwb2x5bWVyL3BvbHltZXIvbGliL3V0aWxzL21peGluLmpzJztcblxuLyoqXG4gKiBAdHlwZWRlZiBSZWFjdGl2ZUNvbnRyb2xsZXJcbiAqIEB0eXBlIHtpbXBvcnQoJ2xpdCcpLlJlYWN0aXZlQ29udHJvbGxlcn1cbiAqL1xuXG4vKipcbiAqIEEgbWl4aW4gZm9yIGNvbm5lY3RpbmcgY29udHJvbGxlcnMgdG8gdGhlIGVsZW1lbnQuXG4gKlxuICogQHBvbHltZXJNaXhpblxuICovXG5leHBvcnQgY29uc3QgQ29udHJvbGxlck1peGluID0gZGVkdXBpbmdNaXhpbigoc3VwZXJDbGFzcykgPT4ge1xuICAvLyBJZiB0aGUgc3VwZXJjbGFzcyBleHRlbmRzIGZyb20gTGl0RWxlbWVudCxcbiAgLy8gdXNlIGl0cyBvd24gY29udHJvbGxlcnMgaW1wbGVtZW50YXRpb24uXG4gIGlmICh0eXBlb2Ygc3VwZXJDbGFzcy5wcm90b3R5cGUuYWRkQ29udHJvbGxlciA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHJldHVybiBzdXBlckNsYXNzO1xuICB9XG5cbiAgcmV0dXJuIGNsYXNzIENvbnRyb2xsZXJNaXhpbkNsYXNzIGV4dGVuZHMgc3VwZXJDbGFzcyB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICBzdXBlcigpO1xuXG4gICAgICAvKipcbiAgICAgICAqIEB0eXBlIHtTZXQ8UmVhY3RpdmVDb250cm9sbGVyPn1cbiAgICAgICAqL1xuICAgICAgdGhpcy5fX2NvbnRyb2xsZXJzID0gbmV3IFNldCgpO1xuICAgIH1cblxuICAgIC8qKiBAcHJvdGVjdGVkICovXG4gICAgY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgICBzdXBlci5jb25uZWN0ZWRDYWxsYmFjaygpO1xuXG4gICAgICB0aGlzLl9fY29udHJvbGxlcnMuZm9yRWFjaCgoYykgPT4ge1xuICAgICAgICBpZiAoYy5ob3N0Q29ubmVjdGVkKSB7XG4gICAgICAgICAgYy5ob3N0Q29ubmVjdGVkKCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cblxuICAgIC8qKiBAcHJvdGVjdGVkICovXG4gICAgZGlzY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgICBzdXBlci5kaXNjb25uZWN0ZWRDYWxsYmFjaygpO1xuXG4gICAgICB0aGlzLl9fY29udHJvbGxlcnMuZm9yRWFjaCgoYykgPT4ge1xuICAgICAgICBpZiAoYy5ob3N0RGlzY29ubmVjdGVkKSB7XG4gICAgICAgICAgYy5ob3N0RGlzY29ubmVjdGVkKCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFJlZ2lzdGVycyBhIGNvbnRyb2xsZXIgdG8gcGFydGljaXBhdGUgaW4gdGhlIGVsZW1lbnQgdXBkYXRlIGN5Y2xlLlxuICAgICAqXG4gICAgICogQHBhcmFtIHtSZWFjdGl2ZUNvbnRyb2xsZXJ9IGNvbnRyb2xsZXJcbiAgICAgKiBAcHJvdGVjdGVkXG4gICAgICovXG4gICAgYWRkQ29udHJvbGxlcihjb250cm9sbGVyKSB7XG4gICAgICB0aGlzLl9fY29udHJvbGxlcnMuYWRkKGNvbnRyb2xsZXIpO1xuICAgICAgLy8gQ2FsbCBob3N0Q29ubmVjdGVkIGlmIGEgY29udHJvbGxlciBpcyBhZGRlZCBhZnRlciB0aGUgZWxlbWVudCBpcyBhdHRhY2hlZC5cbiAgICAgIGlmICh0aGlzLiQgIT09IHVuZGVmaW5lZCAmJiB0aGlzLmlzQ29ubmVjdGVkICYmIGNvbnRyb2xsZXIuaG9zdENvbm5lY3RlZCkge1xuICAgICAgICBjb250cm9sbGVyLmhvc3RDb25uZWN0ZWQoKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBSZW1vdmVzIGEgY29udHJvbGxlciBmcm9tIHRoZSBlbGVtZW50LlxuICAgICAqXG4gICAgICogQHBhcmFtIHtSZWFjdGl2ZUNvbnRyb2xsZXJ9IGNvbnRyb2xsZXJcbiAgICAgKiBAcHJvdGVjdGVkXG4gICAgICovXG4gICAgcmVtb3ZlQ29udHJvbGxlcihjb250cm9sbGVyKSB7XG4gICAgICB0aGlzLl9fY29udHJvbGxlcnMuZGVsZXRlKGNvbnRyb2xsZXIpO1xuICAgIH1cbiAgfTtcbn0pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/component-base/src/controller-mixin.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/component-base/src/debounce.js":
/*!*************************************************************!*\
  !*** ./node_modules/@vaadin/component-base/src/debounce.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Debouncer: () => (/* binding */ Debouncer),\n/* harmony export */   enqueueDebouncer: () => (/* binding */ enqueueDebouncer),\n/* harmony export */   flush: () => (/* binding */ flush),\n/* harmony export */   flushDebouncers: () => (/* binding */ flushDebouncers)\n/* harmony export */ });\n/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nconst debouncerQueue = new Set();\n\n/**\n * @summary Collapse multiple callbacks into one invocation after a timer.\n */\nclass Debouncer {\n  /**\n   * Creates a debouncer if no debouncer is passed as a parameter\n   * or it cancels an active debouncer otherwise. The following\n   * example shows how a debouncer can be called multiple times within a\n   * microtask and \"debounced\" such that the provided callback function is\n   * called once. Add this method to a custom element:\n   *\n   * ```js\n   * import {microTask} from '@vaadin/component-base/src/async.js';\n   * import {Debouncer} from '@vaadin/component-base/src/debounce.js';\n   * // ...\n   *\n   * _debounceWork() {\n   *   this._debounceJob = Debouncer.debounce(this._debounceJob,\n   *       microTask, () => this._doWork());\n   * }\n   * ```\n   *\n   * If the `_debounceWork` method is called multiple times within the same\n   * microtask, the `_doWork` function will be called only once at the next\n   * microtask checkpoint.\n   *\n   * Note: In testing it is often convenient to avoid asynchrony. To accomplish\n   * this with a debouncer, you can use `enqueueDebouncer` and\n   * `flush`. For example, extend the above example by adding\n   * `enqueueDebouncer(this._debounceJob)` at the end of the\n   * `_debounceWork` method. Then in a test, call `flush` to ensure\n   * the debouncer has completed.\n   *\n   * @param {Debouncer?} debouncer Debouncer object.\n   * @param {!AsyncInterface} asyncModule Object with Async interface\n   * @param {function()} callback Callback to run.\n   * @return {!Debouncer} Returns a debouncer object.\n   */\n  static debounce(debouncer, asyncModule, callback) {\n    if (debouncer instanceof Debouncer) {\n      // Cancel the async callback, but leave in debouncerQueue if it was\n      // enqueued, to maintain 1.x flush order\n      debouncer._cancelAsync();\n    } else {\n      debouncer = new Debouncer();\n    }\n    debouncer.setConfig(asyncModule, callback);\n    return debouncer;\n  }\n  constructor() {\n    this._asyncModule = null;\n    this._callback = null;\n    this._timer = null;\n  }\n\n  /**\n   * Sets the scheduler; that is, a module with the Async interface,\n   * a callback and optional arguments to be passed to the run function\n   * from the async module.\n   *\n   * @param {!AsyncInterface} asyncModule Object with Async interface.\n   * @param {function()} callback Callback to run.\n   * @return {void}\n   */\n  setConfig(asyncModule, callback) {\n    this._asyncModule = asyncModule;\n    this._callback = callback;\n    this._timer = this._asyncModule.run(() => {\n      this._timer = null;\n      debouncerQueue.delete(this);\n      this._callback();\n    });\n  }\n\n  /**\n   * Cancels an active debouncer and returns a reference to itself.\n   *\n   * @return {void}\n   */\n  cancel() {\n    if (this.isActive()) {\n      this._cancelAsync();\n      // Canceling a debouncer removes its spot from the flush queue,\n      // so if a debouncer is manually canceled and re-debounced, it\n      // will reset its flush order (this is a very minor difference from 1.x)\n      // Re-debouncing via the `debounce` API retains the 1.x FIFO flush order\n      debouncerQueue.delete(this);\n    }\n  }\n\n  /**\n   * Cancels a debouncer's async callback.\n   *\n   * @return {void}\n   */\n  _cancelAsync() {\n    if (this.isActive()) {\n      this._asyncModule.cancel( /** @type {number} */this._timer);\n      this._timer = null;\n    }\n  }\n\n  /**\n   * Flushes an active debouncer and returns a reference to itself.\n   *\n   * @return {void}\n   */\n  flush() {\n    if (this.isActive()) {\n      this.cancel();\n      this._callback();\n    }\n  }\n\n  /**\n   * Returns true if the debouncer is active.\n   *\n   * @return {boolean} True if active.\n   */\n  isActive() {\n    return this._timer != null;\n  }\n}\n\n/**\n * Adds a `Debouncer` to a list of globally flushable tasks.\n *\n * @param {!Debouncer} debouncer Debouncer to enqueue\n * @return {void}\n */\nfunction enqueueDebouncer(debouncer) {\n  debouncerQueue.add(debouncer);\n}\n\n/**\n * Flushes any enqueued debouncers\n *\n * @return {boolean} Returns whether any debouncers were flushed\n */\nfunction flushDebouncers() {\n  const didFlush = Boolean(debouncerQueue.size);\n  // If new debouncers are added while flushing, Set.forEach will ensure\n  // newly added ones are also flushed\n  debouncerQueue.forEach(debouncer => {\n    try {\n      debouncer.flush();\n    } catch (e) {\n      setTimeout(() => {\n        throw e;\n      });\n    }\n  });\n  return didFlush;\n}\nconst flush = () => {\n  let debouncers;\n  do {\n    debouncers = flushDebouncers();\n  } while (debouncers);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/component-base/src/debounce.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/component-base/src/define.js":
/*!***********************************************************!*\
  !*** ./node_modules/@vaadin/component-base/src/define.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defineCustomElement: () => (/* binding */ defineCustomElement)\n/* harmony export */ });\n/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\nfunction defineCustomElement(CustomElement) {\n  const defined = customElements.get(CustomElement.is);\n  if (!defined) {\n    Object.defineProperty(CustomElement, 'version', {\n      get() {\n        return '24.3.4';\n      }\n    });\n    customElements.define(CustomElement.is, CustomElement);\n  } else {\n    const definedVersion = defined.version;\n    if (definedVersion && CustomElement.version && definedVersion === CustomElement.version) {\n      // Just loading the same thing again\n      console.warn(`The component ${CustomElement.is} has been loaded twice`);\n    } else {\n      console.error(`Tried to define ${CustomElement.is} version ${CustomElement.version} when version ${defined.version} is already in use. Something will probably break.`);\n    }\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21wb25lbnQtYmFzZS9zcmMvZGVmaW5lLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9tZS1hc3Npc3RhbnQtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21wb25lbnQtYmFzZS9zcmMvZGVmaW5lLmpzP2UwMmYiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IChjKSAyMDIxIC0gMjAyMyBWYWFkaW4gTHRkLlxuICogVGhpcyBwcm9ncmFtIGlzIGF2YWlsYWJsZSB1bmRlciBBcGFjaGUgTGljZW5zZSBWZXJzaW9uIDIuMCwgYXZhaWxhYmxlIGF0IGh0dHBzOi8vdmFhZGluLmNvbS9saWNlbnNlL1xuICovXG5cbmV4cG9ydCBmdW5jdGlvbiBkZWZpbmVDdXN0b21FbGVtZW50KEN1c3RvbUVsZW1lbnQpIHtcbiAgY29uc3QgZGVmaW5lZCA9IGN1c3RvbUVsZW1lbnRzLmdldChDdXN0b21FbGVtZW50LmlzKTtcbiAgaWYgKCFkZWZpbmVkKSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KEN1c3RvbUVsZW1lbnQsICd2ZXJzaW9uJywge1xuICAgICAgZ2V0KCkge1xuICAgICAgICByZXR1cm4gJzI0LjMuNCc7XG4gICAgICB9LFxuICAgIH0pO1xuXG4gICAgY3VzdG9tRWxlbWVudHMuZGVmaW5lKEN1c3RvbUVsZW1lbnQuaXMsIEN1c3RvbUVsZW1lbnQpO1xuICB9IGVsc2Uge1xuICAgIGNvbnN0IGRlZmluZWRWZXJzaW9uID0gZGVmaW5lZC52ZXJzaW9uO1xuICAgIGlmIChkZWZpbmVkVmVyc2lvbiAmJiBDdXN0b21FbGVtZW50LnZlcnNpb24gJiYgZGVmaW5lZFZlcnNpb24gPT09IEN1c3RvbUVsZW1lbnQudmVyc2lvbikge1xuICAgICAgLy8gSnVzdCBsb2FkaW5nIHRoZSBzYW1lIHRoaW5nIGFnYWluXG4gICAgICBjb25zb2xlLndhcm4oYFRoZSBjb21wb25lbnQgJHtDdXN0b21FbGVtZW50LmlzfSBoYXMgYmVlbiBsb2FkZWQgdHdpY2VgKTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc29sZS5lcnJvcihcbiAgICAgICAgYFRyaWVkIHRvIGRlZmluZSAke0N1c3RvbUVsZW1lbnQuaXN9IHZlcnNpb24gJHtDdXN0b21FbGVtZW50LnZlcnNpb259IHdoZW4gdmVyc2lvbiAke2RlZmluZWQudmVyc2lvbn0gaXMgYWxyZWFkeSBpbiB1c2UuIFNvbWV0aGluZyB3aWxsIHByb2JhYmx5IGJyZWFrLmAsXG4gICAgICApO1xuICAgIH1cbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/component-base/src/define.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/component-base/src/dir-mixin.js":
/*!**************************************************************!*\
  !*** ./node_modules/@vaadin/component-base/src/dir-mixin.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DirMixin: () => (/* binding */ DirMixin)\n/* harmony export */ });\n/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * Array of Vaadin custom element classes that have been subscribed to the dir changes.\n */\nconst directionSubscribers = [];\nfunction alignDirs(element, documentDir, elementDir = element.getAttribute('dir')) {\n  if (documentDir) {\n    element.setAttribute('dir', documentDir);\n  } else if (elementDir != null) {\n    element.removeAttribute('dir');\n  }\n}\nfunction getDocumentDir() {\n  return document.documentElement.getAttribute('dir');\n}\nfunction directionUpdater() {\n  const documentDir = getDocumentDir();\n  directionSubscribers.forEach(element => {\n    alignDirs(element, documentDir);\n  });\n}\nconst directionObserver = new MutationObserver(directionUpdater);\ndirectionObserver.observe(document.documentElement, {\n  attributes: true,\n  attributeFilter: ['dir']\n});\n\n/**\n * A mixin to handle `dir` attribute based on the one set on the `<html>` element.\n *\n * @polymerMixin\n */\nconst DirMixin = superClass => class VaadinDirMixin extends superClass {\n  static get properties() {\n    return {\n      /**\n       * @protected\n       */\n      dir: {\n        type: String,\n        value: '',\n        reflectToAttribute: true,\n        converter: {\n          fromAttribute: attr => {\n            return !attr ? '' : attr;\n          },\n          toAttribute: prop => {\n            return prop === '' ? null : prop;\n          }\n        }\n      }\n    };\n  }\n\n  /**\n   * @return {boolean}\n   * @protected\n   */\n  get __isRTL() {\n    return this.getAttribute('dir') === 'rtl';\n  }\n\n  /** @protected */\n  connectedCallback() {\n    super.connectedCallback();\n    if (!this.hasAttribute('dir') || this.__restoreSubscription) {\n      this.__subscribe();\n      alignDirs(this, getDocumentDir(), null);\n    }\n  }\n\n  /** @protected */\n  attributeChangedCallback(name, oldValue, newValue) {\n    super.attributeChangedCallback(name, oldValue, newValue);\n    if (name !== 'dir') {\n      return;\n    }\n    const documentDir = getDocumentDir();\n\n    // New value equals to the document direction and the element is not subscribed to the changes\n    const newValueEqlDocDir = newValue === documentDir && directionSubscribers.indexOf(this) === -1;\n    // Value was emptied and the element is not subscribed to the changes\n    const newValueEmptied = !newValue && oldValue && directionSubscribers.indexOf(this) === -1;\n    // New value is different and the old equals to document direction and the element is not subscribed to the changes\n    const newDiffValue = newValue !== documentDir && oldValue === documentDir;\n    if (newValueEqlDocDir || newValueEmptied) {\n      this.__subscribe();\n      alignDirs(this, documentDir, newValue);\n    } else if (newDiffValue) {\n      this.__unsubscribe();\n    }\n  }\n\n  /** @protected */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.__restoreSubscription = directionSubscribers.includes(this);\n    this.__unsubscribe();\n  }\n\n  /** @protected */\n  _valueToNodeAttribute(node, value, attribute) {\n    // Override default Polymer attribute reflection to match native behavior of HTMLElement.dir property\n    // If the property contains an empty string then it should not create an empty attribute\n    if (attribute === 'dir' && value === '' && !node.hasAttribute('dir')) {\n      return;\n    }\n    super._valueToNodeAttribute(node, value, attribute);\n  }\n\n  /** @protected */\n  _attributeToProperty(attribute, value, type) {\n    // Override default Polymer attribute reflection to match native behavior of HTMLElement.dir property\n    // If the attribute is removed, then the dir property should contain an empty string instead of null\n    if (attribute === 'dir' && !value) {\n      this.dir = '';\n    } else {\n      super._attributeToProperty(attribute, value, type);\n    }\n  }\n\n  /** @private */\n  __subscribe() {\n    if (!directionSubscribers.includes(this)) {\n      directionSubscribers.push(this);\n    }\n  }\n\n  /** @private */\n  __unsubscribe() {\n    if (directionSubscribers.includes(this)) {\n      directionSubscribers.splice(directionSubscribers.indexOf(this), 1);\n    }\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21wb25lbnQtYmFzZS9zcmMvZGlyLW1peGluLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQUE7QUFBQTtBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2hvbWUtYXNzaXN0YW50LWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0B2YWFkaW4vY29tcG9uZW50LWJhc2Uvc3JjL2Rpci1taXhpbi5qcz9jY2QyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAoYykgMjAyMSAtIDIwMjMgVmFhZGluIEx0ZC5cbiAqIFRoaXMgcHJvZ3JhbSBpcyBhdmFpbGFibGUgdW5kZXIgQXBhY2hlIExpY2Vuc2UgVmVyc2lvbiAyLjAsIGF2YWlsYWJsZSBhdCBodHRwczovL3ZhYWRpbi5jb20vbGljZW5zZS9cbiAqL1xuXG4vKipcbiAqIEFycmF5IG9mIFZhYWRpbiBjdXN0b20gZWxlbWVudCBjbGFzc2VzIHRoYXQgaGF2ZSBiZWVuIHN1YnNjcmliZWQgdG8gdGhlIGRpciBjaGFuZ2VzLlxuICovXG5jb25zdCBkaXJlY3Rpb25TdWJzY3JpYmVycyA9IFtdO1xuXG5mdW5jdGlvbiBhbGlnbkRpcnMoZWxlbWVudCwgZG9jdW1lbnREaXIsIGVsZW1lbnREaXIgPSBlbGVtZW50LmdldEF0dHJpYnV0ZSgnZGlyJykpIHtcbiAgaWYgKGRvY3VtZW50RGlyKSB7XG4gICAgZWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2RpcicsIGRvY3VtZW50RGlyKTtcbiAgfSBlbHNlIGlmIChlbGVtZW50RGlyICE9IG51bGwpIHtcbiAgICBlbGVtZW50LnJlbW92ZUF0dHJpYnV0ZSgnZGlyJyk7XG4gIH1cbn1cblxuZnVuY3Rpb24gZ2V0RG9jdW1lbnREaXIoKSB7XG4gIHJldHVybiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuZ2V0QXR0cmlidXRlKCdkaXInKTtcbn1cblxuZnVuY3Rpb24gZGlyZWN0aW9uVXBkYXRlcigpIHtcbiAgY29uc3QgZG9jdW1lbnREaXIgPSBnZXREb2N1bWVudERpcigpO1xuICBkaXJlY3Rpb25TdWJzY3JpYmVycy5mb3JFYWNoKChlbGVtZW50KSA9PiB7XG4gICAgYWxpZ25EaXJzKGVsZW1lbnQsIGRvY3VtZW50RGlyKTtcbiAgfSk7XG59XG5cbmNvbnN0IGRpcmVjdGlvbk9ic2VydmVyID0gbmV3IE11dGF0aW9uT2JzZXJ2ZXIoZGlyZWN0aW9uVXBkYXRlcik7XG5kaXJlY3Rpb25PYnNlcnZlci5vYnNlcnZlKGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCwgeyBhdHRyaWJ1dGVzOiB0cnVlLCBhdHRyaWJ1dGVGaWx0ZXI6IFsnZGlyJ10gfSk7XG5cbi8qKlxuICogQSBtaXhpbiB0byBoYW5kbGUgYGRpcmAgYXR0cmlidXRlIGJhc2VkIG9uIHRoZSBvbmUgc2V0IG9uIHRoZSBgPGh0bWw+YCBlbGVtZW50LlxuICpcbiAqIEBwb2x5bWVyTWl4aW5cbiAqL1xuZXhwb3J0IGNvbnN0IERpck1peGluID0gKHN1cGVyQ2xhc3MpID0+XG4gIGNsYXNzIFZhYWRpbkRpck1peGluIGV4dGVuZHMgc3VwZXJDbGFzcyB7XG4gICAgc3RhdGljIGdldCBwcm9wZXJ0aWVzKCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEBwcm90ZWN0ZWRcbiAgICAgICAgICovXG4gICAgICAgIGRpcjoge1xuICAgICAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgICAgICB2YWx1ZTogJycsXG4gICAgICAgICAgcmVmbGVjdFRvQXR0cmlidXRlOiB0cnVlLFxuICAgICAgICAgIGNvbnZlcnRlcjoge1xuICAgICAgICAgICAgZnJvbUF0dHJpYnV0ZTogKGF0dHIpID0+IHtcbiAgICAgICAgICAgICAgcmV0dXJuICFhdHRyID8gJycgOiBhdHRyO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHRvQXR0cmlidXRlOiAocHJvcCkgPT4ge1xuICAgICAgICAgICAgICByZXR1cm4gcHJvcCA9PT0gJycgPyBudWxsIDogcHJvcDtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICAgIH07XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQHJldHVybiB7Ym9vbGVhbn1cbiAgICAgKiBAcHJvdGVjdGVkXG4gICAgICovXG4gICAgZ2V0IF9faXNSVEwoKSB7XG4gICAgICByZXR1cm4gdGhpcy5nZXRBdHRyaWJ1dGUoJ2RpcicpID09PSAncnRsJztcbiAgICB9XG5cbiAgICAvKiogQHByb3RlY3RlZCAqL1xuICAgIGNvbm5lY3RlZENhbGxiYWNrKCkge1xuICAgICAgc3VwZXIuY29ubmVjdGVkQ2FsbGJhY2soKTtcblxuICAgICAgaWYgKCF0aGlzLmhhc0F0dHJpYnV0ZSgnZGlyJykgfHwgdGhpcy5fX3Jlc3RvcmVTdWJzY3JpcHRpb24pIHtcbiAgICAgICAgdGhpcy5fX3N1YnNjcmliZSgpO1xuICAgICAgICBhbGlnbkRpcnModGhpcywgZ2V0RG9jdW1lbnREaXIoKSwgbnVsbCk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLyoqIEBwcm90ZWN0ZWQgKi9cbiAgICBhdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2sobmFtZSwgb2xkVmFsdWUsIG5ld1ZhbHVlKSB7XG4gICAgICBzdXBlci5hdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2sobmFtZSwgb2xkVmFsdWUsIG5ld1ZhbHVlKTtcbiAgICAgIGlmIChuYW1lICE9PSAnZGlyJykge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IGRvY3VtZW50RGlyID0gZ2V0RG9jdW1lbnREaXIoKTtcblxuICAgICAgLy8gTmV3IHZhbHVlIGVxdWFscyB0byB0aGUgZG9jdW1lbnQgZGlyZWN0aW9uIGFuZCB0aGUgZWxlbWVudCBpcyBub3Qgc3Vic2NyaWJlZCB0byB0aGUgY2hhbmdlc1xuICAgICAgY29uc3QgbmV3VmFsdWVFcWxEb2NEaXIgPSBuZXdWYWx1ZSA9PT0gZG9jdW1lbnREaXIgJiYgZGlyZWN0aW9uU3Vic2NyaWJlcnMuaW5kZXhPZih0aGlzKSA9PT0gLTE7XG4gICAgICAvLyBWYWx1ZSB3YXMgZW1wdGllZCBhbmQgdGhlIGVsZW1lbnQgaXMgbm90IHN1YnNjcmliZWQgdG8gdGhlIGNoYW5nZXNcbiAgICAgIGNvbnN0IG5ld1ZhbHVlRW1wdGllZCA9ICFuZXdWYWx1ZSAmJiBvbGRWYWx1ZSAmJiBkaXJlY3Rpb25TdWJzY3JpYmVycy5pbmRleE9mKHRoaXMpID09PSAtMTtcbiAgICAgIC8vIE5ldyB2YWx1ZSBpcyBkaWZmZXJlbnQgYW5kIHRoZSBvbGQgZXF1YWxzIHRvIGRvY3VtZW50IGRpcmVjdGlvbiBhbmQgdGhlIGVsZW1lbnQgaXMgbm90IHN1YnNjcmliZWQgdG8gdGhlIGNoYW5nZXNcbiAgICAgIGNvbnN0IG5ld0RpZmZWYWx1ZSA9IG5ld1ZhbHVlICE9PSBkb2N1bWVudERpciAmJiBvbGRWYWx1ZSA9PT0gZG9jdW1lbnREaXI7XG5cbiAgICAgIGlmIChuZXdWYWx1ZUVxbERvY0RpciB8fCBuZXdWYWx1ZUVtcHRpZWQpIHtcbiAgICAgICAgdGhpcy5fX3N1YnNjcmliZSgpO1xuICAgICAgICBhbGlnbkRpcnModGhpcywgZG9jdW1lbnREaXIsIG5ld1ZhbHVlKTtcbiAgICAgIH0gZWxzZSBpZiAobmV3RGlmZlZhbHVlKSB7XG4gICAgICAgIHRoaXMuX191bnN1YnNjcmliZSgpO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8qKiBAcHJvdGVjdGVkICovXG4gICAgZGlzY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgICBzdXBlci5kaXNjb25uZWN0ZWRDYWxsYmFjaygpO1xuICAgICAgdGhpcy5fX3Jlc3RvcmVTdWJzY3JpcHRpb24gPSBkaXJlY3Rpb25TdWJzY3JpYmVycy5pbmNsdWRlcyh0aGlzKTtcbiAgICAgIHRoaXMuX191bnN1YnNjcmliZSgpO1xuICAgIH1cblxuICAgIC8qKiBAcHJvdGVjdGVkICovXG4gICAgX3ZhbHVlVG9Ob2RlQXR0cmlidXRlKG5vZGUsIHZhbHVlLCBhdHRyaWJ1dGUpIHtcbiAgICAgIC8vIE92ZXJyaWRlIGRlZmF1bHQgUG9seW1lciBhdHRyaWJ1dGUgcmVmbGVjdGlvbiB0byBtYXRjaCBuYXRpdmUgYmVoYXZpb3Igb2YgSFRNTEVsZW1lbnQuZGlyIHByb3BlcnR5XG4gICAgICAvLyBJZiB0aGUgcHJvcGVydHkgY29udGFpbnMgYW4gZW1wdHkgc3RyaW5nIHRoZW4gaXQgc2hvdWxkIG5vdCBjcmVhdGUgYW4gZW1wdHkgYXR0cmlidXRlXG4gICAgICBpZiAoYXR0cmlidXRlID09PSAnZGlyJyAmJiB2YWx1ZSA9PT0gJycgJiYgIW5vZGUuaGFzQXR0cmlidXRlKCdkaXInKSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBzdXBlci5fdmFsdWVUb05vZGVBdHRyaWJ1dGUobm9kZSwgdmFsdWUsIGF0dHJpYnV0ZSk7XG4gICAgfVxuXG4gICAgLyoqIEBwcm90ZWN0ZWQgKi9cbiAgICBfYXR0cmlidXRlVG9Qcm9wZXJ0eShhdHRyaWJ1dGUsIHZhbHVlLCB0eXBlKSB7XG4gICAgICAvLyBPdmVycmlkZSBkZWZhdWx0IFBvbHltZXIgYXR0cmlidXRlIHJlZmxlY3Rpb24gdG8gbWF0Y2ggbmF0aXZlIGJlaGF2aW9yIG9mIEhUTUxFbGVtZW50LmRpciBwcm9wZXJ0eVxuICAgICAgLy8gSWYgdGhlIGF0dHJpYnV0ZSBpcyByZW1vdmVkLCB0aGVuIHRoZSBkaXIgcHJvcGVydHkgc2hvdWxkIGNvbnRhaW4gYW4gZW1wdHkgc3RyaW5nIGluc3RlYWQgb2YgbnVsbFxuICAgICAgaWYgKGF0dHJpYnV0ZSA9PT0gJ2RpcicgJiYgIXZhbHVlKSB7XG4gICAgICAgIHRoaXMuZGlyID0gJyc7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzdXBlci5fYXR0cmlidXRlVG9Qcm9wZXJ0eShhdHRyaWJ1dGUsIHZhbHVlLCB0eXBlKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvKiogQHByaXZhdGUgKi9cbiAgICBfX3N1YnNjcmliZSgpIHtcbiAgICAgIGlmICghZGlyZWN0aW9uU3Vic2NyaWJlcnMuaW5jbHVkZXModGhpcykpIHtcbiAgICAgICAgZGlyZWN0aW9uU3Vic2NyaWJlcnMucHVzaCh0aGlzKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvKiogQHByaXZhdGUgKi9cbiAgICBfX3Vuc3Vic2NyaWJlKCkge1xuICAgICAgaWYgKGRpcmVjdGlvblN1YnNjcmliZXJzLmluY2x1ZGVzKHRoaXMpKSB7XG4gICAgICAgIGRpcmVjdGlvblN1YnNjcmliZXJzLnNwbGljZShkaXJlY3Rpb25TdWJzY3JpYmVycy5pbmRleE9mKHRoaXMpLCAxKTtcbiAgICAgIH1cbiAgICB9XG4gIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/component-base/src/dir-mixin.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/component-base/src/dom-utils.js":
/*!**************************************************************!*\
  !*** ./node_modules/@vaadin/component-base/src/dom-utils.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addValueToAttribute: () => (/* binding */ addValueToAttribute),\n/* harmony export */   deserializeAttributeValue: () => (/* binding */ deserializeAttributeValue),\n/* harmony export */   getAncestorRootNodes: () => (/* binding */ getAncestorRootNodes),\n/* harmony export */   getClosestElement: () => (/* binding */ getClosestElement),\n/* harmony export */   getFlattenedElements: () => (/* binding */ getFlattenedElements),\n/* harmony export */   isEmptyTextNode: () => (/* binding */ isEmptyTextNode),\n/* harmony export */   removeValueFromAttribute: () => (/* binding */ removeValueFromAttribute),\n/* harmony export */   serializeAttributeValue: () => (/* binding */ serializeAttributeValue)\n/* harmony export */ });\n/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * Returns an array of ancestor root nodes for the given node.\n *\n * A root node is either a document node or a document fragment node (Shadow Root).\n * The array is collected by a bottom-up DOM traversing that starts with the given node\n * and involves both the light DOM and ancestor shadow DOM trees.\n *\n * @param {Node} node\n * @return {Node[]}\n */\nfunction getAncestorRootNodes(node) {\n  const result = [];\n  while (node) {\n    if (node.nodeType === Node.DOCUMENT_NODE) {\n      result.push(node);\n      break;\n    }\n    if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n      result.push(node);\n      node = node.host;\n      continue;\n    }\n    if (node.assignedSlot) {\n      node = node.assignedSlot;\n      continue;\n    }\n    node = node.parentNode;\n  }\n  return result;\n}\n\n/**\n * Returns the list of flattened elements for the given `node`.\n * This list consists of a node's children and, for any children that are\n * `<slot>` elements, the expanded flattened list of `assignedElements`.\n *\n * @param {Node} node\n * @return {Element[]}\n */\nfunction getFlattenedElements(node) {\n  const result = [];\n  let elements;\n  if (node.localName === 'slot') {\n    elements = node.assignedElements();\n  } else {\n    result.push(node);\n    elements = [...node.children];\n  }\n  elements.forEach(elem => result.push(...getFlattenedElements(elem)));\n  return result;\n}\n\n/**\n * Traverses the given node and its parents, including those that are across\n * the shadow root boundaries, until it finds a node that matches the selector.\n *\n * @param {string} selector The CSS selector to match against\n * @param {Node} node The starting node for the traversal\n * @return {Node | null} The closest matching element, or null if no match is found\n */\nfunction getClosestElement(selector, node) {\n  if (!node) {\n    return null;\n  }\n  return node.closest(selector) || getClosestElement(selector, node.getRootNode().host);\n}\n\n/**\n * Takes a string with values separated by space and returns a set the values\n *\n * @param {string} value\n * @return {Set<string>}\n */\nfunction deserializeAttributeValue(value) {\n  if (!value) {\n    return new Set();\n  }\n  return new Set(value.split(' '));\n}\n\n/**\n * Takes a set of string values and returns a string with values separated by space\n *\n * @param {Set<string>} values\n * @return {string}\n */\nfunction serializeAttributeValue(values) {\n  return values ? [...values].join(' ') : '';\n}\n\n/**\n * Adds a value to an attribute containing space-delimited values.\n *\n * @param {HTMLElement} element\n * @param {string} attr\n * @param {string} value\n */\nfunction addValueToAttribute(element, attr, value) {\n  const values = deserializeAttributeValue(element.getAttribute(attr));\n  values.add(value);\n  element.setAttribute(attr, serializeAttributeValue(values));\n}\n\n/**\n * Removes a value from an attribute containing space-delimited values.\n * If the value is the last one, the whole attribute is removed.\n *\n * @param {HTMLElement} element\n * @param {string} attr\n * @param {string} value\n */\nfunction removeValueFromAttribute(element, attr, value) {\n  const values = deserializeAttributeValue(element.getAttribute(attr));\n  values.delete(value);\n  if (values.size === 0) {\n    element.removeAttribute(attr);\n    return;\n  }\n  element.setAttribute(attr, serializeAttributeValue(values));\n}\n\n/**\n * Returns true if the given node is an empty text node, false otherwise.\n *\n * @param {Node} node\n * @return {boolean}\n */\nfunction isEmptyTextNode(node) {\n  return node.nodeType === Node.TEXT_NODE && node.textContent.trim() === '';\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21wb25lbnQtYmFzZS9zcmMvZG9tLXV0aWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9tZS1hc3Npc3RhbnQtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21wb25lbnQtYmFzZS9zcmMvZG9tLXV0aWxzLmpzPzBmMzAiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IChjKSAyMDIxIC0gMjAyMyBWYWFkaW4gTHRkLlxuICogVGhpcyBwcm9ncmFtIGlzIGF2YWlsYWJsZSB1bmRlciBBcGFjaGUgTGljZW5zZSBWZXJzaW9uIDIuMCwgYXZhaWxhYmxlIGF0IGh0dHBzOi8vdmFhZGluLmNvbS9saWNlbnNlL1xuICovXG5cbi8qKlxuICogUmV0dXJucyBhbiBhcnJheSBvZiBhbmNlc3RvciByb290IG5vZGVzIGZvciB0aGUgZ2l2ZW4gbm9kZS5cbiAqXG4gKiBBIHJvb3Qgbm9kZSBpcyBlaXRoZXIgYSBkb2N1bWVudCBub2RlIG9yIGEgZG9jdW1lbnQgZnJhZ21lbnQgbm9kZSAoU2hhZG93IFJvb3QpLlxuICogVGhlIGFycmF5IGlzIGNvbGxlY3RlZCBieSBhIGJvdHRvbS11cCBET00gdHJhdmVyc2luZyB0aGF0IHN0YXJ0cyB3aXRoIHRoZSBnaXZlbiBub2RlXG4gKiBhbmQgaW52b2x2ZXMgYm90aCB0aGUgbGlnaHQgRE9NIGFuZCBhbmNlc3RvciBzaGFkb3cgRE9NIHRyZWVzLlxuICpcbiAqIEBwYXJhbSB7Tm9kZX0gbm9kZVxuICogQHJldHVybiB7Tm9kZVtdfVxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0QW5jZXN0b3JSb290Tm9kZXMobm9kZSkge1xuICBjb25zdCByZXN1bHQgPSBbXTtcblxuICB3aGlsZSAobm9kZSkge1xuICAgIGlmIChub2RlLm5vZGVUeXBlID09PSBOb2RlLkRPQ1VNRU5UX05PREUpIHtcbiAgICAgIHJlc3VsdC5wdXNoKG5vZGUpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuXG4gICAgaWYgKG5vZGUubm9kZVR5cGUgPT09IE5vZGUuRE9DVU1FTlRfRlJBR01FTlRfTk9ERSkge1xuICAgICAgcmVzdWx0LnB1c2gobm9kZSk7XG4gICAgICBub2RlID0gbm9kZS5ob3N0O1xuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgaWYgKG5vZGUuYXNzaWduZWRTbG90KSB7XG4gICAgICBub2RlID0gbm9kZS5hc3NpZ25lZFNsb3Q7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICBub2RlID0gbm9kZS5wYXJlbnROb2RlO1xuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuLyoqXG4gKiBSZXR1cm5zIHRoZSBsaXN0IG9mIGZsYXR0ZW5lZCBlbGVtZW50cyBmb3IgdGhlIGdpdmVuIGBub2RlYC5cbiAqIFRoaXMgbGlzdCBjb25zaXN0cyBvZiBhIG5vZGUncyBjaGlsZHJlbiBhbmQsIGZvciBhbnkgY2hpbGRyZW4gdGhhdCBhcmVcbiAqIGA8c2xvdD5gIGVsZW1lbnRzLCB0aGUgZXhwYW5kZWQgZmxhdHRlbmVkIGxpc3Qgb2YgYGFzc2lnbmVkRWxlbWVudHNgLlxuICpcbiAqIEBwYXJhbSB7Tm9kZX0gbm9kZVxuICogQHJldHVybiB7RWxlbWVudFtdfVxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0RmxhdHRlbmVkRWxlbWVudHMobm9kZSkge1xuICBjb25zdCByZXN1bHQgPSBbXTtcbiAgbGV0IGVsZW1lbnRzO1xuICBpZiAobm9kZS5sb2NhbE5hbWUgPT09ICdzbG90Jykge1xuICAgIGVsZW1lbnRzID0gbm9kZS5hc3NpZ25lZEVsZW1lbnRzKCk7XG4gIH0gZWxzZSB7XG4gICAgcmVzdWx0LnB1c2gobm9kZSk7XG4gICAgZWxlbWVudHMgPSBbLi4ubm9kZS5jaGlsZHJlbl07XG4gIH1cbiAgZWxlbWVudHMuZm9yRWFjaCgoZWxlbSkgPT4gcmVzdWx0LnB1c2goLi4uZ2V0RmxhdHRlbmVkRWxlbWVudHMoZWxlbSkpKTtcbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuLyoqXG4gKiBUcmF2ZXJzZXMgdGhlIGdpdmVuIG5vZGUgYW5kIGl0cyBwYXJlbnRzLCBpbmNsdWRpbmcgdGhvc2UgdGhhdCBhcmUgYWNyb3NzXG4gKiB0aGUgc2hhZG93IHJvb3QgYm91bmRhcmllcywgdW50aWwgaXQgZmluZHMgYSBub2RlIHRoYXQgbWF0Y2hlcyB0aGUgc2VsZWN0b3IuXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHNlbGVjdG9yIFRoZSBDU1Mgc2VsZWN0b3IgdG8gbWF0Y2ggYWdhaW5zdFxuICogQHBhcmFtIHtOb2RlfSBub2RlIFRoZSBzdGFydGluZyBub2RlIGZvciB0aGUgdHJhdmVyc2FsXG4gKiBAcmV0dXJuIHtOb2RlIHwgbnVsbH0gVGhlIGNsb3Nlc3QgbWF0Y2hpbmcgZWxlbWVudCwgb3IgbnVsbCBpZiBubyBtYXRjaCBpcyBmb3VuZFxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0Q2xvc2VzdEVsZW1lbnQoc2VsZWN0b3IsIG5vZGUpIHtcbiAgaWYgKCFub2RlKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICByZXR1cm4gbm9kZS5jbG9zZXN0KHNlbGVjdG9yKSB8fCBnZXRDbG9zZXN0RWxlbWVudChzZWxlY3Rvciwgbm9kZS5nZXRSb290Tm9kZSgpLmhvc3QpO1xufVxuXG4vKipcbiAqIFRha2VzIGEgc3RyaW5nIHdpdGggdmFsdWVzIHNlcGFyYXRlZCBieSBzcGFjZSBhbmQgcmV0dXJucyBhIHNldCB0aGUgdmFsdWVzXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHZhbHVlXG4gKiBAcmV0dXJuIHtTZXQ8c3RyaW5nPn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlc2VyaWFsaXplQXR0cmlidXRlVmFsdWUodmFsdWUpIHtcbiAgaWYgKCF2YWx1ZSkge1xuICAgIHJldHVybiBuZXcgU2V0KCk7XG4gIH1cblxuICByZXR1cm4gbmV3IFNldCh2YWx1ZS5zcGxpdCgnICcpKTtcbn1cblxuLyoqXG4gKiBUYWtlcyBhIHNldCBvZiBzdHJpbmcgdmFsdWVzIGFuZCByZXR1cm5zIGEgc3RyaW5nIHdpdGggdmFsdWVzIHNlcGFyYXRlZCBieSBzcGFjZVxuICpcbiAqIEBwYXJhbSB7U2V0PHN0cmluZz59IHZhbHVlc1xuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5leHBvcnQgZnVuY3Rpb24gc2VyaWFsaXplQXR0cmlidXRlVmFsdWUodmFsdWVzKSB7XG4gIHJldHVybiB2YWx1ZXMgPyBbLi4udmFsdWVzXS5qb2luKCcgJykgOiAnJztcbn1cblxuLyoqXG4gKiBBZGRzIGEgdmFsdWUgdG8gYW4gYXR0cmlidXRlIGNvbnRhaW5pbmcgc3BhY2UtZGVsaW1pdGVkIHZhbHVlcy5cbiAqXG4gKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBlbGVtZW50XG4gKiBAcGFyYW0ge3N0cmluZ30gYXR0clxuICogQHBhcmFtIHtzdHJpbmd9IHZhbHVlXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBhZGRWYWx1ZVRvQXR0cmlidXRlKGVsZW1lbnQsIGF0dHIsIHZhbHVlKSB7XG4gIGNvbnN0IHZhbHVlcyA9IGRlc2VyaWFsaXplQXR0cmlidXRlVmFsdWUoZWxlbWVudC5nZXRBdHRyaWJ1dGUoYXR0cikpO1xuICB2YWx1ZXMuYWRkKHZhbHVlKTtcbiAgZWxlbWVudC5zZXRBdHRyaWJ1dGUoYXR0ciwgc2VyaWFsaXplQXR0cmlidXRlVmFsdWUodmFsdWVzKSk7XG59XG5cbi8qKlxuICogUmVtb3ZlcyBhIHZhbHVlIGZyb20gYW4gYXR0cmlidXRlIGNvbnRhaW5pbmcgc3BhY2UtZGVsaW1pdGVkIHZhbHVlcy5cbiAqIElmIHRoZSB2YWx1ZSBpcyB0aGUgbGFzdCBvbmUsIHRoZSB3aG9sZSBhdHRyaWJ1dGUgaXMgcmVtb3ZlZC5cbiAqXG4gKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBlbGVtZW50XG4gKiBAcGFyYW0ge3N0cmluZ30gYXR0clxuICogQHBhcmFtIHtzdHJpbmd9IHZhbHVlXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiByZW1vdmVWYWx1ZUZyb21BdHRyaWJ1dGUoZWxlbWVudCwgYXR0ciwgdmFsdWUpIHtcbiAgY29uc3QgdmFsdWVzID0gZGVzZXJpYWxpemVBdHRyaWJ1dGVWYWx1ZShlbGVtZW50LmdldEF0dHJpYnV0ZShhdHRyKSk7XG4gIHZhbHVlcy5kZWxldGUodmFsdWUpO1xuICBpZiAodmFsdWVzLnNpemUgPT09IDApIHtcbiAgICBlbGVtZW50LnJlbW92ZUF0dHJpYnV0ZShhdHRyKTtcbiAgICByZXR1cm47XG4gIH1cbiAgZWxlbWVudC5zZXRBdHRyaWJ1dGUoYXR0ciwgc2VyaWFsaXplQXR0cmlidXRlVmFsdWUodmFsdWVzKSk7XG59XG5cbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIHRoZSBnaXZlbiBub2RlIGlzIGFuIGVtcHR5IHRleHQgbm9kZSwgZmFsc2Ugb3RoZXJ3aXNlLlxuICpcbiAqIEBwYXJhbSB7Tm9kZX0gbm9kZVxuICogQHJldHVybiB7Ym9vbGVhbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzRW1wdHlUZXh0Tm9kZShub2RlKSB7XG4gIHJldHVybiBub2RlLm5vZGVUeXBlID09PSBOb2RlLlRFWFRfTk9ERSAmJiBub2RlLnRleHRDb250ZW50LnRyaW0oKSA9PT0gJyc7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/component-base/src/dom-utils.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/component-base/src/iron-list-core.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@vaadin/component-base/src/iron-list-core.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ironList: () => (/* binding */ ironList)\n/* harmony export */ });\n/* harmony import */ var _async_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./async.js */ \"./node_modules/@vaadin/component-base/src/async.js\");\n/* harmony import */ var _debounce_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./debounce.js */ \"./node_modules/@vaadin/component-base/src/debounce.js\");\n/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n\nconst IOS = navigator.userAgent.match(/iP(?:hone|ad;(?: U;)? CPU) OS (\\d+)/u);\nconst IOS_TOUCH_SCROLLING = IOS && IOS[1] >= 8;\nconst DEFAULT_PHYSICAL_COUNT = 3;\n\n/**\n * DO NOT EDIT THIS FILE!\n *\n * This file includes the iron-list scrolling engine copied from\n * https://github.com/PolymerElements/iron-list/blob/master/iron-list.js\n *\n * If something in the scrolling engine needs to be changed\n * for the virtualizer's purposes, override a function\n * in virtualizer-iron-list-adapter.js instead of changing it here.\n * If a function on this file is no longer needed, the code can be safely deleted.\n *\n * This will allow us to keep the iron-list code here as close to\n * the original as possible.\n */\nconst ironList = {\n  /**\n   * The ratio of hidden tiles that should remain in the scroll direction.\n   * Recommended value ~0.5, so it will distribute tiles evenly in both\n   * directions.\n   */\n  _ratio: 0.5,\n  /**\n   * The padding-top value for the list.\n   */\n  _scrollerPaddingTop: 0,\n  /**\n   * This value is a cached value of `scrollTop` from the last `scroll` event.\n   */\n  _scrollPosition: 0,\n  /**\n   * The sum of the heights of all the tiles in the DOM.\n   */\n  _physicalSize: 0,\n  /**\n   * The average `offsetHeight` of the tiles observed till now.\n   */\n  _physicalAverage: 0,\n  /**\n   * The number of tiles which `offsetHeight` > 0 observed until now.\n   */\n  _physicalAverageCount: 0,\n  /**\n   * The Y position of the item rendered in the `_physicalStart`\n   * tile relative to the scrolling list.\n   */\n  _physicalTop: 0,\n  /**\n   * The number of items in the list.\n   */\n  _virtualCount: 0,\n  /**\n   * The estimated scroll height based on `_physicalAverage`\n   */\n  _estScrollHeight: 0,\n  /**\n   * The scroll height of the dom node\n   */\n  _scrollHeight: 0,\n  /**\n   * The height of the list. This is referred as the viewport in the context of\n   * list.\n   */\n  _viewportHeight: 0,\n  /**\n   * The width of the list. This is referred as the viewport in the context of\n   * list.\n   */\n  _viewportWidth: 0,\n  /**\n   * An array of DOM nodes that are currently in the tree\n   * @type {?Array<!HTMLElement>}\n   */\n  _physicalItems: null,\n  /**\n   * An array of heights for each item in `_physicalItems`\n   * @type {?Array<number>}\n   */\n  _physicalSizes: null,\n  /**\n   * A cached value for the first visible index.\n   * See `firstVisibleIndex`\n   * @type {?number}\n   */\n  _firstVisibleIndexVal: null,\n  /**\n   * A cached value for the last visible index.\n   * See `lastVisibleIndex`\n   * @type {?number}\n   */\n  _lastVisibleIndexVal: null,\n  /**\n   * The max number of pages to render. One page is equivalent to the height of\n   * the list.\n   */\n  _maxPages: 2,\n  /**\n   * The cost of stamping a template in ms.\n   */\n  _templateCost: 0,\n  /**\n   * The bottom of the physical content.\n   */\n  get _physicalBottom() {\n    return this._physicalTop + this._physicalSize;\n  },\n  /**\n   * The bottom of the scroll.\n   */\n  get _scrollBottom() {\n    return this._scrollPosition + this._viewportHeight;\n  },\n  /**\n   * The n-th item rendered in the last physical item.\n   */\n  get _virtualEnd() {\n    return this._virtualStart + this._physicalCount - 1;\n  },\n  /**\n   * The height of the physical content that isn't on the screen.\n   */\n  get _hiddenContentSize() {\n    return this._physicalSize - this._viewportHeight;\n  },\n  /**\n   * The maximum scroll top value.\n   */\n  get _maxScrollTop() {\n    return this._estScrollHeight - this._viewportHeight + this._scrollOffset;\n  },\n  /**\n   * The largest n-th value for an item such that it can be rendered in\n   * `_physicalStart`.\n   */\n  get _maxVirtualStart() {\n    const virtualCount = this._virtualCount;\n    return Math.max(0, virtualCount - this._physicalCount);\n  },\n  get _virtualStart() {\n    return this._virtualStartVal || 0;\n  },\n  set _virtualStart(val) {\n    val = this._clamp(val, 0, this._maxVirtualStart);\n    this._virtualStartVal = val;\n  },\n  get _physicalStart() {\n    return this._physicalStartVal || 0;\n  },\n  /**\n   * The k-th tile that is at the top of the scrolling list.\n   */\n  set _physicalStart(val) {\n    val %= this._physicalCount;\n    if (val < 0) {\n      val = this._physicalCount + val;\n    }\n    this._physicalStartVal = val;\n  },\n  /**\n   * The k-th tile that is at the bottom of the scrolling list.\n   */\n  get _physicalEnd() {\n    return (this._physicalStart + this._physicalCount - 1) % this._physicalCount;\n  },\n  get _physicalCount() {\n    return this._physicalCountVal || 0;\n  },\n  set _physicalCount(val) {\n    this._physicalCountVal = val;\n  },\n  /**\n   * An optimal physical size such that we will have enough physical items\n   * to fill up the viewport and recycle when the user scrolls.\n   *\n   * This default value assumes that we will at least have the equivalent\n   * to a viewport of physical items above and below the user's viewport.\n   */\n  get _optPhysicalSize() {\n    return this._viewportHeight === 0 ? Infinity : this._viewportHeight * this._maxPages;\n  },\n  /**\n   * True if the current list is visible.\n   */\n  get _isVisible() {\n    return Boolean(this.offsetWidth || this.offsetHeight);\n  },\n  /**\n   * Gets the index of the first visible item in the viewport.\n   *\n   * @type {number}\n   */\n  get firstVisibleIndex() {\n    let idx = this._firstVisibleIndexVal;\n    if (idx == null) {\n      let physicalOffset = this._physicalTop + this._scrollOffset;\n      idx = this._iterateItems((pidx, vidx) => {\n        physicalOffset += this._getPhysicalSizeIncrement(pidx);\n        if (physicalOffset > this._scrollPosition) {\n          return vidx;\n        }\n      }) || 0;\n      this._firstVisibleIndexVal = idx;\n    }\n    return idx;\n  },\n  /**\n   * Gets the index of the last visible item in the viewport.\n   *\n   * @type {number}\n   */\n  get lastVisibleIndex() {\n    let idx = this._lastVisibleIndexVal;\n    if (idx == null) {\n      let physicalOffset = this._physicalTop + this._scrollOffset;\n      this._iterateItems((pidx, vidx) => {\n        if (physicalOffset < this._scrollBottom) {\n          idx = vidx;\n        }\n        physicalOffset += this._getPhysicalSizeIncrement(pidx);\n      });\n      this._lastVisibleIndexVal = idx;\n    }\n    return idx;\n  },\n  get _scrollOffset() {\n    return this._scrollerPaddingTop + this.scrollOffset;\n  },\n  /**\n   * Recycles the physical items when needed.\n   */\n  _scrollHandler() {\n    const scrollTop = Math.max(0, Math.min(this._maxScrollTop, this._scrollTop));\n    let delta = scrollTop - this._scrollPosition;\n    const isScrollingDown = delta >= 0;\n    // Track the current scroll position.\n    this._scrollPosition = scrollTop;\n    // Clear indexes for first and last visible indexes.\n    this._firstVisibleIndexVal = null;\n    this._lastVisibleIndexVal = null;\n    // Random access.\n    if (Math.abs(delta) > this._physicalSize && this._physicalSize > 0) {\n      delta -= this._scrollOffset;\n      const idxAdjustment = Math.round(delta / this._physicalAverage);\n      this._virtualStart += idxAdjustment;\n      this._physicalStart += idxAdjustment;\n      // Estimate new physical offset based on the virtual start index.\n      // adjusts the physical start position to stay in sync with the clamped\n      // virtual start index. It's critical not to let this value be\n      // more than the scroll position however, since that would result in\n      // the physical items not covering the viewport, and leading to\n      // _increasePoolIfNeeded to run away creating items to try to fill it.\n      this._physicalTop = Math.min(Math.floor(this._virtualStart) * this._physicalAverage, this._scrollPosition);\n      this._update();\n    } else if (this._physicalCount > 0) {\n      const reusables = this._getReusables(isScrollingDown);\n      if (isScrollingDown) {\n        this._physicalTop = reusables.physicalTop;\n        this._virtualStart += reusables.indexes.length;\n        this._physicalStart += reusables.indexes.length;\n      } else {\n        this._virtualStart -= reusables.indexes.length;\n        this._physicalStart -= reusables.indexes.length;\n      }\n      this._update(reusables.indexes, isScrollingDown ? null : reusables.indexes);\n      this._debounce('_increasePoolIfNeeded', this._increasePoolIfNeeded.bind(this, 0), _async_js__WEBPACK_IMPORTED_MODULE_0__.microTask);\n    }\n  },\n  /**\n   * Returns an object that contains the indexes of the physical items\n   * that might be reused and the physicalTop.\n   *\n   * @param {boolean} fromTop If the potential reusable items are above the scrolling region.\n   */\n  _getReusables(fromTop) {\n    let ith, offsetContent, physicalItemHeight;\n    const idxs = [];\n    const protectedOffsetContent = this._hiddenContentSize * this._ratio;\n    const virtualStart = this._virtualStart;\n    const virtualEnd = this._virtualEnd;\n    const physicalCount = this._physicalCount;\n    let top = this._physicalTop + this._scrollOffset;\n    const bottom = this._physicalBottom + this._scrollOffset;\n    // This may be called outside of a scrollHandler, so use last cached position\n    const scrollTop = this._scrollPosition;\n    const scrollBottom = this._scrollBottom;\n    if (fromTop) {\n      ith = this._physicalStart;\n      offsetContent = scrollTop - top;\n    } else {\n      ith = this._physicalEnd;\n      offsetContent = bottom - scrollBottom;\n    }\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      physicalItemHeight = this._getPhysicalSizeIncrement(ith);\n      offsetContent -= physicalItemHeight;\n      if (idxs.length >= physicalCount || offsetContent <= protectedOffsetContent) {\n        break;\n      }\n      if (fromTop) {\n        // Check that index is within the valid range.\n        if (virtualEnd + idxs.length + 1 >= this._virtualCount) {\n          break;\n        }\n        // Check that the index is not visible.\n        if (top + physicalItemHeight >= scrollTop - this._scrollOffset) {\n          break;\n        }\n        idxs.push(ith);\n        top += physicalItemHeight;\n        ith = (ith + 1) % physicalCount;\n      } else {\n        // Check that index is within the valid range.\n        if (virtualStart - idxs.length <= 0) {\n          break;\n        }\n        // Check that the index is not visible.\n        if (top + this._physicalSize - physicalItemHeight <= scrollBottom) {\n          break;\n        }\n        idxs.push(ith);\n        top -= physicalItemHeight;\n        ith = ith === 0 ? physicalCount - 1 : ith - 1;\n      }\n    }\n    return {\n      indexes: idxs,\n      physicalTop: top - this._scrollOffset\n    };\n  },\n  /**\n   * Update the list of items, starting from the `_virtualStart` item.\n   * @param {!Array<number>=} itemSet\n   * @param {!Array<number>=} movingUp\n   */\n  _update(itemSet, movingUp) {\n    if (itemSet && itemSet.length === 0 || this._physicalCount === 0) {\n      return;\n    }\n    this._assignModels(itemSet);\n    this._updateMetrics(itemSet);\n    // Adjust offset after measuring.\n    if (movingUp) {\n      while (movingUp.length) {\n        const idx = movingUp.pop();\n        this._physicalTop -= this._getPhysicalSizeIncrement(idx);\n      }\n    }\n    this._positionItems();\n    this._updateScrollerSize();\n  },\n  _isClientFull() {\n    return this._scrollBottom !== 0 && this._physicalBottom - 1 >= this._scrollBottom && this._physicalTop <= this._scrollPosition;\n  },\n  /**\n   * Increases the pool size.\n   */\n  _increasePoolIfNeeded(count) {\n    const nextPhysicalCount = this._clamp(this._physicalCount + count, DEFAULT_PHYSICAL_COUNT, this._virtualCount - this._virtualStart);\n    const delta = nextPhysicalCount - this._physicalCount;\n    let nextIncrease = Math.round(this._physicalCount * 0.5);\n    if (delta < 0) {\n      return;\n    }\n    if (delta > 0) {\n      const ts = window.performance.now();\n      // Concat arrays in place.\n      [].push.apply(this._physicalItems, this._createPool(delta));\n      // Push 0s into physicalSizes. Can't use Array.fill because IE11 doesn't\n      // support it.\n      for (let i = 0; i < delta; i++) {\n        this._physicalSizes.push(0);\n      }\n      this._physicalCount += delta;\n      // Update the physical start if it needs to preserve the model of the\n      // focused item. In this situation, the focused item is currently rendered\n      // and its model would have changed after increasing the pool if the\n      // physical start remained unchanged.\n      if (this._physicalStart > this._physicalEnd && this._isIndexRendered(this._focusedVirtualIndex) && this._getPhysicalIndex(this._focusedVirtualIndex) < this._physicalEnd) {\n        this._physicalStart += delta;\n      }\n      this._update();\n      this._templateCost = (window.performance.now() - ts) / delta;\n      nextIncrease = Math.round(this._physicalCount * 0.5);\n    }\n    if (this._virtualEnd >= this._virtualCount - 1 || nextIncrease === 0) {\n      // Do nothing.\n    } else if (!this._isClientFull()) {\n      this._debounce('_increasePoolIfNeeded', this._increasePoolIfNeeded.bind(this, nextIncrease), _async_js__WEBPACK_IMPORTED_MODULE_0__.microTask);\n    } else if (this._physicalSize < this._optPhysicalSize) {\n      // Yield and increase the pool during idle time until the physical size is\n      // optimal.\n      this._debounce('_increasePoolIfNeeded', this._increasePoolIfNeeded.bind(this, this._clamp(Math.round(50 / this._templateCost), 1, nextIncrease)), _async_js__WEBPACK_IMPORTED_MODULE_0__.idlePeriod);\n    }\n  },\n  /**\n   * Renders the a new list.\n   */\n  _render() {\n    if (!this.isAttached || !this._isVisible) {\n      return;\n    }\n    if (this._physicalCount !== 0) {\n      const reusables = this._getReusables(true);\n      this._physicalTop = reusables.physicalTop;\n      this._virtualStart += reusables.indexes.length;\n      this._physicalStart += reusables.indexes.length;\n      this._update(reusables.indexes);\n      this._update();\n      this._increasePoolIfNeeded(0);\n    } else if (this._virtualCount > 0) {\n      // Initial render\n      this.updateViewportBoundaries();\n      this._increasePoolIfNeeded(DEFAULT_PHYSICAL_COUNT);\n    }\n  },\n  /**\n   * Called when the items have changed. That is, reassignments\n   * to `items`, splices or updates to a single item.\n   */\n  _itemsChanged(change) {\n    if (change.path === 'items') {\n      this._virtualStart = 0;\n      this._physicalTop = 0;\n      this._virtualCount = this.items ? this.items.length : 0;\n      this._physicalIndexForKey = {};\n      this._firstVisibleIndexVal = null;\n      this._lastVisibleIndexVal = null;\n      if (!this._physicalItems) {\n        this._physicalItems = [];\n      }\n      if (!this._physicalSizes) {\n        this._physicalSizes = [];\n      }\n      this._physicalStart = 0;\n      if (this._scrollTop > this._scrollOffset) {\n        this._resetScrollPosition(0);\n      }\n      this._debounce('_render', this._render, _async_js__WEBPACK_IMPORTED_MODULE_0__.animationFrame);\n    }\n  },\n  /**\n   * Executes a provided function per every physical index in `itemSet`\n   * `itemSet` default value is equivalent to the entire set of physical\n   * indexes.\n   *\n   * @param {!function(number, number)} fn\n   * @param {!Array<number>=} itemSet\n   */\n  _iterateItems(fn, itemSet) {\n    let pidx, vidx, rtn, i;\n    if (arguments.length === 2 && itemSet) {\n      for (i = 0; i < itemSet.length; i++) {\n        pidx = itemSet[i];\n        vidx = this._computeVidx(pidx);\n        if ((rtn = fn.call(this, pidx, vidx)) != null) {\n          return rtn;\n        }\n      }\n    } else {\n      pidx = this._physicalStart;\n      vidx = this._virtualStart;\n      for (; pidx < this._physicalCount; pidx++, vidx++) {\n        if ((rtn = fn.call(this, pidx, vidx)) != null) {\n          return rtn;\n        }\n      }\n      for (pidx = 0; pidx < this._physicalStart; pidx++, vidx++) {\n        if ((rtn = fn.call(this, pidx, vidx)) != null) {\n          return rtn;\n        }\n      }\n    }\n  },\n  /**\n   * Returns the virtual index for a given physical index\n   *\n   * @param {number} pidx Physical index\n   * @return {number}\n   */\n  _computeVidx(pidx) {\n    if (pidx >= this._physicalStart) {\n      return this._virtualStart + (pidx - this._physicalStart);\n    }\n    return this._virtualStart + (this._physicalCount - this._physicalStart) + pidx;\n  },\n  /**\n   * Updates the position of the physical items.\n   */\n  _positionItems() {\n    this._adjustScrollPosition();\n    let y = this._physicalTop;\n    this._iterateItems(pidx => {\n      this.translate3d(0, `${y}px`, 0, this._physicalItems[pidx]);\n      y += this._physicalSizes[pidx];\n    });\n  },\n  _getPhysicalSizeIncrement(pidx) {\n    return this._physicalSizes[pidx];\n  },\n  /**\n   * Adjusts the scroll position when it was overestimated.\n   */\n  _adjustScrollPosition() {\n    const deltaHeight = this._virtualStart === 0 ? this._physicalTop : Math.min(this._scrollPosition + this._physicalTop, 0);\n    // Note: the delta can be positive or negative.\n    if (deltaHeight !== 0) {\n      this._physicalTop -= deltaHeight;\n      // This may be called outside of a scrollHandler, so use last cached position\n      const scrollTop = this._scrollPosition;\n      // Juking scroll position during interial scrolling on iOS is no bueno\n      if (!IOS_TOUCH_SCROLLING && scrollTop > 0) {\n        this._resetScrollPosition(scrollTop - deltaHeight);\n      }\n    }\n  },\n  /**\n   * Sets the position of the scroll.\n   */\n  _resetScrollPosition(pos) {\n    if (this.scrollTarget && pos >= 0) {\n      this._scrollTop = pos;\n      this._scrollPosition = this._scrollTop;\n    }\n  },\n  /**\n   * Sets the scroll height, that's the height of the content,\n   *\n   * @param {boolean=} forceUpdate If true, updates the height no matter what.\n   */\n  _updateScrollerSize(forceUpdate) {\n    const estScrollHeight = this._physicalBottom + Math.max(this._virtualCount - this._physicalCount - this._virtualStart, 0) * this._physicalAverage;\n    this._estScrollHeight = estScrollHeight;\n\n    // Amortize height adjustment, so it won't trigger large repaints too often.\n    if (forceUpdate || this._scrollHeight === 0 || this._scrollPosition >= estScrollHeight - this._physicalSize || Math.abs(estScrollHeight - this._scrollHeight) >= this._viewportHeight) {\n      this.$.items.style.height = `${estScrollHeight}px`;\n      this._scrollHeight = estScrollHeight;\n    }\n  },\n  /**\n   * Scroll to a specific index in the virtual list regardless\n   * of the physical items in the DOM tree.\n   *\n   * @method scrollToIndex\n   * @param {number} idx The index of the item\n   */\n  scrollToIndex(idx) {\n    if (typeof idx !== 'number' || idx < 0 || idx > this.items.length - 1) {\n      return;\n    }\n    (0,_debounce_js__WEBPACK_IMPORTED_MODULE_1__.flush)();\n    // Items should have been rendered prior scrolling to an index.\n    if (this._physicalCount === 0) {\n      return;\n    }\n    idx = this._clamp(idx, 0, this._virtualCount - 1);\n    // Update the virtual start only when needed.\n    if (!this._isIndexRendered(idx) || idx >= this._maxVirtualStart) {\n      this._virtualStart = idx - 1;\n    }\n    this._assignModels();\n    this._updateMetrics();\n    // Estimate new physical offset.\n    this._physicalTop = this._virtualStart * this._physicalAverage;\n    let currentTopItem = this._physicalStart;\n    let currentVirtualItem = this._virtualStart;\n    let targetOffsetTop = 0;\n    const hiddenContentSize = this._hiddenContentSize;\n    // Scroll to the item as much as we can.\n    while (currentVirtualItem < idx && targetOffsetTop <= hiddenContentSize) {\n      targetOffsetTop += this._getPhysicalSizeIncrement(currentTopItem);\n      currentTopItem = (currentTopItem + 1) % this._physicalCount;\n      currentVirtualItem += 1;\n    }\n    this._updateScrollerSize(true);\n    this._positionItems();\n    this._resetScrollPosition(this._physicalTop + this._scrollOffset + targetOffsetTop);\n    this._increasePoolIfNeeded(0);\n    // Clear cached visible index.\n    this._firstVisibleIndexVal = null;\n    this._lastVisibleIndexVal = null;\n  },\n  /**\n   * Reset the physical average and the average count.\n   */\n  _resetAverage() {\n    this._physicalAverage = 0;\n    this._physicalAverageCount = 0;\n  },\n  /**\n   * A handler for the `iron-resize` event triggered by `IronResizableBehavior`\n   * when the element is resized.\n   */\n  _resizeHandler() {\n    this._debounce('_render', () => {\n      // Clear cached visible index.\n      this._firstVisibleIndexVal = null;\n      this._lastVisibleIndexVal = null;\n      if (this._isVisible) {\n        this.updateViewportBoundaries();\n        // Reinstall the scroll event listener.\n        this.toggleScrollListener(true);\n        this._resetAverage();\n        this._render();\n      } else {\n        // Uninstall the scroll event listener.\n        this.toggleScrollListener(false);\n      }\n    }, _async_js__WEBPACK_IMPORTED_MODULE_0__.animationFrame);\n  },\n  _isIndexRendered(idx) {\n    return idx >= this._virtualStart && idx <= this._virtualEnd;\n  },\n  _getPhysicalIndex(vidx) {\n    return (this._physicalStart + (vidx - this._virtualStart)) % this._physicalCount;\n  },\n  _clamp(v, min, max) {\n    return Math.min(max, Math.max(min, v));\n  },\n  _debounce(name, cb, asyncModule) {\n    if (!this._debouncers) {\n      this._debouncers = {};\n    }\n    this._debouncers[name] = _debounce_js__WEBPACK_IMPORTED_MODULE_1__.Debouncer.debounce(this._debouncers[name], asyncModule, cb.bind(this));\n    (0,_debounce_js__WEBPACK_IMPORTED_MODULE_1__.enqueueDebouncer)(this._debouncers[name]);\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/component-base/src/iron-list-core.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/component-base/src/overlay-class-mixin.js":
/*!************************************************************************!*\
  !*** ./node_modules/@vaadin/component-base/src/overlay-class-mixin.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OverlayClassMixin: () => (/* binding */ OverlayClassMixin)\n/* harmony export */ });\n/**\n * @license\n * Copyright (c) 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * A mixin that forwards CSS class names to the internal overlay element\n * by setting the `overlayClass` property or `overlay-class` attribute.\n *\n * @polymerMixin\n */\nconst OverlayClassMixin = superclass => class OverlayClassMixinClass extends superclass {\n  static get properties() {\n    return {\n      /**\n       * A space-delimited list of CSS class names to set on the overlay element.\n       * This property does not affect other CSS class names set manually via JS.\n       *\n       * Note, if the CSS class name was set with this property, clearing it will\n       * remove it from the overlay, even if the same class name was also added\n       * manually, e.g. by using `classList.add()` in the `renderer` function.\n       *\n       * @attr {string} overlay-class\n       */\n      overlayClass: {\n        type: String\n      },\n      /**\n       * An overlay element on which CSS class names are set.\n       *\n       * @protected\n       */\n      _overlayElement: {\n        type: Object\n      }\n    };\n  }\n  static get observers() {\n    return ['__updateOverlayClassNames(overlayClass, _overlayElement)'];\n  }\n\n  /** @private */\n  __updateOverlayClassNames(overlayClass, overlayElement) {\n    if (!overlayElement) {\n      return;\n    }\n\n    // Overlay is set but overlayClass is not set\n    if (overlayClass === undefined) {\n      return;\n    }\n    const {\n      classList\n    } = overlayElement;\n    if (!this.__initialClasses) {\n      this.__initialClasses = new Set(classList);\n    }\n    if (Array.isArray(this.__previousClasses)) {\n      // Remove old classes that no longer apply\n      const classesToRemove = this.__previousClasses.filter(name => !this.__initialClasses.has(name));\n      if (classesToRemove.length > 0) {\n        classList.remove(...classesToRemove);\n      }\n    }\n\n    // Add new classes based on the overlayClass\n    const classesToAdd = typeof overlayClass === 'string' ? overlayClass.split(' ') : [];\n    if (classesToAdd.length > 0) {\n      classList.add(...classesToAdd);\n    }\n    this.__previousClasses = classesToAdd;\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21wb25lbnQtYmFzZS9zcmMvb3ZlcmxheS1jbGFzcy1taXhpbi5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUFBO0FBQUE7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9tZS1hc3Npc3RhbnQtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21wb25lbnQtYmFzZS9zcmMvb3ZlcmxheS1jbGFzcy1taXhpbi5qcz83OWU3Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAoYykgMjAyMyBWYWFkaW4gTHRkLlxuICogVGhpcyBwcm9ncmFtIGlzIGF2YWlsYWJsZSB1bmRlciBBcGFjaGUgTGljZW5zZSBWZXJzaW9uIDIuMCwgYXZhaWxhYmxlIGF0IGh0dHBzOi8vdmFhZGluLmNvbS9saWNlbnNlL1xuICovXG5cbi8qKlxuICogQSBtaXhpbiB0aGF0IGZvcndhcmRzIENTUyBjbGFzcyBuYW1lcyB0byB0aGUgaW50ZXJuYWwgb3ZlcmxheSBlbGVtZW50XG4gKiBieSBzZXR0aW5nIHRoZSBgb3ZlcmxheUNsYXNzYCBwcm9wZXJ0eSBvciBgb3ZlcmxheS1jbGFzc2AgYXR0cmlidXRlLlxuICpcbiAqIEBwb2x5bWVyTWl4aW5cbiAqL1xuZXhwb3J0IGNvbnN0IE92ZXJsYXlDbGFzc01peGluID0gKHN1cGVyY2xhc3MpID0+XG4gIGNsYXNzIE92ZXJsYXlDbGFzc01peGluQ2xhc3MgZXh0ZW5kcyBzdXBlcmNsYXNzIHtcbiAgICBzdGF0aWMgZ2V0IHByb3BlcnRpZXMoKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICAvKipcbiAgICAgICAgICogQSBzcGFjZS1kZWxpbWl0ZWQgbGlzdCBvZiBDU1MgY2xhc3MgbmFtZXMgdG8gc2V0IG9uIHRoZSBvdmVybGF5IGVsZW1lbnQuXG4gICAgICAgICAqIFRoaXMgcHJvcGVydHkgZG9lcyBub3QgYWZmZWN0IG90aGVyIENTUyBjbGFzcyBuYW1lcyBzZXQgbWFudWFsbHkgdmlhIEpTLlxuICAgICAgICAgKlxuICAgICAgICAgKiBOb3RlLCBpZiB0aGUgQ1NTIGNsYXNzIG5hbWUgd2FzIHNldCB3aXRoIHRoaXMgcHJvcGVydHksIGNsZWFyaW5nIGl0IHdpbGxcbiAgICAgICAgICogcmVtb3ZlIGl0IGZyb20gdGhlIG92ZXJsYXksIGV2ZW4gaWYgdGhlIHNhbWUgY2xhc3MgbmFtZSB3YXMgYWxzbyBhZGRlZFxuICAgICAgICAgKiBtYW51YWxseSwgZS5nLiBieSB1c2luZyBgY2xhc3NMaXN0LmFkZCgpYCBpbiB0aGUgYHJlbmRlcmVyYCBmdW5jdGlvbi5cbiAgICAgICAgICpcbiAgICAgICAgICogQGF0dHIge3N0cmluZ30gb3ZlcmxheS1jbGFzc1xuICAgICAgICAgKi9cbiAgICAgICAgb3ZlcmxheUNsYXNzOiB7XG4gICAgICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgICB9LFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBBbiBvdmVybGF5IGVsZW1lbnQgb24gd2hpY2ggQ1NTIGNsYXNzIG5hbWVzIGFyZSBzZXQuXG4gICAgICAgICAqXG4gICAgICAgICAqIEBwcm90ZWN0ZWRcbiAgICAgICAgICovXG4gICAgICAgIF9vdmVybGF5RWxlbWVudDoge1xuICAgICAgICAgIHR5cGU6IE9iamVjdCxcbiAgICAgICAgfSxcbiAgICAgIH07XG4gICAgfVxuXG4gICAgc3RhdGljIGdldCBvYnNlcnZlcnMoKSB7XG4gICAgICByZXR1cm4gWydfX3VwZGF0ZU92ZXJsYXlDbGFzc05hbWVzKG92ZXJsYXlDbGFzcywgX292ZXJsYXlFbGVtZW50KSddO1xuICAgIH1cblxuICAgIC8qKiBAcHJpdmF0ZSAqL1xuICAgIF9fdXBkYXRlT3ZlcmxheUNsYXNzTmFtZXMob3ZlcmxheUNsYXNzLCBvdmVybGF5RWxlbWVudCkge1xuICAgICAgaWYgKCFvdmVybGF5RWxlbWVudCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIC8vIE92ZXJsYXkgaXMgc2V0IGJ1dCBvdmVybGF5Q2xhc3MgaXMgbm90IHNldFxuICAgICAgaWYgKG92ZXJsYXlDbGFzcyA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgY29uc3QgeyBjbGFzc0xpc3QgfSA9IG92ZXJsYXlFbGVtZW50O1xuXG4gICAgICBpZiAoIXRoaXMuX19pbml0aWFsQ2xhc3Nlcykge1xuICAgICAgICB0aGlzLl9faW5pdGlhbENsYXNzZXMgPSBuZXcgU2V0KGNsYXNzTGlzdCk7XG4gICAgICB9XG5cbiAgICAgIGlmIChBcnJheS5pc0FycmF5KHRoaXMuX19wcmV2aW91c0NsYXNzZXMpKSB7XG4gICAgICAgIC8vIFJlbW92ZSBvbGQgY2xhc3NlcyB0aGF0IG5vIGxvbmdlciBhcHBseVxuICAgICAgICBjb25zdCBjbGFzc2VzVG9SZW1vdmUgPSB0aGlzLl9fcHJldmlvdXNDbGFzc2VzLmZpbHRlcigobmFtZSkgPT4gIXRoaXMuX19pbml0aWFsQ2xhc3Nlcy5oYXMobmFtZSkpO1xuICAgICAgICBpZiAoY2xhc3Nlc1RvUmVtb3ZlLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICBjbGFzc0xpc3QucmVtb3ZlKC4uLmNsYXNzZXNUb1JlbW92ZSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgLy8gQWRkIG5ldyBjbGFzc2VzIGJhc2VkIG9uIHRoZSBvdmVybGF5Q2xhc3NcbiAgICAgIGNvbnN0IGNsYXNzZXNUb0FkZCA9IHR5cGVvZiBvdmVybGF5Q2xhc3MgPT09ICdzdHJpbmcnID8gb3ZlcmxheUNsYXNzLnNwbGl0KCcgJykgOiBbXTtcbiAgICAgIGlmIChjbGFzc2VzVG9BZGQubGVuZ3RoID4gMCkge1xuICAgICAgICBjbGFzc0xpc3QuYWRkKC4uLmNsYXNzZXNUb0FkZCk7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuX19wcmV2aW91c0NsYXNzZXMgPSBjbGFzc2VzVG9BZGQ7XG4gICAgfVxuICB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/component-base/src/overlay-class-mixin.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/component-base/src/path-utils.js":
/*!***************************************************************!*\
  !*** ./node_modules/@vaadin/component-base/src/path-utils.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   get: () => (/* binding */ get),\n/* harmony export */   set: () => (/* binding */ set)\n/* harmony export */ });\n/**\n * @license\n * Copyright (c) 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * Convenience method for reading a value from a path.\n *\n * @param {string} path\n * @param {object} object\n */\nfunction get(path, object) {\n  return path.split('.').reduce((obj, property) => obj ? obj[property] : undefined, object);\n}\n\n/**\n * Convenience method for setting a value to a path.\n *\n * @param {string} path\n * @param {unknown} value\n * @param {object} object\n */\nfunction set(path, value, object) {\n  const pathParts = path.split('.');\n  const lastPart = pathParts.pop();\n  const target = pathParts.reduce((target, part) => target[part], object);\n  target[lastPart] = value;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21wb25lbnQtYmFzZS9zcmMvcGF0aC11dGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9tZS1hc3Npc3RhbnQtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21wb25lbnQtYmFzZS9zcmMvcGF0aC11dGlscy5qcz80NzMwIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAoYykgMjAyMyBWYWFkaW4gTHRkLlxuICogVGhpcyBwcm9ncmFtIGlzIGF2YWlsYWJsZSB1bmRlciBBcGFjaGUgTGljZW5zZSBWZXJzaW9uIDIuMCwgYXZhaWxhYmxlIGF0IGh0dHBzOi8vdmFhZGluLmNvbS9saWNlbnNlL1xuICovXG5cbi8qKlxuICogQ29udmVuaWVuY2UgbWV0aG9kIGZvciByZWFkaW5nIGEgdmFsdWUgZnJvbSBhIHBhdGguXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHBhdGhcbiAqIEBwYXJhbSB7b2JqZWN0fSBvYmplY3RcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldChwYXRoLCBvYmplY3QpIHtcbiAgcmV0dXJuIHBhdGguc3BsaXQoJy4nKS5yZWR1Y2UoKG9iaiwgcHJvcGVydHkpID0+IChvYmogPyBvYmpbcHJvcGVydHldIDogdW5kZWZpbmVkKSwgb2JqZWN0KTtcbn1cblxuLyoqXG4gKiBDb252ZW5pZW5jZSBtZXRob2QgZm9yIHNldHRpbmcgYSB2YWx1ZSB0byBhIHBhdGguXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHBhdGhcbiAqIEBwYXJhbSB7dW5rbm93bn0gdmFsdWVcbiAqIEBwYXJhbSB7b2JqZWN0fSBvYmplY3RcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNldChwYXRoLCB2YWx1ZSwgb2JqZWN0KSB7XG4gIGNvbnN0IHBhdGhQYXJ0cyA9IHBhdGguc3BsaXQoJy4nKTtcbiAgY29uc3QgbGFzdFBhcnQgPSBwYXRoUGFydHMucG9wKCk7XG4gIGNvbnN0IHRhcmdldCA9IHBhdGhQYXJ0cy5yZWR1Y2UoKHRhcmdldCwgcGFydCkgPT4gdGFyZ2V0W3BhcnRdLCBvYmplY3QpO1xuICB0YXJnZXRbbGFzdFBhcnRdID0gdmFsdWU7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/component-base/src/path-utils.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/component-base/src/templates.js":
/*!**************************************************************!*\
  !*** ./node_modules/@vaadin/component-base/src/templates.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   processTemplates: () => (/* binding */ processTemplates)\n/* harmony export */ });\n/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * Passes the component to the template renderer callback if the template renderer is imported.\n * Otherwise, if there is a template, it warns that the template renderer needs to be imported.\n *\n * @param {HTMLElement} component\n */\nfunction processTemplates(component) {\n  if (window.Vaadin && window.Vaadin.templateRendererCallback) {\n    window.Vaadin.templateRendererCallback(component);\n    return;\n  }\n  if (component.querySelector('template')) {\n    console.warn(`WARNING: <template> inside <${component.localName}> is no longer supported. Import @vaadin/polymer-legacy-adapter/template-renderer.js to enable compatibility.`);\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21wb25lbnQtYmFzZS9zcmMvdGVtcGxhdGVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBR0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2hvbWUtYXNzaXN0YW50LWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0B2YWFkaW4vY29tcG9uZW50LWJhc2Uvc3JjL3RlbXBsYXRlcy5qcz8yMmZlIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAoYykgMjAyMSAtIDIwMjMgVmFhZGluIEx0ZC5cbiAqIFRoaXMgcHJvZ3JhbSBpcyBhdmFpbGFibGUgdW5kZXIgQXBhY2hlIExpY2Vuc2UgVmVyc2lvbiAyLjAsIGF2YWlsYWJsZSBhdCBodHRwczovL3ZhYWRpbi5jb20vbGljZW5zZS9cbiAqL1xuXG4vKipcbiAqIFBhc3NlcyB0aGUgY29tcG9uZW50IHRvIHRoZSB0ZW1wbGF0ZSByZW5kZXJlciBjYWxsYmFjayBpZiB0aGUgdGVtcGxhdGUgcmVuZGVyZXIgaXMgaW1wb3J0ZWQuXG4gKiBPdGhlcndpc2UsIGlmIHRoZXJlIGlzIGEgdGVtcGxhdGUsIGl0IHdhcm5zIHRoYXQgdGhlIHRlbXBsYXRlIHJlbmRlcmVyIG5lZWRzIHRvIGJlIGltcG9ydGVkLlxuICpcbiAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IGNvbXBvbmVudFxuICovXG5leHBvcnQgZnVuY3Rpb24gcHJvY2Vzc1RlbXBsYXRlcyhjb21wb25lbnQpIHtcbiAgaWYgKHdpbmRvdy5WYWFkaW4gJiYgd2luZG93LlZhYWRpbi50ZW1wbGF0ZVJlbmRlcmVyQ2FsbGJhY2spIHtcbiAgICB3aW5kb3cuVmFhZGluLnRlbXBsYXRlUmVuZGVyZXJDYWxsYmFjayhjb21wb25lbnQpO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGlmIChjb21wb25lbnQucXVlcnlTZWxlY3RvcigndGVtcGxhdGUnKSkge1xuICAgIGNvbnNvbGUud2FybihcbiAgICAgIGBXQVJOSU5HOiA8dGVtcGxhdGU+IGluc2lkZSA8JHtjb21wb25lbnQubG9jYWxOYW1lfT4gaXMgbm8gbG9uZ2VyIHN1cHBvcnRlZC4gSW1wb3J0IEB2YWFkaW4vcG9seW1lci1sZWdhY3ktYWRhcHRlci90ZW1wbGF0ZS1yZW5kZXJlci5qcyB0byBlbmFibGUgY29tcGF0aWJpbGl0eS5gLFxuICAgICk7XG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/component-base/src/templates.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/component-base/src/unique-id-utils.js":
/*!********************************************************************!*\
  !*** ./node_modules/@vaadin/component-base/src/unique-id-utils.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateUniqueId: () => (/* binding */ generateUniqueId),\n/* harmony export */   resetUniqueId: () => (/* binding */ resetUniqueId)\n/* harmony export */ });\n/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\nlet uniqueId = 0;\n\n/**\n * Resets the unique id counter.\n *\n * @return {void}\n */\nfunction resetUniqueId() {\n  uniqueId = 0;\n}\n\n/**\n * Returns a unique integer id.\n *\n * @return {number}\n */\nfunction generateUniqueId() {\n  // eslint-disable-next-line no-plusplus\n  return uniqueId++;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21wb25lbnQtYmFzZS9zcmMvdW5pcXVlLWlkLXV0aWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2hvbWUtYXNzaXN0YW50LWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0B2YWFkaW4vY29tcG9uZW50LWJhc2Uvc3JjL3VuaXF1ZS1pZC11dGlscy5qcz9lMjcwIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAoYykgMjAyMSAtIDIwMjMgVmFhZGluIEx0ZC5cbiAqIFRoaXMgcHJvZ3JhbSBpcyBhdmFpbGFibGUgdW5kZXIgQXBhY2hlIExpY2Vuc2UgVmVyc2lvbiAyLjAsIGF2YWlsYWJsZSBhdCBodHRwczovL3ZhYWRpbi5jb20vbGljZW5zZS9cbiAqL1xuXG5sZXQgdW5pcXVlSWQgPSAwO1xuXG4vKipcbiAqIFJlc2V0cyB0aGUgdW5pcXVlIGlkIGNvdW50ZXIuXG4gKlxuICogQHJldHVybiB7dm9pZH1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJlc2V0VW5pcXVlSWQoKSB7XG4gIHVuaXF1ZUlkID0gMDtcbn1cblxuLyoqXG4gKiBSZXR1cm5zIGEgdW5pcXVlIGludGVnZXIgaWQuXG4gKlxuICogQHJldHVybiB7bnVtYmVyfVxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2VuZXJhdGVVbmlxdWVJZCgpIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBsdXNwbHVzXG4gIHJldHVybiB1bmlxdWVJZCsrO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/component-base/src/unique-id-utils.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/component-base/src/virtualizer-iron-list-adapter.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@vaadin/component-base/src/virtualizer-iron-list-adapter.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IronListAdapter: () => (/* binding */ IronListAdapter)\n/* harmony export */ });\n/* harmony import */ var _async_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./async.js */ \"./node_modules/@vaadin/component-base/src/async.js\");\n/* harmony import */ var _browser_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./browser-utils.js */ \"./node_modules/@vaadin/component-base/src/browser-utils.js\");\n/* harmony import */ var _debounce_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./debounce.js */ \"./node_modules/@vaadin/component-base/src/debounce.js\");\n/* harmony import */ var _iron_list_core_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./iron-list-core.js */ \"./node_modules/@vaadin/component-base/src/iron-list-core.js\");\n/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n/* eslint-disable @typescript-eslint/member-ordering */\n// https://github.com/vaadin/eslint-config-vaadin/issues/33\n\n\n\n\n\n// Iron-list can by default handle sizes up to around 100000.\n// When the size is larger than MAX_VIRTUAL_COUNT _vidxOffset is used\nconst MAX_VIRTUAL_COUNT = 100000;\nconst OFFSET_ADJUST_MIN_THRESHOLD = 1000;\nclass IronListAdapter {\n  constructor({\n    createElements,\n    updateElement,\n    scrollTarget,\n    scrollContainer,\n    elementsContainer,\n    reorderElements\n  }) {\n    this.isAttached = true;\n    this._vidxOffset = 0;\n    this.createElements = createElements;\n    this.updateElement = updateElement;\n    this.scrollTarget = scrollTarget;\n    this.scrollContainer = scrollContainer;\n    this.elementsContainer = elementsContainer || scrollContainer;\n    this.reorderElements = reorderElements;\n    // Iron-list uses this value to determine how many pages of elements to render\n    this._maxPages = 1.3;\n\n    // Placeholder height (used for sizing elements that have intrinsic 0 height after update)\n    this.__placeholderHeight = 200;\n    // A queue of 10 previous element heights\n    this.__elementHeightQueue = Array(10);\n    this.timeouts = {\n      SCROLL_REORDER: 500,\n      IGNORE_WHEEL: 500,\n      FIX_INVALID_ITEM_POSITIONING: 100\n    };\n    this.__resizeObserver = new ResizeObserver(() => this._resizeHandler());\n    if (getComputedStyle(this.scrollTarget).overflow === 'visible') {\n      this.scrollTarget.style.overflow = 'auto';\n    }\n    if (getComputedStyle(this.scrollContainer).position === 'static') {\n      this.scrollContainer.style.position = 'relative';\n    }\n    this.__resizeObserver.observe(this.scrollTarget);\n    this.scrollTarget.addEventListener('scroll', () => this._scrollHandler());\n    this._scrollLineHeight = this._getScrollLineHeight();\n    this.scrollTarget.addEventListener('wheel', e => this.__onWheel(e));\n    if (this.reorderElements) {\n      // Reordering the physical elements cancels the user's grab of the scroll bar handle on Safari.\n      // Need to defer reordering until the user lets go of the scroll bar handle.\n      this.scrollTarget.addEventListener('mousedown', () => {\n        this.__mouseDown = true;\n      });\n      this.scrollTarget.addEventListener('mouseup', () => {\n        this.__mouseDown = false;\n        if (this.__pendingReorder) {\n          this.__reorderElements();\n        }\n      });\n    }\n  }\n  get scrollOffset() {\n    return 0;\n  }\n  get adjustedFirstVisibleIndex() {\n    return this.firstVisibleIndex + this._vidxOffset;\n  }\n  get adjustedLastVisibleIndex() {\n    return this.lastVisibleIndex + this._vidxOffset;\n  }\n  __hasPlaceholders() {\n    return this.__getVisibleElements().some(el => el.__virtualizerPlaceholder);\n  }\n  scrollToIndex(index) {\n    if (typeof index !== 'number' || isNaN(index) || this.size === 0 || !this.scrollTarget.offsetHeight) {\n      return;\n    }\n    delete this.__pendingScrollToIndex;\n    if (this._physicalCount <= 3 /* iron-list-core.DEFAULT_PHYSICAL_COUNT */) {\n      // The condition here is a performance improvement to avoid an unnecessary\n      // re-render when the physical item pool is already covered.\n\n      // Finish rendering at the current scroll position before scrolling\n      this.flush();\n    }\n    index = this._clamp(index, 0, this.size - 1);\n    const visibleElementCount = this.__getVisibleElements().length;\n    let targetVirtualIndex = Math.floor(index / this.size * this._virtualCount);\n    if (this._virtualCount - targetVirtualIndex < visibleElementCount) {\n      targetVirtualIndex = this._virtualCount - (this.size - index);\n      this._vidxOffset = this.size - this._virtualCount;\n    } else if (targetVirtualIndex < visibleElementCount) {\n      if (index < OFFSET_ADJUST_MIN_THRESHOLD) {\n        targetVirtualIndex = index;\n        this._vidxOffset = 0;\n      } else {\n        targetVirtualIndex = OFFSET_ADJUST_MIN_THRESHOLD;\n        this._vidxOffset = index - targetVirtualIndex;\n      }\n    } else {\n      this._vidxOffset = index - targetVirtualIndex;\n    }\n    this.__skipNextVirtualIndexAdjust = true;\n    super.scrollToIndex(targetVirtualIndex);\n    if (this.adjustedFirstVisibleIndex !== index && this._scrollTop < this._maxScrollTop && !this.grid) {\n      // Workaround an iron-list issue by manually adjusting the scroll position\n      this._scrollTop -= this.__getIndexScrollOffset(index) || 0;\n    }\n    this._scrollHandler();\n    if (this.__hasPlaceholders()) {\n      // After rendering synchronously, there are still placeholders in the DOM.\n      // Try again after the next elements update.\n      this.__pendingScrollToIndex = index;\n    }\n  }\n  flush() {\n    const startPhysicalCount = this._physicalCount;\n    // The scroll target is hidden.\n    if (this.scrollTarget.offsetHeight === 0) {\n      return;\n    }\n    this._resizeHandler();\n    (0,_debounce_js__WEBPACK_IMPORTED_MODULE_2__.flush)();\n    this._scrollHandler();\n    if (this.__fixInvalidItemPositioningDebouncer) {\n      this.__fixInvalidItemPositioningDebouncer.flush();\n    }\n    if (this.__scrollReorderDebouncer) {\n      this.__scrollReorderDebouncer.flush();\n    }\n    if (this.__debouncerWheelAnimationFrame) {\n      this.__debouncerWheelAnimationFrame.flush();\n    }\n    if (this._physicalCount !== startPhysicalCount) {\n      // Flushing again until physical count stabilizes fixes https://github.com/vaadin/flow-components/issues/5595#issuecomment-1770278913\n      this.flush();\n    }\n  }\n  update(startIndex = 0, endIndex = this.size - 1) {\n    const updatedElements = [];\n    this.__getVisibleElements().forEach(el => {\n      if (el.__virtualIndex >= startIndex && el.__virtualIndex <= endIndex) {\n        this.__updateElement(el, el.__virtualIndex, true);\n        updatedElements.push(el);\n      }\n    });\n    this.__afterElementsUpdated(updatedElements);\n  }\n\n  /**\n   * Updates the height for a given set of items.\n   *\n   * @param {!Array<number>=} itemSet\n   */\n  _updateMetrics(itemSet) {\n    // Make sure we distributed all the physical items\n    // so we can measure them.\n    (0,_debounce_js__WEBPACK_IMPORTED_MODULE_2__.flush)();\n    let newPhysicalSize = 0;\n    let oldPhysicalSize = 0;\n    const prevAvgCount = this._physicalAverageCount;\n    const prevPhysicalAvg = this._physicalAverage;\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    this._iterateItems((pidx, vidx) => {\n      oldPhysicalSize += this._physicalSizes[pidx];\n      this._physicalSizes[pidx] = Math.ceil(this.__getBorderBoxHeight(this._physicalItems[pidx]));\n      newPhysicalSize += this._physicalSizes[pidx];\n      this._physicalAverageCount += this._physicalSizes[pidx] ? 1 : 0;\n    }, itemSet);\n    this._physicalSize = this._physicalSize + newPhysicalSize - oldPhysicalSize;\n\n    // Update the average if it measured something.\n    if (this._physicalAverageCount !== prevAvgCount) {\n      this._physicalAverage = Math.round((prevPhysicalAvg * prevAvgCount + newPhysicalSize) / this._physicalAverageCount);\n    }\n  }\n  __getBorderBoxHeight(el) {\n    const style = getComputedStyle(el);\n    const itemHeight = parseFloat(style.height) || 0;\n    if (style.boxSizing === 'border-box') {\n      return itemHeight;\n    }\n    const paddingBottom = parseFloat(style.paddingBottom) || 0;\n    const paddingTop = parseFloat(style.paddingTop) || 0;\n    const borderBottomWidth = parseFloat(style.borderBottomWidth) || 0;\n    const borderTopWidth = parseFloat(style.borderTopWidth) || 0;\n    return itemHeight + paddingBottom + paddingTop + borderBottomWidth + borderTopWidth;\n  }\n  __updateElement(el, index, forceSameIndexUpdates) {\n    // Clean up temporary placeholder sizing\n    if (el.__virtualizerPlaceholder) {\n      el.style.paddingTop = '';\n      el.__virtualizerPlaceholder = false;\n    }\n    if (!this.__preventElementUpdates && (el.__lastUpdatedIndex !== index || forceSameIndexUpdates)) {\n      this.updateElement(el, index);\n      el.__lastUpdatedIndex = index;\n    }\n  }\n\n  /**\n   * Called synchronously right after elements have been updated.\n   * This is a good place to do any post-update work.\n   *\n   * @param {!Array<!HTMLElement>} updatedElements\n   */\n  __afterElementsUpdated(updatedElements) {\n    updatedElements.forEach(el => {\n      const elementHeight = el.offsetHeight;\n      if (elementHeight === 0) {\n        // If the elements have 0 height after update (for example due to lazy rendering),\n        // it results in iron-list requesting to create an unlimited count of elements.\n        // Assign a temporary placeholder sizing to elements that would otherwise end up having\n        // no height.\n        el.style.paddingTop = `${this.__placeholderHeight}px`;\n        el.__virtualizerPlaceholder = true;\n\n        // Manually schedule the resize handler to make sure the placeholder padding is\n        // cleared in case the resize observer never triggers.\n        this.__placeholderClearDebouncer = _debounce_js__WEBPACK_IMPORTED_MODULE_2__.Debouncer.debounce(this.__placeholderClearDebouncer, _async_js__WEBPACK_IMPORTED_MODULE_0__.animationFrame, () => this._resizeHandler());\n      } else {\n        // Add element height to the queue\n        this.__elementHeightQueue.push(elementHeight);\n        this.__elementHeightQueue.shift();\n\n        // Calculate new placeholder height based on the average of the defined values in the\n        // element height queue\n        const filteredHeights = this.__elementHeightQueue.filter(h => h !== undefined);\n        this.__placeholderHeight = Math.round(filteredHeights.reduce((a, b) => a + b, 0) / filteredHeights.length);\n      }\n    });\n    if (this.__pendingScrollToIndex !== undefined && !this.__hasPlaceholders()) {\n      this.scrollToIndex(this.__pendingScrollToIndex);\n    }\n  }\n  __getIndexScrollOffset(index) {\n    const element = this.__getVisibleElements().find(el => el.__virtualIndex === index);\n    return element ? this.scrollTarget.getBoundingClientRect().top - element.getBoundingClientRect().top : undefined;\n  }\n  get size() {\n    return this.__size;\n  }\n  set size(size) {\n    if (size === this.size) {\n      return;\n    }\n    // Cancel active debouncers\n    if (this.__fixInvalidItemPositioningDebouncer) {\n      this.__fixInvalidItemPositioningDebouncer.cancel();\n    }\n    if (this._debouncers && this._debouncers._increasePoolIfNeeded) {\n      // Avoid creating unnecessary elements on the following flush()\n      this._debouncers._increasePoolIfNeeded.cancel();\n    }\n\n    // Change the size\n    this.__size = size;\n    if (!this._physicalItems) {\n      // Not initialized yet\n      this._itemsChanged({\n        path: 'items'\n      });\n      this.__preventElementUpdates = true;\n      (0,_debounce_js__WEBPACK_IMPORTED_MODULE_2__.flush)();\n      this.__preventElementUpdates = false;\n    } else {\n      // Already initialized, just update _virtualCount\n      this._updateScrollerSize();\n      this._virtualCount = this.items.length;\n      this._render();\n    }\n\n    // When reducing size while invisible, iron-list does not update items, so\n    // their hidden state is not updated and their __lastUpdatedIndex is not\n    // reset. In that case force an update here.\n    if (!this._isVisible) {\n      this._assignModels();\n    }\n    if (!this.elementsContainer.children.length) {\n      requestAnimationFrame(() => this._resizeHandler());\n    }\n\n    // Schedule and flush a resize handler. This will cause a\n    // re-render for the elements.\n    this._resizeHandler();\n    (0,_debounce_js__WEBPACK_IMPORTED_MODULE_2__.flush)();\n  }\n\n  /** @private */\n  get _scrollTop() {\n    return this.scrollTarget.scrollTop;\n  }\n\n  /** @private */\n  set _scrollTop(top) {\n    this.scrollTarget.scrollTop = top;\n  }\n\n  /** @private */\n  get items() {\n    return {\n      length: Math.min(this.size, MAX_VIRTUAL_COUNT)\n    };\n  }\n\n  /** @private */\n  get offsetHeight() {\n    return this.scrollTarget.offsetHeight;\n  }\n\n  /** @private */\n  get $() {\n    return {\n      items: this.scrollContainer\n    };\n  }\n\n  /** @private */\n  updateViewportBoundaries() {\n    const styles = window.getComputedStyle(this.scrollTarget);\n    this._scrollerPaddingTop = this.scrollTarget === this ? 0 : parseInt(styles['padding-top'], 10);\n    this._isRTL = Boolean(styles.direction === 'rtl');\n    this._viewportWidth = this.elementsContainer.offsetWidth;\n    this._viewportHeight = this.scrollTarget.offsetHeight;\n    this._scrollPageHeight = this._viewportHeight - this._scrollLineHeight;\n    if (this.grid) {\n      this._updateGridMetrics();\n    }\n  }\n\n  /** @private */\n  setAttribute() {}\n\n  /** @private */\n  _createPool(size) {\n    const physicalItems = this.createElements(size);\n    const fragment = document.createDocumentFragment();\n    physicalItems.forEach(el => {\n      el.style.position = 'absolute';\n      fragment.appendChild(el);\n      this.__resizeObserver.observe(el);\n    });\n    this.elementsContainer.appendChild(fragment);\n    return physicalItems;\n  }\n\n  /** @private */\n  _assignModels(itemSet) {\n    const updatedElements = [];\n    this._iterateItems((pidx, vidx) => {\n      const el = this._physicalItems[pidx];\n      el.hidden = vidx >= this.size;\n      if (!el.hidden) {\n        el.__virtualIndex = vidx + (this._vidxOffset || 0);\n        this.__updateElement(el, el.__virtualIndex);\n        updatedElements.push(el);\n      } else {\n        delete el.__lastUpdatedIndex;\n      }\n    }, itemSet);\n    this.__afterElementsUpdated(updatedElements);\n  }\n\n  /** @private */\n  _isClientFull() {\n    // Workaround an issue in iron-list that can cause it to freeze on fast scroll\n    setTimeout(() => {\n      this.__clientFull = true;\n    });\n    return this.__clientFull || super._isClientFull();\n  }\n\n  /** @private */\n  translate3d(_x, y, _z, el) {\n    el.style.transform = `translateY(${y})`;\n  }\n\n  /** @private */\n  toggleScrollListener() {}\n  _scrollHandler() {\n    // The scroll target is hidden.\n    if (this.scrollTarget.offsetHeight === 0) {\n      return;\n    }\n    this._adjustVirtualIndexOffset(this._scrollTop - (this.__previousScrollTop || 0));\n    const delta = this.scrollTarget.scrollTop - this._scrollPosition;\n    super._scrollHandler();\n    if (this._physicalCount !== 0) {\n      const isScrollingDown = delta >= 0;\n      const reusables = this._getReusables(!isScrollingDown);\n      if (reusables.indexes.length) {\n        // After running super._scrollHandler, fix internal properties to workaround an iron-list issue.\n        // See https://github.com/vaadin/web-components/issues/1691\n        this._physicalTop = reusables.physicalTop;\n        if (isScrollingDown) {\n          this._virtualStart -= reusables.indexes.length;\n          this._physicalStart -= reusables.indexes.length;\n        } else {\n          this._virtualStart += reusables.indexes.length;\n          this._physicalStart += reusables.indexes.length;\n        }\n        this._resizeHandler();\n      }\n    }\n    if (delta) {\n      // There was a change in scroll top. Schedule a check for invalid item positioning.\n      this.__fixInvalidItemPositioningDebouncer = _debounce_js__WEBPACK_IMPORTED_MODULE_2__.Debouncer.debounce(this.__fixInvalidItemPositioningDebouncer, _async_js__WEBPACK_IMPORTED_MODULE_0__.timeOut.after(this.timeouts.FIX_INVALID_ITEM_POSITIONING), () => this.__fixInvalidItemPositioning());\n    }\n    if (this.reorderElements) {\n      this.__scrollReorderDebouncer = _debounce_js__WEBPACK_IMPORTED_MODULE_2__.Debouncer.debounce(this.__scrollReorderDebouncer, _async_js__WEBPACK_IMPORTED_MODULE_0__.timeOut.after(this.timeouts.SCROLL_REORDER), () => this.__reorderElements());\n    }\n    this.__previousScrollTop = this._scrollTop;\n\n    // If the first visible index is not 0 when scrolled to the top,\n    // scroll to index 0 to fix the issue.\n    if (this._scrollTop === 0 && this.firstVisibleIndex !== 0 && Math.abs(delta) > 0) {\n      this.scrollToIndex(0);\n    }\n  }\n\n  /**\n   * Work around an iron-list issue with invalid item positioning.\n   * See https://github.com/vaadin/flow-components/issues/4306\n   * @private\n   */\n  __fixInvalidItemPositioning() {\n    if (!this.scrollTarget.isConnected) {\n      return;\n    }\n\n    // Check if the first physical item element is below the top of the viewport\n    const physicalTopBelowTop = this._physicalTop > this._scrollTop;\n    // Check if the last physical item element is above the bottom of the viewport\n    const physicalBottomAboveBottom = this._physicalBottom < this._scrollBottom;\n\n    // Check if the first index is visible\n    const firstIndexVisible = this.adjustedFirstVisibleIndex === 0;\n    // Check if the last index is visible\n    const lastIndexVisible = this.adjustedLastVisibleIndex === this.size - 1;\n    if (physicalTopBelowTop && !firstIndexVisible || physicalBottomAboveBottom && !lastIndexVisible) {\n      // Invalid state! Try to recover.\n\n      const isScrollingDown = physicalBottomAboveBottom;\n      // Set the \"_ratio\" property temporarily to 0 to make iron-list's _getReusables\n      // place all the free physical items on one side of the viewport.\n      const originalRatio = this._ratio;\n      this._ratio = 0;\n      // Fake a scroll change to make _scrollHandler place the physical items\n      // on the desired side.\n      this._scrollPosition = this._scrollTop + (isScrollingDown ? -1 : 1);\n      this._scrollHandler();\n      // Restore the original \"_ratio\" value.\n      this._ratio = originalRatio;\n    }\n  }\n\n  /** @private */\n  __onWheel(e) {\n    if (e.ctrlKey || this._hasScrolledAncestor(e.target, e.deltaX, e.deltaY)) {\n      return;\n    }\n    let deltaY = e.deltaY;\n    if (e.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      // Scrolling by \"lines of text\" instead of pixels\n      deltaY *= this._scrollLineHeight;\n    } else if (e.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      // Scrolling by \"pages\" instead of pixels\n      deltaY *= this._scrollPageHeight;\n    }\n    if (!this._deltaYAcc) {\n      this._deltaYAcc = 0;\n    }\n    if (this._wheelAnimationFrame) {\n      // Accumulate wheel delta while a frame is being processed\n      this._deltaYAcc += deltaY;\n      e.preventDefault();\n      return;\n    }\n    deltaY += this._deltaYAcc;\n    this._deltaYAcc = 0;\n    this._wheelAnimationFrame = true;\n    this.__debouncerWheelAnimationFrame = _debounce_js__WEBPACK_IMPORTED_MODULE_2__.Debouncer.debounce(this.__debouncerWheelAnimationFrame, _async_js__WEBPACK_IMPORTED_MODULE_0__.animationFrame, () => {\n      this._wheelAnimationFrame = false;\n    });\n    const momentum = Math.abs(e.deltaX) + Math.abs(deltaY);\n    if (this._canScroll(this.scrollTarget, e.deltaX, deltaY)) {\n      e.preventDefault();\n      this.scrollTarget.scrollTop += deltaY;\n      this.scrollTarget.scrollLeft += e.deltaX;\n      this._hasResidualMomentum = true;\n      this._ignoreNewWheel = true;\n      this._debouncerIgnoreNewWheel = _debounce_js__WEBPACK_IMPORTED_MODULE_2__.Debouncer.debounce(this._debouncerIgnoreNewWheel, _async_js__WEBPACK_IMPORTED_MODULE_0__.timeOut.after(this.timeouts.IGNORE_WHEEL), () => {\n        this._ignoreNewWheel = false;\n      });\n    } else if (this._hasResidualMomentum && momentum <= this._previousMomentum || this._ignoreNewWheel) {\n      e.preventDefault();\n    } else if (momentum > this._previousMomentum) {\n      this._hasResidualMomentum = false;\n    }\n    this._previousMomentum = momentum;\n  }\n\n  /**\n   * Determines if the element has an ancestor that handles the scroll delta prior to this\n   *\n   * @private\n   */\n  _hasScrolledAncestor(el, deltaX, deltaY) {\n    if (el === this.scrollTarget || el === this.scrollTarget.getRootNode().host) {\n      return false;\n    } else if (this._canScroll(el, deltaX, deltaY) && ['auto', 'scroll'].indexOf(getComputedStyle(el).overflow) !== -1) {\n      return true;\n    } else if (el !== this && el.parentElement) {\n      return this._hasScrolledAncestor(el.parentElement, deltaX, deltaY);\n    }\n  }\n  _canScroll(el, deltaX, deltaY) {\n    return deltaY > 0 && el.scrollTop < el.scrollHeight - el.offsetHeight || deltaY < 0 && el.scrollTop > 0 || deltaX > 0 && el.scrollLeft < el.scrollWidth - el.offsetWidth || deltaX < 0 && el.scrollLeft > 0;\n  }\n\n  /**\n   * Increases the pool size.\n   * @override\n   */\n  _increasePoolIfNeeded(count) {\n    if (this._physicalCount > 2 && count) {\n      // The iron-list logic has already created some physical items and\n      // has decided to create more. Since each item creation round is\n      // expensive, let's try to create the remaining items in one go.\n\n      // Calculate the total item count that would be needed to fill the viewport\n      // plus the buffer assuming rest of the items to be of the average size\n      // of the items already created.\n      const totalItemCount = Math.ceil(this._optPhysicalSize / this._physicalAverage);\n      const missingItemCount = totalItemCount - this._physicalCount;\n      // Create the remaining items in one go. Use a maximum of 100 items\n      // as a safety measure.\n      super._increasePoolIfNeeded(Math.max(count, Math.min(100, missingItemCount)));\n    } else {\n      super._increasePoolIfNeeded(count);\n    }\n  }\n\n  /**\n   * @returns {Number|undefined} - The browser's default font-size in pixels\n   * @private\n   */\n  _getScrollLineHeight() {\n    const el = document.createElement('div');\n    el.style.fontSize = 'initial';\n    el.style.display = 'none';\n    document.body.appendChild(el);\n    const fontSize = window.getComputedStyle(el).fontSize;\n    document.body.removeChild(el);\n    return fontSize ? window.parseInt(fontSize) : undefined;\n  }\n  __getVisibleElements() {\n    return Array.from(this.elementsContainer.children).filter(element => !element.hidden);\n  }\n\n  /** @private */\n  __reorderElements() {\n    if (this.__mouseDown) {\n      this.__pendingReorder = true;\n      return;\n    }\n    this.__pendingReorder = false;\n    const adjustedVirtualStart = this._virtualStart + (this._vidxOffset || 0);\n\n    // Which row to use as a target?\n    const visibleElements = this.__getVisibleElements();\n    const elementWithFocus = visibleElements.find(element => element.contains(this.elementsContainer.getRootNode().activeElement) || element.contains(this.scrollTarget.getRootNode().activeElement));\n    const targetElement = elementWithFocus || visibleElements[0];\n    if (!targetElement) {\n      // All elements are hidden, don't reorder\n      return;\n    }\n\n    // Where the target row should be?\n    const targetPhysicalIndex = targetElement.__virtualIndex - adjustedVirtualStart;\n\n    // Reodrer the DOM elements to keep the target row at the target physical index\n    const delta = visibleElements.indexOf(targetElement) - targetPhysicalIndex;\n    if (delta > 0) {\n      for (let i = 0; i < delta; i++) {\n        this.elementsContainer.appendChild(visibleElements[i]);\n      }\n    } else if (delta < 0) {\n      for (let i = visibleElements.length + delta; i < visibleElements.length; i++) {\n        this.elementsContainer.insertBefore(visibleElements[i], visibleElements[0]);\n      }\n    }\n\n    // Due to a rendering bug, reordering the rows can make parts of the scroll target disappear\n    // on Safari when using sticky positioning in case the scroll target is inside a flexbox.\n    // This issue manifests with grid (the header can disappear if grid is used inside a flexbox)\n    if (_browser_utils_js__WEBPACK_IMPORTED_MODULE_1__.isSafari) {\n      const {\n        transform\n      } = this.scrollTarget.style;\n      this.scrollTarget.style.transform = 'translateZ(0)';\n      setTimeout(() => {\n        this.scrollTarget.style.transform = transform;\n      });\n    }\n  }\n\n  /** @private */\n  _adjustVirtualIndexOffset(delta) {\n    if (this._virtualCount >= this.size) {\n      this._vidxOffset = 0;\n    } else if (this.__skipNextVirtualIndexAdjust) {\n      this.__skipNextVirtualIndexAdjust = false;\n    } else if (Math.abs(delta) > 10000) {\n      // Process a large scroll position change\n      const scale = this._scrollTop / (this.scrollTarget.scrollHeight - this.scrollTarget.offsetHeight);\n      const offset = scale * this.size;\n      this._vidxOffset = Math.round(offset - scale * this._virtualCount);\n    } else {\n      // Make sure user can always swipe/wheel scroll to the start and end\n      const oldOffset = this._vidxOffset;\n      const threshold = OFFSET_ADJUST_MIN_THRESHOLD;\n      const maxShift = 100;\n\n      // Near start\n      if (this._scrollTop === 0) {\n        this._vidxOffset = 0;\n        if (oldOffset !== this._vidxOffset) {\n          super.scrollToIndex(0);\n        }\n      } else if (this.firstVisibleIndex < threshold && this._vidxOffset > 0) {\n        this._vidxOffset -= Math.min(this._vidxOffset, maxShift);\n        super.scrollToIndex(this.firstVisibleIndex + (oldOffset - this._vidxOffset));\n      }\n\n      // Near end\n      const maxOffset = this.size - this._virtualCount;\n      if (this._scrollTop >= this._maxScrollTop && this._maxScrollTop > 0) {\n        this._vidxOffset = maxOffset;\n        if (oldOffset !== this._vidxOffset) {\n          super.scrollToIndex(this._virtualCount - 1);\n        }\n      } else if (this.firstVisibleIndex > this._virtualCount - threshold && this._vidxOffset < maxOffset) {\n        this._vidxOffset += Math.min(maxOffset - this._vidxOffset, maxShift);\n        super.scrollToIndex(this.firstVisibleIndex - (this._vidxOffset - oldOffset));\n      }\n    }\n  }\n}\nObject.setPrototypeOf(IronListAdapter.prototype, _iron_list_core_js__WEBPACK_IMPORTED_MODULE_3__.ironList);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/component-base/src/virtualizer-iron-list-adapter.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/component-base/src/virtualizer.js":
/*!****************************************************************!*\
  !*** ./node_modules/@vaadin/component-base/src/virtualizer.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Virtualizer: () => (/* binding */ Virtualizer)\n/* harmony export */ });\n/* harmony import */ var _virtualizer_iron_list_adapter_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./virtualizer-iron-list-adapter.js */ \"./node_modules/@vaadin/component-base/src/virtualizer-iron-list-adapter.js\");\n\nclass Virtualizer {\n  /**\n   * @typedef {Object} VirtualizerConfig\n   * @property {Function} createElements Function that returns the given number of new elements\n   * @property {Function} updateElement Function that updates the element at a specific index\n   * @property {HTMLElement} scrollTarget Reference to the scrolling element\n   * @property {HTMLElement} scrollContainer Reference to a wrapper for the item elements (or a slot) inside the scrollTarget\n   * @property {HTMLElement | undefined} elementsContainer Reference to the container in which the item elements are placed, defaults to scrollContainer\n   * @property {boolean | undefined} reorderElements Determines whether the physical item elements should be kept in order in the DOM\n   * @param {VirtualizerConfig} config Configuration for the virtualizer\n   */\n  constructor(config) {\n    this.__adapter = new _virtualizer_iron_list_adapter_js__WEBPACK_IMPORTED_MODULE_0__.IronListAdapter(config);\n  }\n\n  /**\n   * Gets the index of the first visible item in the viewport.\n   *\n   * @return {number}\n   */\n  get firstVisibleIndex() {\n    return this.__adapter.adjustedFirstVisibleIndex;\n  }\n\n  /**\n   * Gets the index of the last visible item in the viewport.\n   *\n   * @return {number}\n   */\n  get lastVisibleIndex() {\n    return this.__adapter.adjustedLastVisibleIndex;\n  }\n\n  /**\n   * The size of the virtualizer\n   * @return {number | undefined} The size of the virtualizer\n   */\n  get size() {\n    return this.__adapter.size;\n  }\n\n  /**\n   * The size of the virtualizer\n   * @param {number} size The size of the virtualizer\n   */\n  set size(size) {\n    this.__adapter.size = size;\n  }\n\n  /**\n   * Scroll to a specific index in the virtual list\n   *\n   * @method scrollToIndex\n   * @param {number} index The index of the item\n   */\n  scrollToIndex(index) {\n    this.__adapter.scrollToIndex(index);\n  }\n\n  /**\n   * Requests the virtualizer to re-render the item elements on an index range, if currently in the DOM\n   *\n   * @method update\n   * @param {number | undefined} startIndex The start index of the range\n   * @param {number | undefined} endIndex The end index of the range\n   */\n  update(startIndex = 0, endIndex = this.size - 1) {\n    this.__adapter.update(startIndex, endIndex);\n  }\n\n  /**\n   * Flushes active asynchronous tasks so that the component and the DOM end up in a stable state\n   *\n   * @method update\n   * @param {number | undefined} startIndex The start index of the range\n   * @param {number | undefined} endIndex The end index of the range\n   */\n  flush() {\n    this.__adapter.flush();\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21wb25lbnQtYmFzZS9zcmMvdmlydHVhbGl6ZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9tZS1hc3Npc3RhbnQtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21wb25lbnQtYmFzZS9zcmMvdmlydHVhbGl6ZXIuanM/YzdhMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJcm9uTGlzdEFkYXB0ZXIgfSBmcm9tICcuL3ZpcnR1YWxpemVyLWlyb24tbGlzdC1hZGFwdGVyLmpzJztcblxuZXhwb3J0IGNsYXNzIFZpcnR1YWxpemVyIHtcbiAgLyoqXG4gICAqIEB0eXBlZGVmIHtPYmplY3R9IFZpcnR1YWxpemVyQ29uZmlnXG4gICAqIEBwcm9wZXJ0eSB7RnVuY3Rpb259IGNyZWF0ZUVsZW1lbnRzIEZ1bmN0aW9uIHRoYXQgcmV0dXJucyB0aGUgZ2l2ZW4gbnVtYmVyIG9mIG5ldyBlbGVtZW50c1xuICAgKiBAcHJvcGVydHkge0Z1bmN0aW9ufSB1cGRhdGVFbGVtZW50IEZ1bmN0aW9uIHRoYXQgdXBkYXRlcyB0aGUgZWxlbWVudCBhdCBhIHNwZWNpZmljIGluZGV4XG4gICAqIEBwcm9wZXJ0eSB7SFRNTEVsZW1lbnR9IHNjcm9sbFRhcmdldCBSZWZlcmVuY2UgdG8gdGhlIHNjcm9sbGluZyBlbGVtZW50XG4gICAqIEBwcm9wZXJ0eSB7SFRNTEVsZW1lbnR9IHNjcm9sbENvbnRhaW5lciBSZWZlcmVuY2UgdG8gYSB3cmFwcGVyIGZvciB0aGUgaXRlbSBlbGVtZW50cyAob3IgYSBzbG90KSBpbnNpZGUgdGhlIHNjcm9sbFRhcmdldFxuICAgKiBAcHJvcGVydHkge0hUTUxFbGVtZW50IHwgdW5kZWZpbmVkfSBlbGVtZW50c0NvbnRhaW5lciBSZWZlcmVuY2UgdG8gdGhlIGNvbnRhaW5lciBpbiB3aGljaCB0aGUgaXRlbSBlbGVtZW50cyBhcmUgcGxhY2VkLCBkZWZhdWx0cyB0byBzY3JvbGxDb250YWluZXJcbiAgICogQHByb3BlcnR5IHtib29sZWFuIHwgdW5kZWZpbmVkfSByZW9yZGVyRWxlbWVudHMgRGV0ZXJtaW5lcyB3aGV0aGVyIHRoZSBwaHlzaWNhbCBpdGVtIGVsZW1lbnRzIHNob3VsZCBiZSBrZXB0IGluIG9yZGVyIGluIHRoZSBET01cbiAgICogQHBhcmFtIHtWaXJ0dWFsaXplckNvbmZpZ30gY29uZmlnIENvbmZpZ3VyYXRpb24gZm9yIHRoZSB2aXJ0dWFsaXplclxuICAgKi9cbiAgY29uc3RydWN0b3IoY29uZmlnKSB7XG4gICAgdGhpcy5fX2FkYXB0ZXIgPSBuZXcgSXJvbkxpc3RBZGFwdGVyKGNvbmZpZyk7XG4gIH1cblxuICAvKipcbiAgICogR2V0cyB0aGUgaW5kZXggb2YgdGhlIGZpcnN0IHZpc2libGUgaXRlbSBpbiB0aGUgdmlld3BvcnQuXG4gICAqXG4gICAqIEByZXR1cm4ge251bWJlcn1cbiAgICovXG4gIGdldCBmaXJzdFZpc2libGVJbmRleCgpIHtcbiAgICByZXR1cm4gdGhpcy5fX2FkYXB0ZXIuYWRqdXN0ZWRGaXJzdFZpc2libGVJbmRleDtcbiAgfVxuXG4gIC8qKlxuICAgKiBHZXRzIHRoZSBpbmRleCBvZiB0aGUgbGFzdCB2aXNpYmxlIGl0ZW0gaW4gdGhlIHZpZXdwb3J0LlxuICAgKlxuICAgKiBAcmV0dXJuIHtudW1iZXJ9XG4gICAqL1xuICBnZXQgbGFzdFZpc2libGVJbmRleCgpIHtcbiAgICByZXR1cm4gdGhpcy5fX2FkYXB0ZXIuYWRqdXN0ZWRMYXN0VmlzaWJsZUluZGV4O1xuICB9XG5cbiAgLyoqXG4gICAqIFRoZSBzaXplIG9mIHRoZSB2aXJ0dWFsaXplclxuICAgKiBAcmV0dXJuIHtudW1iZXIgfCB1bmRlZmluZWR9IFRoZSBzaXplIG9mIHRoZSB2aXJ0dWFsaXplclxuICAgKi9cbiAgZ2V0IHNpemUoKSB7XG4gICAgcmV0dXJuIHRoaXMuX19hZGFwdGVyLnNpemU7XG4gIH1cblxuICAvKipcbiAgICogVGhlIHNpemUgb2YgdGhlIHZpcnR1YWxpemVyXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBzaXplIFRoZSBzaXplIG9mIHRoZSB2aXJ0dWFsaXplclxuICAgKi9cbiAgc2V0IHNpemUoc2l6ZSkge1xuICAgIHRoaXMuX19hZGFwdGVyLnNpemUgPSBzaXplO1xuICB9XG5cbiAgLyoqXG4gICAqIFNjcm9sbCB0byBhIHNwZWNpZmljIGluZGV4IGluIHRoZSB2aXJ0dWFsIGxpc3RcbiAgICpcbiAgICogQG1ldGhvZCBzY3JvbGxUb0luZGV4XG4gICAqIEBwYXJhbSB7bnVtYmVyfSBpbmRleCBUaGUgaW5kZXggb2YgdGhlIGl0ZW1cbiAgICovXG4gIHNjcm9sbFRvSW5kZXgoaW5kZXgpIHtcbiAgICB0aGlzLl9fYWRhcHRlci5zY3JvbGxUb0luZGV4KGluZGV4KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXF1ZXN0cyB0aGUgdmlydHVhbGl6ZXIgdG8gcmUtcmVuZGVyIHRoZSBpdGVtIGVsZW1lbnRzIG9uIGFuIGluZGV4IHJhbmdlLCBpZiBjdXJyZW50bHkgaW4gdGhlIERPTVxuICAgKlxuICAgKiBAbWV0aG9kIHVwZGF0ZVxuICAgKiBAcGFyYW0ge251bWJlciB8IHVuZGVmaW5lZH0gc3RhcnRJbmRleCBUaGUgc3RhcnQgaW5kZXggb2YgdGhlIHJhbmdlXG4gICAqIEBwYXJhbSB7bnVtYmVyIHwgdW5kZWZpbmVkfSBlbmRJbmRleCBUaGUgZW5kIGluZGV4IG9mIHRoZSByYW5nZVxuICAgKi9cbiAgdXBkYXRlKHN0YXJ0SW5kZXggPSAwLCBlbmRJbmRleCA9IHRoaXMuc2l6ZSAtIDEpIHtcbiAgICB0aGlzLl9fYWRhcHRlci51cGRhdGUoc3RhcnRJbmRleCwgZW5kSW5kZXgpO1xuICB9XG5cbiAgLyoqXG4gICAqIEZsdXNoZXMgYWN0aXZlIGFzeW5jaHJvbm91cyB0YXNrcyBzbyB0aGF0IHRoZSBjb21wb25lbnQgYW5kIHRoZSBET00gZW5kIHVwIGluIGEgc3RhYmxlIHN0YXRlXG4gICAqXG4gICAqIEBtZXRob2QgdXBkYXRlXG4gICAqIEBwYXJhbSB7bnVtYmVyIHwgdW5kZWZpbmVkfSBzdGFydEluZGV4IFRoZSBzdGFydCBpbmRleCBvZiB0aGUgcmFuZ2VcbiAgICogQHBhcmFtIHtudW1iZXIgfCB1bmRlZmluZWR9IGVuZEluZGV4IFRoZSBlbmQgaW5kZXggb2YgdGhlIHJhbmdlXG4gICAqL1xuICBmbHVzaCgpIHtcbiAgICB0aGlzLl9fYWRhcHRlci5mbHVzaCgpO1xuICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/component-base/src/virtualizer.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/field-base/src/input-mixin.js":
/*!************************************************************!*\
  !*** ./node_modules/@vaadin/field-base/src/input-mixin.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InputMixin: () => (/* binding */ InputMixin)\n/* harmony export */ });\n/* harmony import */ var _polymer_polymer_lib_utils_mixin_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polymer/polymer/lib/utils/mixin.js */ \"./node_modules/@polymer/polymer/lib/utils/mixin.js\");\n/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\n/**\n * A mixin to store the reference to an input element\n * and add input and change event listeners to it.\n *\n * @polymerMixin\n */\nconst InputMixin = (0,_polymer_polymer_lib_utils_mixin_js__WEBPACK_IMPORTED_MODULE_0__.dedupingMixin)(superclass => class InputMixinClass extends superclass {\n  static get properties() {\n    return {\n      /**\n       * A reference to the input element controlled by the mixin.\n       * Any component implementing this mixin is expected to provide it\n       * by using `this._setInputElement(input)` Polymer API.\n       *\n       * A typical case is using `InputController` that does this automatically.\n       * However, the input element does not have to always be native <input>:\n       * as an example, <vaadin-combo-box-light> accepts other components.\n       *\n       * @protected\n       * @type {!HTMLElement}\n       */\n      inputElement: {\n        type: Object,\n        readOnly: true,\n        observer: '_inputElementChanged'\n      },\n      /**\n       * String used to define input type.\n       * @protected\n       */\n      type: {\n        type: String,\n        readOnly: true\n      },\n      /**\n       * The value of the field.\n       */\n      value: {\n        type: String,\n        value: '',\n        observer: '_valueChanged',\n        notify: true,\n        sync: true\n      },\n      /**\n       * Whether the input element has a non-empty value.\n       *\n       * @protected\n       */\n      _hasInputValue: {\n        type: Boolean,\n        value: false,\n        observer: '_hasInputValueChanged'\n      }\n    };\n  }\n  constructor() {\n    super();\n    this._boundOnInput = this.__onInput.bind(this);\n    this._boundOnChange = this._onChange.bind(this);\n  }\n\n  /**\n   * Indicates whether the value is different from the default one.\n   * Override if the `value` property has a type other than `string`.\n   *\n   * @protected\n   */\n  get _hasValue() {\n    return this.value != null && this.value !== '';\n  }\n\n  /**\n   * A property for accessing the input element's value.\n   *\n   * Override this getter if the property is different from the default `value` one.\n   *\n   * @protected\n   * @return {string}\n   */\n  get _inputElementValueProperty() {\n    return 'value';\n  }\n\n  /**\n   * The input element's value.\n   *\n   * @protected\n   * @return {string}\n   */\n  get _inputElementValue() {\n    return this.inputElement ? this.inputElement[this._inputElementValueProperty] : undefined;\n  }\n\n  /**\n   * The input element's value.\n   *\n   * @protected\n   */\n  set _inputElementValue(value) {\n    if (this.inputElement) {\n      this.inputElement[this._inputElementValueProperty] = value;\n    }\n  }\n\n  /**\n   * Clear the value of the field.\n   */\n  clear() {\n    this._hasInputValue = false;\n    this.value = '';\n\n    // Clear the input immediately without waiting for the observer.\n    // Otherwise, when using Lit, the old value would be restored.\n    this._inputElementValue = '';\n  }\n\n  /**\n   * Add event listeners to the input element instance.\n   * Override this method to add custom listeners.\n   * @param {!HTMLElement} input\n   * @protected\n   */\n  _addInputListeners(input) {\n    input.addEventListener('input', this._boundOnInput);\n    input.addEventListener('change', this._boundOnChange);\n  }\n\n  /**\n   * Remove event listeners from the input element instance.\n   * @param {!HTMLElement} input\n   * @protected\n   */\n  _removeInputListeners(input) {\n    input.removeEventListener('input', this._boundOnInput);\n    input.removeEventListener('change', this._boundOnChange);\n  }\n\n  /**\n   * A method to forward the value property set on the field\n   * programmatically back to the input element value.\n   * Override this method to perform additional checks,\n   * for example to skip this in certain conditions.\n   * @param {string} value\n   * @protected\n   */\n  _forwardInputValue(value) {\n    // Value might be set before an input element is initialized.\n    // This case should be handled separately by a component that\n    // implements this mixin, for example in `connectedCallback`.\n    if (!this.inputElement) {\n      return;\n    }\n    this._inputElementValue = value != null ? value : '';\n  }\n\n  /**\n   * @param {HTMLElement | undefined} input\n   * @param {HTMLElement | undefined} oldInput\n   * @protected\n   */\n  _inputElementChanged(input, oldInput) {\n    if (input) {\n      this._addInputListeners(input);\n    } else if (oldInput) {\n      this._removeInputListeners(oldInput);\n    }\n  }\n\n  /**\n   * Observer to notify about the change of private property.\n   *\n   * @private\n   */\n  _hasInputValueChanged(hasValue, oldHasValue) {\n    if (hasValue || oldHasValue) {\n      this.dispatchEvent(new CustomEvent('has-input-value-changed'));\n    }\n  }\n\n  /**\n   * An input event listener used to update `_hasInputValue` property.\n   * Do not override this method.\n   *\n   * @param {Event} event\n   * @private\n   */\n  __onInput(event) {\n    this._setHasInputValue(event);\n    this._onInput(event);\n  }\n\n  /**\n   * An input event listener used to update the field value.\n   *\n   * @param {Event} event\n   * @protected\n   */\n  _onInput(event) {\n    // In the case a custom web component is passed as `inputElement`,\n    // the actual native input element, on which the event occurred,\n    // can be inside shadow trees.\n    const target = event.composedPath()[0];\n    // Ignore fake input events e.g. used by clear button.\n    this.__userInput = event.isTrusted;\n    this.value = target.value;\n    this.__userInput = false;\n  }\n\n  /**\n   * A change event listener.\n   * Override this method with an actual implementation.\n   * @param {Event} _event\n   * @protected\n   */\n  _onChange(_event) {}\n\n  /**\n   * Toggle the has-value attribute based on the value property.\n   *\n   * @param {boolean} hasValue\n   * @protected\n   */\n  _toggleHasValue(hasValue) {\n    this.toggleAttribute('has-value', hasValue);\n  }\n\n  /**\n   * Observer called when a value property changes.\n   * @param {string | undefined} newVal\n   * @param {string | undefined} oldVal\n   * @protected\n   */\n  _valueChanged(newVal, oldVal) {\n    this._toggleHasValue(this._hasValue);\n\n    // Setting initial value to empty string, do nothing.\n    if (newVal === '' && oldVal === undefined) {\n      return;\n    }\n\n    // Value is set by the user, no need to sync it back to input.\n    if (this.__userInput) {\n      return;\n    }\n\n    // Setting a value programmatically, sync it to input element.\n    this._forwardInputValue(newVal);\n  }\n\n  /**\n   * Sets the `_hasInputValue` property based on the `input` event.\n   *\n   * @param {InputEvent} event\n   * @protected\n   */\n  _setHasInputValue(event) {\n    // In the case a custom web component is passed as `inputElement`,\n    // the actual native input element, on which the event occurred,\n    // can be inside shadow trees.\n    const target = event.composedPath()[0];\n    this._hasInputValue = target.value.length > 0;\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/field-base/src/input-mixin.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/field-base/src/validate-mixin.js":
/*!***************************************************************!*\
  !*** ./node_modules/@vaadin/field-base/src/validate-mixin.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ValidateMixin: () => (/* binding */ ValidateMixin)\n/* harmony export */ });\n/* harmony import */ var _polymer_polymer_lib_utils_mixin_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polymer/polymer/lib/utils/mixin.js */ \"./node_modules/@polymer/polymer/lib/utils/mixin.js\");\n/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\n/**\n * A mixin to provide required state and validation logic.\n *\n * @polymerMixin\n */\nconst ValidateMixin = (0,_polymer_polymer_lib_utils_mixin_js__WEBPACK_IMPORTED_MODULE_0__.dedupingMixin)(superclass => class ValidateMixinClass extends superclass {\n  static get properties() {\n    return {\n      /**\n       * Set to true when the field is invalid.\n       */\n      invalid: {\n        type: Boolean,\n        reflectToAttribute: true,\n        notify: true,\n        value: false\n      },\n      /**\n       * Specifies that the user must fill in a value.\n       */\n      required: {\n        type: Boolean,\n        reflectToAttribute: true\n      }\n    };\n  }\n\n  /**\n   * Validates the field and sets the `invalid` property based on the result.\n   *\n   * The method fires a `validated` event with the result of the validation.\n   *\n   * @return {boolean} True if the value is valid.\n   */\n  validate() {\n    const isValid = this.checkValidity();\n    this._setInvalid(!isValid);\n    this.dispatchEvent(new CustomEvent('validated', {\n      detail: {\n        valid: isValid\n      }\n    }));\n    return isValid;\n  }\n\n  /**\n   * Returns true if the field value satisfies all constraints (if any).\n   *\n   * @return {boolean}\n   */\n  checkValidity() {\n    return !this.required || !!this.value;\n  }\n\n  /**\n   * @param {boolean} invalid\n   * @protected\n   */\n  _setInvalid(invalid) {\n    if (this._shouldSetInvalid(invalid)) {\n      this.invalid = invalid;\n    }\n  }\n\n  /**\n   * Override this method to define whether the given `invalid` state should be set.\n   *\n   * @param {boolean} _invalid\n   * @return {boolean}\n   * @protected\n   */\n  _shouldSetInvalid(_invalid) {\n    return true;\n  }\n\n  /**\n   * Fired whenever the field is validated.\n   *\n   * @event validated\n   * @param {Object} detail\n   * @param {boolean} detail.valid the result of the validation.\n   */\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9maWVsZC1iYXNlL3NyYy92YWxpZGF0ZS1taXhpbi5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2hvbWUtYXNzaXN0YW50LWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0B2YWFkaW4vZmllbGQtYmFzZS9zcmMvdmFsaWRhdGUtbWl4aW4uanM/Y2MwZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgKGMpIDIwMjEgLSAyMDIzIFZhYWRpbiBMdGQuXG4gKiBUaGlzIHByb2dyYW0gaXMgYXZhaWxhYmxlIHVuZGVyIEFwYWNoZSBMaWNlbnNlIFZlcnNpb24gMi4wLCBhdmFpbGFibGUgYXQgaHR0cHM6Ly92YWFkaW4uY29tL2xpY2Vuc2UvXG4gKi9cbmltcG9ydCB7IGRlZHVwaW5nTWl4aW4gfSBmcm9tICdAcG9seW1lci9wb2x5bWVyL2xpYi91dGlscy9taXhpbi5qcyc7XG5cbi8qKlxuICogQSBtaXhpbiB0byBwcm92aWRlIHJlcXVpcmVkIHN0YXRlIGFuZCB2YWxpZGF0aW9uIGxvZ2ljLlxuICpcbiAqIEBwb2x5bWVyTWl4aW5cbiAqL1xuZXhwb3J0IGNvbnN0IFZhbGlkYXRlTWl4aW4gPSBkZWR1cGluZ01peGluKFxuICAoc3VwZXJjbGFzcykgPT5cbiAgICBjbGFzcyBWYWxpZGF0ZU1peGluQ2xhc3MgZXh0ZW5kcyBzdXBlcmNsYXNzIHtcbiAgICAgIHN0YXRpYyBnZXQgcHJvcGVydGllcygpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAvKipcbiAgICAgICAgICAgKiBTZXQgdG8gdHJ1ZSB3aGVuIHRoZSBmaWVsZCBpcyBpbnZhbGlkLlxuICAgICAgICAgICAqL1xuICAgICAgICAgIGludmFsaWQ6IHtcbiAgICAgICAgICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgICAgICAgICByZWZsZWN0VG9BdHRyaWJ1dGU6IHRydWUsXG4gICAgICAgICAgICBub3RpZnk6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogZmFsc2UsXG4gICAgICAgICAgfSxcblxuICAgICAgICAgIC8qKlxuICAgICAgICAgICAqIFNwZWNpZmllcyB0aGF0IHRoZSB1c2VyIG11c3QgZmlsbCBpbiBhIHZhbHVlLlxuICAgICAgICAgICAqL1xuICAgICAgICAgIHJlcXVpcmVkOiB7XG4gICAgICAgICAgICB0eXBlOiBCb29sZWFuLFxuICAgICAgICAgICAgcmVmbGVjdFRvQXR0cmlidXRlOiB0cnVlLFxuICAgICAgICAgIH0sXG4gICAgICAgIH07XG4gICAgICB9XG5cbiAgICAgIC8qKlxuICAgICAgICogVmFsaWRhdGVzIHRoZSBmaWVsZCBhbmQgc2V0cyB0aGUgYGludmFsaWRgIHByb3BlcnR5IGJhc2VkIG9uIHRoZSByZXN1bHQuXG4gICAgICAgKlxuICAgICAgICogVGhlIG1ldGhvZCBmaXJlcyBhIGB2YWxpZGF0ZWRgIGV2ZW50IHdpdGggdGhlIHJlc3VsdCBvZiB0aGUgdmFsaWRhdGlvbi5cbiAgICAgICAqXG4gICAgICAgKiBAcmV0dXJuIHtib29sZWFufSBUcnVlIGlmIHRoZSB2YWx1ZSBpcyB2YWxpZC5cbiAgICAgICAqL1xuICAgICAgdmFsaWRhdGUoKSB7XG4gICAgICAgIGNvbnN0IGlzVmFsaWQgPSB0aGlzLmNoZWNrVmFsaWRpdHkoKTtcbiAgICAgICAgdGhpcy5fc2V0SW52YWxpZCghaXNWYWxpZCk7XG4gICAgICAgIHRoaXMuZGlzcGF0Y2hFdmVudChuZXcgQ3VzdG9tRXZlbnQoJ3ZhbGlkYXRlZCcsIHsgZGV0YWlsOiB7IHZhbGlkOiBpc1ZhbGlkIH0gfSkpO1xuICAgICAgICByZXR1cm4gaXNWYWxpZDtcbiAgICAgIH1cblxuICAgICAgLyoqXG4gICAgICAgKiBSZXR1cm5zIHRydWUgaWYgdGhlIGZpZWxkIHZhbHVlIHNhdGlzZmllcyBhbGwgY29uc3RyYWludHMgKGlmIGFueSkuXG4gICAgICAgKlxuICAgICAgICogQHJldHVybiB7Ym9vbGVhbn1cbiAgICAgICAqL1xuICAgICAgY2hlY2tWYWxpZGl0eSgpIHtcbiAgICAgICAgcmV0dXJuICF0aGlzLnJlcXVpcmVkIHx8ICEhdGhpcy52YWx1ZTtcbiAgICAgIH1cblxuICAgICAgLyoqXG4gICAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IGludmFsaWRcbiAgICAgICAqIEBwcm90ZWN0ZWRcbiAgICAgICAqL1xuICAgICAgX3NldEludmFsaWQoaW52YWxpZCkge1xuICAgICAgICBpZiAodGhpcy5fc2hvdWxkU2V0SW52YWxpZChpbnZhbGlkKSkge1xuICAgICAgICAgIHRoaXMuaW52YWxpZCA9IGludmFsaWQ7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgLyoqXG4gICAgICAgKiBPdmVycmlkZSB0aGlzIG1ldGhvZCB0byBkZWZpbmUgd2hldGhlciB0aGUgZ2l2ZW4gYGludmFsaWRgIHN0YXRlIHNob3VsZCBiZSBzZXQuXG4gICAgICAgKlxuICAgICAgICogQHBhcmFtIHtib29sZWFufSBfaW52YWxpZFxuICAgICAgICogQHJldHVybiB7Ym9vbGVhbn1cbiAgICAgICAqIEBwcm90ZWN0ZWRcbiAgICAgICAqL1xuICAgICAgX3Nob3VsZFNldEludmFsaWQoX2ludmFsaWQpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG5cbiAgICAgIC8qKlxuICAgICAgICogRmlyZWQgd2hlbmV2ZXIgdGhlIGZpZWxkIGlzIHZhbGlkYXRlZC5cbiAgICAgICAqXG4gICAgICAgKiBAZXZlbnQgdmFsaWRhdGVkXG4gICAgICAgKiBAcGFyYW0ge09iamVjdH0gZGV0YWlsXG4gICAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IGRldGFpbC52YWxpZCB0aGUgcmVzdWx0IG9mIHRoZSB2YWxpZGF0aW9uLlxuICAgICAgICovXG4gICAgfSxcbik7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/field-base/src/validate-mixin.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/field-base/src/virtual-keyboard-controller.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@vaadin/field-base/src/virtual-keyboard-controller.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VirtualKeyboardController: () => (/* binding */ VirtualKeyboardController)\n/* harmony export */ });\n/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * A controller which prevents the virtual keyboard from showing up on mobile devices\n * when the field's overlay is closed.\n */\nclass VirtualKeyboardController {\n  /**\n   * @param {{ inputElement?: HTMLElement; opened: boolean } & HTMLElement} host\n   */\n  constructor(host) {\n    this.host = host;\n    host.addEventListener('opened-changed', () => {\n      if (!host.opened) {\n        // Prevent opening the virtual keyboard when the input gets re-focused on dropdown close\n        this.__setVirtualKeyboardEnabled(false);\n      }\n    });\n\n    // Re-enable virtual keyboard on blur, so it gets opened when the field is focused again\n    host.addEventListener('blur', () => this.__setVirtualKeyboardEnabled(true));\n\n    // Re-enable the virtual keyboard whenever the field is touched\n    host.addEventListener('touchstart', () => this.__setVirtualKeyboardEnabled(true));\n  }\n\n  /** @private */\n  __setVirtualKeyboardEnabled(value) {\n    if (this.host.inputElement) {\n      this.host.inputElement.inputMode = value ? '' : 'none';\n    }\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9maWVsZC1iYXNlL3NyYy92aXJ0dWFsLWtleWJvYXJkLWNvbnRyb2xsZXIuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob21lLWFzc2lzdGFudC1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AdmFhZGluL2ZpZWxkLWJhc2Uvc3JjL3ZpcnR1YWwta2V5Ym9hcmQtY29udHJvbGxlci5qcz81ZGZiIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAoYykgMjAyMSAtIDIwMjMgVmFhZGluIEx0ZC5cbiAqIFRoaXMgcHJvZ3JhbSBpcyBhdmFpbGFibGUgdW5kZXIgQXBhY2hlIExpY2Vuc2UgVmVyc2lvbiAyLjAsIGF2YWlsYWJsZSBhdCBodHRwczovL3ZhYWRpbi5jb20vbGljZW5zZS9cbiAqL1xuXG4vKipcbiAqIEEgY29udHJvbGxlciB3aGljaCBwcmV2ZW50cyB0aGUgdmlydHVhbCBrZXlib2FyZCBmcm9tIHNob3dpbmcgdXAgb24gbW9iaWxlIGRldmljZXNcbiAqIHdoZW4gdGhlIGZpZWxkJ3Mgb3ZlcmxheSBpcyBjbG9zZWQuXG4gKi9cbmV4cG9ydCBjbGFzcyBWaXJ0dWFsS2V5Ym9hcmRDb250cm9sbGVyIHtcbiAgLyoqXG4gICAqIEBwYXJhbSB7eyBpbnB1dEVsZW1lbnQ/OiBIVE1MRWxlbWVudDsgb3BlbmVkOiBib29sZWFuIH0gJiBIVE1MRWxlbWVudH0gaG9zdFxuICAgKi9cbiAgY29uc3RydWN0b3IoaG9zdCkge1xuICAgIHRoaXMuaG9zdCA9IGhvc3Q7XG5cbiAgICBob3N0LmFkZEV2ZW50TGlzdGVuZXIoJ29wZW5lZC1jaGFuZ2VkJywgKCkgPT4ge1xuICAgICAgaWYgKCFob3N0Lm9wZW5lZCkge1xuICAgICAgICAvLyBQcmV2ZW50IG9wZW5pbmcgdGhlIHZpcnR1YWwga2V5Ym9hcmQgd2hlbiB0aGUgaW5wdXQgZ2V0cyByZS1mb2N1c2VkIG9uIGRyb3Bkb3duIGNsb3NlXG4gICAgICAgIHRoaXMuX19zZXRWaXJ0dWFsS2V5Ym9hcmRFbmFibGVkKGZhbHNlKTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIC8vIFJlLWVuYWJsZSB2aXJ0dWFsIGtleWJvYXJkIG9uIGJsdXIsIHNvIGl0IGdldHMgb3BlbmVkIHdoZW4gdGhlIGZpZWxkIGlzIGZvY3VzZWQgYWdhaW5cbiAgICBob3N0LmFkZEV2ZW50TGlzdGVuZXIoJ2JsdXInLCAoKSA9PiB0aGlzLl9fc2V0VmlydHVhbEtleWJvYXJkRW5hYmxlZCh0cnVlKSk7XG5cbiAgICAvLyBSZS1lbmFibGUgdGhlIHZpcnR1YWwga2V5Ym9hcmQgd2hlbmV2ZXIgdGhlIGZpZWxkIGlzIHRvdWNoZWRcbiAgICBob3N0LmFkZEV2ZW50TGlzdGVuZXIoJ3RvdWNoc3RhcnQnLCAoKSA9PiB0aGlzLl9fc2V0VmlydHVhbEtleWJvYXJkRW5hYmxlZCh0cnVlKSk7XG4gIH1cblxuICAvKiogQHByaXZhdGUgKi9cbiAgX19zZXRWaXJ0dWFsS2V5Ym9hcmRFbmFibGVkKHZhbHVlKSB7XG4gICAgaWYgKHRoaXMuaG9zdC5pbnB1dEVsZW1lbnQpIHtcbiAgICAgIHRoaXMuaG9zdC5pbnB1dEVsZW1lbnQuaW5wdXRNb2RlID0gdmFsdWUgPyAnJyA6ICdub25lJztcbiAgICB9XG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/field-base/src/virtual-keyboard-controller.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/item/theme/material/vaadin-item-styles.js":
/*!************************************************************************!*\
  !*** ./node_modules/@vaadin/item/theme/material/vaadin-item-styles.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   item: () => (/* binding */ item)\n/* harmony export */ });\n/* harmony import */ var _vaadin_vaadin_material_styles_font_icons_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @vaadin/vaadin-material-styles/font-icons.js */ \"./node_modules/@vaadin/vaadin-material-styles/font-icons.js\");\n/* harmony import */ var _vaadin_vaadin_material_styles_color_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @vaadin/vaadin-material-styles/color.js */ \"./node_modules/@vaadin/vaadin-material-styles/color.js\");\n/* harmony import */ var _vaadin_vaadin_material_styles_typography_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @vaadin/vaadin-material-styles/typography.js */ \"./node_modules/@vaadin/vaadin-material-styles/typography.js\");\n/* harmony import */ var _vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js */ \"./node_modules/@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js\");\n\n\n\n\nconst item = (0,_vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_3__.css)`\n  :host {\n    display: flex;\n    align-items: center;\n    box-sizing: border-box;\n    min-height: 36px;\n    padding: 8px 32px 8px 10px;\n    overflow: hidden;\n    font-family: var(--material-font-family);\n    font-size: var(--material-small-font-size);\n    line-height: 24px;\n  }\n\n  /* It's the list-box's responsibility to add the focus style */\n  :host([focused]) {\n    outline: none;\n  }\n\n  /* Checkmark */\n  [part='checkmark']::before {\n    display: var(--_material-item-selected-icon-display, none);\n    content: '';\n    font-family: material-icons;\n    font-size: 24px;\n    line-height: 1;\n    font-weight: 400;\n    width: 24px;\n    text-align: center;\n    margin-right: 10px;\n    color: var(--material-secondary-text-color);\n    flex: none;\n  }\n\n  :host([selected]) [part='checkmark']::before {\n    content: var(--material-icons-check);\n  }\n\n  @media (any-hover: hover) {\n    :host(:hover:not([disabled])) {\n      background-color: var(--material-secondary-background-color);\n    }\n\n    :host([focused]:not([disabled])) {\n      background-color: var(--material-divider-color);\n    }\n  }\n\n  /* Disabled */\n  :host([disabled]) {\n    color: var(--material-disabled-text-color);\n    cursor: default;\n    pointer-events: none;\n  }\n\n  /* RTL specific styles */\n  :host([dir='rtl']) {\n    padding: 8px 10px 8px 32px;\n  }\n\n  :host([dir='rtl']) [part='checkmark']::before {\n    margin-right: 0;\n    margin-left: 10px;\n  }\n`;\n(0,_vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_3__.registerStyles)('vaadin-item', item, {\n  moduleId: 'material-item'\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9pdGVtL3RoZW1lL21hdGVyaWFsL3ZhYWRpbi1pdGVtLXN0eWxlcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUFBO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob21lLWFzc2lzdGFudC1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AdmFhZGluL2l0ZW0vdGhlbWUvbWF0ZXJpYWwvdmFhZGluLWl0ZW0tc3R5bGVzLmpzP2IyZmIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICdAdmFhZGluL3ZhYWRpbi1tYXRlcmlhbC1zdHlsZXMvZm9udC1pY29ucy5qcyc7XG5pbXBvcnQgJ0B2YWFkaW4vdmFhZGluLW1hdGVyaWFsLXN0eWxlcy9jb2xvci5qcyc7XG5pbXBvcnQgJ0B2YWFkaW4vdmFhZGluLW1hdGVyaWFsLXN0eWxlcy90eXBvZ3JhcGh5LmpzJztcbmltcG9ydCB7IGNzcywgcmVnaXN0ZXJTdHlsZXMgfSBmcm9tICdAdmFhZGluL3ZhYWRpbi10aGVtYWJsZS1taXhpbi92YWFkaW4tdGhlbWFibGUtbWl4aW4uanMnO1xuXG5jb25zdCBpdGVtID0gY3NzYFxuICA6aG9zdCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgbWluLWhlaWdodDogMzZweDtcbiAgICBwYWRkaW5nOiA4cHggMzJweCA4cHggMTBweDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIGZvbnQtZmFtaWx5OiB2YXIoLS1tYXRlcmlhbC1mb250LWZhbWlseSk7XG4gICAgZm9udC1zaXplOiB2YXIoLS1tYXRlcmlhbC1zbWFsbC1mb250LXNpemUpO1xuICAgIGxpbmUtaGVpZ2h0OiAyNHB4O1xuICB9XG5cbiAgLyogSXQncyB0aGUgbGlzdC1ib3gncyByZXNwb25zaWJpbGl0eSB0byBhZGQgdGhlIGZvY3VzIHN0eWxlICovXG4gIDpob3N0KFtmb2N1c2VkXSkge1xuICAgIG91dGxpbmU6IG5vbmU7XG4gIH1cblxuICAvKiBDaGVja21hcmsgKi9cbiAgW3BhcnQ9J2NoZWNrbWFyayddOjpiZWZvcmUge1xuICAgIGRpc3BsYXk6IHZhcigtLV9tYXRlcmlhbC1pdGVtLXNlbGVjdGVkLWljb24tZGlzcGxheSwgbm9uZSk7XG4gICAgY29udGVudDogJyc7XG4gICAgZm9udC1mYW1pbHk6IG1hdGVyaWFsLWljb25zO1xuICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICBsaW5lLWhlaWdodDogMTtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIHdpZHRoOiAyNHB4O1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XG4gICAgY29sb3I6IHZhcigtLW1hdGVyaWFsLXNlY29uZGFyeS10ZXh0LWNvbG9yKTtcbiAgICBmbGV4OiBub25lO1xuICB9XG5cbiAgOmhvc3QoW3NlbGVjdGVkXSkgW3BhcnQ9J2NoZWNrbWFyayddOjpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IHZhcigtLW1hdGVyaWFsLWljb25zLWNoZWNrKTtcbiAgfVxuXG4gIEBtZWRpYSAoYW55LWhvdmVyOiBob3Zlcikge1xuICAgIDpob3N0KDpob3Zlcjpub3QoW2Rpc2FibGVkXSkpIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLW1hdGVyaWFsLXNlY29uZGFyeS1iYWNrZ3JvdW5kLWNvbG9yKTtcbiAgICB9XG5cbiAgICA6aG9zdChbZm9jdXNlZF06bm90KFtkaXNhYmxlZF0pKSB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1tYXRlcmlhbC1kaXZpZGVyLWNvbG9yKTtcbiAgICB9XG4gIH1cblxuICAvKiBEaXNhYmxlZCAqL1xuICA6aG9zdChbZGlzYWJsZWRdKSB7XG4gICAgY29sb3I6IHZhcigtLW1hdGVyaWFsLWRpc2FibGVkLXRleHQtY29sb3IpO1xuICAgIGN1cnNvcjogZGVmYXVsdDtcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgfVxuXG4gIC8qIFJUTCBzcGVjaWZpYyBzdHlsZXMgKi9cbiAgOmhvc3QoW2Rpcj0ncnRsJ10pIHtcbiAgICBwYWRkaW5nOiA4cHggMTBweCA4cHggMzJweDtcbiAgfVxuXG4gIDpob3N0KFtkaXI9J3J0bCddKSBbcGFydD0nY2hlY2ttYXJrJ106OmJlZm9yZSB7XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xuICB9XG5gO1xuXG5yZWdpc3RlclN0eWxlcygndmFhZGluLWl0ZW0nLCBpdGVtLCB7IG1vZHVsZUlkOiAnbWF0ZXJpYWwtaXRlbScgfSk7XG5cbmV4cG9ydCB7IGl0ZW0gfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/item/theme/material/vaadin-item-styles.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/lit-renderer/src/lit-renderer.js":
/*!***************************************************************!*\
  !*** ./node_modules/@vaadin/lit-renderer/src/lit-renderer.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LitRendererDirective: () => (/* binding */ LitRendererDirective)\n/* harmony export */ });\n/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit */ \"./node_modules/lit/index.js\");\n/* harmony import */ var lit_async_directive_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lit/async-directive.js */ \"./node_modules/lit/async-directive.js\");\n/* harmony import */ var lit_directive_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lit/directive.js */ \"./node_modules/lit/directive.js\");\n/**\n * @license\n * Copyright (c) 2016 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\n\n\n// A symbol indicating that the directive hasn't been initialized.\nconst VALUE_NOT_INITIALIZED = Symbol('valueNotInitialized');\nclass LitRendererDirective extends lit_async_directive_js__WEBPACK_IMPORTED_MODULE_1__.AsyncDirective {\n  constructor(part) {\n    super(part);\n    if (part.type !== lit_directive_js__WEBPACK_IMPORTED_MODULE_2__.PartType.ELEMENT) {\n      throw new Error(`\\`${this.constructor.name}\\` must be bound to an element.`);\n    }\n    this.previousValue = VALUE_NOT_INITIALIZED;\n  }\n\n  /** @override */\n  render(_renderer, _value) {\n    return lit__WEBPACK_IMPORTED_MODULE_0__.nothing;\n  }\n\n  /** @override */\n  update(part, [renderer, value]) {\n    if (!this.hasChanged(value)) {\n      return lit__WEBPACK_IMPORTED_MODULE_0__.nothing;\n    }\n    this.host = part.options && part.options.host;\n    this.element = part.element;\n    this.renderer = renderer;\n    const firstRender = this.previousValue === VALUE_NOT_INITIALIZED;\n    if (firstRender) {\n      this.addRenderer();\n    } else {\n      this.runRenderer();\n    }\n\n    // Copy the value if it is an array in order to keep it\n    // from possible outside mutations.\n    this.previousValue = Array.isArray(value) ? [...value] : value;\n    return lit__WEBPACK_IMPORTED_MODULE_0__.nothing;\n  }\n\n  /** @override */\n  reconnected() {\n    this.addRenderer();\n  }\n\n  /** @override */\n  disconnected() {\n    this.removeRenderer();\n  }\n\n  /** @abstract */\n  addRenderer() {\n    throw new Error('The `addRenderer` method must be implemented.');\n  }\n\n  /** @abstract */\n  runRenderer() {\n    throw new Error('The `runRenderer` method must be implemented.');\n  }\n\n  /** @abstract */\n  removeRenderer() {\n    throw new Error('The `removeRenderer` method must be implemented.');\n  }\n\n  /** @protected */\n  renderRenderer(container, ...args) {\n    // Note that a renderer result is not necessarily a `TemplateResult`\n    // instance, as Lit allows returning any value from a renderer. The concrete\n    // list of types we allow as render results is defined in the Typescript\n    // `LitRendererResult` type.\n    const templateResult = this.renderer.call(this.host, ...args);\n    (0,lit__WEBPACK_IMPORTED_MODULE_0__.render)(templateResult, container, {\n      host: this.host\n    });\n  }\n\n  /** @protected */\n  hasChanged(value) {\n    if (Array.isArray(value)) {\n      if (!Array.isArray(this.previousValue)) {\n        return true;\n      }\n      if (this.previousValue.length !== value.length) {\n        return true;\n      }\n\n      // For arrays, perform shallow dirty checking for each element.\n      return value.some((v, i) => v !== this.previousValue[i]);\n    }\n    return this.previousValue !== value;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9saXQtcmVuZGVyZXIvc3JjL2xpdC1yZW5kZXJlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9tZS1hc3Npc3RhbnQtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9saXQtcmVuZGVyZXIvc3JjL2xpdC1yZW5kZXJlci5qcz9mNDIyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAoYykgMjAxNiAtIDIwMjMgVmFhZGluIEx0ZC5cbiAqIFRoaXMgcHJvZ3JhbSBpcyBhdmFpbGFibGUgdW5kZXIgQXBhY2hlIExpY2Vuc2UgVmVyc2lvbiAyLjAsIGF2YWlsYWJsZSBhdCBodHRwczovL3ZhYWRpbi5jb20vbGljZW5zZS9cbiAqL1xuaW1wb3J0IHsgbm90aGluZywgcmVuZGVyIH0gZnJvbSAnbGl0JztcbmltcG9ydCB7IEFzeW5jRGlyZWN0aXZlIH0gZnJvbSAnbGl0L2FzeW5jLWRpcmVjdGl2ZS5qcyc7XG5pbXBvcnQgeyBQYXJ0VHlwZSB9IGZyb20gJ2xpdC9kaXJlY3RpdmUuanMnO1xuXG4vLyBBIHN5bWJvbCBpbmRpY2F0aW5nIHRoYXQgdGhlIGRpcmVjdGl2ZSBoYXNuJ3QgYmVlbiBpbml0aWFsaXplZC5cbmNvbnN0IFZBTFVFX05PVF9JTklUSUFMSVpFRCA9IFN5bWJvbCgndmFsdWVOb3RJbml0aWFsaXplZCcpO1xuXG5leHBvcnQgY2xhc3MgTGl0UmVuZGVyZXJEaXJlY3RpdmUgZXh0ZW5kcyBBc3luY0RpcmVjdGl2ZSB7XG4gIGNvbnN0cnVjdG9yKHBhcnQpIHtcbiAgICBzdXBlcihwYXJ0KTtcblxuICAgIGlmIChwYXJ0LnR5cGUgIT09IFBhcnRUeXBlLkVMRU1FTlQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgXFxgJHt0aGlzLmNvbnN0cnVjdG9yLm5hbWV9XFxgIG11c3QgYmUgYm91bmQgdG8gYW4gZWxlbWVudC5gKTtcbiAgICB9XG5cbiAgICB0aGlzLnByZXZpb3VzVmFsdWUgPSBWQUxVRV9OT1RfSU5JVElBTElaRUQ7XG4gIH1cblxuICAvKiogQG92ZXJyaWRlICovXG4gIHJlbmRlcihfcmVuZGVyZXIsIF92YWx1ZSkge1xuICAgIHJldHVybiBub3RoaW5nO1xuICB9XG5cbiAgLyoqIEBvdmVycmlkZSAqL1xuICB1cGRhdGUocGFydCwgW3JlbmRlcmVyLCB2YWx1ZV0pIHtcbiAgICBpZiAoIXRoaXMuaGFzQ2hhbmdlZCh2YWx1ZSkpIHtcbiAgICAgIHJldHVybiBub3RoaW5nO1xuICAgIH1cblxuICAgIHRoaXMuaG9zdCA9IHBhcnQub3B0aW9ucyAmJiBwYXJ0Lm9wdGlvbnMuaG9zdDtcbiAgICB0aGlzLmVsZW1lbnQgPSBwYXJ0LmVsZW1lbnQ7XG4gICAgdGhpcy5yZW5kZXJlciA9IHJlbmRlcmVyO1xuXG4gICAgY29uc3QgZmlyc3RSZW5kZXIgPSB0aGlzLnByZXZpb3VzVmFsdWUgPT09IFZBTFVFX05PVF9JTklUSUFMSVpFRDtcbiAgICBpZiAoZmlyc3RSZW5kZXIpIHtcbiAgICAgIHRoaXMuYWRkUmVuZGVyZXIoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5ydW5SZW5kZXJlcigpO1xuICAgIH1cblxuICAgIC8vIENvcHkgdGhlIHZhbHVlIGlmIGl0IGlzIGFuIGFycmF5IGluIG9yZGVyIHRvIGtlZXAgaXRcbiAgICAvLyBmcm9tIHBvc3NpYmxlIG91dHNpZGUgbXV0YXRpb25zLlxuICAgIHRoaXMucHJldmlvdXNWYWx1ZSA9IEFycmF5LmlzQXJyYXkodmFsdWUpID8gWy4uLnZhbHVlXSA6IHZhbHVlO1xuXG4gICAgcmV0dXJuIG5vdGhpbmc7XG4gIH1cblxuICAvKiogQG92ZXJyaWRlICovXG4gIHJlY29ubmVjdGVkKCkge1xuICAgIHRoaXMuYWRkUmVuZGVyZXIoKTtcbiAgfVxuXG4gIC8qKiBAb3ZlcnJpZGUgKi9cbiAgZGlzY29ubmVjdGVkKCkge1xuICAgIHRoaXMucmVtb3ZlUmVuZGVyZXIoKTtcbiAgfVxuXG4gIC8qKiBAYWJzdHJhY3QgKi9cbiAgYWRkUmVuZGVyZXIoKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdUaGUgYGFkZFJlbmRlcmVyYCBtZXRob2QgbXVzdCBiZSBpbXBsZW1lbnRlZC4nKTtcbiAgfVxuXG4gIC8qKiBAYWJzdHJhY3QgKi9cbiAgcnVuUmVuZGVyZXIoKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdUaGUgYHJ1blJlbmRlcmVyYCBtZXRob2QgbXVzdCBiZSBpbXBsZW1lbnRlZC4nKTtcbiAgfVxuXG4gIC8qKiBAYWJzdHJhY3QgKi9cbiAgcmVtb3ZlUmVuZGVyZXIoKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdUaGUgYHJlbW92ZVJlbmRlcmVyYCBtZXRob2QgbXVzdCBiZSBpbXBsZW1lbnRlZC4nKTtcbiAgfVxuXG4gIC8qKiBAcHJvdGVjdGVkICovXG4gIHJlbmRlclJlbmRlcmVyKGNvbnRhaW5lciwgLi4uYXJncykge1xuICAgIC8vIE5vdGUgdGhhdCBhIHJlbmRlcmVyIHJlc3VsdCBpcyBub3QgbmVjZXNzYXJpbHkgYSBgVGVtcGxhdGVSZXN1bHRgXG4gICAgLy8gaW5zdGFuY2UsIGFzIExpdCBhbGxvd3MgcmV0dXJuaW5nIGFueSB2YWx1ZSBmcm9tIGEgcmVuZGVyZXIuIFRoZSBjb25jcmV0ZVxuICAgIC8vIGxpc3Qgb2YgdHlwZXMgd2UgYWxsb3cgYXMgcmVuZGVyIHJlc3VsdHMgaXMgZGVmaW5lZCBpbiB0aGUgVHlwZXNjcmlwdFxuICAgIC8vIGBMaXRSZW5kZXJlclJlc3VsdGAgdHlwZS5cbiAgICBjb25zdCB0ZW1wbGF0ZVJlc3VsdCA9IHRoaXMucmVuZGVyZXIuY2FsbCh0aGlzLmhvc3QsIC4uLmFyZ3MpO1xuICAgIHJlbmRlcih0ZW1wbGF0ZVJlc3VsdCwgY29udGFpbmVyLCB7IGhvc3Q6IHRoaXMuaG9zdCB9KTtcbiAgfVxuXG4gIC8qKiBAcHJvdGVjdGVkICovXG4gIGhhc0NoYW5nZWQodmFsdWUpIHtcbiAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAgIGlmICghQXJyYXkuaXNBcnJheSh0aGlzLnByZXZpb3VzVmFsdWUpKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfVxuXG4gICAgICBpZiAodGhpcy5wcmV2aW91c1ZhbHVlLmxlbmd0aCAhPT0gdmFsdWUubGVuZ3RoKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfVxuXG4gICAgICAvLyBGb3IgYXJyYXlzLCBwZXJmb3JtIHNoYWxsb3cgZGlydHkgY2hlY2tpbmcgZm9yIGVhY2ggZWxlbWVudC5cbiAgICAgIHJldHVybiB2YWx1ZS5zb21lKCh2LCBpKSA9PiB2ICE9PSB0aGlzLnByZXZpb3VzVmFsdWVbaV0pO1xuICAgIH1cblxuICAgIHJldHVybiB0aGlzLnByZXZpb3VzVmFsdWUgIT09IHZhbHVlO1xuICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/lit-renderer/src/lit-renderer.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/overlay/src/vaadin-overlay-focus-mixin.js":
/*!************************************************************************!*\
  !*** ./node_modules/@vaadin/overlay/src/vaadin-overlay-focus-mixin.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OverlayFocusMixin: () => (/* binding */ OverlayFocusMixin)\n/* harmony export */ });\n/* harmony import */ var _vaadin_a11y_base_src_aria_modal_controller_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @vaadin/a11y-base/src/aria-modal-controller.js */ \"./node_modules/@vaadin/a11y-base/src/aria-modal-controller.js\");\n/* harmony import */ var _vaadin_a11y_base_src_focus_restoration_controller_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @vaadin/a11y-base/src/focus-restoration-controller.js */ \"./node_modules/@vaadin/a11y-base/src/focus-restoration-controller.js\");\n/* harmony import */ var _vaadin_a11y_base_src_focus_trap_controller_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @vaadin/a11y-base/src/focus-trap-controller.js */ \"./node_modules/@vaadin/a11y-base/src/focus-trap-controller.js\");\n/* harmony import */ var _vaadin_a11y_base_src_focus_utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @vaadin/a11y-base/src/focus-utils.js */ \"./node_modules/@vaadin/a11y-base/src/focus-utils.js\");\n/* harmony import */ var _vaadin_component_base_src_controller_mixin_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @vaadin/component-base/src/controller-mixin.js */ \"./node_modules/@vaadin/component-base/src/controller-mixin.js\");\n/**\n * @license\n * Copyright (c) 2017 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\n\n\n\n\n/**\n * @polymerMixin\n * @mixes ControllerMixin\n */\nconst OverlayFocusMixin = superClass => class OverlayFocusMixin extends (0,_vaadin_component_base_src_controller_mixin_js__WEBPACK_IMPORTED_MODULE_4__.ControllerMixin)(superClass) {\n  static get properties() {\n    return {\n      /**\n       * When true, opening the overlay moves focus to the first focusable child,\n       * or to the overlay part with tabindex if there are no focusable children.\n       * @attr {boolean} focus-trap\n       */\n      focusTrap: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Set to true to enable restoring of focus when overlay is closed.\n       * @attr {boolean} restore-focus-on-close\n       */\n      restoreFocusOnClose: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Set to specify the element which should be focused on overlay close,\n       * if `restoreFocusOnClose` is set to true.\n       * @type {HTMLElement}\n       */\n      restoreFocusNode: {\n        type: HTMLElement\n      }\n    };\n  }\n  constructor() {\n    super();\n    this.__ariaModalController = new _vaadin_a11y_base_src_aria_modal_controller_js__WEBPACK_IMPORTED_MODULE_0__.AriaModalController(this);\n    this.__focusTrapController = new _vaadin_a11y_base_src_focus_trap_controller_js__WEBPACK_IMPORTED_MODULE_2__.FocusTrapController(this);\n    this.__focusRestorationController = new _vaadin_a11y_base_src_focus_restoration_controller_js__WEBPACK_IMPORTED_MODULE_1__.FocusRestorationController();\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n    this.addController(this.__ariaModalController);\n    this.addController(this.__focusTrapController);\n    this.addController(this.__focusRestorationController);\n  }\n\n  /**\n   * Release focus and restore focus after the overlay is closed.\n   *\n   * @protected\n   */\n  _resetFocus() {\n    if (this.focusTrap) {\n      this.__ariaModalController.close();\n      this.__focusTrapController.releaseFocus();\n    }\n    if (this.restoreFocusOnClose && this._shouldRestoreFocus()) {\n      this.__focusRestorationController.restoreFocus();\n    }\n  }\n\n  /**\n   * Save the previously focused node when the overlay starts to open.\n   *\n   * @protected\n   */\n  _saveFocus() {\n    if (this.restoreFocusOnClose) {\n      this.__focusRestorationController.saveFocus(this.restoreFocusNode);\n    }\n  }\n\n  /**\n   * Trap focus within the overlay after opening has completed.\n   *\n   * @protected\n   */\n  _trapFocus() {\n    if (this.focusTrap) {\n      this.__ariaModalController.showModal();\n      this.__focusTrapController.trapFocus(this.$.overlay);\n    }\n  }\n\n  /**\n   * Returns true if focus is still inside the overlay or on the body element,\n   * otherwise false.\n   *\n   * Focus shouldn't be restored if it's been moved elsewhere by another\n   * component or as a result of a user interaction e.g. the user clicked\n   * on a button outside the overlay while the overlay was open.\n   *\n   * @protected\n   * @return {boolean}\n   */\n  _shouldRestoreFocus() {\n    const activeElement = (0,_vaadin_a11y_base_src_focus_utils_js__WEBPACK_IMPORTED_MODULE_3__.getDeepActiveElement)();\n    return activeElement === document.body || this._deepContains(activeElement);\n  }\n\n  /**\n   * Returns true if the overlay contains the given node,\n   * including those within shadow DOM trees.\n   *\n   * @param {Node} node\n   * @return {boolean}\n   * @protected\n   */\n  _deepContains(node) {\n    if (this.contains(node)) {\n      return true;\n    }\n    let n = node;\n    const doc = node.ownerDocument;\n    // Walk from node to `this` or `document`\n    while (n && n !== doc && n !== this) {\n      n = n.parentNode || n.host;\n    }\n    return n === this;\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9vdmVybGF5L3NyYy92YWFkaW4tb3ZlcmxheS1mb2N1cy1taXhpbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2hvbWUtYXNzaXN0YW50LWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0B2YWFkaW4vb3ZlcmxheS9zcmMvdmFhZGluLW92ZXJsYXktZm9jdXMtbWl4aW4uanM/ZmE5ZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTcgLSAyMDIzIFZhYWRpbiBMdGQuXG4gKiBUaGlzIHByb2dyYW0gaXMgYXZhaWxhYmxlIHVuZGVyIEFwYWNoZSBMaWNlbnNlIFZlcnNpb24gMi4wLCBhdmFpbGFibGUgYXQgaHR0cHM6Ly92YWFkaW4uY29tL2xpY2Vuc2UvXG4gKi9cbmltcG9ydCB7IEFyaWFNb2RhbENvbnRyb2xsZXIgfSBmcm9tICdAdmFhZGluL2ExMXktYmFzZS9zcmMvYXJpYS1tb2RhbC1jb250cm9sbGVyLmpzJztcbmltcG9ydCB7IEZvY3VzUmVzdG9yYXRpb25Db250cm9sbGVyIH0gZnJvbSAnQHZhYWRpbi9hMTF5LWJhc2Uvc3JjL2ZvY3VzLXJlc3RvcmF0aW9uLWNvbnRyb2xsZXIuanMnO1xuaW1wb3J0IHsgRm9jdXNUcmFwQ29udHJvbGxlciB9IGZyb20gJ0B2YWFkaW4vYTExeS1iYXNlL3NyYy9mb2N1cy10cmFwLWNvbnRyb2xsZXIuanMnO1xuaW1wb3J0IHsgZ2V0RGVlcEFjdGl2ZUVsZW1lbnQgfSBmcm9tICdAdmFhZGluL2ExMXktYmFzZS9zcmMvZm9jdXMtdXRpbHMuanMnO1xuaW1wb3J0IHsgQ29udHJvbGxlck1peGluIH0gZnJvbSAnQHZhYWRpbi9jb21wb25lbnQtYmFzZS9zcmMvY29udHJvbGxlci1taXhpbi5qcyc7XG5cbi8qKlxuICogQHBvbHltZXJNaXhpblxuICogQG1peGVzIENvbnRyb2xsZXJNaXhpblxuICovXG5leHBvcnQgY29uc3QgT3ZlcmxheUZvY3VzTWl4aW4gPSAoc3VwZXJDbGFzcykgPT5cbiAgY2xhc3MgT3ZlcmxheUZvY3VzTWl4aW4gZXh0ZW5kcyBDb250cm9sbGVyTWl4aW4oc3VwZXJDbGFzcykge1xuICAgIHN0YXRpYyBnZXQgcHJvcGVydGllcygpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBXaGVuIHRydWUsIG9wZW5pbmcgdGhlIG92ZXJsYXkgbW92ZXMgZm9jdXMgdG8gdGhlIGZpcnN0IGZvY3VzYWJsZSBjaGlsZCxcbiAgICAgICAgICogb3IgdG8gdGhlIG92ZXJsYXkgcGFydCB3aXRoIHRhYmluZGV4IGlmIHRoZXJlIGFyZSBubyBmb2N1c2FibGUgY2hpbGRyZW4uXG4gICAgICAgICAqIEBhdHRyIHtib29sZWFufSBmb2N1cy10cmFwXG4gICAgICAgICAqL1xuICAgICAgICBmb2N1c1RyYXA6IHtcbiAgICAgICAgICB0eXBlOiBCb29sZWFuLFxuICAgICAgICAgIHZhbHVlOiBmYWxzZSxcbiAgICAgICAgfSxcblxuICAgICAgICAvKipcbiAgICAgICAgICogU2V0IHRvIHRydWUgdG8gZW5hYmxlIHJlc3RvcmluZyBvZiBmb2N1cyB3aGVuIG92ZXJsYXkgaXMgY2xvc2VkLlxuICAgICAgICAgKiBAYXR0ciB7Ym9vbGVhbn0gcmVzdG9yZS1mb2N1cy1vbi1jbG9zZVxuICAgICAgICAgKi9cbiAgICAgICAgcmVzdG9yZUZvY3VzT25DbG9zZToge1xuICAgICAgICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgICAgICAgdmFsdWU6IGZhbHNlLFxuICAgICAgICB9LFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBTZXQgdG8gc3BlY2lmeSB0aGUgZWxlbWVudCB3aGljaCBzaG91bGQgYmUgZm9jdXNlZCBvbiBvdmVybGF5IGNsb3NlLFxuICAgICAgICAgKiBpZiBgcmVzdG9yZUZvY3VzT25DbG9zZWAgaXMgc2V0IHRvIHRydWUuXG4gICAgICAgICAqIEB0eXBlIHtIVE1MRWxlbWVudH1cbiAgICAgICAgICovXG4gICAgICAgIHJlc3RvcmVGb2N1c05vZGU6IHtcbiAgICAgICAgICB0eXBlOiBIVE1MRWxlbWVudCxcbiAgICAgICAgfSxcbiAgICAgIH07XG4gICAgfVxuXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICBzdXBlcigpO1xuXG4gICAgICB0aGlzLl9fYXJpYU1vZGFsQ29udHJvbGxlciA9IG5ldyBBcmlhTW9kYWxDb250cm9sbGVyKHRoaXMpO1xuICAgICAgdGhpcy5fX2ZvY3VzVHJhcENvbnRyb2xsZXIgPSBuZXcgRm9jdXNUcmFwQ29udHJvbGxlcih0aGlzKTtcbiAgICAgIHRoaXMuX19mb2N1c1Jlc3RvcmF0aW9uQ29udHJvbGxlciA9IG5ldyBGb2N1c1Jlc3RvcmF0aW9uQ29udHJvbGxlcigpO1xuICAgIH1cblxuICAgIC8qKiBAcHJvdGVjdGVkICovXG4gICAgcmVhZHkoKSB7XG4gICAgICBzdXBlci5yZWFkeSgpO1xuXG4gICAgICB0aGlzLmFkZENvbnRyb2xsZXIodGhpcy5fX2FyaWFNb2RhbENvbnRyb2xsZXIpO1xuICAgICAgdGhpcy5hZGRDb250cm9sbGVyKHRoaXMuX19mb2N1c1RyYXBDb250cm9sbGVyKTtcbiAgICAgIHRoaXMuYWRkQ29udHJvbGxlcih0aGlzLl9fZm9jdXNSZXN0b3JhdGlvbkNvbnRyb2xsZXIpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFJlbGVhc2UgZm9jdXMgYW5kIHJlc3RvcmUgZm9jdXMgYWZ0ZXIgdGhlIG92ZXJsYXkgaXMgY2xvc2VkLlxuICAgICAqXG4gICAgICogQHByb3RlY3RlZFxuICAgICAqL1xuICAgIF9yZXNldEZvY3VzKCkge1xuICAgICAgaWYgKHRoaXMuZm9jdXNUcmFwKSB7XG4gICAgICAgIHRoaXMuX19hcmlhTW9kYWxDb250cm9sbGVyLmNsb3NlKCk7XG4gICAgICAgIHRoaXMuX19mb2N1c1RyYXBDb250cm9sbGVyLnJlbGVhc2VGb2N1cygpO1xuICAgICAgfVxuXG4gICAgICBpZiAodGhpcy5yZXN0b3JlRm9jdXNPbkNsb3NlICYmIHRoaXMuX3Nob3VsZFJlc3RvcmVGb2N1cygpKSB7XG4gICAgICAgIHRoaXMuX19mb2N1c1Jlc3RvcmF0aW9uQ29udHJvbGxlci5yZXN0b3JlRm9jdXMoKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBTYXZlIHRoZSBwcmV2aW91c2x5IGZvY3VzZWQgbm9kZSB3aGVuIHRoZSBvdmVybGF5IHN0YXJ0cyB0byBvcGVuLlxuICAgICAqXG4gICAgICogQHByb3RlY3RlZFxuICAgICAqL1xuICAgIF9zYXZlRm9jdXMoKSB7XG4gICAgICBpZiAodGhpcy5yZXN0b3JlRm9jdXNPbkNsb3NlKSB7XG4gICAgICAgIHRoaXMuX19mb2N1c1Jlc3RvcmF0aW9uQ29udHJvbGxlci5zYXZlRm9jdXModGhpcy5yZXN0b3JlRm9jdXNOb2RlKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBUcmFwIGZvY3VzIHdpdGhpbiB0aGUgb3ZlcmxheSBhZnRlciBvcGVuaW5nIGhhcyBjb21wbGV0ZWQuXG4gICAgICpcbiAgICAgKiBAcHJvdGVjdGVkXG4gICAgICovXG4gICAgX3RyYXBGb2N1cygpIHtcbiAgICAgIGlmICh0aGlzLmZvY3VzVHJhcCkge1xuICAgICAgICB0aGlzLl9fYXJpYU1vZGFsQ29udHJvbGxlci5zaG93TW9kYWwoKTtcbiAgICAgICAgdGhpcy5fX2ZvY3VzVHJhcENvbnRyb2xsZXIudHJhcEZvY3VzKHRoaXMuJC5vdmVybGF5KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRydWUgaWYgZm9jdXMgaXMgc3RpbGwgaW5zaWRlIHRoZSBvdmVybGF5IG9yIG9uIHRoZSBib2R5IGVsZW1lbnQsXG4gICAgICogb3RoZXJ3aXNlIGZhbHNlLlxuICAgICAqXG4gICAgICogRm9jdXMgc2hvdWxkbid0IGJlIHJlc3RvcmVkIGlmIGl0J3MgYmVlbiBtb3ZlZCBlbHNld2hlcmUgYnkgYW5vdGhlclxuICAgICAqIGNvbXBvbmVudCBvciBhcyBhIHJlc3VsdCBvZiBhIHVzZXIgaW50ZXJhY3Rpb24gZS5nLiB0aGUgdXNlciBjbGlja2VkXG4gICAgICogb24gYSBidXR0b24gb3V0c2lkZSB0aGUgb3ZlcmxheSB3aGlsZSB0aGUgb3ZlcmxheSB3YXMgb3Blbi5cbiAgICAgKlxuICAgICAqIEBwcm90ZWN0ZWRcbiAgICAgKiBAcmV0dXJuIHtib29sZWFufVxuICAgICAqL1xuICAgIF9zaG91bGRSZXN0b3JlRm9jdXMoKSB7XG4gICAgICBjb25zdCBhY3RpdmVFbGVtZW50ID0gZ2V0RGVlcEFjdGl2ZUVsZW1lbnQoKTtcbiAgICAgIHJldHVybiBhY3RpdmVFbGVtZW50ID09PSBkb2N1bWVudC5ib2R5IHx8IHRoaXMuX2RlZXBDb250YWlucyhhY3RpdmVFbGVtZW50KTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRydWUgaWYgdGhlIG92ZXJsYXkgY29udGFpbnMgdGhlIGdpdmVuIG5vZGUsXG4gICAgICogaW5jbHVkaW5nIHRob3NlIHdpdGhpbiBzaGFkb3cgRE9NIHRyZWVzLlxuICAgICAqXG4gICAgICogQHBhcmFtIHtOb2RlfSBub2RlXG4gICAgICogQHJldHVybiB7Ym9vbGVhbn1cbiAgICAgKiBAcHJvdGVjdGVkXG4gICAgICovXG4gICAgX2RlZXBDb250YWlucyhub2RlKSB7XG4gICAgICBpZiAodGhpcy5jb250YWlucyhub2RlKSkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH1cbiAgICAgIGxldCBuID0gbm9kZTtcbiAgICAgIGNvbnN0IGRvYyA9IG5vZGUub3duZXJEb2N1bWVudDtcbiAgICAgIC8vIFdhbGsgZnJvbSBub2RlIHRvIGB0aGlzYCBvciBgZG9jdW1lbnRgXG4gICAgICB3aGlsZSAobiAmJiBuICE9PSBkb2MgJiYgbiAhPT0gdGhpcykge1xuICAgICAgICBuID0gbi5wYXJlbnROb2RlIHx8IG4uaG9zdDtcbiAgICAgIH1cbiAgICAgIHJldHVybiBuID09PSB0aGlzO1xuICAgIH1cbiAgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/overlay/src/vaadin-overlay-focus-mixin.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/overlay/src/vaadin-overlay-mixin.js":
/*!******************************************************************!*\
  !*** ./node_modules/@vaadin/overlay/src/vaadin-overlay-mixin.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OverlayMixin: () => (/* binding */ OverlayMixin)\n/* harmony export */ });\n/* harmony import */ var _polymer_polymer_lib_utils_render_status_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polymer/polymer/lib/utils/render-status.js */ \"./node_modules/@polymer/polymer/lib/utils/render-status.js\");\n/* harmony import */ var _vaadin_component_base_src_browser_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @vaadin/component-base/src/browser-utils.js */ \"./node_modules/@vaadin/component-base/src/browser-utils.js\");\n/* harmony import */ var _vaadin_overlay_focus_mixin_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./vaadin-overlay-focus-mixin.js */ \"./node_modules/@vaadin/overlay/src/vaadin-overlay-focus-mixin.js\");\n/* harmony import */ var _vaadin_overlay_stack_mixin_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./vaadin-overlay-stack-mixin.js */ \"./node_modules/@vaadin/overlay/src/vaadin-overlay-stack-mixin.js\");\n/**\n * @license\n * Copyright (c) 2017 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\n\n\n\n/**\n * @polymerMixin\n * @mixes OverlayFocusMixin\n * @mixes OverlayStackMixin\n */\nconst OverlayMixin = superClass => class OverlayMixin extends (0,_vaadin_overlay_focus_mixin_js__WEBPACK_IMPORTED_MODULE_2__.OverlayFocusMixin)((0,_vaadin_overlay_stack_mixin_js__WEBPACK_IMPORTED_MODULE_3__.OverlayStackMixin)(superClass)) {\n  static get properties() {\n    return {\n      /**\n       * When true, the overlay is visible and attached to body.\n       */\n      opened: {\n        type: Boolean,\n        notify: true,\n        observer: '_openedChanged',\n        reflectToAttribute: true\n      },\n      /**\n       * Owner element passed with renderer function\n       * @type {HTMLElement}\n       */\n      owner: {\n        type: Object\n      },\n      /**\n       * Object with properties that is passed to `renderer` function\n       */\n      model: {\n        type: Object\n      },\n      /**\n       * Custom function for rendering the content of the overlay.\n       * Receives three arguments:\n       *\n       * - `root` The root container DOM element. Append your content to it.\n       * - `owner` The host element of the renderer function.\n       * - `model` The object with the properties related with rendering.\n       * @type {OverlayRenderer | null | undefined}\n       */\n      renderer: {\n        type: Object\n      },\n      /**\n       * When true the overlay won't disable the main content, showing\n       * it doesn't change the functionality of the user interface.\n       * @type {boolean}\n       */\n      modeless: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true,\n        observer: '_modelessChanged'\n      },\n      /**\n       * When set to true, the overlay is hidden. This also closes the overlay\n       * immediately in case there is a closing animation in progress.\n       * @type {boolean}\n       */\n      hidden: {\n        type: Boolean,\n        reflectToAttribute: true,\n        observer: '_hiddenChanged'\n      },\n      /**\n       * When true the overlay has backdrop on top of content when opened.\n       * @type {boolean}\n       */\n      withBackdrop: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      }\n    };\n  }\n  static get observers() {\n    return ['_rendererOrDataChanged(renderer, owner, model, opened)'];\n  }\n  constructor() {\n    super();\n    this._boundMouseDownListener = this._mouseDownListener.bind(this);\n    this._boundMouseUpListener = this._mouseUpListener.bind(this);\n    this._boundOutsideClickListener = this._outsideClickListener.bind(this);\n    this._boundKeydownListener = this._keydownListener.bind(this);\n\n    /* c8 ignore next 3 */\n    if (_vaadin_component_base_src_browser_utils_js__WEBPACK_IMPORTED_MODULE_1__.isIOS) {\n      this._boundIosResizeListener = () => this._detectIosNavbar();\n    }\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n\n    // Need to add dummy click listeners to this and the backdrop or else\n    // the document click event listener (_outsideClickListener) may never\n    // get invoked on iOS Safari (reproducible in <vaadin-dialog>\n    // and <vaadin-context-menu>).\n    this.addEventListener('click', () => {});\n    this.$.backdrop.addEventListener('click', () => {});\n    this.addEventListener('mouseup', () => {\n      // In Chrome, focus moves to body on overlay content mousedown\n      // See https://github.com/vaadin/flow-components/issues/5507\n      if (document.activeElement === document.body && this.$.overlay.getAttribute('tabindex') === '0') {\n        this.$.overlay.focus();\n      }\n    });\n  }\n\n  /** @protected */\n  connectedCallback() {\n    super.connectedCallback();\n\n    /* c8 ignore next 3 */\n    if (this._boundIosResizeListener) {\n      this._detectIosNavbar();\n      window.addEventListener('resize', this._boundIosResizeListener);\n    }\n  }\n\n  /** @protected */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    /* c8 ignore next 3 */\n    if (this._boundIosResizeListener) {\n      window.removeEventListener('resize', this._boundIosResizeListener);\n    }\n  }\n\n  /**\n   * Requests an update for the content of the overlay.\n   * While performing the update, it invokes the renderer passed in the `renderer` property.\n   *\n   * It is not guaranteed that the update happens immediately (synchronously) after it is requested.\n   */\n  requestContentUpdate() {\n    if (this.renderer) {\n      this.renderer.call(this.owner, this, this.owner, this.model);\n    }\n  }\n\n  /**\n   * @param {Event=} sourceEvent\n   */\n  close(sourceEvent) {\n    const evt = new CustomEvent('vaadin-overlay-close', {\n      bubbles: true,\n      cancelable: true,\n      detail: {\n        sourceEvent\n      }\n    });\n    this.dispatchEvent(evt);\n    if (!evt.defaultPrevented) {\n      this.opened = false;\n    }\n  }\n\n  /** @private */\n  _detectIosNavbar() {\n    /* c8 ignore next 15 */\n    if (!this.opened) {\n      return;\n    }\n    const innerHeight = window.innerHeight;\n    const innerWidth = window.innerWidth;\n    const landscape = innerWidth > innerHeight;\n    const clientHeight = document.documentElement.clientHeight;\n    if (landscape && clientHeight > innerHeight) {\n      this.style.setProperty('--vaadin-overlay-viewport-bottom', `${clientHeight - innerHeight}px`);\n    } else {\n      this.style.setProperty('--vaadin-overlay-viewport-bottom', '0');\n    }\n  }\n\n  /** @private */\n  _addGlobalListeners() {\n    document.addEventListener('mousedown', this._boundMouseDownListener);\n    document.addEventListener('mouseup', this._boundMouseUpListener);\n    // Firefox leaks click to document on contextmenu even if prevented\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=990614\n    document.documentElement.addEventListener('click', this._boundOutsideClickListener, true);\n  }\n\n  /** @private */\n  _removeGlobalListeners() {\n    document.removeEventListener('mousedown', this._boundMouseDownListener);\n    document.removeEventListener('mouseup', this._boundMouseUpListener);\n    document.documentElement.removeEventListener('click', this._boundOutsideClickListener, true);\n  }\n\n  /** @private */\n  _rendererOrDataChanged(renderer, owner, model, opened) {\n    const ownerOrModelChanged = this._oldOwner !== owner || this._oldModel !== model;\n    this._oldModel = model;\n    this._oldOwner = owner;\n    const rendererChanged = this._oldRenderer !== renderer;\n    this._oldRenderer = renderer;\n    const openedChanged = this._oldOpened !== opened;\n    this._oldOpened = opened;\n    if (rendererChanged) {\n      this.innerHTML = '';\n      // Whenever a Lit-based renderer is used, it assigns a Lit part to the node it was rendered into.\n      // When clearing the rendered content, this part needs to be manually disposed of.\n      // Otherwise, using a Lit-based renderer on the same node will throw an exception or render nothing afterward.\n      delete this._$litPart$;\n    }\n    if (opened && renderer && (rendererChanged || openedChanged || ownerOrModelChanged)) {\n      this.requestContentUpdate();\n    }\n  }\n\n  /** @private */\n  _modelessChanged(modeless) {\n    if (!modeless) {\n      if (this.opened) {\n        this._addGlobalListeners();\n        this._enterModalState();\n      }\n    } else {\n      this._removeGlobalListeners();\n      this._exitModalState();\n    }\n  }\n\n  /** @private */\n  _openedChanged(opened, wasOpened) {\n    if (opened) {\n      this._saveFocus();\n      this._animatedOpening();\n      (0,_polymer_polymer_lib_utils_render_status_js__WEBPACK_IMPORTED_MODULE_0__.afterNextRender)(this, () => {\n        this._trapFocus();\n        const evt = new CustomEvent('vaadin-overlay-open', {\n          bubbles: true\n        });\n        this.dispatchEvent(evt);\n      });\n      document.addEventListener('keydown', this._boundKeydownListener);\n      if (!this.modeless) {\n        this._addGlobalListeners();\n      }\n    } else if (wasOpened) {\n      this._resetFocus();\n      this._animatedClosing();\n      document.removeEventListener('keydown', this._boundKeydownListener);\n      if (!this.modeless) {\n        this._removeGlobalListeners();\n      }\n    }\n  }\n\n  /** @private */\n  _hiddenChanged(hidden) {\n    if (hidden && this.hasAttribute('closing')) {\n      this._flushAnimation('closing');\n    }\n  }\n\n  /**\n   * @return {boolean}\n   * @private\n   */\n  _shouldAnimate() {\n    const style = getComputedStyle(this);\n    const name = style.getPropertyValue('animation-name');\n    const hidden = style.getPropertyValue('display') === 'none';\n    return !hidden && name && name !== 'none';\n  }\n\n  /**\n   * @param {string} type\n   * @param {Function} callback\n   * @private\n   */\n  _enqueueAnimation(type, callback) {\n    const handler = `__${type}Handler`;\n    const listener = event => {\n      if (event && event.target !== this) {\n        return;\n      }\n      callback();\n      this.removeEventListener('animationend', listener);\n      delete this[handler];\n    };\n    this[handler] = listener;\n    this.addEventListener('animationend', listener);\n  }\n\n  /**\n   * @param {string} type\n   * @protected\n   */\n  _flushAnimation(type) {\n    const handler = `__${type}Handler`;\n    if (typeof this[handler] === 'function') {\n      this[handler]();\n    }\n  }\n\n  /** @private */\n  _animatedOpening() {\n    if (this.parentNode === document.body && this.hasAttribute('closing')) {\n      this._flushAnimation('closing');\n    }\n    this._attachOverlay();\n    if (!this.modeless) {\n      this._enterModalState();\n    }\n    this.setAttribute('opening', '');\n    if (this._shouldAnimate()) {\n      this._enqueueAnimation('opening', () => {\n        this._finishOpening();\n      });\n    } else {\n      this._finishOpening();\n    }\n  }\n\n  /** @private */\n  _attachOverlay() {\n    this._placeholder = document.createComment('vaadin-overlay-placeholder');\n    this.parentNode.insertBefore(this._placeholder, this);\n    document.body.appendChild(this);\n    this.bringToFront();\n  }\n\n  /** @private */\n  _finishOpening() {\n    this.removeAttribute('opening');\n  }\n\n  /** @private */\n  _finishClosing() {\n    this._detachOverlay();\n    this.$.overlay.style.removeProperty('pointer-events');\n    this.removeAttribute('closing');\n    this.dispatchEvent(new CustomEvent('vaadin-overlay-closed'));\n  }\n\n  /** @private */\n  _animatedClosing() {\n    if (this.hasAttribute('opening')) {\n      this._flushAnimation('opening');\n    }\n    if (this._placeholder) {\n      this._exitModalState();\n      this.setAttribute('closing', '');\n      this.dispatchEvent(new CustomEvent('vaadin-overlay-closing'));\n      if (this._shouldAnimate()) {\n        this._enqueueAnimation('closing', () => {\n          this._finishClosing();\n        });\n      } else {\n        this._finishClosing();\n      }\n    }\n  }\n\n  /** @private */\n  _detachOverlay() {\n    this._placeholder.parentNode.insertBefore(this, this._placeholder);\n    this._placeholder.parentNode.removeChild(this._placeholder);\n  }\n\n  /** @private */\n  _mouseDownListener(event) {\n    this._mouseDownInside = event.composedPath().indexOf(this.$.overlay) >= 0;\n  }\n\n  /** @private */\n  _mouseUpListener(event) {\n    this._mouseUpInside = event.composedPath().indexOf(this.$.overlay) >= 0;\n  }\n\n  /**\n   * Whether to close the overlay on outside click or not.\n   * Override this method to customize the closing logic.\n   *\n   * @param {Event} _event\n   * @return {boolean}\n   * @protected\n   */\n  _shouldCloseOnOutsideClick(_event) {\n    return this._last;\n  }\n\n  /**\n   * Outside click listener used in capture phase to close the overlay before\n   * propagating the event to the listener on the element that triggered it.\n   * Otherwise, calling `open()` would result in closing and re-opening.\n   *\n   * @private\n   */\n  _outsideClickListener(event) {\n    if (event.composedPath().includes(this.$.overlay) || this._mouseDownInside || this._mouseUpInside) {\n      this._mouseDownInside = false;\n      this._mouseUpInside = false;\n      return;\n    }\n    if (!this._shouldCloseOnOutsideClick(event)) {\n      return;\n    }\n    const evt = new CustomEvent('vaadin-overlay-outside-click', {\n      bubbles: true,\n      cancelable: true,\n      detail: {\n        sourceEvent: event\n      }\n    });\n    this.dispatchEvent(evt);\n    if (this.opened && !evt.defaultPrevented) {\n      this.close(event);\n    }\n  }\n\n  /**\n   * Listener used to close whe overlay on Escape press, if it is the last one.\n   * @private\n   */\n  _keydownListener(event) {\n    if (!this._last) {\n      return;\n    }\n\n    // Only close modeless overlay on Esc press when it contains focus\n    if (this.modeless && !event.composedPath().includes(this.$.overlay)) {\n      return;\n    }\n    if (event.key === 'Escape') {\n      const evt = new CustomEvent('vaadin-overlay-escape-press', {\n        bubbles: true,\n        cancelable: true,\n        detail: {\n          sourceEvent: event\n        }\n      });\n      this.dispatchEvent(evt);\n      if (this.opened && !evt.defaultPrevented) {\n        this.close(event);\n      }\n    }\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9vdmVybGF5L3NyYy92YWFkaW4tb3ZlcmxheS1taXhpbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBRUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2hvbWUtYXNzaXN0YW50LWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0B2YWFkaW4vb3ZlcmxheS9zcmMvdmFhZGluLW92ZXJsYXktbWl4aW4uanM/MTVmNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTcgLSAyMDIzIFZhYWRpbiBMdGQuXG4gKiBUaGlzIHByb2dyYW0gaXMgYXZhaWxhYmxlIHVuZGVyIEFwYWNoZSBMaWNlbnNlIFZlcnNpb24gMi4wLCBhdmFpbGFibGUgYXQgaHR0cHM6Ly92YWFkaW4uY29tL2xpY2Vuc2UvXG4gKi9cbmltcG9ydCB7IGFmdGVyTmV4dFJlbmRlciB9IGZyb20gJ0Bwb2x5bWVyL3BvbHltZXIvbGliL3V0aWxzL3JlbmRlci1zdGF0dXMuanMnO1xuaW1wb3J0IHsgaXNJT1MgfSBmcm9tICdAdmFhZGluL2NvbXBvbmVudC1iYXNlL3NyYy9icm93c2VyLXV0aWxzLmpzJztcbmltcG9ydCB7IE92ZXJsYXlGb2N1c01peGluIH0gZnJvbSAnLi92YWFkaW4tb3ZlcmxheS1mb2N1cy1taXhpbi5qcyc7XG5pbXBvcnQgeyBPdmVybGF5U3RhY2tNaXhpbiB9IGZyb20gJy4vdmFhZGluLW92ZXJsYXktc3RhY2stbWl4aW4uanMnO1xuXG4vKipcbiAqIEBwb2x5bWVyTWl4aW5cbiAqIEBtaXhlcyBPdmVybGF5Rm9jdXNNaXhpblxuICogQG1peGVzIE92ZXJsYXlTdGFja01peGluXG4gKi9cbmV4cG9ydCBjb25zdCBPdmVybGF5TWl4aW4gPSAoc3VwZXJDbGFzcykgPT5cbiAgY2xhc3MgT3ZlcmxheU1peGluIGV4dGVuZHMgT3ZlcmxheUZvY3VzTWl4aW4oT3ZlcmxheVN0YWNrTWl4aW4oc3VwZXJDbGFzcykpIHtcbiAgICBzdGF0aWMgZ2V0IHByb3BlcnRpZXMoKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICAvKipcbiAgICAgICAgICogV2hlbiB0cnVlLCB0aGUgb3ZlcmxheSBpcyB2aXNpYmxlIGFuZCBhdHRhY2hlZCB0byBib2R5LlxuICAgICAgICAgKi9cbiAgICAgICAgb3BlbmVkOiB7XG4gICAgICAgICAgdHlwZTogQm9vbGVhbixcbiAgICAgICAgICBub3RpZnk6IHRydWUsXG4gICAgICAgICAgb2JzZXJ2ZXI6ICdfb3BlbmVkQ2hhbmdlZCcsXG4gICAgICAgICAgcmVmbGVjdFRvQXR0cmlidXRlOiB0cnVlLFxuICAgICAgICB9LFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBPd25lciBlbGVtZW50IHBhc3NlZCB3aXRoIHJlbmRlcmVyIGZ1bmN0aW9uXG4gICAgICAgICAqIEB0eXBlIHtIVE1MRWxlbWVudH1cbiAgICAgICAgICovXG4gICAgICAgIG93bmVyOiB7XG4gICAgICAgICAgdHlwZTogT2JqZWN0LFxuICAgICAgICB9LFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBPYmplY3Qgd2l0aCBwcm9wZXJ0aWVzIHRoYXQgaXMgcGFzc2VkIHRvIGByZW5kZXJlcmAgZnVuY3Rpb25cbiAgICAgICAgICovXG4gICAgICAgIG1vZGVsOiB7XG4gICAgICAgICAgdHlwZTogT2JqZWN0LFxuICAgICAgICB9LFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBDdXN0b20gZnVuY3Rpb24gZm9yIHJlbmRlcmluZyB0aGUgY29udGVudCBvZiB0aGUgb3ZlcmxheS5cbiAgICAgICAgICogUmVjZWl2ZXMgdGhyZWUgYXJndW1lbnRzOlxuICAgICAgICAgKlxuICAgICAgICAgKiAtIGByb290YCBUaGUgcm9vdCBjb250YWluZXIgRE9NIGVsZW1lbnQuIEFwcGVuZCB5b3VyIGNvbnRlbnQgdG8gaXQuXG4gICAgICAgICAqIC0gYG93bmVyYCBUaGUgaG9zdCBlbGVtZW50IG9mIHRoZSByZW5kZXJlciBmdW5jdGlvbi5cbiAgICAgICAgICogLSBgbW9kZWxgIFRoZSBvYmplY3Qgd2l0aCB0aGUgcHJvcGVydGllcyByZWxhdGVkIHdpdGggcmVuZGVyaW5nLlxuICAgICAgICAgKiBAdHlwZSB7T3ZlcmxheVJlbmRlcmVyIHwgbnVsbCB8IHVuZGVmaW5lZH1cbiAgICAgICAgICovXG4gICAgICAgIHJlbmRlcmVyOiB7XG4gICAgICAgICAgdHlwZTogT2JqZWN0LFxuICAgICAgICB9LFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBXaGVuIHRydWUgdGhlIG92ZXJsYXkgd29uJ3QgZGlzYWJsZSB0aGUgbWFpbiBjb250ZW50LCBzaG93aW5nXG4gICAgICAgICAqIGl0IGRvZXNuJ3QgY2hhbmdlIHRoZSBmdW5jdGlvbmFsaXR5IG9mIHRoZSB1c2VyIGludGVyZmFjZS5cbiAgICAgICAgICogQHR5cGUge2Jvb2xlYW59XG4gICAgICAgICAqL1xuICAgICAgICBtb2RlbGVzczoge1xuICAgICAgICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgICAgICAgdmFsdWU6IGZhbHNlLFxuICAgICAgICAgIHJlZmxlY3RUb0F0dHJpYnV0ZTogdHJ1ZSxcbiAgICAgICAgICBvYnNlcnZlcjogJ19tb2RlbGVzc0NoYW5nZWQnLFxuICAgICAgICB9LFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBXaGVuIHNldCB0byB0cnVlLCB0aGUgb3ZlcmxheSBpcyBoaWRkZW4uIFRoaXMgYWxzbyBjbG9zZXMgdGhlIG92ZXJsYXlcbiAgICAgICAgICogaW1tZWRpYXRlbHkgaW4gY2FzZSB0aGVyZSBpcyBhIGNsb3NpbmcgYW5pbWF0aW9uIGluIHByb2dyZXNzLlxuICAgICAgICAgKiBAdHlwZSB7Ym9vbGVhbn1cbiAgICAgICAgICovXG4gICAgICAgIGhpZGRlbjoge1xuICAgICAgICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgICAgICAgcmVmbGVjdFRvQXR0cmlidXRlOiB0cnVlLFxuICAgICAgICAgIG9ic2VydmVyOiAnX2hpZGRlbkNoYW5nZWQnLFxuICAgICAgICB9LFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBXaGVuIHRydWUgdGhlIG92ZXJsYXkgaGFzIGJhY2tkcm9wIG9uIHRvcCBvZiBjb250ZW50IHdoZW4gb3BlbmVkLlxuICAgICAgICAgKiBAdHlwZSB7Ym9vbGVhbn1cbiAgICAgICAgICovXG4gICAgICAgIHdpdGhCYWNrZHJvcDoge1xuICAgICAgICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgICAgICAgdmFsdWU6IGZhbHNlLFxuICAgICAgICAgIHJlZmxlY3RUb0F0dHJpYnV0ZTogdHJ1ZSxcbiAgICAgICAgfSxcbiAgICAgIH07XG4gICAgfVxuXG4gICAgc3RhdGljIGdldCBvYnNlcnZlcnMoKSB7XG4gICAgICByZXR1cm4gWydfcmVuZGVyZXJPckRhdGFDaGFuZ2VkKHJlbmRlcmVyLCBvd25lciwgbW9kZWwsIG9wZW5lZCknXTtcbiAgICB9XG5cbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgIHN1cGVyKCk7XG5cbiAgICAgIHRoaXMuX2JvdW5kTW91c2VEb3duTGlzdGVuZXIgPSB0aGlzLl9tb3VzZURvd25MaXN0ZW5lci5iaW5kKHRoaXMpO1xuICAgICAgdGhpcy5fYm91bmRNb3VzZVVwTGlzdGVuZXIgPSB0aGlzLl9tb3VzZVVwTGlzdGVuZXIuYmluZCh0aGlzKTtcbiAgICAgIHRoaXMuX2JvdW5kT3V0c2lkZUNsaWNrTGlzdGVuZXIgPSB0aGlzLl9vdXRzaWRlQ2xpY2tMaXN0ZW5lci5iaW5kKHRoaXMpO1xuICAgICAgdGhpcy5fYm91bmRLZXlkb3duTGlzdGVuZXIgPSB0aGlzLl9rZXlkb3duTGlzdGVuZXIuYmluZCh0aGlzKTtcblxuICAgICAgLyogYzggaWdub3JlIG5leHQgMyAqL1xuICAgICAgaWYgKGlzSU9TKSB7XG4gICAgICAgIHRoaXMuX2JvdW5kSW9zUmVzaXplTGlzdGVuZXIgPSAoKSA9PiB0aGlzLl9kZXRlY3RJb3NOYXZiYXIoKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvKiogQHByb3RlY3RlZCAqL1xuICAgIHJlYWR5KCkge1xuICAgICAgc3VwZXIucmVhZHkoKTtcblxuICAgICAgLy8gTmVlZCB0byBhZGQgZHVtbXkgY2xpY2sgbGlzdGVuZXJzIHRvIHRoaXMgYW5kIHRoZSBiYWNrZHJvcCBvciBlbHNlXG4gICAgICAvLyB0aGUgZG9jdW1lbnQgY2xpY2sgZXZlbnQgbGlzdGVuZXIgKF9vdXRzaWRlQ2xpY2tMaXN0ZW5lcikgbWF5IG5ldmVyXG4gICAgICAvLyBnZXQgaW52b2tlZCBvbiBpT1MgU2FmYXJpIChyZXByb2R1Y2libGUgaW4gPHZhYWRpbi1kaWFsb2c+XG4gICAgICAvLyBhbmQgPHZhYWRpbi1jb250ZXh0LW1lbnU+KS5cbiAgICAgIHRoaXMuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7fSk7XG4gICAgICB0aGlzLiQuYmFja2Ryb3AuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7fSk7XG5cbiAgICAgIHRoaXMuYWRkRXZlbnRMaXN0ZW5lcignbW91c2V1cCcsICgpID0+IHtcbiAgICAgICAgLy8gSW4gQ2hyb21lLCBmb2N1cyBtb3ZlcyB0byBib2R5IG9uIG92ZXJsYXkgY29udGVudCBtb3VzZWRvd25cbiAgICAgICAgLy8gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS92YWFkaW4vZmxvdy1jb21wb25lbnRzL2lzc3Vlcy81NTA3XG4gICAgICAgIGlmIChkb2N1bWVudC5hY3RpdmVFbGVtZW50ID09PSBkb2N1bWVudC5ib2R5ICYmIHRoaXMuJC5vdmVybGF5LmdldEF0dHJpYnV0ZSgndGFiaW5kZXgnKSA9PT0gJzAnKSB7XG4gICAgICAgICAgdGhpcy4kLm92ZXJsYXkuZm9jdXMoKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgLyoqIEBwcm90ZWN0ZWQgKi9cbiAgICBjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICAgIHN1cGVyLmNvbm5lY3RlZENhbGxiYWNrKCk7XG5cbiAgICAgIC8qIGM4IGlnbm9yZSBuZXh0IDMgKi9cbiAgICAgIGlmICh0aGlzLl9ib3VuZElvc1Jlc2l6ZUxpc3RlbmVyKSB7XG4gICAgICAgIHRoaXMuX2RldGVjdElvc05hdmJhcigpO1xuICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgdGhpcy5fYm91bmRJb3NSZXNpemVMaXN0ZW5lcik7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLyoqIEBwcm90ZWN0ZWQgKi9cbiAgICBkaXNjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICAgIHN1cGVyLmRpc2Nvbm5lY3RlZENhbGxiYWNrKCk7XG5cbiAgICAgIC8qIGM4IGlnbm9yZSBuZXh0IDMgKi9cbiAgICAgIGlmICh0aGlzLl9ib3VuZElvc1Jlc2l6ZUxpc3RlbmVyKSB7XG4gICAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdyZXNpemUnLCB0aGlzLl9ib3VuZElvc1Jlc2l6ZUxpc3RlbmVyKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBSZXF1ZXN0cyBhbiB1cGRhdGUgZm9yIHRoZSBjb250ZW50IG9mIHRoZSBvdmVybGF5LlxuICAgICAqIFdoaWxlIHBlcmZvcm1pbmcgdGhlIHVwZGF0ZSwgaXQgaW52b2tlcyB0aGUgcmVuZGVyZXIgcGFzc2VkIGluIHRoZSBgcmVuZGVyZXJgIHByb3BlcnR5LlxuICAgICAqXG4gICAgICogSXQgaXMgbm90IGd1YXJhbnRlZWQgdGhhdCB0aGUgdXBkYXRlIGhhcHBlbnMgaW1tZWRpYXRlbHkgKHN5bmNocm9ub3VzbHkpIGFmdGVyIGl0IGlzIHJlcXVlc3RlZC5cbiAgICAgKi9cbiAgICByZXF1ZXN0Q29udGVudFVwZGF0ZSgpIHtcbiAgICAgIGlmICh0aGlzLnJlbmRlcmVyKSB7XG4gICAgICAgIHRoaXMucmVuZGVyZXIuY2FsbCh0aGlzLm93bmVyLCB0aGlzLCB0aGlzLm93bmVyLCB0aGlzLm1vZGVsKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBAcGFyYW0ge0V2ZW50PX0gc291cmNlRXZlbnRcbiAgICAgKi9cbiAgICBjbG9zZShzb3VyY2VFdmVudCkge1xuICAgICAgY29uc3QgZXZ0ID0gbmV3IEN1c3RvbUV2ZW50KCd2YWFkaW4tb3ZlcmxheS1jbG9zZScsIHtcbiAgICAgICAgYnViYmxlczogdHJ1ZSxcbiAgICAgICAgY2FuY2VsYWJsZTogdHJ1ZSxcbiAgICAgICAgZGV0YWlsOiB7IHNvdXJjZUV2ZW50IH0sXG4gICAgICB9KTtcbiAgICAgIHRoaXMuZGlzcGF0Y2hFdmVudChldnQpO1xuICAgICAgaWYgKCFldnQuZGVmYXVsdFByZXZlbnRlZCkge1xuICAgICAgICB0aGlzLm9wZW5lZCA9IGZhbHNlO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8qKiBAcHJpdmF0ZSAqL1xuICAgIF9kZXRlY3RJb3NOYXZiYXIoKSB7XG4gICAgICAvKiBjOCBpZ25vcmUgbmV4dCAxNSAqL1xuICAgICAgaWYgKCF0aGlzLm9wZW5lZCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IGlubmVySGVpZ2h0ID0gd2luZG93LmlubmVySGVpZ2h0O1xuICAgICAgY29uc3QgaW5uZXJXaWR0aCA9IHdpbmRvdy5pbm5lcldpZHRoO1xuXG4gICAgICBjb25zdCBsYW5kc2NhcGUgPSBpbm5lcldpZHRoID4gaW5uZXJIZWlnaHQ7XG5cbiAgICAgIGNvbnN0IGNsaWVudEhlaWdodCA9IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRIZWlnaHQ7XG5cbiAgICAgIGlmIChsYW5kc2NhcGUgJiYgY2xpZW50SGVpZ2h0ID4gaW5uZXJIZWlnaHQpIHtcbiAgICAgICAgdGhpcy5zdHlsZS5zZXRQcm9wZXJ0eSgnLS12YWFkaW4tb3ZlcmxheS12aWV3cG9ydC1ib3R0b20nLCBgJHtjbGllbnRIZWlnaHQgLSBpbm5lckhlaWdodH1weGApO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5zdHlsZS5zZXRQcm9wZXJ0eSgnLS12YWFkaW4tb3ZlcmxheS12aWV3cG9ydC1ib3R0b20nLCAnMCcpO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8qKiBAcHJpdmF0ZSAqL1xuICAgIF9hZGRHbG9iYWxMaXN0ZW5lcnMoKSB7XG4gICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWRvd24nLCB0aGlzLl9ib3VuZE1vdXNlRG93bkxpc3RlbmVyKTtcbiAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNldXAnLCB0aGlzLl9ib3VuZE1vdXNlVXBMaXN0ZW5lcik7XG4gICAgICAvLyBGaXJlZm94IGxlYWtzIGNsaWNrIHRvIGRvY3VtZW50IG9uIGNvbnRleHRtZW51IGV2ZW4gaWYgcHJldmVudGVkXG4gICAgICAvLyBodHRwczovL2J1Z3ppbGxhLm1vemlsbGEub3JnL3Nob3dfYnVnLmNnaT9pZD05OTA2MTRcbiAgICAgIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuX2JvdW5kT3V0c2lkZUNsaWNrTGlzdGVuZXIsIHRydWUpO1xuICAgIH1cblxuICAgIC8qKiBAcHJpdmF0ZSAqL1xuICAgIF9yZW1vdmVHbG9iYWxMaXN0ZW5lcnMoKSB7XG4gICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZWRvd24nLCB0aGlzLl9ib3VuZE1vdXNlRG93bkxpc3RlbmVyKTtcbiAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNldXAnLCB0aGlzLl9ib3VuZE1vdXNlVXBMaXN0ZW5lcik7XG4gICAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLl9ib3VuZE91dHNpZGVDbGlja0xpc3RlbmVyLCB0cnVlKTtcbiAgICB9XG5cbiAgICAvKiogQHByaXZhdGUgKi9cbiAgICBfcmVuZGVyZXJPckRhdGFDaGFuZ2VkKHJlbmRlcmVyLCBvd25lciwgbW9kZWwsIG9wZW5lZCkge1xuICAgICAgY29uc3Qgb3duZXJPck1vZGVsQ2hhbmdlZCA9IHRoaXMuX29sZE93bmVyICE9PSBvd25lciB8fCB0aGlzLl9vbGRNb2RlbCAhPT0gbW9kZWw7XG4gICAgICB0aGlzLl9vbGRNb2RlbCA9IG1vZGVsO1xuICAgICAgdGhpcy5fb2xkT3duZXIgPSBvd25lcjtcblxuICAgICAgY29uc3QgcmVuZGVyZXJDaGFuZ2VkID0gdGhpcy5fb2xkUmVuZGVyZXIgIT09IHJlbmRlcmVyO1xuICAgICAgdGhpcy5fb2xkUmVuZGVyZXIgPSByZW5kZXJlcjtcblxuICAgICAgY29uc3Qgb3BlbmVkQ2hhbmdlZCA9IHRoaXMuX29sZE9wZW5lZCAhPT0gb3BlbmVkO1xuICAgICAgdGhpcy5fb2xkT3BlbmVkID0gb3BlbmVkO1xuXG4gICAgICBpZiAocmVuZGVyZXJDaGFuZ2VkKSB7XG4gICAgICAgIHRoaXMuaW5uZXJIVE1MID0gJyc7XG4gICAgICAgIC8vIFdoZW5ldmVyIGEgTGl0LWJhc2VkIHJlbmRlcmVyIGlzIHVzZWQsIGl0IGFzc2lnbnMgYSBMaXQgcGFydCB0byB0aGUgbm9kZSBpdCB3YXMgcmVuZGVyZWQgaW50by5cbiAgICAgICAgLy8gV2hlbiBjbGVhcmluZyB0aGUgcmVuZGVyZWQgY29udGVudCwgdGhpcyBwYXJ0IG5lZWRzIHRvIGJlIG1hbnVhbGx5IGRpc3Bvc2VkIG9mLlxuICAgICAgICAvLyBPdGhlcndpc2UsIHVzaW5nIGEgTGl0LWJhc2VkIHJlbmRlcmVyIG9uIHRoZSBzYW1lIG5vZGUgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gb3IgcmVuZGVyIG5vdGhpbmcgYWZ0ZXJ3YXJkLlxuICAgICAgICBkZWxldGUgdGhpcy5fJGxpdFBhcnQkO1xuICAgICAgfVxuXG4gICAgICBpZiAob3BlbmVkICYmIHJlbmRlcmVyICYmIChyZW5kZXJlckNoYW5nZWQgfHwgb3BlbmVkQ2hhbmdlZCB8fCBvd25lck9yTW9kZWxDaGFuZ2VkKSkge1xuICAgICAgICB0aGlzLnJlcXVlc3RDb250ZW50VXBkYXRlKCk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLyoqIEBwcml2YXRlICovXG4gICAgX21vZGVsZXNzQ2hhbmdlZChtb2RlbGVzcykge1xuICAgICAgaWYgKCFtb2RlbGVzcykge1xuICAgICAgICBpZiAodGhpcy5vcGVuZWQpIHtcbiAgICAgICAgICB0aGlzLl9hZGRHbG9iYWxMaXN0ZW5lcnMoKTtcbiAgICAgICAgICB0aGlzLl9lbnRlck1vZGFsU3RhdGUoKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5fcmVtb3ZlR2xvYmFsTGlzdGVuZXJzKCk7XG4gICAgICAgIHRoaXMuX2V4aXRNb2RhbFN0YXRlKCk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLyoqIEBwcml2YXRlICovXG4gICAgX29wZW5lZENoYW5nZWQob3BlbmVkLCB3YXNPcGVuZWQpIHtcbiAgICAgIGlmIChvcGVuZWQpIHtcbiAgICAgICAgdGhpcy5fc2F2ZUZvY3VzKCk7XG5cbiAgICAgICAgdGhpcy5fYW5pbWF0ZWRPcGVuaW5nKCk7XG5cbiAgICAgICAgYWZ0ZXJOZXh0UmVuZGVyKHRoaXMsICgpID0+IHtcbiAgICAgICAgICB0aGlzLl90cmFwRm9jdXMoKTtcblxuICAgICAgICAgIGNvbnN0IGV2dCA9IG5ldyBDdXN0b21FdmVudCgndmFhZGluLW92ZXJsYXktb3BlbicsIHsgYnViYmxlczogdHJ1ZSB9KTtcbiAgICAgICAgICB0aGlzLmRpc3BhdGNoRXZlbnQoZXZ0KTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHRoaXMuX2JvdW5kS2V5ZG93bkxpc3RlbmVyKTtcblxuICAgICAgICBpZiAoIXRoaXMubW9kZWxlc3MpIHtcbiAgICAgICAgICB0aGlzLl9hZGRHbG9iYWxMaXN0ZW5lcnMoKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmICh3YXNPcGVuZWQpIHtcbiAgICAgICAgdGhpcy5fcmVzZXRGb2N1cygpO1xuXG4gICAgICAgIHRoaXMuX2FuaW1hdGVkQ2xvc2luZygpO1xuXG4gICAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0aGlzLl9ib3VuZEtleWRvd25MaXN0ZW5lcik7XG5cbiAgICAgICAgaWYgKCF0aGlzLm1vZGVsZXNzKSB7XG4gICAgICAgICAgdGhpcy5fcmVtb3ZlR2xvYmFsTGlzdGVuZXJzKCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAvKiogQHByaXZhdGUgKi9cbiAgICBfaGlkZGVuQ2hhbmdlZChoaWRkZW4pIHtcbiAgICAgIGlmIChoaWRkZW4gJiYgdGhpcy5oYXNBdHRyaWJ1dGUoJ2Nsb3NpbmcnKSkge1xuICAgICAgICB0aGlzLl9mbHVzaEFuaW1hdGlvbignY2xvc2luZycpO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEByZXR1cm4ge2Jvb2xlYW59XG4gICAgICogQHByaXZhdGVcbiAgICAgKi9cbiAgICBfc2hvdWxkQW5pbWF0ZSgpIHtcbiAgICAgIGNvbnN0IHN0eWxlID0gZ2V0Q29tcHV0ZWRTdHlsZSh0aGlzKTtcbiAgICAgIGNvbnN0IG5hbWUgPSBzdHlsZS5nZXRQcm9wZXJ0eVZhbHVlKCdhbmltYXRpb24tbmFtZScpO1xuICAgICAgY29uc3QgaGlkZGVuID0gc3R5bGUuZ2V0UHJvcGVydHlWYWx1ZSgnZGlzcGxheScpID09PSAnbm9uZSc7XG4gICAgICByZXR1cm4gIWhpZGRlbiAmJiBuYW1lICYmIG5hbWUgIT09ICdub25lJztcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gdHlwZVxuICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrXG4gICAgICogQHByaXZhdGVcbiAgICAgKi9cbiAgICBfZW5xdWV1ZUFuaW1hdGlvbih0eXBlLCBjYWxsYmFjaykge1xuICAgICAgY29uc3QgaGFuZGxlciA9IGBfXyR7dHlwZX1IYW5kbGVyYDtcbiAgICAgIGNvbnN0IGxpc3RlbmVyID0gKGV2ZW50KSA9PiB7XG4gICAgICAgIGlmIChldmVudCAmJiBldmVudC50YXJnZXQgIT09IHRoaXMpIHtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgY2FsbGJhY2soKTtcbiAgICAgICAgdGhpcy5yZW1vdmVFdmVudExpc3RlbmVyKCdhbmltYXRpb25lbmQnLCBsaXN0ZW5lcik7XG4gICAgICAgIGRlbGV0ZSB0aGlzW2hhbmRsZXJdO1xuICAgICAgfTtcbiAgICAgIHRoaXNbaGFuZGxlcl0gPSBsaXN0ZW5lcjtcbiAgICAgIHRoaXMuYWRkRXZlbnRMaXN0ZW5lcignYW5pbWF0aW9uZW5kJywgbGlzdGVuZXIpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSB0eXBlXG4gICAgICogQHByb3RlY3RlZFxuICAgICAqL1xuICAgIF9mbHVzaEFuaW1hdGlvbih0eXBlKSB7XG4gICAgICBjb25zdCBoYW5kbGVyID0gYF9fJHt0eXBlfUhhbmRsZXJgO1xuICAgICAgaWYgKHR5cGVvZiB0aGlzW2hhbmRsZXJdID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHRoaXNbaGFuZGxlcl0oKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvKiogQHByaXZhdGUgKi9cbiAgICBfYW5pbWF0ZWRPcGVuaW5nKCkge1xuICAgICAgaWYgKHRoaXMucGFyZW50Tm9kZSA9PT0gZG9jdW1lbnQuYm9keSAmJiB0aGlzLmhhc0F0dHJpYnV0ZSgnY2xvc2luZycpKSB7XG4gICAgICAgIHRoaXMuX2ZsdXNoQW5pbWF0aW9uKCdjbG9zaW5nJyk7XG4gICAgICB9XG4gICAgICB0aGlzLl9hdHRhY2hPdmVybGF5KCk7XG4gICAgICBpZiAoIXRoaXMubW9kZWxlc3MpIHtcbiAgICAgICAgdGhpcy5fZW50ZXJNb2RhbFN0YXRlKCk7XG4gICAgICB9XG4gICAgICB0aGlzLnNldEF0dHJpYnV0ZSgnb3BlbmluZycsICcnKTtcblxuICAgICAgaWYgKHRoaXMuX3Nob3VsZEFuaW1hdGUoKSkge1xuICAgICAgICB0aGlzLl9lbnF1ZXVlQW5pbWF0aW9uKCdvcGVuaW5nJywgKCkgPT4ge1xuICAgICAgICAgIHRoaXMuX2ZpbmlzaE9wZW5pbmcoKTtcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLl9maW5pc2hPcGVuaW5nKCk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLyoqIEBwcml2YXRlICovXG4gICAgX2F0dGFjaE92ZXJsYXkoKSB7XG4gICAgICB0aGlzLl9wbGFjZWhvbGRlciA9IGRvY3VtZW50LmNyZWF0ZUNvbW1lbnQoJ3ZhYWRpbi1vdmVybGF5LXBsYWNlaG9sZGVyJyk7XG4gICAgICB0aGlzLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHRoaXMuX3BsYWNlaG9sZGVyLCB0aGlzKTtcbiAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQodGhpcyk7XG4gICAgICB0aGlzLmJyaW5nVG9Gcm9udCgpO1xuICAgIH1cblxuICAgIC8qKiBAcHJpdmF0ZSAqL1xuICAgIF9maW5pc2hPcGVuaW5nKCkge1xuICAgICAgdGhpcy5yZW1vdmVBdHRyaWJ1dGUoJ29wZW5pbmcnKTtcbiAgICB9XG5cbiAgICAvKiogQHByaXZhdGUgKi9cbiAgICBfZmluaXNoQ2xvc2luZygpIHtcbiAgICAgIHRoaXMuX2RldGFjaE92ZXJsYXkoKTtcbiAgICAgIHRoaXMuJC5vdmVybGF5LnN0eWxlLnJlbW92ZVByb3BlcnR5KCdwb2ludGVyLWV2ZW50cycpO1xuICAgICAgdGhpcy5yZW1vdmVBdHRyaWJ1dGUoJ2Nsb3NpbmcnKTtcbiAgICAgIHRoaXMuZGlzcGF0Y2hFdmVudChuZXcgQ3VzdG9tRXZlbnQoJ3ZhYWRpbi1vdmVybGF5LWNsb3NlZCcpKTtcbiAgICB9XG5cbiAgICAvKiogQHByaXZhdGUgKi9cbiAgICBfYW5pbWF0ZWRDbG9zaW5nKCkge1xuICAgICAgaWYgKHRoaXMuaGFzQXR0cmlidXRlKCdvcGVuaW5nJykpIHtcbiAgICAgICAgdGhpcy5fZmx1c2hBbmltYXRpb24oJ29wZW5pbmcnKTtcbiAgICAgIH1cbiAgICAgIGlmICh0aGlzLl9wbGFjZWhvbGRlcikge1xuICAgICAgICB0aGlzLl9leGl0TW9kYWxTdGF0ZSgpO1xuICAgICAgICB0aGlzLnNldEF0dHJpYnV0ZSgnY2xvc2luZycsICcnKTtcbiAgICAgICAgdGhpcy5kaXNwYXRjaEV2ZW50KG5ldyBDdXN0b21FdmVudCgndmFhZGluLW92ZXJsYXktY2xvc2luZycpKTtcblxuICAgICAgICBpZiAodGhpcy5fc2hvdWxkQW5pbWF0ZSgpKSB7XG4gICAgICAgICAgdGhpcy5fZW5xdWV1ZUFuaW1hdGlvbignY2xvc2luZycsICgpID0+IHtcbiAgICAgICAgICAgIHRoaXMuX2ZpbmlzaENsb3NpbmcoKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aGlzLl9maW5pc2hDbG9zaW5nKCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAvKiogQHByaXZhdGUgKi9cbiAgICBfZGV0YWNoT3ZlcmxheSgpIHtcbiAgICAgIHRoaXMuX3BsYWNlaG9sZGVyLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHRoaXMsIHRoaXMuX3BsYWNlaG9sZGVyKTtcbiAgICAgIHRoaXMuX3BsYWNlaG9sZGVyLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQodGhpcy5fcGxhY2Vob2xkZXIpO1xuICAgIH1cblxuICAgIC8qKiBAcHJpdmF0ZSAqL1xuICAgIF9tb3VzZURvd25MaXN0ZW5lcihldmVudCkge1xuICAgICAgdGhpcy5fbW91c2VEb3duSW5zaWRlID0gZXZlbnQuY29tcG9zZWRQYXRoKCkuaW5kZXhPZih0aGlzLiQub3ZlcmxheSkgPj0gMDtcbiAgICB9XG5cbiAgICAvKiogQHByaXZhdGUgKi9cbiAgICBfbW91c2VVcExpc3RlbmVyKGV2ZW50KSB7XG4gICAgICB0aGlzLl9tb3VzZVVwSW5zaWRlID0gZXZlbnQuY29tcG9zZWRQYXRoKCkuaW5kZXhPZih0aGlzLiQub3ZlcmxheSkgPj0gMDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBXaGV0aGVyIHRvIGNsb3NlIHRoZSBvdmVybGF5IG9uIG91dHNpZGUgY2xpY2sgb3Igbm90LlxuICAgICAqIE92ZXJyaWRlIHRoaXMgbWV0aG9kIHRvIGN1c3RvbWl6ZSB0aGUgY2xvc2luZyBsb2dpYy5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB7RXZlbnR9IF9ldmVudFxuICAgICAqIEByZXR1cm4ge2Jvb2xlYW59XG4gICAgICogQHByb3RlY3RlZFxuICAgICAqL1xuICAgIF9zaG91bGRDbG9zZU9uT3V0c2lkZUNsaWNrKF9ldmVudCkge1xuICAgICAgcmV0dXJuIHRoaXMuX2xhc3Q7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogT3V0c2lkZSBjbGljayBsaXN0ZW5lciB1c2VkIGluIGNhcHR1cmUgcGhhc2UgdG8gY2xvc2UgdGhlIG92ZXJsYXkgYmVmb3JlXG4gICAgICogcHJvcGFnYXRpbmcgdGhlIGV2ZW50IHRvIHRoZSBsaXN0ZW5lciBvbiB0aGUgZWxlbWVudCB0aGF0IHRyaWdnZXJlZCBpdC5cbiAgICAgKiBPdGhlcndpc2UsIGNhbGxpbmcgYG9wZW4oKWAgd291bGQgcmVzdWx0IGluIGNsb3NpbmcgYW5kIHJlLW9wZW5pbmcuXG4gICAgICpcbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqL1xuICAgIF9vdXRzaWRlQ2xpY2tMaXN0ZW5lcihldmVudCkge1xuICAgICAgaWYgKGV2ZW50LmNvbXBvc2VkUGF0aCgpLmluY2x1ZGVzKHRoaXMuJC5vdmVybGF5KSB8fCB0aGlzLl9tb3VzZURvd25JbnNpZGUgfHwgdGhpcy5fbW91c2VVcEluc2lkZSkge1xuICAgICAgICB0aGlzLl9tb3VzZURvd25JbnNpZGUgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5fbW91c2VVcEluc2lkZSA9IGZhbHNlO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmICghdGhpcy5fc2hvdWxkQ2xvc2VPbk91dHNpZGVDbGljayhldmVudCkpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBjb25zdCBldnQgPSBuZXcgQ3VzdG9tRXZlbnQoJ3ZhYWRpbi1vdmVybGF5LW91dHNpZGUtY2xpY2snLCB7XG4gICAgICAgIGJ1YmJsZXM6IHRydWUsXG4gICAgICAgIGNhbmNlbGFibGU6IHRydWUsXG4gICAgICAgIGRldGFpbDogeyBzb3VyY2VFdmVudDogZXZlbnQgfSxcbiAgICAgIH0pO1xuICAgICAgdGhpcy5kaXNwYXRjaEV2ZW50KGV2dCk7XG5cbiAgICAgIGlmICh0aGlzLm9wZW5lZCAmJiAhZXZ0LmRlZmF1bHRQcmV2ZW50ZWQpIHtcbiAgICAgICAgdGhpcy5jbG9zZShldmVudCk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogTGlzdGVuZXIgdXNlZCB0byBjbG9zZSB3aGUgb3ZlcmxheSBvbiBFc2NhcGUgcHJlc3MsIGlmIGl0IGlzIHRoZSBsYXN0IG9uZS5cbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqL1xuICAgIF9rZXlkb3duTGlzdGVuZXIoZXZlbnQpIHtcbiAgICAgIGlmICghdGhpcy5fbGFzdCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIC8vIE9ubHkgY2xvc2UgbW9kZWxlc3Mgb3ZlcmxheSBvbiBFc2MgcHJlc3Mgd2hlbiBpdCBjb250YWlucyBmb2N1c1xuICAgICAgaWYgKHRoaXMubW9kZWxlc3MgJiYgIWV2ZW50LmNvbXBvc2VkUGF0aCgpLmluY2x1ZGVzKHRoaXMuJC5vdmVybGF5KSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmIChldmVudC5rZXkgPT09ICdFc2NhcGUnKSB7XG4gICAgICAgIGNvbnN0IGV2dCA9IG5ldyBDdXN0b21FdmVudCgndmFhZGluLW92ZXJsYXktZXNjYXBlLXByZXNzJywge1xuICAgICAgICAgIGJ1YmJsZXM6IHRydWUsXG4gICAgICAgICAgY2FuY2VsYWJsZTogdHJ1ZSxcbiAgICAgICAgICBkZXRhaWw6IHsgc291cmNlRXZlbnQ6IGV2ZW50IH0sXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLmRpc3BhdGNoRXZlbnQoZXZ0KTtcblxuICAgICAgICBpZiAodGhpcy5vcGVuZWQgJiYgIWV2dC5kZWZhdWx0UHJldmVudGVkKSB7XG4gICAgICAgICAgdGhpcy5jbG9zZShldmVudCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/overlay/src/vaadin-overlay-mixin.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/overlay/src/vaadin-overlay-position-mixin.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@vaadin/overlay/src/vaadin-overlay-position-mixin.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PositionMixin: () => (/* binding */ PositionMixin)\n/* harmony export */ });\n/* harmony import */ var _vaadin_component_base_src_dom_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @vaadin/component-base/src/dom-utils.js */ \"./node_modules/@vaadin/component-base/src/dom-utils.js\");\n/**\n * @license\n * Copyright (c) 2017 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\nconst PROP_NAMES_VERTICAL = {\n  start: 'top',\n  end: 'bottom'\n};\nconst PROP_NAMES_HORIZONTAL = {\n  start: 'left',\n  end: 'right'\n};\nconst targetResizeObserver = new ResizeObserver(entries => {\n  setTimeout(() => {\n    entries.forEach(entry => {\n      if (entry.target.__overlay) {\n        entry.target.__overlay._updatePosition();\n      }\n    });\n  });\n});\n\n/**\n * @polymerMixin\n */\nconst PositionMixin = superClass => class PositionMixin extends superClass {\n  static get properties() {\n    return {\n      /**\n       * The element next to which this overlay should be aligned.\n       * The position of the overlay relative to the positionTarget can be adjusted\n       * with properties `horizontalAlign`, `verticalAlign`, `noHorizontalOverlap`\n       * and `noVerticalOverlap`.\n       */\n      positionTarget: {\n        type: Object,\n        value: null,\n        sync: true\n      },\n      /**\n       * When `positionTarget` is set, this property defines whether to align the overlay's\n       * left or right side to the target element by default.\n       * Possible values are `start` and `end`.\n       * RTL is taken into account when interpreting the value.\n       * The overlay is automatically flipped to the opposite side when it doesn't fit into\n       * the default side defined by this property.\n       *\n       * @attr {start|end} horizontal-align\n       */\n      horizontalAlign: {\n        type: String,\n        value: 'start',\n        sync: true\n      },\n      /**\n       * When `positionTarget` is set, this property defines whether to align the overlay's\n       * top or bottom side to the target element by default.\n       * Possible values are `top` and `bottom`.\n       * The overlay is automatically flipped to the opposite side when it doesn't fit into\n       * the default side defined by this property.\n       *\n       * @attr {top|bottom} vertical-align\n       */\n      verticalAlign: {\n        type: String,\n        value: 'top',\n        sync: true\n      },\n      /**\n       * When `positionTarget` is set, this property defines whether the overlay should overlap\n       * the target element in the x-axis, or be positioned right next to it.\n       *\n       * @attr {boolean} no-horizontal-overlap\n       */\n      noHorizontalOverlap: {\n        type: Boolean,\n        value: false,\n        sync: true\n      },\n      /**\n       * When `positionTarget` is set, this property defines whether the overlay should overlap\n       * the target element in the y-axis, or be positioned right above/below it.\n       *\n       * @attr {boolean} no-vertical-overlap\n       */\n      noVerticalOverlap: {\n        type: Boolean,\n        value: false,\n        sync: true\n      },\n      /**\n       * If the overlay content has no intrinsic height, this property can be used to set\n       * the minimum vertical space (in pixels) required by the overlay. Setting a value to\n       * the property effectively disables the content measurement in favor of using this\n       * fixed value for determining the open direction.\n       *\n       * @attr {number} required-vertical-space\n       */\n      requiredVerticalSpace: {\n        type: Number,\n        value: 0,\n        sync: true\n      }\n    };\n  }\n  static get observers() {\n    return ['__positionSettingsChanged(horizontalAlign, verticalAlign, noHorizontalOverlap, noVerticalOverlap, requiredVerticalSpace)', '__overlayOpenedChanged(opened, positionTarget)'];\n  }\n  constructor() {\n    super();\n    this.__onScroll = this.__onScroll.bind(this);\n    this._updatePosition = this._updatePosition.bind(this);\n  }\n\n  /** @protected */\n  connectedCallback() {\n    super.connectedCallback();\n    if (this.opened) {\n      this.__addUpdatePositionEventListeners();\n    }\n  }\n\n  /** @protected */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.__removeUpdatePositionEventListeners();\n  }\n\n  /** @private */\n  __addUpdatePositionEventListeners() {\n    window.addEventListener('resize', this._updatePosition);\n    this.__positionTargetAncestorRootNodes = (0,_vaadin_component_base_src_dom_utils_js__WEBPACK_IMPORTED_MODULE_0__.getAncestorRootNodes)(this.positionTarget);\n    this.__positionTargetAncestorRootNodes.forEach(node => {\n      node.addEventListener('scroll', this.__onScroll, true);\n    });\n  }\n\n  /** @private */\n  __removeUpdatePositionEventListeners() {\n    window.removeEventListener('resize', this._updatePosition);\n    if (this.__positionTargetAncestorRootNodes) {\n      this.__positionTargetAncestorRootNodes.forEach(node => {\n        node.removeEventListener('scroll', this.__onScroll, true);\n      });\n      this.__positionTargetAncestorRootNodes = null;\n    }\n  }\n\n  /** @private */\n  __overlayOpenedChanged(opened, positionTarget) {\n    this.__removeUpdatePositionEventListeners();\n    if (positionTarget) {\n      positionTarget.__overlay = null;\n      targetResizeObserver.unobserve(positionTarget);\n      if (opened) {\n        this.__addUpdatePositionEventListeners();\n        positionTarget.__overlay = this;\n        targetResizeObserver.observe(positionTarget);\n      }\n    }\n    if (opened) {\n      const computedStyle = getComputedStyle(this);\n      if (!this.__margins) {\n        this.__margins = {};\n        ['top', 'bottom', 'left', 'right'].forEach(propName => {\n          this.__margins[propName] = parseInt(computedStyle[propName], 10);\n        });\n      }\n      this.setAttribute('dir', computedStyle.direction);\n      this._updatePosition();\n      // Schedule another position update (to cover virtual keyboard opening for example)\n      requestAnimationFrame(() => this._updatePosition());\n    }\n  }\n  __positionSettingsChanged() {\n    this._updatePosition();\n  }\n\n  /** @private */\n  __onScroll(e) {\n    // If the scroll event occurred inside the overlay, ignore it.\n    if (!this.contains(e.target)) {\n      this._updatePosition();\n    }\n  }\n  _updatePosition() {\n    if (!this.positionTarget || !this.opened) {\n      return;\n    }\n    const targetRect = this.positionTarget.getBoundingClientRect();\n\n    // Detect the desired alignment and update the layout accordingly\n    const shouldAlignStartVertically = this.__shouldAlignStartVertically(targetRect);\n    this.style.justifyContent = shouldAlignStartVertically ? 'flex-start' : 'flex-end';\n    const isRTL = this.__isRTL;\n    const shouldAlignStartHorizontally = this.__shouldAlignStartHorizontally(targetRect, isRTL);\n    const flexStart = !isRTL && shouldAlignStartHorizontally || isRTL && !shouldAlignStartHorizontally;\n    this.style.alignItems = flexStart ? 'flex-start' : 'flex-end';\n\n    // Get the overlay rect after possible overlay alignment changes\n    const overlayRect = this.getBoundingClientRect();\n\n    // Obtain vertical positioning properties\n    const verticalProps = this.__calculatePositionInOneDimension(targetRect, overlayRect, this.noVerticalOverlap, PROP_NAMES_VERTICAL, this, shouldAlignStartVertically);\n\n    // Obtain horizontal positioning properties\n    const horizontalProps = this.__calculatePositionInOneDimension(targetRect, overlayRect, this.noHorizontalOverlap, PROP_NAMES_HORIZONTAL, this, shouldAlignStartHorizontally);\n\n    // Apply the positioning properties to the overlay\n    Object.assign(this.style, verticalProps, horizontalProps);\n    this.toggleAttribute('bottom-aligned', !shouldAlignStartVertically);\n    this.toggleAttribute('top-aligned', shouldAlignStartVertically);\n    this.toggleAttribute('end-aligned', !flexStart);\n    this.toggleAttribute('start-aligned', flexStart);\n  }\n  __shouldAlignStartHorizontally(targetRect, rtl) {\n    // Using previous size to fix a case where window resize may cause the overlay to be squeezed\n    // smaller than its current space before the fit-calculations.\n    const contentWidth = Math.max(this.__oldContentWidth || 0, this.$.overlay.offsetWidth);\n    this.__oldContentWidth = this.$.overlay.offsetWidth;\n    const viewportWidth = Math.min(window.innerWidth, document.documentElement.clientWidth);\n    const defaultAlignLeft = !rtl && this.horizontalAlign === 'start' || rtl && this.horizontalAlign === 'end';\n    return this.__shouldAlignStart(targetRect, contentWidth, viewportWidth, this.__margins, defaultAlignLeft, this.noHorizontalOverlap, PROP_NAMES_HORIZONTAL);\n  }\n  __shouldAlignStartVertically(targetRect) {\n    // Using previous size to fix a case where window resize may cause the overlay to be squeezed\n    // smaller than its current space before the fit-calculations.\n    const contentHeight = this.requiredVerticalSpace || Math.max(this.__oldContentHeight || 0, this.$.overlay.offsetHeight);\n    this.__oldContentHeight = this.$.overlay.offsetHeight;\n    const viewportHeight = Math.min(window.innerHeight, document.documentElement.clientHeight);\n    const defaultAlignTop = this.verticalAlign === 'top';\n    return this.__shouldAlignStart(targetRect, contentHeight, viewportHeight, this.__margins, defaultAlignTop, this.noVerticalOverlap, PROP_NAMES_VERTICAL);\n  }\n\n  // eslint-disable-next-line max-params\n  __shouldAlignStart(targetRect, contentSize, viewportSize, margins, defaultAlignStart, noOverlap, propNames) {\n    const spaceForStartAlignment = viewportSize - targetRect[noOverlap ? propNames.end : propNames.start] - margins[propNames.end];\n    const spaceForEndAlignment = targetRect[noOverlap ? propNames.start : propNames.end] - margins[propNames.start];\n    const spaceForDefaultAlignment = defaultAlignStart ? spaceForStartAlignment : spaceForEndAlignment;\n    const spaceForOtherAlignment = defaultAlignStart ? spaceForEndAlignment : spaceForStartAlignment;\n    const shouldGoToDefaultSide = spaceForDefaultAlignment > spaceForOtherAlignment || spaceForDefaultAlignment > contentSize;\n    return defaultAlignStart === shouldGoToDefaultSide;\n  }\n\n  /**\n   * Returns an adjusted value after resizing the browser window,\n   * to avoid wrong calculations when e.g. previously set `bottom`\n   * CSS property value is larger than the updated viewport height.\n   * See https://github.com/vaadin/web-components/issues/4604\n   */\n  __adjustBottomProperty(cssPropNameToSet, propNames, currentValue) {\n    let adjustedProp;\n    if (cssPropNameToSet === propNames.end) {\n      // Adjust horizontally\n      if (propNames.end === PROP_NAMES_VERTICAL.end) {\n        const viewportHeight = Math.min(window.innerHeight, document.documentElement.clientHeight);\n        if (currentValue > viewportHeight && this.__oldViewportHeight) {\n          const heightDiff = this.__oldViewportHeight - viewportHeight;\n          adjustedProp = currentValue - heightDiff;\n        }\n        this.__oldViewportHeight = viewportHeight;\n      }\n\n      // Adjust vertically\n      if (propNames.end === PROP_NAMES_HORIZONTAL.end) {\n        const viewportWidth = Math.min(window.innerWidth, document.documentElement.clientWidth);\n        if (currentValue > viewportWidth && this.__oldViewportWidth) {\n          const widthDiff = this.__oldViewportWidth - viewportWidth;\n          adjustedProp = currentValue - widthDiff;\n        }\n        this.__oldViewportWidth = viewportWidth;\n      }\n    }\n    return adjustedProp;\n  }\n\n  /**\n   * Returns an object with CSS position properties to set,\n   * e.g. { top: \"100px\" }\n   */\n  // eslint-disable-next-line max-params\n  __calculatePositionInOneDimension(targetRect, overlayRect, noOverlap, propNames, overlay, shouldAlignStart) {\n    const cssPropNameToSet = shouldAlignStart ? propNames.start : propNames.end;\n    const cssPropNameToClear = shouldAlignStart ? propNames.end : propNames.start;\n    const currentValue = parseFloat(overlay.style[cssPropNameToSet] || getComputedStyle(overlay)[cssPropNameToSet]);\n    const adjustedValue = this.__adjustBottomProperty(cssPropNameToSet, propNames, currentValue);\n    const diff = overlayRect[shouldAlignStart ? propNames.start : propNames.end] - targetRect[noOverlap === shouldAlignStart ? propNames.end : propNames.start];\n    const valueToSet = adjustedValue ? `${adjustedValue}px` : `${currentValue + diff * (shouldAlignStart ? -1 : 1)}px`;\n    return {\n      [cssPropNameToSet]: valueToSet,\n      [cssPropNameToClear]: ''\n    };\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/overlay/src/vaadin-overlay-position-mixin.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/overlay/src/vaadin-overlay-stack-mixin.js":
/*!************************************************************************!*\
  !*** ./node_modules/@vaadin/overlay/src/vaadin-overlay-stack-mixin.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OverlayStackMixin: () => (/* binding */ OverlayStackMixin),\n/* harmony export */   isLastOverlay: () => (/* binding */ isLastOverlay)\n/* harmony export */ });\n/**\n * @license\n * Copyright (c) 2017 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * Returns all attached overlays in visual stacking order.\n * @private\n */\nconst getAttachedInstances = () => Array.from(document.body.children).filter(el => el instanceof HTMLElement && el._hasOverlayStackMixin && !el.hasAttribute('closing')).sort((a, b) => a.__zIndex - b.__zIndex || 0);\n\n/**\n * Returns true if the overlay is the last one in the opened overlays stack.\n * @param {HTMLElement} overlay\n * @return {boolean}\n * @protected\n */\nconst isLastOverlay = overlay => overlay === getAttachedInstances().pop();\n\n/**\n * @polymerMixin\n */\nconst OverlayStackMixin = superClass => class OverlayStackMixin extends superClass {\n  constructor() {\n    super();\n    this._hasOverlayStackMixin = true;\n  }\n\n  /**\n   * Returns true if this is the last one in the opened overlays stack.\n   *\n   * @return {boolean}\n   * @protected\n   */\n  get _last() {\n    return isLastOverlay(this);\n  }\n\n  /**\n   * Brings the overlay as visually the frontmost one.\n   */\n  bringToFront() {\n    let zIndex = '';\n    const frontmost = getAttachedInstances().filter(o => o !== this).pop();\n    if (frontmost) {\n      const frontmostZIndex = frontmost.__zIndex;\n      zIndex = frontmostZIndex + 1;\n    }\n    this.style.zIndex = zIndex;\n    this.__zIndex = zIndex || parseFloat(getComputedStyle(this).zIndex);\n  }\n\n  /** @protected */\n  _enterModalState() {\n    if (document.body.style.pointerEvents !== 'none') {\n      // Set body pointer-events to 'none' to disable mouse interactions with\n      // other document nodes.\n      this._previousDocumentPointerEvents = document.body.style.pointerEvents;\n      document.body.style.pointerEvents = 'none';\n    }\n\n    // Disable pointer events in other attached overlays\n    getAttachedInstances().forEach(el => {\n      if (el !== this) {\n        el.$.overlay.style.pointerEvents = 'none';\n      }\n    });\n  }\n\n  /** @protected */\n  _exitModalState() {\n    if (this._previousDocumentPointerEvents !== undefined) {\n      // Restore body pointer-events\n      document.body.style.pointerEvents = this._previousDocumentPointerEvents;\n      delete this._previousDocumentPointerEvents;\n    }\n\n    // Restore pointer events in the previous overlay(s)\n    const instances = getAttachedInstances();\n    let el;\n    // Use instances.pop() to ensure the reverse order\n    while (el = instances.pop()) {\n      if (el === this) {\n        // Skip the current instance\n        continue;\n      }\n      el.$.overlay.style.removeProperty('pointer-events');\n      if (!el.modeless) {\n        // Stop after the last modal\n        break;\n      }\n    }\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9vdmVybGF5L3NyYy92YWFkaW4tb3ZlcmxheS1zdGFjay1taXhpbi5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob21lLWFzc2lzdGFudC1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AdmFhZGluL292ZXJsYXkvc3JjL3ZhYWRpbi1vdmVybGF5LXN0YWNrLW1peGluLmpzP2IwN2IiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IChjKSAyMDE3IC0gMjAyMyBWYWFkaW4gTHRkLlxuICogVGhpcyBwcm9ncmFtIGlzIGF2YWlsYWJsZSB1bmRlciBBcGFjaGUgTGljZW5zZSBWZXJzaW9uIDIuMCwgYXZhaWxhYmxlIGF0IGh0dHBzOi8vdmFhZGluLmNvbS9saWNlbnNlL1xuICovXG5cbi8qKlxuICogUmV0dXJucyBhbGwgYXR0YWNoZWQgb3ZlcmxheXMgaW4gdmlzdWFsIHN0YWNraW5nIG9yZGVyLlxuICogQHByaXZhdGVcbiAqL1xuY29uc3QgZ2V0QXR0YWNoZWRJbnN0YW5jZXMgPSAoKSA9PlxuICBBcnJheS5mcm9tKGRvY3VtZW50LmJvZHkuY2hpbGRyZW4pXG4gICAgLmZpbHRlcigoZWwpID0+IGVsIGluc3RhbmNlb2YgSFRNTEVsZW1lbnQgJiYgZWwuX2hhc092ZXJsYXlTdGFja01peGluICYmICFlbC5oYXNBdHRyaWJ1dGUoJ2Nsb3NpbmcnKSlcbiAgICAuc29ydCgoYSwgYikgPT4gYS5fX3pJbmRleCAtIGIuX196SW5kZXggfHwgMCk7XG5cbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIHRoZSBvdmVybGF5IGlzIHRoZSBsYXN0IG9uZSBpbiB0aGUgb3BlbmVkIG92ZXJsYXlzIHN0YWNrLlxuICogQHBhcmFtIHtIVE1MRWxlbWVudH0gb3ZlcmxheVxuICogQHJldHVybiB7Ym9vbGVhbn1cbiAqIEBwcm90ZWN0ZWRcbiAqL1xuZXhwb3J0IGNvbnN0IGlzTGFzdE92ZXJsYXkgPSAob3ZlcmxheSkgPT4gb3ZlcmxheSA9PT0gZ2V0QXR0YWNoZWRJbnN0YW5jZXMoKS5wb3AoKTtcblxuLyoqXG4gKiBAcG9seW1lck1peGluXG4gKi9cbmV4cG9ydCBjb25zdCBPdmVybGF5U3RhY2tNaXhpbiA9IChzdXBlckNsYXNzKSA9PlxuICBjbGFzcyBPdmVybGF5U3RhY2tNaXhpbiBleHRlbmRzIHN1cGVyQ2xhc3Mge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgc3VwZXIoKTtcblxuICAgICAgdGhpcy5faGFzT3ZlcmxheVN0YWNrTWl4aW4gPSB0cnVlO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFJldHVybnMgdHJ1ZSBpZiB0aGlzIGlzIHRoZSBsYXN0IG9uZSBpbiB0aGUgb3BlbmVkIG92ZXJsYXlzIHN0YWNrLlxuICAgICAqXG4gICAgICogQHJldHVybiB7Ym9vbGVhbn1cbiAgICAgKiBAcHJvdGVjdGVkXG4gICAgICovXG4gICAgZ2V0IF9sYXN0KCkge1xuICAgICAgcmV0dXJuIGlzTGFzdE92ZXJsYXkodGhpcyk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQnJpbmdzIHRoZSBvdmVybGF5IGFzIHZpc3VhbGx5IHRoZSBmcm9udG1vc3Qgb25lLlxuICAgICAqL1xuICAgIGJyaW5nVG9Gcm9udCgpIHtcbiAgICAgIGxldCB6SW5kZXggPSAnJztcbiAgICAgIGNvbnN0IGZyb250bW9zdCA9IGdldEF0dGFjaGVkSW5zdGFuY2VzKClcbiAgICAgICAgLmZpbHRlcigobykgPT4gbyAhPT0gdGhpcylcbiAgICAgICAgLnBvcCgpO1xuICAgICAgaWYgKGZyb250bW9zdCkge1xuICAgICAgICBjb25zdCBmcm9udG1vc3RaSW5kZXggPSBmcm9udG1vc3QuX196SW5kZXg7XG4gICAgICAgIHpJbmRleCA9IGZyb250bW9zdFpJbmRleCArIDE7XG4gICAgICB9XG4gICAgICB0aGlzLnN0eWxlLnpJbmRleCA9IHpJbmRleDtcbiAgICAgIHRoaXMuX196SW5kZXggPSB6SW5kZXggfHwgcGFyc2VGbG9hdChnZXRDb21wdXRlZFN0eWxlKHRoaXMpLnpJbmRleCk7XG4gICAgfVxuXG4gICAgLyoqIEBwcm90ZWN0ZWQgKi9cbiAgICBfZW50ZXJNb2RhbFN0YXRlKCkge1xuICAgICAgaWYgKGRvY3VtZW50LmJvZHkuc3R5bGUucG9pbnRlckV2ZW50cyAhPT0gJ25vbmUnKSB7XG4gICAgICAgIC8vIFNldCBib2R5IHBvaW50ZXItZXZlbnRzIHRvICdub25lJyB0byBkaXNhYmxlIG1vdXNlIGludGVyYWN0aW9ucyB3aXRoXG4gICAgICAgIC8vIG90aGVyIGRvY3VtZW50IG5vZGVzLlxuICAgICAgICB0aGlzLl9wcmV2aW91c0RvY3VtZW50UG9pbnRlckV2ZW50cyA9IGRvY3VtZW50LmJvZHkuc3R5bGUucG9pbnRlckV2ZW50cztcbiAgICAgICAgZG9jdW1lbnQuYm9keS5zdHlsZS5wb2ludGVyRXZlbnRzID0gJ25vbmUnO1xuICAgICAgfVxuXG4gICAgICAvLyBEaXNhYmxlIHBvaW50ZXIgZXZlbnRzIGluIG90aGVyIGF0dGFjaGVkIG92ZXJsYXlzXG4gICAgICBnZXRBdHRhY2hlZEluc3RhbmNlcygpLmZvckVhY2goKGVsKSA9PiB7XG4gICAgICAgIGlmIChlbCAhPT0gdGhpcykge1xuICAgICAgICAgIGVsLiQub3ZlcmxheS5zdHlsZS5wb2ludGVyRXZlbnRzID0gJ25vbmUnO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICAvKiogQHByb3RlY3RlZCAqL1xuICAgIF9leGl0TW9kYWxTdGF0ZSgpIHtcbiAgICAgIGlmICh0aGlzLl9wcmV2aW91c0RvY3VtZW50UG9pbnRlckV2ZW50cyAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIC8vIFJlc3RvcmUgYm9keSBwb2ludGVyLWV2ZW50c1xuICAgICAgICBkb2N1bWVudC5ib2R5LnN0eWxlLnBvaW50ZXJFdmVudHMgPSB0aGlzLl9wcmV2aW91c0RvY3VtZW50UG9pbnRlckV2ZW50cztcbiAgICAgICAgZGVsZXRlIHRoaXMuX3ByZXZpb3VzRG9jdW1lbnRQb2ludGVyRXZlbnRzO1xuICAgICAgfVxuXG4gICAgICAvLyBSZXN0b3JlIHBvaW50ZXIgZXZlbnRzIGluIHRoZSBwcmV2aW91cyBvdmVybGF5KHMpXG4gICAgICBjb25zdCBpbnN0YW5jZXMgPSBnZXRBdHRhY2hlZEluc3RhbmNlcygpO1xuXG4gICAgICBsZXQgZWw7XG4gICAgICAvLyBVc2UgaW5zdGFuY2VzLnBvcCgpIHRvIGVuc3VyZSB0aGUgcmV2ZXJzZSBvcmRlclxuICAgICAgd2hpbGUgKChlbCA9IGluc3RhbmNlcy5wb3AoKSkpIHtcbiAgICAgICAgaWYgKGVsID09PSB0aGlzKSB7XG4gICAgICAgICAgLy8gU2tpcCB0aGUgY3VycmVudCBpbnN0YW5jZVxuICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGVsLiQub3ZlcmxheS5zdHlsZS5yZW1vdmVQcm9wZXJ0eSgncG9pbnRlci1ldmVudHMnKTtcbiAgICAgICAgaWYgKCFlbC5tb2RlbGVzcykge1xuICAgICAgICAgIC8vIFN0b3AgYWZ0ZXIgdGhlIGxhc3QgbW9kYWxcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/overlay/src/vaadin-overlay-stack-mixin.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/overlay/src/vaadin-overlay-styles.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@vaadin/overlay/src/vaadin-overlay-styles.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   overlayStyles: () => (/* binding */ overlayStyles)\n/* harmony export */ });\n/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit */ \"./node_modules/lit/index.js\");\n/**\n * @license\n * Copyright (c) 2017 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\nconst overlayStyles = (0,lit__WEBPACK_IMPORTED_MODULE_0__.css)`\n  :host {\n    z-index: 200;\n    position: fixed;\n\n    /* Despite of what the names say, <vaadin-overlay> is just a container\n          for position/sizing/alignment. The actual overlay is the overlay part. */\n\n    /* Default position constraints: the entire viewport. Note: themes can\n          override this to introduce gaps between the overlay and the viewport. */\n    inset: 0;\n    bottom: var(--vaadin-overlay-viewport-bottom);\n\n    /* Use flexbox alignment for the overlay part. */\n    display: flex;\n    flex-direction: column; /* makes dropdowns sizing easier */\n    /* Align to center by default. */\n    align-items: center;\n    justify-content: center;\n\n    /* Allow centering when max-width/max-height applies. */\n    margin: auto;\n\n    /* The host is not clickable, only the overlay part is. */\n    pointer-events: none;\n\n    /* Remove tap highlight on touch devices. */\n    -webkit-tap-highlight-color: transparent;\n\n    /* CSS API for host */\n    --vaadin-overlay-viewport-bottom: 0;\n  }\n\n  :host([hidden]),\n  :host(:not([opened]):not([closing])) {\n    display: none !important;\n  }\n\n  [part='overlay'] {\n    -webkit-overflow-scrolling: touch;\n    overflow: auto;\n    pointer-events: auto;\n\n    /* Prevent overflowing the host */\n    max-width: 100%;\n    box-sizing: border-box;\n\n    -webkit-tap-highlight-color: initial; /* reenable tap highlight inside */\n  }\n\n  [part='backdrop'] {\n    z-index: -1;\n    content: '';\n    background: rgba(0, 0, 0, 0.5);\n    position: fixed;\n    inset: 0;\n    pointer-events: auto;\n  }\n`;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9vdmVybGF5L3NyYy92YWFkaW4tb3ZlcmxheS1zdHlsZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9tZS1hc3Npc3RhbnQtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9vdmVybGF5L3NyYy92YWFkaW4tb3ZlcmxheS1zdHlsZXMuanM/NjhmNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTcgLSAyMDIzIFZhYWRpbiBMdGQuXG4gKiBUaGlzIHByb2dyYW0gaXMgYXZhaWxhYmxlIHVuZGVyIEFwYWNoZSBMaWNlbnNlIFZlcnNpb24gMi4wLCBhdmFpbGFibGUgYXQgaHR0cHM6Ly92YWFkaW4uY29tL2xpY2Vuc2UvXG4gKi9cbmltcG9ydCB7IGNzcyB9IGZyb20gJ2xpdCc7XG5cbmV4cG9ydCBjb25zdCBvdmVybGF5U3R5bGVzID0gY3NzYFxuICA6aG9zdCB7XG4gICAgei1pbmRleDogMjAwO1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcblxuICAgIC8qIERlc3BpdGUgb2Ygd2hhdCB0aGUgbmFtZXMgc2F5LCA8dmFhZGluLW92ZXJsYXk+IGlzIGp1c3QgYSBjb250YWluZXJcbiAgICAgICAgICBmb3IgcG9zaXRpb24vc2l6aW5nL2FsaWdubWVudC4gVGhlIGFjdHVhbCBvdmVybGF5IGlzIHRoZSBvdmVybGF5IHBhcnQuICovXG5cbiAgICAvKiBEZWZhdWx0IHBvc2l0aW9uIGNvbnN0cmFpbnRzOiB0aGUgZW50aXJlIHZpZXdwb3J0LiBOb3RlOiB0aGVtZXMgY2FuXG4gICAgICAgICAgb3ZlcnJpZGUgdGhpcyB0byBpbnRyb2R1Y2UgZ2FwcyBiZXR3ZWVuIHRoZSBvdmVybGF5IGFuZCB0aGUgdmlld3BvcnQuICovXG4gICAgaW5zZXQ6IDA7XG4gICAgYm90dG9tOiB2YXIoLS12YWFkaW4tb3ZlcmxheS12aWV3cG9ydC1ib3R0b20pO1xuXG4gICAgLyogVXNlIGZsZXhib3ggYWxpZ25tZW50IGZvciB0aGUgb3ZlcmxheSBwYXJ0LiAqL1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsgLyogbWFrZXMgZHJvcGRvd25zIHNpemluZyBlYXNpZXIgKi9cbiAgICAvKiBBbGlnbiB0byBjZW50ZXIgYnkgZGVmYXVsdC4gKi9cbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuXG4gICAgLyogQWxsb3cgY2VudGVyaW5nIHdoZW4gbWF4LXdpZHRoL21heC1oZWlnaHQgYXBwbGllcy4gKi9cbiAgICBtYXJnaW46IGF1dG87XG5cbiAgICAvKiBUaGUgaG9zdCBpcyBub3QgY2xpY2thYmxlLCBvbmx5IHRoZSBvdmVybGF5IHBhcnQgaXMuICovXG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG5cbiAgICAvKiBSZW1vdmUgdGFwIGhpZ2hsaWdodCBvbiB0b3VjaCBkZXZpY2VzLiAqL1xuICAgIC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogdHJhbnNwYXJlbnQ7XG5cbiAgICAvKiBDU1MgQVBJIGZvciBob3N0ICovXG4gICAgLS12YWFkaW4tb3ZlcmxheS12aWV3cG9ydC1ib3R0b206IDA7XG4gIH1cblxuICA6aG9zdChbaGlkZGVuXSksXG4gIDpob3N0KDpub3QoW29wZW5lZF0pOm5vdChbY2xvc2luZ10pKSB7XG4gICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xuICB9XG5cbiAgW3BhcnQ9J292ZXJsYXknXSB7XG4gICAgLXdlYmtpdC1vdmVyZmxvdy1zY3JvbGxpbmc6IHRvdWNoO1xuICAgIG92ZXJmbG93OiBhdXRvO1xuICAgIHBvaW50ZXItZXZlbnRzOiBhdXRvO1xuXG4gICAgLyogUHJldmVudCBvdmVyZmxvd2luZyB0aGUgaG9zdCAqL1xuICAgIG1heC13aWR0aDogMTAwJTtcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuXG4gICAgLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOiBpbml0aWFsOyAvKiByZWVuYWJsZSB0YXAgaGlnaGxpZ2h0IGluc2lkZSAqL1xuICB9XG5cbiAgW3BhcnQ9J2JhY2tkcm9wJ10ge1xuICAgIHotaW5kZXg6IC0xO1xuICAgIGNvbnRlbnQ6ICcnO1xuICAgIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC41KTtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgaW5zZXQ6IDA7XG4gICAgcG9pbnRlci1ldmVudHM6IGF1dG87XG4gIH1cbmA7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/overlay/src/vaadin-overlay-styles.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/vaadin-material-styles/color.js":
/*!**************************************************************!*\
  !*** ./node_modules/@vaadin/vaadin-material-styles/color.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   colorBase: () => (/* binding */ colorBase),\n/* harmony export */   colorDark: () => (/* binding */ colorDark),\n/* harmony export */   colorLight: () => (/* binding */ colorLight)\n/* harmony export */ });\n/* harmony import */ var _version_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./version.js */ \"./node_modules/@vaadin/vaadin-material-styles/version.js\");\n/* harmony import */ var _vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js */ \"./node_modules/@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js\");\n/* harmony import */ var _global_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./global.js */ \"./node_modules/@vaadin/vaadin-material-styles/global.js\");\n/**\n * @license\n * Copyright (c) 2017 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\n\nconst colorLight = (0,_vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_1__.css)`\n  :host {\n    /* Text colors */\n    --material-body-text-color: var(--light-theme-text-color, rgba(0, 0, 0, 0.87));\n    --material-secondary-text-color: var(--light-theme-secondary-color, rgba(0, 0, 0, 0.54));\n    --material-disabled-text-color: var(--light-theme-disabled-color, rgba(0, 0, 0, 0.38));\n\n    /* Primary colors */\n    --material-primary-color: var(--primary-color, #6200ee);\n    --material-primary-contrast-color: var(--dark-theme-base-color, #fff);\n    --material-primary-text-color: var(--material-primary-color);\n\n    /* Error colors */\n    --material-error-color: var(--error-color, #b00020);\n    --material-error-text-color: var(--material-error-color);\n\n    /* Background colors */\n    --material-background-color: var(--light-theme-background-color, #fff);\n    --material-secondary-background-color: var(--light-theme-secondary-background-color, #f5f5f5);\n    --material-disabled-color: rgba(0, 0, 0, 0.26);\n\n    /* Divider colors */\n    --material-divider-color: rgba(0, 0, 0, 0.12);\n\n    /* Undocumented internal properties (prefixed with three dashes) */\n\n    /* Text field tweaks */\n    --_material-text-field-input-line-background-color: initial;\n    --_material-text-field-input-line-opacity: initial;\n    --_material-text-field-input-line-hover-opacity: initial;\n    --_material-text-field-focused-label-opacity: initial;\n\n    /* Button tweaks */\n    --_material-button-raised-background-color: initial;\n    --_material-button-outline-color: initial;\n\n    /* Grid tweaks */\n    --_material-grid-row-hover-background-color: initial;\n\n    /* Split layout tweaks */\n    --_material-split-layout-splitter-background-color: initial;\n\n    background-color: var(--material-background-color);\n    color: var(--material-body-text-color);\n  }\n\n  [theme~='dark'] {\n    /* Text colors */\n    --material-body-text-color: var(--dark-theme-text-color, rgba(255, 255, 255, 1));\n    --material-secondary-text-color: var(--dark-theme-secondary-color, rgba(255, 255, 255, 0.7));\n    --material-disabled-text-color: var(--dark-theme-disabled-color, rgba(255, 255, 255, 0.5));\n\n    /* Primary colors */\n    --material-primary-color: var(--light-primary-color, #7e3ff2);\n    --material-primary-text-color: #b794f6;\n\n    /* Error colors */\n    --material-error-color: var(--error-color, #de2839);\n    --material-error-text-color: var(--material-error-color);\n\n    /* Background colors */\n    --material-background-color: var(--dark-theme-background-color, #303030);\n    --material-secondary-background-color: var(--dark-theme-secondary-background-color, #3b3b3b);\n    --material-disabled-color: rgba(255, 255, 255, 0.3);\n\n    /* Divider colors */\n    --material-divider-color: rgba(255, 255, 255, 0.12);\n\n    /* Undocumented internal properties (prefixed with three dashes) */\n\n    /* Text field tweaks */\n    --_material-text-field-input-line-background-color: #fff;\n    --_material-text-field-input-line-opacity: 0.7;\n    --_material-text-field-input-line-hover-opacity: 1;\n    --_material-text-field-focused-label-opacity: 1;\n\n    /* Button tweaks */\n    --_material-button-raised-background-color: rgba(255, 255, 255, 0.08);\n    --_material-button-outline-color: rgba(255, 255, 255, 0.2);\n\n    /* Grid tweaks */\n    --_material-grid-row-hover-background-color: rgba(255, 255, 255, 0.08);\n    --_material-grid-row-selected-overlay-opacity: 0.16;\n\n    /* Split layout tweaks */\n    --_material-split-layout-splitter-background-color: rgba(255, 255, 255, 0.8);\n\n    background-color: var(--material-background-color);\n    color: var(--material-body-text-color);\n  }\n\n  a {\n    color: inherit;\n  }\n`;\n(0,_vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_1__.registerStyles)('', colorLight, {\n  moduleId: 'material-color-light'\n});\nconst colorDark = (0,_vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_1__.css)`\n  :host {\n    /* Text colors */\n    --material-body-text-color: var(--dark-theme-text-color, rgba(255, 255, 255, 1));\n    --material-secondary-text-color: var(--dark-theme-secondary-color, rgba(255, 255, 255, 0.7));\n    --material-disabled-text-color: var(--dark-theme-disabled-color, rgba(255, 255, 255, 0.5));\n\n    /* Primary colors */\n    --material-primary-color: var(--light-primary-color, #7e3ff2);\n    --material-primary-text-color: #b794f6;\n\n    /* Error colors */\n    --material-error-color: var(--error-color, #de2839);\n    --material-error-text-color: var(--material-error-color);\n\n    /* Background colors */\n    --material-background-color: var(--dark-theme-background-color, #303030);\n    --material-secondary-background-color: var(--dark-theme-secondary-background-color, #3b3b3b);\n    --material-disabled-color: rgba(255, 255, 255, 0.3);\n\n    /* Divider colors */\n    --material-divider-color: rgba(255, 255, 255, 0.12);\n\n    /* Undocumented internal properties (prefixed with three dashes) */\n\n    /* Text field tweaks */\n    --_material-text-field-input-line-background-color: #fff;\n    --_material-text-field-input-line-opacity: 0.7;\n    --_material-text-field-input-line-hover-opacity: 1;\n    --_material-text-field-focused-label-opacity: 1;\n\n    /* Button tweaks */\n    --_material-button-raised-background-color: rgba(255, 255, 255, 0.08);\n    --_material-button-outline-color: rgba(255, 255, 255, 0.2);\n\n    /* Grid tweaks */\n    --_material-grid-row-hover-background-color: rgba(255, 255, 255, 0.08);\n    --_material-grid-row-selected-overlay-opacity: 0.16;\n\n    /* Split layout tweaks */\n    --_material-split-layout-splitter-background-color: rgba(255, 255, 255, 0.8);\n\n    background-color: var(--material-background-color);\n    color: var(--material-body-text-color);\n  }\n`;\n(0,_vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_1__.registerStyles)('', colorDark, {\n  moduleId: 'material-color-dark'\n});\nconst colorBase = (0,_vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_1__.css)`\n  :host {\n    /* Text colors */\n    --material-body-text-color: var(--light-theme-text-color, rgba(0, 0, 0, 0.87));\n    --material-secondary-text-color: var(--light-theme-secondary-color, rgba(0, 0, 0, 0.54));\n    --material-disabled-text-color: var(--light-theme-disabled-color, rgba(0, 0, 0, 0.38));\n\n    /* Primary colors */\n    --material-primary-color: var(--primary-color, #6200ee);\n    --material-primary-contrast-color: var(--dark-theme-base-color, #fff);\n    --material-primary-text-color: var(--material-primary-color);\n\n    /* Error colors */\n    --material-error-color: var(--error-color, #b00020);\n    --material-error-text-color: var(--material-error-color);\n\n    /* Background colors */\n    --material-background-color: var(--light-theme-background-color, #fff);\n    --material-secondary-background-color: var(--light-theme-secondary-background-color, #f5f5f5);\n    --material-disabled-color: rgba(0, 0, 0, 0.26);\n\n    /* Divider colors */\n    --material-divider-color: rgba(0, 0, 0, 0.12);\n  }\n`;\n(0,_global_js__WEBPACK_IMPORTED_MODULE_2__.addMaterialGlobalStyles)('color-base', colorBase);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/vaadin-material-styles/color.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/vaadin-material-styles/global.js":
/*!***************************************************************!*\
  !*** ./node_modules/@vaadin/vaadin-material-styles/global.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addMaterialGlobalStyles: () => (/* binding */ addMaterialGlobalStyles)\n/* harmony export */ });\n/* harmony import */ var _vaadin_vaadin_themable_mixin_register_styles_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @vaadin/vaadin-themable-mixin/register-styles.js */ \"./node_modules/@vaadin/vaadin-themable-mixin/register-styles.js\");\n\nconst addMaterialGlobalStyles = (id, ...styles) => {\n  (0,_vaadin_vaadin_themable_mixin_register_styles_js__WEBPACK_IMPORTED_MODULE_0__.addGlobalThemeStyles)(`material-${id}`, styles);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi92YWFkaW4tbWF0ZXJpYWwtc3R5bGVzL2dsb2JhbC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBRUE7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9tZS1hc3Npc3RhbnQtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHZhYWRpbi92YWFkaW4tbWF0ZXJpYWwtc3R5bGVzL2dsb2JhbC5qcz8wMmMwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFkZEdsb2JhbFRoZW1lU3R5bGVzIH0gZnJvbSAnQHZhYWRpbi92YWFkaW4tdGhlbWFibGUtbWl4aW4vcmVnaXN0ZXItc3R5bGVzLmpzJztcblxuZXhwb3J0IGNvbnN0IGFkZE1hdGVyaWFsR2xvYmFsU3R5bGVzID0gKGlkLCAuLi5zdHlsZXMpID0+IHtcbiAgYWRkR2xvYmFsVGhlbWVTdHlsZXMoYG1hdGVyaWFsLSR7aWR9YCwgc3R5bGVzKTtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/vaadin-material-styles/global.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/vaadin-material-styles/mixins/loader.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@vaadin/vaadin-material-styles/mixins/loader.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   loader: () => (/* binding */ loader)\n/* harmony export */ });\n/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../color.js */ \"./node_modules/@vaadin/vaadin-material-styles/color.js\");\n/* harmony import */ var _vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js */ \"./node_modules/@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js\");\n/**\n * @license\n * Copyright (c) 2022 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\nconst loader = (0,_vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_1__.css)`\n  [part~='loader'] {\n    height: 2px;\n    background: var(--material-background-color)\n      linear-gradient(\n        90deg,\n        transparent 0%,\n        transparent 20%,\n        var(--material-primary-color) 20%,\n        var(--material-primary-color) 40%,\n        transparent 40%,\n        transparent 60%,\n        var(--material-primary-color) 60%,\n        var(--material-primary-color) 80%,\n        transparent 80%,\n        transparent 100%\n      )\n      0 0 / 400% 100% repeat-x;\n    opacity: 0;\n  }\n\n  :host(:not([loading])) [part~='loader'] {\n    display: none;\n  }\n\n  :host([loading]) [part='loader'] {\n    animation: 3s linear infinite material-loader-progress, 0.3s 0.1s both material-loader-fade-in;\n  }\n\n  [part='loader']::before {\n    content: '';\n    display: block;\n    height: 100%;\n    opacity: 0.16;\n    background: var(--material-primary-color);\n  }\n\n  @keyframes material-loader-fade-in {\n    0% {\n      opacity: 0;\n    }\n\n    100% {\n      opacity: 1;\n    }\n  }\n\n  @keyframes material-loader-progress {\n    0% {\n      background-position: 0 0;\n      background-size: 300% 100%;\n    }\n\n    33% {\n      background-position: -100% 0;\n      background-size: 400% 100%;\n    }\n\n    67% {\n      background-position: -200% 0;\n      background-size: 250% 100%;\n    }\n\n    100% {\n      background-position: -300% 0;\n      background-size: 300% 100%;\n    }\n  }\n\n  /* RTL specific styles */\n\n  @keyframes material-loader-progress-rtl {\n    0% {\n      background-position: 100% 0;\n      background-size: 300% 100%;\n    }\n\n    33% {\n      background-position: 200% 0;\n      background-size: 400% 100%;\n    }\n\n    67% {\n      background-position: 300% 0;\n      background-size: 250% 100%;\n    }\n\n    100% {\n      background-position: 400% 0;\n      background-size: 300% 100%;\n    }\n  }\n\n  :host([loading][dir='rtl']) [part='loader'] {\n    animation: 3s linear infinite material-loader-progress-rtl, 0.3s 0.1s both material-loader-fade-in;\n  }\n`;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi92YWFkaW4tbWF0ZXJpYWwtc3R5bGVzL21peGlucy9sb2FkZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2hvbWUtYXNzaXN0YW50LWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0B2YWFkaW4vdmFhZGluLW1hdGVyaWFsLXN0eWxlcy9taXhpbnMvbG9hZGVyLmpzPzE3YzEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IChjKSAyMDIyIC0gMjAyMyBWYWFkaW4gTHRkLlxuICogVGhpcyBwcm9ncmFtIGlzIGF2YWlsYWJsZSB1bmRlciBBcGFjaGUgTGljZW5zZSBWZXJzaW9uIDIuMCwgYXZhaWxhYmxlIGF0IGh0dHBzOi8vdmFhZGluLmNvbS9saWNlbnNlL1xuICovXG5pbXBvcnQgJy4uL2NvbG9yLmpzJztcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0B2YWFkaW4vdmFhZGluLXRoZW1hYmxlLW1peGluL3ZhYWRpbi10aGVtYWJsZS1taXhpbi5qcyc7XG5cbmNvbnN0IGxvYWRlciA9IGNzc2BcbiAgW3BhcnR+PSdsb2FkZXInXSB7XG4gICAgaGVpZ2h0OiAycHg7XG4gICAgYmFja2dyb3VuZDogdmFyKC0tbWF0ZXJpYWwtYmFja2dyb3VuZC1jb2xvcilcbiAgICAgIGxpbmVhci1ncmFkaWVudChcbiAgICAgICAgOTBkZWcsXG4gICAgICAgIHRyYW5zcGFyZW50IDAlLFxuICAgICAgICB0cmFuc3BhcmVudCAyMCUsXG4gICAgICAgIHZhcigtLW1hdGVyaWFsLXByaW1hcnktY29sb3IpIDIwJSxcbiAgICAgICAgdmFyKC0tbWF0ZXJpYWwtcHJpbWFyeS1jb2xvcikgNDAlLFxuICAgICAgICB0cmFuc3BhcmVudCA0MCUsXG4gICAgICAgIHRyYW5zcGFyZW50IDYwJSxcbiAgICAgICAgdmFyKC0tbWF0ZXJpYWwtcHJpbWFyeS1jb2xvcikgNjAlLFxuICAgICAgICB2YXIoLS1tYXRlcmlhbC1wcmltYXJ5LWNvbG9yKSA4MCUsXG4gICAgICAgIHRyYW5zcGFyZW50IDgwJSxcbiAgICAgICAgdHJhbnNwYXJlbnQgMTAwJVxuICAgICAgKVxuICAgICAgMCAwIC8gNDAwJSAxMDAlIHJlcGVhdC14O1xuICAgIG9wYWNpdHk6IDA7XG4gIH1cblxuICA6aG9zdCg6bm90KFtsb2FkaW5nXSkpIFtwYXJ0fj0nbG9hZGVyJ10ge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cblxuICA6aG9zdChbbG9hZGluZ10pIFtwYXJ0PSdsb2FkZXInXSB7XG4gICAgYW5pbWF0aW9uOiAzcyBsaW5lYXIgaW5maW5pdGUgbWF0ZXJpYWwtbG9hZGVyLXByb2dyZXNzLCAwLjNzIDAuMXMgYm90aCBtYXRlcmlhbC1sb2FkZXItZmFkZS1pbjtcbiAgfVxuXG4gIFtwYXJ0PSdsb2FkZXInXTo6YmVmb3JlIHtcbiAgICBjb250ZW50OiAnJztcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgb3BhY2l0eTogMC4xNjtcbiAgICBiYWNrZ3JvdW5kOiB2YXIoLS1tYXRlcmlhbC1wcmltYXJ5LWNvbG9yKTtcbiAgfVxuXG4gIEBrZXlmcmFtZXMgbWF0ZXJpYWwtbG9hZGVyLWZhZGUtaW4ge1xuICAgIDAlIHtcbiAgICAgIG9wYWNpdHk6IDA7XG4gICAgfVxuXG4gICAgMTAwJSB7XG4gICAgICBvcGFjaXR5OiAxO1xuICAgIH1cbiAgfVxuXG4gIEBrZXlmcmFtZXMgbWF0ZXJpYWwtbG9hZGVyLXByb2dyZXNzIHtcbiAgICAwJSB7XG4gICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwIDA7XG4gICAgICBiYWNrZ3JvdW5kLXNpemU6IDMwMCUgMTAwJTtcbiAgICB9XG5cbiAgICAzMyUge1xuICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTEwMCUgMDtcbiAgICAgIGJhY2tncm91bmQtc2l6ZTogNDAwJSAxMDAlO1xuICAgIH1cblxuICAgIDY3JSB7XG4gICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMjAwJSAwO1xuICAgICAgYmFja2dyb3VuZC1zaXplOiAyNTAlIDEwMCU7XG4gICAgfVxuXG4gICAgMTAwJSB7XG4gICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMzAwJSAwO1xuICAgICAgYmFja2dyb3VuZC1zaXplOiAzMDAlIDEwMCU7XG4gICAgfVxuICB9XG5cbiAgLyogUlRMIHNwZWNpZmljIHN0eWxlcyAqL1xuXG4gIEBrZXlmcmFtZXMgbWF0ZXJpYWwtbG9hZGVyLXByb2dyZXNzLXJ0bCB7XG4gICAgMCUge1xuICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogMTAwJSAwO1xuICAgICAgYmFja2dyb3VuZC1zaXplOiAzMDAlIDEwMCU7XG4gICAgfVxuXG4gICAgMzMlIHtcbiAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IDIwMCUgMDtcbiAgICAgIGJhY2tncm91bmQtc2l6ZTogNDAwJSAxMDAlO1xuICAgIH1cblxuICAgIDY3JSB7XG4gICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAzMDAlIDA7XG4gICAgICBiYWNrZ3JvdW5kLXNpemU6IDI1MCUgMTAwJTtcbiAgICB9XG5cbiAgICAxMDAlIHtcbiAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IDQwMCUgMDtcbiAgICAgIGJhY2tncm91bmQtc2l6ZTogMzAwJSAxMDAlO1xuICAgIH1cbiAgfVxuXG4gIDpob3N0KFtsb2FkaW5nXVtkaXI9J3J0bCddKSBbcGFydD0nbG9hZGVyJ10ge1xuICAgIGFuaW1hdGlvbjogM3MgbGluZWFyIGluZmluaXRlIG1hdGVyaWFsLWxvYWRlci1wcm9ncmVzcy1ydGwsIDAuM3MgMC4xcyBib3RoIG1hdGVyaWFsLWxvYWRlci1mYWRlLWluO1xuICB9XG5gO1xuXG5leHBvcnQgeyBsb2FkZXIgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/vaadin-material-styles/mixins/loader.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/vaadin-material-styles/mixins/menu-overlay.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@vaadin/vaadin-material-styles/mixins/menu-overlay.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   menuOverlay: () => (/* binding */ menuOverlay)\n/* harmony export */ });\n/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../color.js */ \"./node_modules/@vaadin/vaadin-material-styles/color.js\");\n/* harmony import */ var _vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js */ \"./node_modules/@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js\");\n/* harmony import */ var _overlay_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./overlay.js */ \"./node_modules/@vaadin/vaadin-material-styles/mixins/overlay.js\");\n/**\n * @license\n * Copyright (c) 2017 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\n\nconst menuOverlay = _overlay_js__WEBPACK_IMPORTED_MODULE_2__.overlay;\n(0,_vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_1__.registerStyles)('', menuOverlay, {\n  moduleId: 'material-menu-overlay'\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi92YWFkaW4tbWF0ZXJpYWwtc3R5bGVzL21peGlucy9tZW51LW92ZXJsYXkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUVBO0FBQUE7QUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL2hvbWUtYXNzaXN0YW50LWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0B2YWFkaW4vdmFhZGluLW1hdGVyaWFsLXN0eWxlcy9taXhpbnMvbWVudS1vdmVybGF5LmpzPzAzNWQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IChjKSAyMDE3IC0gMjAyMyBWYWFkaW4gTHRkLlxuICogVGhpcyBwcm9ncmFtIGlzIGF2YWlsYWJsZSB1bmRlciBBcGFjaGUgTGljZW5zZSBWZXJzaW9uIDIuMCwgYXZhaWxhYmxlIGF0IGh0dHBzOi8vdmFhZGluLmNvbS9saWNlbnNlL1xuICovXG5pbXBvcnQgJy4uL2NvbG9yLmpzJztcbmltcG9ydCB7IHJlZ2lzdGVyU3R5bGVzIH0gZnJvbSAnQHZhYWRpbi92YWFkaW4tdGhlbWFibGUtbWl4aW4vdmFhZGluLXRoZW1hYmxlLW1peGluLmpzJztcbmltcG9ydCB7IG92ZXJsYXkgfSBmcm9tICcuL292ZXJsYXkuanMnO1xuXG5jb25zdCBtZW51T3ZlcmxheSA9IG92ZXJsYXk7XG5cbnJlZ2lzdGVyU3R5bGVzKCcnLCBtZW51T3ZlcmxheSwgeyBtb2R1bGVJZDogJ21hdGVyaWFsLW1lbnUtb3ZlcmxheScgfSk7XG5cbmV4cG9ydCB7IG1lbnVPdmVybGF5IH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/vaadin-material-styles/mixins/menu-overlay.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/vaadin-material-styles/mixins/overlay.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@vaadin/vaadin-material-styles/mixins/overlay.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   overlay: () => (/* binding */ overlay)\n/* harmony export */ });\n/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../color.js */ \"./node_modules/@vaadin/vaadin-material-styles/color.js\");\n/* harmony import */ var _typography_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../typography.js */ \"./node_modules/@vaadin/vaadin-material-styles/typography.js\");\n/* harmony import */ var _shadow_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../shadow.js */ \"./node_modules/@vaadin/vaadin-material-styles/shadow.js\");\n/* harmony import */ var _vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js */ \"./node_modules/@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js\");\n/**\n * @license\n * Copyright (c) 2017 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\n\n\nconst overlay = (0,_vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_3__.css)`\n  :host {\n    top: 16px;\n    right: 16px;\n    /* TODO (@jouni): remove unnecessary multiplication after https://github.com/vaadin/vaadin-overlay/issues/90 is fixed */\n    bottom: calc(1px * var(--vaadin-overlay-viewport-bottom) + 16px);\n    left: 16px;\n  }\n\n  [part='overlay'] {\n    background-color: var(--material-background-color);\n    border-radius: 4px;\n    box-shadow: var(--material-shadow-elevation-4dp);\n    color: var(--material-body-text-color);\n    font-family: var(--material-font-family);\n    font-size: var(--material-body-font-size);\n    font-weight: 400;\n  }\n\n  [part='content'] {\n    padding: 8px 0;\n  }\n\n  [part='backdrop'] {\n    opacity: 0.2;\n    animation: 0.2s vaadin-overlay-backdrop-enter;\n    will-change: opacity;\n  }\n\n  @keyframes vaadin-overlay-backdrop-enter {\n    0% {\n      opacity: 0;\n    }\n  }\n`;\n(0,_vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_3__.registerStyles)('', overlay, {\n  moduleId: 'material-overlay'\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi92YWFkaW4tbWF0ZXJpYWwtc3R5bGVzL21peGlucy9vdmVybGF5LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQUE7QUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL2hvbWUtYXNzaXN0YW50LWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0B2YWFkaW4vdmFhZGluLW1hdGVyaWFsLXN0eWxlcy9taXhpbnMvb3ZlcmxheS5qcz84MjUxIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAoYykgMjAxNyAtIDIwMjMgVmFhZGluIEx0ZC5cbiAqIFRoaXMgcHJvZ3JhbSBpcyBhdmFpbGFibGUgdW5kZXIgQXBhY2hlIExpY2Vuc2UgVmVyc2lvbiAyLjAsIGF2YWlsYWJsZSBhdCBodHRwczovL3ZhYWRpbi5jb20vbGljZW5zZS9cbiAqL1xuaW1wb3J0ICcuLi9jb2xvci5qcyc7XG5pbXBvcnQgJy4uL3R5cG9ncmFwaHkuanMnO1xuaW1wb3J0ICcuLi9zaGFkb3cuanMnO1xuaW1wb3J0IHsgY3NzLCByZWdpc3RlclN0eWxlcyB9IGZyb20gJ0B2YWFkaW4vdmFhZGluLXRoZW1hYmxlLW1peGluL3ZhYWRpbi10aGVtYWJsZS1taXhpbi5qcyc7XG5cbmNvbnN0IG92ZXJsYXkgPSBjc3NgXG4gIDpob3N0IHtcbiAgICB0b3A6IDE2cHg7XG4gICAgcmlnaHQ6IDE2cHg7XG4gICAgLyogVE9ETyAoQGpvdW5pKTogcmVtb3ZlIHVubmVjZXNzYXJ5IG11bHRpcGxpY2F0aW9uIGFmdGVyIGh0dHBzOi8vZ2l0aHViLmNvbS92YWFkaW4vdmFhZGluLW92ZXJsYXkvaXNzdWVzLzkwIGlzIGZpeGVkICovXG4gICAgYm90dG9tOiBjYWxjKDFweCAqIHZhcigtLXZhYWRpbi1vdmVybGF5LXZpZXdwb3J0LWJvdHRvbSkgKyAxNnB4KTtcbiAgICBsZWZ0OiAxNnB4O1xuICB9XG5cbiAgW3BhcnQ9J292ZXJsYXknXSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tbWF0ZXJpYWwtYmFja2dyb3VuZC1jb2xvcik7XG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xuICAgIGJveC1zaGFkb3c6IHZhcigtLW1hdGVyaWFsLXNoYWRvdy1lbGV2YXRpb24tNGRwKTtcbiAgICBjb2xvcjogdmFyKC0tbWF0ZXJpYWwtYm9keS10ZXh0LWNvbG9yKTtcbiAgICBmb250LWZhbWlseTogdmFyKC0tbWF0ZXJpYWwtZm9udC1mYW1pbHkpO1xuICAgIGZvbnQtc2l6ZTogdmFyKC0tbWF0ZXJpYWwtYm9keS1mb250LXNpemUpO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIH1cblxuICBbcGFydD0nY29udGVudCddIHtcbiAgICBwYWRkaW5nOiA4cHggMDtcbiAgfVxuXG4gIFtwYXJ0PSdiYWNrZHJvcCddIHtcbiAgICBvcGFjaXR5OiAwLjI7XG4gICAgYW5pbWF0aW9uOiAwLjJzIHZhYWRpbi1vdmVybGF5LWJhY2tkcm9wLWVudGVyO1xuICAgIHdpbGwtY2hhbmdlOiBvcGFjaXR5O1xuICB9XG5cbiAgQGtleWZyYW1lcyB2YWFkaW4tb3ZlcmxheS1iYWNrZHJvcC1lbnRlciB7XG4gICAgMCUge1xuICAgICAgb3BhY2l0eTogMDtcbiAgICB9XG4gIH1cbmA7XG5cbnJlZ2lzdGVyU3R5bGVzKCcnLCBvdmVybGF5LCB7IG1vZHVsZUlkOiAnbWF0ZXJpYWwtb3ZlcmxheScgfSk7XG5cbmV4cG9ydCB7IG92ZXJsYXkgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/vaadin-material-styles/mixins/overlay.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/vaadin-material-styles/shadow.js":
/*!***************************************************************!*\
  !*** ./node_modules/@vaadin/vaadin-material-styles/shadow.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   shadow: () => (/* binding */ shadow)\n/* harmony export */ });\n/* harmony import */ var _version_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./version.js */ \"./node_modules/@vaadin/vaadin-material-styles/version.js\");\n/* harmony import */ var _vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js */ \"./node_modules/@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js\");\n/* harmony import */ var _global_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./global.js */ \"./node_modules/@vaadin/vaadin-material-styles/global.js\");\n/**\n * @license\n * Copyright (c) 2017 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\n\nconst shadow = (0,_vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_1__.css)`\n  /* prettier-ignore */\n  :host {\n    /* from http://codepen.io/shyndman/pen/c5394ddf2e8b2a5c9185904b57421cdb */\n    --material-shadow-elevation-2dp: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12), 0 3px 1px -2px rgba(0, 0, 0, 0.2);\n    --material-shadow-elevation-3dp: 0 3px 4px 0 rgba(0, 0, 0, 0.14), 0 1px 8px 0 rgba(0, 0, 0, 0.12), 0 3px 3px -2px rgba(0, 0, 0, 0.4);\n    --material-shadow-elevation-4dp: 0 4px 5px 0 rgba(0, 0, 0, 0.14), 0 1px 10px 0 rgba(0, 0, 0, 0.12), 0 2px 4px -1px rgba(0, 0, 0, 0.4);\n    --material-shadow-elevation-6dp: 0 6px 10px 0 rgba(0, 0, 0, 0.14), 0 1px 18px 0 rgba(0, 0, 0, 0.12), 0 3px 5px -1px rgba(0, 0, 0, 0.4);\n    --material-shadow-elevation-8dp: 0 8px 10px 1px rgba(0, 0, 0, 0.14), 0 3px 14px 2px rgba(0, 0, 0, 0.12), 0 5px 5px -3px rgba(0, 0, 0, 0.4);\n    --material-shadow-elevation-12dp: 0 12px 16px 1px rgba(0, 0, 0, 0.14), 0 4px 22px 3px rgba(0, 0, 0, 0.12), 0 6px 7px -4px rgba(0, 0, 0, 0.4);\n    --material-shadow-elevation-16dp: 0 16px 24px 2px rgba(0, 0, 0, 0.14), 0 6px 30px 5px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(0, 0, 0, 0.4);\n    --material-shadow-elevation-24dp: 0 24px 38px 3px rgba(0, 0, 0, 0.14), 0 9px 46px 8px rgba(0, 0, 0, 0.12), 0 11px 15px -7px rgba(0, 0, 0, 0.4);\n  }\n`;\n(0,_global_js__WEBPACK_IMPORTED_MODULE_2__.addMaterialGlobalStyles)('shadow', shadow);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi92YWFkaW4tbWF0ZXJpYWwtc3R5bGVzL3NoYWRvdy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL2hvbWUtYXNzaXN0YW50LWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0B2YWFkaW4vdmFhZGluLW1hdGVyaWFsLXN0eWxlcy9zaGFkb3cuanM/YjU3MSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTcgLSAyMDIzIFZhYWRpbiBMdGQuXG4gKiBUaGlzIHByb2dyYW0gaXMgYXZhaWxhYmxlIHVuZGVyIEFwYWNoZSBMaWNlbnNlIFZlcnNpb24gMi4wLCBhdmFpbGFibGUgYXQgaHR0cHM6Ly92YWFkaW4uY29tL2xpY2Vuc2UvXG4gKi9cbmltcG9ydCAnLi92ZXJzaW9uLmpzJztcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0B2YWFkaW4vdmFhZGluLXRoZW1hYmxlLW1peGluL3ZhYWRpbi10aGVtYWJsZS1taXhpbi5qcyc7XG5pbXBvcnQgeyBhZGRNYXRlcmlhbEdsb2JhbFN0eWxlcyB9IGZyb20gJy4vZ2xvYmFsLmpzJztcblxuY29uc3Qgc2hhZG93ID0gY3NzYFxuICAvKiBwcmV0dGllci1pZ25vcmUgKi9cbiAgOmhvc3Qge1xuICAgIC8qIGZyb20gaHR0cDovL2NvZGVwZW4uaW8vc2h5bmRtYW4vcGVuL2M1Mzk0ZGRmMmU4YjJhNWM5MTg1OTA0YjU3NDIxY2RiICovXG4gICAgLS1tYXRlcmlhbC1zaGFkb3ctZWxldmF0aW9uLTJkcDogMCAycHggMnB4IDAgcmdiYSgwLCAwLCAwLCAwLjE0KSwgMCAxcHggNXB4IDAgcmdiYSgwLCAwLCAwLCAwLjEyKSwgMCAzcHggMXB4IC0ycHggcmdiYSgwLCAwLCAwLCAwLjIpO1xuICAgIC0tbWF0ZXJpYWwtc2hhZG93LWVsZXZhdGlvbi0zZHA6IDAgM3B4IDRweCAwIHJnYmEoMCwgMCwgMCwgMC4xNCksIDAgMXB4IDhweCAwIHJnYmEoMCwgMCwgMCwgMC4xMiksIDAgM3B4IDNweCAtMnB4IHJnYmEoMCwgMCwgMCwgMC40KTtcbiAgICAtLW1hdGVyaWFsLXNoYWRvdy1lbGV2YXRpb24tNGRwOiAwIDRweCA1cHggMCByZ2JhKDAsIDAsIDAsIDAuMTQpLCAwIDFweCAxMHB4IDAgcmdiYSgwLCAwLCAwLCAwLjEyKSwgMCAycHggNHB4IC0xcHggcmdiYSgwLCAwLCAwLCAwLjQpO1xuICAgIC0tbWF0ZXJpYWwtc2hhZG93LWVsZXZhdGlvbi02ZHA6IDAgNnB4IDEwcHggMCByZ2JhKDAsIDAsIDAsIDAuMTQpLCAwIDFweCAxOHB4IDAgcmdiYSgwLCAwLCAwLCAwLjEyKSwgMCAzcHggNXB4IC0xcHggcmdiYSgwLCAwLCAwLCAwLjQpO1xuICAgIC0tbWF0ZXJpYWwtc2hhZG93LWVsZXZhdGlvbi04ZHA6IDAgOHB4IDEwcHggMXB4IHJnYmEoMCwgMCwgMCwgMC4xNCksIDAgM3B4IDE0cHggMnB4IHJnYmEoMCwgMCwgMCwgMC4xMiksIDAgNXB4IDVweCAtM3B4IHJnYmEoMCwgMCwgMCwgMC40KTtcbiAgICAtLW1hdGVyaWFsLXNoYWRvdy1lbGV2YXRpb24tMTJkcDogMCAxMnB4IDE2cHggMXB4IHJnYmEoMCwgMCwgMCwgMC4xNCksIDAgNHB4IDIycHggM3B4IHJnYmEoMCwgMCwgMCwgMC4xMiksIDAgNnB4IDdweCAtNHB4IHJnYmEoMCwgMCwgMCwgMC40KTtcbiAgICAtLW1hdGVyaWFsLXNoYWRvdy1lbGV2YXRpb24tMTZkcDogMCAxNnB4IDI0cHggMnB4IHJnYmEoMCwgMCwgMCwgMC4xNCksIDAgNnB4IDMwcHggNXB4IHJnYmEoMCwgMCwgMCwgMC4xMiksIDAgOHB4IDEwcHggLTVweCByZ2JhKDAsIDAsIDAsIDAuNCk7XG4gICAgLS1tYXRlcmlhbC1zaGFkb3ctZWxldmF0aW9uLTI0ZHA6IDAgMjRweCAzOHB4IDNweCByZ2JhKDAsIDAsIDAsIDAuMTQpLCAwIDlweCA0NnB4IDhweCByZ2JhKDAsIDAsIDAsIDAuMTIpLCAwIDExcHggMTVweCAtN3B4IHJnYmEoMCwgMCwgMCwgMC40KTtcbiAgfVxuYDtcblxuYWRkTWF0ZXJpYWxHbG9iYWxTdHlsZXMoJ3NoYWRvdycsIHNoYWRvdyk7XG5cbmV4cG9ydCB7IHNoYWRvdyB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/vaadin-material-styles/shadow.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/vaadin-material-styles/version.js":
/*!****************************************************************!*\
  !*** ./node_modules/@vaadin/vaadin-material-styles/version.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Material: () => (/* binding */ Material)\n/* harmony export */ });\n/* harmony import */ var _vaadin_component_base_src_define_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @vaadin/component-base/src/define.js */ \"./node_modules/@vaadin/component-base/src/define.js\");\n/**\n * @license\n * Copyright (c) 2017 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\n/**\n * Dummy custom element used for collecting\n * development time usage statistics.\n *\n * @private\n */\nclass Material extends HTMLElement {\n  static get is() {\n    return 'vaadin-material-styles';\n  }\n}\n(0,_vaadin_component_base_src_define_js__WEBPACK_IMPORTED_MODULE_0__.defineCustomElement)(Material);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi92YWFkaW4tbWF0ZXJpYWwtc3R5bGVzL3ZlcnNpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9tZS1hc3Npc3RhbnQtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHZhYWRpbi92YWFkaW4tbWF0ZXJpYWwtc3R5bGVzL3ZlcnNpb24uanM/Yjk2MSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTcgLSAyMDIzIFZhYWRpbiBMdGQuXG4gKiBUaGlzIHByb2dyYW0gaXMgYXZhaWxhYmxlIHVuZGVyIEFwYWNoZSBMaWNlbnNlIFZlcnNpb24gMi4wLCBhdmFpbGFibGUgYXQgaHR0cHM6Ly92YWFkaW4uY29tL2xpY2Vuc2UvXG4gKi9cbmltcG9ydCB7IGRlZmluZUN1c3RvbUVsZW1lbnQgfSBmcm9tICdAdmFhZGluL2NvbXBvbmVudC1iYXNlL3NyYy9kZWZpbmUuanMnO1xuXG4vKipcbiAqIER1bW15IGN1c3RvbSBlbGVtZW50IHVzZWQgZm9yIGNvbGxlY3RpbmdcbiAqIGRldmVsb3BtZW50IHRpbWUgdXNhZ2Ugc3RhdGlzdGljcy5cbiAqXG4gKiBAcHJpdmF0ZVxuICovXG5jbGFzcyBNYXRlcmlhbCBleHRlbmRzIEhUTUxFbGVtZW50IHtcbiAgc3RhdGljIGdldCBpcygpIHtcbiAgICByZXR1cm4gJ3ZhYWRpbi1tYXRlcmlhbC1zdHlsZXMnO1xuICB9XG59XG5cbmRlZmluZUN1c3RvbUVsZW1lbnQoTWF0ZXJpYWwpO1xuXG5leHBvcnQgeyBNYXRlcmlhbCB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/vaadin-material-styles/version.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/vaadin-themable-mixin/register-styles.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@vaadin/vaadin-themable-mixin/register-styles.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addGlobalThemeStyles: () => (/* binding */ addGlobalThemeStyles),\n/* harmony export */   css: () => (/* reexport safe */ _vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_0__.css),\n/* harmony export */   registerStyles: () => (/* reexport safe */ _vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_0__.registerStyles),\n/* harmony export */   unsafeCSS: () => (/* reexport safe */ _vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_0__.unsafeCSS)\n/* harmony export */ });\n/* harmony import */ var _vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vaadin-themable-mixin.js */ \"./node_modules/@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js\");\n/**\n * @license\n * Copyright (c) 2017 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\n/**\n * This is for use internally by Lumo and Material styles.\n *\n * @param {string} id the id to set on the created element, only for informational purposes\n * @param  {CSSResultGroup[]} styles the styles to add\n */\nconst addGlobalThemeStyles = (id, ...styles) => {\n  const styleTag = document.createElement('style');\n  styleTag.id = id;\n  styleTag.textContent = styles.map(style => style.toString()).join('\\n').replace(':host', 'html');\n  document.head.insertAdjacentElement('afterbegin', styleTag);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi92YWFkaW4tdGhlbWFibGUtbWl4aW4vcmVnaXN0ZXItc3R5bGVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBS0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2hvbWUtYXNzaXN0YW50LWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0B2YWFkaW4vdmFhZGluLXRoZW1hYmxlLW1peGluL3JlZ2lzdGVyLXN0eWxlcy5qcz84YTQxIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAoYykgMjAxNyAtIDIwMjMgVmFhZGluIEx0ZC5cbiAqIFRoaXMgcHJvZ3JhbSBpcyBhdmFpbGFibGUgdW5kZXIgQXBhY2hlIExpY2Vuc2UgVmVyc2lvbiAyLjAsIGF2YWlsYWJsZSBhdCBodHRwczovL3ZhYWRpbi5jb20vbGljZW5zZS9cbiAqL1xuZXhwb3J0IHsgcmVnaXN0ZXJTdHlsZXMsIGNzcywgdW5zYWZlQ1NTIH0gZnJvbSAnLi92YWFkaW4tdGhlbWFibGUtbWl4aW4uanMnO1xuXG4vKipcbiAqIFRoaXMgaXMgZm9yIHVzZSBpbnRlcm5hbGx5IGJ5IEx1bW8gYW5kIE1hdGVyaWFsIHN0eWxlcy5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gaWQgdGhlIGlkIHRvIHNldCBvbiB0aGUgY3JlYXRlZCBlbGVtZW50LCBvbmx5IGZvciBpbmZvcm1hdGlvbmFsIHB1cnBvc2VzXG4gKiBAcGFyYW0gIHtDU1NSZXN1bHRHcm91cFtdfSBzdHlsZXMgdGhlIHN0eWxlcyB0byBhZGRcbiAqL1xuZXhwb3J0IGNvbnN0IGFkZEdsb2JhbFRoZW1lU3R5bGVzID0gKGlkLCAuLi5zdHlsZXMpID0+IHtcbiAgY29uc3Qgc3R5bGVUYWcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpO1xuICBzdHlsZVRhZy5pZCA9IGlkO1xuICBzdHlsZVRhZy50ZXh0Q29udGVudCA9IHN0eWxlc1xuICAgIC5tYXAoKHN0eWxlKSA9PiBzdHlsZS50b1N0cmluZygpKVxuICAgIC5qb2luKCdcXG4nKVxuICAgIC5yZXBsYWNlKCc6aG9zdCcsICdodG1sJyk7XG5cbiAgZG9jdW1lbnQuaGVhZC5pbnNlcnRBZGphY2VudEVsZW1lbnQoJ2FmdGVyYmVnaW4nLCBzdHlsZVRhZyk7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/vaadin-themable-mixin/register-styles.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ThemableMixin: () => (/* binding */ ThemableMixin),\n/* harmony export */   __themeRegistry: () => (/* binding */ themeRegistry),\n/* harmony export */   css: () => (/* reexport safe */ lit__WEBPACK_IMPORTED_MODULE_0__.css),\n/* harmony export */   registerStyles: () => (/* binding */ registerStyles),\n/* harmony export */   unsafeCSS: () => (/* reexport safe */ lit__WEBPACK_IMPORTED_MODULE_0__.unsafeCSS)\n/* harmony export */ });\n/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit */ \"./node_modules/lit/index.js\");\n/* harmony import */ var _vaadin_theme_property_mixin_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./vaadin-theme-property-mixin.js */ \"./node_modules/@vaadin/vaadin-themable-mixin/vaadin-theme-property-mixin.js\");\n/**\n * @license\n * Copyright (c) 2017 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\n\n\n/**\n * @typedef {Object} Theme\n * @property {string} themeFor\n * @property {CSSResult[]} styles\n * @property {string | string[]} [include]\n * @property {string} [moduleId]\n *\n * @typedef {CSSResult[] | CSSResult} CSSResultGroup\n */\n\n/**\n * @type {Theme[]}\n */\nconst themeRegistry = [];\n\n/**\n * Check if the custom element type has themes applied.\n * @param {Function} elementClass\n * @returns {boolean}\n */\nfunction classHasThemes(elementClass) {\n  return elementClass && Object.prototype.hasOwnProperty.call(elementClass, '__themes');\n}\n\n/**\n * Check if the custom element type has themes applied.\n * @param {string} tagName\n * @returns {boolean}\n */\nfunction hasThemes(tagName) {\n  return classHasThemes(customElements.get(tagName));\n}\n\n/**\n * Flattens the styles into a single array of styles.\n * @param {CSSResultGroup} styles\n * @param {CSSResult[]} result\n * @returns {CSSResult[]}\n */\nfunction flattenStyles(styles = []) {\n  return [styles].flat(Infinity).filter(style => {\n    if (style instanceof lit__WEBPACK_IMPORTED_MODULE_0__.CSSResult) {\n      return true;\n    }\n    console.warn('An item in styles is not of type CSSResult. Use `unsafeCSS` or `css`.');\n    return false;\n  });\n}\n\n/**\n * Registers CSS styles for a component type. Make sure to register the styles before\n * the first instance of a component of the type is attached to DOM.\n *\n * @param {string} themeFor The local/tag name of the component type to register the styles for\n * @param {CSSResultGroup} styles The CSS style rules to be registered for the component type\n * matching themeFor and included in the local scope of each component instance\n * @param {{moduleId?: string, include?: string | string[]}} options Additional options\n * @return {void}\n */\nfunction registerStyles(themeFor, styles, options = {}) {\n  if (themeFor) {\n    if (hasThemes(themeFor)) {\n      console.warn(`The custom element definition for \"${themeFor}\"\n      was finalized before a style module was registered.\n      Make sure to add component specific style modules before\n      importing the corresponding custom element.`);\n    }\n  }\n  styles = flattenStyles(styles);\n  if (window.Vaadin && window.Vaadin.styleModules) {\n    window.Vaadin.styleModules.registerStyles(themeFor, styles, options);\n  } else {\n    themeRegistry.push({\n      themeFor,\n      styles,\n      include: options.include,\n      moduleId: options.moduleId\n    });\n  }\n}\n\n/**\n * Returns all registered themes. By default the themeRegistry is returned as is.\n * In case the style-modules adapter is imported, the themes are obtained from there instead\n * @returns {Theme[]}\n */\nfunction getAllThemes() {\n  if (window.Vaadin && window.Vaadin.styleModules) {\n    return window.Vaadin.styleModules.getAllThemes();\n  }\n  return themeRegistry;\n}\n\n/**\n * Returns true if the themeFor string matches the tag name\n * @param {string} themeFor\n * @param {string} tagName\n * @returns {boolean}\n */\nfunction matchesThemeFor(themeFor, tagName) {\n  return (themeFor || '').split(' ').some(themeForToken => {\n    return new RegExp(`^${themeForToken.split('*').join('.*')}$`, 'u').test(tagName);\n  });\n}\n\n/**\n * Maps the moduleName to an include priority number which is used for\n * determining the order in which styles are applied.\n * @param {string} moduleName\n * @returns {number}\n */\nfunction getIncludePriority(moduleName = '') {\n  let includePriority = 0;\n  if (moduleName.startsWith('lumo-') || moduleName.startsWith('material-')) {\n    includePriority = 1;\n  } else if (moduleName.startsWith('vaadin-')) {\n    includePriority = 2;\n  }\n  return includePriority;\n}\n\n/**\n * Gets an array of CSSResults matching the include property of the theme.\n * @param {Theme} theme\n * @returns {CSSResult[]}\n */\nfunction getIncludedStyles(theme) {\n  const includedStyles = [];\n  if (theme.include) {\n    [].concat(theme.include).forEach(includeModuleId => {\n      const includedTheme = getAllThemes().find(s => s.moduleId === includeModuleId);\n      if (includedTheme) {\n        includedStyles.push(...getIncludedStyles(includedTheme), ...includedTheme.styles);\n      } else {\n        console.warn(`Included moduleId ${includeModuleId} not found in style registry`);\n      }\n    }, theme.styles);\n  }\n  return includedStyles;\n}\n\n/**\n * Includes the styles to the template.\n * @param {CSSResult[]} styles\n * @param {HTMLTemplateElement} template\n */\nfunction addStylesToTemplate(styles, template) {\n  const styleEl = document.createElement('style');\n  styleEl.innerHTML = styles.map(style => style.cssText).join('\\n');\n  template.content.appendChild(styleEl);\n}\n\n/**\n * Returns an array of themes that should be used for styling a component matching\n * the tag name. The array is sorted by the include order.\n * @param {string} tagName\n * @returns {Theme[]}\n */\nfunction getThemes(tagName) {\n  const defaultModuleName = `${tagName}-default-theme`;\n  const themes = getAllThemes()\n  // Filter by matching themeFor properties\n  .filter(theme => theme.moduleId !== defaultModuleName && matchesThemeFor(theme.themeFor, tagName)).map(theme => ({\n    ...theme,\n    // Prepend styles from included themes\n    styles: [...getIncludedStyles(theme), ...theme.styles],\n    // Map moduleId to includePriority\n    includePriority: getIncludePriority(theme.moduleId)\n  }))\n  // Sort by includePriority\n  .sort((themeA, themeB) => themeB.includePriority - themeA.includePriority);\n  if (themes.length > 0) {\n    return themes;\n  }\n  // No theme modules found, return the default module if it exists\n  return getAllThemes().filter(theme => theme.moduleId === defaultModuleName);\n}\n\n/**\n * @polymerMixin\n * @mixes ThemePropertyMixin\n */\nconst ThemableMixin = superClass => class VaadinThemableMixin extends (0,_vaadin_theme_property_mixin_js__WEBPACK_IMPORTED_MODULE_1__.ThemePropertyMixin)(superClass) {\n  /**\n   * Covers PolymerElement based component styling\n   * @protected\n   */\n  static finalize() {\n    super.finalize();\n\n    // Make sure not to run the logic intended for PolymerElement when LitElement is used.\n    if (this.elementStyles) {\n      return;\n    }\n    const template = this.prototype._template;\n    if (!template || classHasThemes(this)) {\n      return;\n    }\n    addStylesToTemplate(this.getStylesForThis(), template);\n  }\n\n  /**\n   * Covers LitElement based component styling\n   *\n   * @protected\n   */\n  static finalizeStyles(styles) {\n    // The \"styles\" object originates from the \"static get styles()\" function of\n    // a LitElement based component. The theme styles are added after it\n    // so that they can override the component styles.\n    const themeStyles = this.getStylesForThis();\n    return styles ? [...super.finalizeStyles(styles), ...themeStyles] : themeStyles;\n  }\n\n  /**\n   * Get styles for the component type\n   *\n   * @private\n   */\n  static getStylesForThis() {\n    const parent = Object.getPrototypeOf(this.prototype);\n    const inheritedThemes = (parent ? parent.constructor.__themes : []) || [];\n    this.__themes = [...inheritedThemes, ...getThemes(this.is)];\n    const themeStyles = this.__themes.flatMap(theme => theme.styles);\n    // Remove duplicates\n    return themeStyles.filter((style, index) => index === themeStyles.lastIndexOf(style));\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/vaadin-themable-mixin/vaadin-theme-property-mixin.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@vaadin/vaadin-themable-mixin/vaadin-theme-property-mixin.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ThemePropertyMixin: () => (/* binding */ ThemePropertyMixin)\n/* harmony export */ });\n/**\n * @license\n * Copyright (c) 2017 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n/**\n * @polymerMixin\n */\nconst ThemePropertyMixin = superClass => class VaadinThemePropertyMixin extends superClass {\n  static get properties() {\n    return {\n      /**\n       * Helper property with theme attribute value facilitating propagation\n       * in shadow DOM.\n       *\n       * Enables the component implementation to propagate the `theme`\n       * attribute value to the sub-components in Shadow DOM by binding\n       * the sub-component's \"theme\" attribute to the `theme` property of\n       * the host.\n       *\n       * **NOTE:** Extending the mixin only provides the property for binding,\n       * and does not make the propagation alone.\n       *\n       * See [Styling Components: Sub-components](https://vaadin.com/docs/latest/styling/styling-components/#sub-components).\n       * page for more information.\n       *\n       * @protected\n       */\n      _theme: {\n        type: String,\n        readOnly: true\n      }\n    };\n  }\n  static get observedAttributes() {\n    return [...super.observedAttributes, 'theme'];\n  }\n\n  /** @protected */\n  attributeChangedCallback(name, oldValue, newValue) {\n    super.attributeChangedCallback(name, oldValue, newValue);\n    if (name === 'theme') {\n      this._set_theme(newValue);\n    }\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi92YWFkaW4tdGhlbWFibGUtbWl4aW4vdmFhZGluLXRoZW1lLXByb3BlcnR5LW1peGluLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9tZS1hc3Npc3RhbnQtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHZhYWRpbi92YWFkaW4tdGhlbWFibGUtbWl4aW4vdmFhZGluLXRoZW1lLXByb3BlcnR5LW1peGluLmpzPzU4MzIiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IChjKSAyMDE3IC0gMjAyMyBWYWFkaW4gTHRkLlxuICogVGhpcyBwcm9ncmFtIGlzIGF2YWlsYWJsZSB1bmRlciBBcGFjaGUgTGljZW5zZSBWZXJzaW9uIDIuMCwgYXZhaWxhYmxlIGF0IGh0dHBzOi8vdmFhZGluLmNvbS9saWNlbnNlL1xuICovXG4vKipcbiAqIEBwb2x5bWVyTWl4aW5cbiAqL1xuZXhwb3J0IGNvbnN0IFRoZW1lUHJvcGVydHlNaXhpbiA9IChzdXBlckNsYXNzKSA9PlxuICBjbGFzcyBWYWFkaW5UaGVtZVByb3BlcnR5TWl4aW4gZXh0ZW5kcyBzdXBlckNsYXNzIHtcbiAgICBzdGF0aWMgZ2V0IHByb3BlcnRpZXMoKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICAvKipcbiAgICAgICAgICogSGVscGVyIHByb3BlcnR5IHdpdGggdGhlbWUgYXR0cmlidXRlIHZhbHVlIGZhY2lsaXRhdGluZyBwcm9wYWdhdGlvblxuICAgICAgICAgKiBpbiBzaGFkb3cgRE9NLlxuICAgICAgICAgKlxuICAgICAgICAgKiBFbmFibGVzIHRoZSBjb21wb25lbnQgaW1wbGVtZW50YXRpb24gdG8gcHJvcGFnYXRlIHRoZSBgdGhlbWVgXG4gICAgICAgICAqIGF0dHJpYnV0ZSB2YWx1ZSB0byB0aGUgc3ViLWNvbXBvbmVudHMgaW4gU2hhZG93IERPTSBieSBiaW5kaW5nXG4gICAgICAgICAqIHRoZSBzdWItY29tcG9uZW50J3MgXCJ0aGVtZVwiIGF0dHJpYnV0ZSB0byB0aGUgYHRoZW1lYCBwcm9wZXJ0eSBvZlxuICAgICAgICAgKiB0aGUgaG9zdC5cbiAgICAgICAgICpcbiAgICAgICAgICogKipOT1RFOioqIEV4dGVuZGluZyB0aGUgbWl4aW4gb25seSBwcm92aWRlcyB0aGUgcHJvcGVydHkgZm9yIGJpbmRpbmcsXG4gICAgICAgICAqIGFuZCBkb2VzIG5vdCBtYWtlIHRoZSBwcm9wYWdhdGlvbiBhbG9uZS5cbiAgICAgICAgICpcbiAgICAgICAgICogU2VlIFtTdHlsaW5nIENvbXBvbmVudHM6IFN1Yi1jb21wb25lbnRzXShodHRwczovL3ZhYWRpbi5jb20vZG9jcy9sYXRlc3Qvc3R5bGluZy9zdHlsaW5nLWNvbXBvbmVudHMvI3N1Yi1jb21wb25lbnRzKS5cbiAgICAgICAgICogcGFnZSBmb3IgbW9yZSBpbmZvcm1hdGlvbi5cbiAgICAgICAgICpcbiAgICAgICAgICogQHByb3RlY3RlZFxuICAgICAgICAgKi9cbiAgICAgICAgX3RoZW1lOiB7XG4gICAgICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgICAgIHJlYWRPbmx5OiB0cnVlLFxuICAgICAgICB9LFxuICAgICAgfTtcbiAgICB9XG5cbiAgICBzdGF0aWMgZ2V0IG9ic2VydmVkQXR0cmlidXRlcygpIHtcbiAgICAgIHJldHVybiBbLi4uc3VwZXIub2JzZXJ2ZWRBdHRyaWJ1dGVzLCAndGhlbWUnXTtcbiAgICB9XG5cbiAgICAvKiogQHByb3RlY3RlZCAqL1xuICAgIGF0dHJpYnV0ZUNoYW5nZWRDYWxsYmFjayhuYW1lLCBvbGRWYWx1ZSwgbmV3VmFsdWUpIHtcbiAgICAgIHN1cGVyLmF0dHJpYnV0ZUNoYW5nZWRDYWxsYmFjayhuYW1lLCBvbGRWYWx1ZSwgbmV3VmFsdWUpO1xuXG4gICAgICBpZiAobmFtZSA9PT0gJ3RoZW1lJykge1xuICAgICAgICB0aGlzLl9zZXRfdGhlbWUobmV3VmFsdWUpO1xuICAgICAgfVxuICAgIH1cbiAgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/vaadin-themable-mixin/vaadin-theme-property-mixin.js\n");

/***/ }),

/***/ "./node_modules/lit/async-directive.js":
/*!*********************************************!*\
  !*** ./node_modules/lit/async-directive.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AsyncDirective: () => (/* reexport safe */ lit_html_async_directive_js__WEBPACK_IMPORTED_MODULE_0__.AsyncDirective),
/* harmony export */   Directive: () => (/* reexport safe */ lit_html_async_directive_js__WEBPACK_IMPORTED_MODULE_0__.Directive),
/* harmony export */   PartType: () => (/* reexport safe */ lit_html_async_directive_js__WEBPACK_IMPORTED_MODULE_0__.PartType),
/* harmony export */   directive: () => (/* reexport safe */ lit_html_async_directive_js__WEBPACK_IMPORTED_MODULE_0__.directive)
/* harmony export */ });
/* harmony import */ var lit_html_async_directive_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit-html/async-directive.js */ "./node_modules/lit-html/development/async-directive.js");


/***/ })

};
