{"ast":null,"code":"import { fireEvent } from \"../../common/dom/fire_event\";\nexport const loadGenericDialog = () => import(\"./dialog-box\");\nconst showDialogHelper = (element, dialogParams, extra) => new Promise(resolve => {\n  const origCancel = dialogParams.cancel;\n  const origConfirm = dialogParams.confirm;\n  fireEvent(element, \"show-dialog\", {\n    dialogTag: \"dialog-box\",\n    dialogImport: loadGenericDialog,\n    dialogParams: {\n      ...dialogParams,\n      ...extra,\n      cancel: () => {\n        resolve(extra !== null && extra !== void 0 && extra.prompt ? null : false);\n        if (origCancel) {\n          origCancel();\n        }\n      },\n      confirm: out => {\n        resolve(extra !== null && extra !== void 0 && extra.prompt ? out : true);\n        if (origConfirm) {\n          origConfirm(out);\n        }\n      }\n    }\n  });\n});\nexport const showAlertDialog = (element, dialogParams) => showDialogHelper(element, dialogParams);\nexport const showConfirmationDialog = (element, dialogParams) => showDialogHelper(element, dialogParams, {\n  confirmation: true\n});\nexport const showPromptDialog = (element, dialogParams) => showDialogHelper(element, dialogParams, {\n  prompt: true\n});","map":{"version":3,"names":["fireEvent","loadGenericDialog","showDialogHelper","element","dialogParams","extra","Promise","resolve","origCancel","cancel","origConfirm","confirm","dialogTag","dialogImport","prompt","out","showAlertDialog","showConfirmationDialog","confirmation","showPromptDialog"],"sources":["/workspaces/frontend/src/dialogs/generic/show-dialog-box.ts"],"sourcesContent":["import { TemplateResult } from \"lit\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\n\ninterface BaseDialogBoxParams {\n  confirmText?: string;\n  text?: string | TemplateResult;\n  title?: string;\n  warning?: boolean;\n}\n\nexport interface AlertDialogParams extends BaseDialogBoxParams {\n  confirm?: () => void;\n}\n\nexport interface ConfirmationDialogParams extends BaseDialogBoxParams {\n  dismissText?: string;\n  confirm?: () => void;\n  cancel?: () => void;\n  destructive?: boolean;\n}\n\nexport interface PromptDialogParams extends BaseDialogBoxParams {\n  inputLabel?: string;\n  inputType?: string;\n  defaultValue?: string;\n  placeholder?: string;\n  confirm?: (out?: string) => void;\n  cancel?: () => void;\n  inputMin?: number | string;\n  inputMax?: number | string;\n}\n\nexport interface DialogBoxParams\n  extends ConfirmationDialogParams,\n    PromptDialogParams {\n  confirm?: (out?: string) => void;\n  confirmation?: boolean;\n  prompt?: boolean;\n}\n\nexport const loadGenericDialog = () => import(\"./dialog-box\");\n\nconst showDialogHelper = (\n  element: HTMLElement,\n  dialogParams: DialogBoxParams,\n  extra?: {\n    confirmation?: DialogBoxParams[\"confirmation\"];\n    prompt?: DialogBoxParams[\"prompt\"];\n  }\n) =>\n  new Promise((resolve) => {\n    const origCancel = dialogParams.cancel;\n    const origConfirm = dialogParams.confirm;\n\n    fireEvent(element, \"show-dialog\", {\n      dialogTag: \"dialog-box\",\n      dialogImport: loadGenericDialog,\n      dialogParams: {\n        ...dialogParams,\n        ...extra,\n        cancel: () => {\n          resolve(extra?.prompt ? null : false);\n          if (origCancel) {\n            origCancel();\n          }\n        },\n        confirm: (out) => {\n          resolve(extra?.prompt ? out : true);\n          if (origConfirm) {\n            origConfirm(out);\n          }\n        },\n      },\n    });\n  });\n\nexport const showAlertDialog = (\n  element: HTMLElement,\n  dialogParams: AlertDialogParams\n) => showDialogHelper(element, dialogParams);\n\nexport const showConfirmationDialog = (\n  element: HTMLElement,\n  dialogParams: ConfirmationDialogParams\n) =>\n  showDialogHelper(element, dialogParams, {\n    confirmation: true,\n  }) as Promise<boolean>;\n\nexport const showPromptDialog = (\n  element: HTMLElement,\n  dialogParams: PromptDialogParams\n) =>\n  showDialogHelper(element, dialogParams, { prompt: true }) as Promise<\n    null | string\n  >;\n"],"mappings":"AACA,SAASA,SAAS,QAAQ,6BAA6B;AAuCvD,OAAO,MAAMC,iBAAiB,GAAGA,CAAA,KAAM,MAAM,CAAC,cAAc,CAAC;AAE7D,MAAMC,gBAAgB,GAAGA,CACvBC,OAAoB,EACpBC,YAA6B,EAC7BC,KAGC,KAED,IAAIC,OAAO,CAAEC,OAAO,IAAK;EACvB,MAAMC,UAAU,GAAGJ,YAAY,CAACK,MAAM;EACtC,MAAMC,WAAW,GAAGN,YAAY,CAACO,OAAO;EAExCX,SAAS,CAACG,OAAO,EAAE,aAAa,EAAE;IAChCS,SAAS,EAAE,YAAY;IACvBC,YAAY,EAAEZ,iBAAiB;IAC/BG,YAAY,EAAE;MACZ,GAAGA,YAAY;MACf,GAAGC,KAAK;MACRI,MAAM,EAAEA,CAAA,KAAM;QACZF,OAAO,CAACF,KAAK,aAALA,KAAK,eAALA,KAAK,CAAES,MAAM,GAAG,IAAI,GAAG,KAAK,CAAC;QACrC,IAAIN,UAAU,EAAE;UACdA,UAAU,CAAC,CAAC;QACd;MACF,CAAC;MACDG,OAAO,EAAGI,GAAG,IAAK;QAChBR,OAAO,CAACF,KAAK,aAALA,KAAK,eAALA,KAAK,CAAES,MAAM,GAAGC,GAAG,GAAG,IAAI,CAAC;QACnC,IAAIL,WAAW,EAAE;UACfA,WAAW,CAACK,GAAG,CAAC;QAClB;MACF;IACF;EACF,CAAC,CAAC;AACJ,CAAC,CAAC;AAEJ,OAAO,MAAMC,eAAe,GAAGA,CAC7Bb,OAAoB,EACpBC,YAA+B,KAC5BF,gBAAgB,CAACC,OAAO,EAAEC,YAAY,CAAC;AAE5C,OAAO,MAAMa,sBAAsB,GAAGA,CACpCd,OAAoB,EACpBC,YAAsC,KAEtCF,gBAAgB,CAACC,OAAO,EAAEC,YAAY,EAAE;EACtCc,YAAY,EAAE;AAChB,CAAC,CAAqB;AAExB,OAAO,MAAMC,gBAAgB,GAAGA,CAC9BhB,OAAoB,EACpBC,YAAgC,KAEhCF,gBAAgB,CAACC,OAAO,EAAEC,YAAY,EAAE;EAAEU,MAAM,EAAE;AAAK,CAAC,CAEvD"},"metadata":{},"sourceType":"module","externalDependencies":[]}