{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _regeneratorRuntime from \"@babel/runtime/helpers/regeneratorRuntime\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _templateObject, _templateObject2;\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.object.values.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport \"../../../components/ha-card\";\nimport { fetchStatistics, getDisplayUnit, getStatisticMetadata } from \"../../../data/recorder\";\nimport { findEntities } from \"../common/find-entities\";\nimport { hasConfigOrEntitiesChanged } from \"../common/has-changed\";\nimport { processConfigEntities } from \"../common/process-config-entities\";\nexport var DEFAULT_DAYS_TO_SHOW = 30;\nexport var HuiStatisticsGraphCard = _decorate([customElement(\"hui-statistics-graph-card\")], function (_initialize, _LitElement) {\n  var HuiStatisticsGraphCard = /*#__PURE__*/function (_LitElement2) {\n    _inherits(HuiStatisticsGraphCard, _LitElement2);\n    function HuiStatisticsGraphCard() {\n      var _this;\n      _classCallCheck(this, HuiStatisticsGraphCard);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, HuiStatisticsGraphCard, [].concat(args));\n      _initialize(_assertThisInitialized(_this));\n      return _this;\n    }\n    return _createClass(HuiStatisticsGraphCard);\n  }(_LitElement);\n  return {\n    F: HuiStatisticsGraphCard,\n    d: [{\n      kind: \"method\",\n      static: true,\n      key: \"getConfigElement\",\n      value: function () {\n        var _getConfigElement = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return import(\"../editor/config-elements/hui-statistics-graph-card-editor\");\n              case 2:\n                return _context.abrupt(\"return\", document.createElement(\"hui-statistics-graph-card-editor\"));\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee);\n        }));\n        function getConfigElement() {\n          return _getConfigElement.apply(this, arguments);\n        }\n        return getConfigElement;\n      }()\n    }, {\n      kind: \"method\",\n      static: true,\n      key: \"getStubConfig\",\n      value: function getStubConfig(hass, entities, entitiesFill) {\n        var includeDomains = [\"sensor\"];\n        var maxEntities = 1;\n        var foundEntities = findEntities(hass, maxEntities, entities, entitiesFill, includeDomains, function (stateObj) {\n          return \"state_class\" in stateObj.attributes;\n        });\n        return {\n          type: \"statistics-graph\",\n          entities: foundEntities.length ? [foundEntities[0]] : []\n        };\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_config\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_statistics\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_metadata\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_unit\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_entities\",\n      value: function value() {\n        return [];\n      }\n    }, {\n      kind: \"field\",\n      key: \"_names\",\n      value: function value() {\n        return {};\n      }\n    }, {\n      kind: \"field\",\n      key: \"_interval\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_statTypes\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"disconnectedCallback\",\n      value: function disconnectedCallback() {\n        _get(_getPrototypeOf(HuiStatisticsGraphCard.prototype), \"disconnectedCallback\", this).call(this);\n        if (this._interval) {\n          clearInterval(this._interval);\n          this._interval = undefined;\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"connectedCallback\",\n      value: function connectedCallback() {\n        _get(_getPrototypeOf(HuiStatisticsGraphCard.prototype), \"connectedCallback\", this).call(this);\n        if (!this.hasUpdated) {\n          return;\n        }\n        this._setFetchStatisticsTimer();\n      }\n    }, {\n      kind: \"method\",\n      key: \"getCardSize\",\n      value: function getCardSize() {\n        var _this$_config, _this$_config2, _this$_entities;\n        return 5 + ((_this$_config = this._config) !== null && _this$_config !== void 0 && _this$_config.title ? 2 : 0) + (!((_this$_config2 = this._config) !== null && _this$_config2 !== void 0 && _this$_config2.hide_legend) ? ((_this$_entities = this._entities) === null || _this$_entities === void 0 ? void 0 : _this$_entities.length) || 0 : 0);\n      }\n    }, {\n      kind: \"method\",\n      key: \"setConfig\",\n      value: function setConfig(config) {\n        var _this2 = this;\n        if (!config.entities || !Array.isArray(config.entities)) {\n          throw new Error(\"Entities need to be an array\");\n        }\n        if (!config.entities.length) {\n          throw new Error(\"You must include at least one entity\");\n        }\n        var configEntities = config.entities ? processConfigEntities(config.entities, false) : [];\n        this._entities = [];\n        configEntities.forEach(function (entity) {\n          _this2._entities.push(entity.entity);\n          if (entity.name) {\n            _this2._names[entity.entity] = entity.name;\n          }\n        });\n        if (typeof config.stat_types === \"string\") {\n          this._statTypes = [config.stat_types];\n        } else if (!config.stat_types) {\n          this._statTypes = [\"change\", \"state\", \"sum\", \"min\", \"max\", \"mean\"];\n        } else {\n          this._statTypes = config.stat_types;\n        }\n        this._config = config;\n      }\n    }, {\n      kind: \"method\",\n      key: \"shouldUpdate\",\n      value: function shouldUpdate(changedProps) {\n        return hasConfigOrEntitiesChanged(this, changedProps) || changedProps.size > 1 || !changedProps.has(\"hass\");\n      }\n    }, {\n      kind: \"method\",\n      key: \"willUpdate\",\n      value: function willUpdate(changedProps) {\n        var _this3 = this;\n        _get(_getPrototypeOf(HuiStatisticsGraphCard.prototype), \"willUpdate\", this).call(this, changedProps);\n        if (!this._config || !changedProps.has(\"_config\")) {\n          return;\n        }\n        var oldConfig = changedProps.get(\"_config\");\n        if (changedProps.has(\"_config\") && (oldConfig === null || oldConfig === void 0 ? void 0 : oldConfig.entities) !== this._config.entities) {\n          this._getStatisticsMetaData(this._entities).then(function () {\n            _this3._setFetchStatisticsTimer();\n          });\n          return;\n        }\n        if (changedProps.has(\"_config\") && ((oldConfig === null || oldConfig === void 0 ? void 0 : oldConfig.stat_types) !== this._config.stat_types || (oldConfig === null || oldConfig === void 0 ? void 0 : oldConfig.days_to_show) !== this._config.days_to_show || (oldConfig === null || oldConfig === void 0 ? void 0 : oldConfig.period) !== this._config.period || (oldConfig === null || oldConfig === void 0 ? void 0 : oldConfig.unit) !== this._config.unit)) {\n          this._setFetchStatisticsTimer();\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_setFetchStatisticsTimer\",\n      value: function _setFetchStatisticsTimer() {\n        var _this4 = this;\n        this._getStatistics();\n        // statistics are created every hour\n        clearInterval(this._interval);\n        this._interval = window.setInterval(function () {\n          return _this4._getStatistics();\n        }, this._intervalTimeout);\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this.hass || !this._config) {\n          return nothing;\n        }\n        return html(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      <ha-card .header=\", \">\\n        <div\\n          class=\\\"content \", \"\\\"\\n        >\\n          <statistics-chart\\n            .hass=\", \"\\n            .isLoadingData=\", \"\\n            .statisticsData=\", \"\\n            .metadata=\", \"\\n            .period=\", \"\\n            .chartType=\", \"\\n            .statTypes=\", \"\\n            .names=\", \"\\n            .unit=\", \"\\n            .hideLegend=\", \"\\n            .logarithmicScale=\", \"\\n          ></statistics-chart>\\n        </div>\\n      </ha-card>\\n    \"])), this._config.title, classMap({\n          \"has-header\": !!this._config.title\n        }), this.hass, !this._statistics, this._statistics, this._metadata, this._config.period, this._config.chart_type || \"line\", this._statTypes, this._names, this._unit, this._config.hide_legend || false, this._config.logarithmic_scale || false);\n      }\n    }, {\n      kind: \"get\",\n      key: \"_intervalTimeout\",\n      value: function _intervalTimeout() {\n        var _this$_config3;\n        return (((_this$_config3 = this._config) === null || _this$_config3 === void 0 ? void 0 : _this$_config3.period) === \"5minute\" ? 5 : 60) * 1000 * 60;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_getStatisticsMetaData\",\n      value: function () {\n        var _getStatisticsMetaData2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(statisticIds) {\n          var statsMetadataArray, statisticsMetaData;\n          return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n            while (1) switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return getStatisticMetadata(this.hass, statisticIds);\n              case 2:\n                statsMetadataArray = _context2.sent;\n                statisticsMetaData = {};\n                statsMetadataArray.forEach(function (x) {\n                  statisticsMetaData[x.statistic_id] = x;\n                });\n                this._metadata = statisticsMetaData;\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }, _callee2, this);\n        }));\n        function _getStatisticsMetaData(_x) {\n          return _getStatisticsMetaData2.apply(this, arguments);\n        }\n        return _getStatisticsMetaData;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"_getStatistics\",\n      value: function () {\n        var _getStatistics2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n          var _this5 = this;\n          var startDate, unitClass, metadata, _metadata, unitconfig, statistics;\n          return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n            while (1) switch (_context3.prev = _context3.next) {\n              case 0:\n                startDate = new Date();\n                startDate.setTime(startDate.getTime() - 1000 * 60 * 60 * (24 * (this._config.days_to_show || DEFAULT_DAYS_TO_SHOW) + 1));\n                _context3.prev = 2;\n                if (this._config.unit && this._metadata) {\n                  metadata = Object.values(this._metadata).find(function (metaData) {\n                    return getDisplayUnit(_this5.hass, metaData === null || metaData === void 0 ? void 0 : metaData.statistic_id, metaData) === _this5._config.unit;\n                  });\n                  if (metadata) {\n                    unitClass = metadata.unit_class;\n                    this._unit = this._config.unit;\n                  }\n                }\n                if (!unitClass && this._metadata) {\n                  _metadata = this._metadata[this._entities[0]];\n                  unitClass = _metadata === null || _metadata === void 0 ? void 0 : _metadata.unit_class;\n                  this._unit = unitClass ? getDisplayUnit(this.hass, _metadata.statistic_id, _metadata) || undefined : undefined;\n                }\n                unitconfig = unitClass ? _defineProperty({}, unitClass, this._unit) : undefined;\n                _context3.next = 8;\n                return fetchStatistics(this.hass, startDate, undefined, this._entities, this._config.period, unitconfig, this._statTypes);\n              case 8:\n                statistics = _context3.sent;\n                this._statistics = {};\n                this._entities.forEach(function (id) {\n                  if (id in statistics) {\n                    _this5._statistics[id] = statistics[id];\n                  }\n                });\n                _context3.next = 16;\n                break;\n              case 13:\n                _context3.prev = 13;\n                _context3.t0 = _context3[\"catch\"](2);\n                this._statistics = undefined;\n              case 16:\n              case \"end\":\n                return _context3.stop();\n            }\n          }, _callee3, this, [[2, 13]]);\n        }));\n        function _getStatistics() {\n          return _getStatistics2.apply(this, arguments);\n        }\n        return _getStatistics;\n      }()\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n      ha-card {\\n        height: 100%;\\n      }\\n      .content {\\n        padding: 16px;\\n      }\\n      .has-header {\\n        padding-top: 0;\\n      }\\n    \"])));\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","nothing","customElement","property","state","classMap","fetchStatistics","getDisplayUnit","getStatisticMetadata","findEntities","hasConfigOrEntitiesChanged","processConfigEntities","DEFAULT_DAYS_TO_SHOW","HuiStatisticsGraphCard","_decorate","_initialize","_LitElement","_LitElement2","_inherits","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_assertThisInitialized","_createClass","F","d","kind","static","key","value","_getConfigElement","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","abrupt","document","createElement","stop","getConfigElement","apply","getStubConfig","hass","entities","entitiesFill","includeDomains","maxEntities","foundEntities","stateObj","attributes","type","decorators","attribute","disconnectedCallback","_get","_getPrototypeOf","prototype","call","_interval","clearInterval","undefined","connectedCallback","hasUpdated","_setFetchStatisticsTimer","getCardSize","_this$_config","_this$_config2","_this$_entities","_config","title","hide_legend","_entities","setConfig","config","_this2","isArray","Error","configEntities","forEach","entity","push","name","_names","stat_types","_statTypes","shouldUpdate","changedProps","size","has","willUpdate","_this3","oldConfig","get","_getStatisticsMetaData","then","days_to_show","period","unit","_this4","_getStatistics","window","setInterval","_intervalTimeout","render","_templateObject","_taggedTemplateLiteral","_statistics","_metadata","chart_type","_unit","logarithmic_scale","_this$_config3","_getStatisticsMetaData2","_callee2","statisticIds","statsMetadataArray","statisticsMetaData","_callee2$","_context2","sent","x","statistic_id","_x","_getStatistics2","_callee3","_this5","startDate","unitClass","metadata","unitconfig","statistics","_callee3$","_context3","Date","setTime","getTime","Object","values","find","metaData","unit_class","_defineProperty","id","t0","styles","_templateObject2"],"sources":["/workspaces/frontend/src/panels/lovelace/cards/hui-statistics-graph-card.ts"],"sourcesContent":["import { HassEntity } from \"home-assistant-js-websocket\";\nimport {\n  css,\n  CSSResultGroup,\n  html,\n  LitElement,\n  PropertyValues,\n  nothing,\n} from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport \"../../../components/ha-card\";\nimport {\n  fetchStatistics,\n  getDisplayUnit,\n  getStatisticMetadata,\n  Statistics,\n  StatisticsMetaData,\n  StatisticType,\n} from \"../../../data/recorder\";\nimport { HomeAssistant } from \"../../../types\";\nimport { findEntities } from \"../common/find-entities\";\nimport { hasConfigOrEntitiesChanged } from \"../common/has-changed\";\nimport { processConfigEntities } from \"../common/process-config-entities\";\nimport { LovelaceCard } from \"../types\";\nimport { StatisticsGraphCardConfig } from \"./types\";\n\nexport const DEFAULT_DAYS_TO_SHOW = 30;\n\n@customElement(\"hui-statistics-graph-card\")\nexport class HuiStatisticsGraphCard extends LitElement implements LovelaceCard {\n  public static async getConfigElement() {\n    await import(\"../editor/config-elements/hui-statistics-graph-card-editor\");\n    return document.createElement(\"hui-statistics-graph-card-editor\");\n  }\n\n  public static getStubConfig(\n    hass: HomeAssistant,\n    entities: string[],\n    entitiesFill: string[]\n  ): StatisticsGraphCardConfig {\n    const includeDomains = [\"sensor\"];\n    const maxEntities = 1;\n    const foundEntities = findEntities(\n      hass,\n      maxEntities,\n      entities,\n      entitiesFill,\n      includeDomains,\n      (stateObj: HassEntity) => \"state_class\" in stateObj.attributes\n    );\n    return {\n      type: \"statistics-graph\",\n      entities: foundEntities.length ? [foundEntities[0]] : [],\n    };\n  }\n\n  @property({ attribute: false }) public hass?: HomeAssistant;\n\n  @state() private _config?: StatisticsGraphCardConfig;\n\n  @state() private _statistics?: Statistics;\n\n  @state() private _metadata?: Record<string, StatisticsMetaData>;\n\n  @state() private _unit?: string;\n\n  private _entities: string[] = [];\n\n  private _names: Record<string, string> = {};\n\n  private _interval?: number;\n\n  private _statTypes?: Array<StatisticType>;\n\n  public disconnectedCallback() {\n    super.disconnectedCallback();\n    if (this._interval) {\n      clearInterval(this._interval);\n      this._interval = undefined;\n    }\n  }\n\n  public connectedCallback() {\n    super.connectedCallback();\n    if (!this.hasUpdated) {\n      return;\n    }\n    this._setFetchStatisticsTimer();\n  }\n\n  public getCardSize(): number {\n    return (\n      5 +\n      (this._config?.title ? 2 : 0) +\n      (!this._config?.hide_legend ? this._entities?.length || 0 : 0)\n    );\n  }\n\n  public setConfig(config: StatisticsGraphCardConfig): void {\n    if (!config.entities || !Array.isArray(config.entities)) {\n      throw new Error(\"Entities need to be an array\");\n    }\n\n    if (!config.entities.length) {\n      throw new Error(\"You must include at least one entity\");\n    }\n\n    const configEntities = config.entities\n      ? processConfigEntities(config.entities, false)\n      : [];\n\n    this._entities = [];\n    configEntities.forEach((entity) => {\n      this._entities.push(entity.entity);\n      if (entity.name) {\n        this._names[entity.entity] = entity.name;\n      }\n    });\n\n    if (typeof config.stat_types === \"string\") {\n      this._statTypes = [config.stat_types];\n    } else if (!config.stat_types) {\n      this._statTypes = [\"change\", \"state\", \"sum\", \"min\", \"max\", \"mean\"];\n    } else {\n      this._statTypes = config.stat_types;\n    }\n    this._config = config;\n  }\n\n  protected shouldUpdate(changedProps: PropertyValues): boolean {\n    return (\n      hasConfigOrEntitiesChanged(this, changedProps) ||\n      changedProps.size > 1 ||\n      !changedProps.has(\"hass\")\n    );\n  }\n\n  public willUpdate(changedProps: PropertyValues) {\n    super.willUpdate(changedProps);\n    if (!this._config || !changedProps.has(\"_config\")) {\n      return;\n    }\n\n    const oldConfig = changedProps.get(\"_config\") as\n      | StatisticsGraphCardConfig\n      | undefined;\n\n    if (\n      changedProps.has(\"_config\") &&\n      oldConfig?.entities !== this._config.entities\n    ) {\n      this._getStatisticsMetaData(this._entities).then(() => {\n        this._setFetchStatisticsTimer();\n      });\n      return;\n    }\n\n    if (\n      changedProps.has(\"_config\") &&\n      (oldConfig?.stat_types !== this._config.stat_types ||\n        oldConfig?.days_to_show !== this._config.days_to_show ||\n        oldConfig?.period !== this._config.period ||\n        oldConfig?.unit !== this._config.unit)\n    ) {\n      this._setFetchStatisticsTimer();\n    }\n  }\n\n  private _setFetchStatisticsTimer() {\n    this._getStatistics();\n    // statistics are created every hour\n    clearInterval(this._interval);\n    this._interval = window.setInterval(\n      () => this._getStatistics(),\n      this._intervalTimeout\n    );\n  }\n\n  protected render() {\n    if (!this.hass || !this._config) {\n      return nothing;\n    }\n\n    return html`\n      <ha-card .header=${this._config.title}>\n        <div\n          class=\"content ${classMap({\n            \"has-header\": !!this._config.title,\n          })}\"\n        >\n          <statistics-chart\n            .hass=${this.hass}\n            .isLoadingData=${!this._statistics}\n            .statisticsData=${this._statistics}\n            .metadata=${this._metadata}\n            .period=${this._config.period}\n            .chartType=${this._config.chart_type || \"line\"}\n            .statTypes=${this._statTypes!}\n            .names=${this._names}\n            .unit=${this._unit}\n            .hideLegend=${this._config.hide_legend || false}\n            .logarithmicScale=${this._config.logarithmic_scale || false}\n          ></statistics-chart>\n        </div>\n      </ha-card>\n    `;\n  }\n\n  private get _intervalTimeout(): number {\n    return (this._config?.period === \"5minute\" ? 5 : 60) * 1000 * 60;\n  }\n\n  private async _getStatisticsMetaData(statisticIds: string[] | undefined) {\n    const statsMetadataArray = await getStatisticMetadata(\n      this.hass!,\n      statisticIds\n    );\n    const statisticsMetaData = {};\n    statsMetadataArray.forEach((x) => {\n      statisticsMetaData[x.statistic_id] = x;\n    });\n    this._metadata = statisticsMetaData;\n  }\n\n  private async _getStatistics(): Promise<void> {\n    const startDate = new Date();\n    startDate.setTime(\n      startDate.getTime() -\n        1000 *\n          60 *\n          60 *\n          (24 * (this._config!.days_to_show || DEFAULT_DAYS_TO_SHOW) + 1)\n    );\n    try {\n      let unitClass;\n      if (this._config!.unit && this._metadata) {\n        const metadata = Object.values(this._metadata).find(\n          (metaData) =>\n            getDisplayUnit(this.hass!, metaData?.statistic_id, metaData) ===\n            this._config!.unit\n        );\n        if (metadata) {\n          unitClass = metadata.unit_class;\n          this._unit = this._config!.unit;\n        }\n      }\n      if (!unitClass && this._metadata) {\n        const metadata = this._metadata[this._entities[0]];\n        unitClass = metadata?.unit_class;\n        this._unit = unitClass\n          ? getDisplayUnit(this.hass!, metadata.statistic_id, metadata) ||\n            undefined\n          : undefined;\n      }\n      const unitconfig = unitClass ? { [unitClass]: this._unit } : undefined;\n      const statistics = await fetchStatistics(\n        this.hass!,\n        startDate,\n        undefined,\n        this._entities,\n        this._config!.period,\n        unitconfig,\n        this._statTypes\n      );\n\n      this._statistics = {};\n      this._entities.forEach((id) => {\n        if (id in statistics) {\n          this._statistics![id] = statistics[id];\n        }\n      });\n    } catch (err) {\n      this._statistics = undefined;\n    }\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      ha-card {\n        height: 100%;\n      }\n      .content {\n        padding: 16px;\n      }\n      .has-header {\n        padding-top: 0;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-statistics-graph-card\": HuiStatisticsGraphCard;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}