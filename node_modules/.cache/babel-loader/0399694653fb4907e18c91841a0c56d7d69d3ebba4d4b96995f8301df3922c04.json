{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport \"@material/mwc-button\";\nconst mdiAlertOctagram = \"M2.2,16.06L3.88,12L2.2,7.94L6.26,6.26L7.94,2.2L12,3.88L16.06,2.2L17.74,6.26L21.8,7.94L20.12,12L21.8,16.06L17.74,17.74L16.06,21.8L12,20.12L7.94,21.8L6.26,17.74L2.2,16.06M13,17V15H11V17H13M13,13V7H11V13H13Z\";\nconst mdiCheckBold = \"M9,20.42L2.79,14.21L5.62,11.38L9,14.77L18.88,4.88L21.71,7.71L9,20.42Z\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport \"../ha-circular-progress\";\nimport \"../ha-svg-icon\";\nexport let HaProgressButton = _decorate([customElement(\"ha-progress-button\")], function (_initialize, _LitElement) {\n  class HaProgressButton extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaProgressButton,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"disabled\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"progress\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"raised\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_result\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        const overlay = this._result || this.progress;\n        return html`\n      <mwc-button\n        ?raised=${this.raised}\n        .disabled=${this.disabled || this.progress}\n        @click=${this._buttonTapped}\n        class=${this._result || \"\"}\n      >\n        <slot></slot>\n      </mwc-button>\n      ${!overlay ? nothing : html`\n            <div class=\"progress\">\n              ${this._result === \"success\" ? html`<ha-svg-icon .path=${mdiCheckBold}></ha-svg-icon>` : this._result === \"error\" ? html`<ha-svg-icon .path=${mdiAlertOctagram}></ha-svg-icon>` : this.progress ? html`\n                        <ha-circular-progress\n                          size=\"small\"\n                          indeterminate\n                        ></ha-circular-progress>\n                      ` : \"\"}\n            </div>\n          `}\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"actionSuccess\",\n      value: function actionSuccess() {\n        this._setResult(\"success\");\n      }\n    }, {\n      kind: \"method\",\n      key: \"actionError\",\n      value: function actionError() {\n        this._setResult(\"error\");\n      }\n    }, {\n      kind: \"method\",\n      key: \"_setResult\",\n      value: function _setResult(result) {\n        this._result = result;\n        setTimeout(() => {\n          this._result = undefined;\n        }, 2000);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_buttonTapped\",\n      value: function _buttonTapped(ev) {\n        if (this.progress) {\n          ev.stopPropagation();\n        }\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css`\n      :host {\n        outline: none;\n        display: inline-block;\n        position: relative;\n      }\n\n      mwc-button {\n        transition: all 1s;\n      }\n\n      mwc-button.success {\n        --mdc-theme-primary: white;\n        background-color: var(--success-color);\n        transition: none;\n        border-radius: 4px;\n        pointer-events: none;\n      }\n\n      mwc-button[raised].success {\n        --mdc-theme-primary: var(--success-color);\n        --mdc-theme-on-primary: white;\n      }\n\n      mwc-button.error {\n        --mdc-theme-primary: white;\n        background-color: var(--error-color);\n        transition: none;\n        border-radius: 4px;\n        pointer-events: none;\n      }\n\n      mwc-button[raised].error {\n        --mdc-theme-primary: var(--error-color);\n        --mdc-theme-on-primary: white;\n      }\n\n      .progress {\n        bottom: 4px;\n        position: absolute;\n        text-align: center;\n        top: 4px;\n        width: 100%;\n      }\n\n      ha-svg-icon {\n        color: white;\n      }\n\n      mwc-button.success slot,\n      mwc-button.error slot {\n        visibility: hidden;\n      }\n    `;\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["mdiAlertOctagram","mdiCheckBold","css","html","LitElement","nothing","customElement","property","state","HaProgressButton","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","type","Boolean","key","value","render","overlay","_result","progress","raised","disabled","_buttonTapped","actionSuccess","_setResult","actionError","result","setTimeout","undefined","ev","stopPropagation","static","styles"],"sources":["/Users/sercanardil/Desktop/frontend/src/components/buttons/ha-progress-button.ts"],"sourcesContent":["import \"@material/mwc-button\";\nimport { mdiAlertOctagram, mdiCheckBold } from \"@mdi/js\";\nimport {\n  css,\n  CSSResultGroup,\n  html,\n  LitElement,\n  nothing,\n  TemplateResult,\n} from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport \"../ha-circular-progress\";\nimport \"../ha-svg-icon\";\n\n@customElement(\"ha-progress-button\")\nexport class HaProgressButton extends LitElement {\n  @property({ type: Boolean }) public disabled = false;\n\n  @property({ type: Boolean }) public progress = false;\n\n  @property({ type: Boolean }) public raised = false;\n\n  @state() private _result?: \"success\" | \"error\";\n\n  public render(): TemplateResult {\n    const overlay = this._result || this.progress;\n    return html`\n      <mwc-button\n        ?raised=${this.raised}\n        .disabled=${this.disabled || this.progress}\n        @click=${this._buttonTapped}\n        class=${this._result || \"\"}\n      >\n        <slot></slot>\n      </mwc-button>\n      ${!overlay\n        ? nothing\n        : html`\n            <div class=\"progress\">\n              ${this._result === \"success\"\n                ? html`<ha-svg-icon .path=${mdiCheckBold}></ha-svg-icon>`\n                : this._result === \"error\"\n                  ? html`<ha-svg-icon .path=${mdiAlertOctagram}></ha-svg-icon>`\n                  : this.progress\n                    ? html`\n                        <ha-circular-progress\n                          size=\"small\"\n                          indeterminate\n                        ></ha-circular-progress>\n                      `\n                    : \"\"}\n            </div>\n          `}\n    `;\n  }\n\n  public actionSuccess(): void {\n    this._setResult(\"success\");\n  }\n\n  public actionError(): void {\n    this._setResult(\"error\");\n  }\n\n  private _setResult(result: \"success\" | \"error\"): void {\n    this._result = result;\n    setTimeout(() => {\n      this._result = undefined;\n    }, 2000);\n  }\n\n  private _buttonTapped(ev: Event): void {\n    if (this.progress) {\n      ev.stopPropagation();\n    }\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      :host {\n        outline: none;\n        display: inline-block;\n        position: relative;\n      }\n\n      mwc-button {\n        transition: all 1s;\n      }\n\n      mwc-button.success {\n        --mdc-theme-primary: white;\n        background-color: var(--success-color);\n        transition: none;\n        border-radius: 4px;\n        pointer-events: none;\n      }\n\n      mwc-button[raised].success {\n        --mdc-theme-primary: var(--success-color);\n        --mdc-theme-on-primary: white;\n      }\n\n      mwc-button.error {\n        --mdc-theme-primary: white;\n        background-color: var(--error-color);\n        transition: none;\n        border-radius: 4px;\n        pointer-events: none;\n      }\n\n      mwc-button[raised].error {\n        --mdc-theme-primary: var(--error-color);\n        --mdc-theme-on-primary: white;\n      }\n\n      .progress {\n        bottom: 4px;\n        position: absolute;\n        text-align: center;\n        top: 4px;\n        width: 100%;\n      }\n\n      ha-svg-icon {\n        color: white;\n      }\n\n      mwc-button.success slot,\n      mwc-button.error slot {\n        visibility: hidden;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-progress-button\": HaProgressButton;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}