{"ast":null,"code":"import { supportsPassiveEventListener } from '@material/mwc-base/utils.js';\nfunction toPointer(ev) {\n  const {\n    clientX,\n    clientY,\n    pageX,\n    pageY\n  } = ev;\n  const x = Math.max(pageX, clientX);\n  const y = Math.max(pageY, clientY);\n  const id = ev.identifier || ev.pointerId;\n  return {\n    x,\n    y,\n    id: id == null ? 0 : id\n  };\n}\nfunction getFirstTouch(startPointer, ev) {\n  const changedTouches = ev.changedTouches;\n  if (changedTouches == null) return {\n    newPointer: toPointer(ev),\n    oldPointer: startPointer\n  };\n  const touches = Array.from(changedTouches, n => toPointer(n));\n  const newPointer = startPointer == null ? touches[0] : touches.find(n => n.id === startPointer.id);\n  return {\n    newPointer,\n    oldPointer: startPointer\n  };\n}\nfunction addPassiveEventListener(node, event, callback) {\n  node.addEventListener(event, callback, supportsPassiveEventListener ? {\n    passive: true\n  } : false);\n}\nexport class Tracker {\n  constructor(_element, handlers) {\n    this._element = _element;\n    this._startPointer = null;\n    const {\n      down,\n      move,\n      up\n    } = handlers;\n    this._down = this._onDown(down);\n    this._move = this._onMove(move);\n    this._up = this._onUp(up);\n    if (_element && _element.addEventListener) {\n      _element.addEventListener('mousedown', this._down);\n      addPassiveEventListener(_element, 'touchstart', this._down);\n      addPassiveEventListener(_element, 'touchmove', this._move);\n      addPassiveEventListener(_element, 'touchend', this._up);\n    }\n  }\n  disconnect() {\n    const rootEl = this._element;\n    if (rootEl && rootEl.removeEventListener) {\n      rootEl.removeEventListener('mousedown', this._down);\n      rootEl.removeEventListener('touchstart', this._down);\n      rootEl.removeEventListener('touchmove', this._move);\n      rootEl.removeEventListener('touchend', this._up);\n    }\n  }\n  _onDown(down) {\n    return ev => {\n      if (ev instanceof MouseEvent) {\n        this._element.addEventListener('mousemove', this._move);\n        this._element.addEventListener('mouseup', this._up);\n        this._element.addEventListener('mouseleave', this._up);\n      }\n      const {\n        newPointer\n      } = getFirstTouch(this._startPointer, ev);\n      down(newPointer, ev);\n      this._startPointer = newPointer;\n    };\n  }\n  _onMove(move) {\n    return ev => {\n      this._updatePointers(move, ev);\n    };\n  }\n  _onUp(up) {\n    return ev => {\n      this._updatePointers(up, ev, true);\n    };\n  }\n  _updatePointers(cb, ev, shouldReset) {\n    if (shouldReset && ev instanceof MouseEvent) {\n      this._element.removeEventListener('mousemove', this._move);\n      this._element.removeEventListener('mouseup', this._up);\n      this._element.removeEventListener('mouseleave', this._up);\n    }\n    const {\n      newPointer,\n      oldPointer\n    } = getFirstTouch(this._startPointer, ev);\n    cb(newPointer, oldPointer, ev);\n    this._startPointer = shouldReset ? null : newPointer;\n  }\n}","map":{"version":3,"names":["supportsPassiveEventListener","toPointer","ev","clientX","clientY","pageX","pageY","x","Math","max","y","id","identifier","pointerId","getFirstTouch","startPointer","changedTouches","newPointer","oldPointer","touches","Array","from","n","find","addPassiveEventListener","node","event","callback","addEventListener","passive","Tracker","constructor","_element","handlers","_startPointer","down","move","up","_down","_onDown","_move","_onMove","_up","_onUp","disconnect","rootEl","removeEventListener","MouseEvent","_updatePointers","cb","shouldReset"],"sources":["/workspaces/frontend/node_modules/app-datepicker/dist/tracker.js"],"sourcesContent":["import { supportsPassiveEventListener } from '@material/mwc-base/utils.js';\nfunction toPointer(ev) {\n    const { clientX, clientY, pageX, pageY } = ev;\n    const x = Math.max(pageX, clientX);\n    const y = Math.max(pageY, clientY);\n    const id = ev.identifier || ev.pointerId;\n    return { x, y, id: id == null ? 0 : id };\n}\nfunction getFirstTouch(startPointer, ev) {\n    const changedTouches = ev.changedTouches;\n    if (changedTouches == null)\n        return { newPointer: toPointer(ev), oldPointer: startPointer };\n    const touches = Array.from(changedTouches, n => toPointer(n));\n    const newPointer = startPointer == null\n        ? touches[0]\n        : touches.find(n => n.id === startPointer.id);\n    return { newPointer, oldPointer: startPointer };\n}\nfunction addPassiveEventListener(node, event, callback) {\n    node.addEventListener(event, callback, supportsPassiveEventListener ? { passive: true } : false);\n}\nexport class Tracker {\n    constructor(_element, handlers) {\n        this._element = _element;\n        this._startPointer = null;\n        const { down, move, up } = handlers;\n        this._down = this._onDown(down);\n        this._move = this._onMove(move);\n        this._up = this._onUp(up);\n        if (_element && _element.addEventListener) {\n            _element.addEventListener('mousedown', this._down);\n            addPassiveEventListener(_element, 'touchstart', this._down);\n            addPassiveEventListener(_element, 'touchmove', this._move);\n            addPassiveEventListener(_element, 'touchend', this._up);\n        }\n    }\n    disconnect() {\n        const rootEl = this._element;\n        if (rootEl && rootEl.removeEventListener) {\n            rootEl.removeEventListener('mousedown', this._down);\n            rootEl.removeEventListener('touchstart', this._down);\n            rootEl.removeEventListener('touchmove', this._move);\n            rootEl.removeEventListener('touchend', this._up);\n        }\n    }\n    _onDown(down) {\n        return (ev) => {\n            if (ev instanceof MouseEvent) {\n                this._element.addEventListener('mousemove', this._move);\n                this._element.addEventListener('mouseup', this._up);\n                this._element.addEventListener('mouseleave', this._up);\n            }\n            const { newPointer } = getFirstTouch(this._startPointer, ev);\n            down(newPointer, ev);\n            this._startPointer = newPointer;\n        };\n    }\n    _onMove(move) {\n        return (ev) => {\n            this._updatePointers(move, ev);\n        };\n    }\n    _onUp(up) {\n        return (ev) => {\n            this._updatePointers(up, ev, true);\n        };\n    }\n    _updatePointers(cb, ev, shouldReset) {\n        if (shouldReset && ev instanceof MouseEvent) {\n            this._element.removeEventListener('mousemove', this._move);\n            this._element.removeEventListener('mouseup', this._up);\n            this._element.removeEventListener('mouseleave', this._up);\n        }\n        const { newPointer, oldPointer } = getFirstTouch(this._startPointer, ev);\n        cb(newPointer, oldPointer, ev);\n        this._startPointer = shouldReset ? null : newPointer;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}