{"ast":null,"code":"import _typeof from \"@babel/runtime/helpers/typeof\";\nimport { array, boolean, dynamic, enums, literal, object, optional, string, type, union } from \"superstruct\";\nvar actionConfigStructUser = object({\n  user: string()\n});\nvar actionConfigStructConfirmation = union([boolean(), object({\n  text: optional(string()),\n  excemptions: optional(array(actionConfigStructUser))\n})]);\nvar actionConfigStructUrl = object({\n  action: literal(\"url\"),\n  url_path: string(),\n  confirmation: optional(actionConfigStructConfirmation)\n});\nvar actionConfigStructService = object({\n  action: literal(\"call-service\"),\n  service: string(),\n  service_data: optional(object()),\n  data: optional(object()),\n  target: optional(object({\n    entity_id: optional(union([string(), array(string())])),\n    device_id: optional(union([string(), array(string())])),\n    area_id: optional(union([string(), array(string())]))\n  })),\n  confirmation: optional(actionConfigStructConfirmation)\n});\nvar actionConfigStructNavigate = object({\n  action: literal(\"navigate\"),\n  navigation_path: string(),\n  navigation_replace: optional(boolean()),\n  confirmation: optional(actionConfigStructConfirmation)\n});\nvar actionConfigStructAssist = type({\n  action: literal(\"assist\"),\n  pipeline_id: optional(string()),\n  start_listening: optional(boolean())\n});\nexport var actionConfigStructType = object({\n  action: enums([\"none\", \"toggle\", \"more-info\", \"call-service\", \"url\", \"navigate\", \"assist\"]),\n  confirmation: optional(actionConfigStructConfirmation)\n});\nexport var actionConfigStruct = dynamic(function (value) {\n  if (value && _typeof(value) === \"object\" && \"action\" in value) {\n    switch (value.action) {\n      case \"call-service\":\n        {\n          return actionConfigStructService;\n        }\n      case \"navigate\":\n        {\n          return actionConfigStructNavigate;\n        }\n      case \"url\":\n        {\n          return actionConfigStructUrl;\n        }\n      case \"assist\":\n        {\n          return actionConfigStructAssist;\n        }\n    }\n  }\n  return actionConfigStructType;\n});","map":{"version":3,"names":["array","boolean","dynamic","enums","literal","object","optional","string","type","union","actionConfigStructUser","user","actionConfigStructConfirmation","text","excemptions","actionConfigStructUrl","action","url_path","confirmation","actionConfigStructService","service","service_data","data","target","entity_id","device_id","area_id","actionConfigStructNavigate","navigation_path","navigation_replace","actionConfigStructAssist","pipeline_id","start_listening","actionConfigStructType","actionConfigStruct","value","_typeof"],"sources":["/workspaces/frontend/src/panels/lovelace/editor/structs/action-struct.ts"],"sourcesContent":["import {\n  array,\n  boolean,\n  dynamic,\n  enums,\n  literal,\n  object,\n  optional,\n  string,\n  type,\n  union,\n} from \"superstruct\";\nimport { BaseActionConfig } from \"../../../../data/lovelace/config/action\";\n\nconst actionConfigStructUser = object({\n  user: string(),\n});\n\nconst actionConfigStructConfirmation = union([\n  boolean(),\n  object({\n    text: optional(string()),\n    excemptions: optional(array(actionConfigStructUser)),\n  }),\n]);\n\nconst actionConfigStructUrl = object({\n  action: literal(\"url\"),\n  url_path: string(),\n  confirmation: optional(actionConfigStructConfirmation),\n});\n\nconst actionConfigStructService = object({\n  action: literal(\"call-service\"),\n  service: string(),\n  service_data: optional(object()),\n  data: optional(object()),\n  target: optional(\n    object({\n      entity_id: optional(union([string(), array(string())])),\n      device_id: optional(union([string(), array(string())])),\n      area_id: optional(union([string(), array(string())])),\n    })\n  ),\n  confirmation: optional(actionConfigStructConfirmation),\n});\n\nconst actionConfigStructNavigate = object({\n  action: literal(\"navigate\"),\n  navigation_path: string(),\n  navigation_replace: optional(boolean()),\n  confirmation: optional(actionConfigStructConfirmation),\n});\n\nconst actionConfigStructAssist = type({\n  action: literal(\"assist\"),\n  pipeline_id: optional(string()),\n  start_listening: optional(boolean()),\n});\n\nexport const actionConfigStructType = object({\n  action: enums([\n    \"none\",\n    \"toggle\",\n    \"more-info\",\n    \"call-service\",\n    \"url\",\n    \"navigate\",\n    \"assist\",\n  ]),\n  confirmation: optional(actionConfigStructConfirmation),\n});\n\nexport const actionConfigStruct = dynamic<any>((value) => {\n  if (value && typeof value === \"object\" && \"action\" in value) {\n    switch ((value as BaseActionConfig).action!) {\n      case \"call-service\": {\n        return actionConfigStructService;\n      }\n      case \"navigate\": {\n        return actionConfigStructNavigate;\n      }\n      case \"url\": {\n        return actionConfigStructUrl;\n      }\n      case \"assist\": {\n        return actionConfigStructAssist;\n      }\n    }\n  }\n\n  return actionConfigStructType;\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}