{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport { html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { assert, assign, object, optional, string } from \"superstruct\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport \"../../../../components/ha-form/ha-form\";\nimport { baseLovelaceCardConfig } from \"../structs/base-card-struct\";\nconst cardConfigStruct = assign(baseLovelaceCardConfig, object({\n  entity: optional(string()),\n  name: optional(string()),\n  theme: optional(string())\n}));\nconst SCHEMA = [{\n  name: \"entity\",\n  required: true,\n  selector: {\n    entity: {\n      domain: \"plant\"\n    }\n  }\n}, {\n  name: \"name\",\n  selector: {\n    text: {}\n  }\n}, {\n  name: \"theme\",\n  selector: {\n    theme: {}\n  }\n}];\nexport let HuiPlantStatusCardEditor = _decorate([customElement(\"hui-plant-status-card-editor\")], function (_initialize, _LitElement) {\n  class HuiPlantStatusCardEditor extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HuiPlantStatusCardEditor,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_config\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"setConfig\",\n      value: function setConfig(config) {\n        assert(config, cardConfigStruct);\n        this._config = config;\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this.hass || !this._config) {\n          return nothing;\n        }\n        return html`\n      <ha-form\n        .hass=${this.hass}\n        .data=${this._config}\n        .schema=${SCHEMA}\n        .computeLabel=${this._computeLabelCallback}\n        @value-changed=${this._valueChanged}\n      ></ha-form>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_valueChanged\",\n      value: function _valueChanged(ev) {\n        fireEvent(this, \"config-changed\", {\n          config: ev.detail.value\n        });\n      }\n    }, {\n      kind: \"field\",\n      key: \"_computeLabelCallback\",\n      value() {\n        return schema => {\n          if (schema.name === \"entity\") {\n            return this.hass.localize(\"ui.panel.lovelace.editor.card.generic.entity\");\n          }\n          if (schema.name === \"theme\") {\n            return `${this.hass.localize(\"ui.panel.lovelace.editor.card.generic.theme\")} (${this.hass.localize(\"ui.panel.lovelace.editor.card.config.optional\")})`;\n          }\n          return this.hass.localize(`ui.panel.lovelace.editor.card.generic.${schema.name}`);\n        };\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["html","LitElement","nothing","customElement","property","state","assert","assign","object","optional","string","fireEvent","baseLovelaceCardConfig","cardConfigStruct","entity","name","theme","SCHEMA","required","selector","domain","text","HuiPlantStatusCardEditor","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","setConfig","config","_config","render","hass","_computeLabelCallback","_valueChanged","ev","detail","schema","localize"],"sources":["/workspaces/frontend/src/panels/lovelace/editor/config-elements/hui-plant-status-card-editor.ts"],"sourcesContent":["import { html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { assert, assign, object, optional, string } from \"superstruct\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport \"../../../../components/ha-form/ha-form\";\nimport type { SchemaUnion } from \"../../../../components/ha-form/types\";\nimport type { HomeAssistant } from \"../../../../types\";\nimport type { PlantStatusCardConfig } from \"../../cards/types\";\nimport type { LovelaceCardEditor } from \"../../types\";\nimport { baseLovelaceCardConfig } from \"../structs/base-card-struct\";\n\nconst cardConfigStruct = assign(\n  baseLovelaceCardConfig,\n  object({\n    entity: optional(string()),\n    name: optional(string()),\n    theme: optional(string()),\n  })\n);\n\nconst SCHEMA = [\n  { name: \"entity\", required: true, selector: { entity: { domain: \"plant\" } } },\n  { name: \"name\", selector: { text: {} } },\n  { name: \"theme\", selector: { theme: {} } },\n] as const;\n\n@customElement(\"hui-plant-status-card-editor\")\nexport class HuiPlantStatusCardEditor\n  extends LitElement\n  implements LovelaceCardEditor\n{\n  @property({ attribute: false }) public hass?: HomeAssistant;\n\n  @state() private _config?: PlantStatusCardConfig;\n\n  public setConfig(config: PlantStatusCardConfig): void {\n    assert(config, cardConfigStruct);\n    this._config = config;\n  }\n\n  protected render() {\n    if (!this.hass || !this._config) {\n      return nothing;\n    }\n\n    return html`\n      <ha-form\n        .hass=${this.hass}\n        .data=${this._config}\n        .schema=${SCHEMA}\n        .computeLabel=${this._computeLabelCallback}\n        @value-changed=${this._valueChanged}\n      ></ha-form>\n    `;\n  }\n\n  private _valueChanged(ev: CustomEvent): void {\n    fireEvent(this, \"config-changed\", { config: ev.detail.value });\n  }\n\n  private _computeLabelCallback = (schema: SchemaUnion<typeof SCHEMA>) => {\n    if (schema.name === \"entity\") {\n      return this.hass!.localize(\n        \"ui.panel.lovelace.editor.card.generic.entity\"\n      );\n    }\n    if (schema.name === \"theme\") {\n      return `${this.hass!.localize(\n        \"ui.panel.lovelace.editor.card.generic.theme\"\n      )} (${this.hass!.localize(\n        \"ui.panel.lovelace.editor.card.config.optional\"\n      )})`;\n    }\n    return this.hass!.localize(\n      `ui.panel.lovelace.editor.card.generic.${schema.name}`\n    );\n  };\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-plant-status-card-editor\": HuiPlantStatusCardEditor;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}