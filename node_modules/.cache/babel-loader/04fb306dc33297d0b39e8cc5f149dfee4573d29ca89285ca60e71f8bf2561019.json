{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nconst mdiMenu = \"M3,6H21V8H3V6M3,11H21V13H3V11M3,16H21V18H3V16Z\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { subscribeNotifications } from \"../data/persistent_notification\";\nimport \"./ha-icon-button\";\nlet HaMenuButton = _decorate([customElement(\"ha-menu-button\")], function (_initialize, _LitElement) {\n  class HaMenuButton extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaMenuButton,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"hassio\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"narrow\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_hasNotifications\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_show\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_alwaysVisible\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_attachNotifOnConnect\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_unsubNotifications\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"connectedCallback\",\n      value: function connectedCallback() {\n        _get(_getPrototypeOf(HaMenuButton.prototype), \"connectedCallback\", this).call(this);\n        if (this._attachNotifOnConnect) {\n          this._attachNotifOnConnect = false;\n          this._subscribeNotifications();\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"disconnectedCallback\",\n      value: function disconnectedCallback() {\n        _get(_getPrototypeOf(HaMenuButton.prototype), \"disconnectedCallback\", this).call(this);\n        if (this._unsubNotifications) {\n          this._attachNotifOnConnect = true;\n          this._unsubNotifications();\n          this._unsubNotifications = undefined;\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this._show) {\n          return nothing;\n        }\n        const hasNotifications = this._hasNotifications && (this.narrow || this.hass.dockedSidebar === \"always_hidden\");\n        return html`\n      <ha-icon-button\n        .label=${this.hass.localize(\"ui.sidebar.sidebar_toggle\")}\n        .path=${mdiMenu}\n        @click=${this._toggleMenu}\n      ></ha-icon-button>\n      ${hasNotifications ? html`<div class=\"dot\"></div>` : \"\"}\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"firstUpdated\",\n      value: function firstUpdated(changedProps) {\n        _get(_getPrototypeOf(HaMenuButton.prototype), \"firstUpdated\", this).call(this, changedProps);\n        if (!this.hassio) {\n          return;\n        }\n        // This component is used on Hass.io too, but Hass.io might run the UI\n        // on older frontends too, that don't have an always visible menu button\n        // in the sidebar.\n        this._alwaysVisible = (Number(window.parent.frontendVersion) || 0) < 20190710;\n      }\n    }, {\n      kind: \"method\",\n      key: \"willUpdate\",\n      value: function willUpdate(changedProps) {\n        _get(_getPrototypeOf(HaMenuButton.prototype), \"willUpdate\", this).call(this, changedProps);\n        if (!changedProps.has(\"narrow\") && !changedProps.has(\"hass\")) {\n          return;\n        }\n        const oldHass = changedProps.has(\"hass\") ? changedProps.get(\"hass\") : this.hass;\n        const oldNarrow = changedProps.has(\"narrow\") ? changedProps.get(\"narrow\") : this.narrow;\n        const oldShowButton = oldNarrow || (oldHass === null || oldHass === void 0 ? void 0 : oldHass.dockedSidebar) === \"always_hidden\";\n        const showButton = this.narrow || this.hass.dockedSidebar === \"always_hidden\";\n        if (this.hasUpdated && oldShowButton === showButton) {\n          return;\n        }\n        this._show = showButton || this._alwaysVisible;\n        if (!showButton) {\n          if (this._unsubNotifications) {\n            this._unsubNotifications();\n            this._unsubNotifications = undefined;\n          }\n          return;\n        }\n        this._subscribeNotifications();\n      }\n    }, {\n      kind: \"method\",\n      key: \"_subscribeNotifications\",\n      value: function _subscribeNotifications() {\n        if (this._unsubNotifications) {\n          throw new Error(\"Already subscribed\");\n        }\n        this._unsubNotifications = subscribeNotifications(this.hass.connection, notifications => {\n          this._hasNotifications = notifications.length > 0;\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_toggleMenu\",\n      value: function _toggleMenu() {\n        fireEvent(this, \"hass-toggle-menu\");\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css`\n      :host {\n        position: relative;\n      }\n      .dot {\n        pointer-events: none;\n        position: absolute;\n        background-color: var(--accent-color);\n        width: 12px;\n        height: 12px;\n        top: 9px;\n        right: 7px;\n        border-radius: 50%;\n        border: 2px solid var(--app-header-background-color);\n      }\n    `;\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","nothing","customElement","property","state","fireEvent","subscribeNotifications","HaMenuButton","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","type","Boolean","key","value","attribute","connectedCallback","_get","_getPrototypeOf","prototype","call","_attachNotifOnConnect","_subscribeNotifications","disconnectedCallback","_unsubNotifications","undefined","render","_show","hasNotifications","_hasNotifications","narrow","hass","dockedSidebar","localize","mdiMenu","_toggleMenu","firstUpdated","changedProps","hassio","_alwaysVisible","Number","window","parent","frontendVersion","willUpdate","has","oldHass","get","oldNarrow","oldShowButton","showButton","hasUpdated","Error","connection","notifications","length","static","styles"],"sources":["/workspaces/frontend/src/components/ha-menu-button.ts"],"sourcesContent":["import { mdiMenu } from \"@mdi/js\";\nimport { UnsubscribeFunc } from \"home-assistant-js-websocket\";\nimport { css, CSSResultGroup, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { subscribeNotifications } from \"../data/persistent_notification\";\nimport { HomeAssistant } from \"../types\";\nimport \"./ha-icon-button\";\n\n@customElement(\"ha-menu-button\")\nclass HaMenuButton extends LitElement {\n  @property({ type: Boolean }) public hassio = false;\n\n  @property({ type: Boolean }) public narrow = false;\n\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @state() private _hasNotifications = false;\n\n  @state() private _show = false;\n\n  private _alwaysVisible = false;\n\n  private _attachNotifOnConnect = false;\n\n  private _unsubNotifications?: UnsubscribeFunc;\n\n  public connectedCallback() {\n    super.connectedCallback();\n    if (this._attachNotifOnConnect) {\n      this._attachNotifOnConnect = false;\n      this._subscribeNotifications();\n    }\n  }\n\n  public disconnectedCallback() {\n    super.disconnectedCallback();\n    if (this._unsubNotifications) {\n      this._attachNotifOnConnect = true;\n      this._unsubNotifications();\n      this._unsubNotifications = undefined;\n    }\n  }\n\n  protected render() {\n    if (!this._show) {\n      return nothing;\n    }\n    const hasNotifications =\n      this._hasNotifications &&\n      (this.narrow || this.hass.dockedSidebar === \"always_hidden\");\n    return html`\n      <ha-icon-button\n        .label=${this.hass.localize(\"ui.sidebar.sidebar_toggle\")}\n        .path=${mdiMenu}\n        @click=${this._toggleMenu}\n      ></ha-icon-button>\n      ${hasNotifications ? html`<div class=\"dot\"></div>` : \"\"}\n    `;\n  }\n\n  protected firstUpdated(changedProps) {\n    super.firstUpdated(changedProps);\n    if (!this.hassio) {\n      return;\n    }\n    // This component is used on Hass.io too, but Hass.io might run the UI\n    // on older frontends too, that don't have an always visible menu button\n    // in the sidebar.\n    this._alwaysVisible =\n      (Number((window.parent as any).frontendVersion) || 0) < 20190710;\n  }\n\n  protected willUpdate(changedProps) {\n    super.willUpdate(changedProps);\n\n    if (!changedProps.has(\"narrow\") && !changedProps.has(\"hass\")) {\n      return;\n    }\n\n    const oldHass = changedProps.has(\"hass\")\n      ? (changedProps.get(\"hass\") as HomeAssistant | undefined)\n      : this.hass;\n    const oldNarrow = changedProps.has(\"narrow\")\n      ? (changedProps.get(\"narrow\") as boolean | undefined)\n      : this.narrow;\n\n    const oldShowButton =\n      oldNarrow || oldHass?.dockedSidebar === \"always_hidden\";\n    const showButton =\n      this.narrow || this.hass.dockedSidebar === \"always_hidden\";\n\n    if (this.hasUpdated && oldShowButton === showButton) {\n      return;\n    }\n\n    this._show = showButton || this._alwaysVisible;\n\n    if (!showButton) {\n      if (this._unsubNotifications) {\n        this._unsubNotifications();\n        this._unsubNotifications = undefined;\n      }\n      return;\n    }\n\n    this._subscribeNotifications();\n  }\n\n  private _subscribeNotifications() {\n    if (this._unsubNotifications) {\n      throw new Error(\"Already subscribed\");\n    }\n    this._unsubNotifications = subscribeNotifications(\n      this.hass.connection,\n      (notifications) => {\n        this._hasNotifications = notifications.length > 0;\n      }\n    );\n  }\n\n  private _toggleMenu(): void {\n    fireEvent(this, \"hass-toggle-menu\");\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      :host {\n        position: relative;\n      }\n      .dot {\n        pointer-events: none;\n        position: absolute;\n        background-color: var(--accent-color);\n        width: 12px;\n        height: 12px;\n        top: 9px;\n        right: 7px;\n        border-radius: 50%;\n        border: 2px solid var(--app-header-background-color);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-menu-button\": HaMenuButton;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}