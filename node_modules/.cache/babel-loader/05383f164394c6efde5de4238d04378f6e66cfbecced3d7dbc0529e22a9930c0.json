{"ast":null,"code":"import { errorPrefix, generatedAttribute } from \"./Utils/Constants\";\nimport { getLogger, isBoolean, isFunction, isNumber, isString, itemFromSingleOrMultiple } from \"../Utils/Utils\";\nimport { Container } from \"./Container\";\nimport { EventDispatcher } from \"../Utils/EventDispatcher\";\nimport { Plugins } from \"./Utils/Plugins\";\nimport { getRandom } from \"../Utils/NumberUtils\";\nasync function getDataFromUrl(data) {\n  const url = itemFromSingleOrMultiple(data.url, data.index);\n  if (!url) {\n    return data.fallback;\n  }\n  const response = await fetch(url);\n  if (response.ok) {\n    return response.json();\n  }\n  getLogger().error(`${errorPrefix} ${response.status} while retrieving config file`);\n  return data.fallback;\n}\nfunction isParamsEmpty(params) {\n  return !params.id && !params.element && !params.url && !params.options;\n}\nfunction isParams(obj) {\n  return !isParamsEmpty(obj);\n}\nexport class Engine {\n  constructor() {\n    this._configs = new Map();\n    this._domArray = [];\n    this._eventDispatcher = new EventDispatcher();\n    this._initialized = false;\n    this.plugins = new Plugins(this);\n  }\n  get configs() {\n    const res = {};\n    for (const [name, config] of this._configs) {\n      res[name] = config;\n    }\n    return res;\n  }\n  get version() {\n    return \"2.12.0\";\n  }\n  addConfig(nameOrConfig, config) {\n    if (isString(nameOrConfig)) {\n      if (config) {\n        config.name = nameOrConfig;\n        this._configs.set(nameOrConfig, config);\n      }\n    } else {\n      var _nameOrConfig$name;\n      this._configs.set((_nameOrConfig$name = nameOrConfig.name) !== null && _nameOrConfig$name !== void 0 ? _nameOrConfig$name : \"default\", nameOrConfig);\n    }\n  }\n  addEventListener(type, listener) {\n    this._eventDispatcher.addEventListener(type, listener);\n  }\n  async addInteractor(name, interactorInitializer, refresh = true) {\n    this.plugins.addInteractor(name, interactorInitializer);\n    await this.refresh(refresh);\n  }\n  async addMover(name, moverInitializer, refresh = true) {\n    this.plugins.addParticleMover(name, moverInitializer);\n    await this.refresh(refresh);\n  }\n  async addParticleUpdater(name, updaterInitializer, refresh = true) {\n    this.plugins.addParticleUpdater(name, updaterInitializer);\n    await this.refresh(refresh);\n  }\n  async addPathGenerator(name, generator, refresh = true) {\n    this.plugins.addPathGenerator(name, generator);\n    await this.refresh(refresh);\n  }\n  async addPlugin(plugin, refresh = true) {\n    this.plugins.addPlugin(plugin);\n    await this.refresh(refresh);\n  }\n  async addPreset(preset, options, override = false, refresh = true) {\n    this.plugins.addPreset(preset, options, override);\n    await this.refresh(refresh);\n  }\n  async addShape(shape, drawer, initOrRefresh, afterEffectOrRefresh, destroyOrRefresh, refresh = true) {\n    let customDrawer;\n    let realRefresh = refresh,\n      realInit,\n      realAfterEffect,\n      realDestroy;\n    if (isBoolean(initOrRefresh)) {\n      realRefresh = initOrRefresh;\n      realInit = undefined;\n    } else {\n      realInit = initOrRefresh;\n    }\n    if (isBoolean(afterEffectOrRefresh)) {\n      realRefresh = afterEffectOrRefresh;\n      realAfterEffect = undefined;\n    } else {\n      realAfterEffect = afterEffectOrRefresh;\n    }\n    if (isBoolean(destroyOrRefresh)) {\n      realRefresh = destroyOrRefresh;\n      realDestroy = undefined;\n    } else {\n      realDestroy = destroyOrRefresh;\n    }\n    if (isFunction(drawer)) {\n      customDrawer = {\n        afterEffect: realAfterEffect,\n        destroy: realDestroy,\n        draw: drawer,\n        init: realInit\n      };\n    } else {\n      customDrawer = drawer;\n    }\n    this.plugins.addShapeDrawer(shape, customDrawer);\n    await this.refresh(realRefresh);\n  }\n  dispatchEvent(type, args) {\n    this._eventDispatcher.dispatchEvent(type, args);\n  }\n  dom() {\n    return this._domArray;\n  }\n  domItem(index) {\n    const dom = this.dom(),\n      item = dom[index];\n    if (!item || item.destroyed) {\n      dom.splice(index, 1);\n      return;\n    }\n    return item;\n  }\n  init() {\n    if (this._initialized) {\n      return;\n    }\n    this._initialized = true;\n  }\n  async load(tagIdOrOptionsOrParams, options) {\n    return this.loadFromArray(tagIdOrOptionsOrParams, options);\n  }\n  async loadFromArray(tagIdOrOptionsOrParams, optionsOrIndex, index) {\n    let params;\n    if (!isParams(tagIdOrOptionsOrParams)) {\n      params = {};\n      if (isString(tagIdOrOptionsOrParams)) {\n        params.id = tagIdOrOptionsOrParams;\n      } else {\n        params.options = tagIdOrOptionsOrParams;\n      }\n      if (isNumber(optionsOrIndex)) {\n        params.index = optionsOrIndex;\n      } else {\n        params.options = optionsOrIndex !== null && optionsOrIndex !== void 0 ? optionsOrIndex : params.options;\n      }\n      params.index = index !== null && index !== void 0 ? index : params.index;\n    } else {\n      params = tagIdOrOptionsOrParams;\n    }\n    return this._loadParams(params);\n  }\n  async loadJSON(tagId, pathConfigJson, index) {\n    let url, id;\n    if (isNumber(pathConfigJson) || pathConfigJson === undefined) {\n      url = tagId;\n    } else {\n      id = tagId;\n      url = pathConfigJson;\n    }\n    return this._loadParams({\n      id: id,\n      url,\n      index\n    });\n  }\n  async refresh(refresh = true) {\n    if (!refresh) {\n      return;\n    }\n    this.dom().forEach(t => t.refresh());\n  }\n  removeEventListener(type, listener) {\n    this._eventDispatcher.removeEventListener(type, listener);\n  }\n  async set(id, element, options, index) {\n    const params = {\n      index\n    };\n    if (isString(id)) {\n      params.id = id;\n    } else {\n      params.element = id;\n    }\n    if (element instanceof HTMLElement) {\n      params.element = element;\n    } else {\n      params.options = element;\n    }\n    if (isNumber(options)) {\n      params.index = options;\n    } else {\n      params.options = options !== null && options !== void 0 ? options : params.options;\n    }\n    return this._loadParams(params);\n  }\n  async setJSON(id, element, pathConfigJson, index) {\n    const params = {};\n    if (id instanceof HTMLElement) {\n      params.element = id;\n      params.url = element;\n      params.index = pathConfigJson;\n    } else {\n      params.id = id;\n      params.element = element;\n      params.url = pathConfigJson;\n      params.index = index;\n    }\n    return this._loadParams(params);\n  }\n  setOnClickHandler(callback) {\n    const dom = this.dom();\n    if (!dom.length) {\n      throw new Error(`${errorPrefix} can only set click handlers after calling tsParticles.load()`);\n    }\n    for (const domItem of dom) {\n      domItem.addClickHandler(callback);\n    }\n  }\n  async _loadParams(params) {\n    var _params$id, _params$element;\n    const id = (_params$id = params.id) !== null && _params$id !== void 0 ? _params$id : `tsparticles${Math.floor(getRandom() * 10000)}`,\n      {\n        index,\n        url\n      } = params,\n      options = url ? await getDataFromUrl({\n        fallback: params.options,\n        url,\n        index\n      }) : params.options;\n    let domContainer = (_params$element = params.element) !== null && _params$element !== void 0 ? _params$element : document.getElementById(id);\n    if (!domContainer) {\n      domContainer = document.createElement(\"div\");\n      domContainer.id = id;\n      document.body.append(domContainer);\n    }\n    const currentOptions = itemFromSingleOrMultiple(options, index),\n      dom = this.dom(),\n      oldIndex = dom.findIndex(v => v.id === id);\n    if (oldIndex >= 0) {\n      const old = this.domItem(oldIndex);\n      if (old && !old.destroyed) {\n        old.destroy();\n        dom.splice(oldIndex, 1);\n      }\n    }\n    let canvasEl;\n    if (domContainer.tagName.toLowerCase() === \"canvas\") {\n      canvasEl = domContainer;\n      canvasEl.dataset[generatedAttribute] = \"false\";\n    } else {\n      const existingCanvases = domContainer.getElementsByTagName(\"canvas\");\n      if (existingCanvases.length) {\n        canvasEl = existingCanvases[0];\n        canvasEl.dataset[generatedAttribute] = \"false\";\n      } else {\n        canvasEl = document.createElement(\"canvas\");\n        canvasEl.dataset[generatedAttribute] = \"true\";\n        domContainer.appendChild(canvasEl);\n      }\n    }\n    if (!canvasEl.style.width) {\n      canvasEl.style.width = \"100%\";\n    }\n    if (!canvasEl.style.height) {\n      canvasEl.style.height = \"100%\";\n    }\n    const newItem = new Container(this, id, currentOptions);\n    if (oldIndex >= 0) {\n      dom.splice(oldIndex, 0, newItem);\n    } else {\n      dom.push(newItem);\n    }\n    newItem.canvas.loadCanvas(canvasEl);\n    await newItem.start();\n    return newItem;\n  }\n}","map":{"version":3,"names":["errorPrefix","generatedAttribute","getLogger","isBoolean","isFunction","isNumber","isString","itemFromSingleOrMultiple","Container","EventDispatcher","Plugins","getRandom","getDataFromUrl","data","url","index","fallback","response","fetch","ok","json","error","status","isParamsEmpty","params","id","element","options","isParams","obj","Engine","constructor","_configs","Map","_domArray","_eventDispatcher","_initialized","plugins","configs","res","name","config","version","addConfig","nameOrConfig","set","_nameOrConfig$name","addEventListener","type","listener","addInteractor","interactorInitializer","refresh","addMover","moverInitializer","addParticleMover","addParticleUpdater","updaterInitializer","addPathGenerator","generator","addPlugin","plugin","addPreset","preset","override","addShape","shape","drawer","initOrRefresh","afterEffectOrRefresh","destroyOrRefresh","customDrawer","realRefresh","realInit","realAfterEffect","realDestroy","undefined","afterEffect","destroy","draw","init","addShapeDrawer","dispatchEvent","args","dom","domItem","item","destroyed","splice","load","tagIdOrOptionsOrParams","loadFromArray","optionsOrIndex","_loadParams","loadJSON","tagId","pathConfigJson","forEach","t","removeEventListener","HTMLElement","setJSON","setOnClickHandler","callback","length","Error","addClickHandler","_params$id","_params$element","Math","floor","domContainer","document","getElementById","createElement","body","append","currentOptions","oldIndex","findIndex","v","old","canvasEl","tagName","toLowerCase","dataset","existingCanvases","getElementsByTagName","appendChild","style","width","height","newItem","push","canvas","loadCanvas","start"],"sources":["/workspaces/frontend/node_modules/tsparticles-engine/esm/Core/Engine.js"],"sourcesContent":["import { errorPrefix, generatedAttribute } from \"./Utils/Constants\";\nimport { getLogger, isBoolean, isFunction, isNumber, isString, itemFromSingleOrMultiple } from \"../Utils/Utils\";\nimport { Container } from \"./Container\";\nimport { EventDispatcher } from \"../Utils/EventDispatcher\";\nimport { Plugins } from \"./Utils/Plugins\";\nimport { getRandom } from \"../Utils/NumberUtils\";\nasync function getDataFromUrl(data) {\n    const url = itemFromSingleOrMultiple(data.url, data.index);\n    if (!url) {\n        return data.fallback;\n    }\n    const response = await fetch(url);\n    if (response.ok) {\n        return response.json();\n    }\n    getLogger().error(`${errorPrefix} ${response.status} while retrieving config file`);\n    return data.fallback;\n}\nfunction isParamsEmpty(params) {\n    return !params.id && !params.element && !params.url && !params.options;\n}\nfunction isParams(obj) {\n    return !isParamsEmpty(obj);\n}\nexport class Engine {\n    constructor() {\n        this._configs = new Map();\n        this._domArray = [];\n        this._eventDispatcher = new EventDispatcher();\n        this._initialized = false;\n        this.plugins = new Plugins(this);\n    }\n    get configs() {\n        const res = {};\n        for (const [name, config] of this._configs) {\n            res[name] = config;\n        }\n        return res;\n    }\n    get version() {\n        return \"2.12.0\";\n    }\n    addConfig(nameOrConfig, config) {\n        if (isString(nameOrConfig)) {\n            if (config) {\n                config.name = nameOrConfig;\n                this._configs.set(nameOrConfig, config);\n            }\n        }\n        else {\n            this._configs.set(nameOrConfig.name ?? \"default\", nameOrConfig);\n        }\n    }\n    addEventListener(type, listener) {\n        this._eventDispatcher.addEventListener(type, listener);\n    }\n    async addInteractor(name, interactorInitializer, refresh = true) {\n        this.plugins.addInteractor(name, interactorInitializer);\n        await this.refresh(refresh);\n    }\n    async addMover(name, moverInitializer, refresh = true) {\n        this.plugins.addParticleMover(name, moverInitializer);\n        await this.refresh(refresh);\n    }\n    async addParticleUpdater(name, updaterInitializer, refresh = true) {\n        this.plugins.addParticleUpdater(name, updaterInitializer);\n        await this.refresh(refresh);\n    }\n    async addPathGenerator(name, generator, refresh = true) {\n        this.plugins.addPathGenerator(name, generator);\n        await this.refresh(refresh);\n    }\n    async addPlugin(plugin, refresh = true) {\n        this.plugins.addPlugin(plugin);\n        await this.refresh(refresh);\n    }\n    async addPreset(preset, options, override = false, refresh = true) {\n        this.plugins.addPreset(preset, options, override);\n        await this.refresh(refresh);\n    }\n    async addShape(shape, drawer, initOrRefresh, afterEffectOrRefresh, destroyOrRefresh, refresh = true) {\n        let customDrawer;\n        let realRefresh = refresh, realInit, realAfterEffect, realDestroy;\n        if (isBoolean(initOrRefresh)) {\n            realRefresh = initOrRefresh;\n            realInit = undefined;\n        }\n        else {\n            realInit = initOrRefresh;\n        }\n        if (isBoolean(afterEffectOrRefresh)) {\n            realRefresh = afterEffectOrRefresh;\n            realAfterEffect = undefined;\n        }\n        else {\n            realAfterEffect = afterEffectOrRefresh;\n        }\n        if (isBoolean(destroyOrRefresh)) {\n            realRefresh = destroyOrRefresh;\n            realDestroy = undefined;\n        }\n        else {\n            realDestroy = destroyOrRefresh;\n        }\n        if (isFunction(drawer)) {\n            customDrawer = {\n                afterEffect: realAfterEffect,\n                destroy: realDestroy,\n                draw: drawer,\n                init: realInit,\n            };\n        }\n        else {\n            customDrawer = drawer;\n        }\n        this.plugins.addShapeDrawer(shape, customDrawer);\n        await this.refresh(realRefresh);\n    }\n    dispatchEvent(type, args) {\n        this._eventDispatcher.dispatchEvent(type, args);\n    }\n    dom() {\n        return this._domArray;\n    }\n    domItem(index) {\n        const dom = this.dom(), item = dom[index];\n        if (!item || item.destroyed) {\n            dom.splice(index, 1);\n            return;\n        }\n        return item;\n    }\n    init() {\n        if (this._initialized) {\n            return;\n        }\n        this._initialized = true;\n    }\n    async load(tagIdOrOptionsOrParams, options) {\n        return this.loadFromArray(tagIdOrOptionsOrParams, options);\n    }\n    async loadFromArray(tagIdOrOptionsOrParams, optionsOrIndex, index) {\n        let params;\n        if (!isParams(tagIdOrOptionsOrParams)) {\n            params = {};\n            if (isString(tagIdOrOptionsOrParams)) {\n                params.id = tagIdOrOptionsOrParams;\n            }\n            else {\n                params.options = tagIdOrOptionsOrParams;\n            }\n            if (isNumber(optionsOrIndex)) {\n                params.index = optionsOrIndex;\n            }\n            else {\n                params.options = optionsOrIndex ?? params.options;\n            }\n            params.index = index ?? params.index;\n        }\n        else {\n            params = tagIdOrOptionsOrParams;\n        }\n        return this._loadParams(params);\n    }\n    async loadJSON(tagId, pathConfigJson, index) {\n        let url, id;\n        if (isNumber(pathConfigJson) || pathConfigJson === undefined) {\n            url = tagId;\n        }\n        else {\n            id = tagId;\n            url = pathConfigJson;\n        }\n        return this._loadParams({ id: id, url, index });\n    }\n    async refresh(refresh = true) {\n        if (!refresh) {\n            return;\n        }\n        this.dom().forEach((t) => t.refresh());\n    }\n    removeEventListener(type, listener) {\n        this._eventDispatcher.removeEventListener(type, listener);\n    }\n    async set(id, element, options, index) {\n        const params = { index };\n        if (isString(id)) {\n            params.id = id;\n        }\n        else {\n            params.element = id;\n        }\n        if (element instanceof HTMLElement) {\n            params.element = element;\n        }\n        else {\n            params.options = element;\n        }\n        if (isNumber(options)) {\n            params.index = options;\n        }\n        else {\n            params.options = options ?? params.options;\n        }\n        return this._loadParams(params);\n    }\n    async setJSON(id, element, pathConfigJson, index) {\n        const params = {};\n        if (id instanceof HTMLElement) {\n            params.element = id;\n            params.url = element;\n            params.index = pathConfigJson;\n        }\n        else {\n            params.id = id;\n            params.element = element;\n            params.url = pathConfigJson;\n            params.index = index;\n        }\n        return this._loadParams(params);\n    }\n    setOnClickHandler(callback) {\n        const dom = this.dom();\n        if (!dom.length) {\n            throw new Error(`${errorPrefix} can only set click handlers after calling tsParticles.load()`);\n        }\n        for (const domItem of dom) {\n            domItem.addClickHandler(callback);\n        }\n    }\n    async _loadParams(params) {\n        const id = params.id ?? `tsparticles${Math.floor(getRandom() * 10000)}`, { index, url } = params, options = url ? await getDataFromUrl({ fallback: params.options, url, index }) : params.options;\n        let domContainer = params.element ?? document.getElementById(id);\n        if (!domContainer) {\n            domContainer = document.createElement(\"div\");\n            domContainer.id = id;\n            document.body.append(domContainer);\n        }\n        const currentOptions = itemFromSingleOrMultiple(options, index), dom = this.dom(), oldIndex = dom.findIndex((v) => v.id === id);\n        if (oldIndex >= 0) {\n            const old = this.domItem(oldIndex);\n            if (old && !old.destroyed) {\n                old.destroy();\n                dom.splice(oldIndex, 1);\n            }\n        }\n        let canvasEl;\n        if (domContainer.tagName.toLowerCase() === \"canvas\") {\n            canvasEl = domContainer;\n            canvasEl.dataset[generatedAttribute] = \"false\";\n        }\n        else {\n            const existingCanvases = domContainer.getElementsByTagName(\"canvas\");\n            if (existingCanvases.length) {\n                canvasEl = existingCanvases[0];\n                canvasEl.dataset[generatedAttribute] = \"false\";\n            }\n            else {\n                canvasEl = document.createElement(\"canvas\");\n                canvasEl.dataset[generatedAttribute] = \"true\";\n                domContainer.appendChild(canvasEl);\n            }\n        }\n        if (!canvasEl.style.width) {\n            canvasEl.style.width = \"100%\";\n        }\n        if (!canvasEl.style.height) {\n            canvasEl.style.height = \"100%\";\n        }\n        const newItem = new Container(this, id, currentOptions);\n        if (oldIndex >= 0) {\n            dom.splice(oldIndex, 0, newItem);\n        }\n        else {\n            dom.push(newItem);\n        }\n        newItem.canvas.loadCanvas(canvasEl);\n        await newItem.start();\n        return newItem;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}