{"ast":null,"code":"import \"core-js/modules/es.string.trim.js\";\n/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n/**\n * Returns `true` if the given element is in a right-to-left direction.\n *\n * @param el Element to determine direction from\n * @param shouldCheck Optional. If `false`, return `false` without checking\n *     direction. Determining the direction of `el` is somewhat expensive, so\n *     this parameter can be used as a conditional guard. Defaults to `true`.\n */\nexport function isRtl(el) {\n  var shouldCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  return shouldCheck && getComputedStyle(el).getPropertyValue('direction').trim() === 'rtl';\n}","map":{"version":3,"names":["isRtl","el","shouldCheck","arguments","length","undefined","getComputedStyle","getPropertyValue","trim"],"sources":["is-rtl.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Returns `true` if the given element is in a right-to-left direction.\n *\n * @param el Element to determine direction from\n * @param shouldCheck Optional. If `false`, return `false` without checking\n *     direction. Determining the direction of `el` is somewhat expensive, so\n *     this parameter can be used as a conditional guard. Defaults to `true`.\n */\nexport function isRtl(el: HTMLElement, shouldCheck = true) {\n  return (\n    shouldCheck &&\n    getComputedStyle(el).getPropertyValue('direction').trim() === 'rtl'\n  );\n}\n"],"mappings":";AAAA;;;;;AAMA;;;;;;;;AAQA,OAAM,SAAUA,KAAKA,CAACC,EAAe,EAAoB;EAAA,IAAlBC,WAAW,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;EACvD,OACED,WAAW,IACXI,gBAAgB,CAACL,EAAE,CAAC,CAACM,gBAAgB,CAAC,WAAW,CAAC,CAACC,IAAI,EAAE,KAAK,KAAK;AAEvE"},"metadata":{},"sourceType":"module","externalDependencies":[]}