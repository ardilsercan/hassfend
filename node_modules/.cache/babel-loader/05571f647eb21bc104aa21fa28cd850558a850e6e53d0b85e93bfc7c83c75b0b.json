{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport \"@material/mwc-ripple\";\nimport { RippleHandlers } from \"@material/mwc-ripple/ripple-handlers\";\nimport { LitElement, css, html } from \"lit\";\nimport { customElement, eventOptions, property, queryAsync, state } from \"lit/decorators\";\nimport \"../components/ha-card\";\nimport \"../components/ha-svg-icon\";\nlet OnboardingWelcomeLink = _decorate([customElement(\"onboarding-welcome-link\")], function (_initialize, _LitElement) {\n  class OnboardingWelcomeLink extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: OnboardingWelcomeLink,\n    d: [{\n      kind: \"field\",\n      decorators: [property()],\n      key: \"label\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"iconPath\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"noninteractive\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [queryAsync(\"mwc-ripple\")],\n      key: \"_ripple\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_shouldRenderRipple\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        return html`\n      <ha-card\n        .tabIndex=${this.noninteractive ? \"-1\" : \"0\"}\n        @focus=${this.handleRippleFocus}\n        @blur=${this.handleRippleBlur}\n        @mousedown=${this.handleRippleActivate}\n        @mouseup=${this.handleRippleDeactivate}\n        @mouseenter=${this.handleRippleMouseEnter}\n        @mouseleave=${this.handleRippleMouseLeave}\n        @touchstart=${this.handleRippleActivate}\n        @touchend=${this.handleRippleDeactivate}\n        @touchcancel=${this.handleRippleDeactivate}\n        @keydown=${this._handleKeyDown}\n      >\n        <ha-svg-icon .path=${this.iconPath}></ha-svg-icon>\n        ${this.label}\n        ${this._shouldRenderRipple ? html`<mwc-ripple></mwc-ripple>` : \"\"}\n      </ha-card>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleKeyDown\",\n      value: function _handleKeyDown(ev) {\n        if (ev.key === \"Enter\" || ev.key === \" \") {\n          ev.target.click();\n        }\n      }\n    }, {\n      kind: \"field\",\n      key: \"_rippleHandlers\",\n      value() {\n        return new RippleHandlers(() => {\n          this._shouldRenderRipple = true;\n          return this._ripple;\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"handleRippleMouseEnter\",\n      value: function handleRippleMouseEnter() {\n        this._rippleHandlers.startHover();\n      }\n    }, {\n      kind: \"method\",\n      key: \"handleRippleMouseLeave\",\n      value: function handleRippleMouseLeave() {\n        this._rippleHandlers.endHover();\n      }\n    }, {\n      kind: \"method\",\n      decorators: [eventOptions({\n        passive: true\n      })],\n      key: \"handleRippleActivate\",\n      value: function handleRippleActivate(evt) {\n        this._rippleHandlers.startPress(evt);\n      }\n    }, {\n      kind: \"method\",\n      key: \"handleRippleDeactivate\",\n      value: function handleRippleDeactivate() {\n        this._rippleHandlers.endPress();\n      }\n    }, {\n      kind: \"method\",\n      key: \"handleRippleFocus\",\n      value: function handleRippleFocus() {\n        this._rippleHandlers.startFocus();\n      }\n    }, {\n      kind: \"method\",\n      key: \"handleRippleBlur\",\n      value: function handleRippleBlur() {\n        this._rippleHandlers.endFocus();\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css`\n      :host {\n        cursor: pointer;\n      }\n      ha-card {\n        overflow: hidden;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        text-align: center;\n        font-weight: 500;\n        padding: 32px 16px;\n        height: 100%;\n      }\n      ha-svg-icon {\n        color: var(--text-primary-color);\n        background: var(--welcome-link-color, var(--primary-color));\n        border-radius: 50%;\n        padding: 8px;\n        margin-bottom: 16px;\n      }\n    `;\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["RippleHandlers","LitElement","css","html","customElement","eventOptions","property","queryAsync","state","OnboardingWelcomeLink","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","key","value","type","Boolean","render","noninteractive","handleRippleFocus","handleRippleBlur","handleRippleActivate","handleRippleDeactivate","handleRippleMouseEnter","handleRippleMouseLeave","_handleKeyDown","iconPath","label","_shouldRenderRipple","ev","target","click","_ripple","_rippleHandlers","startHover","endHover","passive","evt","startPress","endPress","startFocus","endFocus","static","styles"],"sources":["/workspaces/frontend/src/onboarding/onboarding-welcome-link.ts"],"sourcesContent":["import \"@material/mwc-ripple\";\nimport type { Ripple } from \"@material/mwc-ripple\";\nimport { RippleHandlers } from \"@material/mwc-ripple/ripple-handlers\";\nimport { CSSResultGroup, LitElement, TemplateResult, css, html } from \"lit\";\nimport {\n  customElement,\n  eventOptions,\n  property,\n  queryAsync,\n  state,\n} from \"lit/decorators\";\nimport \"../components/ha-card\";\nimport \"../components/ha-svg-icon\";\n\n@customElement(\"onboarding-welcome-link\")\nclass OnboardingWelcomeLink extends LitElement {\n  @property() public label!: string;\n\n  @property() public iconPath!: string;\n\n  @property({ type: Boolean }) public noninteractive = false;\n\n  @queryAsync(\"mwc-ripple\") private _ripple!: Promise<Ripple | null>;\n\n  @state() private _shouldRenderRipple = false;\n\n  protected render(): TemplateResult {\n    return html`\n      <ha-card\n        .tabIndex=${this.noninteractive ? \"-1\" : \"0\"}\n        @focus=${this.handleRippleFocus}\n        @blur=${this.handleRippleBlur}\n        @mousedown=${this.handleRippleActivate}\n        @mouseup=${this.handleRippleDeactivate}\n        @mouseenter=${this.handleRippleMouseEnter}\n        @mouseleave=${this.handleRippleMouseLeave}\n        @touchstart=${this.handleRippleActivate}\n        @touchend=${this.handleRippleDeactivate}\n        @touchcancel=${this.handleRippleDeactivate}\n        @keydown=${this._handleKeyDown}\n      >\n        <ha-svg-icon .path=${this.iconPath}></ha-svg-icon>\n        ${this.label}\n        ${this._shouldRenderRipple ? html`<mwc-ripple></mwc-ripple>` : \"\"}\n      </ha-card>\n    `;\n  }\n\n  private _handleKeyDown(ev: KeyboardEvent): void {\n    if (ev.key === \"Enter\" || ev.key === \" \") {\n      (ev.target as HTMLElement).click();\n    }\n  }\n\n  private _rippleHandlers: RippleHandlers = new RippleHandlers(() => {\n    this._shouldRenderRipple = true;\n    return this._ripple;\n  });\n\n  private handleRippleMouseEnter() {\n    this._rippleHandlers.startHover();\n  }\n\n  private handleRippleMouseLeave() {\n    this._rippleHandlers.endHover();\n  }\n\n  @eventOptions({ passive: true })\n  private handleRippleActivate(evt?: Event) {\n    this._rippleHandlers.startPress(evt);\n  }\n\n  private handleRippleDeactivate() {\n    this._rippleHandlers.endPress();\n  }\n\n  private handleRippleFocus() {\n    this._rippleHandlers.startFocus();\n  }\n\n  private handleRippleBlur() {\n    this._rippleHandlers.endFocus();\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      :host {\n        cursor: pointer;\n      }\n      ha-card {\n        overflow: hidden;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        text-align: center;\n        font-weight: 500;\n        padding: 32px 16px;\n        height: 100%;\n      }\n      ha-svg-icon {\n        color: var(--text-primary-color);\n        background: var(--welcome-link-color, var(--primary-color));\n        border-radius: 50%;\n        padding: 8px;\n        margin-bottom: 16px;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"onboarding-welcome-link\": OnboardingWelcomeLink;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}