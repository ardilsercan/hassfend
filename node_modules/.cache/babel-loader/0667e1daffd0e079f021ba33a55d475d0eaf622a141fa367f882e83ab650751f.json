{"ast":null,"code":"import memoizeOne from \"memoize-one\";\nimport \"../../resources/intl-polyfill\";\nexport const localizeWeekdays = memoizeOne((language, short) => {\n  const days = [];\n  const format = new Intl.DateTimeFormat(language, {\n    weekday: short ? \"short\" : \"long\",\n    timeZone: \"UTC\"\n  });\n  for (let i = 0; i < 7; i++) {\n    const date = new Date(Date.UTC(1970, 0, 1 + 3 + i));\n    days.push(format.format(date));\n  }\n  return days;\n});\nexport const localizeMonths = memoizeOne((language, short) => {\n  const months = [];\n  const format = new Intl.DateTimeFormat(language, {\n    month: short ? \"short\" : \"long\",\n    timeZone: \"UTC\"\n  });\n  for (let i = 0; i < 12; i++) {\n    const date = new Date(Date.UTC(1970, 0 + i, 1));\n    months.push(format.format(date));\n  }\n  return months;\n});","map":{"version":3,"names":["memoizeOne","localizeWeekdays","language","short","days","format","Intl","DateTimeFormat","weekday","timeZone","i","date","Date","UTC","push","localizeMonths","months","month"],"sources":["/workspaces/frontend/src/common/datetime/localize_date.ts"],"sourcesContent":["import memoizeOne from \"memoize-one\";\nimport \"../../resources/intl-polyfill\";\n\nexport const localizeWeekdays = memoizeOne(\n  (language: string, short: boolean): string[] => {\n    const days: string[] = [];\n    const format = new Intl.DateTimeFormat(language, {\n      weekday: short ? \"short\" : \"long\",\n      timeZone: \"UTC\",\n    });\n    for (let i = 0; i < 7; i++) {\n      const date = new Date(Date.UTC(1970, 0, 1 + 3 + i));\n      days.push(format.format(date));\n    }\n    return days;\n  }\n);\n\nexport const localizeMonths = memoizeOne(\n  (language: string, short: boolean): string[] => {\n    const months: string[] = [];\n    const format = new Intl.DateTimeFormat(language, {\n      month: short ? \"short\" : \"long\",\n      timeZone: \"UTC\",\n    });\n    for (let i = 0; i < 12; i++) {\n      const date = new Date(Date.UTC(1970, 0 + i, 1));\n      months.push(format.format(date));\n    }\n    return months;\n  }\n);\n"],"mappings":"AAAA,OAAOA,UAAU,MAAM,aAAa;AACpC,OAAO,+BAA+B;AAEtC,OAAO,MAAMC,gBAAgB,GAAGD,UAAU,CACxC,CAACE,QAAgB,EAAEC,KAAc,KAAe;EAC9C,MAAMC,IAAc,GAAG,EAAE;EACzB,MAAMC,MAAM,GAAG,IAAIC,IAAI,CAACC,cAAc,CAACL,QAAQ,EAAE;IAC/CM,OAAO,EAAEL,KAAK,GAAG,OAAO,GAAG,MAAM;IACjCM,QAAQ,EAAE;EACZ,CAAC,CAAC;EACF,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IAC1B,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACA,IAAI,CAACC,GAAG,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,GAAGH,CAAC,CAAC,CAAC;IACnDN,IAAI,CAACU,IAAI,CAACT,MAAM,CAACA,MAAM,CAACM,IAAI,CAAC,CAAC;EAChC;EACA,OAAOP,IAAI;AACb,CACF,CAAC;AAED,OAAO,MAAMW,cAAc,GAAGf,UAAU,CACtC,CAACE,QAAgB,EAAEC,KAAc,KAAe;EAC9C,MAAMa,MAAgB,GAAG,EAAE;EAC3B,MAAMX,MAAM,GAAG,IAAIC,IAAI,CAACC,cAAc,CAACL,QAAQ,EAAE;IAC/Ce,KAAK,EAAEd,KAAK,GAAG,OAAO,GAAG,MAAM;IAC/BM,QAAQ,EAAE;EACZ,CAAC,CAAC;EACF,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;IAC3B,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACA,IAAI,CAACC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAGH,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/CM,MAAM,CAACF,IAAI,CAACT,MAAM,CAACA,MAAM,CAACM,IAAI,CAAC,CAAC;EAClC;EACA,OAAOK,MAAM;AACf,CACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}