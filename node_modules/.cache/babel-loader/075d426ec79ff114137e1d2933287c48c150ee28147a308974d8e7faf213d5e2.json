{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _decorate from \"@babel/runtime/helpers/decorate\";\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4;\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.object.values.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"@material/mwc-list/mwc-list-item\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { caseInsensitiveStringCompare } from \"../../../../common/string/compare\";\nimport \"../../../../components/ha-card\";\nimport \"../../../../components/ha-icon-next\";\nimport { computeDeviceName } from \"../../../../data/device_registry\";\nvar MAX_VISIBLE_VIA_DEVICES = 10;\nexport var HaDeviceViaDevicesCard = _decorate([customElement(\"ha-device-via-devices-card\")], function (_initialize, _LitElement) {\n  var HaDeviceViaDevicesCard = /*#__PURE__*/function (_LitElement2) {\n    _inherits(HaDeviceViaDevicesCard, _LitElement2);\n    function HaDeviceViaDevicesCard() {\n      var _this;\n      _classCallCheck(this, HaDeviceViaDevicesCard);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, HaDeviceViaDevicesCard, [].concat(args));\n      _initialize(_assertThisInitialized(_this));\n      return _this;\n    }\n    return _createClass(HaDeviceViaDevicesCard);\n  }(_LitElement);\n  return {\n    F: HaDeviceViaDevicesCard,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"deviceId\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_showAll\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_viaDevices\",\n      value: function value() {\n        var _this2 = this;\n        return memoizeOne(function (deviceId, devices) {\n          return Object.values(devices).filter(function (device) {\n            return device.via_device_id === deviceId;\n          }).sort(function (d1, d2) {\n            return caseInsensitiveStringCompare(computeDeviceName(d1, _this2.hass), computeDeviceName(d2, _this2.hass), _this2.hass.locale.language);\n          });\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var _this3 = this;\n        var viaDevices = this._viaDevices(this.deviceId, this.hass.devices);\n        if (viaDevices.length === 0) {\n          return nothing;\n        }\n        return html(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      <ha-card>\\n        <h1 class=\\\"card-header\\\">\\n          \", \"\\n        </h1>\\n        \", \"\\n        \", \"\\n      </ha-card>\\n    \"])), this.hass.localize(\"ui.panel.config.devices.connected_devices.heading\"), (this._showAll ? viaDevices : viaDevices.slice(0, MAX_VISIBLE_VIA_DEVICES)).map(function (viaDevice) {\n          return html(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n            <a href=\", \">\\n              <mwc-list-item hasMeta>\\n                \", \"\\n                <ha-icon-next slot=\\\"meta\\\"></ha-icon-next>\\n              </mwc-list-item>\\n            </a>\\n          \"])), \"/config/devices/device/\".concat(viaDevice.id), computeDeviceName(viaDevice, _this3.hass));\n        }), !this._showAll && viaDevices.length > MAX_VISIBLE_VIA_DEVICES ? html(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n              <button class=\\\"show-more\\\" @click=\", \">\\n                \", \"\\n              </button>\\n            \"])), this._toggleShowAll, this.hass.localize(\"ui.panel.config.devices.connected_devices.show_more\", {\n          count: viaDevices.length - MAX_VISIBLE_VIA_DEVICES\n        })) : \"\");\n      }\n    }, {\n      kind: \"method\",\n      key: \"_toggleShowAll\",\n      value: function _toggleShowAll() {\n        this._showAll = !this._showAll;\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n      :host {\\n        display: block;\\n      }\\n\\n      .card-header {\\n        padding-bottom: 0;\\n      }\\n\\n      a {\\n        text-decoration: none;\\n        color: var(--primary-text-color);\\n      }\\n\\n      button.show-more {\\n        color: var(--primary-color);\\n        text-align: left;\\n        cursor: pointer;\\n        background: none;\\n        border-width: initial;\\n        border-style: none;\\n        border-color: initial;\\n        border-image: initial;\\n        padding: 16px;\\n        font: inherit;\\n      }\\n      button.show-more:focus {\\n        outline: none;\\n        text-decoration: underline;\\n      }\\n    \"])));\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","nothing","customElement","property","state","memoizeOne","caseInsensitiveStringCompare","computeDeviceName","MAX_VISIBLE_VIA_DEVICES","HaDeviceViaDevicesCard","_decorate","_initialize","_LitElement","_LitElement2","_inherits","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_assertThisInitialized","_createClass","F","d","kind","decorators","attribute","key","value","_this2","deviceId","devices","Object","values","filter","device","via_device_id","sort","d1","d2","hass","locale","language","render","_this3","viaDevices","_viaDevices","_templateObject","_taggedTemplateLiteral","localize","_showAll","slice","map","viaDevice","_templateObject2","id","_templateObject3","_toggleShowAll","count","static","styles","_templateObject4"],"sources":["/workspaces/frontend/src/panels/config/devices/device-detail/ha-device-via-devices-card.ts"],"sourcesContent":["import \"@material/mwc-list/mwc-list-item\";\nimport { css, CSSResultGroup, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { caseInsensitiveStringCompare } from \"../../../../common/string/compare\";\nimport \"../../../../components/ha-card\";\nimport \"../../../../components/ha-icon-next\";\nimport {\n  computeDeviceName,\n  DeviceRegistryEntry,\n} from \"../../../../data/device_registry\";\nimport type { HomeAssistant } from \"../../../../types\";\n\nconst MAX_VISIBLE_VIA_DEVICES = 10;\n\n@customElement(\"ha-device-via-devices-card\")\nexport class HaDeviceViaDevicesCard extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property() public deviceId!: string;\n\n  @state() public _showAll = false;\n\n  private _viaDevices = memoizeOne(\n    (\n      deviceId: string,\n      devices: Record<string, DeviceRegistryEntry>\n    ): DeviceRegistryEntry[] =>\n      Object.values(devices)\n        .filter((device) => device.via_device_id === deviceId)\n        .sort((d1, d2) =>\n          caseInsensitiveStringCompare(\n            computeDeviceName(d1, this.hass),\n            computeDeviceName(d2, this.hass),\n            this.hass.locale.language\n          )\n        )\n  );\n\n  protected render() {\n    const viaDevices = this._viaDevices(this.deviceId, this.hass.devices);\n\n    if (viaDevices.length === 0) {\n      return nothing;\n    }\n\n    return html`\n      <ha-card>\n        <h1 class=\"card-header\">\n          ${this.hass.localize(\n            \"ui.panel.config.devices.connected_devices.heading\"\n          )}\n        </h1>\n        ${(this._showAll\n          ? viaDevices\n          : viaDevices.slice(0, MAX_VISIBLE_VIA_DEVICES)\n        ).map(\n          (viaDevice) => html`\n            <a href=${`/config/devices/device/${viaDevice.id}`}>\n              <mwc-list-item hasMeta>\n                ${computeDeviceName(viaDevice, this.hass)}\n                <ha-icon-next slot=\"meta\"></ha-icon-next>\n              </mwc-list-item>\n            </a>\n          `\n        )}\n        ${!this._showAll && viaDevices.length > MAX_VISIBLE_VIA_DEVICES\n          ? html`\n              <button class=\"show-more\" @click=${this._toggleShowAll}>\n                ${this.hass.localize(\n                  \"ui.panel.config.devices.connected_devices.show_more\",\n                  { count: viaDevices.length - MAX_VISIBLE_VIA_DEVICES }\n                )}\n              </button>\n            `\n          : \"\"}\n      </ha-card>\n    `;\n  }\n\n  private _toggleShowAll() {\n    this._showAll = !this._showAll;\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      :host {\n        display: block;\n      }\n\n      .card-header {\n        padding-bottom: 0;\n      }\n\n      a {\n        text-decoration: none;\n        color: var(--primary-text-color);\n      }\n\n      button.show-more {\n        color: var(--primary-color);\n        text-align: left;\n        cursor: pointer;\n        background: none;\n        border-width: initial;\n        border-style: none;\n        border-color: initial;\n        border-image: initial;\n        padding: 16px;\n        font: inherit;\n      }\n      button.show-more:focus {\n        outline: none;\n        text-decoration: underline;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-device-via-devices-card\": HaDeviceViaDevicesCard;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}