{"ast":null,"code":"import { ensureArray } from \"../common/array/ensure-array\";\nexport const processConversationInput = (hass, text, conversation_id, language) => hass.callWS({\n  type: \"conversation/process\",\n  text,\n  conversation_id,\n  language\n});\nexport const listAgents = (hass, language, country) => hass.callWS({\n  type: \"conversation/agent/list\",\n  language,\n  country\n});\nexport const prepareConversation = (hass, language) => hass.callWS({\n  type: \"conversation/prepare\",\n  language\n});\nexport const debugAgent = (hass, sentences, language, device_id) => hass.callWS({\n  type: \"conversation/agent/homeassistant/debug\",\n  sentences: ensureArray(sentences),\n  language,\n  device_id\n});","map":{"version":3,"names":["ensureArray","processConversationInput","hass","text","conversation_id","language","callWS","type","listAgents","country","prepareConversation","debugAgent","sentences","device_id"],"sources":["/workspaces/frontend/src/data/conversation.ts"],"sourcesContent":["import { ensureArray } from \"../common/array/ensure-array\";\nimport { HomeAssistant } from \"../types\";\n\ninterface IntentTarget {\n  type: \"area\" | \"device\" | \"entity\" | \"domain\" | \"device_class\" | \"custom\";\n  name: string;\n  id: string | null;\n}\n\ninterface IntentResultBase {\n  language: string;\n  speech:\n    | {\n        [SpeechType in \"plain\" | \"ssml\"]: { extra_data: any; speech: string };\n      }\n    | null;\n}\n\ninterface IntentResultActionDone extends IntentResultBase {\n  response_type: \"action_done\";\n  data: {\n    targets: IntentTarget[];\n    success: IntentTarget[];\n    failed: IntentTarget[];\n  };\n}\n\ninterface IntentResultQueryAnswer extends IntentResultBase {\n  response_type: \"query_answer\";\n  data: {\n    targets: IntentTarget[];\n    success: IntentTarget[];\n    failed: IntentTarget[];\n  };\n}\n\ninterface IntentResultError extends IntentResultBase {\n  response_type: \"error\";\n  data: {\n    code:\n      | \"no_intent_match\"\n      | \"no_valid_targets\"\n      | \"failed_to_handle\"\n      | \"unknown\";\n  };\n}\n\nexport interface ConversationResult {\n  conversation_id: string | null;\n  response:\n    | IntentResultActionDone\n    | IntentResultQueryAnswer\n    | IntentResultError;\n}\n\nexport interface Agent {\n  id: string;\n  name: string;\n  supported_languages: \"*\" | string[];\n}\n\nexport interface AssitDebugResult {\n  intent: {\n    name: string;\n  };\n  entities: Record<\n    string,\n    {\n      name: string;\n      value: string;\n      text: string;\n    }\n  >;\n}\n\nexport interface AssistDebugResponse {\n  results: (AssitDebugResult | null)[];\n}\n\nexport const processConversationInput = (\n  hass: HomeAssistant,\n  text: string,\n  // eslint-disable-next-line: variable-name\n  conversation_id: string | null,\n  language: string\n): Promise<ConversationResult> =>\n  hass.callWS({\n    type: \"conversation/process\",\n    text,\n    conversation_id,\n    language,\n  });\n\nexport const listAgents = (\n  hass: HomeAssistant,\n  language?: string,\n  country?: string\n): Promise<{ agents: Agent[] }> =>\n  hass.callWS({\n    type: \"conversation/agent/list\",\n    language,\n    country,\n  });\n\nexport const prepareConversation = (\n  hass: HomeAssistant,\n  language?: string\n): Promise<void> =>\n  hass.callWS({\n    type: \"conversation/prepare\",\n    language,\n  });\n\nexport const debugAgent = (\n  hass: HomeAssistant,\n  sentences: string[] | string,\n  language: string,\n  device_id?: string\n): Promise<AssistDebugResponse> =>\n  hass.callWS({\n    type: \"conversation/agent/homeassistant/debug\",\n    sentences: ensureArray(sentences),\n    language,\n    device_id,\n  });\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,8BAA8B;AA+E1D,OAAO,MAAMC,wBAAwB,GAAGA,CACtCC,IAAmB,EACnBC,IAAY,EAEZC,eAA8B,EAC9BC,QAAgB,KAEhBH,IAAI,CAACI,MAAM,CAAC;EACVC,IAAI,EAAE,sBAAsB;EAC5BJ,IAAI;EACJC,eAAe;EACfC;AACF,CAAC,CAAC;AAEJ,OAAO,MAAMG,UAAU,GAAGA,CACxBN,IAAmB,EACnBG,QAAiB,EACjBI,OAAgB,KAEhBP,IAAI,CAACI,MAAM,CAAC;EACVC,IAAI,EAAE,yBAAyB;EAC/BF,QAAQ;EACRI;AACF,CAAC,CAAC;AAEJ,OAAO,MAAMC,mBAAmB,GAAGA,CACjCR,IAAmB,EACnBG,QAAiB,KAEjBH,IAAI,CAACI,MAAM,CAAC;EACVC,IAAI,EAAE,sBAAsB;EAC5BF;AACF,CAAC,CAAC;AAEJ,OAAO,MAAMM,UAAU,GAAGA,CACxBT,IAAmB,EACnBU,SAA4B,EAC5BP,QAAgB,EAChBQ,SAAkB,KAElBX,IAAI,CAACI,MAAM,CAAC;EACVC,IAAI,EAAE,wCAAwC;EAC9CK,SAAS,EAAEZ,WAAW,CAACY,SAAS,CAAC;EACjCP,QAAQ;EACRQ;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}