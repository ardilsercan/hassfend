{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport \"../../../../components/ha-form/ha-form\";\nimport { fetchWakeWordInfo } from \"../../../../data/wake_word\";\nimport { documentationUrl } from \"../../../../util/documentation-url\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nexport let AssistPipelineDetailWakeWord = _decorate([customElement(\"assist-pipeline-detail-wakeword\")], function (_initialize, _LitElement) {\n  class AssistPipelineDetailWakeWord extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: AssistPipelineDetailWakeWord,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"data\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_wakeWords\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_schema\",\n      value() {\n        return memoizeOne(wakeWords => [{\n          name: \"\",\n          type: \"grid\",\n          schema: [{\n            name: \"wake_word_entity\",\n            selector: {\n              entity: {\n                domain: \"wake_word\"\n              }\n            }\n          }, wakeWords !== null && wakeWords !== void 0 && wakeWords.length ? {\n            name: \"wake_word_id\",\n            required: true,\n            selector: {\n              select: {\n                mode: \"dropdown\",\n                sort: true,\n                options: wakeWords.map(ww => ({\n                  value: ww.id,\n                  label: ww.name\n                }))\n              }\n            }\n          } : {\n            name: \"\",\n            type: \"constant\"\n          }]\n        }]);\n      }\n    }, {\n      kind: \"field\",\n      key: \"_computeLabel\",\n      value() {\n        return schema => schema.name ? this.hass.localize(`ui.panel.config.voice_assistants.assistants.pipeline.detail.form.${schema.name}`) : \"\";\n      }\n    }, {\n      kind: \"method\",\n      key: \"willUpdate\",\n      value: function willUpdate(changedProps) {\n        var _changedProps$get, _this$data;\n        if (changedProps.has(\"data\") && ((_changedProps$get = changedProps.get(\"data\")) === null || _changedProps$get === void 0 ? void 0 : _changedProps$get.wake_word_entity) !== ((_this$data = this.data) === null || _this$data === void 0 ? void 0 : _this$data.wake_word_entity)) {\n          var _changedProps$get2, _this$data2;\n          if ((_changedProps$get2 = changedProps.get(\"data\")) !== null && _changedProps$get2 !== void 0 && _changedProps$get2.wake_word_entity && (_this$data2 = this.data) !== null && _this$data2 !== void 0 && _this$data2.wake_word_id) {\n            fireEvent(this, \"value-changed\", {\n              value: {\n                ...this.data,\n                wake_word_id: undefined\n              }\n            });\n          }\n          this._fetchWakeWords();\n        }\n      }\n    }, {\n      kind: \"field\",\n      key: \"_hasWakeWorkEntities\",\n      value() {\n        return memoizeOne(states => Object.keys(states).some(entityId => entityId.startsWith(\"wake_word.\")));\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        const hasWakeWorkEntities = this._hasWakeWorkEntities(this.hass.states);\n        return html`\n      <div class=\"section\">\n        <div class=\"content\">\n          <div class=\"intro\">\n            <h3>\n              ${this.hass.localize(`ui.panel.config.voice_assistants.assistants.pipeline.detail.steps.wakeword.title`)}\n            </h3>\n            <p>\n              ${this.hass.localize(`ui.panel.config.voice_assistants.assistants.pipeline.detail.steps.wakeword.description`)}\n            </p>\n          </div>\n          ${!hasWakeWorkEntities ? html`${this.hass.localize(`ui.panel.config.voice_assistants.assistants.pipeline.detail.steps.wakeword.no_wake_words`)}\n                <a\n                  href=${documentationUrl(this.hass, \"/voice_control/install_wake_word_add_on/\")}\n                  target=\"_blank\"\n                  rel=\"noreferrer noopener\"\n                  >${this.hass.localize(`ui.panel.config.voice_assistants.assistants.pipeline.detail.steps.wakeword.no_wake_words_link`)}</a\n                >` : nothing}\n          <ha-form\n            .schema=${this._schema(this._wakeWords)}\n            .data=${this.data}\n            .hass=${this.hass}\n            .computeLabel=${this._computeLabel}\n            .disabled=${!hasWakeWorkEntities}\n          ></ha-form>\n        </div>\n      </div>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_fetchWakeWords\",\n      value: async function _fetchWakeWords() {\n        var _this$data3, _this$data4;\n        this._wakeWords = undefined;\n        if (!((_this$data3 = this.data) !== null && _this$data3 !== void 0 && _this$data3.wake_word_entity)) {\n          return;\n        }\n        const wakeWordEntity = this.data.wake_word_entity;\n        const wakewordInfo = await fetchWakeWordInfo(this.hass, wakeWordEntity);\n        if (this.data.wake_word_entity !== wakeWordEntity) {\n          // wake word entity changed while we were fetching\n          return;\n        }\n        this._wakeWords = wakewordInfo.wake_words;\n        if (this.data && (!((_this$data4 = this.data) !== null && _this$data4 !== void 0 && _this$data4.wake_word_id) || !this._wakeWords.some(ww => ww.id === this.data.wake_word_id))) {\n          var _this$_wakeWords$;\n          fireEvent(this, \"value-changed\", {\n            value: {\n              ...this.data,\n              wake_word_id: (_this$_wakeWords$ = this._wakeWords[0]) === null || _this$_wakeWords$ === void 0 ? void 0 : _this$_wakeWords$.id\n            }\n          });\n        }\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css`\n      .section {\n        border: 1px solid var(--divider-color);\n        border-radius: 8px;\n      }\n      .content {\n        padding: 16px;\n      }\n      .intro {\n        margin-bottom: 16px;\n      }\n      h3 {\n        font-weight: normal;\n        font-size: 22px;\n        line-height: 28px;\n        margin-top: 0;\n        margin-bottom: 4px;\n      }\n      p {\n        color: var(--secondary-text-color);\n        font-size: var(--mdc-typography-body2-font-size, 0.875rem);\n        margin-top: 0;\n        margin-bottom: 0;\n      }\n      a {\n        color: var(--primary-color);\n      }\n    `;\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","nothing","customElement","property","state","memoizeOne","fetchWakeWordInfo","documentationUrl","fireEvent","AssistPipelineDetailWakeWord","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","wakeWords","name","type","schema","selector","entity","domain","length","required","select","mode","sort","options","map","ww","id","label","hass","localize","willUpdate","changedProps","_changedProps$get","_this$data","has","get","wake_word_entity","data","_changedProps$get2","_this$data2","wake_word_id","undefined","_fetchWakeWords","states","Object","keys","some","entityId","startsWith","render","hasWakeWorkEntities","_hasWakeWorkEntities","_schema","_wakeWords","_computeLabel","_this$data3","_this$data4","wakeWordEntity","wakewordInfo","wake_words","_this$_wakeWords$","static","styles"],"sources":["/Users/sercanardil/Desktop/frontend/src/panels/config/voice-assistants/assist-pipeline-detail/assist-pipeline-detail-wakeword.ts"],"sourcesContent":["import {\n  css,\n  CSSResultGroup,\n  html,\n  LitElement,\n  nothing,\n  PropertyValues,\n} from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { LocalizeKeys } from \"../../../../common/translations/localize\";\nimport \"../../../../components/ha-form/ha-form\";\nimport { AssistPipeline } from \"../../../../data/assist_pipeline\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { fetchWakeWordInfo, WakeWord } from \"../../../../data/wake_word\";\nimport { documentationUrl } from \"../../../../util/documentation-url\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\n\n@customElement(\"assist-pipeline-detail-wakeword\")\nexport class AssistPipelineDetailWakeWord extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public data?: Partial<AssistPipeline>;\n\n  @state() private _wakeWords?: WakeWord[];\n\n  private _schema = memoizeOne(\n    (wakeWords?: WakeWord[]) =>\n      [\n        {\n          name: \"\",\n          type: \"grid\",\n          schema: [\n            {\n              name: \"wake_word_entity\",\n              selector: {\n                entity: {\n                  domain: \"wake_word\",\n                },\n              },\n            },\n            wakeWords?.length\n              ? {\n                  name: \"wake_word_id\",\n                  required: true,\n                  selector: {\n                    select: {\n                      mode: \"dropdown\",\n                      sort: true,\n                      options: wakeWords.map((ww) => ({\n                        value: ww.id,\n                        label: ww.name,\n                      })),\n                    },\n                  },\n                }\n              : { name: \"\", type: \"constant\" },\n          ] as const,\n        },\n      ] as const\n  );\n\n  private _computeLabel = (schema): string =>\n    schema.name\n      ? this.hass.localize(\n          `ui.panel.config.voice_assistants.assistants.pipeline.detail.form.${schema.name}` as LocalizeKeys\n        )\n      : \"\";\n\n  protected willUpdate(changedProps: PropertyValues) {\n    if (\n      changedProps.has(\"data\") &&\n      changedProps.get(\"data\")?.wake_word_entity !== this.data?.wake_word_entity\n    ) {\n      if (\n        changedProps.get(\"data\")?.wake_word_entity &&\n        this.data?.wake_word_id\n      ) {\n        fireEvent(this, \"value-changed\", {\n          value: { ...this.data, wake_word_id: undefined },\n        });\n      }\n      this._fetchWakeWords();\n    }\n  }\n\n  private _hasWakeWorkEntities = memoizeOne((states: HomeAssistant[\"states\"]) =>\n    Object.keys(states).some((entityId) => entityId.startsWith(\"wake_word.\"))\n  );\n\n  protected render() {\n    const hasWakeWorkEntities = this._hasWakeWorkEntities(this.hass.states);\n    return html`\n      <div class=\"section\">\n        <div class=\"content\">\n          <div class=\"intro\">\n            <h3>\n              ${this.hass.localize(\n                `ui.panel.config.voice_assistants.assistants.pipeline.detail.steps.wakeword.title`\n              )}\n            </h3>\n            <p>\n              ${this.hass.localize(\n                `ui.panel.config.voice_assistants.assistants.pipeline.detail.steps.wakeword.description`\n              )}\n            </p>\n          </div>\n          ${!hasWakeWorkEntities\n            ? html`${this.hass.localize(\n                  `ui.panel.config.voice_assistants.assistants.pipeline.detail.steps.wakeword.no_wake_words`\n                )}\n                <a\n                  href=${documentationUrl(\n                    this.hass,\n                    \"/voice_control/install_wake_word_add_on/\"\n                  )}\n                  target=\"_blank\"\n                  rel=\"noreferrer noopener\"\n                  >${this.hass.localize(\n                    `ui.panel.config.voice_assistants.assistants.pipeline.detail.steps.wakeword.no_wake_words_link`\n                  )}</a\n                >`\n            : nothing}\n          <ha-form\n            .schema=${this._schema(this._wakeWords)}\n            .data=${this.data}\n            .hass=${this.hass}\n            .computeLabel=${this._computeLabel}\n            .disabled=${!hasWakeWorkEntities}\n          ></ha-form>\n        </div>\n      </div>\n    `;\n  }\n\n  private async _fetchWakeWords() {\n    this._wakeWords = undefined;\n    if (!this.data?.wake_word_entity) {\n      return;\n    }\n    const wakeWordEntity = this.data.wake_word_entity;\n    const wakewordInfo = await fetchWakeWordInfo(this.hass, wakeWordEntity);\n    if (this.data.wake_word_entity !== wakeWordEntity) {\n      // wake word entity changed while we were fetching\n      return;\n    }\n    this._wakeWords = wakewordInfo.wake_words;\n    if (\n      this.data &&\n      (!this.data?.wake_word_id ||\n        !this._wakeWords.some((ww) => ww.id === this.data!.wake_word_id))\n    ) {\n      fireEvent(this, \"value-changed\", {\n        value: { ...this.data, wake_word_id: this._wakeWords[0]?.id },\n      });\n    }\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      .section {\n        border: 1px solid var(--divider-color);\n        border-radius: 8px;\n      }\n      .content {\n        padding: 16px;\n      }\n      .intro {\n        margin-bottom: 16px;\n      }\n      h3 {\n        font-weight: normal;\n        font-size: 22px;\n        line-height: 28px;\n        margin-top: 0;\n        margin-bottom: 4px;\n      }\n      p {\n        color: var(--secondary-text-color);\n        font-size: var(--mdc-typography-body2-font-size, 0.875rem);\n        margin-top: 0;\n        margin-bottom: 0;\n      }\n      a {\n        color: var(--primary-color);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"assist-pipeline-detail-wakeword\": AssistPipelineDetailWakeWord;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}