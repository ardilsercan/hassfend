{"ast":null,"code":"import \"../../resources/intl-polyfill\";\nconst leftPad = num => num < 10 ? `0${num}` : num;\nexport const formatDuration = (locale, duration) => {\n  const d = duration.days || 0;\n  const h = duration.hours || 0;\n  const m = duration.minutes || 0;\n  const s = duration.seconds || 0;\n  const ms = duration.milliseconds || 0;\n  if (d > 0) {\n    return `${Intl.NumberFormat(locale.language, {\n      style: \"unit\",\n      unit: \"day\",\n      unitDisplay: \"long\"\n    }).format(d)} ${h}:${leftPad(m)}:${leftPad(s)}`;\n  }\n  if (h > 0) {\n    return `${h}:${leftPad(m)}:${leftPad(s)}`;\n  }\n  if (m > 0) {\n    return `${m}:${leftPad(s)}`;\n  }\n  if (s > 0) {\n    return Intl.NumberFormat(locale.language, {\n      style: \"unit\",\n      unit: \"second\",\n      unitDisplay: \"long\"\n    }).format(s);\n  }\n  if (ms > 0) {\n    return Intl.NumberFormat(locale.language, {\n      style: \"unit\",\n      unit: \"millisecond\",\n      unitDisplay: \"long\"\n    }).format(ms);\n  }\n  return null;\n};","map":{"version":3,"names":["leftPad","num","formatDuration","locale","duration","d","days","h","hours","m","minutes","s","seconds","ms","milliseconds","Intl","NumberFormat","language","style","unit","unitDisplay","format"],"sources":["/workspaces/frontend/src/common/datetime/format_duration.ts"],"sourcesContent":["import { HaDurationData } from \"../../components/ha-duration-input\";\nimport { FrontendLocaleData } from \"../../data/translation\";\nimport \"../../resources/intl-polyfill\";\n\nconst leftPad = (num: number) => (num < 10 ? `0${num}` : num);\n\nexport const formatDuration = (\n  locale: FrontendLocaleData,\n  duration: HaDurationData\n) => {\n  const d = duration.days || 0;\n  const h = duration.hours || 0;\n  const m = duration.minutes || 0;\n  const s = duration.seconds || 0;\n  const ms = duration.milliseconds || 0;\n\n  if (d > 0) {\n    return `${Intl.NumberFormat(locale.language, {\n      style: \"unit\",\n      unit: \"day\",\n      unitDisplay: \"long\",\n    }).format(d)} ${h}:${leftPad(m)}:${leftPad(s)}`;\n  }\n  if (h > 0) {\n    return `${h}:${leftPad(m)}:${leftPad(s)}`;\n  }\n  if (m > 0) {\n    return `${m}:${leftPad(s)}`;\n  }\n  if (s > 0) {\n    return Intl.NumberFormat(locale.language, {\n      style: \"unit\",\n      unit: \"second\",\n      unitDisplay: \"long\",\n    }).format(s);\n  }\n  if (ms > 0) {\n    return Intl.NumberFormat(locale.language, {\n      style: \"unit\",\n      unit: \"millisecond\",\n      unitDisplay: \"long\",\n    }).format(ms);\n  }\n  return null;\n};\n"],"mappings":"AAEA,OAAO,+BAA+B;AAEtC,MAAMA,OAAO,GAAIC,GAAW,IAAMA,GAAG,GAAG,EAAE,GAAI,IAAGA,GAAI,EAAC,GAAGA,GAAI;AAE7D,OAAO,MAAMC,cAAc,GAAGA,CAC5BC,MAA0B,EAC1BC,QAAwB,KACrB;EACH,MAAMC,CAAC,GAAGD,QAAQ,CAACE,IAAI,IAAI,CAAC;EAC5B,MAAMC,CAAC,GAAGH,QAAQ,CAACI,KAAK,IAAI,CAAC;EAC7B,MAAMC,CAAC,GAAGL,QAAQ,CAACM,OAAO,IAAI,CAAC;EAC/B,MAAMC,CAAC,GAAGP,QAAQ,CAACQ,OAAO,IAAI,CAAC;EAC/B,MAAMC,EAAE,GAAGT,QAAQ,CAACU,YAAY,IAAI,CAAC;EAErC,IAAIT,CAAC,GAAG,CAAC,EAAE;IACT,OAAQ,GAAEU,IAAI,CAACC,YAAY,CAACb,MAAM,CAACc,QAAQ,EAAE;MAC3CC,KAAK,EAAE,MAAM;MACbC,IAAI,EAAE,KAAK;MACXC,WAAW,EAAE;IACf,CAAC,CAAC,CAACC,MAAM,CAAChB,CAAC,CAAE,IAAGE,CAAE,IAAGP,OAAO,CAACS,CAAC,CAAE,IAAGT,OAAO,CAACW,CAAC,CAAE,EAAC;EACjD;EACA,IAAIJ,CAAC,GAAG,CAAC,EAAE;IACT,OAAQ,GAAEA,CAAE,IAAGP,OAAO,CAACS,CAAC,CAAE,IAAGT,OAAO,CAACW,CAAC,CAAE,EAAC;EAC3C;EACA,IAAIF,CAAC,GAAG,CAAC,EAAE;IACT,OAAQ,GAAEA,CAAE,IAAGT,OAAO,CAACW,CAAC,CAAE,EAAC;EAC7B;EACA,IAAIA,CAAC,GAAG,CAAC,EAAE;IACT,OAAOI,IAAI,CAACC,YAAY,CAACb,MAAM,CAACc,QAAQ,EAAE;MACxCC,KAAK,EAAE,MAAM;MACbC,IAAI,EAAE,QAAQ;MACdC,WAAW,EAAE;IACf,CAAC,CAAC,CAACC,MAAM,CAACV,CAAC,CAAC;EACd;EACA,IAAIE,EAAE,GAAG,CAAC,EAAE;IACV,OAAOE,IAAI,CAACC,YAAY,CAACb,MAAM,CAACc,QAAQ,EAAE;MACxCC,KAAK,EAAE,MAAM;MACbC,IAAI,EAAE,aAAa;MACnBC,WAAW,EAAE;IACf,CAAC,CAAC,CAACC,MAAM,CAACR,EAAE,CAAC;EACf;EACA,OAAO,IAAI;AACb,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}