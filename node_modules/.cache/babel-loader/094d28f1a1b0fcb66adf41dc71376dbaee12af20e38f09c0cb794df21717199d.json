{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport { RippleHandlers } from \"@material/mwc-ripple/ripple-handlers\";\nimport { css, html, LitElement } from \"lit\";\nimport { customElement, eventOptions, property, queryAsync, state } from \"lit/decorators\";\nimport { ifDefined } from \"lit/directives/if-defined\";\nexport let HaControlButton = _decorate([customElement(\"ha-control-button\")], function (_initialize, _LitElement) {\n  class HaControlButton extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaControlButton,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        reflect: true\n      })],\n      key: \"disabled\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"label\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [queryAsync(\"mwc-ripple\")],\n      key: \"_ripple\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_shouldRenderRipple\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        return html`\n      <button\n        type=\"button\"\n        class=\"button\"\n        aria-label=${ifDefined(this.label)}\n        title=${ifDefined(this.label)}\n        .disabled=${Boolean(this.disabled)}\n        @focus=${this.handleRippleFocus}\n        @blur=${this.handleRippleBlur}\n        @mousedown=${this.handleRippleActivate}\n        @mouseup=${this.handleRippleDeactivate}\n        @mouseenter=${this.handleRippleMouseEnter}\n        @mouseleave=${this.handleRippleMouseLeave}\n        @touchstart=${this.handleRippleActivate}\n        @touchend=${this.handleRippleDeactivate}\n        @touchcancel=${this.handleRippleDeactivate}\n      >\n        <slot></slot>\n        ${this._shouldRenderRipple && !this.disabled ? html`<mwc-ripple></mwc-ripple>` : \"\"}\n      </button>\n    `;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_rippleHandlers\",\n      value() {\n        return new RippleHandlers(() => {\n          this._shouldRenderRipple = true;\n          return this._ripple;\n        });\n      }\n    }, {\n      kind: \"method\",\n      decorators: [eventOptions({\n        passive: true\n      })],\n      key: \"handleRippleActivate\",\n      value: function handleRippleActivate(evt) {\n        this._rippleHandlers.startPress(evt);\n      }\n    }, {\n      kind: \"method\",\n      key: \"handleRippleDeactivate\",\n      value: function handleRippleDeactivate() {\n        this._rippleHandlers.endPress();\n      }\n    }, {\n      kind: \"method\",\n      key: \"handleRippleMouseEnter\",\n      value: function handleRippleMouseEnter() {\n        this._rippleHandlers.startHover();\n      }\n    }, {\n      kind: \"method\",\n      key: \"handleRippleMouseLeave\",\n      value: function handleRippleMouseLeave() {\n        this._rippleHandlers.endHover();\n      }\n    }, {\n      kind: \"method\",\n      key: \"handleRippleFocus\",\n      value: function handleRippleFocus() {\n        this._rippleHandlers.startFocus();\n      }\n    }, {\n      kind: \"method\",\n      key: \"handleRippleBlur\",\n      value: function handleRippleBlur() {\n        this._rippleHandlers.endFocus();\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css`\n      :host {\n        display: block;\n        --control-button-icon-color: var(--primary-text-color);\n        --control-button-background-color: var(--disabled-color);\n        --control-button-background-opacity: 0.2;\n        --control-button-border-radius: 10px;\n        --mdc-icon-size: 20px;\n        color: var(--primary-text-color);\n        width: 40px;\n        height: 40px;\n        -webkit-tap-highlight-color: transparent;\n      }\n      .button {\n        overflow: hidden;\n        position: relative;\n        cursor: pointer;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        width: 100%;\n        height: 100%;\n        border-radius: var(--control-button-border-radius);\n        border: none;\n        margin: 0;\n        padding: 0;\n        box-sizing: border-box;\n        line-height: 0;\n        outline: none;\n        overflow: hidden;\n        background: none;\n        --mdc-ripple-color: var(--control-button-background-color);\n        /* For safari border-radius overflow */\n        z-index: 0;\n        font-size: inherit;\n        color: inherit;\n      }\n      .button::before {\n        content: \"\";\n        position: absolute;\n        top: 0;\n        left: 0;\n        height: 100%;\n        width: 100%;\n        background-color: var(--control-button-background-color);\n        transition:\n          background-color 180ms ease-in-out,\n          opacity 180ms ease-in-out;\n        opacity: var(--control-button-background-opacity);\n      }\n      .button ::slotted(*) {\n        transition: color 180ms ease-in-out;\n        color: var(--control-button-icon-color);\n        pointer-events: none;\n      }\n      .button:disabled {\n        cursor: not-allowed;\n        --control-button-background-color: var(--disabled-color);\n        --control-button-icon-color: var(--disabled-text-color);\n        --control-button-background-opacity: 0.2;\n      }\n    `;\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["RippleHandlers","css","html","LitElement","customElement","eventOptions","property","queryAsync","state","ifDefined","HaControlButton","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","type","Boolean","reflect","key","value","render","label","disabled","handleRippleFocus","handleRippleBlur","handleRippleActivate","handleRippleDeactivate","handleRippleMouseEnter","handleRippleMouseLeave","_shouldRenderRipple","_ripple","passive","evt","_rippleHandlers","startPress","endPress","startHover","endHover","startFocus","endFocus","static","styles"],"sources":["/workspaces/frontend/src/components/ha-control-button.ts"],"sourcesContent":["import { Ripple } from \"@material/mwc-ripple\";\nimport { RippleHandlers } from \"@material/mwc-ripple/ripple-handlers\";\nimport { css, CSSResultGroup, html, LitElement, TemplateResult } from \"lit\";\nimport {\n  customElement,\n  eventOptions,\n  property,\n  queryAsync,\n  state,\n} from \"lit/decorators\";\nimport { ifDefined } from \"lit/directives/if-defined\";\n\n@customElement(\"ha-control-button\")\nexport class HaControlButton extends LitElement {\n  @property({ type: Boolean, reflect: true }) disabled = false;\n\n  @property() public label?: string;\n\n  @queryAsync(\"mwc-ripple\") private _ripple!: Promise<Ripple | null>;\n\n  @state() private _shouldRenderRipple = false;\n\n  protected render(): TemplateResult {\n    return html`\n      <button\n        type=\"button\"\n        class=\"button\"\n        aria-label=${ifDefined(this.label)}\n        title=${ifDefined(this.label)}\n        .disabled=${Boolean(this.disabled)}\n        @focus=${this.handleRippleFocus}\n        @blur=${this.handleRippleBlur}\n        @mousedown=${this.handleRippleActivate}\n        @mouseup=${this.handleRippleDeactivate}\n        @mouseenter=${this.handleRippleMouseEnter}\n        @mouseleave=${this.handleRippleMouseLeave}\n        @touchstart=${this.handleRippleActivate}\n        @touchend=${this.handleRippleDeactivate}\n        @touchcancel=${this.handleRippleDeactivate}\n      >\n        <slot></slot>\n        ${this._shouldRenderRipple && !this.disabled\n          ? html`<mwc-ripple></mwc-ripple>`\n          : \"\"}\n      </button>\n    `;\n  }\n\n  private _rippleHandlers: RippleHandlers = new RippleHandlers(() => {\n    this._shouldRenderRipple = true;\n    return this._ripple;\n  });\n\n  @eventOptions({ passive: true })\n  private handleRippleActivate(evt?: Event) {\n    this._rippleHandlers.startPress(evt);\n  }\n\n  private handleRippleDeactivate() {\n    this._rippleHandlers.endPress();\n  }\n\n  private handleRippleMouseEnter() {\n    this._rippleHandlers.startHover();\n  }\n\n  private handleRippleMouseLeave() {\n    this._rippleHandlers.endHover();\n  }\n\n  private handleRippleFocus() {\n    this._rippleHandlers.startFocus();\n  }\n\n  private handleRippleBlur() {\n    this._rippleHandlers.endFocus();\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      :host {\n        display: block;\n        --control-button-icon-color: var(--primary-text-color);\n        --control-button-background-color: var(--disabled-color);\n        --control-button-background-opacity: 0.2;\n        --control-button-border-radius: 10px;\n        --mdc-icon-size: 20px;\n        color: var(--primary-text-color);\n        width: 40px;\n        height: 40px;\n        -webkit-tap-highlight-color: transparent;\n      }\n      .button {\n        overflow: hidden;\n        position: relative;\n        cursor: pointer;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        width: 100%;\n        height: 100%;\n        border-radius: var(--control-button-border-radius);\n        border: none;\n        margin: 0;\n        padding: 0;\n        box-sizing: border-box;\n        line-height: 0;\n        outline: none;\n        overflow: hidden;\n        background: none;\n        --mdc-ripple-color: var(--control-button-background-color);\n        /* For safari border-radius overflow */\n        z-index: 0;\n        font-size: inherit;\n        color: inherit;\n      }\n      .button::before {\n        content: \"\";\n        position: absolute;\n        top: 0;\n        left: 0;\n        height: 100%;\n        width: 100%;\n        background-color: var(--control-button-background-color);\n        transition:\n          background-color 180ms ease-in-out,\n          opacity 180ms ease-in-out;\n        opacity: var(--control-button-background-opacity);\n      }\n      .button ::slotted(*) {\n        transition: color 180ms ease-in-out;\n        color: var(--control-button-icon-color);\n        pointer-events: none;\n      }\n      .button:disabled {\n        cursor: not-allowed;\n        --control-button-background-color: var(--disabled-color);\n        --control-button-icon-color: var(--disabled-text-color);\n        --control-button-background-opacity: 0.2;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-control-button\": HaControlButton;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}