{"ast":null,"code":"import { ensureArray } from \"../common/array/ensure-array\";\nimport { computeStateDomain } from \"../common/entity/compute_state_domain\";\nimport { supportsFeature } from \"../common/entity/supports-feature\";\nimport { getDeviceIntegrationLookup } from \"./device_registry\";\nexport const expandAreaTarget = (hass, areaId, devices, entities, targetSelector, entitySources) => {\n  const newEntities = [];\n  const newDevices = [];\n  Object.values(devices).forEach(device => {\n    if (device.area_id === areaId && deviceMeetsTargetSelector(hass, Object.values(entities), device, targetSelector, entitySources)) {\n      newDevices.push(device.id);\n    }\n  });\n  Object.values(entities).forEach(entity => {\n    if (entity.area_id === areaId && entityMeetsTargetSelector(hass.states[entity.entity_id], targetSelector, entitySources)) {\n      newEntities.push(entity.entity_id);\n    }\n  });\n  return {\n    devices: newDevices,\n    entities: newEntities\n  };\n};\nexport const expandDeviceTarget = (hass, deviceId, entities, targetSelector, entitySources) => {\n  const newEntities = [];\n  Object.values(entities).forEach(entity => {\n    if (entity.device_id === deviceId && entityMeetsTargetSelector(hass.states[entity.entity_id], targetSelector, entitySources)) {\n      newEntities.push(entity.entity_id);\n    }\n  });\n  return {\n    entities: newEntities\n  };\n};\nexport const areaMeetsTargetSelector = (hass, entities, devices, areaId, targetSelector, entitySources) => {\n  const hasMatchingdevice = Object.values(devices).some(device => {\n    if (device.area_id === areaId && deviceMeetsTargetSelector(hass, Object.values(entities), device, targetSelector, entitySources)) {\n      return true;\n    }\n    return false;\n  });\n  if (hasMatchingdevice) {\n    return true;\n  }\n  return Object.values(entities).some(entity => {\n    if (entity.area_id === areaId && entityMeetsTargetSelector(hass.states[entity.entity_id], targetSelector, entitySources)) {\n      return true;\n    }\n    return false;\n  });\n};\nexport const deviceMeetsTargetSelector = (hass, entityRegistry, device, targetSelector, entitySources) => {\n  var _targetSelector$targe, _targetSelector$targe2;\n  const deviceIntegrationLookup = entitySources ? getDeviceIntegrationLookup(entitySources, entityRegistry) : undefined;\n  if ((_targetSelector$targe = targetSelector.target) !== null && _targetSelector$targe !== void 0 && _targetSelector$targe.device) {\n    if (!ensureArray(targetSelector.target.device).some(filterDevice => filterSelectorDevices(filterDevice, device, deviceIntegrationLookup))) {\n      return false;\n    }\n  }\n  if ((_targetSelector$targe2 = targetSelector.target) !== null && _targetSelector$targe2 !== void 0 && _targetSelector$targe2.entity) {\n    const entities = entityRegistry.filter(reg => reg.device_id === device.id);\n    return entities.some(entity => {\n      const entityState = hass.states[entity.entity_id];\n      return entityMeetsTargetSelector(entityState, targetSelector, entitySources);\n    });\n  }\n  return true;\n};\nexport const entityMeetsTargetSelector = (entity, targetSelector, entitySources) => {\n  var _targetSelector$targe3;\n  if ((_targetSelector$targe3 = targetSelector.target) !== null && _targetSelector$targe3 !== void 0 && _targetSelector$targe3.entity) {\n    return ensureArray(targetSelector.target.entity).some(filterEntity => filterSelectorEntities(filterEntity, entity, entitySources));\n  }\n  return true;\n};\nexport const filterSelectorDevices = (filterDevice, device, deviceIntegrationLookup) => {\n  const {\n    manufacturer: filterManufacturer,\n    model: filterModel,\n    integration: filterIntegration\n  } = filterDevice;\n  if (filterManufacturer && device.manufacturer !== filterManufacturer) {\n    return false;\n  }\n  if (filterModel && device.model !== filterModel) {\n    return false;\n  }\n  if (filterIntegration && deviceIntegrationLookup) {\n    var _deviceIntegrationLoo;\n    if (!(deviceIntegrationLookup !== null && deviceIntegrationLookup !== void 0 && (_deviceIntegrationLoo = deviceIntegrationLookup[device.id]) !== null && _deviceIntegrationLoo !== void 0 && _deviceIntegrationLoo.includes(filterIntegration))) {\n      return false;\n    }\n  }\n  return true;\n};\nexport const filterSelectorEntities = (filterEntity, entity, entitySources) => {\n  var _entitySources$entity;\n  const {\n    domain: filterDomain,\n    device_class: filterDeviceClass,\n    supported_features: filterSupportedFeature,\n    integration: filterIntegration\n  } = filterEntity;\n  if (filterDomain) {\n    const entityDomain = computeStateDomain(entity);\n    if (Array.isArray(filterDomain) ? !filterDomain.includes(entityDomain) : entityDomain !== filterDomain) {\n      return false;\n    }\n  }\n  if (filterDeviceClass) {\n    const entityDeviceClass = entity.attributes.device_class;\n    if (entityDeviceClass && Array.isArray(filterDeviceClass) ? !filterDeviceClass.includes(entityDeviceClass) : entityDeviceClass !== filterDeviceClass) {\n      return false;\n    }\n  }\n  if (filterSupportedFeature) {\n    if (!ensureArray(filterSupportedFeature).some(feature => supportsFeature(entity, feature))) {\n      return false;\n    }\n  }\n  if (filterIntegration && (entitySources === null || entitySources === void 0 || (_entitySources$entity = entitySources[entity.entity_id]) === null || _entitySources$entity === void 0 ? void 0 : _entitySources$entity.domain) !== filterIntegration) {\n    return false;\n  }\n  return true;\n};\nexport const handleLegacyEntitySelector = selector => {\n  if (!selector.entity) return {\n    entity: null\n  };\n  if (\"filter\" in selector.entity) return selector;\n  const {\n    domain,\n    integration,\n    device_class,\n    ...rest\n  } = selector.entity;\n  if (domain || integration || device_class) {\n    return {\n      entity: {\n        ...rest,\n        filter: {\n          domain,\n          integration,\n          device_class\n        }\n      }\n    };\n  }\n  return {\n    entity: rest\n  };\n};\nexport const handleLegacyDeviceSelector = selector => {\n  if (!selector.device) return {\n    device: null\n  };\n  if (\"filter\" in selector.device) return selector;\n  const {\n    integration,\n    manufacturer,\n    model,\n    ...rest\n  } = selector.device;\n  if (integration || manufacturer || model) {\n    return {\n      device: {\n        ...rest,\n        filter: {\n          integration,\n          manufacturer,\n          model\n        }\n      }\n    };\n  }\n  return {\n    device: rest\n  };\n};","map":{"version":3,"names":["ensureArray","computeStateDomain","supportsFeature","getDeviceIntegrationLookup","expandAreaTarget","hass","areaId","devices","entities","targetSelector","entitySources","newEntities","newDevices","Object","values","forEach","device","area_id","deviceMeetsTargetSelector","push","id","entity","entityMeetsTargetSelector","states","entity_id","expandDeviceTarget","deviceId","device_id","areaMeetsTargetSelector","hasMatchingdevice","some","entityRegistry","_targetSelector$targe","_targetSelector$targe2","deviceIntegrationLookup","undefined","target","filterDevice","filterSelectorDevices","filter","reg","entityState","_targetSelector$targe3","filterEntity","filterSelectorEntities","manufacturer","filterManufacturer","model","filterModel","integration","filterIntegration","_deviceIntegrationLoo","includes","_entitySources$entity","domain","filterDomain","device_class","filterDeviceClass","supported_features","filterSupportedFeature","entityDomain","Array","isArray","entityDeviceClass","attributes","feature","handleLegacyEntitySelector","selector","rest","handleLegacyDeviceSelector"],"sources":["/workspaces/frontend/src/data/selector.ts"],"sourcesContent":["import type { HassEntity } from \"home-assistant-js-websocket\";\nimport { ensureArray } from \"../common/array/ensure-array\";\nimport { computeStateDomain } from \"../common/entity/compute_state_domain\";\nimport { supportsFeature } from \"../common/entity/supports-feature\";\nimport { UiAction } from \"../panels/lovelace/components/hui-action-editor\";\nimport { HomeAssistant, ItemPath } from \"../types\";\nimport {\n  DeviceRegistryEntry,\n  getDeviceIntegrationLookup,\n} from \"./device_registry\";\nimport { EntityRegistryDisplayEntry } from \"./entity_registry\";\nimport { EntitySources } from \"./entity_sources\";\n\nexport type Selector =\n  | ActionSelector\n  | AddonSelector\n  | AreaSelector\n  | AreaFilterSelector\n  | AttributeSelector\n  | BooleanSelector\n  | ColorRGBSelector\n  | ColorTempSelector\n  | ConditionSelector\n  | ConversationAgentSelector\n  | ConfigEntrySelector\n  | ConstantSelector\n  | CountrySelector\n  | DateSelector\n  | DateTimeSelector\n  | DeviceSelector\n  | LegacyDeviceSelector\n  | DurationSelector\n  | EntitySelector\n  | LegacyEntitySelector\n  | FileSelector\n  | IconSelector\n  | LanguageSelector\n  | LocationSelector\n  | MediaSelector\n  | NavigationSelector\n  | NumberSelector\n  | ObjectSelector\n  | AssistPipelineSelector\n  | QRCodeSelector\n  | SelectSelector\n  | SelectorSelector\n  | StateSelector\n  | StatisticSelector\n  | StringSelector\n  | STTSelector\n  | TargetSelector\n  | TemplateSelector\n  | ThemeSelector\n  | TimeSelector\n  | TriggerSelector\n  | TTSSelector\n  | TTSVoiceSelector\n  | UiActionSelector\n  | UiColorSelector;\n\nexport interface ActionSelector {\n  action: {\n    path?: ItemPath;\n  } | null;\n}\n\nexport interface AddonSelector {\n  addon: {\n    name?: string;\n    slug?: string;\n  } | null;\n}\n\nexport interface AreaSelector {\n  area: {\n    entity?: EntitySelectorFilter | readonly EntitySelectorFilter[];\n    device?: DeviceSelectorFilter | readonly DeviceSelectorFilter[];\n    multiple?: boolean;\n  } | null;\n}\n\nexport interface AreaFilterSelector {\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  area_filter: {} | null;\n}\n\nexport interface AttributeSelector {\n  attribute: {\n    entity_id?: string;\n    hide_attributes?: readonly string[];\n  } | null;\n}\n\nexport interface BooleanSelector {\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  boolean: {} | null;\n}\n\nexport interface ColorRGBSelector {\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  color_rgb: {} | null;\n}\n\nexport interface ColorTempSelector {\n  color_temp: {\n    unit?: \"kelvin\" | \"mired\";\n    min?: number;\n    max?: number;\n    min_mireds?: number;\n    max_mireds?: number;\n  } | null;\n}\n\nexport interface ConditionSelector {\n  condition: {\n    path?: ItemPath;\n  } | null;\n}\n\nexport interface ConversationAgentSelector {\n  conversation_agent: { language?: string } | null;\n}\n\nexport interface ConfigEntrySelector {\n  config_entry: {\n    integration?: string;\n  } | null;\n}\n\nexport interface ConstantSelector {\n  constant: {\n    value: string | number | boolean;\n    label?: string;\n    translation_key?: string;\n  } | null;\n}\n\nexport interface CountrySelector {\n  country: {\n    countries: string[];\n    no_sort?: boolean;\n  } | null;\n}\n\nexport interface DateSelector {\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  date: {} | null;\n}\n\nexport interface DateTimeSelector {\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  datetime: {} | null;\n}\n\ninterface DeviceSelectorFilter {\n  integration?: string;\n  manufacturer?: string;\n  model?: string;\n}\n\nexport interface DeviceSelector {\n  device: {\n    filter?: DeviceSelectorFilter | readonly DeviceSelectorFilter[];\n    entity?: EntitySelectorFilter | readonly EntitySelectorFilter[];\n    multiple?: boolean;\n  } | null;\n}\n\nexport interface LegacyDeviceSelector {\n  device: DeviceSelector[\"device\"] & {\n    /**\n     * @deprecated Use filter instead\n     */\n    integration?: DeviceSelectorFilter[\"integration\"];\n    /**\n     * @deprecated Use filter instead\n     */\n    manufacturer?: DeviceSelectorFilter[\"manufacturer\"];\n    /**\n     * @deprecated Use filter instead\n     */\n    model?: DeviceSelectorFilter[\"model\"];\n  };\n}\n\nexport interface DurationSelector {\n  duration: {\n    enable_day?: boolean;\n  } | null;\n}\n\ninterface EntitySelectorFilter {\n  integration?: string;\n  domain?: string | readonly string[];\n  device_class?: string | readonly string[];\n  supported_features?: number | [number];\n}\n\nexport interface EntitySelector {\n  entity: {\n    multiple?: boolean;\n    include_entities?: string[];\n    exclude_entities?: string[];\n    filter?: EntitySelectorFilter | readonly EntitySelectorFilter[];\n  } | null;\n}\n\nexport interface LegacyEntitySelector {\n  entity: EntitySelector[\"entity\"] & {\n    /**\n     * @deprecated Use filter instead\n     */\n    integration?: EntitySelectorFilter[\"integration\"];\n    /**\n     * @deprecated Use filter instead\n     */\n    domain?: EntitySelectorFilter[\"domain\"];\n    /**\n     * @deprecated Use filter instead\n     */\n    device_class?: EntitySelectorFilter[\"device_class\"];\n  };\n}\n\nexport interface StatisticSelector {\n  statistic: {\n    device_class?: string;\n    multiple?: boolean;\n  };\n}\n\nexport interface FileSelector {\n  file: {\n    accept: string;\n  } | null;\n}\n\nexport interface IconSelector {\n  icon: {\n    placeholder?: string;\n    fallbackPath?: string;\n  } | null;\n}\n\nexport interface LanguageSelector {\n  language: {\n    languages?: string[];\n    native_name?: boolean;\n    no_sort?: boolean;\n  } | null;\n}\n\nexport interface LocationSelector {\n  location: { radius?: boolean; icon?: string } | null;\n}\n\nexport interface LocationSelectorValue {\n  latitude: number;\n  longitude: number;\n  radius?: number;\n}\n\nexport interface MediaSelector {\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  media: {} | null;\n}\n\nexport interface MediaSelectorValue {\n  entity_id?: string;\n  media_content_id?: string;\n  media_content_type?: string;\n  metadata?: {\n    title?: string;\n    thumbnail?: string | null;\n    media_class?: string;\n    children_media_class?: string | null;\n    navigateIds?: { media_content_type: string; media_content_id: string }[];\n  };\n}\n\nexport interface NavigationSelector {\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  navigation: {} | null;\n}\n\nexport interface NumberSelector {\n  number: {\n    min?: number;\n    max?: number;\n    step?: number | \"any\";\n    mode?: \"box\" | \"slider\";\n    unit_of_measurement?: string;\n  } | null;\n}\n\nexport interface ObjectSelector {\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  object: {} | null;\n}\n\nexport interface AssistPipelineSelector {\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  assist_pipeline: {\n    include_last_used?: boolean;\n  } | null;\n}\n\nexport interface SelectOption {\n  value: any;\n  label: string;\n  disabled?: boolean;\n}\n\nexport interface SelectSelector {\n  select: {\n    multiple?: boolean;\n    custom_value?: boolean;\n    mode?: \"list\" | \"dropdown\";\n    options: readonly string[] | readonly SelectOption[];\n    translation_key?: string;\n    sort?: boolean;\n    reorder?: boolean;\n  } | null;\n}\n\nexport interface SelectorSelector {\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  selector: {} | null;\n}\n\nexport interface StateSelector {\n  state: {\n    extra_options?: { label: string; value: any }[];\n    entity_id?: string;\n    attribute?: string;\n  } | null;\n}\n\nexport interface BackupLocationSelector {\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  backup_location: {} | null;\n}\n\nexport interface QRCodeSelector {\n  qr_code: {\n    data: string;\n    scale?: number;\n    error_correction_level?: \"low\" | \"medium\" | \"quartile\" | \"high\";\n    center_image?: string;\n  } | null;\n}\n\nexport interface StringSelector {\n  text: {\n    multiline?: boolean;\n    type?:\n      | \"number\"\n      | \"text\"\n      | \"search\"\n      | \"tel\"\n      | \"url\"\n      | \"email\"\n      | \"password\"\n      | \"date\"\n      | \"month\"\n      | \"week\"\n      | \"time\"\n      | \"datetime-local\"\n      | \"color\";\n    prefix?: string;\n    suffix?: string;\n    autocomplete?: string;\n    multiple?: true;\n  } | null;\n}\n\nexport interface STTSelector {\n  stt: { language?: string } | null;\n}\n\nexport interface TargetSelector {\n  target: {\n    entity?: EntitySelectorFilter | readonly EntitySelectorFilter[];\n    device?: DeviceSelectorFilter | readonly DeviceSelectorFilter[];\n  } | null;\n}\n\nexport interface TemplateSelector {\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  template: {} | null;\n}\n\nexport interface ThemeSelector {\n  theme: { include_default?: boolean } | null;\n}\nexport interface TimeSelector {\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  time: {} | null;\n}\n\nexport interface TriggerSelector {\n  trigger: {\n    path?: ItemPath;\n  } | null;\n}\n\nexport interface TTSSelector {\n  tts: { language?: string } | null;\n}\n\nexport interface TTSVoiceSelector {\n  tts_voice: { engineId?: string; language?: string } | null;\n}\n\nexport interface UiActionSelector {\n  ui_action: {\n    actions?: UiAction[];\n    default_action?: UiAction;\n  } | null;\n}\n\nexport interface UiColorSelector {\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  ui_color: {} | null;\n}\n\nexport const expandAreaTarget = (\n  hass: HomeAssistant,\n  areaId: string,\n  devices: HomeAssistant[\"devices\"],\n  entities: HomeAssistant[\"entities\"],\n  targetSelector: TargetSelector,\n  entitySources?: EntitySources\n) => {\n  const newEntities: string[] = [];\n  const newDevices: string[] = [];\n  Object.values(devices).forEach((device) => {\n    if (\n      device.area_id === areaId &&\n      deviceMeetsTargetSelector(\n        hass,\n        Object.values(entities),\n        device,\n        targetSelector,\n        entitySources\n      )\n    ) {\n      newDevices.push(device.id);\n    }\n  });\n  Object.values(entities).forEach((entity) => {\n    if (\n      entity.area_id === areaId &&\n      entityMeetsTargetSelector(\n        hass.states[entity.entity_id],\n        targetSelector,\n        entitySources\n      )\n    ) {\n      newEntities.push(entity.entity_id);\n    }\n  });\n  return { devices: newDevices, entities: newEntities };\n};\n\nexport const expandDeviceTarget = (\n  hass: HomeAssistant,\n  deviceId: string,\n  entities: HomeAssistant[\"entities\"],\n  targetSelector: TargetSelector,\n  entitySources?: EntitySources\n) => {\n  const newEntities: string[] = [];\n  Object.values(entities).forEach((entity) => {\n    if (\n      entity.device_id === deviceId &&\n      entityMeetsTargetSelector(\n        hass.states[entity.entity_id],\n        targetSelector,\n        entitySources\n      )\n    ) {\n      newEntities.push(entity.entity_id);\n    }\n  });\n  return { entities: newEntities };\n};\n\nexport const areaMeetsTargetSelector = (\n  hass: HomeAssistant,\n  entities: HomeAssistant[\"entities\"],\n  devices: HomeAssistant[\"devices\"],\n  areaId: string,\n  targetSelector: TargetSelector,\n  entitySources?: EntitySources\n): boolean => {\n  const hasMatchingdevice = Object.values(devices).some((device) => {\n    if (\n      device.area_id === areaId &&\n      deviceMeetsTargetSelector(\n        hass,\n        Object.values(entities),\n        device,\n        targetSelector,\n        entitySources\n      )\n    ) {\n      return true;\n    }\n    return false;\n  });\n  if (hasMatchingdevice) {\n    return true;\n  }\n  return Object.values(entities).some((entity) => {\n    if (\n      entity.area_id === areaId &&\n      entityMeetsTargetSelector(\n        hass.states[entity.entity_id],\n        targetSelector,\n        entitySources\n      )\n    ) {\n      return true;\n    }\n    return false;\n  });\n};\n\nexport const deviceMeetsTargetSelector = (\n  hass: HomeAssistant,\n  entityRegistry: EntityRegistryDisplayEntry[],\n  device: DeviceRegistryEntry,\n  targetSelector: TargetSelector,\n  entitySources?: EntitySources\n): boolean => {\n  const deviceIntegrationLookup = entitySources\n    ? getDeviceIntegrationLookup(entitySources, entityRegistry)\n    : undefined;\n\n  if (targetSelector.target?.device) {\n    if (\n      !ensureArray(targetSelector.target.device).some((filterDevice) =>\n        filterSelectorDevices(filterDevice, device, deviceIntegrationLookup)\n      )\n    ) {\n      return false;\n    }\n  }\n  if (targetSelector.target?.entity) {\n    const entities = entityRegistry.filter(\n      (reg) => reg.device_id === device.id\n    );\n    return entities.some((entity) => {\n      const entityState = hass.states[entity.entity_id];\n      return entityMeetsTargetSelector(\n        entityState,\n        targetSelector,\n        entitySources\n      );\n    });\n  }\n  return true;\n};\n\nexport const entityMeetsTargetSelector = (\n  entity: HassEntity,\n  targetSelector: TargetSelector,\n  entitySources?: EntitySources\n): boolean => {\n  if (targetSelector.target?.entity) {\n    return ensureArray(targetSelector.target!.entity).some((filterEntity) =>\n      filterSelectorEntities(filterEntity, entity, entitySources)\n    );\n  }\n  return true;\n};\n\nexport const filterSelectorDevices = (\n  filterDevice: DeviceSelectorFilter,\n  device: DeviceRegistryEntry,\n  deviceIntegrationLookup?: Record<string, string[]> | undefined\n): boolean => {\n  const {\n    manufacturer: filterManufacturer,\n    model: filterModel,\n    integration: filterIntegration,\n  } = filterDevice;\n\n  if (filterManufacturer && device.manufacturer !== filterManufacturer) {\n    return false;\n  }\n\n  if (filterModel && device.model !== filterModel) {\n    return false;\n  }\n\n  if (filterIntegration && deviceIntegrationLookup) {\n    if (!deviceIntegrationLookup?.[device.id]?.includes(filterIntegration)) {\n      return false;\n    }\n  }\n  return true;\n};\n\nexport const filterSelectorEntities = (\n  filterEntity: EntitySelectorFilter,\n  entity: HassEntity,\n  entitySources?: EntitySources\n): boolean => {\n  const {\n    domain: filterDomain,\n    device_class: filterDeviceClass,\n    supported_features: filterSupportedFeature,\n    integration: filterIntegration,\n  } = filterEntity;\n\n  if (filterDomain) {\n    const entityDomain = computeStateDomain(entity);\n    if (\n      Array.isArray(filterDomain)\n        ? !filterDomain.includes(entityDomain)\n        : entityDomain !== filterDomain\n    ) {\n      return false;\n    }\n  }\n\n  if (filterDeviceClass) {\n    const entityDeviceClass = entity.attributes.device_class;\n    if (\n      entityDeviceClass && Array.isArray(filterDeviceClass)\n        ? !filterDeviceClass.includes(entityDeviceClass)\n        : entityDeviceClass !== filterDeviceClass\n    ) {\n      return false;\n    }\n  }\n\n  if (filterSupportedFeature) {\n    if (\n      !ensureArray(filterSupportedFeature).some((feature) =>\n        supportsFeature(entity, feature)\n      )\n    ) {\n      return false;\n    }\n  }\n\n  if (\n    filterIntegration &&\n    entitySources?.[entity.entity_id]?.domain !== filterIntegration\n  ) {\n    return false;\n  }\n\n  return true;\n};\n\nexport const handleLegacyEntitySelector = (\n  selector: LegacyEntitySelector | EntitySelector\n): EntitySelector => {\n  if (!selector.entity) return { entity: null };\n\n  if (\"filter\" in selector.entity) return selector;\n\n  const { domain, integration, device_class, ...rest } = (\n    selector as LegacyEntitySelector\n  ).entity!;\n\n  if (domain || integration || device_class) {\n    return {\n      entity: {\n        ...rest,\n        filter: {\n          domain,\n          integration,\n          device_class,\n        },\n      },\n    };\n  }\n  return {\n    entity: rest,\n  };\n};\n\nexport const handleLegacyDeviceSelector = (\n  selector: LegacyDeviceSelector | DeviceSelector\n): DeviceSelector => {\n  if (!selector.device) return { device: null };\n\n  if (\"filter\" in selector.device) return selector;\n\n  const { integration, manufacturer, model, ...rest } = (\n    selector as LegacyDeviceSelector\n  ).device!;\n\n  if (integration || manufacturer || model) {\n    return {\n      device: {\n        ...rest,\n        filter: {\n          integration,\n          manufacturer,\n          model,\n        },\n      },\n    };\n  }\n  return {\n    device: rest,\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}