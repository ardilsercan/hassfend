{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/helpers/regeneratorRuntime\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _templateObject, _templateObject2;\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nvar mdiPower = \"M16.56,5.44L15.11,6.89C16.84,7.94 18,9.83 18,12A6,6 0 0,1 12,18A6,6 0 0,1 6,12C6,9.83 7.16,7.94 8.88,6.88L7.44,5.44C5.36,6.88 4,9.28 4,12A8,8 0 0,0 12,20A8,8 0 0,0 20,12C20,9.28 18.64,6.88 16.56,5.44M13,3H11V13H13\";\nimport { css, html, LitElement } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { canShowPage } from \"../../../common/config/can_show_page\";\nimport { isComponentLoaded } from \"../../../common/config/is_component_loaded\";\nimport { relativeTime } from \"../../../common/datetime/relative_time\";\nimport { blankBeforePercent } from \"../../../common/translations/blank_before_percent\";\nimport \"../../../components/ha-card\";\nimport \"../../../components/ha-icon-button\";\nimport \"../../../components/ha-navigation-list\";\nimport { fetchBackupInfo } from \"../../../data/backup\";\nimport { fetchCloudStatus } from \"../../../data/cloud\";\nimport { BOARD_NAMES } from \"../../../data/hardware\";\nimport { fetchHassioBackups } from \"../../../data/hassio/backup\";\nimport { fetchHassioHassOsInfo, fetchHassioHostInfo } from \"../../../data/hassio/host\";\nimport { showRestartDialog } from \"../../../dialogs/restart/show-dialog-restart\";\nimport \"../../../layouts/hass-subpage\";\nimport { haStyle } from \"../../../resources/styles\";\nimport \"../ha-config-section\";\nimport { configSections } from \"../ha-panel-config\";\nvar HaConfigSystemNavigation = _decorate([customElement(\"ha-config-system-navigation\")], function (_initialize, _LitElement) {\n  var HaConfigSystemNavigation = /*#__PURE__*/function (_LitElement2) {\n    _inherits(HaConfigSystemNavigation, _LitElement2);\n    function HaConfigSystemNavigation() {\n      var _this;\n      _classCallCheck(this, HaConfigSystemNavigation);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, HaConfigSystemNavigation, [].concat(args));\n      _initialize(_assertThisInitialized(_this));\n      return _this;\n    }\n    return _createClass(HaConfigSystemNavigation);\n  }(_LitElement);\n  return {\n    F: HaConfigSystemNavigation,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        reflect: true\n      })],\n      key: \"narrow\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"isWide\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"cloudStatus\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"showAdvanced\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_latestBackupDate\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_boardName\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_storageInfo\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_externalAccess\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var _this2 = this;\n        var pages = configSections.general.filter(function (page) {\n          return canShowPage(_this2.hass, page);\n        }).map(function (page) {\n          var description = \"\";\n          switch (page.translationKey) {\n            case \"backup\":\n              description = _this2._latestBackupDate ? _this2.hass.localize(\"ui.panel.config.backup.description\", {\n                relative_time: relativeTime(new Date(_this2._latestBackupDate), _this2.hass.locale)\n              }) : _this2.hass.localize(\"ui.panel.config.backup.description_no_backup\");\n              break;\n            case \"network\":\n              description = _this2.hass.localize(\"ui.panel.config.network.description\", {\n                state: _this2._externalAccess ? _this2.hass.localize(\"ui.panel.config.network.enabled\") : _this2.hass.localize(\"ui.panel.config.network.disabled\")\n              });\n              break;\n            case \"storage\":\n              description = _this2._storageInfo ? _this2.hass.localize(\"ui.panel.config.storage.description\", {\n                percent_used: \"\".concat(Math.round(_this2._storageInfo.used / _this2._storageInfo.total * 100)).concat(blankBeforePercent(_this2.hass.locale), \"%\"),\n                free_space: \"\".concat(_this2._storageInfo.free, \" GB\")\n              }) : \"\";\n              break;\n            case \"hardware\":\n              description = _this2._boardName || _this2.hass.localize(\"ui.panel.config.hardware.description\");\n              break;\n            default:\n              description = _this2.hass.localize(\"ui.panel.config.\".concat(page.translationKey, \".description\"));\n              break;\n          }\n          return Object.assign(Object.assign({}, page), {}, {\n            name: page.translationKey ? _this2.hass.localize(\"ui.panel.config.\".concat(page.translationKey, \".caption\")) : page.name,\n            description: description\n          });\n        });\n        return html(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      <hass-subpage\\n        .hass=\", \"\\n        back-path=\\\"/config\\\"\\n        .header=\", \"\\n      >\\n        <ha-icon-button\\n          slot=\\\"toolbar-icon\\\"\\n          .path=\", \"\\n          .label=\", \"\\n          @click=\", \"\\n        ></ha-icon-button>\\n        <ha-config-section\\n          .narrow=\", \"\\n          .isWide=\", \"\\n          full-width\\n        >\\n          <ha-card outlined>\\n            <ha-navigation-list\\n              .hass=\", \"\\n              .narrow=\", \"\\n              .pages=\", \"\\n              hasSecondary\\n              .label=\", \"\\n            ></ha-navigation-list>\\n          </ha-card>\\n        </ha-config-section>\\n      </hass-subpage>\\n    \"])), this.hass, this.hass.localize(\"ui.panel.config.dashboard.system.main\"), mdiPower, this.hass.localize(\"ui.panel.config.system_dashboard.restart_homeassistant\"), this._showRestartDialog, this.narrow, this.isWide, this.hass, this.narrow, pages, this.hass.localize(\"ui.panel.config.dashboard.system.main\"));\n      }\n    }, {\n      kind: \"method\",\n      key: \"firstUpdated\",\n      value: function firstUpdated(_changedProperties) {\n        _get(_getPrototypeOf(HaConfigSystemNavigation.prototype), \"firstUpdated\", this).call(this, _changedProperties);\n        this._fetchNetworkStatus();\n        var isHassioLoaded = isComponentLoaded(this.hass, \"hassio\");\n        this._fetchBackupInfo(isHassioLoaded);\n        this._fetchHardwareInfo(isHassioLoaded);\n        if (isHassioLoaded) {\n          this._fetchStorageInfo();\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_fetchBackupInfo\",\n      value: function () {\n        var _fetchBackupInfo2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(isHassioLoaded) {\n          var backups;\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                if (!isHassioLoaded) {\n                  _context.next = 6;\n                  break;\n                }\n                _context.next = 3;\n                return fetchHassioBackups(this.hass);\n              case 3:\n                _context.t0 = _context.sent;\n                _context.next = 14;\n                break;\n              case 6:\n                if (!isComponentLoaded(this.hass, \"backup\")) {\n                  _context.next = 12;\n                  break;\n                }\n                _context.next = 9;\n                return fetchBackupInfo(this.hass).then(function (backupData) {\n                  return backupData.backups;\n                });\n              case 9:\n                _context.t1 = _context.sent;\n                _context.next = 13;\n                break;\n              case 12:\n                _context.t1 = [];\n              case 13:\n                _context.t0 = _context.t1;\n              case 14:\n                backups = _context.t0;\n                if (backups.length > 0) {\n                  this._latestBackupDate = backups.reduce(function (a, b) {\n                    return a.date > b.date ? a : b;\n                  }).date;\n                }\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee, this);\n        }));\n        function _fetchBackupInfo(_x) {\n          return _fetchBackupInfo2.apply(this, arguments);\n        }\n        return _fetchBackupInfo;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"_fetchHardwareInfo\",\n      value: function () {\n        var _fetchHardwareInfo2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(isHassioLoaded) {\n          var _hardwareInfo$hardwar, hardwareInfo, osData;\n          return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n            while (1) switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!isComponentLoaded(this.hass, \"hardware\")) {\n                  _context2.next = 7;\n                  break;\n                }\n                _context2.next = 3;\n                return this.hass.callWS({\n                  type: \"hardware/info\"\n                });\n              case 3:\n                hardwareInfo = _context2.sent;\n                this._boardName = hardwareInfo === null || hardwareInfo === void 0 || (_hardwareInfo$hardwar = hardwareInfo.hardware.find(function (hw) {\n                  return hw.board !== null;\n                })) === null || _hardwareInfo$hardwar === void 0 ? void 0 : _hardwareInfo$hardwar.name;\n                _context2.next = 12;\n                break;\n              case 7:\n                if (!isHassioLoaded) {\n                  _context2.next = 12;\n                  break;\n                }\n                _context2.next = 10;\n                return fetchHassioHassOsInfo(this.hass);\n              case 10:\n                osData = _context2.sent;\n                if (osData.board) {\n                  this._boardName = BOARD_NAMES[osData.board];\n                }\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }, _callee2, this);\n        }));\n        function _fetchHardwareInfo(_x2) {\n          return _fetchHardwareInfo2.apply(this, arguments);\n        }\n        return _fetchHardwareInfo;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"_fetchStorageInfo\",\n      value: function () {\n        var _fetchStorageInfo2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n          var hostInfo;\n          return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n            while (1) switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return fetchHassioHostInfo(this.hass);\n              case 2:\n                hostInfo = _context3.sent;\n                this._storageInfo = {\n                  used: hostInfo.disk_used,\n                  free: hostInfo.disk_free,\n                  total: hostInfo.disk_total\n                };\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }, _callee3, this);\n        }));\n        function _fetchStorageInfo() {\n          return _fetchStorageInfo2.apply(this, arguments);\n        }\n        return _fetchStorageInfo;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"_fetchNetworkStatus\",\n      value: function () {\n        var _fetchNetworkStatus2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n          var cloudStatus;\n          return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n            while (1) switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!isComponentLoaded(this.hass, \"cloud\")) {\n                  _context4.next = 7;\n                  break;\n                }\n                _context4.next = 3;\n                return fetchCloudStatus(this.hass);\n              case 3:\n                cloudStatus = _context4.sent;\n                if (!cloudStatus.logged_in) {\n                  _context4.next = 7;\n                  break;\n                }\n                this._externalAccess = true;\n                return _context4.abrupt(\"return\");\n              case 7:\n                this._externalAccess = this.hass.config.external_url !== null;\n              case 8:\n              case \"end\":\n                return _context4.stop();\n            }\n          }, _callee4, this);\n        }));\n        function _fetchNetworkStatus() {\n          return _fetchNetworkStatus2.apply(this, arguments);\n        }\n        return _fetchNetworkStatus;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"_showRestartDialog\",\n      value: function () {\n        var _showRestartDialog2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n          return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n            while (1) switch (_context5.prev = _context5.next) {\n              case 0:\n                showRestartDialog(this);\n              case 1:\n              case \"end\":\n                return _context5.stop();\n            }\n          }, _callee5, this);\n        }));\n        function _showRestartDialog() {\n          return _showRestartDialog2.apply(this, arguments);\n        }\n        return _showRestartDialog;\n      }()\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [haStyle, css(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n        :host(:not([narrow])) ha-card {\\n          margin-bottom: max(24px, env(safe-area-inset-bottom));\\n        }\\n\\n        ha-config-section {\\n          margin: auto;\\n          margin-top: -32px;\\n          max-width: 600px;\\n        }\\n\\n        ha-card {\\n          overflow: hidden;\\n          margin-bottom: 24px;\\n          margin-bottom: max(24px, env(safe-area-inset-bottom));\\n        }\\n\\n        ha-card a {\\n          text-decoration: none;\\n          color: var(--primary-text-color);\\n        }\\n\\n        .title {\\n          font-size: 16px;\\n          padding: 16px;\\n          padding-bottom: 0;\\n        }\\n\\n        .restart-section {\\n          display: flex;\\n          align-items: center;\\n          flex-direction: column;\\n          justify-content: center;\\n          margin-bottom: 24px;\\n        }\\n\\n        @media all and (max-width: 600px) {\\n          ha-card {\\n            border-width: 1px 0;\\n            border-radius: 0;\\n            box-shadow: unset;\\n          }\\n          ha-config-section {\\n            margin-top: -42px;\\n          }\\n        }\\n\\n        ha-navigation-list {\\n          --navigation-list-item-title-font-size: 16px;\\n        }\\n      \"])))];\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","customElement","property","state","canShowPage","isComponentLoaded","relativeTime","blankBeforePercent","fetchBackupInfo","fetchCloudStatus","BOARD_NAMES","fetchHassioBackups","fetchHassioHassOsInfo","fetchHassioHostInfo","showRestartDialog","haStyle","configSections","HaConfigSystemNavigation","_decorate","_initialize","_LitElement","_LitElement2","_inherits","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_assertThisInitialized","_createClass","F","d","kind","decorators","attribute","key","value","type","Boolean","reflect","render","_this2","pages","general","filter","page","hass","map","description","translationKey","_latestBackupDate","localize","relative_time","Date","locale","_externalAccess","_storageInfo","percent_used","Math","round","used","total","free_space","free","_boardName","Object","assign","name","_templateObject","_taggedTemplateLiteral","mdiPower","_showRestartDialog","narrow","isWide","firstUpdated","_changedProperties","_get","_getPrototypeOf","prototype","call","_fetchNetworkStatus","isHassioLoaded","_fetchBackupInfo","_fetchHardwareInfo","_fetchStorageInfo","_fetchBackupInfo2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","backups","wrap","_callee$","_context","prev","next","t0","sent","then","backupData","t1","reduce","a","b","date","stop","_x","apply","_fetchHardwareInfo2","_callee2","_hardwareInfo$hardwar","hardwareInfo","osData","_callee2$","_context2","callWS","hardware","find","hw","board","_x2","_fetchStorageInfo2","_callee3","hostInfo","_callee3$","_context3","disk_used","disk_free","disk_total","_fetchNetworkStatus2","_callee4","cloudStatus","_callee4$","_context4","logged_in","abrupt","config","external_url","_showRestartDialog2","_callee5","_callee5$","_context5","static","styles","_templateObject2"],"sources":["/Users/sercanardil/Desktop/frontend/src/panels/config/core/ha-config-system-navigation.ts"],"sourcesContent":["import { mdiPower } from \"@mdi/js\";\nimport { css, CSSResultGroup, html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { canShowPage } from \"../../../common/config/can_show_page\";\nimport { isComponentLoaded } from \"../../../common/config/is_component_loaded\";\nimport { relativeTime } from \"../../../common/datetime/relative_time\";\nimport { blankBeforePercent } from \"../../../common/translations/blank_before_percent\";\nimport \"../../../components/ha-card\";\nimport \"../../../components/ha-icon-button\";\nimport \"../../../components/ha-navigation-list\";\nimport { BackupContent, fetchBackupInfo } from \"../../../data/backup\";\nimport { CloudStatus, fetchCloudStatus } from \"../../../data/cloud\";\nimport { BOARD_NAMES, HardwareInfo } from \"../../../data/hardware\";\nimport { fetchHassioBackups, HassioBackup } from \"../../../data/hassio/backup\";\nimport {\n  fetchHassioHassOsInfo,\n  fetchHassioHostInfo,\n  HassioHassOSInfo,\n  HassioHostInfo,\n} from \"../../../data/hassio/host\";\nimport { showRestartDialog } from \"../../../dialogs/restart/show-dialog-restart\";\nimport \"../../../layouts/hass-subpage\";\nimport { haStyle } from \"../../../resources/styles\";\nimport type { HomeAssistant } from \"../../../types\";\nimport \"../ha-config-section\";\nimport { configSections } from \"../ha-panel-config\";\n\n@customElement(\"ha-config-system-navigation\")\nclass HaConfigSystemNavigation extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ type: Boolean, reflect: true }) public narrow = false;\n\n  @property({ type: Boolean }) public isWide = false;\n\n  @property({ attribute: false }) public cloudStatus?: CloudStatus;\n\n  @property({ type: Boolean }) public showAdvanced = false;\n\n  @state() private _latestBackupDate?: string;\n\n  @state() private _boardName?: string;\n\n  @state() private _storageInfo?: { used: number; free: number; total: number };\n\n  @state() private _externalAccess = false;\n\n  protected render(): TemplateResult {\n    const pages = configSections.general\n      .filter((page) => canShowPage(this.hass, page))\n      .map((page) => {\n        let description = \"\";\n\n        switch (page.translationKey) {\n          case \"backup\":\n            description = this._latestBackupDate\n              ? this.hass.localize(\"ui.panel.config.backup.description\", {\n                  relative_time: relativeTime(\n                    new Date(this._latestBackupDate),\n                    this.hass.locale\n                  ),\n                })\n              : this.hass.localize(\n                  \"ui.panel.config.backup.description_no_backup\"\n                );\n            break;\n          case \"network\":\n            description = this.hass.localize(\n              \"ui.panel.config.network.description\",\n              {\n                state: this._externalAccess\n                  ? this.hass.localize(\"ui.panel.config.network.enabled\")\n                  : this.hass.localize(\"ui.panel.config.network.disabled\"),\n              }\n            );\n            break;\n          case \"storage\":\n            description = this._storageInfo\n              ? this.hass.localize(\"ui.panel.config.storage.description\", {\n                  percent_used: `${Math.round(\n                    (this._storageInfo.used / this._storageInfo.total) * 100\n                  )}${blankBeforePercent(this.hass.locale)}%`,\n                  free_space: `${this._storageInfo.free} GB`,\n                })\n              : \"\";\n            break;\n          case \"hardware\":\n            description =\n              this._boardName ||\n              this.hass.localize(\"ui.panel.config.hardware.description\");\n            break;\n\n          default:\n            description = this.hass.localize(\n              `ui.panel.config.${page.translationKey}.description`\n            );\n            break;\n        }\n\n        return {\n          ...page,\n          name: page.translationKey\n            ? this.hass.localize(\n                `ui.panel.config.${page.translationKey}.caption`\n              )\n            : page.name,\n          description,\n        };\n      });\n\n    return html`\n      <hass-subpage\n        .hass=${this.hass}\n        back-path=\"/config\"\n        .header=${this.hass.localize(\"ui.panel.config.dashboard.system.main\")}\n      >\n        <ha-icon-button\n          slot=\"toolbar-icon\"\n          .path=${mdiPower}\n          .label=${this.hass.localize(\n            \"ui.panel.config.system_dashboard.restart_homeassistant\"\n          )}\n          @click=${this._showRestartDialog}\n        ></ha-icon-button>\n        <ha-config-section\n          .narrow=${this.narrow}\n          .isWide=${this.isWide}\n          full-width\n        >\n          <ha-card outlined>\n            <ha-navigation-list\n              .hass=${this.hass}\n              .narrow=${this.narrow}\n              .pages=${pages}\n              hasSecondary\n              .label=${this.hass.localize(\n                \"ui.panel.config.dashboard.system.main\"\n              )}\n            ></ha-navigation-list>\n          </ha-card>\n        </ha-config-section>\n      </hass-subpage>\n    `;\n  }\n\n  protected firstUpdated(_changedProperties): void {\n    super.firstUpdated(_changedProperties);\n\n    this._fetchNetworkStatus();\n    const isHassioLoaded = isComponentLoaded(this.hass, \"hassio\");\n    this._fetchBackupInfo(isHassioLoaded);\n    this._fetchHardwareInfo(isHassioLoaded);\n    if (isHassioLoaded) {\n      this._fetchStorageInfo();\n    }\n  }\n\n  private async _fetchBackupInfo(isHassioLoaded: boolean) {\n    const backups: BackupContent[] | HassioBackup[] = isHassioLoaded\n      ? await fetchHassioBackups(this.hass)\n      : isComponentLoaded(this.hass, \"backup\")\n        ? await fetchBackupInfo(this.hass).then(\n            (backupData) => backupData.backups\n          )\n        : [];\n\n    if (backups.length > 0) {\n      this._latestBackupDate = (backups as any[]).reduce((a, b) =>\n        a.date > b.date ? a : b\n      ).date;\n    }\n  }\n\n  private async _fetchHardwareInfo(isHassioLoaded: boolean) {\n    if (isComponentLoaded(this.hass, \"hardware\")) {\n      const hardwareInfo: HardwareInfo = await this.hass.callWS({\n        type: \"hardware/info\",\n      });\n      this._boardName = hardwareInfo?.hardware.find(\n        (hw) => hw.board !== null\n      )?.name;\n    } else if (isHassioLoaded) {\n      const osData: HassioHassOSInfo = await fetchHassioHassOsInfo(this.hass);\n      if (osData.board) {\n        this._boardName = BOARD_NAMES[osData.board];\n      }\n    }\n  }\n\n  private async _fetchStorageInfo() {\n    const hostInfo: HassioHostInfo = await fetchHassioHostInfo(this.hass);\n    this._storageInfo = {\n      used: hostInfo.disk_used,\n      free: hostInfo.disk_free,\n      total: hostInfo.disk_total,\n    };\n  }\n\n  private async _fetchNetworkStatus() {\n    if (isComponentLoaded(this.hass, \"cloud\")) {\n      const cloudStatus = await fetchCloudStatus(this.hass);\n      if (cloudStatus.logged_in) {\n        this._externalAccess = true;\n        return;\n      }\n    }\n    this._externalAccess = this.hass.config.external_url !== null;\n  }\n\n  private async _showRestartDialog() {\n    showRestartDialog(this);\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyle,\n      css`\n        :host(:not([narrow])) ha-card {\n          margin-bottom: max(24px, env(safe-area-inset-bottom));\n        }\n\n        ha-config-section {\n          margin: auto;\n          margin-top: -32px;\n          max-width: 600px;\n        }\n\n        ha-card {\n          overflow: hidden;\n          margin-bottom: 24px;\n          margin-bottom: max(24px, env(safe-area-inset-bottom));\n        }\n\n        ha-card a {\n          text-decoration: none;\n          color: var(--primary-text-color);\n        }\n\n        .title {\n          font-size: 16px;\n          padding: 16px;\n          padding-bottom: 0;\n        }\n\n        .restart-section {\n          display: flex;\n          align-items: center;\n          flex-direction: column;\n          justify-content: center;\n          margin-bottom: 24px;\n        }\n\n        @media all and (max-width: 600px) {\n          ha-card {\n            border-width: 1px 0;\n            border-radius: 0;\n            box-shadow: unset;\n          }\n          ha-config-section {\n            margin-top: -42px;\n          }\n        }\n\n        ha-navigation-list {\n          --navigation-list-item-title-font-size: 16px;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-config-system-navigation\": HaConfigSystemNavigation;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}