{"ast":null,"code":"import _createForOfIteratorHelper from \"@babel/runtime/helpers/createForOfIteratorHelper\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10, _templateObject11, _templateObject12, _templateObject13, _templateObject14, _templateObject15, _templateObject16, _templateObject17, _templateObject18, _templateObject19, _templateObject20;\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.string.repeat.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nvar mdiAbTesting = \"M4 2A2 2 0 0 0 2 4V12H4V8H6V12H8V4A2 2 0 0 0 6 2H4M4 4H6V6H4M22 15.5V14A2 2 0 0 0 20 12H16V22H20A2 2 0 0 0 22 20V18.5A1.54 1.54 0 0 0 20.5 17A1.54 1.54 0 0 0 22 15.5M20 20H18V18H20V20M20 16H18V14H20M5.79 21.61L4.21 20.39L18.21 2.39L19.79 3.61Z\";\nvar mdiArrowDecision = \"M11,5H8L12,1L16,5H13V9.43C12.25,9.89 11.58,10.46 11,11.12V5M22,11L18,7V10C14.39,9.85 11.31,12.57 11,16.17C9.44,16.72 8.62,18.44 9.17,20C9.72,21.56 11.44,22.38 13,21.83C14.56,21.27 15.38,19.56 14.83,18C14.53,17.14 13.85,16.47 13,16.17C13.47,12.17 17.47,11.97 17.95,11.97V14.97L22,11M10.63,11.59C9.3,10.57 7.67,10 6,10V7L2,11L6,15V12C7.34,12.03 8.63,12.5 9.64,13.4C9.89,12.76 10.22,12.15 10.63,11.59Z\";\nvar mdiArrowUp = \"M13,20H11V8L5.5,13.5L4.08,12.08L12,4.16L19.92,12.08L18.5,13.5L13,8V20Z\";\nvar mdiAsterisk = \"M21 13H14.4L19.1 17.7L17.7 19.1L13 14.4V21H11V14.3L6.3 19L4.9 17.6L9.4 13H3V11H9.6L4.9 6.3L6.3 4.9L11 9.6V3H13V9.4L17.6 4.8L19 6.3L14.3 11H21V13Z\";\nvar mdiCallMissed = \"M19.59,7L12,14.59L6.41,9H11V7H3V15H5V10.41L12,17.41L21,8.41\";\nvar mdiCallReceived = \"M20,5.41L18.59,4L7,15.59V9H5V19H15V17H8.41\";\nvar mdiCallSplit = \"M14,4L16.29,6.29L13.41,9.17L14.83,10.59L17.71,7.71L20,10V4M10,4H4V10L6.29,7.71L11,12.41V20H13V11.59L7.71,6.29\";\nvar mdiCheckboxBlankOutline = \"M19,3H5C3.89,3 3,3.89 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5C21,3.89 20.1,3 19,3M19,5V19H5V5H19Z\";\nvar mdiCheckboxMarkedOutline = \"M19,19H5V5H15V3H5C3.89,3 3,3.89 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V11H19M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z\";\nvar mdiChevronDown = \"M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z\";\nvar mdiChevronUp = \"M7.41,15.41L12,10.83L16.59,15.41L18,14L12,8L6,14L7.41,15.41Z\";\nvar mdiClose = \"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\";\nvar mdiCodeBraces = \"M8,3A2,2 0 0,0 6,5V9A2,2 0 0,1 4,11H3V13H4A2,2 0 0,1 6,15V19A2,2 0 0,0 8,21H10V19H8V14A2,2 0 0,0 6,12A2,2 0 0,0 8,10V5H10V3M16,3A2,2 0 0,1 18,5V9A2,2 0 0,0 20,11H21V13H20A2,2 0 0,0 18,15V19A2,2 0 0,1 16,21H14V19H16V14A2,2 0 0,1 18,12A2,2 0 0,1 16,10V5H14V3H16Z\";\nvar mdiCodeBrackets = \"M15,4V6H18V18H15V20H20V4M4,4V20H9V18H6V6H9V4H4Z\";\nvar mdiRefresh = \"M17.65,6.35C16.2,4.9 14.21,4 12,4A8,8 0 0,0 4,12A8,8 0 0,0 12,20C15.73,20 18.84,17.45 19.73,14H17.65C16.83,16.33 14.61,18 12,18A6,6 0 0,1 6,12A6,6 0 0,1 12,6C13.66,6 15.14,6.69 16.22,7.78L13,11H20V4L17.65,6.35Z\";\nvar mdiRoomService = \"M12,5A2,2 0 0,1 14,7C14,7.24 13.96,7.47 13.88,7.69C17.95,8.5 21,11.91 21,16H3C3,11.91 6.05,8.5 10.12,7.69C10.04,7.47 10,7.24 10,7A2,2 0 0,1 12,5M22,19H2V17H22V19Z\";\nvar mdiShuffleDisabled = \"M16,4.5V7H5V9H16V11.5L19.5,8M16,12.5V15H5V17H16V19.5L19.5,16\";\nimport { LitElement, css, html } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { ensureArray } from \"../../common/array/ensure-array\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { ACTION_ICONS } from \"../../data/action\";\nimport { getActionType } from \"../../data/script\";\nimport \"../ha-icon-button\";\nimport \"./hat-graph-branch\";\nimport { BRANCH_HEIGHT, NODE_SIZE, SPACING } from \"./hat-graph-const\";\nimport \"./hat-graph-node\";\nimport \"./hat-graph-spacer\";\nexport var HatScriptGraph = _decorate([customElement(\"hat-script-graph\")], function (_initialize, _LitElement) {\n  var HatScriptGraph = /*#__PURE__*/function (_LitElement2) {\n    _inherits(HatScriptGraph, _LitElement2);\n    function HatScriptGraph() {\n      var _this;\n      _classCallCheck(this, HatScriptGraph);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, HatScriptGraph, [].concat(args));\n      _initialize(_assertThisInitialized(_this));\n      return _this;\n    }\n    return _createClass(HatScriptGraph);\n  }(_LitElement);\n  return {\n    F: HatScriptGraph,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"trace\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"selected\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"renderedNodes\",\n      value: function value() {\n        return {};\n      }\n    }, {\n      kind: \"field\",\n      key: \"trackedNodes\",\n      value: function value() {\n        return {};\n      }\n    }, {\n      kind: \"method\",\n      key: \"selectNode\",\n      value: function selectNode(config, path) {\n        var _this2 = this;\n        return function () {\n          fireEvent(_this2, \"graph-node-selected\", {\n            config: config,\n            path: path\n          });\n        };\n      }\n    }, {\n      kind: \"method\",\n      key: \"render_trigger\",\n      value: function render_trigger(config, i) {\n        var path = \"trigger/\".concat(i);\n        var track = this.trace && path in this.trace.trace;\n        this.renderedNodes[path] = {\n          config: config,\n          path: path\n        };\n        if (track) {\n          this.trackedNodes[path] = this.renderedNodes[path];\n        }\n        return html(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      <hat-graph-node\\n        graphStart\\n        ?track=\", \"\\n        @focus=\", \"\\n        ?active=\", \"\\n        .iconPath=\", \"\\n        .notEnabled=\", \"\\n        tabindex=\", \"\\n      ></hat-graph-node>\\n    \"])), track, this.selectNode(config, path), this.selected === path, mdiAsterisk, config.enabled === false, track ? \"0\" : \"-1\");\n      }\n    }, {\n      kind: \"method\",\n      key: \"render_condition\",\n      value: function render_condition(config, i) {\n        var path = \"condition/\".concat(i);\n        this.renderedNodes[path] = {\n          config: config,\n          path: path\n        };\n        if (this.trace && path in this.trace.trace) {\n          this.trackedNodes[path] = this.renderedNodes[path];\n        }\n        return this.render_condition_node(config, path);\n      }\n    }, {\n      kind: \"field\",\n      key: \"typeRenderers\",\n      value: function value() {\n        return {\n          condition: this.render_condition_node,\n          and: this.render_condition_node,\n          or: this.render_condition_node,\n          not: this.render_condition_node,\n          service: this.render_service_node,\n          wait_template: this.render_wait_node,\n          wait_for_trigger: this.render_wait_node,\n          repeat: this.render_repeat_node,\n          choose: this.render_choose_node,\n          if: this.render_if_node,\n          parallel: this.render_parallel_node,\n          other: this.render_other_node\n        };\n      }\n    }, {\n      kind: \"method\",\n      key: \"render_action_node\",\n      value: function render_action_node(node, path) {\n        var graphStart = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        var disabled = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n        var type = Object.keys(this.typeRenderers).find(function (key) {\n          return key in node;\n        }) || \"other\";\n        this.renderedNodes[path] = {\n          config: node,\n          path: path\n        };\n        if (this.trace && path in this.trace.trace) {\n          this.trackedNodes[path] = this.renderedNodes[path];\n        }\n        return this.typeRenderers[type].bind(this)(node, path, graphStart, disabled);\n      }\n    }, {\n      kind: \"method\",\n      key: \"render_choose_node\",\n      value: function render_choose_node(config, path) {\n        var _ensureArray,\n          _this3 = this,\n          _ensureArray2;\n        var graphStart = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        var disabled = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n        var trace = this.trace.trace[path];\n        var trace_path = trace ? trace.map(function (trc) {\n          return trc.result === undefined || trc.result.choice === \"default\" ? \"default\" : trc.result.choice;\n        }) : [];\n        var track_default = trace_path.includes(\"default\");\n        return html(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n      <hat-graph-branch\\n        tabindex=\", \"\\n        @focus=\", \"\\n        ?track=\", \"\\n        ?active=\", \"\\n        .notEnabled=\", \"\\n      >\\n        <hat-graph-node\\n          .graphStart=\", \"\\n          .iconPath=\", \"\\n          ?track=\", \"\\n          ?active=\", \"\\n          .notEnabled=\", \"\\n          slot=\\\"head\\\"\\n          nofocus\\n        ></hat-graph-node>\\n\\n        \", \"\\n        <div ?track=\", \">\\n          <hat-graph-spacer ?track=\", \"></hat-graph-spacer>\\n          \", \"\\n        </div>\\n      </hat-graph-branch>\\n    \"])), trace === undefined ? \"-1\" : \"0\", this.selectNode(config, path), trace !== undefined, this.selected === path, disabled || config.enabled === false, graphStart, mdiArrowDecision, trace !== undefined, this.selected === path, disabled || config.enabled === false, config.choose ? (_ensureArray = ensureArray(config.choose)) === null || _ensureArray === void 0 ? void 0 : _ensureArray.map(function (branch, i) {\n          var branch_path = \"\".concat(path, \"/choose/\").concat(i);\n          var track_this = trace_path.includes(i);\n          _this3.renderedNodes[branch_path] = {\n            config: config,\n            path: branch_path\n          };\n          if (track_this) {\n            _this3.trackedNodes[branch_path] = _this3.renderedNodes[branch_path];\n          }\n          return html(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n                <div class=\\\"graph-container\\\" ?track=\", \">\\n                  <hat-graph-node\\n                    .iconPath=\", \"\\n                    @focus=\", \"\\n                    ?track=\", \"\\n                    ?active=\", \"\\n                    .notEnabled=\", \"\\n                  ></hat-graph-node>\\n                  \", \"\\n                </div>\\n              \"])), track_this, !trace || track_this ? mdiCheckboxMarkedOutline : mdiCheckboxBlankOutline, _this3.selectNode(config, branch_path), track_this, _this3.selected === branch_path, disabled || config.enabled === false, branch.sequence !== null ? ensureArray(branch.sequence).map(function (action, j) {\n            return _this3.render_action_node(action, \"\".concat(branch_path, \"/sequence/\").concat(j), false, disabled || config.enabled === false);\n          }) : \"\");\n        }) : \"\", track_default, track_default, config.default !== null ? (_ensureArray2 = ensureArray(config.default)) === null || _ensureArray2 === void 0 ? void 0 : _ensureArray2.map(function (action, i) {\n          return _this3.render_action_node(action, \"\".concat(path, \"/default/\").concat(i), false, disabled || config.enabled === false);\n        }) : \"\");\n      }\n    }, {\n      kind: \"method\",\n      key: \"render_if_node\",\n      value: function render_if_node(config, path) {\n        var _this4 = this,\n          _config$then;\n        var graphStart = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        var disabled = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n        var trace = this.trace.trace[path];\n        var trackThen = false;\n        var trackElse = false;\n        var _iterator = _createForOfIteratorHelper(trace || []),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var _trc$result, _trc$result2;\n            var trc = _step.value;\n            if (!trackThen && ((_trc$result = trc.result) === null || _trc$result === void 0 ? void 0 : _trc$result.choice) === \"then\") {\n              trackThen = true;\n            }\n            if (!trackElse && ((_trc$result2 = trc.result) === null || _trc$result2 === void 0 ? void 0 : _trc$result2.choice) === \"else\" || !trc.result) {\n              trackElse = true;\n            }\n            if (trackElse && trackThen) {\n              break;\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n        return html(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n      <hat-graph-branch\\n        tabindex=\", \"\\n        @focus=\", \"\\n        ?track=\", \"\\n        ?active=\", \"\\n        .notEnabled=\", \"\\n      >\\n        <hat-graph-node\\n          .graphStart=\", \"\\n          .iconPath=\", \"\\n          ?track=\", \"\\n          ?active=\", \"\\n          .notEnabled=\", \"\\n          slot=\\\"head\\\"\\n          nofocus\\n        ></hat-graph-node>\\n        \", \"\\n        <div class=\\\"graph-container\\\" ?track=\", \">\\n          <hat-graph-node\\n            .iconPath=\", \"\\n            ?track=\", \"\\n            ?active=\", \"\\n            .notEnabled=\", \"\\n            nofocus\\n          ></hat-graph-node>\\n          \", \"\\n        </div>\\n      </hat-graph-branch>\\n    \"])), trace === undefined ? \"-1\" : \"0\", this.selectNode(config, path), trace !== undefined, this.selected === path, disabled || config.enabled === false, graphStart, mdiCallSplit, trace !== undefined, this.selected === path, disabled || config.enabled === false, config.else ? html(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"<div class=\\\"graph-container\\\" ?track=\", \">\\n              <hat-graph-node\\n                .iconPath=\", \"\\n                ?track=\", \"\\n                ?active=\", \"\\n                .notEnabled=\", \"\\n                nofocus\\n              ></hat-graph-node\\n              >\", \"\\n            </div>\"])), trackElse, mdiCallMissed, trackElse, this.selected === path, disabled || config.enabled === false, ensureArray(config.else).map(function (action, j) {\n          return _this4.render_action_node(action, \"\".concat(path, \"/else/\").concat(j), false, disabled || config.enabled === false);\n        })) : html(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"<hat-graph-spacer ?track=\", \"></hat-graph-spacer>\"])), trackElse), trackThen, mdiCallReceived, trackThen, this.selected === path, disabled || config.enabled === false, ensureArray((_config$then = config.then) !== null && _config$then !== void 0 ? _config$then : []).map(function (action, j) {\n          return _this4.render_action_node(action, \"\".concat(path, \"/then/\").concat(j), false, disabled || config.enabled === false);\n        }));\n      }\n    }, {\n      kind: \"method\",\n      key: \"render_condition_node\",\n      value: function render_condition_node(node, path) {\n        var graphStart = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        var disabled = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n        var trace = this.trace.trace[path];\n        var track = false;\n        var trackPass = false;\n        var trackFailed = false;\n        if (trace) {\n          var _iterator2 = _createForOfIteratorHelper(trace),\n            _step2;\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var trc = _step2.value;\n              if (trc.result) {\n                track = true;\n                if (trc.result.result) {\n                  trackPass = true;\n                } else {\n                  trackFailed = true;\n                }\n              }\n              if (trackPass && trackFailed) {\n                break;\n              }\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n        }\n        return html(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral([\"\\n      <hat-graph-branch\\n        @focus=\", \"\\n        ?track=\", \"\\n        ?active=\", \"\\n        .notEnabled=\", \"\\n        tabindex=\", \"\\n        short\\n      >\\n        <hat-graph-node\\n          .graphStart=\", \"\\n          slot=\\\"head\\\"\\n          ?track=\", \"\\n          ?active=\", \"\\n          .notEnabled=\", \"\\n          .iconPath=\", \"\\n          nofocus\\n        ></hat-graph-node>\\n        <div\\n          style=\", \"\\n          graphStart\\n          graphEnd\\n        ></div>\\n        <div ?track=\", \"></div>\\n        <hat-graph-node\\n          .iconPath=\", \"\\n          nofocus\\n          ?track=\", \"\\n          ?active=\", \"\\n          .notEnabled=\", \"\\n        ></hat-graph-node>\\n      </hat-graph-branch>\\n    \"])), this.selectNode(node, path), track, this.selected === path, disabled || node.enabled === false, trace === undefined ? \"-1\" : \"0\", graphStart, track, this.selected === path, disabled || node.enabled === false, mdiAbTesting, \"width: \".concat(NODE_SIZE + SPACING, \"px;\"), trackPass, mdiClose, trackFailed, this.selected === path, disabled || node.enabled === false);\n      }\n    }, {\n      kind: \"method\",\n      key: \"render_repeat_node\",\n      value: function render_repeat_node(node, path) {\n        var _this$trace,\n          _this5 = this;\n        var graphStart = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        var disabled = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n        var trace = this.trace.trace[path];\n        var repeats = (_this$trace = this.trace) === null || _this$trace === void 0 || (_this$trace = _this$trace.trace[\"\".concat(path, \"/repeat/sequence/0\")]) === null || _this$trace === void 0 ? void 0 : _this$trace.length;\n        return html(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral([\"\\n      <hat-graph-branch\\n        tabindex=\", \"\\n        @focus=\", \"\\n        ?track=\", \"\\n        ?active=\", \"\\n        .notEnabled=\", \"\\n      >\\n        <hat-graph-node\\n          .graphStart=\", \"\\n          .iconPath=\", \"\\n          ?track=\", \"\\n          ?active=\", \"\\n          .notEnabled=\", \"\\n          slot=\\\"head\\\"\\n          nofocus\\n        ></hat-graph-node>\\n        <hat-graph-node\\n          .iconPath=\", \"\\n          ?track=\", \"\\n          ?active=\", \"\\n          .notEnabled=\", \"\\n          nofocus\\n          .badge=\", \"\\n        ></hat-graph-node>\\n        <div ?track=\", \">\\n          \", \"\\n        </div>\\n      </hat-graph-branch>\\n    \"])), trace === undefined ? \"-1\" : \"0\", this.selectNode(node, path), path in this.trace.trace, this.selected === path, disabled || node.enabled === false, graphStart, mdiRefresh, path in this.trace.trace, this.selected === path, disabled || node.enabled === false, mdiArrowUp, repeats > 1, this.selected === path, disabled || node.enabled === false, repeats > 1 ? repeats : undefined, trace, ensureArray(node.repeat.sequence).map(function (action, i) {\n          return _this5.render_action_node(action, \"\".concat(path, \"/repeat/sequence/\").concat(i), false, disabled || node.enabled === false);\n        }));\n      }\n    }, {\n      kind: \"method\",\n      key: \"render_service_node\",\n      value: function render_service_node(node, path) {\n        var graphStart = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        var disabled = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n        return html(_templateObject9 || (_templateObject9 = _taggedTemplateLiteral([\"\\n      <hat-graph-node\\n        .graphStart=\", \"\\n        .iconPath=\", \"\\n        @focus=\", \"\\n        ?track=\", \"\\n        ?active=\", \"\\n        .notEnabled=\", \"\\n        tabindex=\", \"\\n      ></hat-graph-node>\\n    \"])), graphStart, mdiRoomService, this.selectNode(node, path), path in this.trace.trace, this.selected === path, disabled || node.enabled === false, this.trace && path in this.trace.trace ? \"0\" : \"-1\");\n      }\n    }, {\n      kind: \"method\",\n      key: \"render_wait_node\",\n      value: function render_wait_node(node, path) {\n        var graphStart = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        var disabled = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n        return html(_templateObject10 || (_templateObject10 = _taggedTemplateLiteral([\"\\n      <hat-graph-node\\n        .graphStart=\", \"\\n        .iconPath=\", \"\\n        @focus=\", \"\\n        ?track=\", \"\\n        ?active=\", \"\\n        .notEnabled=\", \"\\n        tabindex=\", \"\\n      ></hat-graph-node>\\n    \"])), graphStart, mdiCodeBraces, this.selectNode(node, path), path in this.trace.trace, this.selected === path, disabled || node.enabled === false, this.trace && path in this.trace.trace ? \"0\" : \"-1\");\n      }\n    }, {\n      kind: \"method\",\n      key: \"render_parallel_node\",\n      value: function render_parallel_node(node, path) {\n        var _this6 = this;\n        var graphStart = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        var disabled = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n        var trace = this.trace.trace[path];\n        return html(_templateObject11 || (_templateObject11 = _taggedTemplateLiteral([\"\\n      <hat-graph-branch\\n        tabindex=\", \"\\n        @focus=\", \"\\n        ?track=\", \"\\n        ?active=\", \"\\n        .notEnabled=\", \"\\n      >\\n        <hat-graph-node\\n          .graphStart=\", \"\\n          .iconPath=\", \"\\n          ?track=\", \"\\n          ?active=\", \"\\n          .notEnabled=\", \"\\n          slot=\\\"head\\\"\\n          nofocus\\n        ></hat-graph-node>\\n        \", \"\\n      </hat-graph-branch>\\n    \"])), trace === undefined ? \"-1\" : \"0\", this.selectNode(node, path), path in this.trace.trace, this.selected === path, disabled || node.enabled === false, graphStart, mdiShuffleDisabled, path in this.trace.trace, this.selected === path, disabled || node.enabled === false, ensureArray(node.parallel).map(function (action, i) {\n          return \"sequence\" in action ? html(_templateObject12 || (_templateObject12 = _taggedTemplateLiteral([\"<div ?track=\", \">\\n                \", \"\\n              </div>\"])), path in _this6.trace.trace, ensureArray(action.sequence).map(function (sAction, j) {\n            return _this6.render_action_node(sAction, \"\".concat(path, \"/parallel/\").concat(i, \"/sequence/\").concat(j), false, disabled || node.enabled === false);\n          })) : _this6.render_action_node(action, \"\".concat(path, \"/parallel/\").concat(i, \"/sequence/0\"), false, disabled || node.enabled === false);\n        }));\n      }\n    }, {\n      kind: \"method\",\n      key: \"render_other_node\",\n      value: function render_other_node(node, path) {\n        var graphStart = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        var disabled = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n        return html(_templateObject13 || (_templateObject13 = _taggedTemplateLiteral([\"\\n      <hat-graph-node\\n        .graphStart=\", \"\\n        .iconPath=\", \"\\n        @focus=\", \"\\n        ?track=\", \"\\n        ?active=\", \"\\n        .notEnabled=\", \"\\n      ></hat-graph-node>\\n    \"])), graphStart, ACTION_ICONS[getActionType(node)] || mdiCodeBrackets, this.selectNode(node, path), path in this.trace.trace, this.selected === path, disabled || node.enabled === false);\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var _this7 = this;\n        var paths = Object.keys(this.trackedNodes);\n        var trigger_nodes = \"trigger\" in this.trace.config ? ensureArray(this.trace.config.trigger).map(function (trigger, i) {\n          return _this7.render_trigger(trigger, i);\n        }) : undefined;\n        try {\n          var _ensureArray3;\n          return html(_templateObject14 || (_templateObject14 = _taggedTemplateLiteral([\"\\n        <div class=\\\"parent graph-container\\\">\\n          \", \"\\n          \", \"\\n          \", \"\\n          \", \"\\n        </div>\\n        <div class=\\\"actions\\\">\\n          <ha-icon-button\\n            .disabled=\", \"\\n            @click=\", \"\\n            .path=\", \"\\n          ></ha-icon-button>\\n          <ha-icon-button\\n            .disabled=\", \"\\n            @click=\", \"\\n            .path=\", \"\\n          ></ha-icon-button>\\n        </div>\\n      \"])), trigger_nodes ? html(_templateObject15 || (_templateObject15 = _taggedTemplateLiteral([\"<hat-graph-branch start .short=\", \">\\n                \", \"\\n              </hat-graph-branch>\"])), trigger_nodes.length < 2, trigger_nodes) : \"\", \"condition\" in this.trace.config ? html(_templateObject16 || (_templateObject16 = _taggedTemplateLiteral([\"\", \"\"])), (_ensureArray3 = ensureArray(this.trace.config.condition)) === null || _ensureArray3 === void 0 ? void 0 : _ensureArray3.map(function (condition, i) {\n            return _this7.render_condition(condition, i);\n          })) : \"\", \"action\" in this.trace.config ? html(_templateObject17 || (_templateObject17 = _taggedTemplateLiteral([\"\", \"\"])), ensureArray(this.trace.config.action).map(function (action, i) {\n            return _this7.render_action_node(action, \"action/\".concat(i));\n          })) : \"\", \"sequence\" in this.trace.config ? html(_templateObject18 || (_templateObject18 = _taggedTemplateLiteral([\"\", \"\"])), ensureArray(this.trace.config.sequence).map(function (action, i) {\n            return _this7.render_action_node(action, \"sequence/\".concat(i), i === 0);\n          })) : \"\", paths.length === 0 || paths[0] === this.selected, this._previousTrackedNode, mdiChevronUp, paths.length === 0 || paths[paths.length - 1] === this.selected, this._nextTrackedNode, mdiChevronDown);\n        } catch (err) {\n          if (__DEV__) {\n            // eslint-disable-next-line no-console\n            console.log(\"Error creating script graph:\", err);\n          }\n          return html(_templateObject19 || (_templateObject19 = _taggedTemplateLiteral([\"\\n        <div class=\\\"error\\\">\\n          Error rendering graph. Please download trace and share with the\\n          developers.\\n        </div>\\n      \"])));\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"willUpdate\",\n      value: function willUpdate(changedProps) {\n        _get(_getPrototypeOf(HatScriptGraph.prototype), \"willUpdate\", this).call(this, changedProps);\n        if (changedProps.has(\"trace\")) {\n          this.renderedNodes = {};\n          this.trackedNodes = {};\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"updated\",\n      value: function updated(changedProps) {\n        _get(_getPrototypeOf(HatScriptGraph.prototype), \"updated\", this).call(this, changedProps);\n        if (!changedProps.has(\"trace\")) {\n          return;\n        }\n\n        // If trace changed and we have no or an invalid selection, select first option.\n        if (!this.selected || !(this.selected in this.trackedNodes)) {\n          var firstNode = this.trackedNodes[Object.keys(this.trackedNodes)[0]];\n          if (firstNode) {\n            fireEvent(this, \"graph-node-selected\", firstNode);\n          }\n        }\n        if (this.trace) {\n          var sortKeys = Object.keys(this.trace.trace);\n          var keys = Object.keys(this.renderedNodes).sort(function (a, b) {\n            return sortKeys.indexOf(a) - sortKeys.indexOf(b);\n          });\n          var sortedTrackedNodes = {};\n          var sortedRenderedNodes = {};\n          var _iterator3 = _createForOfIteratorHelper(keys),\n            _step3;\n          try {\n            for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n              var key = _step3.value;\n              sortedRenderedNodes[key] = this.renderedNodes[key];\n              if (key in this.trackedNodes) {\n                sortedTrackedNodes[key] = this.trackedNodes[key];\n              }\n            }\n          } catch (err) {\n            _iterator3.e(err);\n          } finally {\n            _iterator3.f();\n          }\n          this.renderedNodes = sortedRenderedNodes;\n          this.trackedNodes = sortedTrackedNodes;\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_previousTrackedNode\",\n      value: function _previousTrackedNode() {\n        var nodes = Object.keys(this.trackedNodes);\n        var prevIndex = nodes.indexOf(this.selected) - 1;\n        if (prevIndex >= 0) {\n          fireEvent(this, \"graph-node-selected\", this.trackedNodes[nodes[prevIndex]]);\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_nextTrackedNode\",\n      value: function _nextTrackedNode() {\n        var nodes = Object.keys(this.trackedNodes);\n        var nextIndex = nodes.indexOf(this.selected) + 1;\n        if (nextIndex < nodes.length) {\n          fireEvent(this, \"graph-node-selected\", this.trackedNodes[nodes[nextIndex]]);\n        }\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css(_templateObject20 || (_templateObject20 = _taggedTemplateLiteral([\"\\n      :host {\\n        display: flex;\\n        --stroke-clr: var(--stroke-color, var(--secondary-text-color));\\n        --active-clr: var(--active-color, var(--primary-color));\\n        --track-clr: var(--track-color, var(--accent-color));\\n        --hover-clr: var(--hover-color, var(--primary-color));\\n        --disabled-clr: var(--disabled-color, var(--disabled-text-color));\\n        --disabled-active-clr: rgba(var(--rgb-primary-color), 0.5);\\n        --disabled-hover-clr: rgba(var(--rgb-primary-color), 0.7);\\n        --default-trigger-color: 3, 169, 244;\\n        --rgb-trigger-color: var(--trigger-color, var(--default-trigger-color));\\n        --background-clr: var(--background-color, white);\\n        --default-icon-clr: var(--icon-color, black);\\n        --icon-clr: var(--stroke-clr);\\n\\n        --hat-graph-spacing: \", \"px;\\n        --hat-graph-node-size: \", \"px;\\n        --hat-graph-branch-height: \", \"px;\\n      }\\n      .graph-container {\\n        display: flex;\\n        flex-direction: column;\\n        align-items: center;\\n      }\\n      .actions {\\n        display: flex;\\n        flex-direction: column;\\n      }\\n      .parent {\\n        margin-left: 8px;\\n        margin-inline-start: 8px;\\n        margin-inline-end: initial;\\n        margin-top: 16px;\\n      }\\n      .error {\\n        padding: 16px;\\n        max-width: 300px;\\n      }\\n    \"])), SPACING, NODE_SIZE, BRANCH_HEIGHT);\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["LitElement","css","html","customElement","property","ensureArray","fireEvent","ACTION_ICONS","getActionType","BRANCH_HEIGHT","NODE_SIZE","SPACING","HatScriptGraph","_decorate","_initialize","_LitElement","_LitElement2","_inherits","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_assertThisInitialized","_createClass","F","d","kind","decorators","attribute","key","value","selectNode","config","path","_this2","render_trigger","i","track","trace","renderedNodes","trackedNodes","_templateObject","_taggedTemplateLiteral","selected","mdiAsterisk","enabled","render_condition","render_condition_node","condition","and","or","not","service","render_service_node","wait_template","render_wait_node","wait_for_trigger","repeat","render_repeat_node","choose","render_choose_node","if","render_if_node","parallel","render_parallel_node","other","render_other_node","render_action_node","node","graphStart","undefined","disabled","type","Object","keys","typeRenderers","find","bind","_ensureArray","_this3","_ensureArray2","trace_path","map","trc","result","choice","track_default","includes","_templateObject2","mdiArrowDecision","branch","branch_path","track_this","_templateObject3","mdiCheckboxMarkedOutline","mdiCheckboxBlankOutline","sequence","action","j","default","_this4","_config$then","trackThen","trackElse","_iterator","_createForOfIteratorHelper","_step","s","n","done","_trc$result","_trc$result2","err","e","f","_templateObject4","mdiCallSplit","else","_templateObject5","mdiCallMissed","_templateObject6","mdiCallReceived","then","trackPass","trackFailed","_iterator2","_step2","_templateObject7","mdiAbTesting","mdiClose","_this$trace","_this5","repeats","_templateObject8","mdiRefresh","mdiArrowUp","_templateObject9","mdiRoomService","_templateObject10","mdiCodeBraces","_this6","_templateObject11","mdiShuffleDisabled","_templateObject12","sAction","_templateObject13","mdiCodeBrackets","render","_this7","paths","trigger_nodes","trigger","_ensureArray3","_templateObject14","_templateObject15","_templateObject16","_templateObject17","_templateObject18","_previousTrackedNode","mdiChevronUp","_nextTrackedNode","mdiChevronDown","__DEV__","console","log","_templateObject19","willUpdate","changedProps","_get","_getPrototypeOf","prototype","call","has","updated","firstNode","sortKeys","sort","a","b","indexOf","sortedTrackedNodes","sortedRenderedNodes","_iterator3","_step3","nodes","prevIndex","nextIndex","static","styles","_templateObject20"],"sources":["/workspaces/frontend/src/components/trace/hat-script-graph.ts"],"sourcesContent":["import {\n  mdiAbTesting,\n  mdiArrowDecision,\n  mdiArrowUp,\n  mdiAsterisk,\n  mdiCallMissed,\n  mdiCallReceived,\n  mdiCallSplit,\n  mdiCheckboxBlankOutline,\n  mdiCheckboxMarkedOutline,\n  mdiChevronDown,\n  mdiChevronUp,\n  mdiClose,\n  mdiCodeBraces,\n  mdiCodeBrackets,\n  mdiRefresh,\n  mdiRoomService,\n  mdiShuffleDisabled,\n} from \"@mdi/js\";\nimport { LitElement, PropertyValues, css, html } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { ensureArray } from \"../../common/array/ensure-array\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { ACTION_ICONS } from \"../../data/action\";\nimport { Condition, Trigger } from \"../../data/automation\";\nimport {\n  Action,\n  ChooseAction,\n  IfAction,\n  ManualScriptConfig,\n  ParallelAction,\n  RepeatAction,\n  ServiceAction,\n  WaitAction,\n  WaitForTriggerAction,\n  getActionType,\n} from \"../../data/script\";\nimport {\n  ChooseActionTraceStep,\n  ConditionTraceStep,\n  IfActionTraceStep,\n  TraceExtended,\n} from \"../../data/trace\";\nimport \"../ha-icon-button\";\nimport \"./hat-graph-branch\";\nimport { BRANCH_HEIGHT, NODE_SIZE, SPACING } from \"./hat-graph-const\";\nimport \"./hat-graph-node\";\nimport \"./hat-graph-spacer\";\n\nexport interface NodeInfo {\n  path: string;\n  config: any;\n}\n\ndeclare global {\n  interface HASSDomEvents {\n    \"graph-node-selected\": NodeInfo;\n  }\n}\n\n@customElement(\"hat-script-graph\")\nexport class HatScriptGraph extends LitElement {\n  @property({ attribute: false }) public trace!: TraceExtended;\n\n  @property({ attribute: false }) public selected?: string;\n\n  public renderedNodes: Record<string, NodeInfo> = {};\n\n  public trackedNodes: Record<string, NodeInfo> = {};\n\n  private selectNode(config, path) {\n    return () => {\n      fireEvent(this, \"graph-node-selected\", { config, path });\n    };\n  }\n\n  private render_trigger(config: Trigger, i: number) {\n    const path = `trigger/${i}`;\n    const track = this.trace && path in this.trace.trace;\n    this.renderedNodes[path] = { config, path };\n    if (track) {\n      this.trackedNodes[path] = this.renderedNodes[path];\n    }\n    return html`\n      <hat-graph-node\n        graphStart\n        ?track=${track}\n        @focus=${this.selectNode(config, path)}\n        ?active=${this.selected === path}\n        .iconPath=${mdiAsterisk}\n        .notEnabled=${config.enabled === false}\n        tabindex=${track ? \"0\" : \"-1\"}\n      ></hat-graph-node>\n    `;\n  }\n\n  private render_condition(config: Condition, i: number) {\n    const path = `condition/${i}`;\n    this.renderedNodes[path] = { config, path };\n    if (this.trace && path in this.trace.trace) {\n      this.trackedNodes[path] = this.renderedNodes[path];\n    }\n    return this.render_condition_node(config, path);\n  }\n\n  private typeRenderers = {\n    condition: this.render_condition_node,\n    and: this.render_condition_node,\n    or: this.render_condition_node,\n    not: this.render_condition_node,\n    service: this.render_service_node,\n    wait_template: this.render_wait_node,\n    wait_for_trigger: this.render_wait_node,\n    repeat: this.render_repeat_node,\n    choose: this.render_choose_node,\n    if: this.render_if_node,\n    parallel: this.render_parallel_node,\n    other: this.render_other_node,\n  };\n\n  private render_action_node(\n    node: Action,\n    path: string,\n    graphStart = false,\n    disabled = false\n  ) {\n    const type =\n      Object.keys(this.typeRenderers).find((key) => key in node) || \"other\";\n    this.renderedNodes[path] = { config: node, path };\n    if (this.trace && path in this.trace.trace) {\n      this.trackedNodes[path] = this.renderedNodes[path];\n    }\n    return this.typeRenderers[type].bind(this)(\n      node,\n      path,\n      graphStart,\n      disabled\n    );\n  }\n\n  private render_choose_node(\n    config: ChooseAction,\n    path: string,\n    graphStart = false,\n    disabled = false\n  ) {\n    const trace = this.trace.trace[path] as ChooseActionTraceStep[] | undefined;\n    const trace_path = trace\n      ? trace.map((trc) =>\n          trc.result === undefined || trc.result.choice === \"default\"\n            ? \"default\"\n            : trc.result.choice\n        )\n      : [];\n    const track_default = trace_path.includes(\"default\");\n    return html`\n      <hat-graph-branch\n        tabindex=${trace === undefined ? \"-1\" : \"0\"}\n        @focus=${this.selectNode(config, path)}\n        ?track=${trace !== undefined}\n        ?active=${this.selected === path}\n        .notEnabled=${disabled || config.enabled === false}\n      >\n        <hat-graph-node\n          .graphStart=${graphStart}\n          .iconPath=${mdiArrowDecision}\n          ?track=${trace !== undefined}\n          ?active=${this.selected === path}\n          .notEnabled=${disabled || config.enabled === false}\n          slot=\"head\"\n          nofocus\n        ></hat-graph-node>\n\n        ${config.choose\n          ? ensureArray(config.choose)?.map((branch, i) => {\n              const branch_path = `${path}/choose/${i}`;\n              const track_this = trace_path.includes(i);\n              this.renderedNodes[branch_path] = { config, path: branch_path };\n              if (track_this) {\n                this.trackedNodes[branch_path] =\n                  this.renderedNodes[branch_path];\n              }\n              return html`\n                <div class=\"graph-container\" ?track=${track_this}>\n                  <hat-graph-node\n                    .iconPath=${!trace || track_this\n                      ? mdiCheckboxMarkedOutline\n                      : mdiCheckboxBlankOutline}\n                    @focus=${this.selectNode(config, branch_path)}\n                    ?track=${track_this}\n                    ?active=${this.selected === branch_path}\n                    .notEnabled=${disabled || config.enabled === false}\n                  ></hat-graph-node>\n                  ${branch.sequence !== null\n                    ? ensureArray(branch.sequence).map((action, j) =>\n                        this.render_action_node(\n                          action,\n                          `${branch_path}/sequence/${j}`,\n                          false,\n                          disabled || config.enabled === false\n                        )\n                      )\n                    : \"\"}\n                </div>\n              `;\n            })\n          : \"\"}\n        <div ?track=${track_default}>\n          <hat-graph-spacer ?track=${track_default}></hat-graph-spacer>\n          ${config.default !== null\n            ? ensureArray(config.default)?.map((action, i) =>\n                this.render_action_node(\n                  action,\n                  `${path}/default/${i}`,\n                  false,\n                  disabled || config.enabled === false\n                )\n              )\n            : \"\"}\n        </div>\n      </hat-graph-branch>\n    `;\n  }\n\n  private render_if_node(\n    config: IfAction,\n    path: string,\n    graphStart = false,\n    disabled = false\n  ) {\n    const trace = this.trace.trace[path] as IfActionTraceStep[] | undefined;\n    let trackThen = false;\n    let trackElse = false;\n    for (const trc of trace || []) {\n      if (!trackThen && trc.result?.choice === \"then\") {\n        trackThen = true;\n      }\n      if ((!trackElse && trc.result?.choice === \"else\") || !trc.result) {\n        trackElse = true;\n      }\n      if (trackElse && trackThen) {\n        break;\n      }\n    }\n    return html`\n      <hat-graph-branch\n        tabindex=${trace === undefined ? \"-1\" : \"0\"}\n        @focus=${this.selectNode(config, path)}\n        ?track=${trace !== undefined}\n        ?active=${this.selected === path}\n        .notEnabled=${disabled || config.enabled === false}\n      >\n        <hat-graph-node\n          .graphStart=${graphStart}\n          .iconPath=${mdiCallSplit}\n          ?track=${trace !== undefined}\n          ?active=${this.selected === path}\n          .notEnabled=${disabled || config.enabled === false}\n          slot=\"head\"\n          nofocus\n        ></hat-graph-node>\n        ${config.else\n          ? html`<div class=\"graph-container\" ?track=${trackElse}>\n              <hat-graph-node\n                .iconPath=${mdiCallMissed}\n                ?track=${trackElse}\n                ?active=${this.selected === path}\n                .notEnabled=${disabled || config.enabled === false}\n                nofocus\n              ></hat-graph-node\n              >${ensureArray(config.else).map((action, j) =>\n                this.render_action_node(\n                  action,\n                  `${path}/else/${j}`,\n                  false,\n                  disabled || config.enabled === false\n                )\n              )}\n            </div>`\n          : html`<hat-graph-spacer ?track=${trackElse}></hat-graph-spacer>`}\n        <div class=\"graph-container\" ?track=${trackThen}>\n          <hat-graph-node\n            .iconPath=${mdiCallReceived}\n            ?track=${trackThen}\n            ?active=${this.selected === path}\n            .notEnabled=${disabled || config.enabled === false}\n            nofocus\n          ></hat-graph-node>\n          ${ensureArray(config.then ?? []).map((action, j) =>\n            this.render_action_node(\n              action,\n              `${path}/then/${j}`,\n              false,\n              disabled || config.enabled === false\n            )\n          )}\n        </div>\n      </hat-graph-branch>\n    `;\n  }\n\n  private render_condition_node(\n    node: Condition,\n    path: string,\n    graphStart = false,\n    disabled = false\n  ) {\n    const trace = this.trace.trace[path] as ConditionTraceStep[] | undefined;\n    let track = false;\n    let trackPass = false;\n    let trackFailed = false;\n    if (trace) {\n      for (const trc of trace) {\n        if (trc.result) {\n          track = true;\n          if (trc.result.result) {\n            trackPass = true;\n          } else {\n            trackFailed = true;\n          }\n        }\n        if (trackPass && trackFailed) {\n          break;\n        }\n      }\n    }\n    return html`\n      <hat-graph-branch\n        @focus=${this.selectNode(node, path)}\n        ?track=${track}\n        ?active=${this.selected === path}\n        .notEnabled=${disabled || node.enabled === false}\n        tabindex=${trace === undefined ? \"-1\" : \"0\"}\n        short\n      >\n        <hat-graph-node\n          .graphStart=${graphStart}\n          slot=\"head\"\n          ?track=${track}\n          ?active=${this.selected === path}\n          .notEnabled=${disabled || node.enabled === false}\n          .iconPath=${mdiAbTesting}\n          nofocus\n        ></hat-graph-node>\n        <div\n          style=${`width: ${NODE_SIZE + SPACING}px;`}\n          graphStart\n          graphEnd\n        ></div>\n        <div ?track=${trackPass}></div>\n        <hat-graph-node\n          .iconPath=${mdiClose}\n          nofocus\n          ?track=${trackFailed}\n          ?active=${this.selected === path}\n          .notEnabled=${disabled || node.enabled === false}\n        ></hat-graph-node>\n      </hat-graph-branch>\n    `;\n  }\n\n  private render_repeat_node(\n    node: RepeatAction,\n    path: string,\n    graphStart = false,\n    disabled = false\n  ) {\n    const trace: any = this.trace.trace[path];\n    const repeats = this.trace?.trace[`${path}/repeat/sequence/0`]?.length;\n    return html`\n      <hat-graph-branch\n        tabindex=${trace === undefined ? \"-1\" : \"0\"}\n        @focus=${this.selectNode(node, path)}\n        ?track=${path in this.trace.trace}\n        ?active=${this.selected === path}\n        .notEnabled=${disabled || node.enabled === false}\n      >\n        <hat-graph-node\n          .graphStart=${graphStart}\n          .iconPath=${mdiRefresh}\n          ?track=${path in this.trace.trace}\n          ?active=${this.selected === path}\n          .notEnabled=${disabled || node.enabled === false}\n          slot=\"head\"\n          nofocus\n        ></hat-graph-node>\n        <hat-graph-node\n          .iconPath=${mdiArrowUp}\n          ?track=${repeats > 1}\n          ?active=${this.selected === path}\n          .notEnabled=${disabled || node.enabled === false}\n          nofocus\n          .badge=${repeats > 1 ? repeats : undefined}\n        ></hat-graph-node>\n        <div ?track=${trace}>\n          ${ensureArray(node.repeat.sequence).map((action, i) =>\n            this.render_action_node(\n              action,\n              `${path}/repeat/sequence/${i}`,\n              false,\n              disabled || node.enabled === false\n            )\n          )}\n        </div>\n      </hat-graph-branch>\n    `;\n  }\n\n  private render_service_node(\n    node: ServiceAction,\n    path: string,\n    graphStart = false,\n    disabled = false\n  ) {\n    return html`\n      <hat-graph-node\n        .graphStart=${graphStart}\n        .iconPath=${mdiRoomService}\n        @focus=${this.selectNode(node, path)}\n        ?track=${path in this.trace.trace}\n        ?active=${this.selected === path}\n        .notEnabled=${disabled || node.enabled === false}\n        tabindex=${this.trace && path in this.trace.trace ? \"0\" : \"-1\"}\n      ></hat-graph-node>\n    `;\n  }\n\n  private render_wait_node(\n    node: WaitAction | WaitForTriggerAction,\n    path: string,\n    graphStart = false,\n    disabled = false\n  ) {\n    return html`\n      <hat-graph-node\n        .graphStart=${graphStart}\n        .iconPath=${mdiCodeBraces}\n        @focus=${this.selectNode(node, path)}\n        ?track=${path in this.trace.trace}\n        ?active=${this.selected === path}\n        .notEnabled=${disabled || node.enabled === false}\n        tabindex=${this.trace && path in this.trace.trace ? \"0\" : \"-1\"}\n      ></hat-graph-node>\n    `;\n  }\n\n  private render_parallel_node(\n    node: ParallelAction,\n    path: string,\n    graphStart = false,\n    disabled = false\n  ) {\n    const trace: any = this.trace.trace[path];\n    return html`\n      <hat-graph-branch\n        tabindex=${trace === undefined ? \"-1\" : \"0\"}\n        @focus=${this.selectNode(node, path)}\n        ?track=${path in this.trace.trace}\n        ?active=${this.selected === path}\n        .notEnabled=${disabled || node.enabled === false}\n      >\n        <hat-graph-node\n          .graphStart=${graphStart}\n          .iconPath=${mdiShuffleDisabled}\n          ?track=${path in this.trace.trace}\n          ?active=${this.selected === path}\n          .notEnabled=${disabled || node.enabled === false}\n          slot=\"head\"\n          nofocus\n        ></hat-graph-node>\n        ${ensureArray(node.parallel).map((action, i) =>\n          \"sequence\" in action\n            ? html`<div ?track=${path in this.trace.trace}>\n                ${ensureArray((action as ManualScriptConfig).sequence).map(\n                  (sAction, j) =>\n                    this.render_action_node(\n                      sAction,\n                      `${path}/parallel/${i}/sequence/${j}`,\n                      false,\n                      disabled || node.enabled === false\n                    )\n                )}\n              </div>`\n            : this.render_action_node(\n                action,\n                `${path}/parallel/${i}/sequence/0`,\n                false,\n                disabled || node.enabled === false\n              )\n        )}\n      </hat-graph-branch>\n    `;\n  }\n\n  private render_other_node(\n    node: Action,\n    path: string,\n    graphStart = false,\n    disabled = false\n  ) {\n    return html`\n      <hat-graph-node\n        .graphStart=${graphStart}\n        .iconPath=${ACTION_ICONS[getActionType(node)] || mdiCodeBrackets}\n        @focus=${this.selectNode(node, path)}\n        ?track=${path in this.trace.trace}\n        ?active=${this.selected === path}\n        .notEnabled=${disabled || node.enabled === false}\n      ></hat-graph-node>\n    `;\n  }\n\n  protected render() {\n    const paths = Object.keys(this.trackedNodes);\n    const trigger_nodes =\n      \"trigger\" in this.trace.config\n        ? ensureArray(this.trace.config.trigger).map((trigger, i) =>\n            this.render_trigger(trigger, i)\n          )\n        : undefined;\n    try {\n      return html`\n        <div class=\"parent graph-container\">\n          ${trigger_nodes\n            ? html`<hat-graph-branch start .short=${trigger_nodes.length < 2}>\n                ${trigger_nodes}\n              </hat-graph-branch>`\n            : \"\"}\n          ${\"condition\" in this.trace.config\n            ? html`${ensureArray(this.trace.config.condition)?.map(\n                (condition, i) => this.render_condition(condition, i)\n              )}`\n            : \"\"}\n          ${\"action\" in this.trace.config\n            ? html`${ensureArray(this.trace.config.action).map((action, i) =>\n                this.render_action_node(action, `action/${i}`)\n              )}`\n            : \"\"}\n          ${\"sequence\" in this.trace.config\n            ? html`${ensureArray(this.trace.config.sequence).map((action, i) =>\n                this.render_action_node(action, `sequence/${i}`, i === 0)\n              )}`\n            : \"\"}\n        </div>\n        <div class=\"actions\">\n          <ha-icon-button\n            .disabled=${paths.length === 0 || paths[0] === this.selected}\n            @click=${this._previousTrackedNode}\n            .path=${mdiChevronUp}\n          ></ha-icon-button>\n          <ha-icon-button\n            .disabled=${paths.length === 0 ||\n            paths[paths.length - 1] === this.selected}\n            @click=${this._nextTrackedNode}\n            .path=${mdiChevronDown}\n          ></ha-icon-button>\n        </div>\n      `;\n    } catch (err: any) {\n      if (__DEV__) {\n        // eslint-disable-next-line no-console\n        console.log(\"Error creating script graph:\", err);\n      }\n      return html`\n        <div class=\"error\">\n          Error rendering graph. Please download trace and share with the\n          developers.\n        </div>\n      `;\n    }\n  }\n\n  public willUpdate(changedProps: PropertyValues<this>) {\n    super.willUpdate(changedProps);\n    if (changedProps.has(\"trace\")) {\n      this.renderedNodes = {};\n      this.trackedNodes = {};\n    }\n  }\n\n  protected updated(changedProps: PropertyValues<this>) {\n    super.updated(changedProps);\n\n    if (!changedProps.has(\"trace\")) {\n      return;\n    }\n\n    // If trace changed and we have no or an invalid selection, select first option.\n    if (!this.selected || !(this.selected in this.trackedNodes)) {\n      const firstNode = this.trackedNodes[Object.keys(this.trackedNodes)[0]];\n      if (firstNode) {\n        fireEvent(this, \"graph-node-selected\", firstNode);\n      }\n    }\n\n    if (this.trace) {\n      const sortKeys = Object.keys(this.trace.trace);\n      const keys = Object.keys(this.renderedNodes).sort(\n        (a, b) => sortKeys.indexOf(a) - sortKeys.indexOf(b)\n      );\n      const sortedTrackedNodes = {};\n      const sortedRenderedNodes = {};\n      for (const key of keys) {\n        sortedRenderedNodes[key] = this.renderedNodes[key];\n        if (key in this.trackedNodes) {\n          sortedTrackedNodes[key] = this.trackedNodes[key];\n        }\n      }\n      this.renderedNodes = sortedRenderedNodes;\n      this.trackedNodes = sortedTrackedNodes;\n    }\n  }\n\n  private _previousTrackedNode() {\n    const nodes = Object.keys(this.trackedNodes);\n    const prevIndex = nodes.indexOf(this.selected!) - 1;\n    if (prevIndex >= 0) {\n      fireEvent(\n        this,\n        \"graph-node-selected\",\n        this.trackedNodes[nodes[prevIndex]]\n      );\n    }\n  }\n\n  private _nextTrackedNode() {\n    const nodes = Object.keys(this.trackedNodes);\n    const nextIndex = nodes.indexOf(this.selected!) + 1;\n    if (nextIndex < nodes.length) {\n      fireEvent(\n        this,\n        \"graph-node-selected\",\n        this.trackedNodes[nodes[nextIndex]]\n      );\n    }\n  }\n\n  static get styles() {\n    return css`\n      :host {\n        display: flex;\n        --stroke-clr: var(--stroke-color, var(--secondary-text-color));\n        --active-clr: var(--active-color, var(--primary-color));\n        --track-clr: var(--track-color, var(--accent-color));\n        --hover-clr: var(--hover-color, var(--primary-color));\n        --disabled-clr: var(--disabled-color, var(--disabled-text-color));\n        --disabled-active-clr: rgba(var(--rgb-primary-color), 0.5);\n        --disabled-hover-clr: rgba(var(--rgb-primary-color), 0.7);\n        --default-trigger-color: 3, 169, 244;\n        --rgb-trigger-color: var(--trigger-color, var(--default-trigger-color));\n        --background-clr: var(--background-color, white);\n        --default-icon-clr: var(--icon-color, black);\n        --icon-clr: var(--stroke-clr);\n\n        --hat-graph-spacing: ${SPACING}px;\n        --hat-graph-node-size: ${NODE_SIZE}px;\n        --hat-graph-branch-height: ${BRANCH_HEIGHT}px;\n      }\n      .graph-container {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n      }\n      .actions {\n        display: flex;\n        flex-direction: column;\n      }\n      .parent {\n        margin-left: 8px;\n        margin-inline-start: 8px;\n        margin-inline-end: initial;\n        margin-top: 16px;\n      }\n      .error {\n        padding: 16px;\n        max-width: 300px;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hat-script-graph\": HatScriptGraph;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}