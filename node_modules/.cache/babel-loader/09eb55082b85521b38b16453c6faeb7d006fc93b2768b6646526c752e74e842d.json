{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport { html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { fireEvent } from \"../../../../../common/dom/fire_event\";\nimport { stopPropagation } from \"../../../../../common/dom/stop_propagation\";\nimport { changeZHANetworkChannel } from \"../../../../../data/zha\";\nimport { showAlertDialog } from \"../../../../../dialogs/generic/show-dialog-box\";\nimport { createCloseHeading } from \"../../../../../components/ha-dialog\";\nimport \"../../../../../components/buttons/ha-progress-button\";\nimport \"../../../../../components/ha-button\";\nimport \"../../../../../components/ha-select\";\nimport \"../../../../../components/ha-list-item\";\nconst VALID_CHANNELS = [\"auto\", 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26];\nlet DialogZHAChangeChannel = _decorate([customElement(\"dialog-zha-change-channel\")], function (_initialize, _LitElement) {\n  class DialogZHAChangeChannel extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: DialogZHAChangeChannel,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_migrationInProgress\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_params\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_newChannel\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"showDialog\",\n      value: async function showDialog(params) {\n        this._params = params;\n        this._newChannel = \"auto\";\n      }\n    }, {\n      kind: \"method\",\n      key: \"closeDialog\",\n      value: function closeDialog() {\n        this._params = undefined;\n        this._newChannel = undefined;\n        fireEvent(this, \"dialog-closed\", {\n          dialog: this.localName\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this._params) {\n          return nothing;\n        }\n        return html`\n      <ha-dialog\n        open\n        scrimClickAction\n        escapeKeyAction\n        @closed=${this.closeDialog}\n        .heading=${createCloseHeading(this.hass, this.hass.localize(\"ui.panel.config.zha.change_channel_dialog.title\"))}\n      >\n        <p>\n          ${this.hass.localize(\"ui.panel.config.zha.change_channel_dialog.migration_warning\")}\n        </p>\n\n        <p>\n          <ha-select\n            .label=${this.hass.localize(\"ui.panel.config.zha.change_channel_dialog.new_channel\")}\n            fixedMenuPosition\n            naturalMenuWidth\n            @selected=${this._newChannelChosen}\n            @closed=${stopPropagation}\n            .value=${String(this._newChannel)}\n          >\n            ${VALID_CHANNELS.map(newChannel => html`<ha-list-item .value=${String(newChannel)}\n                  >${newChannel}</ha-list-item\n                >`)}\n          </ha-select>\n        </p>\n\n        <ha-progress-button\n          slot=\"primaryAction\"\n          .progress=${this._migrationInProgress}\n          .disabled=${this._migrationInProgress}\n          @click=${this._changeNetworkChannel}\n        >\n          ${this.hass.localize(\"ui.panel.config.zha.change_channel_dialog.change_channel\")}\n        </ha-progress-button>\n\n        <ha-button\n          slot=\"secondaryAction\"\n          @click=${this.closeDialog}\n          .disabled=${this._migrationInProgress}\n          >${this.hass.localize(\"ui.dialogs.generic.cancel\")}</ha-button\n        >\n      </ha-dialog>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_newChannelChosen\",\n      value: function _newChannelChosen(evt) {\n        const value = evt.target.value;\n        this._newChannel = value === \"auto\" ? \"auto\" : parseInt(value, 10);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_changeNetworkChannel\",\n      value: async function _changeNetworkChannel() {\n        try {\n          this._migrationInProgress = true;\n          await changeZHANetworkChannel(this.hass, this._newChannel);\n        } finally {\n          this._migrationInProgress = false;\n        }\n        await showAlertDialog(this, {\n          title: this.hass.localize(\"ui.panel.config.zha.change_channel_dialog.channel_has_been_changed\"),\n          text: this.hass.localize(\"ui.panel.config.zha.change_channel_dialog.devices_will_rejoin\")\n        });\n        this.closeDialog();\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["html","LitElement","nothing","customElement","property","state","fireEvent","stopPropagation","changeZHANetworkChannel","showAlertDialog","createCloseHeading","VALID_CHANNELS","DialogZHAChangeChannel","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","showDialog","params","_params","_newChannel","closeDialog","undefined","dialog","localName","render","hass","localize","_newChannelChosen","String","map","newChannel","_migrationInProgress","_changeNetworkChannel","evt","target","parseInt","title","text"],"sources":["/workspaces/frontend/src/panels/config/integrations/integration-panels/zha/dialog-zha-change-channel.ts"],"sourcesContent":["import { html, LitElement, TemplateResult, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { fireEvent } from \"../../../../../common/dom/fire_event\";\nimport { stopPropagation } from \"../../../../../common/dom/stop_propagation\";\nimport { HassDialog } from \"../../../../../dialogs/make-dialog-manager\";\nimport { changeZHANetworkChannel } from \"../../../../../data/zha\";\nimport { showAlertDialog } from \"../../../../../dialogs/generic/show-dialog-box\";\nimport { createCloseHeading } from \"../../../../../components/ha-dialog\";\nimport { HomeAssistant } from \"../../../../../types\";\nimport \"../../../../../components/buttons/ha-progress-button\";\nimport \"../../../../../components/ha-button\";\nimport \"../../../../../components/ha-select\";\nimport \"../../../../../components/ha-list-item\";\nimport { ZHAChangeChannelDialogParams } from \"./show-dialog-zha-change-channel\";\n\nconst VALID_CHANNELS = [\n  \"auto\",\n  11,\n  12,\n  13,\n  14,\n  15,\n  16,\n  17,\n  18,\n  19,\n  20,\n  21,\n  22,\n  23,\n  24,\n  25,\n  26,\n];\n\n@customElement(\"dialog-zha-change-channel\")\nclass DialogZHAChangeChannel extends LitElement implements HassDialog {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @state() private _migrationInProgress = false;\n\n  @state() private _params?: ZHAChangeChannelDialogParams;\n\n  @state() private _newChannel?: \"auto\" | number;\n\n  public async showDialog(params: ZHAChangeChannelDialogParams): Promise<void> {\n    this._params = params;\n    this._newChannel = \"auto\";\n  }\n\n  public closeDialog(): void {\n    this._params = undefined;\n    this._newChannel = undefined;\n    fireEvent(this, \"dialog-closed\", { dialog: this.localName });\n  }\n\n  protected render(): TemplateResult | typeof nothing {\n    if (!this._params) {\n      return nothing;\n    }\n\n    return html`\n      <ha-dialog\n        open\n        scrimClickAction\n        escapeKeyAction\n        @closed=${this.closeDialog}\n        .heading=${createCloseHeading(\n          this.hass,\n          this.hass.localize(\"ui.panel.config.zha.change_channel_dialog.title\")\n        )}\n      >\n        <p>\n          ${this.hass.localize(\n            \"ui.panel.config.zha.change_channel_dialog.migration_warning\"\n          )}\n        </p>\n\n        <p>\n          <ha-select\n            .label=${this.hass.localize(\n              \"ui.panel.config.zha.change_channel_dialog.new_channel\"\n            )}\n            fixedMenuPosition\n            naturalMenuWidth\n            @selected=${this._newChannelChosen}\n            @closed=${stopPropagation}\n            .value=${String(this._newChannel)}\n          >\n            ${VALID_CHANNELS.map(\n              (newChannel) =>\n                html`<ha-list-item .value=${String(newChannel)}\n                  >${newChannel}</ha-list-item\n                >`\n            )}\n          </ha-select>\n        </p>\n\n        <ha-progress-button\n          slot=\"primaryAction\"\n          .progress=${this._migrationInProgress}\n          .disabled=${this._migrationInProgress}\n          @click=${this._changeNetworkChannel}\n        >\n          ${this.hass.localize(\n            \"ui.panel.config.zha.change_channel_dialog.change_channel\"\n          )}\n        </ha-progress-button>\n\n        <ha-button\n          slot=\"secondaryAction\"\n          @click=${this.closeDialog}\n          .disabled=${this._migrationInProgress}\n          >${this.hass.localize(\"ui.dialogs.generic.cancel\")}</ha-button\n        >\n      </ha-dialog>\n    `;\n  }\n\n  private _newChannelChosen(evt: Event): void {\n    const value: string = (evt.target! as HTMLSelectElement).value;\n    this._newChannel = value === \"auto\" ? \"auto\" : parseInt(value, 10);\n  }\n\n  private async _changeNetworkChannel(): Promise<void> {\n    try {\n      this._migrationInProgress = true;\n      await changeZHANetworkChannel(this.hass, this._newChannel!);\n    } finally {\n      this._migrationInProgress = false;\n    }\n\n    await showAlertDialog(this, {\n      title: this.hass.localize(\n        \"ui.panel.config.zha.change_channel_dialog.channel_has_been_changed\"\n      ),\n      text: this.hass.localize(\n        \"ui.panel.config.zha.change_channel_dialog.devices_will_rejoin\"\n      ),\n    });\n\n    this.closeDialog();\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"dialog-zha-change-channel\": DialogZHAChangeChannel;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}