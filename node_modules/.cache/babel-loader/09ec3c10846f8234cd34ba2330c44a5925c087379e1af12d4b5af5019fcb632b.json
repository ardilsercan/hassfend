{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nconst mdiCircleOutline = \"M12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4A8,8 0 0,1 20,12A8,8 0 0,1 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z\";\nimport { css, html, LitElement } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { buttonLinkStyle } from \"../../resources/styles\";\nimport \"../ha-svg-icon\";\nexport let HaTimeline = _decorate([customElement(\"ha-timeline\")], function (_initialize, _LitElement) {\n  class HaTimeline extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaTimeline,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        reflect: true\n      })],\n      key: \"label\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        reflect: true\n      })],\n      key: \"raised\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        reflect: true,\n        type: Boolean\n      })],\n      key: \"notEnabled\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"lastItem\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: String\n      })],\n      key: \"icon\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"moreItems\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_showMore\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        return html`\n      <div class=\"timeline-start\">\n        ${this.label ? \"\" : html`\n              <ha-svg-icon .path=${this.icon || mdiCircleOutline}></ha-svg-icon>\n            `}\n        ${this.lastItem ? \"\" : html`<div class=\"line\"></div>`}\n      </div>\n      <div class=\"content\">\n        <slot></slot>\n        ${!this.moreItems ? \"\" : html`\n              <div>\n                ${this._showMore ||\n        // If there is only 1 item hidden behind \"show more\", just show it\n        // instead of showing the more info link. We're not animals.\n        this.moreItems.length === 1 ? this.moreItems : html`\n                      <button class=\"link\" @click=${this._handleShowMore}>\n                        Show ${this.moreItems.length} more items\n                      </button>\n                    `}\n              </div>\n            `}\n      </div>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleShowMore\",\n      value: function _handleShowMore() {\n        this._showMore = true;\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [css`\n        :host {\n          display: flex;\n          flex-direction: row;\n        }\n        :host(:not([lastItem])) {\n          min-height: 50px;\n        }\n        :host([label]) {\n          margin-top: -8px;\n          font-style: italic;\n          color: var(--timeline-label-color, var(--secondary-text-color));\n        }\n        .timeline-start {\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          margin-right: 8px;\n          margin-inline-end: 8px;\n          margin-inline-start: initial;\n          width: 24px;\n        }\n        :host([notEnabled]) ha-svg-icon {\n          opacity: 0.5;\n        }\n        ha-svg-icon {\n          color: var(\n            --timeline-ball-color,\n            var(--timeline-color, var(--secondary-text-color))\n          );\n          border-radius: 50%;\n        }\n        :host([raised]) ha-svg-icon {\n          transform: scale(1.3);\n        }\n        .line {\n          flex: 1;\n          width: 2px;\n          background-color: var(\n            --timeline-line-color,\n            var(--timeline-color, var(--secondary-text-color))\n          );\n          margin: 4px 0;\n        }\n        .content {\n          margin-top: 2px;\n        }\n        :host(:not([lastItem])) .content {\n          padding-bottom: 16px;\n        }\n        :host([label]) .content {\n          margin-top: 0;\n          padding-top: 6px;\n        }\n      `, buttonLinkStyle];\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","customElement","property","state","buttonLinkStyle","HaTimeline","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","type","Boolean","reflect","key","value","String","attribute","render","label","icon","mdiCircleOutline","lastItem","moreItems","_showMore","length","_handleShowMore","static","styles"],"sources":["/workspaces/frontend/src/components/trace/ha-timeline.ts"],"sourcesContent":["import { mdiCircleOutline } from \"@mdi/js\";\nimport { css, html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { buttonLinkStyle } from \"../../resources/styles\";\nimport \"../ha-svg-icon\";\n\n@customElement(\"ha-timeline\")\nexport class HaTimeline extends LitElement {\n  @property({ type: Boolean, reflect: true }) public label = false;\n\n  @property({ type: Boolean, reflect: true }) public raised = false;\n\n  @property({ reflect: true, type: Boolean }) notEnabled = false;\n\n  @property({ type: Boolean }) public lastItem = false;\n\n  @property({ type: String }) public icon?: string;\n\n  @property({ attribute: false }) public moreItems?: TemplateResult[];\n\n  @state() private _showMore = false;\n\n  protected render() {\n    return html`\n      <div class=\"timeline-start\">\n        ${this.label\n          ? \"\"\n          : html`\n              <ha-svg-icon .path=${this.icon || mdiCircleOutline}></ha-svg-icon>\n            `}\n        ${this.lastItem ? \"\" : html`<div class=\"line\"></div>`}\n      </div>\n      <div class=\"content\">\n        <slot></slot>\n        ${!this.moreItems\n          ? \"\"\n          : html`\n              <div>\n                ${this._showMore ||\n                // If there is only 1 item hidden behind \"show more\", just show it\n                // instead of showing the more info link. We're not animals.\n                this.moreItems.length === 1\n                  ? this.moreItems\n                  : html`\n                      <button class=\"link\" @click=${this._handleShowMore}>\n                        Show ${this.moreItems.length} more items\n                      </button>\n                    `}\n              </div>\n            `}\n      </div>\n    `;\n  }\n\n  private _handleShowMore() {\n    this._showMore = true;\n  }\n\n  static get styles() {\n    return [\n      css`\n        :host {\n          display: flex;\n          flex-direction: row;\n        }\n        :host(:not([lastItem])) {\n          min-height: 50px;\n        }\n        :host([label]) {\n          margin-top: -8px;\n          font-style: italic;\n          color: var(--timeline-label-color, var(--secondary-text-color));\n        }\n        .timeline-start {\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          margin-right: 8px;\n          margin-inline-end: 8px;\n          margin-inline-start: initial;\n          width: 24px;\n        }\n        :host([notEnabled]) ha-svg-icon {\n          opacity: 0.5;\n        }\n        ha-svg-icon {\n          color: var(\n            --timeline-ball-color,\n            var(--timeline-color, var(--secondary-text-color))\n          );\n          border-radius: 50%;\n        }\n        :host([raised]) ha-svg-icon {\n          transform: scale(1.3);\n        }\n        .line {\n          flex: 1;\n          width: 2px;\n          background-color: var(\n            --timeline-line-color,\n            var(--timeline-color, var(--secondary-text-color))\n          );\n          margin: 4px 0;\n        }\n        .content {\n          margin-top: 2px;\n        }\n        :host(:not([lastItem])) .content {\n          padding-bottom: 16px;\n        }\n        :host([label]) .content {\n          margin-top: 0;\n          padding-top: 6px;\n        }\n      `,\n      buttonLinkStyle,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-timeline\": HaTimeline;\n  }\n}\n"],"mappings":";;AACA,SAASA,GAAG,EAAEC,IAAI,EAAEC,UAAU,QAAwB,KAAK;AAC3D,SAASC,aAAa,EAAEC,QAAQ,EAAEC,KAAK,QAAQ,gBAAgB;AAC/D,SAASC,eAAe,QAAQ,wBAAwB;AACxD,OAAO,gBAAgB;AAEvB,WACaC,UAAU,GAAAC,SAAA,EADtBL,aAAa,CAAC,aAAa,CAAC,aAAAM,WAAA,EAAAC,WAAA;EAA7B,MACaH,UAAU,SAAAG,WAAA,CAAoB;IAAAC,YAAA,GAAAC,IAAA;MAAA,SAAAA,IAAA;MAAAH,WAAA;IAAA;EA+G3C;EAAC;IAAAI,CAAA,EA/GYN,UAAU;IAAAO,CAAA;MAAAC,IAAA;MAAAC,UAAA,GACpBZ,QAAQ,CAAC;QAAEa,IAAI,EAAEC,OAAO;QAAEC,OAAO,EAAE;MAAK,CAAC,CAAC;MAAAC,GAAA;MAAAC,MAAA;QAAA,OAAgB,KAAK;MAAA;IAAA;MAAAN,IAAA;MAAAC,UAAA,GAE/DZ,QAAQ,CAAC;QAAEa,IAAI,EAAEC,OAAO;QAAEC,OAAO,EAAE;MAAK,CAAC,CAAC;MAAAC,GAAA;MAAAC,MAAA;QAAA,OAAiB,KAAK;MAAA;IAAA;MAAAN,IAAA;MAAAC,UAAA,GAEhEZ,QAAQ,CAAC;QAAEe,OAAO,EAAE,IAAI;QAAEF,IAAI,EAAEC;MAAQ,CAAC,CAAC;MAAAE,GAAA;MAAAC,MAAA;QAAA,OAAc,KAAK;MAAA;IAAA;MAAAN,IAAA;MAAAC,UAAA,GAE7DZ,QAAQ,CAAC;QAAEa,IAAI,EAAEC;MAAQ,CAAC,CAAC;MAAAE,GAAA;MAAAC,MAAA;QAAA,OAAmB,KAAK;MAAA;IAAA;MAAAN,IAAA;MAAAC,UAAA,GAEnDZ,QAAQ,CAAC;QAAEa,IAAI,EAAEK;MAAO,CAAC,CAAC;MAAAF,GAAA;MAAAC,KAAA;IAAA;MAAAN,IAAA;MAAAC,UAAA,GAE1BZ,QAAQ,CAAC;QAAEmB,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAH,GAAA;MAAAC,KAAA;IAAA;MAAAN,IAAA;MAAAC,UAAA,GAE9BX,KAAK,CAAC,CAAC;MAAAe,GAAA;MAAAC,MAAA;QAAA,OAAqB,KAAK;MAAA;IAAA;MAAAN,IAAA;MAAAK,GAAA;MAAAC,KAAA,EAElC,SAAAG,OAAA,EAAmB;QACjB,OAAOvB,IAAK;AAChB;AACA,UAAU,IAAI,CAACwB,KAAK,GACR,EAAE,GACFxB,IAAK;AACjB,mCAAmC,IAAI,CAACyB,IAAI,IAAIC,gBAAiB;AACjE,aAAc;AACd,UAAU,IAAI,CAACC,QAAQ,GAAG,EAAE,GAAG3B,IAAK,0BAA0B;AAC9D;AACA;AACA;AACA,UAAU,CAAC,IAAI,CAAC4B,SAAS,GACb,EAAE,GACF5B,IAAK;AACjB;AACA,kBAAkB,IAAI,CAAC6B,SAAS;QAChB;QACA;QACA,IAAI,CAACD,SAAS,CAACE,MAAM,KAAK,CAAC,GACvB,IAAI,CAACF,SAAS,GACd5B,IAAK;AACzB,oDAAoD,IAAI,CAAC+B,eAAgB;AACzE,+BAA+B,IAAI,CAACH,SAAS,CAACE,MAAO;AACrD;AACA,qBAAsB;AACtB;AACA,aAAc;AACd;AACA,KAAK;MACH;IAAC;MAAAhB,IAAA;MAAAK,GAAA;MAAAC,KAAA,EAED,SAAAW,gBAAA,EAA0B;QACxB,IAAI,CAACF,SAAS,GAAG,IAAI;MACvB;IAAC;MAAAf,IAAA;MAAAkB,MAAA;MAAAb,GAAA;MAAAC,KAAA,EAED,SAAAa,OAAA,EAAoB;QAClB,OAAO,CACLlC,GAAI;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,EACDM,eAAe,CAChB;MACH;IAAC;EAAA;AAAA,GA9G6BJ,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}