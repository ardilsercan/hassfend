{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _regeneratorRuntime from \"@babel/runtime/helpers/regeneratorRuntime\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _decorate from \"@babel/runtime/helpers/decorate\";\nvar _templateObject, _templateObject2;\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.parse-int.js\";\nimport { html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { fireEvent } from \"../../../../../common/dom/fire_event\";\nimport { stopPropagation } from \"../../../../../common/dom/stop_propagation\";\nimport { changeZHANetworkChannel } from \"../../../../../data/zha\";\nimport { showAlertDialog } from \"../../../../../dialogs/generic/show-dialog-box\";\nimport { createCloseHeading } from \"../../../../../components/ha-dialog\";\nimport \"../../../../../components/buttons/ha-progress-button\";\nimport \"../../../../../components/ha-button\";\nimport \"../../../../../components/ha-select\";\nimport \"../../../../../components/ha-list-item\";\nvar VALID_CHANNELS = [\"auto\", 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26];\nvar DialogZHAChangeChannel = _decorate([customElement(\"dialog-zha-change-channel\")], function (_initialize, _LitElement) {\n  var DialogZHAChangeChannel = /*#__PURE__*/function (_LitElement2) {\n    _inherits(DialogZHAChangeChannel, _LitElement2);\n    function DialogZHAChangeChannel() {\n      var _this;\n      _classCallCheck(this, DialogZHAChangeChannel);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, DialogZHAChangeChannel, [].concat(args));\n      _initialize(_assertThisInitialized(_this));\n      return _this;\n    }\n    return _createClass(DialogZHAChangeChannel);\n  }(_LitElement);\n  return {\n    F: DialogZHAChangeChannel,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_migrationInProgress\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_params\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_newChannel\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"showDialog\",\n      value: function () {\n        var _showDialog = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(params) {\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                this._params = params;\n                this._newChannel = \"auto\";\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee, this);\n        }));\n        function showDialog(_x) {\n          return _showDialog.apply(this, arguments);\n        }\n        return showDialog;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"closeDialog\",\n      value: function closeDialog() {\n        this._params = undefined;\n        this._newChannel = undefined;\n        fireEvent(this, \"dialog-closed\", {\n          dialog: this.localName\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this._params) {\n          return nothing;\n        }\n        return html(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      <ha-dialog\\n        open\\n        scrimClickAction\\n        escapeKeyAction\\n        @closed=\", \"\\n        .heading=\", \"\\n      >\\n        <p>\\n          \", \"\\n        </p>\\n\\n        <p>\\n          <ha-select\\n            .label=\", \"\\n            fixedMenuPosition\\n            naturalMenuWidth\\n            @selected=\", \"\\n            @closed=\", \"\\n            .value=\", \"\\n          >\\n            \", \"\\n          </ha-select>\\n        </p>\\n\\n        <ha-progress-button\\n          slot=\\\"primaryAction\\\"\\n          .progress=\", \"\\n          .disabled=\", \"\\n          @click=\", \"\\n        >\\n          \", \"\\n        </ha-progress-button>\\n\\n        <ha-button\\n          slot=\\\"secondaryAction\\\"\\n          @click=\", \"\\n          .disabled=\", \"\\n          >\", \"</ha-button\\n        >\\n      </ha-dialog>\\n    \"])), this.closeDialog, createCloseHeading(this.hass, this.hass.localize(\"ui.panel.config.zha.change_channel_dialog.title\")), this.hass.localize(\"ui.panel.config.zha.change_channel_dialog.migration_warning\"), this.hass.localize(\"ui.panel.config.zha.change_channel_dialog.new_channel\"), this._newChannelChosen, stopPropagation, String(this._newChannel), VALID_CHANNELS.map(function (newChannel) {\n          return html(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"<ha-list-item .value=\", \"\\n                  >\", \"</ha-list-item\\n                >\"])), String(newChannel), newChannel);\n        }), this._migrationInProgress, this._migrationInProgress, this._changeNetworkChannel, this.hass.localize(\"ui.panel.config.zha.change_channel_dialog.change_channel\"), this.closeDialog, this._migrationInProgress, this.hass.localize(\"ui.dialogs.generic.cancel\"));\n      }\n    }, {\n      kind: \"method\",\n      key: \"_newChannelChosen\",\n      value: function _newChannelChosen(evt) {\n        var value = evt.target.value;\n        this._newChannel = value === \"auto\" ? \"auto\" : parseInt(value, 10);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_changeNetworkChannel\",\n      value: function () {\n        var _changeNetworkChannel2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n          return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n            while (1) switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                this._migrationInProgress = true;\n                _context2.next = 4;\n                return changeZHANetworkChannel(this.hass, this._newChannel);\n              case 4:\n                _context2.prev = 4;\n                this._migrationInProgress = false;\n                return _context2.finish(4);\n              case 7:\n                _context2.next = 9;\n                return showAlertDialog(this, {\n                  title: this.hass.localize(\"ui.panel.config.zha.change_channel_dialog.channel_has_been_changed\"),\n                  text: this.hass.localize(\"ui.panel.config.zha.change_channel_dialog.devices_will_rejoin\")\n                });\n              case 9:\n                this.closeDialog();\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }, _callee2, this, [[0,, 4, 7]]);\n        }));\n        function _changeNetworkChannel() {\n          return _changeNetworkChannel2.apply(this, arguments);\n        }\n        return _changeNetworkChannel;\n      }()\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["html","LitElement","nothing","customElement","property","state","fireEvent","stopPropagation","changeZHANetworkChannel","showAlertDialog","createCloseHeading","VALID_CHANNELS","DialogZHAChangeChannel","_decorate","_initialize","_LitElement","_LitElement2","_inherits","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_assertThisInitialized","_createClass","F","d","kind","decorators","attribute","key","value","_showDialog","_asyncToGenerator","_regeneratorRuntime","mark","_callee","params","wrap","_callee$","_context","prev","next","_params","_newChannel","stop","showDialog","_x","apply","closeDialog","undefined","dialog","localName","render","_templateObject","_taggedTemplateLiteral","hass","localize","_newChannelChosen","String","map","newChannel","_templateObject2","_migrationInProgress","_changeNetworkChannel","evt","target","parseInt","_changeNetworkChannel2","_callee2","_callee2$","_context2","finish","title","text"],"sources":["/workspaces/frontend/src/panels/config/integrations/integration-panels/zha/dialog-zha-change-channel.ts"],"sourcesContent":["import { html, LitElement, TemplateResult, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { fireEvent } from \"../../../../../common/dom/fire_event\";\nimport { stopPropagation } from \"../../../../../common/dom/stop_propagation\";\nimport { HassDialog } from \"../../../../../dialogs/make-dialog-manager\";\nimport { changeZHANetworkChannel } from \"../../../../../data/zha\";\nimport { showAlertDialog } from \"../../../../../dialogs/generic/show-dialog-box\";\nimport { createCloseHeading } from \"../../../../../components/ha-dialog\";\nimport { HomeAssistant } from \"../../../../../types\";\nimport \"../../../../../components/buttons/ha-progress-button\";\nimport \"../../../../../components/ha-button\";\nimport \"../../../../../components/ha-select\";\nimport \"../../../../../components/ha-list-item\";\nimport { ZHAChangeChannelDialogParams } from \"./show-dialog-zha-change-channel\";\n\nconst VALID_CHANNELS = [\n  \"auto\",\n  11,\n  12,\n  13,\n  14,\n  15,\n  16,\n  17,\n  18,\n  19,\n  20,\n  21,\n  22,\n  23,\n  24,\n  25,\n  26,\n];\n\n@customElement(\"dialog-zha-change-channel\")\nclass DialogZHAChangeChannel extends LitElement implements HassDialog {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @state() private _migrationInProgress = false;\n\n  @state() private _params?: ZHAChangeChannelDialogParams;\n\n  @state() private _newChannel?: \"auto\" | number;\n\n  public async showDialog(params: ZHAChangeChannelDialogParams): Promise<void> {\n    this._params = params;\n    this._newChannel = \"auto\";\n  }\n\n  public closeDialog(): void {\n    this._params = undefined;\n    this._newChannel = undefined;\n    fireEvent(this, \"dialog-closed\", { dialog: this.localName });\n  }\n\n  protected render(): TemplateResult | typeof nothing {\n    if (!this._params) {\n      return nothing;\n    }\n\n    return html`\n      <ha-dialog\n        open\n        scrimClickAction\n        escapeKeyAction\n        @closed=${this.closeDialog}\n        .heading=${createCloseHeading(\n          this.hass,\n          this.hass.localize(\"ui.panel.config.zha.change_channel_dialog.title\")\n        )}\n      >\n        <p>\n          ${this.hass.localize(\n            \"ui.panel.config.zha.change_channel_dialog.migration_warning\"\n          )}\n        </p>\n\n        <p>\n          <ha-select\n            .label=${this.hass.localize(\n              \"ui.panel.config.zha.change_channel_dialog.new_channel\"\n            )}\n            fixedMenuPosition\n            naturalMenuWidth\n            @selected=${this._newChannelChosen}\n            @closed=${stopPropagation}\n            .value=${String(this._newChannel)}\n          >\n            ${VALID_CHANNELS.map(\n              (newChannel) =>\n                html`<ha-list-item .value=${String(newChannel)}\n                  >${newChannel}</ha-list-item\n                >`\n            )}\n          </ha-select>\n        </p>\n\n        <ha-progress-button\n          slot=\"primaryAction\"\n          .progress=${this._migrationInProgress}\n          .disabled=${this._migrationInProgress}\n          @click=${this._changeNetworkChannel}\n        >\n          ${this.hass.localize(\n            \"ui.panel.config.zha.change_channel_dialog.change_channel\"\n          )}\n        </ha-progress-button>\n\n        <ha-button\n          slot=\"secondaryAction\"\n          @click=${this.closeDialog}\n          .disabled=${this._migrationInProgress}\n          >${this.hass.localize(\"ui.dialogs.generic.cancel\")}</ha-button\n        >\n      </ha-dialog>\n    `;\n  }\n\n  private _newChannelChosen(evt: Event): void {\n    const value: string = (evt.target! as HTMLSelectElement).value;\n    this._newChannel = value === \"auto\" ? \"auto\" : parseInt(value, 10);\n  }\n\n  private async _changeNetworkChannel(): Promise<void> {\n    try {\n      this._migrationInProgress = true;\n      await changeZHANetworkChannel(this.hass, this._newChannel!);\n    } finally {\n      this._migrationInProgress = false;\n    }\n\n    await showAlertDialog(this, {\n      title: this.hass.localize(\n        \"ui.panel.config.zha.change_channel_dialog.channel_has_been_changed\"\n      ),\n      text: this.hass.localize(\n        \"ui.panel.config.zha.change_channel_dialog.devices_will_rejoin\"\n      ),\n    });\n\n    this.closeDialog();\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"dialog-zha-change-channel\": DialogZHAChangeChannel;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}