{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.match.js\";\nimport { createPlugin } from '@fullcalendar/core/index.js';\nimport { DateTime, Duration } from 'luxon';\nimport { CalendarImpl, NamedTimeZoneImpl } from '@fullcalendar/core/internal.js';\nfunction toLuxonDateTime(date, calendar) {\n  if (!(calendar instanceof CalendarImpl)) {\n    throw new Error('must supply a CalendarApi instance');\n  }\n  var _calendar$getCurrentD = calendar.getCurrentData(),\n    dateEnv = _calendar$getCurrentD.dateEnv;\n  return DateTime.fromJSDate(date, {\n    zone: dateEnv.timeZone,\n    locale: dateEnv.locale.codes[0]\n  });\n}\nfunction toLuxonDuration(duration, calendar) {\n  if (!(calendar instanceof CalendarImpl)) {\n    throw new Error('must supply a CalendarApi instance');\n  }\n  var _calendar$getCurrentD2 = calendar.getCurrentData(),\n    dateEnv = _calendar$getCurrentD2.dateEnv;\n  return Duration.fromObject(duration, {\n    locale: dateEnv.locale.codes[0]\n  });\n}\n// Internal Utils\nfunction luxonToArray(datetime) {\n  return [datetime.year, datetime.month - 1, datetime.day, datetime.hour, datetime.minute, datetime.second, datetime.millisecond];\n}\nfunction arrayToLuxon(arr, timeZone, locale) {\n  return DateTime.fromObject({\n    year: arr[0],\n    month: arr[1] + 1,\n    day: arr[2],\n    hour: arr[3],\n    minute: arr[4],\n    second: arr[5],\n    millisecond: arr[6]\n  }, {\n    locale: locale,\n    zone: timeZone\n  });\n}\nvar LuxonNamedTimeZone = /*#__PURE__*/function (_NamedTimeZoneImpl) {\n  _inherits(LuxonNamedTimeZone, _NamedTimeZoneImpl);\n  function LuxonNamedTimeZone() {\n    _classCallCheck(this, LuxonNamedTimeZone);\n    return _callSuper(this, LuxonNamedTimeZone, arguments);\n  }\n  _createClass(LuxonNamedTimeZone, [{\n    key: \"offsetForArray\",\n    value: function offsetForArray(a) {\n      return arrayToLuxon(a, this.timeZoneName).offset;\n    }\n  }, {\n    key: \"timestampToArray\",\n    value: function timestampToArray(ms) {\n      return luxonToArray(DateTime.fromMillis(ms, {\n        zone: this.timeZoneName\n      }));\n    }\n  }]);\n  return LuxonNamedTimeZone;\n}(NamedTimeZoneImpl);\nfunction formatWithCmdStr(cmdStr, arg) {\n  var cmd = parseCmdStr(cmdStr);\n  if (arg.end) {\n    var start = arrayToLuxon(arg.start.array, arg.timeZone, arg.localeCodes[0]);\n    var end = arrayToLuxon(arg.end.array, arg.timeZone, arg.localeCodes[0]);\n    return formatRange(cmd, start.toFormat.bind(start), end.toFormat.bind(end), arg.defaultSeparator);\n  }\n  return arrayToLuxon(arg.date.array, arg.timeZone, arg.localeCodes[0]).toFormat(cmd.whole);\n}\nfunction parseCmdStr(cmdStr) {\n  var parts = cmdStr.match(/^(.*?)\\{(.*)\\}(.*)$/); // TODO: lookbehinds for escape characters\n  if (parts) {\n    var middle = parseCmdStr(parts[2]);\n    return {\n      head: parts[1],\n      middle: middle,\n      tail: parts[3],\n      whole: parts[1] + middle.whole + parts[3]\n    };\n  }\n  return {\n    head: null,\n    middle: null,\n    tail: null,\n    whole: cmdStr\n  };\n}\nfunction formatRange(cmd, formatStart, formatEnd, separator) {\n  if (cmd.middle) {\n    var startHead = formatStart(cmd.head);\n    var startMiddle = formatRange(cmd.middle, formatStart, formatEnd, separator);\n    var startTail = formatStart(cmd.tail);\n    var endHead = formatEnd(cmd.head);\n    var endMiddle = formatRange(cmd.middle, formatStart, formatEnd, separator);\n    var endTail = formatEnd(cmd.tail);\n    if (startHead === endHead && startTail === endTail) {\n      return startHead + (startMiddle === endMiddle ? startMiddle : startMiddle + separator + endMiddle) + startTail;\n    }\n  }\n  var startWhole = formatStart(cmd.whole);\n  var endWhole = formatEnd(cmd.whole);\n  if (startWhole === endWhole) {\n    return startWhole;\n  }\n  return startWhole + separator + endWhole;\n}\nvar index = createPlugin({\n  name: '@fullcalendar/luxon3',\n  cmdFormatter: formatWithCmdStr,\n  namedTimeZonedImpl: LuxonNamedTimeZone\n});\nexport { index as default, toLuxonDateTime, toLuxonDuration };","map":{"version":3,"names":["createPlugin","DateTime","Duration","CalendarImpl","NamedTimeZoneImpl","toLuxonDateTime","date","calendar","Error","_calendar$getCurrentD","getCurrentData","dateEnv","fromJSDate","zone","timeZone","locale","codes","toLuxonDuration","duration","_calendar$getCurrentD2","fromObject","luxonToArray","datetime","year","month","day","hour","minute","second","millisecond","arrayToLuxon","arr","LuxonNamedTimeZone","_NamedTimeZoneImpl","_inherits","_classCallCheck","_callSuper","arguments","_createClass","key","value","offsetForArray","a","timeZoneName","offset","timestampToArray","ms","fromMillis","formatWithCmdStr","cmdStr","arg","cmd","parseCmdStr","end","start","array","localeCodes","formatRange","toFormat","bind","defaultSeparator","whole","parts","match","middle","head","tail","formatStart","formatEnd","separator","startHead","startMiddle","startTail","endHead","endMiddle","endTail","startWhole","endWhole","index","name","cmdFormatter","namedTimeZonedImpl","default"],"sources":["/workspaces/frontend/node_modules/@fullcalendar/luxon3/index.js"],"sourcesContent":["import { createPlugin } from '@fullcalendar/core/index.js';\nimport { DateTime, Duration } from 'luxon';\nimport { CalendarImpl, NamedTimeZoneImpl } from '@fullcalendar/core/internal.js';\n\nfunction toLuxonDateTime(date, calendar) {\n    if (!(calendar instanceof CalendarImpl)) {\n        throw new Error('must supply a CalendarApi instance');\n    }\n    let { dateEnv } = calendar.getCurrentData();\n    return DateTime.fromJSDate(date, {\n        zone: dateEnv.timeZone,\n        locale: dateEnv.locale.codes[0],\n    });\n}\nfunction toLuxonDuration(duration, calendar) {\n    if (!(calendar instanceof CalendarImpl)) {\n        throw new Error('must supply a CalendarApi instance');\n    }\n    let { dateEnv } = calendar.getCurrentData();\n    return Duration.fromObject(duration, {\n        locale: dateEnv.locale.codes[0],\n    });\n}\n// Internal Utils\nfunction luxonToArray(datetime) {\n    return [\n        datetime.year,\n        datetime.month - 1,\n        datetime.day,\n        datetime.hour,\n        datetime.minute,\n        datetime.second,\n        datetime.millisecond,\n    ];\n}\nfunction arrayToLuxon(arr, timeZone, locale) {\n    return DateTime.fromObject({\n        year: arr[0],\n        month: arr[1] + 1,\n        day: arr[2],\n        hour: arr[3],\n        minute: arr[4],\n        second: arr[5],\n        millisecond: arr[6],\n    }, {\n        locale,\n        zone: timeZone,\n    });\n}\n\nclass LuxonNamedTimeZone extends NamedTimeZoneImpl {\n    offsetForArray(a) {\n        return arrayToLuxon(a, this.timeZoneName).offset;\n    }\n    timestampToArray(ms) {\n        return luxonToArray(DateTime.fromMillis(ms, {\n            zone: this.timeZoneName,\n        }));\n    }\n}\n\nfunction formatWithCmdStr(cmdStr, arg) {\n    let cmd = parseCmdStr(cmdStr);\n    if (arg.end) {\n        let start = arrayToLuxon(arg.start.array, arg.timeZone, arg.localeCodes[0]);\n        let end = arrayToLuxon(arg.end.array, arg.timeZone, arg.localeCodes[0]);\n        return formatRange(cmd, start.toFormat.bind(start), end.toFormat.bind(end), arg.defaultSeparator);\n    }\n    return arrayToLuxon(arg.date.array, arg.timeZone, arg.localeCodes[0]).toFormat(cmd.whole);\n}\nfunction parseCmdStr(cmdStr) {\n    let parts = cmdStr.match(/^(.*?)\\{(.*)\\}(.*)$/); // TODO: lookbehinds for escape characters\n    if (parts) {\n        let middle = parseCmdStr(parts[2]);\n        return {\n            head: parts[1],\n            middle,\n            tail: parts[3],\n            whole: parts[1] + middle.whole + parts[3],\n        };\n    }\n    return {\n        head: null,\n        middle: null,\n        tail: null,\n        whole: cmdStr,\n    };\n}\nfunction formatRange(cmd, formatStart, formatEnd, separator) {\n    if (cmd.middle) {\n        let startHead = formatStart(cmd.head);\n        let startMiddle = formatRange(cmd.middle, formatStart, formatEnd, separator);\n        let startTail = formatStart(cmd.tail);\n        let endHead = formatEnd(cmd.head);\n        let endMiddle = formatRange(cmd.middle, formatStart, formatEnd, separator);\n        let endTail = formatEnd(cmd.tail);\n        if (startHead === endHead && startTail === endTail) {\n            return startHead +\n                (startMiddle === endMiddle ? startMiddle : startMiddle + separator + endMiddle) +\n                startTail;\n        }\n    }\n    let startWhole = formatStart(cmd.whole);\n    let endWhole = formatEnd(cmd.whole);\n    if (startWhole === endWhole) {\n        return startWhole;\n    }\n    return startWhole + separator + endWhole;\n}\n\nvar index = createPlugin({\n    name: '@fullcalendar/luxon3',\n    cmdFormatter: formatWithCmdStr,\n    namedTimeZonedImpl: LuxonNamedTimeZone,\n});\n\nexport { index as default, toLuxonDateTime, toLuxonDuration };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}