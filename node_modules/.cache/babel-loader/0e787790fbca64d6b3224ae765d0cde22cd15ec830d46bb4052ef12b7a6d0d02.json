{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nconst mdiServerNetwork = \"M13,19H14A1,1 0 0,1 15,20H22V22H15A1,1 0 0,1 14,23H10A1,1 0 0,1 9,22H2V20H9A1,1 0 0,1 10,19H11V17H4A1,1 0 0,1 3,16V12A1,1 0 0,1 4,11H20A1,1 0 0,1 21,12V16A1,1 0 0,1 20,17H13V19M4,3H20A1,1 0 0,1 21,4V8A1,1 0 0,1 20,9H4A1,1 0 0,1 3,8V4A1,1 0 0,1 4,3M9,7H10V5H9V7M9,15H10V13H9V15M5,5V7H7V5H5M5,13V15H7V13H5Z\";\nconst mdiMathLog = \"M18 7C16.9 7 16 7.9 16 9V15C16 16.1 16.9 17 18 17H20C21.1 17 22 16.1 22 15V11H20V15H18V9H22V7H18M2 7V17H8V15H4V7H2M11 7C9.9 7 9 7.9 9 9V15C9 16.1 9.9 17 11 17H13C14.1 17 15 16.1 15 15V9C15 7.9 14.1 7 13 7H11M11 9H13V15H11V9Z\";\nimport { customElement, property } from \"lit/decorators\";\nimport { HassRouterPage } from \"../../../../../layouts/hass-router-page\";\nimport { navigate } from \"../../../../../common/navigate\";\nimport { getConfigEntries } from \"../../../../../data/config_entries\";\nexport const configTabs = [{\n  translationKey: \"ui.panel.config.zwave_js.navigation.network\",\n  path: `/config/zwave_js/dashboard`,\n  iconPath: mdiServerNetwork\n}, {\n  translationKey: \"ui.panel.config.zwave_js.navigation.logs\",\n  path: `/config/zwave_js/logs`,\n  iconPath: mdiMathLog\n}];\nlet ZWaveJSConfigRouter = _decorate([customElement(\"zwave_js-config-router\")], function (_initialize, _HassRouterPage) {\n  class ZWaveJSConfigRouter extends _HassRouterPage {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: ZWaveJSConfigRouter,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"isWide\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"narrow\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_configEntry\",\n      value() {\n        return new URLSearchParams(window.location.search).get(\"config_entry\");\n      }\n    }, {\n      kind: \"field\",\n      key: \"routerOptions\",\n      value() {\n        return {\n          defaultPage: \"dashboard\",\n          showLoading: true,\n          routes: {\n            dashboard: {\n              tag: \"zwave_js-config-dashboard\",\n              load: () => import(\"./zwave_js-config-dashboard\")\n            },\n            add: {\n              tag: \"zwave_js-add-node\",\n              load: () => import(\"./zwave_js-add-node\")\n            },\n            node_config: {\n              tag: \"zwave_js-node-config\",\n              load: () => import(\"./zwave_js-node-config\")\n            },\n            logs: {\n              tag: \"zwave_js-logs\",\n              load: () => import(\"./zwave_js-logs\")\n            },\n            provisioned: {\n              tag: \"zwave_js-provisioned\",\n              load: () => import(\"./zwave_js-provisioned\")\n            }\n          },\n          initialLoad: () => this._fetchConfigEntries()\n        };\n      }\n    }, {\n      kind: \"method\",\n      key: \"updatePageEl\",\n      value: function updatePageEl(el) {\n        el.route = this.routeTail;\n        el.hass = this.hass;\n        el.isWide = this.isWide;\n        el.narrow = this.narrow;\n        el.configEntryId = this._configEntry;\n        const searchParams = new URLSearchParams(window.location.search);\n        if (this._configEntry && !searchParams.has(\"config_entry\")) {\n          searchParams.append(\"config_entry\", this._configEntry);\n          navigate(`${this.routeTail.prefix}${this.routeTail.path}?${searchParams.toString()}`, {\n            replace: true\n          });\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_fetchConfigEntries\",\n      value: async function _fetchConfigEntries() {\n        if (this._configEntry) {\n          return;\n        }\n        const entries = await getConfigEntries(this.hass, {\n          domain: \"zwave_js\"\n        });\n        if (entries.length) {\n          this._configEntry = entries[0].entry_id;\n        }\n      }\n    }]\n  };\n}, HassRouterPage);","map":{"version":3,"names":["customElement","property","HassRouterPage","navigate","getConfigEntries","configTabs","translationKey","path","iconPath","mdiServerNetwork","mdiMathLog","ZWaveJSConfigRouter","_decorate","_initialize","_HassRouterPage","constructor","args","F","d","kind","decorators","attribute","key","value","type","Boolean","URLSearchParams","window","location","search","get","defaultPage","showLoading","routes","dashboard","tag","load","add","node_config","logs","provisioned","initialLoad","_fetchConfigEntries","updatePageEl","el","route","routeTail","hass","isWide","narrow","configEntryId","_configEntry","searchParams","has","append","prefix","toString","replace","entries","domain","length","entry_id"],"sources":["/workspaces/frontend/src/panels/config/integrations/integration-panels/zwave_js/zwave_js-config-router.ts"],"sourcesContent":["import { mdiServerNetwork, mdiMathLog } from \"@mdi/js\";\nimport { customElement, property } from \"lit/decorators\";\nimport {\n  HassRouterPage,\n  RouterOptions,\n} from \"../../../../../layouts/hass-router-page\";\nimport { HomeAssistant } from \"../../../../../types\";\nimport { navigate } from \"../../../../../common/navigate\";\nimport { PageNavigation } from \"../../../../../layouts/hass-tabs-subpage\";\nimport { getConfigEntries } from \"../../../../../data/config_entries\";\n\nexport const configTabs: PageNavigation[] = [\n  {\n    translationKey: \"ui.panel.config.zwave_js.navigation.network\",\n    path: `/config/zwave_js/dashboard`,\n    iconPath: mdiServerNetwork,\n  },\n  {\n    translationKey: \"ui.panel.config.zwave_js.navigation.logs\",\n    path: `/config/zwave_js/logs`,\n    iconPath: mdiMathLog,\n  },\n];\n\n@customElement(\"zwave_js-config-router\")\nclass ZWaveJSConfigRouter extends HassRouterPage {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ type: Boolean }) public isWide = false;\n\n  @property({ type: Boolean }) public narrow = false;\n\n  private _configEntry = new URLSearchParams(window.location.search).get(\n    \"config_entry\"\n  );\n\n  protected routerOptions: RouterOptions = {\n    defaultPage: \"dashboard\",\n    showLoading: true,\n    routes: {\n      dashboard: {\n        tag: \"zwave_js-config-dashboard\",\n        load: () => import(\"./zwave_js-config-dashboard\"),\n      },\n      add: {\n        tag: \"zwave_js-add-node\",\n        load: () => import(\"./zwave_js-add-node\"),\n      },\n      node_config: {\n        tag: \"zwave_js-node-config\",\n        load: () => import(\"./zwave_js-node-config\"),\n      },\n      logs: {\n        tag: \"zwave_js-logs\",\n        load: () => import(\"./zwave_js-logs\"),\n      },\n      provisioned: {\n        tag: \"zwave_js-provisioned\",\n        load: () => import(\"./zwave_js-provisioned\"),\n      },\n    },\n    initialLoad: () => this._fetchConfigEntries(),\n  };\n\n  protected updatePageEl(el): void {\n    el.route = this.routeTail;\n    el.hass = this.hass;\n    el.isWide = this.isWide;\n    el.narrow = this.narrow;\n    el.configEntryId = this._configEntry;\n\n    const searchParams = new URLSearchParams(window.location.search);\n    if (this._configEntry && !searchParams.has(\"config_entry\")) {\n      searchParams.append(\"config_entry\", this._configEntry);\n      navigate(\n        `${this.routeTail.prefix}${\n          this.routeTail.path\n        }?${searchParams.toString()}`,\n        { replace: true }\n      );\n    }\n  }\n\n  private async _fetchConfigEntries() {\n    if (this._configEntry) {\n      return;\n    }\n    const entries = await getConfigEntries(this.hass, {\n      domain: \"zwave_js\",\n    });\n    if (entries.length) {\n      this._configEntry = entries[0].entry_id;\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"zwave_js-config-router\": ZWaveJSConfigRouter;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}