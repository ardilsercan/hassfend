{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport { html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { ensureArray } from \"../../common/array/ensure-array\";\nimport { getDeviceIntegrationLookup } from \"../../data/device_registry\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { fetchEntitySourcesWithCache } from \"../../data/entity_sources\";\nimport { filterSelectorDevices, filterSelectorEntities } from \"../../data/selector\";\nimport \"../ha-area-picker\";\nimport \"../ha-areas-picker\";\nexport let HaAreaSelector = _decorate([customElement(\"ha-selector-area\")], function (_initialize, _LitElement) {\n  class HaAreaSelector extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaAreaSelector,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"selector\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"value\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"label\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"helper\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"disabled\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"required\",\n      value() {\n        return true;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_entitySources\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_deviceIntegrationLookup\",\n      value() {\n        return memoizeOne(getDeviceIntegrationLookup);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_hasIntegration\",\n      value: function _hasIntegration(selector) {\n        var _selector$area, _selector$area2;\n        return ((_selector$area = selector.area) === null || _selector$area === void 0 ? void 0 : _selector$area.entity) && ensureArray(selector.area.entity).some(filter => filter.integration) || ((_selector$area2 = selector.area) === null || _selector$area2 === void 0 ? void 0 : _selector$area2.device) && ensureArray(selector.area.device).some(device => device.integration);\n      }\n    }, {\n      kind: \"method\",\n      key: \"willUpdate\",\n      value: function willUpdate(changedProperties) {\n        if (changedProperties.has(\"selector\") && this.value !== undefined) {\n          var _this$selector$area, _this$selector$area2;\n          if ((_this$selector$area = this.selector.area) !== null && _this$selector$area !== void 0 && _this$selector$area.multiple && !Array.isArray(this.value)) {\n            this.value = [this.value];\n            fireEvent(this, \"value-changed\", {\n              value: this.value\n            });\n          } else if (!((_this$selector$area2 = this.selector.area) !== null && _this$selector$area2 !== void 0 && _this$selector$area2.multiple) && Array.isArray(this.value)) {\n            this.value = this.value[0];\n            fireEvent(this, \"value-changed\", {\n              value: this.value\n            });\n          }\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"updated\",\n      value: function updated(changedProperties) {\n        if (changedProperties.has(\"selector\") && this._hasIntegration(this.selector) && !this._entitySources) {\n          fetchEntitySourcesWithCache(this.hass).then(sources => {\n            this._entitySources = sources;\n          });\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var _this$selector$area3;\n        if (this._hasIntegration(this.selector) && !this._entitySources) {\n          return nothing;\n        }\n        if (!((_this$selector$area3 = this.selector.area) !== null && _this$selector$area3 !== void 0 && _this$selector$area3.multiple)) {\n          return html`\n        <ha-area-picker\n          .hass=${this.hass}\n          .value=${this.value}\n          .label=${this.label}\n          .helper=${this.helper}\n          no-add\n          .deviceFilter=${this._filterDevices}\n          .entityFilter=${this._filterEntities}\n          .disabled=${this.disabled}\n          .required=${this.required}\n        ></ha-area-picker>\n      `;\n        }\n        return html`\n      <ha-areas-picker\n        .hass=${this.hass}\n        .value=${this.value}\n        .helper=${this.helper}\n        .pickAreaLabel=${this.label}\n        no-add\n        .deviceFilter=${this._filterDevices}\n        .entityFilter=${this._filterEntities}\n        .disabled=${this.disabled}\n        .required=${this.required}\n      ></ha-areas-picker>\n    `;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_filterEntities\",\n      value() {\n        return entity => {\n          var _this$selector$area4;\n          if (!((_this$selector$area4 = this.selector.area) !== null && _this$selector$area4 !== void 0 && _this$selector$area4.entity)) {\n            return true;\n          }\n          return ensureArray(this.selector.area.entity).some(filter => filterSelectorEntities(filter, entity, this._entitySources));\n        };\n      }\n    }, {\n      kind: \"field\",\n      key: \"_filterDevices\",\n      value() {\n        return device => {\n          var _this$selector$area5;\n          if (!((_this$selector$area5 = this.selector.area) !== null && _this$selector$area5 !== void 0 && _this$selector$area5.device)) {\n            return true;\n          }\n          const deviceIntegrations = this._entitySources ? this._deviceIntegrationLookup(this._entitySources, Object.values(this.hass.entities)) : undefined;\n          return ensureArray(this.selector.area.device).some(filter => filterSelectorDevices(filter, device, deviceIntegrations));\n        };\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["html","LitElement","nothing","customElement","property","state","memoizeOne","ensureArray","getDeviceIntegrationLookup","fireEvent","fetchEntitySourcesWithCache","filterSelectorDevices","filterSelectorEntities","HaAreaSelector","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","type","Boolean","_hasIntegration","selector","_selector$area","_selector$area2","area","entity","some","filter","integration","device","willUpdate","changedProperties","has","undefined","_this$selector$area","_this$selector$area2","multiple","Array","isArray","updated","_entitySources","hass","then","sources","render","_this$selector$area3","label","helper","_filterDevices","_filterEntities","disabled","required","_this$selector$area4","_this$selector$area5","deviceIntegrations","_deviceIntegrationLookup","Object","values","entities"],"sources":["/workspaces/frontend/src/components/ha-selector/ha-selector-area.ts"],"sourcesContent":["import { HassEntity } from \"home-assistant-js-websocket\";\nimport { html, LitElement, PropertyValues, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { ensureArray } from \"../../common/array/ensure-array\";\nimport type { DeviceRegistryEntry } from \"../../data/device_registry\";\nimport { getDeviceIntegrationLookup } from \"../../data/device_registry\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport {\n  EntitySources,\n  fetchEntitySourcesWithCache,\n} from \"../../data/entity_sources\";\nimport type { AreaSelector } from \"../../data/selector\";\nimport {\n  filterSelectorDevices,\n  filterSelectorEntities,\n} from \"../../data/selector\";\nimport { HomeAssistant } from \"../../types\";\nimport \"../ha-area-picker\";\nimport \"../ha-areas-picker\";\n\n@customElement(\"ha-selector-area\")\nexport class HaAreaSelector extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public selector!: AreaSelector;\n\n  @property() public value?: any;\n\n  @property() public label?: string;\n\n  @property() public helper?: string;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @property({ type: Boolean }) public required = true;\n\n  @state() private _entitySources?: EntitySources;\n\n  private _deviceIntegrationLookup = memoizeOne(getDeviceIntegrationLookup);\n\n  private _hasIntegration(selector: AreaSelector) {\n    return (\n      (selector.area?.entity &&\n        ensureArray(selector.area.entity).some(\n          (filter) => filter.integration\n        )) ||\n      (selector.area?.device &&\n        ensureArray(selector.area.device).some((device) => device.integration))\n    );\n  }\n\n  protected willUpdate(changedProperties: PropertyValues): void {\n    if (changedProperties.has(\"selector\") && this.value !== undefined) {\n      if (this.selector.area?.multiple && !Array.isArray(this.value)) {\n        this.value = [this.value];\n        fireEvent(this, \"value-changed\", { value: this.value });\n      } else if (!this.selector.area?.multiple && Array.isArray(this.value)) {\n        this.value = this.value[0];\n        fireEvent(this, \"value-changed\", { value: this.value });\n      }\n    }\n  }\n\n  protected updated(changedProperties: PropertyValues): void {\n    if (\n      changedProperties.has(\"selector\") &&\n      this._hasIntegration(this.selector) &&\n      !this._entitySources\n    ) {\n      fetchEntitySourcesWithCache(this.hass).then((sources) => {\n        this._entitySources = sources;\n      });\n    }\n  }\n\n  protected render() {\n    if (this._hasIntegration(this.selector) && !this._entitySources) {\n      return nothing;\n    }\n\n    if (!this.selector.area?.multiple) {\n      return html`\n        <ha-area-picker\n          .hass=${this.hass}\n          .value=${this.value}\n          .label=${this.label}\n          .helper=${this.helper}\n          no-add\n          .deviceFilter=${this._filterDevices}\n          .entityFilter=${this._filterEntities}\n          .disabled=${this.disabled}\n          .required=${this.required}\n        ></ha-area-picker>\n      `;\n    }\n\n    return html`\n      <ha-areas-picker\n        .hass=${this.hass}\n        .value=${this.value}\n        .helper=${this.helper}\n        .pickAreaLabel=${this.label}\n        no-add\n        .deviceFilter=${this._filterDevices}\n        .entityFilter=${this._filterEntities}\n        .disabled=${this.disabled}\n        .required=${this.required}\n      ></ha-areas-picker>\n    `;\n  }\n\n  private _filterEntities = (entity: HassEntity): boolean => {\n    if (!this.selector.area?.entity) {\n      return true;\n    }\n\n    return ensureArray(this.selector.area.entity).some((filter) =>\n      filterSelectorEntities(filter, entity, this._entitySources)\n    );\n  };\n\n  private _filterDevices = (device: DeviceRegistryEntry): boolean => {\n    if (!this.selector.area?.device) {\n      return true;\n    }\n\n    const deviceIntegrations = this._entitySources\n      ? this._deviceIntegrationLookup(\n          this._entitySources,\n          Object.values(this.hass.entities)\n        )\n      : undefined;\n\n    return ensureArray(this.selector.area.device).some((filter) =>\n      filterSelectorDevices(filter, device, deviceIntegrations)\n    );\n  };\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-selector-area\": HaAreaSelector;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}