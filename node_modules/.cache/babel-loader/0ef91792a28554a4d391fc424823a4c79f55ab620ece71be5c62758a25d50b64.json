{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport \"@material/mwc-list/mwc-list\";\nconst mdiClose = \"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\";\nconst mdiConsoleLine = \"M13,19V16H21V19H13M8.5,13L2.47,7H6.71L11.67,11.95C12.25,12.54 12.25,13.5 11.67,14.07L6.74,19H2.5L8.5,13Z\";\nconst mdiEarth = \"M17.9,17.39C17.64,16.59 16.89,16 16,16H15V13A1,1 0 0,0 14,12H8V10H10A1,1 0 0,0 11,9V7H13A2,2 0 0,0 15,5V4.59C17.93,5.77 20,8.64 20,12C20,14.08 19.2,15.97 17.9,17.39M11,19.93C7.05,19.44 4,16.08 4,12C4,11.38 4.08,10.78 4.21,10.21L9,15V16A2,2 0 0,0 11,18M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z\";\nconst mdiMagnify = \"M9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.44,13.73L14.71,14H15.5L20.5,19L19,20.5L14,15.5V14.71L13.73,14.44C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3M9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5Z\";\nconst mdiReload = \"M2 12C2 16.97 6.03 21 11 21C13.39 21 15.68 20.06 17.4 18.4L15.9 16.9C14.63 18.25 12.86 19 11 19C4.76 19 1.64 11.46 6.05 7.05C10.46 2.64 18 5.77 18 12H15L19 16H19.1L23 12H20C20 7.03 15.97 3 11 3C6.03 3 2 7.03 2 12Z\";\nconst mdiServerNetwork = \"M13,19H14A1,1 0 0,1 15,20H22V22H15A1,1 0 0,1 14,23H10A1,1 0 0,1 9,22H2V20H9A1,1 0 0,1 10,19H11V17H4A1,1 0 0,1 3,16V12A1,1 0 0,1 4,11H20A1,1 0 0,1 21,12V16A1,1 0 0,1 20,17H13V19M4,3H20A1,1 0 0,1 21,4V8A1,1 0 0,1 20,9H4A1,1 0 0,1 3,8V4A1,1 0 0,1 4,3M9,7H10V5H9V7M9,15H10V13H9V15M5,5V7H7V5H5M5,13V15H7V13H5Z\";\nimport { LitElement, css, html, nothing } from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators\";\nimport { ifDefined } from \"lit/directives/if-defined\";\nimport { styleMap } from \"lit/directives/style-map\";\nimport memoizeOne from \"memoize-one\";\nimport { canShowPage } from \"../../common/config/can_show_page\";\nimport { componentsWithService } from \"../../common/config/components_with_service\";\nimport { isComponentLoaded } from \"../../common/config/is_component_loaded\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { computeStateName } from \"../../common/entity/compute_state_name\";\nimport { navigate } from \"../../common/navigate\";\nimport { caseInsensitiveStringCompare } from \"../../common/string/compare\";\nimport { fuzzyFilterSort } from \"../../common/string/filter/sequence-matching\";\nimport { debounce } from \"../../common/util/debounce\";\nimport \"../../components/ha-circular-progress\";\nimport \"../../components/ha-icon-button\";\nimport \"../../components/ha-label\";\nimport \"../../components/ha-list-item\";\nimport \"../../components/ha-textfield\";\nimport { fetchHassioAddonsInfo } from \"../../data/hassio/addon\";\nimport { domainToName } from \"../../data/integration\";\nimport { getPanelNameTranslationKey } from \"../../data/panel\";\nimport { configSections } from \"../../panels/config/ha-panel-config\";\nimport { haStyleDialog, haStyleScrollbar } from \"../../resources/styles\";\nimport { loadVirtualizer } from \"../../resources/virtualizer\";\nimport { showConfirmationDialog } from \"../generic/show-dialog-box\";\nconst isCommandItem = item => item.categoryKey !== undefined;\nexport let QuickBar = _decorate([customElement(\"ha-quick-bar\")], function (_initialize, _LitElement) {\n  class QuickBar extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: QuickBar,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_commandItems\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_entityItems\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_filter\",\n      value() {\n        return \"\";\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_search\",\n      value() {\n        return \"\";\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_open\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_commandMode\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_opened\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_narrow\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_hint\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [query(\"ha-textfield\", false)],\n      key: \"_filterInputField\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_focusSet\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_focusListElement\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"showDialog\",\n      value: async function showDialog(params) {\n        this._commandMode = params.commandMode || this._toggleIfAlreadyOpened();\n        this._hint = params.hint;\n        this._narrow = matchMedia(\"all and (max-width: 450px), all and (max-height: 500px)\").matches;\n        this._initializeItemsIfNeeded();\n        this._open = true;\n      }\n    }, {\n      kind: \"method\",\n      key: \"closeDialog\",\n      value: function closeDialog() {\n        this._open = false;\n        this._opened = false;\n        this._focusSet = false;\n        this._filter = \"\";\n        this._search = \"\";\n        this._entityItems = undefined;\n        this._commandItems = undefined;\n        fireEvent(this, \"dialog-closed\", {\n          dialog: this.localName\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"willUpdate\",\n      value: function willUpdate() {\n        if (!this.hasUpdated) {\n          loadVirtualizer();\n        }\n      }\n    }, {\n      kind: \"field\",\n      key: \"_getItems\",\n      value() {\n        return memoizeOne((commandMode, commandItems, entityItems, filter) => {\n          const items = commandMode ? commandItems : entityItems;\n          if (items && filter && filter !== \" \") {\n            return this._filterItems(items, filter);\n          }\n          return items;\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this._open) {\n          return nothing;\n        }\n        const items = this._getItems(this._commandMode, this._commandItems, this._entityItems, this._filter);\n        return html`\n      <ha-dialog\n        .heading=${this.hass.localize(\"ui.dialogs.quick-bar.title\")}\n        open\n        @opened=${this._handleOpened}\n        @closed=${this.closeDialog}\n        hideActions\n      >\n        <div slot=\"heading\" class=\"heading\">\n          <ha-textfield\n            dialogInitialFocus\n            .placeholder=${this.hass.localize(\"ui.dialogs.quick-bar.filter_placeholder\")}\n            aria-label=${this.hass.localize(\"ui.dialogs.quick-bar.filter_placeholder\")}\n            .value=${this._commandMode ? `>${this._search}` : this._search}\n            icon\n            .iconTrailing=${this._search !== undefined || this._narrow}\n            @input=${this._handleSearchChange}\n            @keydown=${this._handleInputKeyDown}\n            @focus=${this._setFocusFirstListItem}\n          >\n            ${this._commandMode ? html`\n                  <ha-svg-icon\n                    slot=\"leadingIcon\"\n                    class=\"prefix\"\n                    .path=${mdiConsoleLine}\n                  ></ha-svg-icon>\n                ` : html`\n                  <ha-svg-icon\n                    slot=\"leadingIcon\"\n                    class=\"prefix\"\n                    .path=${mdiMagnify}\n                  ></ha-svg-icon>\n                `}\n            ${this._search || this._narrow ? html`\n                  <div slot=\"trailingIcon\">\n                    ${this._search && html`<ha-icon-button\n                      @click=${this._clearSearch}\n                      .label=${this.hass.localize(\"ui.common.clear\")}\n                      .path=${mdiClose}\n                    ></ha-icon-button>`}\n                    ${this._narrow ? html`\n                          <mwc-button\n                            .label=${this.hass.localize(\"ui.common.close\")}\n                            @click=${this.closeDialog}\n                          ></mwc-button>\n                        ` : \"\"}\n                  </div>\n                ` : \"\"}\n          </ha-textfield>\n        </div>\n        ${!items ? html`<ha-circular-progress\n              size=\"small\"\n              indeterminate\n            ></ha-circular-progress>` : items.length === 0 ? html`\n                <div class=\"nothing-found\">\n                  ${this.hass.localize(\"ui.dialogs.quick-bar.nothing_found\")}\n                </div>\n              ` : html`\n                <mwc-list>\n                  ${this._opened ? html`<lit-virtualizer\n                        scroller\n                        @keydown=${this._handleListItemKeyDown}\n                        @rangechange=${this._handleRangeChanged}\n                        @click=${this._handleItemClick}\n                        class=\"ha-scrollbar\"\n                        style=${styleMap({\n          height: this._narrow ? \"calc(100vh - 56px)\" : `${Math.min(items.length * (this._commandMode ? 56 : 72) + 26, 500)}px`\n        })}\n                        .items=${items}\n                        .renderItem=${this._renderItem}\n                      >\n                      </lit-virtualizer>` : \"\"}\n                </mwc-list>\n              `}\n        ${this._hint ? html`<ha-tip .hass=${this.hass}>${this._hint}</ha-tip>` : \"\"}\n      </ha-dialog>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_initializeItemsIfNeeded\",\n      value: async function _initializeItemsIfNeeded() {\n        if (this._commandMode) {\n          this._commandItems = this._commandItems || (await this._generateCommandItems());\n        } else {\n          this._entityItems = this._entityItems || this._generateEntityItems();\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleOpened\",\n      value: function _handleOpened() {\n        this._opened = true;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleRangeChanged\",\n      value: async function _handleRangeChanged(e) {\n        if (this._focusSet) {\n          return;\n        }\n        if (e.firstVisible > -1) {\n          this._focusSet = true;\n          await this.updateComplete;\n          this._setFocusFirstListItem();\n        }\n      }\n    }, {\n      kind: \"field\",\n      key: \"_renderItem\",\n      value() {\n        return (item, index) => {\n          if (!item) {\n            return nothing;\n          }\n          return isCommandItem(item) ? this._renderCommandItem(item, index) : this._renderEntityItem(item, index);\n        };\n      }\n    }, {\n      kind: \"method\",\n      key: \"_renderEntityItem\",\n      value: function _renderEntityItem(item, index) {\n        return html`\n      <ha-list-item\n        .twoline=${Boolean(item.altText)}\n        .item=${item}\n        index=${ifDefined(index)}\n        graphic=\"icon\"\n      >\n        ${item.iconPath ? html`\n              <ha-svg-icon\n                .path=${item.iconPath}\n                class=\"entity\"\n                slot=\"graphic\"\n              ></ha-svg-icon>\n            ` : html`<span slot=\"graphic\">${item.icon}</span>`}\n        <span>${item.primaryText}</span>\n        ${item.altText ? html`\n              <span slot=\"secondary\" class=\"item-text secondary\"\n                >${item.altText}</span\n              >\n            ` : nothing}\n      </ha-list-item>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_renderCommandItem\",\n      value: function _renderCommandItem(item, index) {\n        return html`\n      <ha-list-item\n        .item=${item}\n        index=${ifDefined(index)}\n        class=\"command-item\"\n        hasMeta\n      >\n        <span>\n          <ha-label\n            .label=${item.categoryText}\n            class=\"command-category ${item.categoryKey}\"\n          >\n            ${item.iconPath ? html`\n                  <ha-svg-icon .path=${item.iconPath} slot=\"icon\"></ha-svg-icon>\n                ` : nothing}\n            ${item.categoryText}\n          </ha-label>\n        </span>\n\n        <span class=\"command-text\">${item.primaryText}</span>\n      </ha-list-item>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"processItemAndCloseDialog\",\n      value: async function processItemAndCloseDialog(item, index) {\n        this._addSpinnerToCommandItem(index);\n        await item.action();\n        this.closeDialog();\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleInputKeyDown\",\n      value: function _handleInputKeyDown(ev) {\n        if (ev.code === \"Enter\") {\n          const firstItem = this._getItemAtIndex(0);\n          if (!firstItem || firstItem.style.display === \"none\") {\n            return;\n          }\n          this.processItemAndCloseDialog(firstItem.item, 0);\n        } else if (ev.code === \"ArrowDown\") {\n          var _this$_getItemAtIndex;\n          ev.preventDefault();\n          (_this$_getItemAtIndex = this._getItemAtIndex(0)) === null || _this$_getItemAtIndex === void 0 || _this$_getItemAtIndex.focus();\n          this._focusSet = true;\n          this._focusListElement = this._getItemAtIndex(0);\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_getItemAtIndex\",\n      value: function _getItemAtIndex(index) {\n        return this.renderRoot.querySelector(`ha-list-item[index=\"${index}\"]`);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_addSpinnerToCommandItem\",\n      value: function _addSpinnerToCommandItem(index) {\n        var _this$_getItemAtIndex2;\n        const spinner = document.createElement(\"ha-circular-progress\");\n        spinner.size = \"small\";\n        spinner.slot = \"meta\";\n        spinner.indeterminate = true;\n        (_this$_getItemAtIndex2 = this._getItemAtIndex(index)) === null || _this$_getItemAtIndex2 === void 0 || _this$_getItemAtIndex2.appendChild(spinner);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleSearchChange\",\n      value: function _handleSearchChange(ev) {\n        const newFilter = ev.currentTarget.value;\n        const oldCommandMode = this._commandMode;\n        const oldSearch = this._search;\n        let newCommandMode;\n        let newSearch;\n        if (newFilter.startsWith(\">\")) {\n          newCommandMode = true;\n          newSearch = newFilter.substring(1);\n        } else {\n          newCommandMode = false;\n          newSearch = newFilter;\n        }\n        if (oldCommandMode === newCommandMode && oldSearch === newSearch) {\n          return;\n        }\n        this._commandMode = newCommandMode;\n        this._search = newSearch;\n        if (this._hint) {\n          this._hint = undefined;\n        }\n        if (oldCommandMode !== this._commandMode) {\n          this._focusSet = false;\n          this._initializeItemsIfNeeded();\n          this._filter = this._search;\n        } else {\n          if (this._focusSet && this._focusListElement) {\n            this._focusSet = false;\n            // @ts-ignore\n            this._focusListElement.rippleHandlers.endFocus();\n          }\n          this._debouncedSetFilter(this._search);\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_clearSearch\",\n      value: function _clearSearch() {\n        this._search = \"\";\n        this._filter = \"\";\n      }\n    }, {\n      kind: \"field\",\n      key: \"_debouncedSetFilter\",\n      value() {\n        return debounce(filter => {\n          this._filter = filter;\n        }, 100);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_setFocusFirstListItem\",\n      value: function _setFocusFirstListItem() {\n        var _this$_getItemAtIndex3;\n        // @ts-ignore\n        (_this$_getItemAtIndex3 = this._getItemAtIndex(0)) === null || _this$_getItemAtIndex3 === void 0 || _this$_getItemAtIndex3.rippleHandlers.startFocus();\n        this._focusListElement = this._getItemAtIndex(0);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleListItemKeyDown\",\n      value: function _handleListItemKeyDown(ev) {\n        const isSingleCharacter = ev.key.length === 1;\n        const index = ev.target.getAttribute(\"index\");\n        const isFirstListItem = index === \"0\";\n        this._focusListElement = ev.target;\n        if (ev.key === \"ArrowDown\") {\n          var _this$_getItemAtIndex4;\n          (_this$_getItemAtIndex4 = this._getItemAtIndex(Number(index) + 1)) === null || _this$_getItemAtIndex4 === void 0 || _this$_getItemAtIndex4.focus();\n        }\n        if (ev.key === \"ArrowUp\") {\n          if (isFirstListItem) {\n            var _this$_filterInputFie;\n            (_this$_filterInputFie = this._filterInputField) === null || _this$_filterInputFie === void 0 || _this$_filterInputFie.focus();\n          } else {\n            var _this$_getItemAtIndex5;\n            (_this$_getItemAtIndex5 = this._getItemAtIndex(Number(index) - 1)) === null || _this$_getItemAtIndex5 === void 0 || _this$_getItemAtIndex5.focus();\n          }\n        }\n        if (ev.key === \"Enter\" || ev.key === \" \") {\n          this.processItemAndCloseDialog(ev.target.item, Number(ev.target.getAttribute(\"index\")));\n        }\n        if (ev.key === \"Backspace\" || isSingleCharacter) {\n          var _this$_filterInputFie2;\n          ev.currentTarget.scrollTop = 0;\n          (_this$_filterInputFie2 = this._filterInputField) === null || _this$_filterInputFie2 === void 0 || _this$_filterInputFie2.focus();\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleItemClick\",\n      value: function _handleItemClick(ev) {\n        const listItem = ev.target.closest(\"ha-list-item\");\n        this.processItemAndCloseDialog(listItem.item, Number(listItem.getAttribute(\"index\")));\n      }\n    }, {\n      kind: \"method\",\n      key: \"_generateEntityItems\",\n      value: function _generateEntityItems() {\n        return Object.keys(this.hass.states).map(entityId => {\n          const entityState = this.hass.states[entityId];\n          const entityItem = {\n            primaryText: computeStateName(entityState),\n            altText: entityId,\n            icon: html`\n            <ha-state-icon\n              .hass=${this.hass}\n              .stateObj=${entityState}\n            ></ha-state-icon>\n          `,\n            action: () => fireEvent(this, \"hass-more-info\", {\n              entityId\n            })\n          };\n          return {\n            ...entityItem,\n            strings: [entityItem.primaryText, entityItem.altText]\n          };\n        }).sort((a, b) => caseInsensitiveStringCompare(a.primaryText, b.primaryText, this.hass.locale.language));\n      }\n    }, {\n      kind: \"method\",\n      key: \"_generateCommandItems\",\n      value: async function _generateCommandItems() {\n        return [...(await this._generateReloadCommands()), ...this._generateServerControlCommands(), ...(await this._generateNavigationCommands())].sort((a, b) => caseInsensitiveStringCompare(a.strings.join(\" \"), b.strings.join(\" \"), this.hass.locale.language));\n      }\n    }, {\n      kind: \"method\",\n      key: \"_generateReloadCommands\",\n      value: async function _generateReloadCommands() {\n        // Get all domains that have a direct \"reload\" service\n        const reloadableDomains = componentsWithService(this.hass, \"reload\");\n        const localize = await this.hass.loadBackendTranslation(\"title\", reloadableDomains);\n        const commands = reloadableDomains.map(domain => ({\n          primaryText: this.hass.localize(`ui.dialogs.quick-bar.commands.reload.${domain}`) || this.hass.localize(\"ui.dialogs.quick-bar.commands.reload.reload\", {\n            domain: domainToName(localize, domain)\n          }),\n          action: () => this.hass.callService(domain, \"reload\"),\n          iconPath: mdiReload,\n          categoryText: this.hass.localize(`ui.dialogs.quick-bar.commands.types.reload`)\n        }));\n\n        // Add \"frontend.reload_themes\"\n        commands.push({\n          primaryText: this.hass.localize(\"ui.dialogs.quick-bar.commands.reload.themes\"),\n          action: () => this.hass.callService(\"frontend\", \"reload_themes\"),\n          iconPath: mdiReload,\n          categoryText: this.hass.localize(\"ui.dialogs.quick-bar.commands.types.reload\")\n        });\n\n        // Add \"homeassistant.reload_core_config\"\n        commands.push({\n          primaryText: this.hass.localize(\"ui.dialogs.quick-bar.commands.reload.core\"),\n          action: () => this.hass.callService(\"homeassistant\", \"reload_core_config\"),\n          iconPath: mdiReload,\n          categoryText: this.hass.localize(\"ui.dialogs.quick-bar.commands.types.reload\")\n        });\n\n        // Add \"homeassistant.reload_all\"\n        commands.push({\n          primaryText: this.hass.localize(\"ui.dialogs.quick-bar.commands.reload.all\"),\n          action: () => this.hass.callService(\"homeassistant\", \"reload_all\"),\n          iconPath: mdiReload,\n          categoryText: this.hass.localize(\"ui.dialogs.quick-bar.commands.types.reload\")\n        });\n        return commands.map(command => ({\n          ...command,\n          categoryKey: \"reload\",\n          strings: [`${command.categoryText} ${command.primaryText}`]\n        }));\n      }\n    }, {\n      kind: \"method\",\n      key: \"_generateServerControlCommands\",\n      value: function _generateServerControlCommands() {\n        const serverActions = [\"restart\", \"stop\"];\n        return serverActions.map(action => {\n          const categoryKey = \"server_control\";\n          const item = {\n            primaryText: this.hass.localize(\"ui.dialogs.quick-bar.commands.server_control.perform_action\", {\n              action: this.hass.localize(`ui.dialogs.quick-bar.commands.server_control.${action}`)\n            }),\n            iconPath: mdiServerNetwork,\n            categoryText: this.hass.localize(`ui.dialogs.quick-bar.commands.types.${categoryKey}`),\n            categoryKey,\n            action: async () => {\n              const confirmed = await showConfirmationDialog(this, {\n                title: this.hass.localize(`ui.dialogs.restart.${action}.confirm_title`),\n                text: this.hass.localize(`ui.dialogs.restart.${action}.confirm_description`),\n                confirmText: this.hass.localize(`ui.dialogs.restart.${action}.confirm_action`),\n                destructive: true\n              });\n              if (!confirmed) {\n                return;\n              }\n              this.hass.callService(\"homeassistant\", action);\n            }\n          };\n          return {\n            ...item,\n            strings: [`${item.categoryText} ${item.primaryText}`]\n          };\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_generateNavigationCommands\",\n      value: async function _generateNavigationCommands() {\n        const panelItems = this._generateNavigationPanelCommands();\n        const sectionItems = this._generateNavigationConfigSectionCommands();\n        const supervisorItems = [];\n        if (isComponentLoaded(this.hass, \"hassio\")) {\n          const addonsInfo = await fetchHassioAddonsInfo(this.hass);\n          supervisorItems.push({\n            path: \"/hassio/store\",\n            primaryText: this.hass.localize(\"ui.dialogs.quick-bar.commands.navigation.addon_store\")\n          });\n          supervisorItems.push({\n            path: \"/hassio/dashboard\",\n            primaryText: this.hass.localize(\"ui.dialogs.quick-bar.commands.navigation.addon_dashboard\")\n          });\n          for (const addon of addonsInfo.addons.filter(a => a.version)) {\n            supervisorItems.push({\n              path: `/hassio/addon/${addon.slug}`,\n              primaryText: this.hass.localize(\"ui.dialogs.quick-bar.commands.navigation.addon_info\", {\n                addon: addon.name\n              })\n            });\n          }\n        }\n        return this._finalizeNavigationCommands([...panelItems, ...sectionItems, ...supervisorItems]);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_generateNavigationPanelCommands\",\n      value: function _generateNavigationPanelCommands() {\n        return Object.keys(this.hass.panels).filter(panelKey => panelKey !== \"_my_redirect\").map(panelKey => {\n          const panel = this.hass.panels[panelKey];\n          const translationKey = getPanelNameTranslationKey(panel);\n          const primaryText = this.hass.localize(translationKey) || panel.title || panel.url_path;\n          return {\n            primaryText,\n            path: `/${panel.url_path}`\n          };\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_generateNavigationConfigSectionCommands\",\n      value: function _generateNavigationConfigSectionCommands() {\n        const items = [];\n        for (const sectionKey of Object.keys(configSections)) {\n          for (const page of configSections[sectionKey]) {\n            if (!canShowPage(this.hass, page)) {\n              continue;\n            }\n            const info = this._getNavigationInfoFromConfig(page);\n            if (!info) {\n              continue;\n            }\n            // Add to list, but only if we do not already have an entry for the same path and component\n            if (items.some(e => e.path === info.path)) {\n              continue;\n            }\n            items.push(info);\n          }\n        }\n        return items;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_getNavigationInfoFromConfig\",\n      value: function _getNavigationInfoFromConfig(page) {\n        const path = page.path.substring(1);\n        let name = path.substring(path.indexOf(\"/\") + 1);\n        name = name.indexOf(\"/\") > -1 ? name.substring(0, name.indexOf(\"/\")) : name;\n        const caption = name && this.hass.localize(`ui.dialogs.quick-bar.commands.navigation.${name}`) ||\n        // @ts-expect-error\n        page.translationKey && this.hass.localize(page.translationKey);\n        if (caption) {\n          return {\n            ...page,\n            primaryText: caption\n          };\n        }\n        return undefined;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_finalizeNavigationCommands\",\n      value: function _finalizeNavigationCommands(items) {\n        return items.map(item => {\n          const categoryKey = \"navigation\";\n          const navItem = {\n            ...item,\n            iconPath: mdiEarth,\n            categoryText: this.hass.localize(`ui.dialogs.quick-bar.commands.types.${categoryKey}`),\n            action: () => navigate(item.path)\n          };\n          return {\n            ...navItem,\n            strings: [`${navItem.categoryText} ${navItem.primaryText}`],\n            categoryKey\n          };\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_toggleIfAlreadyOpened\",\n      value: function _toggleIfAlreadyOpened() {\n        return this._opened ? !this._commandMode : false;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_filterItems\",\n      value() {\n        return memoizeOne((items, filter) => fuzzyFilterSort(filter.trimLeft(), items));\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [haStyleScrollbar, haStyleDialog, css`\n        mwc-list {\n          position: relative;\n          --mdc-list-vertical-padding: 0;\n        }\n        .heading {\n          display: flex;\n          align-items: center;\n          --mdc-theme-primary: var(--primary-text-color);\n        }\n\n        .heading ha-textfield {\n          flex-grow: 1;\n        }\n\n        ha-dialog {\n          --dialog-z-index: 9;\n          --dialog-content-padding: 0;\n        }\n\n        @media (min-width: 800px) {\n          ha-dialog {\n            --mdc-dialog-max-width: 800px;\n            --mdc-dialog-min-width: 500px;\n            --dialog-surface-position: fixed;\n            --dialog-surface-top: 40px;\n            --mdc-dialog-max-height: calc(100% - 72px);\n          }\n        }\n\n        @media all and (max-width: 450px), all and (max-height: 500px) {\n          ha-textfield {\n            --mdc-shape-small: 0;\n          }\n        }\n\n        @media all and (max-width: 450px), all and (max-height: 690px) {\n          .hint {\n            display: none;\n          }\n        }\n\n        ha-svg-icon.prefix {\n          color: var(--primary-text-color);\n        }\n\n        ha-textfield ha-icon-button {\n          --mdc-icon-button-size: 24px;\n          color: var(--primary-text-color);\n        }\n\n        .command-category {\n          --ha-label-icon-color: #585858;\n          --ha-label-text-color: #212121;\n        }\n\n        .command-category.reload {\n          --ha-label-background-color: #cddc39;\n        }\n\n        .command-category.navigation {\n          --ha-label-background-color: var(--light-primary-color);\n        }\n\n        .command-category.server_control {\n          --ha-label-background-color: var(--warning-color);\n        }\n\n        span.command-text {\n          margin-left: 8px;\n          margin-inline-start: 8px;\n          margin-inline-end: initial;\n          direction: var(--direction);\n        }\n\n        ha-list-item {\n          width: 100%;\n          --mdc-list-item-graphic-margin: 20px;\n        }\n\n        ha-list-item.command-item {\n          text-transform: capitalize;\n        }\n\n        ha-tip {\n          padding: 20px;\n        }\n\n        .nothing-found {\n          padding: 16px 0px;\n          text-align: center;\n        }\n\n        div[slot=\"trailingIcon\"] {\n          display: flex;\n          align-items: center;\n        }\n\n        lit-virtualizer {\n          contain: size layout !important;\n        }\n      `];\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["mdiClose","mdiConsoleLine","mdiEarth","mdiMagnify","mdiReload","mdiServerNetwork","LitElement","css","html","nothing","customElement","property","query","state","ifDefined","styleMap","memoizeOne","canShowPage","componentsWithService","isComponentLoaded","fireEvent","computeStateName","navigate","caseInsensitiveStringCompare","fuzzyFilterSort","debounce","fetchHassioAddonsInfo","domainToName","getPanelNameTranslationKey","configSections","haStyleDialog","haStyleScrollbar","loadVirtualizer","showConfirmationDialog","isCommandItem","item","categoryKey","undefined","QuickBar","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","showDialog","params","_commandMode","commandMode","_toggleIfAlreadyOpened","_hint","hint","_narrow","matchMedia","matches","_initializeItemsIfNeeded","_open","closeDialog","_opened","_focusSet","_filter","_search","_entityItems","_commandItems","dialog","localName","willUpdate","hasUpdated","commandItems","entityItems","filter","items","_filterItems","render","_getItems","hass","localize","_handleOpened","_handleSearchChange","_handleInputKeyDown","_setFocusFirstListItem","_clearSearch","length","_handleListItemKeyDown","_handleRangeChanged","_handleItemClick","height","Math","min","_renderItem","_generateCommandItems","_generateEntityItems","e","firstVisible","updateComplete","index","_renderCommandItem","_renderEntityItem","Boolean","altText","iconPath","icon","primaryText","categoryText","processItemAndCloseDialog","_addSpinnerToCommandItem","action","ev","code","firstItem","_getItemAtIndex","style","display","_this$_getItemAtIndex","preventDefault","focus","_focusListElement","renderRoot","querySelector","_this$_getItemAtIndex2","spinner","document","createElement","size","slot","indeterminate","appendChild","newFilter","currentTarget","oldCommandMode","oldSearch","newCommandMode","newSearch","startsWith","substring","rippleHandlers","endFocus","_debouncedSetFilter","_this$_getItemAtIndex3","startFocus","isSingleCharacter","target","getAttribute","isFirstListItem","_this$_getItemAtIndex4","Number","_this$_filterInputFie","_filterInputField","_this$_getItemAtIndex5","_this$_filterInputFie2","scrollTop","listItem","closest","Object","keys","states","map","entityId","entityState","entityItem","strings","sort","a","b","locale","language","_generateReloadCommands","_generateServerControlCommands","_generateNavigationCommands","join","reloadableDomains","loadBackendTranslation","commands","domain","callService","push","command","serverActions","confirmed","title","text","confirmText","destructive","panelItems","_generateNavigationPanelCommands","sectionItems","_generateNavigationConfigSectionCommands","supervisorItems","addonsInfo","path","addon","addons","version","slug","name","_finalizeNavigationCommands","panels","panelKey","panel","translationKey","url_path","sectionKey","page","info","_getNavigationInfoFromConfig","some","indexOf","caption","navItem","trimLeft","static","styles"],"sources":["/Users/sercanardil/Desktop/frontend/src/dialogs/quick-bar/ha-quick-bar.ts"],"sourcesContent":["import \"@material/mwc-list/mwc-list\";\nimport type { ListItem } from \"@material/mwc-list/mwc-list-item\";\nimport {\n  mdiClose,\n  mdiConsoleLine,\n  mdiEarth,\n  mdiMagnify,\n  mdiReload,\n  mdiServerNetwork,\n} from \"@mdi/js\";\nimport { LitElement, TemplateResult, css, html, nothing } from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators\";\nimport { ifDefined } from \"lit/directives/if-defined\";\nimport { styleMap } from \"lit/directives/style-map\";\nimport memoizeOne from \"memoize-one\";\nimport { canShowPage } from \"../../common/config/can_show_page\";\nimport { componentsWithService } from \"../../common/config/components_with_service\";\nimport { isComponentLoaded } from \"../../common/config/is_component_loaded\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { computeStateName } from \"../../common/entity/compute_state_name\";\nimport { navigate } from \"../../common/navigate\";\nimport { caseInsensitiveStringCompare } from \"../../common/string/compare\";\nimport {\n  ScorableTextItem,\n  fuzzyFilterSort,\n} from \"../../common/string/filter/sequence-matching\";\nimport { debounce } from \"../../common/util/debounce\";\nimport \"../../components/ha-circular-progress\";\nimport \"../../components/ha-icon-button\";\nimport \"../../components/ha-label\";\nimport \"../../components/ha-list-item\";\nimport \"../../components/ha-textfield\";\nimport { fetchHassioAddonsInfo } from \"../../data/hassio/addon\";\nimport { domainToName } from \"../../data/integration\";\nimport { getPanelNameTranslationKey } from \"../../data/panel\";\nimport { PageNavigation } from \"../../layouts/hass-tabs-subpage\";\nimport { configSections } from \"../../panels/config/ha-panel-config\";\nimport { haStyleDialog, haStyleScrollbar } from \"../../resources/styles\";\nimport { loadVirtualizer } from \"../../resources/virtualizer\";\nimport { HomeAssistant } from \"../../types\";\nimport { showConfirmationDialog } from \"../generic/show-dialog-box\";\nimport { QuickBarParams } from \"./show-dialog-quick-bar\";\n\ninterface QuickBarItem extends ScorableTextItem {\n  primaryText: string;\n  iconPath?: string;\n  action(data?: any): void;\n}\n\ninterface CommandItem extends QuickBarItem {\n  categoryKey: \"reload\" | \"navigation\" | \"server_control\";\n  categoryText: string;\n}\n\ninterface EntityItem extends QuickBarItem {\n  altText: string;\n  icon?: TemplateResult;\n}\n\nconst isCommandItem = (item: QuickBarItem): item is CommandItem =>\n  (item as CommandItem).categoryKey !== undefined;\n\ninterface QuickBarNavigationItem extends CommandItem {\n  path: string;\n}\n\ntype NavigationInfo = PageNavigation & Pick<QuickBarItem, \"primaryText\">;\n\ntype BaseNavigationCommand = Pick<\n  QuickBarNavigationItem,\n  \"primaryText\" | \"path\"\n>;\n@customElement(\"ha-quick-bar\")\nexport class QuickBar extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @state() private _commandItems?: CommandItem[];\n\n  @state() private _entityItems?: EntityItem[];\n\n  @state() private _filter = \"\";\n\n  @state() private _search = \"\";\n\n  @state() private _open = false;\n\n  @state() private _commandMode = false;\n\n  @state() private _opened = false;\n\n  @state() private _narrow = false;\n\n  @state() private _hint?: string;\n\n  @query(\"ha-textfield\", false) private _filterInputField?: HTMLElement;\n\n  private _focusSet = false;\n\n  private _focusListElement?: ListItem | null;\n\n  public async showDialog(params: QuickBarParams) {\n    this._commandMode = params.commandMode || this._toggleIfAlreadyOpened();\n    this._hint = params.hint;\n    this._narrow = matchMedia(\n      \"all and (max-width: 450px), all and (max-height: 500px)\"\n    ).matches;\n    this._initializeItemsIfNeeded();\n    this._open = true;\n  }\n\n  public closeDialog() {\n    this._open = false;\n    this._opened = false;\n    this._focusSet = false;\n    this._filter = \"\";\n    this._search = \"\";\n    this._entityItems = undefined;\n    this._commandItems = undefined;\n    fireEvent(this, \"dialog-closed\", { dialog: this.localName });\n  }\n\n  protected willUpdate() {\n    if (!this.hasUpdated) {\n      loadVirtualizer();\n    }\n  }\n\n  private _getItems = memoizeOne(\n    (commandMode: boolean, commandItems, entityItems, filter: string) => {\n      const items = commandMode ? commandItems : entityItems;\n\n      if (items && filter && filter !== \" \") {\n        return this._filterItems(items, filter);\n      }\n      return items;\n    }\n  );\n\n  protected render() {\n    if (!this._open) {\n      return nothing;\n    }\n\n    const items: QuickBarItem[] | undefined = this._getItems(\n      this._commandMode,\n      this._commandItems,\n      this._entityItems,\n      this._filter\n    );\n\n    return html`\n      <ha-dialog\n        .heading=${this.hass.localize(\"ui.dialogs.quick-bar.title\")}\n        open\n        @opened=${this._handleOpened}\n        @closed=${this.closeDialog}\n        hideActions\n      >\n        <div slot=\"heading\" class=\"heading\">\n          <ha-textfield\n            dialogInitialFocus\n            .placeholder=${this.hass.localize(\n              \"ui.dialogs.quick-bar.filter_placeholder\"\n            )}\n            aria-label=${this.hass.localize(\n              \"ui.dialogs.quick-bar.filter_placeholder\"\n            )}\n            .value=${this._commandMode ? `>${this._search}` : this._search}\n            icon\n            .iconTrailing=${this._search !== undefined || this._narrow}\n            @input=${this._handleSearchChange}\n            @keydown=${this._handleInputKeyDown}\n            @focus=${this._setFocusFirstListItem}\n          >\n            ${this._commandMode\n              ? html`\n                  <ha-svg-icon\n                    slot=\"leadingIcon\"\n                    class=\"prefix\"\n                    .path=${mdiConsoleLine}\n                  ></ha-svg-icon>\n                `\n              : html`\n                  <ha-svg-icon\n                    slot=\"leadingIcon\"\n                    class=\"prefix\"\n                    .path=${mdiMagnify}\n                  ></ha-svg-icon>\n                `}\n            ${this._search || this._narrow\n              ? html`\n                  <div slot=\"trailingIcon\">\n                    ${this._search &&\n                    html`<ha-icon-button\n                      @click=${this._clearSearch}\n                      .label=${this.hass!.localize(\"ui.common.clear\")}\n                      .path=${mdiClose}\n                    ></ha-icon-button>`}\n                    ${this._narrow\n                      ? html`\n                          <mwc-button\n                            .label=${this.hass!.localize(\"ui.common.close\")}\n                            @click=${this.closeDialog}\n                          ></mwc-button>\n                        `\n                      : \"\"}\n                  </div>\n                `\n              : \"\"}\n          </ha-textfield>\n        </div>\n        ${!items\n          ? html`<ha-circular-progress\n              size=\"small\"\n              indeterminate\n            ></ha-circular-progress>`\n          : items.length === 0\n            ? html`\n                <div class=\"nothing-found\">\n                  ${this.hass.localize(\"ui.dialogs.quick-bar.nothing_found\")}\n                </div>\n              `\n            : html`\n                <mwc-list>\n                  ${this._opened\n                    ? html`<lit-virtualizer\n                        scroller\n                        @keydown=${this._handleListItemKeyDown}\n                        @rangechange=${this._handleRangeChanged}\n                        @click=${this._handleItemClick}\n                        class=\"ha-scrollbar\"\n                        style=${styleMap({\n                          height: this._narrow\n                            ? \"calc(100vh - 56px)\"\n                            : `${Math.min(\n                                items.length * (this._commandMode ? 56 : 72) +\n                                  26,\n                                500\n                              )}px`,\n                        })}\n                        .items=${items}\n                        .renderItem=${this._renderItem}\n                      >\n                      </lit-virtualizer>`\n                    : \"\"}\n                </mwc-list>\n              `}\n        ${this._hint\n          ? html`<ha-tip .hass=${this.hass}>${this._hint}</ha-tip>`\n          : \"\"}\n      </ha-dialog>\n    `;\n  }\n\n  private async _initializeItemsIfNeeded() {\n    if (this._commandMode) {\n      this._commandItems =\n        this._commandItems || (await this._generateCommandItems());\n    } else {\n      this._entityItems = this._entityItems || this._generateEntityItems();\n    }\n  }\n\n  private _handleOpened() {\n    this._opened = true;\n  }\n\n  private async _handleRangeChanged(e) {\n    if (this._focusSet) {\n      return;\n    }\n    if (e.firstVisible > -1) {\n      this._focusSet = true;\n      await this.updateComplete;\n      this._setFocusFirstListItem();\n    }\n  }\n\n  private _renderItem = (item: QuickBarItem, index: number) => {\n    if (!item) {\n      return nothing;\n    }\n    return isCommandItem(item)\n      ? this._renderCommandItem(item, index)\n      : this._renderEntityItem(item as EntityItem, index);\n  };\n\n  private _renderEntityItem(item: EntityItem, index?: number) {\n    return html`\n      <ha-list-item\n        .twoline=${Boolean(item.altText)}\n        .item=${item}\n        index=${ifDefined(index)}\n        graphic=\"icon\"\n      >\n        ${item.iconPath\n          ? html`\n              <ha-svg-icon\n                .path=${item.iconPath}\n                class=\"entity\"\n                slot=\"graphic\"\n              ></ha-svg-icon>\n            `\n          : html`<span slot=\"graphic\">${item.icon}</span>`}\n        <span>${item.primaryText}</span>\n        ${item.altText\n          ? html`\n              <span slot=\"secondary\" class=\"item-text secondary\"\n                >${item.altText}</span\n              >\n            `\n          : nothing}\n      </ha-list-item>\n    `;\n  }\n\n  private _renderCommandItem(item: CommandItem, index?: number) {\n    return html`\n      <ha-list-item\n        .item=${item}\n        index=${ifDefined(index)}\n        class=\"command-item\"\n        hasMeta\n      >\n        <span>\n          <ha-label\n            .label=${item.categoryText}\n            class=\"command-category ${item.categoryKey}\"\n          >\n            ${item.iconPath\n              ? html`\n                  <ha-svg-icon .path=${item.iconPath} slot=\"icon\"></ha-svg-icon>\n                `\n              : nothing}\n            ${item.categoryText}\n          </ha-label>\n        </span>\n\n        <span class=\"command-text\">${item.primaryText}</span>\n      </ha-list-item>\n    `;\n  }\n\n  private async processItemAndCloseDialog(item: QuickBarItem, index: number) {\n    this._addSpinnerToCommandItem(index);\n\n    await item.action();\n    this.closeDialog();\n  }\n\n  private _handleInputKeyDown(ev: KeyboardEvent) {\n    if (ev.code === \"Enter\") {\n      const firstItem = this._getItemAtIndex(0);\n      if (!firstItem || firstItem.style.display === \"none\") {\n        return;\n      }\n      this.processItemAndCloseDialog((firstItem as any).item, 0);\n    } else if (ev.code === \"ArrowDown\") {\n      ev.preventDefault();\n      this._getItemAtIndex(0)?.focus();\n      this._focusSet = true;\n      this._focusListElement = this._getItemAtIndex(0);\n    }\n  }\n\n  private _getItemAtIndex(index: number): ListItem | null {\n    return this.renderRoot.querySelector(`ha-list-item[index=\"${index}\"]`);\n  }\n\n  private _addSpinnerToCommandItem(index: number): void {\n    const spinner = document.createElement(\"ha-circular-progress\");\n    spinner.size = \"small\";\n    spinner.slot = \"meta\";\n    spinner.indeterminate = true;\n    this._getItemAtIndex(index)?.appendChild(spinner);\n  }\n\n  private _handleSearchChange(ev: CustomEvent): void {\n    const newFilter = (ev.currentTarget as any).value;\n    const oldCommandMode = this._commandMode;\n    const oldSearch = this._search;\n    let newCommandMode: boolean;\n    let newSearch: string;\n\n    if (newFilter.startsWith(\">\")) {\n      newCommandMode = true;\n      newSearch = newFilter.substring(1);\n    } else {\n      newCommandMode = false;\n      newSearch = newFilter;\n    }\n\n    if (oldCommandMode === newCommandMode && oldSearch === newSearch) {\n      return;\n    }\n\n    this._commandMode = newCommandMode;\n    this._search = newSearch;\n\n    if (this._hint) {\n      this._hint = undefined;\n    }\n\n    if (oldCommandMode !== this._commandMode) {\n      this._focusSet = false;\n      this._initializeItemsIfNeeded();\n      this._filter = this._search;\n    } else {\n      if (this._focusSet && this._focusListElement) {\n        this._focusSet = false;\n        // @ts-ignore\n        this._focusListElement.rippleHandlers.endFocus();\n      }\n      this._debouncedSetFilter(this._search);\n    }\n  }\n\n  private _clearSearch() {\n    this._search = \"\";\n    this._filter = \"\";\n  }\n\n  private _debouncedSetFilter = debounce((filter: string) => {\n    this._filter = filter;\n  }, 100);\n\n  private _setFocusFirstListItem() {\n    // @ts-ignore\n    this._getItemAtIndex(0)?.rippleHandlers.startFocus();\n    this._focusListElement = this._getItemAtIndex(0);\n  }\n\n  private _handleListItemKeyDown(ev: KeyboardEvent) {\n    const isSingleCharacter = ev.key.length === 1;\n    const index = (ev.target as HTMLElement).getAttribute(\"index\");\n    const isFirstListItem = index === \"0\";\n    this._focusListElement = ev.target as ListItem;\n    if (ev.key === \"ArrowDown\") {\n      this._getItemAtIndex(Number(index) + 1)?.focus();\n    }\n    if (ev.key === \"ArrowUp\") {\n      if (isFirstListItem) {\n        this._filterInputField?.focus();\n      } else {\n        this._getItemAtIndex(Number(index) - 1)?.focus();\n      }\n    }\n    if (ev.key === \"Enter\" || ev.key === \" \") {\n      this.processItemAndCloseDialog(\n        (ev.target as any).item,\n        Number((ev.target as HTMLElement).getAttribute(\"index\"))\n      );\n    }\n    if (ev.key === \"Backspace\" || isSingleCharacter) {\n      (ev.currentTarget as HTMLElement).scrollTop = 0;\n      this._filterInputField?.focus();\n    }\n  }\n\n  private _handleItemClick(ev) {\n    const listItem = ev.target.closest(\"ha-list-item\");\n    this.processItemAndCloseDialog(\n      listItem.item,\n      Number(listItem.getAttribute(\"index\"))\n    );\n  }\n\n  private _generateEntityItems(): EntityItem[] {\n    return Object.keys(this.hass.states)\n      .map((entityId) => {\n        const entityState = this.hass.states[entityId];\n        const entityItem = {\n          primaryText: computeStateName(entityState),\n          altText: entityId,\n          icon: html`\n            <ha-state-icon\n              .hass=${this.hass}\n              .stateObj=${entityState}\n            ></ha-state-icon>\n          `,\n          action: () => fireEvent(this, \"hass-more-info\", { entityId }),\n        };\n\n        return {\n          ...entityItem,\n          strings: [entityItem.primaryText, entityItem.altText],\n        };\n      })\n      .sort((a, b) =>\n        caseInsensitiveStringCompare(\n          a.primaryText,\n          b.primaryText,\n          this.hass.locale.language\n        )\n      );\n  }\n\n  private async _generateCommandItems(): Promise<CommandItem[]> {\n    return [\n      ...(await this._generateReloadCommands()),\n      ...this._generateServerControlCommands(),\n      ...(await this._generateNavigationCommands()),\n    ].sort((a, b) =>\n      caseInsensitiveStringCompare(\n        a.strings.join(\" \"),\n        b.strings.join(\" \"),\n        this.hass.locale.language\n      )\n    );\n  }\n\n  private async _generateReloadCommands(): Promise<CommandItem[]> {\n    // Get all domains that have a direct \"reload\" service\n    const reloadableDomains = componentsWithService(this.hass, \"reload\");\n\n    const localize = await this.hass.loadBackendTranslation(\n      \"title\",\n      reloadableDomains\n    );\n\n    const commands = reloadableDomains.map((domain) => ({\n      primaryText:\n        this.hass.localize(`ui.dialogs.quick-bar.commands.reload.${domain}`) ||\n        this.hass.localize(\"ui.dialogs.quick-bar.commands.reload.reload\", {\n          domain: domainToName(localize, domain),\n        }),\n      action: () => this.hass.callService(domain, \"reload\"),\n      iconPath: mdiReload,\n      categoryText: this.hass.localize(\n        `ui.dialogs.quick-bar.commands.types.reload`\n      ),\n    }));\n\n    // Add \"frontend.reload_themes\"\n    commands.push({\n      primaryText: this.hass.localize(\n        \"ui.dialogs.quick-bar.commands.reload.themes\"\n      ),\n      action: () => this.hass.callService(\"frontend\", \"reload_themes\"),\n      iconPath: mdiReload,\n      categoryText: this.hass.localize(\n        \"ui.dialogs.quick-bar.commands.types.reload\"\n      ),\n    });\n\n    // Add \"homeassistant.reload_core_config\"\n    commands.push({\n      primaryText: this.hass.localize(\n        \"ui.dialogs.quick-bar.commands.reload.core\"\n      ),\n      action: () =>\n        this.hass.callService(\"homeassistant\", \"reload_core_config\"),\n      iconPath: mdiReload,\n      categoryText: this.hass.localize(\n        \"ui.dialogs.quick-bar.commands.types.reload\"\n      ),\n    });\n\n    // Add \"homeassistant.reload_all\"\n    commands.push({\n      primaryText: this.hass.localize(\n        \"ui.dialogs.quick-bar.commands.reload.all\"\n      ),\n      action: () => this.hass.callService(\"homeassistant\", \"reload_all\"),\n      iconPath: mdiReload,\n      categoryText: this.hass.localize(\n        \"ui.dialogs.quick-bar.commands.types.reload\"\n      ),\n    });\n\n    return commands.map((command) => ({\n      ...command,\n      categoryKey: \"reload\",\n      strings: [`${command.categoryText} ${command.primaryText}`],\n    }));\n  }\n\n  private _generateServerControlCommands(): CommandItem[] {\n    const serverActions = [\"restart\", \"stop\"] as const;\n\n    return serverActions.map((action) => {\n      const categoryKey: CommandItem[\"categoryKey\"] = \"server_control\";\n\n      const item = {\n        primaryText: this.hass.localize(\n          \"ui.dialogs.quick-bar.commands.server_control.perform_action\",\n          {\n            action: this.hass.localize(\n              `ui.dialogs.quick-bar.commands.server_control.${action}`\n            ),\n          }\n        ),\n        iconPath: mdiServerNetwork,\n        categoryText: this.hass.localize(\n          `ui.dialogs.quick-bar.commands.types.${categoryKey}`\n        ),\n        categoryKey,\n        action: async () => {\n          const confirmed = await showConfirmationDialog(this, {\n            title: this.hass.localize(\n              `ui.dialogs.restart.${action}.confirm_title`\n            ),\n            text: this.hass.localize(\n              `ui.dialogs.restart.${action}.confirm_description`\n            ),\n            confirmText: this.hass.localize(\n              `ui.dialogs.restart.${action}.confirm_action`\n            ),\n            destructive: true,\n          });\n          if (!confirmed) {\n            return;\n          }\n          this.hass.callService(\"homeassistant\", action);\n        },\n      };\n\n      return {\n        ...item,\n        strings: [`${item.categoryText} ${item.primaryText}`],\n      };\n    });\n  }\n\n  private async _generateNavigationCommands(): Promise<CommandItem[]> {\n    const panelItems = this._generateNavigationPanelCommands();\n    const sectionItems = this._generateNavigationConfigSectionCommands();\n    const supervisorItems: BaseNavigationCommand[] = [];\n    if (isComponentLoaded(this.hass, \"hassio\")) {\n      const addonsInfo = await fetchHassioAddonsInfo(this.hass);\n      supervisorItems.push({\n        path: \"/hassio/store\",\n        primaryText: this.hass.localize(\n          \"ui.dialogs.quick-bar.commands.navigation.addon_store\"\n        ),\n      });\n      supervisorItems.push({\n        path: \"/hassio/dashboard\",\n        primaryText: this.hass.localize(\n          \"ui.dialogs.quick-bar.commands.navigation.addon_dashboard\"\n        ),\n      });\n      for (const addon of addonsInfo.addons.filter((a) => a.version)) {\n        supervisorItems.push({\n          path: `/hassio/addon/${addon.slug}`,\n          primaryText: this.hass.localize(\n            \"ui.dialogs.quick-bar.commands.navigation.addon_info\",\n            { addon: addon.name }\n          ),\n        });\n      }\n    }\n\n    return this._finalizeNavigationCommands([\n      ...panelItems,\n      ...sectionItems,\n      ...supervisorItems,\n    ]);\n  }\n\n  private _generateNavigationPanelCommands(): BaseNavigationCommand[] {\n    return Object.keys(this.hass.panels)\n      .filter((panelKey) => panelKey !== \"_my_redirect\")\n      .map((panelKey) => {\n        const panel = this.hass.panels[panelKey];\n        const translationKey = getPanelNameTranslationKey(panel);\n\n        const primaryText =\n          this.hass.localize(translationKey) || panel.title || panel.url_path;\n\n        return {\n          primaryText,\n          path: `/${panel.url_path}`,\n        };\n      });\n  }\n\n  private _generateNavigationConfigSectionCommands(): BaseNavigationCommand[] {\n    const items: NavigationInfo[] = [];\n\n    for (const sectionKey of Object.keys(configSections)) {\n      for (const page of configSections[sectionKey]) {\n        if (!canShowPage(this.hass, page)) {\n          continue;\n        }\n\n        const info = this._getNavigationInfoFromConfig(page);\n\n        if (!info) {\n          continue;\n        }\n        // Add to list, but only if we do not already have an entry for the same path and component\n        if (items.some((e) => e.path === info.path)) {\n          continue;\n        }\n\n        items.push(info);\n      }\n    }\n\n    return items;\n  }\n\n  private _getNavigationInfoFromConfig(\n    page: PageNavigation\n  ): NavigationInfo | undefined {\n    const path = page.path.substring(1);\n\n    let name = path.substring(path.indexOf(\"/\") + 1);\n    name = name.indexOf(\"/\") > -1 ? name.substring(0, name.indexOf(\"/\")) : name;\n\n    const caption =\n      (name &&\n        this.hass.localize(\n          `ui.dialogs.quick-bar.commands.navigation.${name}`\n        )) ||\n      // @ts-expect-error\n      (page.translationKey && this.hass.localize(page.translationKey));\n\n    if (caption) {\n      return { ...page, primaryText: caption };\n    }\n\n    return undefined;\n  }\n\n  private _finalizeNavigationCommands(\n    items: BaseNavigationCommand[]\n  ): CommandItem[] {\n    return items.map((item) => {\n      const categoryKey: CommandItem[\"categoryKey\"] = \"navigation\";\n\n      const navItem = {\n        ...item,\n        iconPath: mdiEarth,\n        categoryText: this.hass.localize(\n          `ui.dialogs.quick-bar.commands.types.${categoryKey}`\n        ),\n        action: () => navigate(item.path),\n      };\n\n      return {\n        ...navItem,\n        strings: [`${navItem.categoryText} ${navItem.primaryText}`],\n        categoryKey,\n      };\n    });\n  }\n\n  private _toggleIfAlreadyOpened() {\n    return this._opened ? !this._commandMode : false;\n  }\n\n  private _filterItems = memoizeOne(\n    (items: QuickBarItem[], filter: string): QuickBarItem[] =>\n      fuzzyFilterSort<QuickBarItem>(filter.trimLeft(), items)\n  );\n\n  static get styles() {\n    return [\n      haStyleScrollbar,\n      haStyleDialog,\n      css`\n        mwc-list {\n          position: relative;\n          --mdc-list-vertical-padding: 0;\n        }\n        .heading {\n          display: flex;\n          align-items: center;\n          --mdc-theme-primary: var(--primary-text-color);\n        }\n\n        .heading ha-textfield {\n          flex-grow: 1;\n        }\n\n        ha-dialog {\n          --dialog-z-index: 9;\n          --dialog-content-padding: 0;\n        }\n\n        @media (min-width: 800px) {\n          ha-dialog {\n            --mdc-dialog-max-width: 800px;\n            --mdc-dialog-min-width: 500px;\n            --dialog-surface-position: fixed;\n            --dialog-surface-top: 40px;\n            --mdc-dialog-max-height: calc(100% - 72px);\n          }\n        }\n\n        @media all and (max-width: 450px), all and (max-height: 500px) {\n          ha-textfield {\n            --mdc-shape-small: 0;\n          }\n        }\n\n        @media all and (max-width: 450px), all and (max-height: 690px) {\n          .hint {\n            display: none;\n          }\n        }\n\n        ha-svg-icon.prefix {\n          color: var(--primary-text-color);\n        }\n\n        ha-textfield ha-icon-button {\n          --mdc-icon-button-size: 24px;\n          color: var(--primary-text-color);\n        }\n\n        .command-category {\n          --ha-label-icon-color: #585858;\n          --ha-label-text-color: #212121;\n        }\n\n        .command-category.reload {\n          --ha-label-background-color: #cddc39;\n        }\n\n        .command-category.navigation {\n          --ha-label-background-color: var(--light-primary-color);\n        }\n\n        .command-category.server_control {\n          --ha-label-background-color: var(--warning-color);\n        }\n\n        span.command-text {\n          margin-left: 8px;\n          margin-inline-start: 8px;\n          margin-inline-end: initial;\n          direction: var(--direction);\n        }\n\n        ha-list-item {\n          width: 100%;\n          --mdc-list-item-graphic-margin: 20px;\n        }\n\n        ha-list-item.command-item {\n          text-transform: capitalize;\n        }\n\n        ha-tip {\n          padding: 20px;\n        }\n\n        .nothing-found {\n          padding: 16px 0px;\n          text-align: center;\n        }\n\n        div[slot=\"trailingIcon\"] {\n          display: flex;\n          align-items: center;\n        }\n\n        lit-virtualizer {\n          contain: size layout !important;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-quick-bar\": QuickBar;\n  }\n}\n"],"mappings":";AAAA,OAAO,6BAA6B;AAAC,MAAAA,QAAA;AAAA,MAAAC,cAAA;AAAA,MAAAC,QAAA;AAAA,MAAAC,UAAA;AAAA,MAAAC,SAAA;AAAA,MAAAC,gBAAA;AAUrC,SAASC,UAAU,EAAkBC,GAAG,EAAEC,IAAI,EAAEC,OAAO,QAAQ,KAAK;AACpE,SAASC,aAAa,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,KAAK,QAAQ,gBAAgB;AACtE,SAASC,SAAS,QAAQ,2BAA2B;AACrD,SAASC,QAAQ,QAAQ,0BAA0B;AACnD,OAAOC,UAAU,MAAM,aAAa;AACpC,SAASC,WAAW,QAAQ,mCAAmC;AAC/D,SAASC,qBAAqB,QAAQ,6CAA6C;AACnF,SAASC,iBAAiB,QAAQ,yCAAyC;AAC3E,SAASC,SAAS,QAAQ,6BAA6B;AACvD,SAASC,gBAAgB,QAAQ,wCAAwC;AACzE,SAASC,QAAQ,QAAQ,uBAAuB;AAChD,SAASC,4BAA4B,QAAQ,6BAA6B;AAC1E,SAEEC,eAAe,QACV,8CAA8C;AACrD,SAASC,QAAQ,QAAQ,4BAA4B;AACrD,OAAO,uCAAuC;AAC9C,OAAO,iCAAiC;AACxC,OAAO,2BAA2B;AAClC,OAAO,+BAA+B;AACtC,OAAO,+BAA+B;AACtC,SAASC,qBAAqB,QAAQ,yBAAyB;AAC/D,SAASC,YAAY,QAAQ,wBAAwB;AACrD,SAASC,0BAA0B,QAAQ,kBAAkB;AAE7D,SAASC,cAAc,QAAQ,qCAAqC;AACpE,SAASC,aAAa,EAAEC,gBAAgB,QAAQ,wBAAwB;AACxE,SAASC,eAAe,QAAQ,6BAA6B;AAE7D,SAASC,sBAAsB,QAAQ,4BAA4B;AAmBnE,MAAMC,aAAa,GAAIC,IAAkB,IACtCA,IAAI,CAAiBC,WAAW,KAAKC,SAAS;AAYjD,WACaC,QAAQ,GAAAC,SAAA,EADpB7B,aAAa,CAAC,cAAc,CAAC,aAAA8B,WAAA,EAAAC,WAAA;EAA9B,MACaH,QAAQ,SAAAG,WAAA,CAAoB;IAAAC,YAAA,GAAAC,IAAA;MAAA,SAAAA,IAAA;MAAAH,WAAA;IAAA;EAyxBzC;EAAC;IAAAI,CAAA,EAzxBYN,QAAQ;IAAAO,CAAA;MAAAC,IAAA;MAAAC,UAAA,GAClBpC,QAAQ,CAAC;QAAEqC,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAC,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAE9BlC,KAAK,CAAC,CAAC;MAAAoC,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAEPlC,KAAK,CAAC,CAAC;MAAAoC,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAEPlC,KAAK,CAAC,CAAC;MAAAoC,GAAA;MAAAC,MAAA;QAAA,OAAmB,EAAE;MAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAE5BlC,KAAK,CAAC,CAAC;MAAAoC,GAAA;MAAAC,MAAA;QAAA,OAAmB,EAAE;MAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAE5BlC,KAAK,CAAC,CAAC;MAAAoC,GAAA;MAAAC,MAAA;QAAA,OAAiB,KAAK;MAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAE7BlC,KAAK,CAAC,CAAC;MAAAoC,GAAA;MAAAC,MAAA;QAAA,OAAwB,KAAK;MAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAEpClC,KAAK,CAAC,CAAC;MAAAoC,GAAA;MAAAC,MAAA;QAAA,OAAmB,KAAK;MAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAE/BlC,KAAK,CAAC,CAAC;MAAAoC,GAAA;MAAAC,MAAA;QAAA,OAAmB,KAAK;MAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAE/BlC,KAAK,CAAC,CAAC;MAAAoC,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAEPnC,KAAK,CAAC,cAAc,EAAE,KAAK,CAAC;MAAAqC,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAG,GAAA;MAAAC,MAAA;QAAA,OAET,KAAK;MAAA;IAAA;MAAAJ,IAAA;MAAAG,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAIzB,eAAAC,WAAwBC,MAAsB,EAAE;QAC9C,IAAI,CAACC,YAAY,GAAGD,MAAM,CAACE,WAAW,IAAI,IAAI,CAACC,sBAAsB,CAAC,CAAC;QACvE,IAAI,CAACC,KAAK,GAAGJ,MAAM,CAACK,IAAI;QACxB,IAAI,CAACC,OAAO,GAAGC,UAAU,CACvB,yDACF,CAAC,CAACC,OAAO;QACT,IAAI,CAACC,wBAAwB,CAAC,CAAC;QAC/B,IAAI,CAACC,KAAK,GAAG,IAAI;MACnB;IAAC;MAAAhB,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAa,YAAA,EAAqB;QACnB,IAAI,CAACD,KAAK,GAAG,KAAK;QAClB,IAAI,CAACE,OAAO,GAAG,KAAK;QACpB,IAAI,CAACC,SAAS,GAAG,KAAK;QACtB,IAAI,CAACC,OAAO,GAAG,EAAE;QACjB,IAAI,CAACC,OAAO,GAAG,EAAE;QACjB,IAAI,CAACC,YAAY,GAAG/B,SAAS;QAC7B,IAAI,CAACgC,aAAa,GAAGhC,SAAS;QAC9BjB,SAAS,CAAC,IAAI,EAAE,eAAe,EAAE;UAAEkD,MAAM,EAAE,IAAI,CAACC;QAAU,CAAC,CAAC;MAC9D;IAAC;MAAAzB,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAsB,WAAA,EAAuB;QACrB,IAAI,CAAC,IAAI,CAACC,UAAU,EAAE;UACpBzC,eAAe,CAAC,CAAC;QACnB;MACF;IAAC;MAAAc,IAAA;MAAAG,GAAA;MAAAC,MAAA;QAAA,OAEmBlC,UAAU,CAC5B,CAACsC,WAAoB,EAAEoB,YAAY,EAAEC,WAAW,EAAEC,MAAc,KAAK;UACnE,MAAMC,KAAK,GAAGvB,WAAW,GAAGoB,YAAY,GAAGC,WAAW;UAEtD,IAAIE,KAAK,IAAID,MAAM,IAAIA,MAAM,KAAK,GAAG,EAAE;YACrC,OAAO,IAAI,CAACE,YAAY,CAACD,KAAK,EAAED,MAAM,CAAC;UACzC;UACA,OAAOC,KAAK;QACd,CACF,CAAC;MAAA;IAAA;MAAA/B,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAA6B,OAAA,EAAmB;QACjB,IAAI,CAAC,IAAI,CAACjB,KAAK,EAAE;UACf,OAAOrD,OAAO;QAChB;QAEA,MAAMoE,KAAiC,GAAG,IAAI,CAACG,SAAS,CACtD,IAAI,CAAC3B,YAAY,EACjB,IAAI,CAACgB,aAAa,EAClB,IAAI,CAACD,YAAY,EACjB,IAAI,CAACF,OACP,CAAC;QAED,OAAO1D,IAAK;AAChB;AACA,mBAAmB,IAAI,CAACyE,IAAI,CAACC,QAAQ,CAAC,4BAA4B,CAAE;AACpE;AACA,kBAAkB,IAAI,CAACC,aAAc;AACrC,kBAAkB,IAAI,CAACpB,WAAY;AACnC;AACA;AACA;AACA;AACA;AACA,2BAA2B,IAAI,CAACkB,IAAI,CAACC,QAAQ,CAC/B,yCACF,CAAE;AACd,yBAAyB,IAAI,CAACD,IAAI,CAACC,QAAQ,CAC7B,yCACF,CAAE;AACd,qBAAqB,IAAI,CAAC7B,YAAY,GAAI,IAAG,IAAI,CAACc,OAAQ,EAAC,GAAG,IAAI,CAACA,OAAQ;AAC3E;AACA,4BAA4B,IAAI,CAACA,OAAO,KAAK9B,SAAS,IAAI,IAAI,CAACqB,OAAQ;AACvE,qBAAqB,IAAI,CAAC0B,mBAAoB;AAC9C,uBAAuB,IAAI,CAACC,mBAAoB;AAChD,qBAAqB,IAAI,CAACC,sBAAuB;AACjD;AACA,cAAc,IAAI,CAACjC,YAAY,GACf7C,IAAK;AACrB;AACA;AACA;AACA,4BAA4BP,cAAe;AAC3C;AACA,iBAAiB,GACDO,IAAK;AACrB;AACA;AACA;AACA,4BAA4BL,UAAW;AACvC;AACA,iBAAkB;AAClB,cAAc,IAAI,CAACgE,OAAO,IAAI,IAAI,CAACT,OAAO,GAC1BlD,IAAK;AACrB;AACA,sBAAsB,IAAI,CAAC2D,OAAO,IACd3D,IAAK;AACzB,+BAA+B,IAAI,CAAC+E,YAAa;AACjD,+BAA+B,IAAI,CAACN,IAAI,CAAEC,QAAQ,CAAC,iBAAiB,CAAE;AACtE,8BAA8BlF,QAAS;AACvC,uCAAwC;AACxC,sBAAsB,IAAI,CAAC0D,OAAO,GACVlD,IAAK;AAC7B;AACA,qCAAqC,IAAI,CAACyE,IAAI,CAAEC,QAAQ,CAAC,iBAAiB,CAAE;AAC5E,qCAAqC,IAAI,CAACnB,WAAY;AACtD;AACA,yBAAyB,GACD,EAAG;AAC3B;AACA,iBAAiB,GACD,EAAG;AACnB;AACA;AACA,UAAU,CAACc,KAAK,GACJrE,IAAK;AACjB;AACA;AACA,qCAAqC,GACzBqE,KAAK,CAACW,MAAM,KAAK,CAAC,GAChBhF,IAAK;AACnB;AACA,oBAAoB,IAAI,CAACyE,IAAI,CAACC,QAAQ,CAAC,oCAAoC,CAAE;AAC7E;AACA,eAAe,GACD1E,IAAK;AACnB;AACA,oBAAoB,IAAI,CAACwD,OAAO,GACVxD,IAAK;AAC3B;AACA,mCAAmC,IAAI,CAACiF,sBAAuB;AAC/D,uCAAuC,IAAI,CAACC,mBAAoB;AAChE,iCAAiC,IAAI,CAACC,gBAAiB;AACvD;AACA,gCAAgC5E,QAAQ,CAAC;UACf6E,MAAM,EAAE,IAAI,CAAClC,OAAO,GAChB,oBAAoB,GACnB,GAAEmC,IAAI,CAACC,GAAG,CACTjB,KAAK,CAACW,MAAM,IAAI,IAAI,CAACnC,YAAY,GAAG,EAAE,GAAG,EAAE,CAAC,GAC1C,EAAE,EACJ,GACF,CAAE;QACR,CAAC,CAAE;AAC3B,iCAAiCwB,KAAM;AACvC,sCAAsC,IAAI,CAACkB,WAAY;AACvD;AACA,yCAAyC,GACnB,EAAG;AACzB;AACA,eAAgB;AAChB,UAAU,IAAI,CAACvC,KAAK,GACRhD,IAAK,iBAAgB,IAAI,CAACyE,IAAK,IAAG,IAAI,CAACzB,KAAM,WAAU,GACvD,EAAG;AACf;AACA,KAAK;MACH;IAAC;MAAAV,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,eAAAW,yBAAA,EAAyC;QACvC,IAAI,IAAI,CAACR,YAAY,EAAE;UACrB,IAAI,CAACgB,aAAa,GAChB,IAAI,CAACA,aAAa,KAAK,MAAM,IAAI,CAAC2B,qBAAqB,CAAC,CAAC,CAAC;QAC9D,CAAC,MAAM;UACL,IAAI,CAAC5B,YAAY,GAAG,IAAI,CAACA,YAAY,IAAI,IAAI,CAAC6B,oBAAoB,CAAC,CAAC;QACtE;MACF;IAAC;MAAAnD,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAiC,cAAA,EAAwB;QACtB,IAAI,CAACnB,OAAO,GAAG,IAAI;MACrB;IAAC;MAAAlB,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,eAAAwC,oBAAkCQ,CAAC,EAAE;QACnC,IAAI,IAAI,CAACjC,SAAS,EAAE;UAClB;QACF;QACA,IAAIiC,CAAC,CAACC,YAAY,GAAG,CAAC,CAAC,EAAE;UACvB,IAAI,CAAClC,SAAS,GAAG,IAAI;UACrB,MAAM,IAAI,CAACmC,cAAc;UACzB,IAAI,CAACd,sBAAsB,CAAC,CAAC;QAC/B;MACF;IAAC;MAAAxC,IAAA;MAAAG,GAAA;MAAAC,MAAA;QAAA,OAEqB,CAACf,IAAkB,EAAEkE,KAAa,KAAK;UAC3D,IAAI,CAAClE,IAAI,EAAE;YACT,OAAO1B,OAAO;UAChB;UACA,OAAOyB,aAAa,CAACC,IAAI,CAAC,GACtB,IAAI,CAACmE,kBAAkB,CAACnE,IAAI,EAAEkE,KAAK,CAAC,GACpC,IAAI,CAACE,iBAAiB,CAACpE,IAAI,EAAgBkE,KAAK,CAAC;QACvD,CAAC;MAAA;IAAA;MAAAvD,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAqD,kBAA0BpE,IAAgB,EAAEkE,KAAc,EAAE;QAC1D,OAAO7F,IAAK;AAChB;AACA,mBAAmBgG,OAAO,CAACrE,IAAI,CAACsE,OAAO,CAAE;AACzC,gBAAgBtE,IAAK;AACrB,gBAAgBrB,SAAS,CAACuF,KAAK,CAAE;AACjC;AACA;AACA,UAAUlE,IAAI,CAACuE,QAAQ,GACXlG,IAAK;AACjB;AACA,wBAAwB2B,IAAI,CAACuE,QAAS;AACtC;AACA;AACA;AACA,aAAa,GACDlG,IAAK,wBAAuB2B,IAAI,CAACwE,IAAK,SAAS;AAC3D,gBAAgBxE,IAAI,CAACyE,WAAY;AACjC,UAAUzE,IAAI,CAACsE,OAAO,GACVjG,IAAK;AACjB;AACA,mBAAmB2B,IAAI,CAACsE,OAAQ;AAChC;AACA,aAAa,GACDhG,OAAQ;AACpB;AACA,KAAK;MACH;IAAC;MAAAqC,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAoD,mBAA2BnE,IAAiB,EAAEkE,KAAc,EAAE;QAC5D,OAAO7F,IAAK;AAChB;AACA,gBAAgB2B,IAAK;AACrB,gBAAgBrB,SAAS,CAACuF,KAAK,CAAE;AACjC;AACA;AACA;AACA;AACA;AACA,qBAAqBlE,IAAI,CAAC0E,YAAa;AACvC,sCAAsC1E,IAAI,CAACC,WAAY;AACvD;AACA,cAAcD,IAAI,CAACuE,QAAQ,GACXlG,IAAK;AACrB,uCAAuC2B,IAAI,CAACuE,QAAS;AACrD,iBAAiB,GACDjG,OAAQ;AACxB,cAAc0B,IAAI,CAAC0E,YAAa;AAChC;AACA;AACA;AACA,qCAAqC1E,IAAI,CAACyE,WAAY;AACtD;AACA,KAAK;MACH;IAAC;MAAA9D,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,eAAA4D,0BAAwC3E,IAAkB,EAAEkE,KAAa,EAAE;QACzE,IAAI,CAACU,wBAAwB,CAACV,KAAK,CAAC;QAEpC,MAAMlE,IAAI,CAAC6E,MAAM,CAAC,CAAC;QACnB,IAAI,CAACjD,WAAW,CAAC,CAAC;MACpB;IAAC;MAAAjB,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAmC,oBAA4B4B,EAAiB,EAAE;QAC7C,IAAIA,EAAE,CAACC,IAAI,KAAK,OAAO,EAAE;UACvB,MAAMC,SAAS,GAAG,IAAI,CAACC,eAAe,CAAC,CAAC,CAAC;UACzC,IAAI,CAACD,SAAS,IAAIA,SAAS,CAACE,KAAK,CAACC,OAAO,KAAK,MAAM,EAAE;YACpD;UACF;UACA,IAAI,CAACR,yBAAyB,CAAEK,SAAS,CAAShF,IAAI,EAAE,CAAC,CAAC;QAC5D,CAAC,MAAM,IAAI8E,EAAE,CAACC,IAAI,KAAK,WAAW,EAAE;UAAA,IAAAK,qBAAA;UAClCN,EAAE,CAACO,cAAc,CAAC,CAAC;UACnB,CAAAD,qBAAA,OAAI,CAACH,eAAe,CAAC,CAAC,CAAC,cAAAG,qBAAA,eAAvBA,qBAAA,CAAyBE,KAAK,CAAC,CAAC;UAChC,IAAI,CAACxD,SAAS,GAAG,IAAI;UACrB,IAAI,CAACyD,iBAAiB,GAAG,IAAI,CAACN,eAAe,CAAC,CAAC,CAAC;QAClD;MACF;IAAC;MAAAtE,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAkE,gBAAwBf,KAAa,EAAmB;QACtD,OAAO,IAAI,CAACsB,UAAU,CAACC,aAAa,CAAE,uBAAsBvB,KAAM,IAAG,CAAC;MACxE;IAAC;MAAAvD,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAA6D,yBAAiCV,KAAa,EAAQ;QAAA,IAAAwB,sBAAA;QACpD,MAAMC,OAAO,GAAGC,QAAQ,CAACC,aAAa,CAAC,sBAAsB,CAAC;QAC9DF,OAAO,CAACG,IAAI,GAAG,OAAO;QACtBH,OAAO,CAACI,IAAI,GAAG,MAAM;QACrBJ,OAAO,CAACK,aAAa,GAAG,IAAI;QAC5B,CAAAN,sBAAA,OAAI,CAACT,eAAe,CAACf,KAAK,CAAC,cAAAwB,sBAAA,eAA3BA,sBAAA,CAA6BO,WAAW,CAACN,OAAO,CAAC;MACnD;IAAC;MAAAhF,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAkC,oBAA4B6B,EAAe,EAAQ;QACjD,MAAMoB,SAAS,GAAIpB,EAAE,CAACqB,aAAa,CAASpF,KAAK;QACjD,MAAMqF,cAAc,GAAG,IAAI,CAAClF,YAAY;QACxC,MAAMmF,SAAS,GAAG,IAAI,CAACrE,OAAO;QAC9B,IAAIsE,cAAuB;QAC3B,IAAIC,SAAiB;QAErB,IAAIL,SAAS,CAACM,UAAU,CAAC,GAAG,CAAC,EAAE;UAC7BF,cAAc,GAAG,IAAI;UACrBC,SAAS,GAAGL,SAAS,CAACO,SAAS,CAAC,CAAC,CAAC;QACpC,CAAC,MAAM;UACLH,cAAc,GAAG,KAAK;UACtBC,SAAS,GAAGL,SAAS;QACvB;QAEA,IAAIE,cAAc,KAAKE,cAAc,IAAID,SAAS,KAAKE,SAAS,EAAE;UAChE;QACF;QAEA,IAAI,CAACrF,YAAY,GAAGoF,cAAc;QAClC,IAAI,CAACtE,OAAO,GAAGuE,SAAS;QAExB,IAAI,IAAI,CAAClF,KAAK,EAAE;UACd,IAAI,CAACA,KAAK,GAAGnB,SAAS;QACxB;QAEA,IAAIkG,cAAc,KAAK,IAAI,CAAClF,YAAY,EAAE;UACxC,IAAI,CAACY,SAAS,GAAG,KAAK;UACtB,IAAI,CAACJ,wBAAwB,CAAC,CAAC;UAC/B,IAAI,CAACK,OAAO,GAAG,IAAI,CAACC,OAAO;QAC7B,CAAC,MAAM;UACL,IAAI,IAAI,CAACF,SAAS,IAAI,IAAI,CAACyD,iBAAiB,EAAE;YAC5C,IAAI,CAACzD,SAAS,GAAG,KAAK;YACtB;YACA,IAAI,CAACyD,iBAAiB,CAACmB,cAAc,CAACC,QAAQ,CAAC,CAAC;UAClD;UACA,IAAI,CAACC,mBAAmB,CAAC,IAAI,CAAC5E,OAAO,CAAC;QACxC;MACF;IAAC;MAAArB,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAqC,aAAA,EAAuB;QACrB,IAAI,CAACpB,OAAO,GAAG,EAAE;QACjB,IAAI,CAACD,OAAO,GAAG,EAAE;MACnB;IAAC;MAAApB,IAAA;MAAAG,GAAA;MAAAC,MAAA;QAAA,OAE6BzB,QAAQ,CAAEmD,MAAc,IAAK;UACzD,IAAI,CAACV,OAAO,GAAGU,MAAM;QACvB,CAAC,EAAE,GAAG,CAAC;MAAA;IAAA;MAAA9B,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAEP,SAAAoC,uBAAA,EAAiC;QAAA,IAAA0D,sBAAA;QAC/B;QACA,CAAAA,sBAAA,OAAI,CAAC5B,eAAe,CAAC,CAAC,CAAC,cAAA4B,sBAAA,eAAvBA,sBAAA,CAAyBH,cAAc,CAACI,UAAU,CAAC,CAAC;QACpD,IAAI,CAACvB,iBAAiB,GAAG,IAAI,CAACN,eAAe,CAAC,CAAC,CAAC;MAClD;IAAC;MAAAtE,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAuC,uBAA+BwB,EAAiB,EAAE;QAChD,MAAMiC,iBAAiB,GAAGjC,EAAE,CAAChE,GAAG,CAACuC,MAAM,KAAK,CAAC;QAC7C,MAAMa,KAAK,GAAIY,EAAE,CAACkC,MAAM,CAAiBC,YAAY,CAAC,OAAO,CAAC;QAC9D,MAAMC,eAAe,GAAGhD,KAAK,KAAK,GAAG;QACrC,IAAI,CAACqB,iBAAiB,GAAGT,EAAE,CAACkC,MAAkB;QAC9C,IAAIlC,EAAE,CAAChE,GAAG,KAAK,WAAW,EAAE;UAAA,IAAAqG,sBAAA;UAC1B,CAAAA,sBAAA,OAAI,CAAClC,eAAe,CAACmC,MAAM,CAAClD,KAAK,CAAC,GAAG,CAAC,CAAC,cAAAiD,sBAAA,eAAvCA,sBAAA,CAAyC7B,KAAK,CAAC,CAAC;QAClD;QACA,IAAIR,EAAE,CAAChE,GAAG,KAAK,SAAS,EAAE;UACxB,IAAIoG,eAAe,EAAE;YAAA,IAAAG,qBAAA;YACnB,CAAAA,qBAAA,OAAI,CAACC,iBAAiB,cAAAD,qBAAA,eAAtBA,qBAAA,CAAwB/B,KAAK,CAAC,CAAC;UACjC,CAAC,MAAM;YAAA,IAAAiC,sBAAA;YACL,CAAAA,sBAAA,OAAI,CAACtC,eAAe,CAACmC,MAAM,CAAClD,KAAK,CAAC,GAAG,CAAC,CAAC,cAAAqD,sBAAA,eAAvCA,sBAAA,CAAyCjC,KAAK,CAAC,CAAC;UAClD;QACF;QACA,IAAIR,EAAE,CAAChE,GAAG,KAAK,OAAO,IAAIgE,EAAE,CAAChE,GAAG,KAAK,GAAG,EAAE;UACxC,IAAI,CAAC6D,yBAAyB,CAC3BG,EAAE,CAACkC,MAAM,CAAShH,IAAI,EACvBoH,MAAM,CAAEtC,EAAE,CAACkC,MAAM,CAAiBC,YAAY,CAAC,OAAO,CAAC,CACzD,CAAC;QACH;QACA,IAAInC,EAAE,CAAChE,GAAG,KAAK,WAAW,IAAIiG,iBAAiB,EAAE;UAAA,IAAAS,sBAAA;UAC9C1C,EAAE,CAACqB,aAAa,CAAiBsB,SAAS,GAAG,CAAC;UAC/C,CAAAD,sBAAA,OAAI,CAACF,iBAAiB,cAAAE,sBAAA,eAAtBA,sBAAA,CAAwBlC,KAAK,CAAC,CAAC;QACjC;MACF;IAAC;MAAA3E,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAyC,iBAAyBsB,EAAE,EAAE;QAC3B,MAAM4C,QAAQ,GAAG5C,EAAE,CAACkC,MAAM,CAACW,OAAO,CAAC,cAAc,CAAC;QAClD,IAAI,CAAChD,yBAAyB,CAC5B+C,QAAQ,CAAC1H,IAAI,EACboH,MAAM,CAACM,QAAQ,CAACT,YAAY,CAAC,OAAO,CAAC,CACvC,CAAC;MACH;IAAC;MAAAtG,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAA+C,qBAAA,EAA6C;QAC3C,OAAO8D,MAAM,CAACC,IAAI,CAAC,IAAI,CAAC/E,IAAI,CAACgF,MAAM,CAAC,CACjCC,GAAG,CAAEC,QAAQ,IAAK;UACjB,MAAMC,WAAW,GAAG,IAAI,CAACnF,IAAI,CAACgF,MAAM,CAACE,QAAQ,CAAC;UAC9C,MAAME,UAAU,GAAG;YACjBzD,WAAW,EAAEvF,gBAAgB,CAAC+I,WAAW,CAAC;YAC1C3D,OAAO,EAAE0D,QAAQ;YACjBxD,IAAI,EAAEnG,IAAK;AACrB;AACA,sBAAsB,IAAI,CAACyE,IAAK;AAChC,0BAA0BmF,WAAY;AACtC;AACA,WAAW;YACDpD,MAAM,EAAEA,CAAA,KAAM5F,SAAS,CAAC,IAAI,EAAE,gBAAgB,EAAE;cAAE+I;YAAS,CAAC;UAC9D,CAAC;UAED,OAAO;YACL,GAAGE,UAAU;YACbC,OAAO,EAAE,CAACD,UAAU,CAACzD,WAAW,EAAEyD,UAAU,CAAC5D,OAAO;UACtD,CAAC;QACH,CAAC,CAAC,CACD8D,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KACTlJ,4BAA4B,CAC1BiJ,CAAC,CAAC5D,WAAW,EACb6D,CAAC,CAAC7D,WAAW,EACb,IAAI,CAAC3B,IAAI,CAACyF,MAAM,CAACC,QACnB,CACF,CAAC;MACL;IAAC;MAAA7H,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,eAAA8C,sBAAA,EAA8D;QAC5D,OAAO,CACL,IAAI,MAAM,IAAI,CAAC4E,uBAAuB,CAAC,CAAC,CAAC,EACzC,GAAG,IAAI,CAACC,8BAA8B,CAAC,CAAC,EACxC,IAAI,MAAM,IAAI,CAACC,2BAA2B,CAAC,CAAC,CAAC,CAC9C,CAACP,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KACVlJ,4BAA4B,CAC1BiJ,CAAC,CAACF,OAAO,CAACS,IAAI,CAAC,GAAG,CAAC,EACnBN,CAAC,CAACH,OAAO,CAACS,IAAI,CAAC,GAAG,CAAC,EACnB,IAAI,CAAC9F,IAAI,CAACyF,MAAM,CAACC,QACnB,CACF,CAAC;MACH;IAAC;MAAA7H,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,eAAA0H,wBAAA,EAAgE;QAC9D;QACA,MAAMI,iBAAiB,GAAG9J,qBAAqB,CAAC,IAAI,CAAC+D,IAAI,EAAE,QAAQ,CAAC;QAEpE,MAAMC,QAAQ,GAAG,MAAM,IAAI,CAACD,IAAI,CAACgG,sBAAsB,CACrD,OAAO,EACPD,iBACF,CAAC;QAED,MAAME,QAAQ,GAAGF,iBAAiB,CAACd,GAAG,CAAEiB,MAAM,KAAM;UAClDvE,WAAW,EACT,IAAI,CAAC3B,IAAI,CAACC,QAAQ,CAAE,wCAAuCiG,MAAO,EAAC,CAAC,IACpE,IAAI,CAAClG,IAAI,CAACC,QAAQ,CAAC,6CAA6C,EAAE;YAChEiG,MAAM,EAAExJ,YAAY,CAACuD,QAAQ,EAAEiG,MAAM;UACvC,CAAC,CAAC;UACJnE,MAAM,EAAEA,CAAA,KAAM,IAAI,CAAC/B,IAAI,CAACmG,WAAW,CAACD,MAAM,EAAE,QAAQ,CAAC;UACrDzE,QAAQ,EAAEtG,SAAS;UACnByG,YAAY,EAAE,IAAI,CAAC5B,IAAI,CAACC,QAAQ,CAC7B,4CACH;QACF,CAAC,CAAC,CAAC;;QAEH;QACAgG,QAAQ,CAACG,IAAI,CAAC;UACZzE,WAAW,EAAE,IAAI,CAAC3B,IAAI,CAACC,QAAQ,CAC7B,6CACF,CAAC;UACD8B,MAAM,EAAEA,CAAA,KAAM,IAAI,CAAC/B,IAAI,CAACmG,WAAW,CAAC,UAAU,EAAE,eAAe,CAAC;UAChE1E,QAAQ,EAAEtG,SAAS;UACnByG,YAAY,EAAE,IAAI,CAAC5B,IAAI,CAACC,QAAQ,CAC9B,4CACF;QACF,CAAC,CAAC;;QAEF;QACAgG,QAAQ,CAACG,IAAI,CAAC;UACZzE,WAAW,EAAE,IAAI,CAAC3B,IAAI,CAACC,QAAQ,CAC7B,2CACF,CAAC;UACD8B,MAAM,EAAEA,CAAA,KACN,IAAI,CAAC/B,IAAI,CAACmG,WAAW,CAAC,eAAe,EAAE,oBAAoB,CAAC;UAC9D1E,QAAQ,EAAEtG,SAAS;UACnByG,YAAY,EAAE,IAAI,CAAC5B,IAAI,CAACC,QAAQ,CAC9B,4CACF;QACF,CAAC,CAAC;;QAEF;QACAgG,QAAQ,CAACG,IAAI,CAAC;UACZzE,WAAW,EAAE,IAAI,CAAC3B,IAAI,CAACC,QAAQ,CAC7B,0CACF,CAAC;UACD8B,MAAM,EAAEA,CAAA,KAAM,IAAI,CAAC/B,IAAI,CAACmG,WAAW,CAAC,eAAe,EAAE,YAAY,CAAC;UAClE1E,QAAQ,EAAEtG,SAAS;UACnByG,YAAY,EAAE,IAAI,CAAC5B,IAAI,CAACC,QAAQ,CAC9B,4CACF;QACF,CAAC,CAAC;QAEF,OAAOgG,QAAQ,CAAChB,GAAG,CAAEoB,OAAO,KAAM;UAChC,GAAGA,OAAO;UACVlJ,WAAW,EAAE,QAAQ;UACrBkI,OAAO,EAAE,CAAE,GAAEgB,OAAO,CAACzE,YAAa,IAAGyE,OAAO,CAAC1E,WAAY,EAAC;QAC5D,CAAC,CAAC,CAAC;MACL;IAAC;MAAA9D,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAA2H,+BAAA,EAAwD;QACtD,MAAMU,aAAa,GAAG,CAAC,SAAS,EAAE,MAAM,CAAU;QAElD,OAAOA,aAAa,CAACrB,GAAG,CAAElD,MAAM,IAAK;UACnC,MAAM5E,WAAuC,GAAG,gBAAgB;UAEhE,MAAMD,IAAI,GAAG;YACXyE,WAAW,EAAE,IAAI,CAAC3B,IAAI,CAACC,QAAQ,CAC7B,6DAA6D,EAC7D;cACE8B,MAAM,EAAE,IAAI,CAAC/B,IAAI,CAACC,QAAQ,CACvB,gDAA+C8B,MAAO,EACzD;YACF,CACF,CAAC;YACDN,QAAQ,EAAErG,gBAAgB;YAC1BwG,YAAY,EAAE,IAAI,CAAC5B,IAAI,CAACC,QAAQ,CAC7B,uCAAsC9C,WAAY,EACrD,CAAC;YACDA,WAAW;YACX4E,MAAM,EAAE,MAAAA,CAAA,KAAY;cAClB,MAAMwE,SAAS,GAAG,MAAMvJ,sBAAsB,CAAC,IAAI,EAAE;gBACnDwJ,KAAK,EAAE,IAAI,CAACxG,IAAI,CAACC,QAAQ,CACtB,sBAAqB8B,MAAO,gBAC/B,CAAC;gBACD0E,IAAI,EAAE,IAAI,CAACzG,IAAI,CAACC,QAAQ,CACrB,sBAAqB8B,MAAO,sBAC/B,CAAC;gBACD2E,WAAW,EAAE,IAAI,CAAC1G,IAAI,CAACC,QAAQ,CAC5B,sBAAqB8B,MAAO,iBAC/B,CAAC;gBACD4E,WAAW,EAAE;cACf,CAAC,CAAC;cACF,IAAI,CAACJ,SAAS,EAAE;gBACd;cACF;cACA,IAAI,CAACvG,IAAI,CAACmG,WAAW,CAAC,eAAe,EAAEpE,MAAM,CAAC;YAChD;UACF,CAAC;UAED,OAAO;YACL,GAAG7E,IAAI;YACPmI,OAAO,EAAE,CAAE,GAAEnI,IAAI,CAAC0E,YAAa,IAAG1E,IAAI,CAACyE,WAAY,EAAC;UACtD,CAAC;QACH,CAAC,CAAC;MACJ;IAAC;MAAA9D,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,eAAA4H,4BAAA,EAAoE;QAClE,MAAMe,UAAU,GAAG,IAAI,CAACC,gCAAgC,CAAC,CAAC;QAC1D,MAAMC,YAAY,GAAG,IAAI,CAACC,wCAAwC,CAAC,CAAC;QACpE,MAAMC,eAAwC,GAAG,EAAE;QACnD,IAAI9K,iBAAiB,CAAC,IAAI,CAAC8D,IAAI,EAAE,QAAQ,CAAC,EAAE;UAC1C,MAAMiH,UAAU,GAAG,MAAMxK,qBAAqB,CAAC,IAAI,CAACuD,IAAI,CAAC;UACzDgH,eAAe,CAACZ,IAAI,CAAC;YACnBc,IAAI,EAAE,eAAe;YACrBvF,WAAW,EAAE,IAAI,CAAC3B,IAAI,CAACC,QAAQ,CAC7B,sDACF;UACF,CAAC,CAAC;UACF+G,eAAe,CAACZ,IAAI,CAAC;YACnBc,IAAI,EAAE,mBAAmB;YACzBvF,WAAW,EAAE,IAAI,CAAC3B,IAAI,CAACC,QAAQ,CAC7B,0DACF;UACF,CAAC,CAAC;UACF,KAAK,MAAMkH,KAAK,IAAIF,UAAU,CAACG,MAAM,CAACzH,MAAM,CAAE4F,CAAC,IAAKA,CAAC,CAAC8B,OAAO,CAAC,EAAE;YAC9DL,eAAe,CAACZ,IAAI,CAAC;cACnBc,IAAI,EAAG,iBAAgBC,KAAK,CAACG,IAAK,EAAC;cACnC3F,WAAW,EAAE,IAAI,CAAC3B,IAAI,CAACC,QAAQ,CAC7B,qDAAqD,EACrD;gBAAEkH,KAAK,EAAEA,KAAK,CAACI;cAAK,CACtB;YACF,CAAC,CAAC;UACJ;QACF;QAEA,OAAO,IAAI,CAACC,2BAA2B,CAAC,CACtC,GAAGZ,UAAU,EACb,GAAGE,YAAY,EACf,GAAGE,eAAe,CACnB,CAAC;MACJ;IAAC;MAAAnJ,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAA4I,iCAAA,EAAoE;QAClE,OAAO/B,MAAM,CAACC,IAAI,CAAC,IAAI,CAAC/E,IAAI,CAACyH,MAAM,CAAC,CACjC9H,MAAM,CAAE+H,QAAQ,IAAKA,QAAQ,KAAK,cAAc,CAAC,CACjDzC,GAAG,CAAEyC,QAAQ,IAAK;UACjB,MAAMC,KAAK,GAAG,IAAI,CAAC3H,IAAI,CAACyH,MAAM,CAACC,QAAQ,CAAC;UACxC,MAAME,cAAc,GAAGjL,0BAA0B,CAACgL,KAAK,CAAC;UAExD,MAAMhG,WAAW,GACf,IAAI,CAAC3B,IAAI,CAACC,QAAQ,CAAC2H,cAAc,CAAC,IAAID,KAAK,CAACnB,KAAK,IAAImB,KAAK,CAACE,QAAQ;UAErE,OAAO;YACLlG,WAAW;YACXuF,IAAI,EAAG,IAAGS,KAAK,CAACE,QAAS;UAC3B,CAAC;QACH,CAAC,CAAC;MACN;IAAC;MAAAhK,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAA8I,yCAAA,EAA4E;QAC1E,MAAMnH,KAAuB,GAAG,EAAE;QAElC,KAAK,MAAMkI,UAAU,IAAIhD,MAAM,CAACC,IAAI,CAACnI,cAAc,CAAC,EAAE;UACpD,KAAK,MAAMmL,IAAI,IAAInL,cAAc,CAACkL,UAAU,CAAC,EAAE;YAC7C,IAAI,CAAC9L,WAAW,CAAC,IAAI,CAACgE,IAAI,EAAE+H,IAAI,CAAC,EAAE;cACjC;YACF;YAEA,MAAMC,IAAI,GAAG,IAAI,CAACC,4BAA4B,CAACF,IAAI,CAAC;YAEpD,IAAI,CAACC,IAAI,EAAE;cACT;YACF;YACA;YACA,IAAIpI,KAAK,CAACsI,IAAI,CAAEjH,CAAC,IAAKA,CAAC,CAACiG,IAAI,KAAKc,IAAI,CAACd,IAAI,CAAC,EAAE;cAC3C;YACF;YAEAtH,KAAK,CAACwG,IAAI,CAAC4B,IAAI,CAAC;UAClB;QACF;QAEA,OAAOpI,KAAK;MACd;IAAC;MAAA/B,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAgK,6BACEF,IAAoB,EACQ;QAC5B,MAAMb,IAAI,GAAGa,IAAI,CAACb,IAAI,CAACvD,SAAS,CAAC,CAAC,CAAC;QAEnC,IAAI4D,IAAI,GAAGL,IAAI,CAACvD,SAAS,CAACuD,IAAI,CAACiB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAChDZ,IAAI,GAAGA,IAAI,CAACY,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAGZ,IAAI,CAAC5D,SAAS,CAAC,CAAC,EAAE4D,IAAI,CAACY,OAAO,CAAC,GAAG,CAAC,CAAC,GAAGZ,IAAI;QAE3E,MAAMa,OAAO,GACVb,IAAI,IACH,IAAI,CAACvH,IAAI,CAACC,QAAQ,CACf,4CAA2CsH,IAAK,EACnD,CAAC;QACH;QACCQ,IAAI,CAACH,cAAc,IAAI,IAAI,CAAC5H,IAAI,CAACC,QAAQ,CAAC8H,IAAI,CAACH,cAAc,CAAE;QAElE,IAAIQ,OAAO,EAAE;UACX,OAAO;YAAE,GAAGL,IAAI;YAAEpG,WAAW,EAAEyG;UAAQ,CAAC;QAC1C;QAEA,OAAOhL,SAAS;MAClB;IAAC;MAAAS,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAuJ,4BACE5H,KAA8B,EACf;QACf,OAAOA,KAAK,CAACqF,GAAG,CAAE/H,IAAI,IAAK;UACzB,MAAMC,WAAuC,GAAG,YAAY;UAE5D,MAAMkL,OAAO,GAAG;YACd,GAAGnL,IAAI;YACPuE,QAAQ,EAAExG,QAAQ;YAClB2G,YAAY,EAAE,IAAI,CAAC5B,IAAI,CAACC,QAAQ,CAC7B,uCAAsC9C,WAAY,EACrD,CAAC;YACD4E,MAAM,EAAEA,CAAA,KAAM1F,QAAQ,CAACa,IAAI,CAACgK,IAAI;UAClC,CAAC;UAED,OAAO;YACL,GAAGmB,OAAO;YACVhD,OAAO,EAAE,CAAE,GAAEgD,OAAO,CAACzG,YAAa,IAAGyG,OAAO,CAAC1G,WAAY,EAAC,CAAC;YAC3DxE;UACF,CAAC;QACH,CAAC,CAAC;MACJ;IAAC;MAAAU,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAK,uBAAA,EAAiC;QAC/B,OAAO,IAAI,CAACS,OAAO,GAAG,CAAC,IAAI,CAACX,YAAY,GAAG,KAAK;MAClD;IAAC;MAAAP,IAAA;MAAAG,GAAA;MAAAC,MAAA;QAAA,OAEsBlC,UAAU,CAC/B,CAAC6D,KAAqB,EAAED,MAAc,KACpCpD,eAAe,CAAeoD,MAAM,CAAC2I,QAAQ,CAAC,CAAC,EAAE1I,KAAK,CAC1D,CAAC;MAAA;IAAA;MAAA/B,IAAA;MAAA0K,MAAA;MAAAvK,GAAA;MAAAC,KAAA,EAED,SAAAuK,OAAA,EAAoB;QAClB,OAAO,CACL1L,gBAAgB,EAChBD,aAAa,EACbvxxB2BD,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}