{"ast":null,"code":"import { getWeekdays } from 'nodemod/dist/calendar/helpers/get-weekdays.js';\nimport { toUTCDate } from 'nodemod/dist/calendar/helpers/to-utc-date.js';\nimport { calendar } from 'nodemod/dist/calendar/index.js';\nexport function getMultiCalendars(options) {\n  const {\n    dayFormat,\n    fullDateFormat,\n    locale,\n    longWeekdayFormat,\n    narrowWeekdayFormat,\n    selectedDate,\n    disabledDates,\n    disabledDays,\n    firstDayOfWeek,\n    max,\n    min,\n    showWeekNumber,\n    weekLabel,\n    weekNumberType\n  } = options;\n  const minTime = min == null ? Number.MIN_SAFE_INTEGER : +min;\n  const maxTime = max == null ? Number.MAX_SAFE_INTEGER : +max;\n  const weekdays = getWeekdays({\n    longWeekdayFormat,\n    narrowWeekdayFormat,\n    firstDayOfWeek,\n    showWeekNumber,\n    weekLabel\n  });\n  const getKey = date => [locale, date.toJSON(), disabledDates === null || disabledDates === void 0 ? void 0 : disabledDates.join('_'), disabledDays === null || disabledDays === void 0 ? void 0 : disabledDays.join('_'), firstDayOfWeek, max === null || max === void 0 ? void 0 : max.toJSON(), min === null || min === void 0 ? void 0 : min.toJSON(), showWeekNumber, weekLabel, weekNumberType].filter(Boolean).join(':');\n  const ify = selectedDate.getUTCFullYear();\n  const im = selectedDate.getUTCMonth();\n  const calendarsList = [-1, 0, 1].map(n => {\n    const firstDayOfMonth = toUTCDate(ify, im + n, 1);\n    const lastDayOfMonthTime = +toUTCDate(ify, im + n + 1, 0);\n    const key = getKey(firstDayOfMonth);\n    if (lastDayOfMonthTime < minTime || +firstDayOfMonth > maxTime) {\n      return {\n        key,\n        calendar: [],\n        disabledDatesSet: new Set(),\n        disabledDaysSet: new Set()\n      };\n    }\n    const calendarDays = calendar({\n      dayFormat,\n      fullDateFormat,\n      locale,\n      disabledDates,\n      disabledDays,\n      firstDayOfWeek,\n      max,\n      min,\n      showWeekNumber,\n      weekLabel,\n      weekNumberType,\n      date: firstDayOfMonth\n    });\n    return {\n      ...calendarDays,\n      key\n    };\n  });\n  const calendars = [];\n  const $disabledDatesSet = new Set();\n  const $disabledDaysSet = new Set();\n  for (const cal of calendarsList) {\n    const {\n      disabledDatesSet,\n      disabledDaysSet,\n      ...rest\n    } = cal;\n    if (rest.calendar.length > 0) {\n      if (disabledDaysSet.size > 0) {\n        for (const o of disabledDaysSet) $disabledDaysSet.add(o);\n      }\n      if (disabledDatesSet.size > 0) {\n        for (const o of disabledDatesSet) $disabledDatesSet.add(o);\n      }\n    }\n    calendars.push(rest);\n  }\n  return {\n    calendars,\n    weekdays,\n    disabledDatesSet: $disabledDatesSet,\n    disabledDaysSet: $disabledDaysSet,\n    key: getKey(selectedDate)\n  };\n}","map":{"version":3,"names":["getWeekdays","toUTCDate","calendar","getMultiCalendars","options","dayFormat","fullDateFormat","locale","longWeekdayFormat","narrowWeekdayFormat","selectedDate","disabledDates","disabledDays","firstDayOfWeek","max","min","showWeekNumber","weekLabel","weekNumberType","minTime","Number","MIN_SAFE_INTEGER","maxTime","MAX_SAFE_INTEGER","weekdays","getKey","date","toJSON","join","filter","Boolean","ify","getUTCFullYear","im","getUTCMonth","calendarsList","map","n","firstDayOfMonth","lastDayOfMonthTime","key","disabledDatesSet","Set","disabledDaysSet","calendarDays","calendars","$disabledDatesSet","$disabledDaysSet","cal","rest","length","size","o","add","push"],"sources":["/Users/sercanardil/Desktop/frontend/node_modules/app-datepicker/dist/helpers/get-multi-calendars.js"],"sourcesContent":["import { getWeekdays } from 'nodemod/dist/calendar/helpers/get-weekdays.js';\nimport { toUTCDate } from 'nodemod/dist/calendar/helpers/to-utc-date.js';\nimport { calendar } from 'nodemod/dist/calendar/index.js';\nexport function getMultiCalendars(options) {\n    const { dayFormat, fullDateFormat, locale, longWeekdayFormat, narrowWeekdayFormat, selectedDate, disabledDates, disabledDays, firstDayOfWeek, max, min, showWeekNumber, weekLabel, weekNumberType, } = options;\n    const minTime = min == null ? Number.MIN_SAFE_INTEGER : +min;\n    const maxTime = max == null ? Number.MAX_SAFE_INTEGER : +max;\n    const weekdays = getWeekdays({\n        longWeekdayFormat,\n        narrowWeekdayFormat,\n        firstDayOfWeek,\n        showWeekNumber,\n        weekLabel,\n    });\n    const getKey = (date) => [\n        locale,\n        date.toJSON(),\n        disabledDates === null || disabledDates === void 0 ? void 0 : disabledDates.join('_'),\n        disabledDays === null || disabledDays === void 0 ? void 0 : disabledDays.join('_'),\n        firstDayOfWeek,\n        max === null || max === void 0 ? void 0 : max.toJSON(),\n        min === null || min === void 0 ? void 0 : min.toJSON(),\n        showWeekNumber,\n        weekLabel,\n        weekNumberType,\n    ].filter(Boolean).join(':');\n    const ify = selectedDate.getUTCFullYear();\n    const im = selectedDate.getUTCMonth();\n    const calendarsList = [-1, 0, 1].map((n) => {\n        const firstDayOfMonth = toUTCDate(ify, im + n, 1);\n        const lastDayOfMonthTime = +toUTCDate(ify, im + n + 1, 0);\n        const key = getKey(firstDayOfMonth);\n        if (lastDayOfMonthTime < minTime || +firstDayOfMonth > maxTime) {\n            return {\n                key,\n                calendar: [],\n                disabledDatesSet: new Set(),\n                disabledDaysSet: new Set(),\n            };\n        }\n        const calendarDays = calendar({\n            dayFormat,\n            fullDateFormat,\n            locale,\n            disabledDates,\n            disabledDays,\n            firstDayOfWeek,\n            max,\n            min,\n            showWeekNumber,\n            weekLabel,\n            weekNumberType,\n            date: firstDayOfMonth,\n        });\n        return { ...calendarDays, key };\n    });\n    const calendars = [];\n    const $disabledDatesSet = new Set();\n    const $disabledDaysSet = new Set();\n    for (const cal of calendarsList) {\n        const { disabledDatesSet, disabledDaysSet, ...rest } = cal;\n        if (rest.calendar.length > 0) {\n            if (disabledDaysSet.size > 0) {\n                for (const o of disabledDaysSet)\n                    $disabledDaysSet.add(o);\n            }\n            if (disabledDatesSet.size > 0) {\n                for (const o of disabledDatesSet)\n                    $disabledDatesSet.add(o);\n            }\n        }\n        calendars.push(rest);\n    }\n    return {\n        calendars,\n        weekdays,\n        disabledDatesSet: $disabledDatesSet,\n        disabledDaysSet: $disabledDaysSet,\n        key: getKey(selectedDate),\n    };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}