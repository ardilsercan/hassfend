{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport { property } from \"lit/decorators\";\nexport const SubscribeMixin = superClass => {\n  let SubscribeClass = _decorate(null, function (_initialize, _superClass) {\n    class SubscribeClass extends _superClass {\n      constructor(...args) {\n        super(...args);\n        _initialize(this);\n      }\n    }\n    return {\n      F: SubscribeClass,\n      d: [{\n        kind: \"field\",\n        decorators: [property({\n          attribute: false\n        })],\n        key: \"hass\",\n        value: void 0\n      }, {\n        kind: \"field\",\n        key: \"hassSubscribeRequiredHostProps\",\n        value: void 0\n      }, {\n        kind: \"field\",\n        key: \"__unsubs\",\n        value: void 0\n      }, {\n        kind: \"method\",\n        key: \"connectedCallback\",\n        value:\n        // we wait with subscribing till these properties are set on the host element\n\n        function connectedCallback() {\n          _get(_getPrototypeOf(SubscribeClass.prototype), \"connectedCallback\", this).call(this);\n          this.__checkSubscribed();\n        }\n      }, {\n        kind: \"method\",\n        key: \"disconnectedCallback\",\n        value: function disconnectedCallback() {\n          _get(_getPrototypeOf(SubscribeClass.prototype), \"disconnectedCallback\", this).call(this);\n          if (this.__unsubs) {\n            while (this.__unsubs.length) {\n              const unsub = this.__unsubs.pop();\n              if (unsub instanceof Promise) {\n                unsub.then(unsubFunc => unsubFunc());\n              } else {\n                unsub();\n              }\n            }\n            this.__unsubs = undefined;\n          }\n        }\n      }, {\n        kind: \"method\",\n        key: \"updated\",\n        value: function updated(changedProps) {\n          _get(_getPrototypeOf(SubscribeClass.prototype), \"updated\", this).call(this, changedProps);\n          if (changedProps.has(\"hass\")) {\n            this.__checkSubscribed();\n            return;\n          }\n          if (!this.hassSubscribeRequiredHostProps) {\n            return;\n          }\n          for (const key of changedProps.keys()) {\n            if (this.hassSubscribeRequiredHostProps.includes(key)) {\n              this.__checkSubscribed();\n              return;\n            }\n          }\n        }\n      }, {\n        kind: \"method\",\n        key: \"hassSubscribe\",\n        value: function hassSubscribe() {\n          return [];\n        }\n      }, {\n        kind: \"method\",\n        key: \"__checkSubscribed\",\n        value: function __checkSubscribed() {\n          var _this$hassSubscribeRe;\n          if (this.__unsubs !== undefined || !this.isConnected || this.hass === undefined || (_this$hassSubscribeRe = this.hassSubscribeRequiredHostProps) !== null && _this$hassSubscribeRe !== void 0 && _this$hassSubscribeRe.some(prop => this[prop] === undefined)) {\n            return;\n          }\n          this.__unsubs = this.hassSubscribe();\n        }\n      }]\n    };\n  }, superClass);\n  return SubscribeClass;\n};","map":{"version":3,"names":["property","SubscribeMixin","superClass","SubscribeClass","_decorate","_initialize","_superClass","constructor","args","F","d","kind","decorators","attribute","key","value","connectedCallback","_get","_getPrototypeOf","prototype","call","__checkSubscribed","disconnectedCallback","__unsubs","length","unsub","pop","Promise","then","unsubFunc","undefined","updated","changedProps","has","hassSubscribeRequiredHostProps","keys","includes","hassSubscribe","_this$hassSubscribeRe","isConnected","hass","some","prop"],"sources":["/Users/sercanardil/Desktop/frontend/src/mixins/subscribe-mixin.ts"],"sourcesContent":["import { UnsubscribeFunc } from \"home-assistant-js-websocket\";\nimport { PropertyValues, ReactiveElement } from \"lit\";\nimport { property } from \"lit/decorators\";\nimport { Constructor, HomeAssistant } from \"../types\";\n\nexport interface HassSubscribeElement {\n  hassSubscribe(): UnsubscribeFunc[];\n}\n\nexport const SubscribeMixin = <T extends Constructor<ReactiveElement>>(\n  superClass: T\n) => {\n  class SubscribeClass extends superClass {\n    @property({ attribute: false }) public hass?: HomeAssistant;\n\n    // we wait with subscribing till these properties are set on the host element\n    protected hassSubscribeRequiredHostProps?: string[];\n\n    private __unsubs?: Array<UnsubscribeFunc | Promise<UnsubscribeFunc>>;\n\n    public connectedCallback() {\n      super.connectedCallback();\n      this.__checkSubscribed();\n    }\n\n    public disconnectedCallback() {\n      super.disconnectedCallback();\n      if (this.__unsubs) {\n        while (this.__unsubs.length) {\n          const unsub = this.__unsubs.pop()!;\n          if (unsub instanceof Promise) {\n            unsub.then((unsubFunc) => unsubFunc());\n          } else {\n            unsub();\n          }\n        }\n        this.__unsubs = undefined;\n      }\n    }\n\n    protected updated(changedProps: PropertyValues) {\n      super.updated(changedProps);\n      if (changedProps.has(\"hass\")) {\n        this.__checkSubscribed();\n        return;\n      }\n      if (!this.hassSubscribeRequiredHostProps) {\n        return;\n      }\n      for (const key of changedProps.keys()) {\n        if (this.hassSubscribeRequiredHostProps.includes(key as string)) {\n          this.__checkSubscribed();\n          return;\n        }\n      }\n    }\n\n    protected hassSubscribe(): Array<\n      UnsubscribeFunc | Promise<UnsubscribeFunc>\n    > {\n      return [];\n    }\n\n    private __checkSubscribed(): void {\n      if (\n        this.__unsubs !== undefined ||\n        !(this as unknown as Element).isConnected ||\n        this.hass === undefined ||\n        this.hassSubscribeRequiredHostProps?.some(\n          (prop) => this[prop] === undefined\n        )\n      ) {\n        return;\n      }\n      this.__unsubs = this.hassSubscribe();\n    }\n  }\n  return SubscribeClass;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}