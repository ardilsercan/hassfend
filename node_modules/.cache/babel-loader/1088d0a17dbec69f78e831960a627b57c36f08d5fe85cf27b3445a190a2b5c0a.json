{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport { html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { assert } from \"superstruct\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { computeDomain } from \"../../../../common/entity/compute_domain\";\nimport \"../../../../components/ha-form/ha-form\";\nimport { entitiesConfigStruct } from \"../structs/entities-struct\";\nconst SecondaryInfoValues = {\n  none: {},\n  \"entity-id\": {},\n  \"last-changed\": {},\n  \"last-updated\": {},\n  \"last-triggered\": {\n    domains: [\"automation\", \"script\"]\n  },\n  position: {\n    domains: [\"cover\"]\n  },\n  \"tilt-position\": {\n    domains: [\"cover\"]\n  },\n  brightness: {\n    domains: [\"light\"]\n  }\n};\nexport let HuiGenericEntityRowEditor = _decorate([customElement(\"hui-generic-entity-row-editor\")], function (_initialize, _LitElement) {\n  class HuiGenericEntityRowEditor extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HuiGenericEntityRowEditor,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_config\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"setConfig\",\n      value: function setConfig(config) {\n        assert(config, entitiesConfigStruct);\n        this._config = config;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_schema\",\n      value() {\n        return memoizeOne((entity, localize) => {\n          const domain = computeDomain(entity);\n          return [{\n            name: \"entity\",\n            required: true,\n            selector: {\n              entity: {}\n            }\n          }, {\n            type: \"grid\",\n            name: \"\",\n            schema: [{\n              name: \"name\",\n              selector: {\n                text: {}\n              }\n            }, {\n              name: \"icon\",\n              selector: {\n                icon: {}\n              },\n              context: {\n                icon_entity: \"entity\"\n              }\n            }]\n          }, {\n            name: \"secondary_info\",\n            selector: {\n              select: {\n                options: Object.keys(SecondaryInfoValues).filter(info => !(\"domains\" in SecondaryInfoValues[info]) || \"domains\" in SecondaryInfoValues[info] && SecondaryInfoValues[info].domains.includes(domain)).map(info => ({\n                  value: info,\n                  label: localize(`ui.panel.lovelace.editor.card.entities.secondary_info_values.${info}`)\n                }))\n              }\n            }\n          }];\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this.hass || !this._config) {\n          return nothing;\n        }\n        const schema = this._schema(this._config.entity, this.hass.localize);\n        return html`\n      <ha-form\n        .hass=${this.hass}\n        .data=${this._config}\n        .schema=${schema}\n        .computeLabel=${this._computeLabelCallback}\n        @value-changed=${this._valueChanged}\n      ></ha-form>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_valueChanged\",\n      value: function _valueChanged(ev) {\n        fireEvent(this, \"config-changed\", {\n          config: ev.detail.value\n        });\n      }\n    }, {\n      kind: \"field\",\n      key: \"_computeLabelCallback\",\n      value() {\n        return schema => {\n          switch (schema.name) {\n            case \"secondary_info\":\n              return this.hass.localize(`ui.panel.lovelace.editor.card.entity-row.${schema.name}`);\n            default:\n              return this.hass.localize(`ui.panel.lovelace.editor.card.generic.${schema.name}`);\n          }\n        };\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["html","LitElement","nothing","customElement","property","state","memoizeOne","assert","fireEvent","computeDomain","entitiesConfigStruct","SecondaryInfoValues","none","domains","position","brightness","HuiGenericEntityRowEditor","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","setConfig","config","_config","entity","localize","domain","name","required","selector","type","schema","text","icon","context","icon_entity","select","options","Object","keys","filter","info","includes","map","label","render","hass","_schema","_computeLabelCallback","_valueChanged","ev","detail"],"sources":["/Users/sercanardil/Desktop/frontend/src/panels/lovelace/editor/config-elements/hui-generic-entity-row-editor.ts"],"sourcesContent":["import { html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { assert } from \"superstruct\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { computeDomain } from \"../../../../common/entity/compute_domain\";\nimport type { LocalizeFunc } from \"../../../../common/translations/localize\";\nimport \"../../../../components/ha-form/ha-form\";\nimport type { SchemaUnion } from \"../../../../components/ha-form/types\";\nimport type { HomeAssistant } from \"../../../../types\";\nimport type { EntitiesCardEntityConfig } from \"../../cards/types\";\nimport type { LovelaceRowEditor } from \"../../types\";\nimport { entitiesConfigStruct } from \"../structs/entities-struct\";\n\nconst SecondaryInfoValues = {\n  none: {},\n  \"entity-id\": {},\n  \"last-changed\": {},\n  \"last-updated\": {},\n  \"last-triggered\": { domains: [\"automation\", \"script\"] },\n  position: { domains: [\"cover\"] },\n  \"tilt-position\": { domains: [\"cover\"] },\n  brightness: { domains: [\"light\"] },\n} as const;\n\n@customElement(\"hui-generic-entity-row-editor\")\nexport class HuiGenericEntityRowEditor\n  extends LitElement\n  implements LovelaceRowEditor\n{\n  @property({ attribute: false }) public hass?: HomeAssistant;\n\n  @state() private _config?: EntitiesCardEntityConfig;\n\n  public setConfig(config: EntitiesCardEntityConfig): void {\n    assert(config, entitiesConfigStruct);\n    this._config = config;\n  }\n\n  private _schema = memoizeOne((entity: string, localize: LocalizeFunc) => {\n    const domain = computeDomain(entity);\n\n    return [\n      { name: \"entity\", required: true, selector: { entity: {} } },\n      {\n        type: \"grid\",\n        name: \"\",\n        schema: [\n          { name: \"name\", selector: { text: {} } },\n          {\n            name: \"icon\",\n            selector: {\n              icon: {},\n            },\n            context: {\n              icon_entity: \"entity\",\n            },\n          },\n        ],\n      },\n      {\n        name: \"secondary_info\",\n        selector: {\n          select: {\n            options: (\n              Object.keys(SecondaryInfoValues).filter(\n                (info) =>\n                  !(\"domains\" in SecondaryInfoValues[info]) ||\n                  (\"domains\" in SecondaryInfoValues[info] &&\n                    SecondaryInfoValues[info].domains!.includes(domain))\n              ) as Array<keyof typeof SecondaryInfoValues>\n            ).map((info) => ({\n              value: info,\n              label: localize(\n                `ui.panel.lovelace.editor.card.entities.secondary_info_values.${info}`\n              ),\n            })),\n          },\n        },\n      },\n    ] as const;\n  });\n\n  protected render() {\n    if (!this.hass || !this._config) {\n      return nothing;\n    }\n\n    const schema = this._schema(this._config.entity, this.hass.localize);\n\n    return html`\n      <ha-form\n        .hass=${this.hass}\n        .data=${this._config}\n        .schema=${schema}\n        .computeLabel=${this._computeLabelCallback}\n        @value-changed=${this._valueChanged}\n      ></ha-form>\n    `;\n  }\n\n  private _valueChanged(ev: CustomEvent): void {\n    fireEvent(this, \"config-changed\", { config: ev.detail.value });\n  }\n\n  private _computeLabelCallback = (\n    schema: SchemaUnion<ReturnType<typeof this._schema>>\n  ) => {\n    switch (schema.name) {\n      case \"secondary_info\":\n        return this.hass!.localize(\n          `ui.panel.lovelace.editor.card.entity-row.${schema.name}`\n        );\n      default:\n        return this.hass!.localize(\n          `ui.panel.lovelace.editor.card.generic.${schema.name}`\n        );\n    }\n  };\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-generic-entity-row-editor\": HuiGenericEntityRowEditor;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}