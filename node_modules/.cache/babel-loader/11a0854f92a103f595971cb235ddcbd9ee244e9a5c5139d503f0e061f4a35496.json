{"ast":null,"code":"/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\nimport { addHasRemoveClass, BaseElement } from '@material/mwc-base/base-element.js';\nimport { supportsPassiveEventListener } from '@material/mwc-base/utils.js';\nimport { strings } from '@material/top-app-bar/constants.js';\nimport { html } from 'lit';\nimport { property, query } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nexport const passiveEventOptionsIfSupported = supportsPassiveEventListener ? {\n  passive: true\n} : undefined;\nexport class TopAppBarBaseBase extends BaseElement {\n  constructor() {\n    super(...arguments);\n    this.centerTitle = false;\n    this.handleTargetScroll = () => {\n      this.mdcFoundation.handleTargetScroll();\n    };\n    this.handleNavigationClick = () => {\n      this.mdcFoundation.handleNavigationClick();\n    };\n  }\n  get scrollTarget() {\n    return this._scrollTarget || window;\n  }\n  set scrollTarget(value) {\n    this.unregisterScrollListener();\n    const old = this.scrollTarget;\n    this._scrollTarget = value;\n    this.updateRootPosition();\n    this.requestUpdate('scrollTarget', old);\n    this.registerScrollListener();\n  }\n  updateRootPosition() {\n    if (this.mdcRoot) {\n      const windowScroller = this.scrollTarget === window;\n      // we add support for top-app-bar's tied to an element scroller.\n      this.mdcRoot.style.position = windowScroller ? '' : 'absolute';\n    }\n  }\n  render() {\n    // clang-format off\n    let title = html`<span class=\"mdc-top-app-bar__title\"><slot name=\"title\"></slot></span>`;\n    if (this.centerTitle) {\n      title = html`<section class=\"mdc-top-app-bar__section mdc-top-app-bar__section--align-center\">${title}</section>`;\n    }\n    // clang-format on\n    return html`\n      <header class=\"mdc-top-app-bar ${classMap(this.barClasses())}\">\n      <div class=\"mdc-top-app-bar__row\">\n        <section class=\"mdc-top-app-bar__section mdc-top-app-bar__section--align-start\" id=\"navigation\">\n          <slot name=\"navigationIcon\"\n            @click=${this.handleNavigationClick}></slot>\n          ${this.centerTitle ? null : title}\n        </section>\n        ${this.centerTitle ? title : null}\n        <section class=\"mdc-top-app-bar__section mdc-top-app-bar__section--align-end\" id=\"actions\" role=\"toolbar\">\n          <slot name=\"actionItems\"></slot>\n        </section>\n      </div>\n    </header>\n    <div class=\"${classMap(this.contentClasses())}\">\n      <slot></slot>\n    </div>\n    `;\n  }\n  createAdapter() {\n    return Object.assign(Object.assign({}, addHasRemoveClass(this.mdcRoot)), {\n      setStyle: (property, value) => this.mdcRoot.style.setProperty(property, value),\n      getTopAppBarHeight: () => this.mdcRoot.clientHeight,\n      notifyNavigationIconClicked: () => {\n        this.dispatchEvent(new Event(strings.NAVIGATION_EVENT, {\n          bubbles: true,\n          cancelable: true\n        }));\n      },\n      getViewportScrollY: () => this.scrollTarget instanceof Window ? this.scrollTarget.pageYOffset : this.scrollTarget.scrollTop,\n      getTotalActionItems: () => this._actionItemsSlot.assignedNodes({\n        flatten: true\n      }).length\n    });\n  }\n  registerListeners() {\n    this.registerScrollListener();\n  }\n  unregisterListeners() {\n    this.unregisterScrollListener();\n  }\n  registerScrollListener() {\n    this.scrollTarget.addEventListener('scroll', this.handleTargetScroll, passiveEventOptionsIfSupported);\n  }\n  unregisterScrollListener() {\n    this.scrollTarget.removeEventListener('scroll', this.handleTargetScroll);\n  }\n  firstUpdated() {\n    super.firstUpdated();\n    this.updateRootPosition();\n    this.registerListeners();\n  }\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.unregisterListeners();\n  }\n}\n__decorate([query('.mdc-top-app-bar')], TopAppBarBaseBase.prototype, \"mdcRoot\", void 0);\n__decorate([query('slot[name=\"actionItems\"]')], TopAppBarBaseBase.prototype, \"_actionItemsSlot\", void 0);\n__decorate([property({\n  type: Boolean\n})], TopAppBarBaseBase.prototype, \"centerTitle\", void 0);\n__decorate([property({\n  type: Object\n})], TopAppBarBaseBase.prototype, \"scrollTarget\", null);","map":{"version":3,"names":["addHasRemoveClass","BaseElement","supportsPassiveEventListener","strings","html","property","query","classMap","passiveEventOptionsIfSupported","passive","undefined","TopAppBarBaseBase","constructor","centerTitle","handleTargetScroll","mdcFoundation","handleNavigationClick","scrollTarget","_scrollTarget","window","value","unregisterScrollListener","old","updateRootPosition","requestUpdate","registerScrollListener","mdcRoot","windowScroller","style","position","render","title","barClasses","contentClasses","createAdapter","Object","assign","setStyle","setProperty","getTopAppBarHeight","clientHeight","notifyNavigationIconClicked","dispatchEvent","Event","NAVIGATION_EVENT","bubbles","cancelable","getViewportScrollY","Window","pageYOffset","scrollTop","getTotalActionItems","_actionItemsSlot","assignedNodes","flatten","length","registerListeners","unregisterListeners","addEventListener","removeEventListener","firstUpdated","disconnectedCallback","__decorate","type","Boolean"],"sources":["mwc-top-app-bar-base-base.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\n\nimport {addHasRemoveClass, BaseElement} from '@material/mwc-base/base-element.js';\nimport {supportsPassiveEventListener} from '@material/mwc-base/utils.js';\nimport {MDCTopAppBarAdapter} from '@material/top-app-bar/adapter.js';\nimport {strings} from '@material/top-app-bar/constants.js';\nimport MDCTopAppBarBaseFoundation from '@material/top-app-bar/foundation.js';\nimport {html} from 'lit';\nimport {property, query} from 'lit/decorators.js';\nimport {classMap} from 'lit/directives/class-map.js';\n\nexport const passiveEventOptionsIfSupported =\n    supportsPassiveEventListener ? {passive: true} : undefined;\n\ninterface ClassInfo {\n  [key: string]: boolean;\n}\n\nexport abstract class TopAppBarBaseBase extends BaseElement {\n  protected abstract override mdcFoundation: MDCTopAppBarBaseFoundation;\n\n  protected abstract override mdcFoundationClass:\n      typeof MDCTopAppBarBaseFoundation;\n\n  @query('.mdc-top-app-bar') protected mdcRoot!: HTMLElement;\n\n  // _actionItemsSlot should have type HTMLSlotElement, but when TypeScript's\n  // emitDecoratorMetadata is enabled, the HTMLSlotElement constructor will\n  // be emitted into the runtime, which will cause an \"HTMLSlotElement is\n  // undefined\" error in browsers that don't define it (e.g. IE11).\n  @query('slot[name=\"actionItems\"]') protected _actionItemsSlot!: HTMLElement;\n\n  protected _scrollTarget!: HTMLElement|Window;\n\n  @property({type: Boolean}) centerTitle = false;\n\n  @property({type: Object})\n  get scrollTarget() {\n    return this._scrollTarget || window;\n  }\n\n  set scrollTarget(value) {\n    this.unregisterScrollListener();\n    const old = this.scrollTarget;\n    this._scrollTarget = value;\n    this.updateRootPosition();\n    this.requestUpdate('scrollTarget', old);\n    this.registerScrollListener();\n  }\n\n  protected updateRootPosition() {\n    if (this.mdcRoot) {\n      const windowScroller = this.scrollTarget === window;\n      // we add support for top-app-bar's tied to an element scroller.\n      this.mdcRoot.style.position = windowScroller ? '' : 'absolute';\n    }\n  }\n\n  /**\n   * classMap map for classes on the bar\n   */\n  protected abstract barClasses(): ClassInfo;\n\n  /**\n   * classMap map for classes on the content slot\n   */\n  protected abstract contentClasses(): ClassInfo;\n\n  protected override render() {\n    // clang-format off\n    let title = html`<span class=\"mdc-top-app-bar__title\"><slot name=\"title\"></slot></span>`;\n    if (this.centerTitle) {\n      title = html`<section class=\"mdc-top-app-bar__section mdc-top-app-bar__section--align-center\">${title}</section>`;\n    }\n    // clang-format on\n    return html`\n      <header class=\"mdc-top-app-bar ${classMap(this.barClasses())}\">\n      <div class=\"mdc-top-app-bar__row\">\n        <section class=\"mdc-top-app-bar__section mdc-top-app-bar__section--align-start\" id=\"navigation\">\n          <slot name=\"navigationIcon\"\n            @click=${this.handleNavigationClick}></slot>\n          ${this.centerTitle ? null : title}\n        </section>\n        ${this.centerTitle ? title : null}\n        <section class=\"mdc-top-app-bar__section mdc-top-app-bar__section--align-end\" id=\"actions\" role=\"toolbar\">\n          <slot name=\"actionItems\"></slot>\n        </section>\n      </div>\n    </header>\n    <div class=\"${classMap(this.contentClasses())}\">\n      <slot></slot>\n    </div>\n    `;\n  }\n\n  protected createAdapter(): MDCTopAppBarAdapter {\n    return {\n      ...addHasRemoveClass(this.mdcRoot),\n      setStyle: (property: string, value: string) =>\n          this.mdcRoot.style.setProperty(property, value),\n      getTopAppBarHeight: () => this.mdcRoot.clientHeight,\n      notifyNavigationIconClicked: () => {\n        this.dispatchEvent(new Event(\n            strings.NAVIGATION_EVENT, {bubbles: true, cancelable: true}));\n      },\n      getViewportScrollY: () => this.scrollTarget instanceof Window ?\n          this.scrollTarget.pageYOffset :\n          this.scrollTarget.scrollTop,\n      getTotalActionItems: () => (this._actionItemsSlot as HTMLSlotElement)\n                                     .assignedNodes({flatten: true})\n                                     .length,\n    };\n  }\n\n  protected handleTargetScroll = () => {\n    this.mdcFoundation.handleTargetScroll();\n  };\n\n  protected handleNavigationClick = () => {\n    this.mdcFoundation.handleNavigationClick();\n  };\n\n  protected registerListeners() {\n    this.registerScrollListener();\n  }\n\n  protected unregisterListeners() {\n    this.unregisterScrollListener();\n  }\n\n  protected registerScrollListener() {\n    this.scrollTarget.addEventListener(\n        'scroll', this.handleTargetScroll, passiveEventOptionsIfSupported);\n  }\n\n  protected unregisterScrollListener() {\n    this.scrollTarget.removeEventListener('scroll', this.handleTargetScroll);\n  }\n\n  protected override firstUpdated() {\n    super.firstUpdated();\n    this.updateRootPosition();\n    this.registerListeners();\n  }\n\n  override disconnectedCallback() {\n    super.disconnectedCallback();\n    this.unregisterListeners();\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}