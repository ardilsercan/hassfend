{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _decorate from \"@babel/runtime/helpers/decorate\";\nvar _templateObject, _templateObject2;\nimport \"core-js/modules/es.array.concat.js\";\nimport \"@material/mwc-button\";\nimport \"@lrnwebcomponents/simple-tooltip/simple-tooltip\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { formatDateTime } from \"../../common/datetime/format_date_time\";\nimport \"../../components/ha-markdown\";\nimport \"../../components/ha-relative-time\";\nimport \"./notification-item-template\";\nexport var HuiPersistentNotificationItem = _decorate([customElement(\"persistent-notification-item\")], function (_initialize, _LitElement) {\n  var HuiPersistentNotificationItem = /*#__PURE__*/function (_LitElement2) {\n    _inherits(HuiPersistentNotificationItem, _LitElement2);\n    function HuiPersistentNotificationItem() {\n      var _this;\n      _classCallCheck(this, HuiPersistentNotificationItem);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, HuiPersistentNotificationItem, [].concat(args));\n      _initialize(_assertThisInitialized(_this));\n      return _this;\n    }\n    return _createClass(HuiPersistentNotificationItem);\n  }(_LitElement);\n  return {\n    F: HuiPersistentNotificationItem,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"notification\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this.hass || !this.notification) {\n          return nothing;\n        }\n        return html(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      <notification-item-template>\\n        <span slot=\\\"header\\\"> \", \" </span>\\n\\n        <ha-markdown breaks content=\", \"></ha-markdown>\\n\\n        <div class=\\\"time\\\">\\n          <span>\\n            <ha-relative-time\\n              .hass=\", \"\\n              .datetime=\", \"\\n              capitalize\\n            ></ha-relative-time>\\n            <simple-tooltip animation-delay=\\\"0\\\">\\n              \", \"\\n            </simple-tooltip>\\n          </span>\\n        </div>\\n\\n        <mwc-button slot=\\\"actions\\\" @click=\", \"\\n          >\", \"</mwc-button\\n        >\\n      </notification-item-template>\\n    \"])), this.notification.title, this.notification.message, this.hass, this.notification.created_at, this._computeTooltip(this.hass, this.notification), this._handleDismiss, this.hass.localize(\"ui.card.persistent_notification.dismiss\"));\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n      .time {\\n        display: flex;\\n        justify-content: flex-end;\\n        margin-top: 6px;\\n      }\\n      ha-relative-time {\\n        color: var(--secondary-text-color);\\n      }\\n      a {\\n        color: var(--primary-color);\\n      }\\n      ha-markdown {\\n        overflow-wrap: break-word;\\n      }\\n    \"])));\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleDismiss\",\n      value: function _handleDismiss() {\n        this.hass.callService(\"persistent_notification\", \"dismiss\", {\n          notification_id: this.notification.notification_id\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_computeTooltip\",\n      value: function _computeTooltip(hass, notification) {\n        if (!hass || !notification) {\n          return undefined;\n        }\n        var d = new Date(notification.created_at);\n        return formatDateTime(d, hass.locale, hass.config);\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","nothing","customElement","property","formatDateTime","HuiPersistentNotificationItem","_decorate","_initialize","_LitElement","_LitElement2","_inherits","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_assertThisInitialized","_createClass","F","d","kind","decorators","attribute","key","value","render","hass","notification","_templateObject","_taggedTemplateLiteral","title","message","created_at","_computeTooltip","_handleDismiss","localize","static","styles","_templateObject2","callService","notification_id","undefined","Date","locale","config"],"sources":["/workspaces/frontend/src/dialogs/notifications/persistent-notification-item.ts"],"sourcesContent":["import \"@material/mwc-button\";\nimport \"@lrnwebcomponents/simple-tooltip/simple-tooltip\";\nimport { css, CSSResultGroup, html, LitElement, nothing } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { formatDateTime } from \"../../common/datetime/format_date_time\";\nimport \"../../components/ha-markdown\";\nimport \"../../components/ha-relative-time\";\nimport { PersistentNotification } from \"../../data/persistent_notification\";\nimport { HomeAssistant } from \"../../types\";\nimport \"./notification-item-template\";\n\n@customElement(\"persistent-notification-item\")\nexport class HuiPersistentNotificationItem extends LitElement {\n  @property({ attribute: false }) public hass?: HomeAssistant;\n\n  @property({ attribute: false }) public notification?: PersistentNotification;\n\n  protected render() {\n    if (!this.hass || !this.notification) {\n      return nothing;\n    }\n\n    return html`\n      <notification-item-template>\n        <span slot=\"header\"> ${this.notification.title} </span>\n\n        <ha-markdown breaks content=${this.notification.message}></ha-markdown>\n\n        <div class=\"time\">\n          <span>\n            <ha-relative-time\n              .hass=${this.hass}\n              .datetime=${this.notification.created_at}\n              capitalize\n            ></ha-relative-time>\n            <simple-tooltip animation-delay=\"0\">\n              ${this._computeTooltip(this.hass, this.notification)}\n            </simple-tooltip>\n          </span>\n        </div>\n\n        <mwc-button slot=\"actions\" @click=${this._handleDismiss}\n          >${this.hass.localize(\n            \"ui.card.persistent_notification.dismiss\"\n          )}</mwc-button\n        >\n      </notification-item-template>\n    `;\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      .time {\n        display: flex;\n        justify-content: flex-end;\n        margin-top: 6px;\n      }\n      ha-relative-time {\n        color: var(--secondary-text-color);\n      }\n      a {\n        color: var(--primary-color);\n      }\n      ha-markdown {\n        overflow-wrap: break-word;\n      }\n    `;\n  }\n\n  private _handleDismiss(): void {\n    this.hass!.callService(\"persistent_notification\", \"dismiss\", {\n      notification_id: this.notification!.notification_id,\n    });\n  }\n\n  private _computeTooltip(\n    hass: HomeAssistant,\n    notification: PersistentNotification\n  ): string | undefined {\n    if (!hass || !notification) {\n      return undefined;\n    }\n\n    const d = new Date(notification.created_at!);\n    return formatDateTime(d, hass.locale, hass.config);\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"persistent-notification-item\": HuiPersistentNotificationItem;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}