{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport \"@lrnwebcomponents/simple-tooltip/simple-tooltip\";\nimport \"@material/mwc-ripple\";\nimport { RippleHandlers } from \"@material/mwc-ripple/ripple-handlers\";\nconst mdiCloud = \"M6.5 20Q4.22 20 2.61 18.43 1 16.85 1 14.58 1 12.63 2.17 11.1 3.35 9.57 5.25 9.15 5.88 6.85 7.75 5.43 9.63 4 12 4 14.93 4 16.96 6.04 19 8.07 19 11 20.73 11.2 21.86 12.5 23 13.78 23 15.5 23 17.38 21.69 18.69 20.38 20 18.5 20Z\";\nconst mdiPackageVariant = \"M2,10.96C1.5,10.68 1.35,10.07 1.63,9.59L3.13,7C3.24,6.8 3.41,6.66 3.6,6.58L11.43,2.18C11.59,2.06 11.79,2 12,2C12.21,2 12.41,2.06 12.57,2.18L20.47,6.62C20.66,6.72 20.82,6.88 20.91,7.08L22.36,9.6C22.64,10.08 22.47,10.69 22,10.96L21,11.54V16.5C21,16.88 20.79,17.21 20.47,17.38L12.57,21.82C12.41,21.94 12.21,22 12,22C11.79,22 11.59,21.94 11.43,21.82L3.53,17.38C3.21,17.21 3,16.88 3,16.5V10.96C2.7,11.13 2.32,11.14 2,10.96M12,4.15V4.15L12,10.85V10.85L17.96,7.5L12,4.15M5,15.91L11,19.29V12.58L5,9.21V15.91M19,15.91V12.69L14,15.59C13.67,15.77 13.3,15.76 13,15.6V19.29L19,15.91M13.85,13.36L20.13,9.73L19.55,8.72L13.27,12.35L13.85,13.36Z\";\nimport { LitElement, css, html, nothing } from \"lit\";\nimport { customElement, eventOptions, property, queryAsync, state } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport memoizeOne from \"memoize-one\";\nimport { computeRTL } from \"../../../common/util/compute_rtl\";\nimport \"../../../components/ha-card\";\nimport \"../../../components/ha-button\";\nimport \"../../../components/ha-svg-icon\";\nimport { ERROR_STATES } from \"../../../data/config_entries\";\nimport { LogSeverity } from \"../../../data/integration\";\nimport { haStyle } from \"../../../resources/styles\";\nimport \"./ha-integration-header\";\nexport let HaIntegrationCard = _decorate([customElement(\"ha-integration-card\")], function (_initialize, _LitElement) {\n  class HaIntegrationCard extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaIntegrationCard,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"domain\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"items\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"manifest\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"entityRegistryEntries\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"supportsDiagnostics\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"logInfo\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [queryAsync(\"mwc-ripple\")],\n      key: \"_ripple\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_shouldRenderRipple\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        const entryState = this._getState(this.items);\n        const debugLoggingEnabled = this.logInfo && this.logInfo.level === LogSeverity.DEBUG;\n        return html`\n      <ha-card\n        outlined\n        class=${classMap({\n          \"state-loaded\": entryState === \"loaded\",\n          \"state-not-loaded\": entryState === \"not_loaded\",\n          \"state-failed-unload\": entryState === \"failed_unload\",\n          \"state-setup\": entryState === \"setup_in_progress\",\n          \"state-error\": ERROR_STATES.includes(entryState),\n          \"debug-logging\": Boolean(debugLoggingEnabled)\n        })}\n      >\n        <a\n          href=${`/config/integrations/integration/${this.domain}`}\n          class=\"ripple-anchor\"\n          @focus=${this.handleRippleFocus}\n          @blur=${this.handleRippleBlur}\n          @mouseenter=${this.handleRippleMouseEnter}\n          @mouseleave=${this.handleRippleMouseLeave}\n          @mousedown=${this.handleRippleActivate}\n          @mouseup=${this.handleRippleDeactivate}\n          @touchstart=${this.handleRippleActivate}\n          @touchend=${this.handleRippleDeactivate}\n          @touchcancel=${this.handleRippleDeactivate}\n        >\n          ${this._shouldRenderRipple ? html`<mwc-ripple></mwc-ripple>` : \"\"}\n          <ha-integration-header\n            .hass=${this.hass}\n            .domain=${this.domain}\n            .localizedDomainName=${this.items[0].localized_domain_name}\n            .error=${ERROR_STATES.includes(entryState) ? this.hass.localize(`ui.panel.config.integrations.config_entry.state.${entryState}`) : undefined}\n            .warning=${entryState !== \"loaded\" && !ERROR_STATES.includes(entryState) ? this.hass.localize(`ui.panel.config.integrations.config_entry.state.${entryState}`) : debugLoggingEnabled ? this.hass.localize(\"ui.panel.config.integrations.config_entry.debug_logging_enabled\") : undefined}\n            .manifest=${this.manifest}\n          >\n          </ha-integration-header>\n        </a>\n\n        ${this._renderSingleEntry()}\n      </ha-card>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_renderSingleEntry\",\n      value: function _renderSingleEntry() {\n        var _this$manifest$iot_cl;\n        const devices = this._getDevices(this.items, this.hass.devices);\n        const entities = devices.length ? [] : this._getEntities(this.items, this.entityRegistryEntries);\n        const services = !devices.some(device => device.entry_type !== \"service\");\n        return html`\n      <div class=\"card-actions\">\n        ${devices.length > 0 ? html`<a\n              href=${devices.length === 1 ? `/config/devices/device/${devices[0].id}` : `/config/devices/dashboard?historyBack=1&domain=${this.domain}`}\n            >\n              <ha-button>\n                ${this.hass.localize(`ui.panel.config.integrations.config_entry.${services ? \"services\" : \"devices\"}`, {\n          count: devices.length\n        })}\n              </ha-button>\n            </a>` : entities.length > 0 ? html`<a\n                href=${`/config/entities?historyBack=1&domain=${this.domain}`}\n              >\n                <ha-button>\n                  ${this.hass.localize(`ui.panel.config.integrations.config_entry.entities`, {\n          count: entities.length\n        })}\n                </ha-button>\n              </a>` : html`<a href=${`/config/integrations/integration/${this.domain}`}>\n                <ha-button>\n                  ${this.hass.localize(`ui.panel.config.integrations.config_entry.entries`, {\n          count: this.items.length\n        })}\n                </ha-button>\n              </a>`}\n        <div class=\"icons\">\n          ${this.manifest && !this.manifest.is_built_in ? html`<span class=\"icon custom\">\n                <ha-svg-icon .path=${mdiPackageVariant}></ha-svg-icon>\n                <simple-tooltip\n                  animation-delay=\"0\"\n                  .position=${computeRTL(this.hass) ? \"right\" : \"left\"}\n                  offset=\"4\"\n                  >${this.hass.localize(\"ui.panel.config.integrations.config_entry.custom_integration\")}</simple-tooltip\n                >\n              </span>` : nothing}\n          ${this.manifest && (_this$manifest$iot_cl = this.manifest.iot_class) !== null && _this$manifest$iot_cl !== void 0 && _this$manifest$iot_cl.startsWith(\"cloud_\") ? html`<div class=\"icon cloud\">\n                <ha-svg-icon .path=${mdiCloud}></ha-svg-icon>\n                <simple-tooltip\n                  animation-delay=\"0\"\n                  .position=${computeRTL(this.hass) ? \"right\" : \"left\"}\n                  offset=\"4\"\n                  >${this.hass.localize(\"ui.panel.config.integrations.config_entry.depends_on_cloud\")}</simple-tooltip\n                >\n              </div>` : nothing}\n        </div>\n      </div>\n    `;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_getState\",\n      value() {\n        return memoizeOne(configEntry => {\n          if (configEntry.length === 1) {\n            return configEntry[0].state;\n          }\n          let entryState;\n          for (const entry of configEntry) {\n            if (ERROR_STATES.includes(entry.state)) {\n              return entry.state;\n            }\n            entryState = entry.state;\n          }\n          return entryState;\n        });\n      }\n    }, {\n      kind: \"field\",\n      key: \"_getEntities\",\n      value() {\n        return memoizeOne((configEntry, entityRegistryEntries) => {\n          if (!entityRegistryEntries) {\n            return [];\n          }\n          const entryIds = configEntry.map(entry => entry.entry_id);\n          return entityRegistryEntries.filter(entity => entity.config_entry_id && entryIds.includes(entity.config_entry_id));\n        });\n      }\n    }, {\n      kind: \"field\",\n      key: \"_getDevices\",\n      value() {\n        return memoizeOne((configEntry, deviceRegistryEntries) => {\n          if (!deviceRegistryEntries) {\n            return [];\n          }\n          const entryIds = configEntry.map(entry => entry.entry_id);\n          return Object.values(deviceRegistryEntries).filter(device => device.config_entries.some(entryId => entryIds.includes(entryId)));\n        });\n      }\n    }, {\n      kind: \"field\",\n      key: \"_rippleHandlers\",\n      value() {\n        return new RippleHandlers(() => {\n          this._shouldRenderRipple = true;\n          return this._ripple;\n        });\n      }\n    }, {\n      kind: \"method\",\n      decorators: [eventOptions({\n        passive: true\n      })],\n      key: \"handleRippleActivate\",\n      value: function handleRippleActivate(evt) {\n        this._rippleHandlers.startPress(evt);\n      }\n    }, {\n      kind: \"method\",\n      key: \"handleRippleDeactivate\",\n      value: function handleRippleDeactivate() {\n        this._rippleHandlers.endPress();\n      }\n    }, {\n      kind: \"method\",\n      key: \"handleRippleFocus\",\n      value: function handleRippleFocus() {\n        this._rippleHandlers.startFocus();\n      }\n    }, {\n      kind: \"method\",\n      key: \"handleRippleBlur\",\n      value: function handleRippleBlur() {\n        this._rippleHandlers.endFocus();\n      }\n    }, {\n      kind: \"method\",\n      key: \"handleRippleMouseEnter\",\n      value: function handleRippleMouseEnter() {\n        this._rippleHandlers.startHover();\n      }\n    }, {\n      kind: \"method\",\n      key: \"handleRippleMouseLeave\",\n      value: function handleRippleMouseLeave() {\n        this._rippleHandlers.endHover();\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [haStyle, css`\n        ha-card {\n          display: flex;\n          flex-direction: column;\n          justify-content: space-between;\n          height: 100%;\n          overflow: hidden;\n          --state-color: var(--divider-color, #e0e0e0);\n          --ha-card-border-color: var(--state-color);\n          --state-message-color: var(--state-color);\n        }\n        .ripple-anchor {\n          flex-grow: 1;\n          position: relative;\n        }\n        ha-integration-header {\n          height: 100%;\n        }\n        .card-actions {\n          display: flex;\n          align-items: center;\n          justify-content: space-between;\n        }\n        .debug-logging {\n          --state-color: var(--warning-color);\n          --text-on-state-color: var(--primary-text-color);\n        }\n        .state-error {\n          --state-color: var(--error-color);\n          --text-on-state-color: var(--text-primary-color);\n        }\n        .state-failed-unload {\n          --state-color: var(--warning-color);\n          --text-on-state-color: var(--primary-text-color);\n        }\n        .state-not-loaded {\n          opacity: 0.8;\n          --state-color: var(--warning-color);\n          --state-message-color: var(--primary-text-color);\n        }\n        .state-setup {\n          opacity: 0.8;\n          --state-message-color: var(--secondary-text-color);\n        }\n        :host(.highlight) ha-card {\n          --state-color: var(--primary-color);\n          --text-on-state-color: var(--text-primary-color);\n        }\n        .content {\n          flex: 1;\n          --mdc-list-side-padding-right: 20px;\n          --mdc-list-side-padding-left: 24px;\n          --mdc-list-item-graphic-margin: 24px;\n        }\n        a {\n          text-decoration: none;\n          color: var(--primary-text-color);\n        }\n        .icons {\n          display: flex;\n        }\n        .icon {\n          border-radius: 50%;\n          color: var(--text-primary-color);\n          padding: 4px;\n          margin-left: 8px;\n          margin-inline-start: 8px;\n          margin-inline-end: initial;\n        }\n        .icon.cloud {\n          background: var(--info-color);\n        }\n        .icon.custom {\n          background: var(--warning-color);\n        }\n        .icon ha-svg-icon {\n          width: 16px;\n          height: 16px;\n          display: block;\n        }\n        simple-tooltip {\n          white-space: nowrap;\n        }\n      `];\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["RippleHandlers","mdiCloud","mdiPackageVariant","LitElement","css","html","nothing","customElement","eventOptions","property","queryAsync","state","classMap","memoizeOne","computeRTL","ERROR_STATES","LogSeverity","haStyle","HaIntegrationCard","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","type","Boolean","render","entryState","_getState","items","debugLoggingEnabled","logInfo","level","DEBUG","includes","domain","handleRippleFocus","handleRippleBlur","handleRippleMouseEnter","handleRippleMouseLeave","handleRippleActivate","handleRippleDeactivate","_shouldRenderRipple","hass","localized_domain_name","localize","undefined","manifest","_renderSingleEntry","_this$manifest$iot_cl","devices","_getDevices","entities","length","_getEntities","entityRegistryEntries","services","some","device","entry_type","id","count","is_built_in","iot_class","startsWith","configEntry","entry","entryIds","map","entry_id","filter","entity","config_entry_id","deviceRegistryEntries","Object","values","config_entries","entryId","_ripple","passive","evt","_rippleHandlers","startPress","endPress","startFocus","endFocus","startHover","endHover","static","styles"],"sources":["/workspaces/frontend/src/panels/config/integrations/ha-integration-card.ts"],"sourcesContent":["import \"@lrnwebcomponents/simple-tooltip/simple-tooltip\";\nimport \"@material/mwc-ripple\";\nimport type { Ripple } from \"@material/mwc-ripple\";\nimport { RippleHandlers } from \"@material/mwc-ripple/ripple-handlers\";\nimport { mdiCloud, mdiPackageVariant } from \"@mdi/js\";\nimport {\n  CSSResultGroup,\n  LitElement,\n  TemplateResult,\n  css,\n  html,\n  nothing,\n} from \"lit\";\nimport {\n  customElement,\n  eventOptions,\n  property,\n  queryAsync,\n  state,\n} from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport memoizeOne from \"memoize-one\";\nimport { computeRTL } from \"../../../common/util/compute_rtl\";\nimport \"../../../components/ha-card\";\nimport \"../../../components/ha-button\";\nimport \"../../../components/ha-svg-icon\";\nimport { ConfigEntry, ERROR_STATES } from \"../../../data/config_entries\";\nimport type { DeviceRegistryEntry } from \"../../../data/device_registry\";\nimport type { EntityRegistryEntry } from \"../../../data/entity_registry\";\nimport {\n  IntegrationLogInfo,\n  IntegrationManifest,\n  LogSeverity,\n} from \"../../../data/integration\";\nimport { haStyle } from \"../../../resources/styles\";\nimport type { HomeAssistant } from \"../../../types\";\nimport type { ConfigEntryExtended } from \"./ha-config-integrations\";\nimport \"./ha-integration-header\";\n\n@customElement(\"ha-integration-card\")\nexport class HaIntegrationCard extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property() public domain!: string;\n\n  @property({ attribute: false }) public items!: ConfigEntryExtended[];\n\n  @property({ attribute: false }) public manifest?: IntegrationManifest;\n\n  @property({ attribute: false })\n  public entityRegistryEntries!: EntityRegistryEntry[];\n\n  @property({ type: Boolean }) public supportsDiagnostics = false;\n\n  @property({ attribute: false }) public logInfo?: IntegrationLogInfo;\n\n  @queryAsync(\"mwc-ripple\") private _ripple!: Promise<Ripple | null>;\n\n  @state() private _shouldRenderRipple = false;\n\n  protected render(): TemplateResult {\n    const entryState = this._getState(this.items);\n\n    const debugLoggingEnabled =\n      this.logInfo && this.logInfo.level === LogSeverity.DEBUG;\n\n    return html`\n      <ha-card\n        outlined\n        class=${classMap({\n          \"state-loaded\": entryState === \"loaded\",\n          \"state-not-loaded\": entryState === \"not_loaded\",\n          \"state-failed-unload\": entryState === \"failed_unload\",\n          \"state-setup\": entryState === \"setup_in_progress\",\n          \"state-error\": ERROR_STATES.includes(entryState),\n          \"debug-logging\": Boolean(debugLoggingEnabled),\n        })}\n      >\n        <a\n          href=${`/config/integrations/integration/${this.domain}`}\n          class=\"ripple-anchor\"\n          @focus=${this.handleRippleFocus}\n          @blur=${this.handleRippleBlur}\n          @mouseenter=${this.handleRippleMouseEnter}\n          @mouseleave=${this.handleRippleMouseLeave}\n          @mousedown=${this.handleRippleActivate}\n          @mouseup=${this.handleRippleDeactivate}\n          @touchstart=${this.handleRippleActivate}\n          @touchend=${this.handleRippleDeactivate}\n          @touchcancel=${this.handleRippleDeactivate}\n        >\n          ${this._shouldRenderRipple ? html`<mwc-ripple></mwc-ripple>` : \"\"}\n          <ha-integration-header\n            .hass=${this.hass}\n            .domain=${this.domain}\n            .localizedDomainName=${this.items[0].localized_domain_name}\n            .error=${ERROR_STATES.includes(entryState)\n              ? this.hass.localize(\n                  `ui.panel.config.integrations.config_entry.state.${entryState}`\n                )\n              : undefined}\n            .warning=${entryState !== \"loaded\" &&\n            !ERROR_STATES.includes(entryState)\n              ? this.hass.localize(\n                  `ui.panel.config.integrations.config_entry.state.${entryState}`\n                )\n              : debugLoggingEnabled\n                ? this.hass.localize(\n                    \"ui.panel.config.integrations.config_entry.debug_logging_enabled\"\n                  )\n                : undefined}\n            .manifest=${this.manifest}\n          >\n          </ha-integration-header>\n        </a>\n\n        ${this._renderSingleEntry()}\n      </ha-card>\n    `;\n  }\n\n  private _renderSingleEntry(): TemplateResult {\n    const devices = this._getDevices(this.items, this.hass.devices);\n    const entities = devices.length\n      ? []\n      : this._getEntities(this.items, this.entityRegistryEntries);\n\n    const services = !devices.some((device) => device.entry_type !== \"service\");\n\n    return html`\n      <div class=\"card-actions\">\n        ${devices.length > 0\n          ? html`<a\n              href=${devices.length === 1\n                ? `/config/devices/device/${devices[0].id}`\n                : `/config/devices/dashboard?historyBack=1&domain=${this.domain}`}\n            >\n              <ha-button>\n                ${this.hass.localize(\n                  `ui.panel.config.integrations.config_entry.${\n                    services ? \"services\" : \"devices\"\n                  }`,\n                  { count: devices.length }\n                )}\n              </ha-button>\n            </a>`\n          : entities.length > 0\n            ? html`<a\n                href=${`/config/entities?historyBack=1&domain=${this.domain}`}\n              >\n                <ha-button>\n                  ${this.hass.localize(\n                    `ui.panel.config.integrations.config_entry.entities`,\n                    { count: entities.length }\n                  )}\n                </ha-button>\n              </a>`\n            : html`<a href=${`/config/integrations/integration/${this.domain}`}>\n                <ha-button>\n                  ${this.hass.localize(\n                    `ui.panel.config.integrations.config_entry.entries`,\n                    { count: this.items.length }\n                  )}\n                </ha-button>\n              </a>`}\n        <div class=\"icons\">\n          ${this.manifest && !this.manifest.is_built_in\n            ? html`<span class=\"icon custom\">\n                <ha-svg-icon .path=${mdiPackageVariant}></ha-svg-icon>\n                <simple-tooltip\n                  animation-delay=\"0\"\n                  .position=${computeRTL(this.hass) ? \"right\" : \"left\"}\n                  offset=\"4\"\n                  >${this.hass.localize(\n                    \"ui.panel.config.integrations.config_entry.custom_integration\"\n                  )}</simple-tooltip\n                >\n              </span>`\n            : nothing}\n          ${this.manifest && this.manifest.iot_class?.startsWith(\"cloud_\")\n            ? html`<div class=\"icon cloud\">\n                <ha-svg-icon .path=${mdiCloud}></ha-svg-icon>\n                <simple-tooltip\n                  animation-delay=\"0\"\n                  .position=${computeRTL(this.hass) ? \"right\" : \"left\"}\n                  offset=\"4\"\n                  >${this.hass.localize(\n                    \"ui.panel.config.integrations.config_entry.depends_on_cloud\"\n                  )}</simple-tooltip\n                >\n              </div>`\n            : nothing}\n        </div>\n      </div>\n    `;\n  }\n\n  private _getState = memoizeOne(\n    (configEntry: ConfigEntry[]): ConfigEntry[\"state\"] => {\n      if (configEntry.length === 1) {\n        return configEntry[0].state;\n      }\n      let entryState: ConfigEntry[\"state\"];\n      for (const entry of configEntry) {\n        if (ERROR_STATES.includes(entry.state)) {\n          return entry.state;\n        }\n        entryState = entry.state;\n      }\n      return entryState!;\n    }\n  );\n\n  private _getEntities = memoizeOne(\n    (\n      configEntry: ConfigEntry[],\n      entityRegistryEntries: EntityRegistryEntry[]\n    ): EntityRegistryEntry[] => {\n      if (!entityRegistryEntries) {\n        return [];\n      }\n      const entryIds = configEntry.map((entry) => entry.entry_id);\n      return entityRegistryEntries.filter(\n        (entity) =>\n          entity.config_entry_id && entryIds.includes(entity.config_entry_id)\n      );\n    }\n  );\n\n  private _getDevices = memoizeOne(\n    (\n      configEntry: ConfigEntry[],\n      deviceRegistryEntries: HomeAssistant[\"devices\"]\n    ): DeviceRegistryEntry[] => {\n      if (!deviceRegistryEntries) {\n        return [];\n      }\n      const entryIds = configEntry.map((entry) => entry.entry_id);\n      return Object.values(deviceRegistryEntries).filter((device) =>\n        device.config_entries.some((entryId) => entryIds.includes(entryId))\n      );\n    }\n  );\n\n  private _rippleHandlers: RippleHandlers = new RippleHandlers(() => {\n    this._shouldRenderRipple = true;\n    return this._ripple;\n  });\n\n  @eventOptions({ passive: true })\n  private handleRippleActivate(evt?: Event) {\n    this._rippleHandlers.startPress(evt);\n  }\n\n  private handleRippleDeactivate() {\n    this._rippleHandlers.endPress();\n  }\n\n  private handleRippleFocus() {\n    this._rippleHandlers.startFocus();\n  }\n\n  private handleRippleBlur() {\n    this._rippleHandlers.endFocus();\n  }\n\n  protected handleRippleMouseEnter() {\n    this._rippleHandlers.startHover();\n  }\n\n  protected handleRippleMouseLeave() {\n    this._rippleHandlers.endHover();\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyle,\n      css`\n        ha-card {\n          display: flex;\n          flex-direction: column;\n          justify-content: space-between;\n          height: 100%;\n          overflow: hidden;\n          --state-color: var(--divider-color, #e0e0e0);\n          --ha-card-border-color: var(--state-color);\n          --state-message-color: var(--state-color);\n        }\n        .ripple-anchor {\n          flex-grow: 1;\n          position: relative;\n        }\n        ha-integration-header {\n          height: 100%;\n        }\n        .card-actions {\n          display: flex;\n          align-items: center;\n          justify-content: space-between;\n        }\n        .debug-logging {\n          --state-color: var(--warning-color);\n          --text-on-state-color: var(--primary-text-color);\n        }\n        .state-error {\n          --state-color: var(--error-color);\n          --text-on-state-color: var(--text-primary-color);\n        }\n        .state-failed-unload {\n          --state-color: var(--warning-color);\n          --text-on-state-color: var(--primary-text-color);\n        }\n        .state-not-loaded {\n          opacity: 0.8;\n          --state-color: var(--warning-color);\n          --state-message-color: var(--primary-text-color);\n        }\n        .state-setup {\n          opacity: 0.8;\n          --state-message-color: var(--secondary-text-color);\n        }\n        :host(.highlight) ha-card {\n          --state-color: var(--primary-color);\n          --text-on-state-color: var(--text-primary-color);\n        }\n        .content {\n          flex: 1;\n          --mdc-list-side-padding-right: 20px;\n          --mdc-list-side-padding-left: 24px;\n          --mdc-list-item-graphic-margin: 24px;\n        }\n        a {\n          text-decoration: none;\n          color: var(--primary-text-color);\n        }\n        .icons {\n          display: flex;\n        }\n        .icon {\n          border-radius: 50%;\n          color: var(--text-primary-color);\n          padding: 4px;\n          margin-left: 8px;\n          margin-inline-start: 8px;\n          margin-inline-end: initial;\n        }\n        .icon.cloud {\n          background: var(--info-color);\n        }\n        .icon.custom {\n          background: var(--warning-color);\n        }\n        .icon ha-svg-icon {\n          width: 16px;\n          height: 16px;\n          display: block;\n        }\n        simple-tooltip {\n          white-space: nowrap;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-integration-card\": HaIntegrationCard;\n  }\n}\n"],"mappings":";AAAA,OAAO,iDAAiD;AACxD,OAAO,sBAAsB;AAE7B,SAASA,cAAc,QAAQ,sCAAsC;AAAC,MAAAC,QAAA;AAAA,MAAAC,iBAAA;AAEtE,SAEEC,UAAU,EAEVC,GAAG,EACHC,IAAI,EACJC,OAAO,QACF,KAAK;AACZ,SACEC,aAAa,EACbC,YAAY,EACZC,QAAQ,EACRC,UAAU,EACVC,KAAK,QACA,gBAAgB;AACvB,SAASC,QAAQ,QAAQ,0BAA0B;AACnD,OAAOC,UAAU,MAAM,aAAa;AACpC,SAASC,UAAU,QAAQ,kCAAkC;AAC7D,OAAO,6BAA6B;AACpC,OAAO,+BAA+B;AACtC,OAAO,iCAAiC;AACxC,SAAsBC,YAAY,QAAQ,8BAA8B;AAGxE,SAGEC,WAAW,QACN,2BAA2B;AAClC,SAASC,OAAO,QAAQ,2BAA2B;AAGnD,OAAO,yBAAyB;AAEhC,WACaC,iBAAiB,GAAAC,SAAA,EAD7BZ,aAAa,CAAC,qBAAqB,CAAC,aAAAa,WAAA,EAAAC,WAAA;EAArC,MACaH,iBAAiB,SAAAG,WAAA,CAAoB;IAAAC,YAAA,GAAAC,IAAA;MAAA,SAAAA,IAAA;MAAAH,WAAA;IAAA;EAmUlD;EAAC;IAAAI,CAAA,EAnUYN,iBAAiB;IAAAO,CAAA;MAAAC,IAAA;MAAAC,UAAA,GAC3BlB,QAAQ,CAAC;QAAEmB,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAC,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAE9BlB,QAAQ,CAAC,CAAC;MAAAoB,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAEVlB,QAAQ,CAAC;QAAEmB,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAC,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAE9BlB,QAAQ,CAAC;QAAEmB,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAC,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAE9BlB,QAAQ,CAAC;QAAEmB,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAC,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAG9BlB,QAAQ,CAAC;QAAEsB,IAAI,EAAEC;MAAQ,CAAC,CAAC;MAAAH,GAAA;MAAAC,MAAA;QAAA,OAA8B,KAAK;MAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAE9DlB,QAAQ,CAAC;QAAEmB,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAC,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAE9BjB,UAAU,CAAC,YAAY,CAAC;MAAAmB,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAExBhB,KAAK,CAAC,CAAC;MAAAkB,GAAA;MAAAC,MAAA;QAAA,OAA+B,KAAK;MAAA;IAAA;MAAAJ,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAE5C,SAAAG,OAAA,EAAmC;QACjC,MAAMC,UAAU,GAAG,IAAI,CAACC,SAAS,CAAC,IAAI,CAACC,KAAK,CAAC;QAE7C,MAAMC,mBAAmB,GACvB,IAAI,CAACC,OAAO,IAAI,IAAI,CAACA,OAAO,CAACC,KAAK,KAAKvB,WAAW,CAACwB,KAAK;QAE1D,OAAOnC,IAAK;AAChB;AACA;AACA,gBAAgBO,QAAQ,CAAC;UACf,cAAc,EAAEsB,UAAU,KAAK,QAAQ;UACvC,kBAAkB,EAAEA,UAAU,KAAK,YAAY;UAC/C,qBAAqB,EAAEA,UAAU,KAAK,eAAe;UACrD,aAAa,EAAEA,UAAU,KAAK,mBAAmB;UACjD,aAAa,EAAEnB,YAAY,CAAC0B,QAAQ,CAACP,UAAU,CAAC;UAChD,eAAe,EAAEF,OAAO,CAACK,mBAAmB;QAC9C,CAAC,CAAE;AACX;AACA;AACA,iBAAkB,oCAAmC,IAAI,CAACK,MAAO,EAAE;AACnE;AACA,mBAAmB,IAAI,CAACC,iBAAkB;AAC1C,kBAAkB,IAAI,CAACC,gBAAiB;AACxC,wBAAwB,IAAI,CAACC,sBAAuB;AACpD,wBAAwB,IAAI,CAACC,sBAAuB;AACpD,uBAAuB,IAAI,CAACC,oBAAqB;AACjD,qBAAqB,IAAI,CAACC,sBAAuB;AACjD,wBAAwB,IAAI,CAACD,oBAAqB;AAClD,sBAAsB,IAAI,CAACC,sBAAuB;AAClD,yBAAyB,IAAI,CAACA,sBAAuB;AACrD;AACA,YAAY,IAAI,CAACC,mBAAmB,GAAG5C,IAAK,2BAA0B,GAAG,EAAG;AAC5E;AACA,oBAAoB,IAAI,CAAC6C,IAAK;AAC9B,sBAAsB,IAAI,CAACR,MAAO;AAClC,mCAAmC,IAAI,CAACN,KAAK,CAAC,CAAC,CAAC,CAACe,qBAAsB;AACvE,qBAAqBpC,YAAY,CAAC0B,QAAQ,CAACP,UAAU,CAAC,GACtC,IAAI,CAACgB,IAAI,CAACE,QAAQ,CACf,mDAAkDlB,UAAW,EAChE,CAAC,GACDmB,SAAU;AAC1B,uBAAuBnB,UAAU,KAAK,QAAQ,IAClC,CAACnB,YAAY,CAAC0B,QAAQ,CAACP,UAAU,CAAC,GAC9B,IAAI,CAACgB,IAAI,CAACE,QAAQ,CACf,mDAAkDlB,UAAW,EAChE,CAAC,GACDG,mBAAmB,GACjB,IAAI,CAACa,IAAI,CAACE,QAAQ,CAChB,iEACF,CAAC,GACDC,SAAU;AAC5B,wBAAwB,IAAI,CAACC,QAAS;AACtC;AACA;AACA;AACA;AACA,UAAU,IAAI,CAACC,kBAAkB,CAAC,CAAE;AACpC;AACA,KAAK;MACH;IAAC;MAAA7B,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAyB,mBAAA,EAA6C;QAAA,IAAAC,qBAAA;QAC3C,MAAMC,OAAO,GAAG,IAAI,CAACC,WAAW,CAAC,IAAI,CAACtB,KAAK,EAAE,IAAI,CAACc,IAAI,CAACO,OAAO,CAAC;QAC/D,MAAME,QAAQ,GAAGF,OAAO,CAACG,MAAM,GAC3B,EAAE,GACF,IAAI,CAACC,YAAY,CAAC,IAAI,CAACzB,KAAK,EAAE,IAAI,CAAC0B,qBAAqB,CAAC;QAE7D,MAAMC,QAAQ,GAAG,CAACN,OAAO,CAACO,IAAI,CAAEC,MAAM,IAAKA,MAAM,CAACC,UAAU,KAAK,SAAS,CAAC;QAE3E,OAAO7D,IAAK;AAChB;AACA,UAAUoD,OAAO,CAACG,MAAM,GAAG,CAAC,GAChBvD,IAAK;AACjB,qBAAqBoD,OAAO,CAACG,MAAM,KAAK,CAAC,GACtB,0BAAyBH,OAAO,CAAC,CAAC,CAAC,CAACU,EAAG,EAAC,GACxC,kDAAiD,IAAI,CAACzB,MAAO,EAAE;AAClF;AACA;AACA,kBAAkB,IAAI,CAACQ,IAAI,CAACE,QAAQ,CACjB,6CACCW,QAAQ,GAAG,UAAU,GAAG,SACzB,EAAC,EACF;UAAEK,KAAK,EAAEX,OAAO,CAACG;QAAO,CAC1B,CAAE;AAClB;AACA,iBAAiB,GACLD,QAAQ,CAACC,MAAM,GAAG,CAAC,GACjBvD,IAAK;AACnB,uBAAwB,yCAAwC,IAAI,CAACqC,MAAO,EAAE;AAC9E;AACA;AACA,oBAAoB,IAAI,CAACQ,IAAI,CAACE,QAAQ,CACjB,oDAAmD,EACpD;UAAEgB,KAAK,EAAET,QAAQ,CAACC;QAAO,CAC3B,CAAE;AACpB;AACA,mBAAmB,GACLvD,IAAK,WAAW,oCAAmC,IAAI,CAACqC,MAAO,EAAE;AAC/E;AACA,oBAAoB,IAAI,CAACQ,IAAI,CAACE,QAAQ,CACjB,mDAAkD,EACnD;UAAEgB,KAAK,EAAE,IAAI,CAAChC,KAAK,CAACwB;QAAO,CAC7B,CAAE;AACpB;AACA,mBAAoB;AACpB;AACA,YAAY,IAAI,CAACN,QAAQ,IAAI,CAAC,IAAI,CAACA,QAAQ,CAACe,WAAW,GACzChE,IAAK;AACnB,qCAAqCH,iBAAkB;AACvD;AACA;AACA,8BAA8BY,UAAU,CAAC,IAAI,CAACoC,IAAI,CAAC,GAAG,OAAO,GAAG,MAAO;AACvE;AACA,qBAAqB,IAAI,CAACA,IAAI,CAACE,QAAQ,CACnB,8DACF,CAAE;AACpB;AACA,sBAAsB,GACR9C,OAAQ;AACtB,YAAY,IAAI,CAACgD,QAAQ,KAAAE,qBAAA,GAAI,IAAI,CAACF,QAAQ,CAACgB,SAAS,cAAAd,qBAAA,eAAvBA,qBAAA,CAAyBe,UAAU,CAAC,QAAQ,CAAC,GAC5DlE,IAAK;AACnB,qCAAqCJ,QAAS;AAC9C;AACA;AACA,8BAA8Ba,UAAU,CAAC,IAAI,CAACoC,IAAI,CAAC,GAAG,OAAO,GAAG,MAAO;AACvE;AACA,qBAAqB,IAAI,CAACA,IAAI,CAACE,QAAQ,CACnB,4DACF,CAAE;AACpB;AACA,qBAAqB,GACP9C,OAAQ;AACtB;AACA;AACA,KAAK;MACH;IAAC;MAAAoB,IAAA;MAAAG,GAAA;MAAAC,MAAA;QAAA,OAEmBjB,UAAU,CAC3B2D,WAA0B,IAA2B;UACpD,IAAIA,WAAW,CAACZ,MAAM,KAAK,CAAC,EAAE;YAC5B,OAAOY,WAAW,CAAC,CAAC,CAAC,CAAC7D,KAAK;UAC7B;UACA,IAAIuB,UAAgC;UACpC,KAAK,MAAMuC,KAAK,IAAID,WAAW,EAAE;YAC/B,IAAIzD,YAAY,CAAC0B,QAAQ,CAACgC,KAAK,CAAC9D,KAAK,CAAC,EAAE;cACtC,OAAO8D,KAAK,CAAC9D,KAAK;YACpB;YACAuB,UAAU,GAAGuC,KAAK,CAAC9D,KAAK;UAC1B;UACA,OAAOuB,UAAU;QACnB,CACF,CAAC;MAAA;IAAA;MAAAR,IAAA;MAAAG,GAAA;MAAAC,MAAA;QAAA,OAEsBjB,UAAU,CAC/B,CACE2D,WAA0B,EAC1BV,qBAA4C,KAClB;UAC1B,IAAI,CAACA,qBAAqB,EAAE;YAC1B,OAAO,EAAE;UACX;UACA,MAAMY,QAAQ,GAAGF,WAAW,CAACG,GAAG,CAAEF,KAAK,IAAKA,KAAK,CAACG,QAAQ,CAAC;UAC3D,OAAOd,qBAAqB,CAACe,MAAM,CAChCC,MAAM,IACLA,MAAM,CAACC,eAAe,IAAIL,QAAQ,CAACjC,QAAQ,CAACqC,MAAM,CAACC,eAAe,CACtE,CAAC;QACH,CACF,CAAC;MAAA;IAAA;MAAArD,IAAA;MAAAG,GAAA;MAAAC,MAAA;QAAA,OAEqBjB,UAAU,CAC9B,CACE2D,WAA0B,EAC1BQ,qBAA+C,KACrB;UAC1B,IAAI,CAACA,qBAAqB,EAAE;YAC1B,OAAO,EAAE;UACX;UACA,MAAMN,QAAQ,GAAGF,WAAW,CAACG,GAAG,CAAEF,KAAK,IAAKA,KAAK,CAACG,QAAQ,CAAC;UAC3D,OAAOK,MAAM,CAACC,MAAM,CAACF,qBAAqB,CAAC,CAACH,MAAM,CAAEZ,MAAM,IACxDA,MAAM,CAACkB,cAAc,CAACnB,IAAI,CAAEoB,OAAO,IAAKV,QAAQ,CAACjC,QAAQ,CAAC2C,OAAO,CAAC,CACpE,CAAC;QACH,CACF,CAAC;MAAA;IAAA;MAAA1D,IAAA;MAAAG,GAAA;MAAAC,MAAA;QAAA,OAEyC,IAAI9B,cAAc,CAAC,MAAM;UACjE,IAAI,CAACiD,mBAAmB,GAAG,IAAI;UAC/B,OAAO,IAAI,CAACoC,OAAO;QACrB,CAAC,CAAC;MAAA;IAAA;MAAA3D,IAAA;MAAAC,UAAA,GAEDnB,YAAY,CAAC;QAAE8E,OAAO,EAAE;MAAK,CAAC,CAAC;MAAAzD,GAAA;MAAAC,KAAA,EAAhC,SAAAiB,qBAC6BwC,GAAW,EAAE;QACxC,IAAI,CAACC,eAAe,CAACC,UAAU,CAACF,GAAG,CAAC;MACtC;IAAC;MAAA7D,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAkB,uBAAA,EAAiC;QAC/B,IAAI,CAACwC,eAAe,CAACE,QAAQ,CAAC,CAAC;MACjC;IAAC;MAAAhE,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAa,kBAAA,EAA4B;QAC1B,IAAI,CAAC6C,eAAe,CAACG,UAAU,CAAC,CAAC;MACnC;IAAC;MAAAjE,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAc,iBAAA,EAA2B;QACzB,IAAI,CAAC4C,eAAe,CAACI,QAAQ,CAAC,CAAC;MACjC;IAAC;MAAAlE,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAe,uBAAA,EAAmC;QACjC,IAAI,CAAC2C,eAAe,CAACK,UAAU,CAAC,CAAC;MACnC;IAAC;MAAAnE,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAgB,uBAAA,EAAmC;QACjC,IAAI,CAAC0C,eAAe,CAACM,QAAQ,CAAC,CAAC;MACjC;IAAC;MAAApE,IAAA;MAAAqE,MAAA;MAAAlE,GAAA;MAAAC,KAAA,EAED,SAAAkE,OAAA,EAAoC;QAClC,OAAO,CACL/E,OAAO,EACPb,GAAI;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,CACF;MACH;IAAC;EAAA;AAAA,GAlUoCD,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}