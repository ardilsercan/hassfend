{"ast":null,"code":"/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __assign, __extends } from \"tslib\";\nimport { MDCFoundation } from '@material/base/foundation';\nimport { numbers, strings } from './constants';\nvar ACCEPTABLE_KEYS = new Set();\n// IE11 has no support for new Set with iterable so we need to initialize this by hand\nACCEPTABLE_KEYS.add(strings.ARROW_LEFT_KEY);\nACCEPTABLE_KEYS.add(strings.ARROW_RIGHT_KEY);\nACCEPTABLE_KEYS.add(strings.END_KEY);\nACCEPTABLE_KEYS.add(strings.HOME_KEY);\nACCEPTABLE_KEYS.add(strings.ENTER_KEY);\nACCEPTABLE_KEYS.add(strings.SPACE_KEY);\nvar KEYCODE_MAP = new Map();\n// IE11 has no support for new Map with iterable so we need to initialize this by hand\nKEYCODE_MAP.set(numbers.ARROW_LEFT_KEYCODE, strings.ARROW_LEFT_KEY);\nKEYCODE_MAP.set(numbers.ARROW_RIGHT_KEYCODE, strings.ARROW_RIGHT_KEY);\nKEYCODE_MAP.set(numbers.END_KEYCODE, strings.END_KEY);\nKEYCODE_MAP.set(numbers.HOME_KEYCODE, strings.HOME_KEY);\nKEYCODE_MAP.set(numbers.ENTER_KEYCODE, strings.ENTER_KEY);\nKEYCODE_MAP.set(numbers.SPACE_KEYCODE, strings.SPACE_KEY);\nvar MDCTabBarFoundation = /** @class */function (_super) {\n  __extends(MDCTabBarFoundation, _super);\n  function MDCTabBarFoundation(adapter) {\n    var _this = _super.call(this, __assign(__assign({}, MDCTabBarFoundation.defaultAdapter), adapter)) || this;\n    _this.useAutomaticActivation = false;\n    return _this;\n  }\n  Object.defineProperty(MDCTabBarFoundation, \"strings\", {\n    get: function () {\n      return strings;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MDCTabBarFoundation, \"numbers\", {\n    get: function () {\n      return numbers;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MDCTabBarFoundation, \"defaultAdapter\", {\n    get: function () {\n      // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n      return {\n        scrollTo: function () {\n          return undefined;\n        },\n        incrementScroll: function () {\n          return undefined;\n        },\n        getScrollPosition: function () {\n          return 0;\n        },\n        getScrollContentWidth: function () {\n          return 0;\n        },\n        getOffsetWidth: function () {\n          return 0;\n        },\n        isRTL: function () {\n          return false;\n        },\n        setActiveTab: function () {\n          return undefined;\n        },\n        activateTabAtIndex: function () {\n          return undefined;\n        },\n        deactivateTabAtIndex: function () {\n          return undefined;\n        },\n        focusTabAtIndex: function () {\n          return undefined;\n        },\n        getTabIndicatorClientRectAtIndex: function () {\n          return {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0,\n            width: 0,\n            height: 0\n          };\n        },\n        getTabDimensionsAtIndex: function () {\n          return {\n            rootLeft: 0,\n            rootRight: 0,\n            contentLeft: 0,\n            contentRight: 0\n          };\n        },\n        getPreviousActiveTabIndex: function () {\n          return -1;\n        },\n        getFocusedTabIndex: function () {\n          return -1;\n        },\n        getIndexOfTabById: function () {\n          return -1;\n        },\n        getTabListLength: function () {\n          return 0;\n        },\n        notifyTabActivated: function () {\n          return undefined;\n        }\n      };\n      // tslint:enable:object-literal-sort-keys\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * Switches between automatic and manual activation modes.\n   * See https://www.w3.org/TR/wai-aria-practices/#tabpanel for examples.\n   */\n  MDCTabBarFoundation.prototype.setUseAutomaticActivation = function (useAutomaticActivation) {\n    this.useAutomaticActivation = useAutomaticActivation;\n  };\n  MDCTabBarFoundation.prototype.activateTab = function (index) {\n    var previousActiveIndex = this.adapter.getPreviousActiveTabIndex();\n    if (!this.indexIsInRange(index) || index === previousActiveIndex) {\n      return;\n    }\n    var previousClientRect;\n    if (previousActiveIndex !== -1) {\n      this.adapter.deactivateTabAtIndex(previousActiveIndex);\n      previousClientRect = this.adapter.getTabIndicatorClientRectAtIndex(previousActiveIndex);\n    }\n    this.adapter.activateTabAtIndex(index, previousClientRect);\n    this.scrollIntoView(index);\n    this.adapter.notifyTabActivated(index);\n  };\n  MDCTabBarFoundation.prototype.handleKeyDown = function (evt) {\n    // Get the key from the event\n    var key = this.getKeyFromEvent(evt);\n    // Early exit if the event key isn't one of the keyboard navigation keys\n    if (key === undefined) {\n      return;\n    }\n    // Prevent default behavior for movement keys, but not for activation keys, since :active is used to apply ripple\n    if (!this.isActivationKey(key)) {\n      evt.preventDefault();\n    }\n    if (this.useAutomaticActivation) {\n      if (this.isActivationKey(key)) {\n        return;\n      }\n      var index = this.determineTargetFromKey(this.adapter.getPreviousActiveTabIndex(), key);\n      this.adapter.setActiveTab(index);\n      this.scrollIntoView(index);\n    } else {\n      var focusedTabIndex = this.adapter.getFocusedTabIndex();\n      if (this.isActivationKey(key)) {\n        this.adapter.setActiveTab(focusedTabIndex);\n      } else {\n        var index = this.determineTargetFromKey(focusedTabIndex, key);\n        this.adapter.focusTabAtIndex(index);\n        this.scrollIntoView(index);\n      }\n    }\n  };\n  /**\n   * Handles the MDCTab:interacted event\n   */\n  MDCTabBarFoundation.prototype.handleTabInteraction = function (evt) {\n    this.adapter.setActiveTab(this.adapter.getIndexOfTabById(evt.detail.tabId));\n  };\n  /**\n   * Scrolls the tab at the given index into view\n   * @param index The tab index to make visible\n   */\n  MDCTabBarFoundation.prototype.scrollIntoView = function (index) {\n    // Early exit if the index is out of range\n    if (!this.indexIsInRange(index)) {\n      return;\n    }\n    // Always scroll to 0 if scrolling to the 0th index\n    if (index === 0) {\n      this.adapter.scrollTo(0);\n      return;\n    }\n    // Always scroll to the max value if scrolling to the Nth index\n    // MDCTabScroller.scrollTo() will never scroll past the max possible value\n    if (index === this.adapter.getTabListLength() - 1) {\n      this.adapter.scrollTo(this.adapter.getScrollContentWidth());\n      return;\n    }\n    if (this.isRTL()) {\n      this.scrollIntoViewImplRTL(index);\n      return;\n    }\n    this.scrollIntoViewImpl(index);\n  };\n  /**\n   * Private method for determining the index of the destination tab based on what key was pressed\n   * @param origin The original index from which to determine the destination\n   * @param key The name of the key\n   */\n  MDCTabBarFoundation.prototype.determineTargetFromKey = function (origin, key) {\n    var isRTL = this.isRTL();\n    var maxIndex = this.adapter.getTabListLength() - 1;\n    var shouldGoToEnd = key === strings.END_KEY;\n    var shouldDecrement = key === strings.ARROW_LEFT_KEY && !isRTL || key === strings.ARROW_RIGHT_KEY && isRTL;\n    var shouldIncrement = key === strings.ARROW_RIGHT_KEY && !isRTL || key === strings.ARROW_LEFT_KEY && isRTL;\n    var index = origin;\n    if (shouldGoToEnd) {\n      index = maxIndex;\n    } else if (shouldDecrement) {\n      index -= 1;\n    } else if (shouldIncrement) {\n      index += 1;\n    } else {\n      index = 0;\n    }\n    if (index < 0) {\n      index = maxIndex;\n    } else if (index > maxIndex) {\n      index = 0;\n    }\n    return index;\n  };\n  /**\n   * Calculates the scroll increment that will make the tab at the given index visible\n   * @param index The index of the tab\n   * @param nextIndex The index of the next tab\n   * @param scrollPosition The current scroll position\n   * @param barWidth The width of the Tab Bar\n   */\n  MDCTabBarFoundation.prototype.calculateScrollIncrement = function (index, nextIndex, scrollPosition, barWidth) {\n    var nextTabDimensions = this.adapter.getTabDimensionsAtIndex(nextIndex);\n    var relativeContentLeft = nextTabDimensions.contentLeft - scrollPosition - barWidth;\n    var relativeContentRight = nextTabDimensions.contentRight - scrollPosition;\n    var leftIncrement = relativeContentRight - numbers.EXTRA_SCROLL_AMOUNT;\n    var rightIncrement = relativeContentLeft + numbers.EXTRA_SCROLL_AMOUNT;\n    if (nextIndex < index) {\n      return Math.min(leftIncrement, 0);\n    }\n    return Math.max(rightIncrement, 0);\n  };\n  /**\n   * Calculates the scroll increment that will make the tab at the given index visible in RTL\n   * @param index The index of the tab\n   * @param nextIndex The index of the next tab\n   * @param scrollPosition The current scroll position\n   * @param barWidth The width of the Tab Bar\n   * @param scrollContentWidth The width of the scroll content\n   */\n  MDCTabBarFoundation.prototype.calculateScrollIncrementRTL = function (index, nextIndex, scrollPosition, barWidth, scrollContentWidth) {\n    var nextTabDimensions = this.adapter.getTabDimensionsAtIndex(nextIndex);\n    var relativeContentLeft = scrollContentWidth - nextTabDimensions.contentLeft - scrollPosition;\n    var relativeContentRight = scrollContentWidth - nextTabDimensions.contentRight - scrollPosition - barWidth;\n    var leftIncrement = relativeContentRight + numbers.EXTRA_SCROLL_AMOUNT;\n    var rightIncrement = relativeContentLeft - numbers.EXTRA_SCROLL_AMOUNT;\n    if (nextIndex > index) {\n      return Math.max(leftIncrement, 0);\n    }\n    return Math.min(rightIncrement, 0);\n  };\n  /**\n   * Determines the index of the adjacent tab closest to either edge of the Tab Bar\n   * @param index The index of the tab\n   * @param tabDimensions The dimensions of the tab\n   * @param scrollPosition The current scroll position\n   * @param barWidth The width of the tab bar\n   */\n  MDCTabBarFoundation.prototype.findAdjacentTabIndexClosestToEdge = function (index, tabDimensions, scrollPosition, barWidth) {\n    /**\n     * Tabs are laid out in the Tab Scroller like this:\n     *\n     *    Scroll Position\n     *    +---+\n     *    |   |   Bar Width\n     *    |   +-----------------------------------+\n     *    |   |                                   |\n     *    |   V                                   V\n     *    |   +-----------------------------------+\n     *    V   |             Tab Scroller          |\n     *    +------------+--------------+-------------------+\n     *    |    Tab     |      Tab     |        Tab        |\n     *    +------------+--------------+-------------------+\n     *        |                                   |\n     *        +-----------------------------------+\n     *\n     * To determine the next adjacent index, we look at the Tab root left and\n     * Tab root right, both relative to the scroll position. If the Tab root\n     * left is less than 0, then we know it's out of view to the left. If the\n     * Tab root right minus the bar width is greater than 0, we know the Tab is\n     * out of view to the right. From there, we either increment or decrement\n     * the index.\n     */\n    var relativeRootLeft = tabDimensions.rootLeft - scrollPosition;\n    var relativeRootRight = tabDimensions.rootRight - scrollPosition - barWidth;\n    var relativeRootDelta = relativeRootLeft + relativeRootRight;\n    var leftEdgeIsCloser = relativeRootLeft < 0 || relativeRootDelta < 0;\n    var rightEdgeIsCloser = relativeRootRight > 0 || relativeRootDelta > 0;\n    if (leftEdgeIsCloser) {\n      return index - 1;\n    }\n    if (rightEdgeIsCloser) {\n      return index + 1;\n    }\n    return -1;\n  };\n  /**\n   * Determines the index of the adjacent tab closest to either edge of the Tab Bar in RTL\n   * @param index The index of the tab\n   * @param tabDimensions The dimensions of the tab\n   * @param scrollPosition The current scroll position\n   * @param barWidth The width of the tab bar\n   * @param scrollContentWidth The width of the scroller content\n   */\n  MDCTabBarFoundation.prototype.findAdjacentTabIndexClosestToEdgeRTL = function (index, tabDimensions, scrollPosition, barWidth, scrollContentWidth) {\n    var rootLeft = scrollContentWidth - tabDimensions.rootLeft - barWidth - scrollPosition;\n    var rootRight = scrollContentWidth - tabDimensions.rootRight - scrollPosition;\n    var rootDelta = rootLeft + rootRight;\n    var leftEdgeIsCloser = rootLeft > 0 || rootDelta > 0;\n    var rightEdgeIsCloser = rootRight < 0 || rootDelta < 0;\n    if (leftEdgeIsCloser) {\n      return index + 1;\n    }\n    if (rightEdgeIsCloser) {\n      return index - 1;\n    }\n    return -1;\n  };\n  /**\n   * Returns the key associated with a keydown event\n   * @param evt The keydown event\n   */\n  MDCTabBarFoundation.prototype.getKeyFromEvent = function (evt) {\n    if (ACCEPTABLE_KEYS.has(evt.key)) {\n      return evt.key;\n    }\n    return KEYCODE_MAP.get(evt.keyCode);\n  };\n  MDCTabBarFoundation.prototype.isActivationKey = function (key) {\n    return key === strings.SPACE_KEY || key === strings.ENTER_KEY;\n  };\n  /**\n   * Returns whether a given index is inclusively between the ends\n   * @param index The index to test\n   */\n  MDCTabBarFoundation.prototype.indexIsInRange = function (index) {\n    return index >= 0 && index < this.adapter.getTabListLength();\n  };\n  /**\n   * Returns the view's RTL property\n   */\n  MDCTabBarFoundation.prototype.isRTL = function () {\n    return this.adapter.isRTL();\n  };\n  /**\n   * Scrolls the tab at the given index into view for left-to-right user agents.\n   * @param index The index of the tab to scroll into view\n   */\n  MDCTabBarFoundation.prototype.scrollIntoViewImpl = function (index) {\n    var scrollPosition = this.adapter.getScrollPosition();\n    var barWidth = this.adapter.getOffsetWidth();\n    var tabDimensions = this.adapter.getTabDimensionsAtIndex(index);\n    var nextIndex = this.findAdjacentTabIndexClosestToEdge(index, tabDimensions, scrollPosition, barWidth);\n    if (!this.indexIsInRange(nextIndex)) {\n      return;\n    }\n    var scrollIncrement = this.calculateScrollIncrement(index, nextIndex, scrollPosition, barWidth);\n    this.adapter.incrementScroll(scrollIncrement);\n  };\n  /**\n   * Scrolls the tab at the given index into view in RTL\n   * @param index The tab index to make visible\n   */\n  MDCTabBarFoundation.prototype.scrollIntoViewImplRTL = function (index) {\n    var scrollPosition = this.adapter.getScrollPosition();\n    var barWidth = this.adapter.getOffsetWidth();\n    var tabDimensions = this.adapter.getTabDimensionsAtIndex(index);\n    var scrollWidth = this.adapter.getScrollContentWidth();\n    var nextIndex = this.findAdjacentTabIndexClosestToEdgeRTL(index, tabDimensions, scrollPosition, barWidth, scrollWidth);\n    if (!this.indexIsInRange(nextIndex)) {\n      return;\n    }\n    var scrollIncrement = this.calculateScrollIncrementRTL(index, nextIndex, scrollPosition, barWidth, scrollWidth);\n    this.adapter.incrementScroll(scrollIncrement);\n  };\n  return MDCTabBarFoundation;\n}(MDCFoundation);\nexport { MDCTabBarFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCTabBarFoundation;","map":{"version":3,"names":["MDCFoundation","numbers","strings","ACCEPTABLE_KEYS","Set","add","ARROW_LEFT_KEY","ARROW_RIGHT_KEY","END_KEY","HOME_KEY","ENTER_KEY","SPACE_KEY","KEYCODE_MAP","Map","set","ARROW_LEFT_KEYCODE","ARROW_RIGHT_KEYCODE","END_KEYCODE","HOME_KEYCODE","ENTER_KEYCODE","SPACE_KEYCODE","MDCTabBarFoundation","_super","__extends","adapter","_this","call","__assign","defaultAdapter","useAutomaticActivation","Object","defineProperty","get","scrollTo","undefined","incrementScroll","getScrollPosition","getScrollContentWidth","getOffsetWidth","isRTL","setActiveTab","activateTabAtIndex","deactivateTabAtIndex","focusTabAtIndex","getTabIndicatorClientRectAtIndex","top","right","bottom","left","width","height","getTabDimensionsAtIndex","rootLeft","rootRight","contentLeft","contentRight","getPreviousActiveTabIndex","getFocusedTabIndex","getIndexOfTabById","getTabListLength","notifyTabActivated","prototype","setUseAutomaticActivation","activateTab","index","previousActiveIndex","indexIsInRange","previousClientRect","scrollIntoView","handleKeyDown","evt","key","getKeyFromEvent","isActivationKey","preventDefault","determineTargetFromKey","focusedTabIndex","handleTabInteraction","detail","tabId","scrollIntoViewImplRTL","scrollIntoViewImpl","origin","maxIndex","shouldGoToEnd","shouldDecrement","shouldIncrement","calculateScrollIncrement","nextIndex","scrollPosition","barWidth","nextTabDimensions","relativeContentLeft","relativeContentRight","leftIncrement","EXTRA_SCROLL_AMOUNT","rightIncrement","Math","min","max","calculateScrollIncrementRTL","scrollContentWidth","findAdjacentTabIndexClosestToEdge","tabDimensions","relativeRootLeft","relativeRootRight","relativeRootDelta","leftEdgeIsCloser","rightEdgeIsCloser","findAdjacentTabIndexClosestToEdgeRTL","rootDelta","has","keyCode","scrollIncrement","scrollWidth"],"sources":["foundation.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}