{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _decorate from \"@babel/runtime/helpers/decorate\";\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4;\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { property, state } from \"lit/decorators\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport \"../../../../components/chips/ha-assist-chip\";\nimport \"../../../../components/chips/ha-chip-set\";\nimport { showAutomationEditor } from \"../../../../data/automation\";\nimport { showScriptEditor } from \"../../../../data/script\";\nimport { buttonLinkStyle } from \"../../../../resources/styles\";\nexport var HaDeviceAutomationCard = _decorate(null, function (_initialize, _LitElement) {\n  var HaDeviceAutomationCard = /*#__PURE__*/function (_LitElement2) {\n    _inherits(HaDeviceAutomationCard, _LitElement2);\n    function HaDeviceAutomationCard(localizeDeviceAutomation) {\n      var _this;\n      _classCallCheck(this, HaDeviceAutomationCard);\n      _this = _callSuper(this, HaDeviceAutomationCard);\n      _this.headerKey = void 0;\n      _this.type = void 0;\n      _initialize(_assertThisInitialized(_this));\n      _this._localizeDeviceAutomation = localizeDeviceAutomation;\n      return _this;\n    }\n    return _createClass(HaDeviceAutomationCard);\n  }(_LitElement);\n  return {\n    F: HaDeviceAutomationCard,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"deviceId\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"script\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"automations\",\n      value: function value() {\n        return [];\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"entityReg\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_showSecondary\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_localizeDeviceAutomation\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"shouldUpdate\",\n      value: function shouldUpdate(changedProps) {\n        if (changedProps.has(\"deviceId\") || changedProps.has(\"automations\")) {\n          return true;\n        }\n        var oldHass = changedProps.get(\"hass\");\n        if (!oldHass || oldHass.language !== this.hass.language) {\n          return true;\n        }\n        return false;\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var _this2 = this;\n        if (this.automations.length === 0 || !this.entityReg) {\n          return nothing;\n        }\n        var automations = this._showSecondary ? this.automations : this.automations.filter(function (automation) {\n          var _automation$metadata;\n          return ((_automation$metadata = automation.metadata) === null || _automation$metadata === void 0 ? void 0 : _automation$metadata.secondary) === false;\n        });\n        return html(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      <h3>\", \"</h3>\\n      <div class=\\\"content\\\">\\n        <ha-chip-set>\\n          \", \"\\n        </ha-chip-set>\\n        \", \"\\n      </div>\\n    \"])), this.hass.localize(this.headerKey), automations.map(function (automation, idx) {\n          var _automation$metadata2;\n          return html(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n              <ha-assist-chip\\n                filled\\n                .index=\", \"\\n                @click=\", \"\\n                class=\", \"\\n                .label=\", \"\\n              >\\n              </ha-assist-chip>\\n            \"])), idx, _this2._handleAutomationClicked, (_automation$metadata2 = automation.metadata) !== null && _automation$metadata2 !== void 0 && _automation$metadata2.secondary ? \"secondary\" : \"\", _this2._localizeDeviceAutomation(_this2.hass, _this2.entityReg, automation));\n        }), !this._showSecondary && automations.length < this.automations.length ? html(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"<button class=\\\"link\\\" @click=\", \">\\n              Show \", \" more...\\n            </button>\"])), this._toggleSecondary, this.automations.length - automations.length) : \"\");\n      }\n    }, {\n      kind: \"method\",\n      key: \"_toggleSecondary\",\n      value: function _toggleSecondary() {\n        this._showSecondary = !this._showSecondary;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleAutomationClicked\",\n      value: function _handleAutomationClicked(ev) {\n        var automation = Object.assign({}, this.automations[ev.currentTarget.index]);\n        if (!automation) {\n          return;\n        }\n        delete automation.metadata;\n        if (this.script) {\n          showScriptEditor({\n            sequence: [automation]\n          });\n          fireEvent(this, \"entry-selected\");\n          return;\n        }\n        var data = {};\n        data[this.type] = [automation];\n        showAutomationEditor(data);\n        fireEvent(this, \"entry-selected\");\n      }\n    }, {\n      kind: \"field\",\n      static: true,\n      key: \"styles\",\n      value: function value() {\n        return [buttonLinkStyle, css(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n      h3 {\\n        color: var(--primary-text-color);\\n      }\\n      .secondary {\\n        --ha-assist-chip-filled-container-color: rgba(\\n          var(--rgb-primary-text-color),\\n          0.07\\n        );\\n      }\\n      button.link {\\n        color: var(--primary-color);\\n      }\\n    \"])))];\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","nothing","property","state","fireEvent","showAutomationEditor","showScriptEditor","buttonLinkStyle","HaDeviceAutomationCard","_decorate","_initialize","_LitElement","_LitElement2","_inherits","localizeDeviceAutomation","_this","_classCallCheck","_callSuper","headerKey","type","_assertThisInitialized","_localizeDeviceAutomation","_createClass","F","d","kind","decorators","attribute","key","value","Boolean","shouldUpdate","changedProps","has","oldHass","get","language","hass","render","_this2","automations","length","entityReg","_showSecondary","filter","automation","_automation$metadata","metadata","secondary","_templateObject","_taggedTemplateLiteral","localize","map","idx","_automation$metadata2","_templateObject2","_handleAutomationClicked","_templateObject3","_toggleSecondary","ev","Object","assign","currentTarget","index","script","sequence","data","static","_templateObject4"],"sources":["/Users/sercanardil/Desktop/frontend/src/panels/config/devices/device-detail/ha-device-automation-card.ts"],"sourcesContent":["import { css, html, LitElement, nothing } from \"lit\";\nimport { property, state } from \"lit/decorators\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport \"../../../../components/chips/ha-assist-chip\";\nimport \"../../../../components/chips/ha-chip-set\";\nimport { showAutomationEditor } from \"../../../../data/automation\";\nimport {\n  DeviceAction,\n  DeviceAutomation,\n} from \"../../../../data/device_automation\";\nimport { EntityRegistryEntry } from \"../../../../data/entity_registry\";\nimport { showScriptEditor } from \"../../../../data/script\";\nimport { buttonLinkStyle } from \"../../../../resources/styles\";\nimport { HomeAssistant } from \"../../../../types\";\n\ndeclare global {\n  interface HASSDomEvents {\n    \"entry-selected\": undefined;\n  }\n}\n\nexport abstract class HaDeviceAutomationCard<\n  T extends DeviceAutomation,\n> extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property() public deviceId?: string;\n\n  @property({ type: Boolean }) public script = false;\n\n  @property({ attribute: false }) public automations: T[] = [];\n\n  @property({ attribute: false }) entityReg?: EntityRegistryEntry[];\n\n  @state() public _showSecondary = false;\n\n  abstract headerKey: Parameters<typeof this.hass.localize>[0];\n\n  abstract type: \"action\" | \"condition\" | \"trigger\";\n\n  private _localizeDeviceAutomation: (\n    hass: HomeAssistant,\n    entityRegistry: EntityRegistryEntry[],\n    automation: T\n  ) => string;\n\n  constructor(\n    localizeDeviceAutomation: HaDeviceAutomationCard<T>[\"_localizeDeviceAutomation\"]\n  ) {\n    super();\n    this._localizeDeviceAutomation = localizeDeviceAutomation;\n  }\n\n  protected shouldUpdate(changedProps): boolean {\n    if (changedProps.has(\"deviceId\") || changedProps.has(\"automations\")) {\n      return true;\n    }\n    const oldHass = changedProps.get(\"hass\") as HomeAssistant | undefined;\n    if (!oldHass || oldHass.language !== this.hass.language) {\n      return true;\n    }\n    return false;\n  }\n\n  protected render() {\n    if (this.automations.length === 0 || !this.entityReg) {\n      return nothing;\n    }\n    const automations = this._showSecondary\n      ? this.automations\n      : this.automations.filter(\n          (automation) => automation.metadata?.secondary === false\n        );\n    return html`\n      <h3>${this.hass.localize(this.headerKey)}</h3>\n      <div class=\"content\">\n        <ha-chip-set>\n          ${automations.map(\n            (automation, idx) => html`\n              <ha-assist-chip\n                filled\n                .index=${idx}\n                @click=${this._handleAutomationClicked}\n                class=${automation.metadata?.secondary ? \"secondary\" : \"\"}\n                .label=${this._localizeDeviceAutomation(\n                  this.hass,\n                  this.entityReg!,\n                  automation\n                )}\n              >\n              </ha-assist-chip>\n            `\n          )}\n        </ha-chip-set>\n        ${!this._showSecondary && automations.length < this.automations.length\n          ? html`<button class=\"link\" @click=${this._toggleSecondary}>\n              Show ${this.automations.length - automations.length} more...\n            </button>`\n          : \"\"}\n      </div>\n    `;\n  }\n\n  private _toggleSecondary() {\n    this._showSecondary = !this._showSecondary;\n  }\n\n  private _handleAutomationClicked(ev: CustomEvent) {\n    const automation = { ...this.automations[(ev.currentTarget as any).index] };\n    if (!automation) {\n      return;\n    }\n    delete automation.metadata;\n    if (this.script) {\n      showScriptEditor({ sequence: [automation as DeviceAction] });\n      fireEvent(this, \"entry-selected\");\n      return;\n    }\n    const data = {};\n    data[this.type] = [automation];\n    showAutomationEditor(data);\n    fireEvent(this, \"entry-selected\");\n  }\n\n  static styles = [\n    buttonLinkStyle,\n    css`\n      h3 {\n        color: var(--primary-text-color);\n      }\n      .secondary {\n        --ha-assist-chip-filled-container-color: rgba(\n          var(--rgb-primary-text-color),\n          0.07\n        );\n      }\n      button.link {\n        color: var(--primary-color);\n      }\n    `,\n  ];\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}