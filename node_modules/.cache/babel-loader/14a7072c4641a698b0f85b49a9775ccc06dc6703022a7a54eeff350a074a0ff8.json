{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nconst mdiPencil = \"M20.71,7.04C21.1,6.65 21.1,6 20.71,5.63L18.37,3.29C18,2.9 17.35,2.9 16.96,3.29L15.12,5.12L18.87,8.87M3,17.25V21H6.75L17.81,9.93L14.06,6.18L3,17.25Z\";\nimport { css, html, LitElement } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { computeStateDomain } from \"../../common/entity/compute_state_domain\";\nimport { navigate } from \"../../common/navigate\";\nimport \"../../components/ha-icon-button\";\nimport \"../../components/ha-menu-button\";\nimport \"../../components/ha-top-app-bar-fixed\";\nimport \"../../components/map/ha-map\";\nimport { haStyle } from \"../../resources/styles\";\nlet HaPanelMap = _decorate([customElement(\"ha-panel-map\")], function (_initialize, _LitElement) {\n  class HaPanelMap extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaPanelMap,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"narrow\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_entities\",\n      value() {\n        return [];\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var _this$hass$user;\n        return html`\n      <ha-top-app-bar-fixed>\n        <ha-menu-button\n          slot=\"navigationIcon\"\n          .hass=${this.hass}\n          .narrow=${this.narrow}\n        ></ha-menu-button>\n        <div slot=\"title\">${this.hass.localize(\"panel.map\")}</div>\n        ${!__DEMO__ && (_this$hass$user = this.hass.user) !== null && _this$hass$user !== void 0 && _this$hass$user.is_admin ? html`<ha-icon-button\n              slot=\"actionItems\"\n              .label=${this.hass.localize(\"ui.panel.map.edit_zones\")}\n              .path=${mdiPencil}\n              @click=${this._openZonesEditor}\n            ></ha-icon-button>` : \"\"}\n        <ha-map\n          .hass=${this.hass}\n          .entities=${this._entities}\n          autoFit\n          interactiveZones\n        ></ha-map>\n      </ha-top-app-bar-fixed>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_openZonesEditor\",\n      value: function _openZonesEditor() {\n        navigate(\"/config/zone\");\n      }\n    }, {\n      kind: \"method\",\n      key: \"willUpdate\",\n      value: function willUpdate(changedProps) {\n        _get(_getPrototypeOf(HaPanelMap.prototype), \"willUpdate\", this).call(this, changedProps);\n        if (!changedProps.has(\"hass\")) {\n          return;\n        }\n        const oldHass = changedProps.get(\"hass\");\n        this._getStates(oldHass);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_getStates\",\n      value: function _getStates(oldHass) {\n        let changed = false;\n        const personSources = new Set();\n        const locationEntities = [];\n        Object.values(this.hass.states).forEach(entity => {\n          if (entity.state === \"home\" || !(\"latitude\" in entity.attributes) || !(\"longitude\" in entity.attributes)) {\n            return;\n          }\n          locationEntities.push(entity.entity_id);\n          if (computeStateDomain(entity) === \"person\" && entity.attributes.source) {\n            personSources.add(entity.attributes.source);\n          }\n          if ((oldHass === null || oldHass === void 0 ? void 0 : oldHass.states[entity.entity_id]) !== entity) {\n            changed = true;\n          }\n        });\n        if (changed) {\n          this._entities = locationEntities.filter(entity => !personSources.has(entity));\n        }\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [haStyle, css`\n        ha-map {\n          height: calc(100vh - var(--header-height));\n        }\n      `];\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","customElement","property","computeStateDomain","navigate","haStyle","HaPanelMap","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","type","Boolean","render","_this$hass$user","hass","narrow","localize","__DEMO__","user","is_admin","mdiPencil","_openZonesEditor","_entities","willUpdate","changedProps","_get","_getPrototypeOf","prototype","call","has","oldHass","get","_getStates","changed","personSources","Set","locationEntities","Object","values","states","forEach","entity","state","attributes","push","entity_id","source","add","filter","static","styles"],"sources":["/workspaces/frontend/src/panels/map/ha-panel-map.ts"],"sourcesContent":["import { mdiPencil } from \"@mdi/js\";\nimport { css, CSSResultGroup, html, LitElement, PropertyValues } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { computeStateDomain } from \"../../common/entity/compute_state_domain\";\nimport { navigate } from \"../../common/navigate\";\nimport \"../../components/ha-icon-button\";\nimport \"../../components/ha-menu-button\";\nimport \"../../components/ha-top-app-bar-fixed\";\nimport \"../../components/map/ha-map\";\nimport { haStyle } from \"../../resources/styles\";\nimport { HomeAssistant } from \"../../types\";\n\n@customElement(\"ha-panel-map\")\nclass HaPanelMap extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ type: Boolean }) public narrow = false;\n\n  private _entities: string[] = [];\n\n  protected render() {\n    return html`\n      <ha-top-app-bar-fixed>\n        <ha-menu-button\n          slot=\"navigationIcon\"\n          .hass=${this.hass}\n          .narrow=${this.narrow}\n        ></ha-menu-button>\n        <div slot=\"title\">${this.hass.localize(\"panel.map\")}</div>\n        ${!__DEMO__ && this.hass.user?.is_admin\n          ? html`<ha-icon-button\n              slot=\"actionItems\"\n              .label=${this.hass!.localize(\"ui.panel.map.edit_zones\")}\n              .path=${mdiPencil}\n              @click=${this._openZonesEditor}\n            ></ha-icon-button>`\n          : \"\"}\n        <ha-map\n          .hass=${this.hass}\n          .entities=${this._entities}\n          autoFit\n          interactiveZones\n        ></ha-map>\n      </ha-top-app-bar-fixed>\n    `;\n  }\n\n  private _openZonesEditor() {\n    navigate(\"/config/zone\");\n  }\n\n  public willUpdate(changedProps: PropertyValues) {\n    super.willUpdate(changedProps);\n    if (!changedProps.has(\"hass\")) {\n      return;\n    }\n    const oldHass = changedProps.get(\"hass\") as HomeAssistant | undefined;\n    this._getStates(oldHass);\n  }\n\n  private _getStates(oldHass?: HomeAssistant) {\n    let changed = false;\n    const personSources = new Set<string>();\n    const locationEntities: string[] = [];\n    Object.values(this.hass!.states).forEach((entity) => {\n      if (\n        entity.state === \"home\" ||\n        !(\"latitude\" in entity.attributes) ||\n        !(\"longitude\" in entity.attributes)\n      ) {\n        return;\n      }\n      locationEntities.push(entity.entity_id);\n      if (computeStateDomain(entity) === \"person\" && entity.attributes.source) {\n        personSources.add(entity.attributes.source);\n      }\n      if (oldHass?.states[entity.entity_id] !== entity) {\n        changed = true;\n      }\n    });\n\n    if (changed) {\n      this._entities = locationEntities.filter(\n        (entity) => !personSources.has(entity)\n      );\n    }\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyle,\n      css`\n        ha-map {\n          height: calc(100vh - var(--header-height));\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-panel-map\": HaPanelMap;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}