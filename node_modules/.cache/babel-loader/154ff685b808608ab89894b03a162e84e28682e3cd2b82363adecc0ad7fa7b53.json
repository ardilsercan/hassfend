{"ast":null,"code":"/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { html, LitElement, nothing } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { requestUpdateOnAriaChange } from '../../internal/aria/delegate.js';\n/**\n * A progress component.\n */\nexport class Progress extends LitElement {\n  constructor() {\n    super(...arguments);\n    /**\n     * Progress to display, a fraction between 0 and `max`.\n     */\n    this.value = 0;\n    /**\n     * Maximum progress to display, defaults to 1.\n     */\n    this.max = 1;\n    /**\n     * Whether or not to display indeterminate progress, which gives no indication\n     * to how long an activity will take.\n     */\n    this.indeterminate = false;\n    /**\n     * Whether or not to render indeterminate mode using 4 colors instead of one.\n     */\n    this.fourColor = false;\n  }\n  render() {\n    // Needed for closure conformance\n    const {\n      ariaLabel\n    } = this;\n    return html`\n      <div\n        class=\"progress ${classMap(this.getRenderClasses())}\"\n        role=\"progressbar\"\n        aria-label=\"${ariaLabel || nothing}\"\n        aria-valuemin=\"0\"\n        aria-valuemax=${this.max}\n        aria-valuenow=${this.indeterminate ? nothing : this.value}\n        >${this.renderIndicator()}</div\n      >\n    `;\n  }\n  getRenderClasses() {\n    return {\n      'indeterminate': this.indeterminate,\n      'four-color': this.fourColor\n    };\n  }\n}\n(() => {\n  requestUpdateOnAriaChange(Progress);\n})();\n__decorate([property({\n  type: Number\n})], Progress.prototype, \"value\", void 0);\n__decorate([property({\n  type: Number\n})], Progress.prototype, \"max\", void 0);\n__decorate([property({\n  type: Boolean\n})], Progress.prototype, \"indeterminate\", void 0);\n__decorate([property({\n  type: Boolean,\n  attribute: 'four-color'\n})], Progress.prototype, \"fourColor\", void 0);","map":{"version":3,"names":["html","LitElement","nothing","property","classMap","requestUpdateOnAriaChange","Progress","constructor","value","max","indeterminate","fourColor","render","ariaLabel","getRenderClasses","renderIndicator","__decorate","type","Number","Boolean","attribute"],"sources":["progress.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {html, LitElement, nothing, TemplateResult} from 'lit';\nimport {property} from 'lit/decorators.js';\nimport {classMap} from 'lit/directives/class-map.js';\n\nimport {ARIAMixinStrict} from '../../internal/aria/aria.js';\nimport {requestUpdateOnAriaChange} from '../../internal/aria/delegate.js';\n\n/**\n * A progress component.\n */\nexport abstract class Progress extends LitElement {\n  static {\n    requestUpdateOnAriaChange(Progress);\n  }\n\n  /**\n   * Progress to display, a fraction between 0 and `max`.\n   */\n  @property({type: Number}) value = 0;\n\n  /**\n   * Maximum progress to display, defaults to 1.\n   */\n  @property({type: Number}) max = 1;\n\n  /**\n   * Whether or not to display indeterminate progress, which gives no indication\n   * to how long an activity will take.\n   */\n  @property({type: Boolean}) indeterminate = false;\n\n  /**\n   * Whether or not to render indeterminate mode using 4 colors instead of one.\n   */\n  @property({type: Boolean, attribute: 'four-color'}) fourColor = false;\n\n  protected override render() {\n    // Needed for closure conformance\n    const {ariaLabel} = this as ARIAMixinStrict;\n    return html`\n      <div\n        class=\"progress ${classMap(this.getRenderClasses())}\"\n        role=\"progressbar\"\n        aria-label=\"${ariaLabel || nothing}\"\n        aria-valuemin=\"0\"\n        aria-valuemax=${this.max}\n        aria-valuenow=${this.indeterminate ? nothing : this.value}\n        >${this.renderIndicator()}</div\n      >\n    `;\n  }\n\n  protected getRenderClasses() {\n    return {\n      'indeterminate': this.indeterminate,\n      'four-color': this.fourColor,\n    };\n  }\n\n  protected abstract renderIndicator(): TemplateResult;\n}\n"],"mappings":"AAAA;;;;;;AAMA,SAAQA,IAAI,EAAEC,UAAU,EAAEC,OAAO,QAAuB,KAAK;AAC7D,SAAQC,QAAQ,QAAO,mBAAmB;AAC1C,SAAQC,QAAQ,QAAO,6BAA6B;AAGpD,SAAQC,yBAAyB,QAAO,iCAAiC;AAEzE;;;AAGA,OAAM,MAAgBC,QAAS,SAAQL,UAAU;EAAjDM,YAAA;;IAKE;;;IAG0B,KAAAC,KAAK,GAAG,CAAC;IAEnC;;;IAG0B,KAAAC,GAAG,GAAG,CAAC;IAEjC;;;;IAI2B,KAAAC,aAAa,GAAG,KAAK;IAEhD;;;IAGoD,KAAAC,SAAS,GAAG,KAAK;EA0BvE;EAxBqBC,MAAMA,CAAA;IACvB;IACA,MAAM;MAACC;IAAS,CAAC,GAAG,IAAuB;IAC3C,OAAOb,IAAI;;0BAEWI,QAAQ,CAAC,IAAI,CAACU,gBAAgB,EAAE,CAAC;;sBAErCD,SAAS,IAAIX,OAAO;;wBAElB,IAAI,CAACO,GAAG;wBACR,IAAI,CAACC,aAAa,GAAGR,OAAO,GAAG,IAAI,CAACM,KAAK;WACtD,IAAI,CAACO,eAAe,EAAE;;KAE5B;EACH;EAEUD,gBAAgBA,CAAA;IACxB,OAAO;MACL,eAAe,EAAE,IAAI,CAACJ,aAAa;MACnC,YAAY,EAAE,IAAI,CAACC;KACpB;EACH;;AA9CA;EACEN,yBAAyB,CAACC,QAAQ,CAAC;AACrC,CAAC;AAKyBU,UAAA,EAAzBb,QAAQ,CAAC;EAACc,IAAI,EAAEC;AAAM,CAAC,CAAC,C,sCAAW;AAKVF,UAAA,EAAzBb,QAAQ,CAAC;EAACc,IAAI,EAAEC;AAAM,CAAC,CAAC,C,oCAAS;AAMPF,UAAA,EAA1Bb,QAAQ,CAAC;EAACc,IAAI,EAAEE;AAAO,CAAC,CAAC,C,8CAAuB;AAKGH,UAAA,EAAnDb,QAAQ,CAAC;EAACc,IAAI,EAAEE,OAAO;EAAEC,SAAS,EAAE;AAAY,CAAC,CAAC,C,0CAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}