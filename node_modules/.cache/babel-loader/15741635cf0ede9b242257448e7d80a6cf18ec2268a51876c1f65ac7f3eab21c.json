{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\n/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { dedupingMixin } from '@polymer/polymer/lib/utils/mixin.js';\nimport { isKeyboardActive } from './focus-utils.js';\n\n/**\n * A mixin to handle `focused` and `focus-ring` attributes based on focus.\n *\n * @polymerMixin\n */\nexport var FocusMixin = dedupingMixin(function (superclass) {\n  return /*#__PURE__*/function (_superclass) {\n    _inherits(FocusMixinClass, _superclass);\n    function FocusMixinClass() {\n      _classCallCheck(this, FocusMixinClass);\n      return _callSuper(this, FocusMixinClass, arguments);\n    }\n    _createClass(FocusMixinClass, [{\n      key: \"_keyboardActive\",\n      get:\n      /**\n       * @protected\n       * @return {boolean}\n       */\n      function get() {\n        return isKeyboardActive();\n      }\n\n      /** @protected */\n    }, {\n      key: \"ready\",\n      value: function ready() {\n        var _this = this;\n        this.addEventListener('focusin', function (e) {\n          if (_this._shouldSetFocus(e)) {\n            _this._setFocused(true);\n          }\n        });\n        this.addEventListener('focusout', function (e) {\n          if (_this._shouldRemoveFocus(e)) {\n            _this._setFocused(false);\n          }\n        });\n\n        // In super.ready() other 'focusin' and 'focusout' listeners might be\n        // added, so we call it after our own ones to ensure they execute first.\n        // Issue to watch out: when incorrect, <vaadin-combo-box> refocuses the\n        // input field on iOS after \"Done\" is pressed.\n        _get(_getPrototypeOf(FocusMixinClass.prototype), \"ready\", this).call(this);\n      }\n\n      /** @protected */\n    }, {\n      key: \"disconnectedCallback\",\n      value: function disconnectedCallback() {\n        _get(_getPrototypeOf(FocusMixinClass.prototype), \"disconnectedCallback\", this).call(this);\n\n        // In non-Chrome browsers, blur does not fire on the element when it is disconnected.\n        // reproducible in `<vaadin-date-picker>` when closing on `Cancel` or `Today` click.\n        if (this.hasAttribute('focused')) {\n          this._setFocused(false);\n        }\n      }\n\n      /**\n       * Override to change how focused and focus-ring attributes are set.\n       *\n       * @param {boolean} focused\n       * @protected\n       */\n    }, {\n      key: \"_setFocused\",\n      value: function _setFocused(focused) {\n        this.toggleAttribute('focused', focused);\n\n        // Focus-ring is true when the element was focused from the keyboard.\n        // Focus Ring [A11ycasts]: https://youtu.be/ilj2P5-5CjI\n        this.toggleAttribute('focus-ring', focused && this._keyboardActive);\n      }\n\n      /**\n       * Override to define if the field receives focus based on the event.\n       *\n       * @param {FocusEvent} _event\n       * @return {boolean}\n       * @protected\n       */\n    }, {\n      key: \"_shouldSetFocus\",\n      value: function _shouldSetFocus(_event) {\n        return true;\n      }\n\n      /**\n       * Override to define if the field loses focus based on the event.\n       *\n       * @param {FocusEvent} _event\n       * @return {boolean}\n       * @protected\n       */\n    }, {\n      key: \"_shouldRemoveFocus\",\n      value: function _shouldRemoveFocus(_event) {\n        return true;\n      }\n    }]);\n    return FocusMixinClass;\n  }(superclass);\n});","map":{"version":3,"names":["dedupingMixin","isKeyboardActive","FocusMixin","superclass","_superclass","_inherits","FocusMixinClass","_classCallCheck","_callSuper","arguments","_createClass","key","get","value","ready","_this","addEventListener","e","_shouldSetFocus","_setFocused","_shouldRemoveFocus","_get","_getPrototypeOf","prototype","call","disconnectedCallback","hasAttribute","focused","toggleAttribute","_keyboardActive","_event"],"sources":["/workspaces/frontend/node_modules/@vaadin/a11y-base/src/focus-mixin.js"],"sourcesContent":["/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { dedupingMixin } from '@polymer/polymer/lib/utils/mixin.js';\nimport { isKeyboardActive } from './focus-utils.js';\n\n/**\n * A mixin to handle `focused` and `focus-ring` attributes based on focus.\n *\n * @polymerMixin\n */\nexport const FocusMixin = dedupingMixin(\n  (superclass) =>\n    class FocusMixinClass extends superclass {\n      /**\n       * @protected\n       * @return {boolean}\n       */\n      get _keyboardActive() {\n        return isKeyboardActive();\n      }\n\n      /** @protected */\n      ready() {\n        this.addEventListener('focusin', (e) => {\n          if (this._shouldSetFocus(e)) {\n            this._setFocused(true);\n          }\n        });\n\n        this.addEventListener('focusout', (e) => {\n          if (this._shouldRemoveFocus(e)) {\n            this._setFocused(false);\n          }\n        });\n\n        // In super.ready() other 'focusin' and 'focusout' listeners might be\n        // added, so we call it after our own ones to ensure they execute first.\n        // Issue to watch out: when incorrect, <vaadin-combo-box> refocuses the\n        // input field on iOS after \"Done\" is pressed.\n        super.ready();\n      }\n\n      /** @protected */\n      disconnectedCallback() {\n        super.disconnectedCallback();\n\n        // In non-Chrome browsers, blur does not fire on the element when it is disconnected.\n        // reproducible in `<vaadin-date-picker>` when closing on `Cancel` or `Today` click.\n        if (this.hasAttribute('focused')) {\n          this._setFocused(false);\n        }\n      }\n\n      /**\n       * Override to change how focused and focus-ring attributes are set.\n       *\n       * @param {boolean} focused\n       * @protected\n       */\n      _setFocused(focused) {\n        this.toggleAttribute('focused', focused);\n\n        // Focus-ring is true when the element was focused from the keyboard.\n        // Focus Ring [A11ycasts]: https://youtu.be/ilj2P5-5CjI\n        this.toggleAttribute('focus-ring', focused && this._keyboardActive);\n      }\n\n      /**\n       * Override to define if the field receives focus based on the event.\n       *\n       * @param {FocusEvent} _event\n       * @return {boolean}\n       * @protected\n       */\n      _shouldSetFocus(_event) {\n        return true;\n      }\n\n      /**\n       * Override to define if the field loses focus based on the event.\n       *\n       * @param {FocusEvent} _event\n       * @return {boolean}\n       * @protected\n       */\n      _shouldRemoveFocus(_event) {\n        return true;\n      }\n    },\n);\n"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA,SAASA,aAAa,QAAQ,qCAAqC;AACnE,SAASC,gBAAgB,QAAQ,kBAAkB;;AAEnD;AACA;AACA;AACA;AACA;AACA,OAAO,IAAMC,UAAU,GAAGF,aAAa,CACrC,UAACG,UAAU;EAAA,8BAAAC,WAAA;IAAAC,SAAA,CAAAC,eAAA,EAAAF,WAAA;IAAA,SAAAE,gBAAA;MAAAC,eAAA,OAAAD,eAAA;MAAA,OAAAE,UAAA,OAAAF,eAAA,EAAAG,SAAA;IAAA;IAAAC,YAAA,CAAAJ,eAAA;MAAAK,GAAA;MAAAC,GAAA;MAEP;AACN;AACA;AACA;MACM,SAAAA,IAAA,EAAsB;QACpB,OAAOX,gBAAgB,CAAC,CAAC;MAC3B;;MAEA;IAAA;MAAAU,GAAA;MAAAE,KAAA,EACA,SAAAC,MAAA,EAAQ;QAAA,IAAAC,KAAA;QACN,IAAI,CAACC,gBAAgB,CAAC,SAAS,EAAE,UAACC,CAAC,EAAK;UACtC,IAAIF,KAAI,CAACG,eAAe,CAACD,CAAC,CAAC,EAAE;YAC3BF,KAAI,CAACI,WAAW,CAAC,IAAI,CAAC;UACxB;QACF,CAAC,CAAC;QAEF,IAAI,CAACH,gBAAgB,CAAC,UAAU,EAAE,UAACC,CAAC,EAAK;UACvC,IAAIF,KAAI,CAACK,kBAAkB,CAACH,CAAC,CAAC,EAAE;YAC9BF,KAAI,CAACI,WAAW,CAAC,KAAK,CAAC;UACzB;QACF,CAAC,CAAC;;QAEF;QACA;QACA;QACA;QACAE,IAAA,CAAAC,eAAA,CAAAhB,eAAA,CAAAiB,SAAA,kBAAAC,IAAA;MACF;;MAEA;IAAA;MAAAb,GAAA;MAAAE,KAAA,EACA,SAAAY,qBAAA,EAAuB;QACrBJ,IAAA,CAAAC,eAAA,CAAAhB,eAAA,CAAAiB,SAAA,iCAAAC,IAAA;;QAEA;QACA;QACA,IAAI,IAAI,CAACE,YAAY,CAAC,SAAS,CAAC,EAAE;UAChC,IAAI,CAACP,WAAW,CAAC,KAAK,CAAC;QACzB;MACF;;MAEA;AACN;AACA;AACA;AACA;AACA;IALM;MAAAR,GAAA;MAAAE,KAAA,EAMA,SAAAM,YAAYQ,OAAO,EAAE;QACnB,IAAI,CAACC,eAAe,CAAC,SAAS,EAAED,OAAO,CAAC;;QAExC;QACA;QACA,IAAI,CAACC,eAAe,CAAC,YAAY,EAAED,OAAO,IAAI,IAAI,CAACE,eAAe,CAAC;MACrE;;MAEA;AACN;AACA;AACA;AACA;AACA;AACA;IANM;MAAAlB,GAAA;MAAAE,KAAA,EAOA,SAAAK,gBAAgBY,MAAM,EAAE;QACtB,OAAO,IAAI;MACb;;MAEA;AACN;AACA;AACA;AACA;AACA;AACA;IANM;MAAAnB,GAAA;MAAAE,KAAA,EAOA,SAAAO,mBAAmBU,MAAM,EAAE;QACzB,OAAO,IAAI;MACb;IAAC;IAAA,OAAAxB,eAAA;EAAA,EA3E2BH,UAAU;AAAA,CA6E5C,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}