{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getWeekDataForRegion = exports.getTimeZonePreferenceForRegion = exports.getHourCyclesPreferenceDataForLocaleOrRegion = exports.getCalendarPreferenceDataForRegion = void 0;\nvar tslib_1 = require(\"tslib\");\nvar timezones_generated_1 = require(\"./timezones.generated\");\nvar hour_cycles_generated_1 = require(\"./hour-cycles.generated\");\nvar calendars_generated_1 = require(\"./calendars.generated\");\nvar week_data_generated_1 = require(\"./week-data.generated\");\nfunction getCalendarPreferenceDataForRegion(region) {\n  var _region = region ? region.toUpperCase() : null;\n  return (calendars_generated_1.calendars[_region || ''] || calendars_generated_1.calendars['001']).map(function (c) {\n    // Resolve aliases\n    // cldr-json/cldr-code v42.0.0-ALPHA3-2\n    // https://github.com/unicode-org/cldr-json/blob/42.0.0-ALPHA3-2/cldr-json/cldr-bcp47/bcp47/calendar.json\n    if (c === 'gregorian') {\n      return 'gregory';\n    }\n    if (c === 'islamic-civil') {\n      return 'islamicc';\n    }\n    // At the time this has been written this calendar was not listed in\n    // the supplemental calendarPreferenceData file\n    // https://github.com/unicode-org/cldr-json/blob/42.0.0-ALPHA3-2/cldr-json/cldr-core/supplemental/calendarPreferenceData.json\n    // if (c === 'ethiopic-amete-alem') {\n    //   return 'ethioaa'\n    // }\n    return c;\n  });\n}\nexports.getCalendarPreferenceDataForRegion = getCalendarPreferenceDataForRegion;\nfunction getHourCyclesPreferenceDataForLocaleOrRegion(locale, region) {\n  var _locale = locale.toLowerCase();\n  var _region = region ? region.toUpperCase() : '';\n  var hourCyclesPreference = hour_cycles_generated_1.hourCycles[_locale] || hour_cycles_generated_1.hourCycles[_region] || hour_cycles_generated_1.hourCycles[\"\".concat(_locale, \"-001\")] || hour_cycles_generated_1.hourCycles['001'];\n  return tslib_1.__spreadArray([], hourCyclesPreference, true);\n}\nexports.getHourCyclesPreferenceDataForLocaleOrRegion = getHourCyclesPreferenceDataForLocaleOrRegion;\nfunction getTimeZonePreferenceForRegion(region) {\n  var territory = region.toLowerCase();\n  if (timezones_generated_1.timezones[territory]) {\n    return tslib_1.__spreadArray([], timezones_generated_1.timezones[territory], true);\n  }\n  return [];\n}\nexports.getTimeZonePreferenceForRegion = getTimeZonePreferenceForRegion;\nfunction getWeekDataForRegion(region) {\n  var _region = region ? region.toUpperCase() : '';\n  return week_data_generated_1.weekData[_region || '001'] || week_data_generated_1.weekData['001'];\n}\nexports.getWeekDataForRegion = getWeekDataForRegion;","map":{"version":3,"names":["Object","defineProperty","exports","value","getWeekDataForRegion","getTimeZonePreferenceForRegion","getHourCyclesPreferenceDataForLocaleOrRegion","getCalendarPreferenceDataForRegion","tslib_1","require","timezones_generated_1","hour_cycles_generated_1","calendars_generated_1","week_data_generated_1","region","_region","toUpperCase","calendars","map","c","locale","_locale","toLowerCase","hourCyclesPreference","hourCycles","concat","__spreadArray","territory","timezones","weekData"],"sources":["/Users/sercanardil/Desktop/frontend/node_modules/@formatjs/intl-locale/preference-data.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getWeekDataForRegion = exports.getTimeZonePreferenceForRegion = exports.getHourCyclesPreferenceDataForLocaleOrRegion = exports.getCalendarPreferenceDataForRegion = void 0;\nvar tslib_1 = require(\"tslib\");\nvar timezones_generated_1 = require(\"./timezones.generated\");\nvar hour_cycles_generated_1 = require(\"./hour-cycles.generated\");\nvar calendars_generated_1 = require(\"./calendars.generated\");\nvar week_data_generated_1 = require(\"./week-data.generated\");\nfunction getCalendarPreferenceDataForRegion(region) {\n    var _region = region ? region.toUpperCase() : null;\n    return (calendars_generated_1.calendars[(_region || '')] || calendars_generated_1.calendars['001']).map(function (c) {\n        // Resolve aliases\n        // cldr-json/cldr-code v42.0.0-ALPHA3-2\n        // https://github.com/unicode-org/cldr-json/blob/42.0.0-ALPHA3-2/cldr-json/cldr-bcp47/bcp47/calendar.json\n        if (c === 'gregorian') {\n            return 'gregory';\n        }\n        if (c === 'islamic-civil') {\n            return 'islamicc';\n        }\n        // At the time this has been written this calendar was not listed in\n        // the supplemental calendarPreferenceData file\n        // https://github.com/unicode-org/cldr-json/blob/42.0.0-ALPHA3-2/cldr-json/cldr-core/supplemental/calendarPreferenceData.json\n        // if (c === 'ethiopic-amete-alem') {\n        //   return 'ethioaa'\n        // }\n        return c;\n    });\n}\nexports.getCalendarPreferenceDataForRegion = getCalendarPreferenceDataForRegion;\nfunction getHourCyclesPreferenceDataForLocaleOrRegion(locale, region) {\n    var _locale = locale.toLowerCase();\n    var _region = (region ? region.toUpperCase() : '');\n    var hourCyclesPreference = hour_cycles_generated_1.hourCycles[_locale] ||\n        hour_cycles_generated_1.hourCycles[_region] ||\n        hour_cycles_generated_1.hourCycles[\"\".concat(_locale, \"-001\")] ||\n        hour_cycles_generated_1.hourCycles['001'];\n    return tslib_1.__spreadArray([], hourCyclesPreference, true);\n}\nexports.getHourCyclesPreferenceDataForLocaleOrRegion = getHourCyclesPreferenceDataForLocaleOrRegion;\nfunction getTimeZonePreferenceForRegion(region) {\n    var territory = region.toLowerCase();\n    if (timezones_generated_1.timezones[territory]) {\n        return tslib_1.__spreadArray([], timezones_generated_1.timezones[territory], true);\n    }\n    return [];\n}\nexports.getTimeZonePreferenceForRegion = getTimeZonePreferenceForRegion;\nfunction getWeekDataForRegion(region) {\n    var _region = (region ? region.toUpperCase() : '');\n    return week_data_generated_1.weekData[_region || '001'] || week_data_generated_1.weekData['001'];\n}\nexports.getWeekDataForRegion = getWeekDataForRegion;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,oBAAoB,GAAGF,OAAO,CAACG,8BAA8B,GAAGH,OAAO,CAACI,4CAA4C,GAAGJ,OAAO,CAACK,kCAAkC,GAAG,KAAK,CAAC;AAClL,IAAIC,OAAO,GAAGC,OAAO,CAAC,OAAO,CAAC;AAC9B,IAAIC,qBAAqB,GAAGD,OAAO,CAAC,uBAAuB,CAAC;AAC5D,IAAIE,uBAAuB,GAAGF,OAAO,CAAC,yBAAyB,CAAC;AAChE,IAAIG,qBAAqB,GAAGH,OAAO,CAAC,uBAAuB,CAAC;AAC5D,IAAII,qBAAqB,GAAGJ,OAAO,CAAC,uBAAuB,CAAC;AAC5D,SAASF,kCAAkCA,CAACO,MAAM,EAAE;EAChD,IAAIC,OAAO,GAAGD,MAAM,GAAGA,MAAM,CAACE,WAAW,CAAC,CAAC,GAAG,IAAI;EAClD,OAAO,CAACJ,qBAAqB,CAACK,SAAS,CAAEF,OAAO,IAAI,EAAE,CAAE,IAAIH,qBAAqB,CAACK,SAAS,CAAC,KAAK,CAAC,EAAEC,GAAG,CAAC,UAAUC,CAAC,EAAE;IACjH;IACA;IACA;IACA,IAAIA,CAAC,KAAK,WAAW,EAAE;MACnB,OAAO,SAAS;IACpB;IACA,IAAIA,CAAC,KAAK,eAAe,EAAE;MACvB,OAAO,UAAU;IACrB;IACA;IACA;IACA;IACA;IACA;IACA;IACA,OAAOA,CAAC;EACZ,CAAC,CAAC;AACN;AACAjB,OAAO,CAACK,kCAAkC,GAAGA,kCAAkC;AAC/E,SAASD,4CAA4CA,CAACc,MAAM,EAAEN,MAAM,EAAE;EAClE,IAAIO,OAAO,GAAGD,MAAM,CAACE,WAAW,CAAC,CAAC;EAClC,IAAIP,OAAO,GAAID,MAAM,GAAGA,MAAM,CAACE,WAAW,CAAC,CAAC,GAAG,EAAG;EAClD,IAAIO,oBAAoB,GAAGZ,uBAAuB,CAACa,UAAU,CAACH,OAAO,CAAC,IAClEV,uBAAuB,CAACa,UAAU,CAACT,OAAO,CAAC,IAC3CJ,uBAAuB,CAACa,UAAU,CAAC,EAAE,CAACC,MAAM,CAACJ,OAAO,EAAE,MAAM,CAAC,CAAC,IAC9DV,uBAAuB,CAACa,UAAU,CAAC,KAAK,CAAC;EAC7C,OAAOhB,OAAO,CAACkB,aAAa,CAAC,EAAE,EAAEH,oBAAoB,EAAE,IAAI,CAAC;AAChE;AACArB,OAAO,CAACI,4CAA4C,GAAGA,4CAA4C;AACnG,SAASD,8BAA8BA,CAACS,MAAM,EAAE;EAC5C,IAAIa,SAAS,GAAGb,MAAM,CAACQ,WAAW,CAAC,CAAC;EACpC,IAAIZ,qBAAqB,CAACkB,SAAS,CAACD,SAAS,CAAC,EAAE;IAC5C,OAAOnB,OAAO,CAACkB,aAAa,CAAC,EAAE,EAAEhB,qBAAqB,CAACkB,SAAS,CAACD,SAAS,CAAC,EAAE,IAAI,CAAC;EACtF;EACA,OAAO,EAAE;AACb;AACAzB,OAAO,CAACG,8BAA8B,GAAGA,8BAA8B;AACvE,SAASD,oBAAoBA,CAACU,MAAM,EAAE;EAClC,IAAIC,OAAO,GAAID,MAAM,GAAGA,MAAM,CAACE,WAAW,CAAC,CAAC,GAAG,EAAG;EAClD,OAAOH,qBAAqB,CAACgB,QAAQ,CAACd,OAAO,IAAI,KAAK,CAAC,IAAIF,qBAAqB,CAACgB,QAAQ,CAAC,KAAK,CAAC;AACpG;AACA3B,OAAO,CAACE,oBAAoB,GAAGA,oBAAoB"},"metadata":{},"sourceType":"script","externalDependencies":[]}