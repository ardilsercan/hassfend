{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nconst mdiHelpCircle = \"M15.07,11.25L14.17,12.17C13.45,12.89 13,13.5 13,15H11V14.5C11,13.39 11.45,12.39 12.17,11.67L13.41,10.41C13.78,10.05 14,9.55 14,9C14,7.89 13.1,7 12,7A2,2 0 0,0 10,9H8A4,4 0 0,1 12,5A4,4 0 0,1 16,9C16,9.88 15.64,10.67 15.07,11.25M13,19H11V17H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12C22,6.47 17.5,2 12,2Z\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { ensureArray } from \"../common/array/ensure-array\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { computeDomain } from \"../common/entity/compute_domain\";\nimport { computeObjectId } from \"../common/entity/compute_object_id\";\nimport { supportsFeature } from \"../common/entity/supports-feature\";\nimport { nestedArrayMove } from \"../common/util/array-move\";\nimport { fetchIntegrationManifest } from \"../data/integration\";\nimport { areaMeetsTargetSelector, deviceMeetsTargetSelector, entityMeetsTargetSelector, expandAreaTarget, expandDeviceTarget } from \"../data/selector\";\nimport { documentationUrl } from \"../util/documentation-url\";\nimport \"./ha-checkbox\";\nimport \"./ha-icon-button\";\nimport \"./ha-selector/ha-selector\";\nimport \"./ha-service-picker\";\nimport \"./ha-settings-row\";\nimport \"./ha-yaml-editor\";\nconst attributeFilter = (values, attribute) => {\n  if (typeof attribute === \"object\") {\n    if (Array.isArray(attribute)) {\n      return attribute.some(item => values.includes(item));\n    }\n    return false;\n  }\n  return values.includes(attribute);\n};\nconst showOptionalToggle = field => field.selector && !field.required && !(\"boolean\" in field.selector && field.default);\nexport let HaServiceControl = _decorate([customElement(\"ha-service-control\")], function (_initialize, _LitElement) {\n  class HaServiceControl extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaServiceControl,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"value\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"disabled\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        reflect: true\n      })],\n      key: \"narrow\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"showAdvanced\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        reflect: true\n      })],\n      key: \"hidePicker\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_value\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_checkedKeys\",\n      value() {\n        return new Set();\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_manifest\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [query(\"ha-yaml-editor\")],\n      key: \"_yamlEditor\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"willUpdate\",\n      value: function willUpdate(changedProperties) {\n        var _this$value, _this$value2, _this$value3, _this$value5, _this$value6, _this$value7, _this$value8, _this$_value;\n        if (!this.hasUpdated) {\n          this.hass.loadBackendTranslation(\"services\");\n          this.hass.loadBackendTranslation(\"selector\");\n        }\n        if (!changedProperties.has(\"value\")) {\n          return;\n        }\n        const oldValue = changedProperties.get(\"value\");\n        if ((oldValue === null || oldValue === void 0 ? void 0 : oldValue.service) !== ((_this$value = this.value) === null || _this$value === void 0 ? void 0 : _this$value.service)) {\n          this._checkedKeys = new Set();\n        }\n        const serviceData = this._getServiceInfo((_this$value2 = this.value) === null || _this$value2 === void 0 ? void 0 : _this$value2.service, this.hass.services);\n\n        // Fetch the manifest if we have a service selected and the service domain changed.\n        // If no service is selected, clear the manifest.\n        if ((_this$value3 = this.value) !== null && _this$value3 !== void 0 && _this$value3.service) {\n          if (!(oldValue !== null && oldValue !== void 0 && oldValue.service) || computeDomain(this.value.service) !== computeDomain(oldValue.service)) {\n            var _this$value4;\n            this._fetchManifest(computeDomain((_this$value4 = this.value) === null || _this$value4 === void 0 ? void 0 : _this$value4.service));\n          }\n        } else {\n          this._manifest = undefined;\n        }\n        if (serviceData && \"target\" in serviceData && ((_this$value5 = this.value) !== null && _this$value5 !== void 0 && (_this$value5 = _this$value5.data) !== null && _this$value5 !== void 0 && _this$value5.entity_id || (_this$value6 = this.value) !== null && _this$value6 !== void 0 && (_this$value6 = _this$value6.data) !== null && _this$value6 !== void 0 && _this$value6.area_id || (_this$value7 = this.value) !== null && _this$value7 !== void 0 && (_this$value7 = _this$value7.data) !== null && _this$value7 !== void 0 && _this$value7.device_id)) {\n          var _this$value$target, _this$value$target2, _this$value$target3;\n          const target = {\n            ...this.value.target\n          };\n          if (this.value.data.entity_id && !((_this$value$target = this.value.target) !== null && _this$value$target !== void 0 && _this$value$target.entity_id)) {\n            target.entity_id = this.value.data.entity_id;\n          }\n          if (this.value.data.area_id && !((_this$value$target2 = this.value.target) !== null && _this$value$target2 !== void 0 && _this$value$target2.area_id)) {\n            target.area_id = this.value.data.area_id;\n          }\n          if (this.value.data.device_id && !((_this$value$target3 = this.value.target) !== null && _this$value$target3 !== void 0 && _this$value$target3.device_id)) {\n            target.device_id = this.value.data.device_id;\n          }\n          this._value = {\n            ...this.value,\n            target,\n            data: {\n              ...this.value.data\n            }\n          };\n          delete this._value.data.entity_id;\n          delete this._value.data.device_id;\n          delete this._value.data.area_id;\n        } else {\n          this._value = this.value;\n        }\n        if ((oldValue === null || oldValue === void 0 ? void 0 : oldValue.service) !== ((_this$value8 = this.value) === null || _this$value8 === void 0 ? void 0 : _this$value8.service)) {\n          let updatedDefaultValue = false;\n          if (this._value && serviceData) {\n            const loadDefaults = this.value && !(\"data\" in this.value);\n            // Set mandatory bools without a default value to false\n            if (!this._value.data) {\n              this._value.data = {};\n            }\n            serviceData.fields.forEach(field => {\n              if (field.selector && field.required && field.default === undefined && \"boolean\" in field.selector && this._value.data[field.key] === undefined) {\n                updatedDefaultValue = true;\n                this._value.data[field.key] = false;\n              }\n              if (loadDefaults && field.selector && field.default !== undefined && this._value.data[field.key] === undefined) {\n                updatedDefaultValue = true;\n                this._value.data[field.key] = field.default;\n              }\n            });\n          }\n          if (updatedDefaultValue) {\n            fireEvent(this, \"value-changed\", {\n              value: {\n                ...this._value\n              }\n            });\n          }\n        }\n        if ((_this$_value = this._value) !== null && _this$_value !== void 0 && _this$_value.data) {\n          const yamlEditor = this._yamlEditor;\n          if (yamlEditor && yamlEditor.value !== this._value.data) {\n            yamlEditor.setValue(this._value.data);\n          }\n        }\n      }\n    }, {\n      kind: \"field\",\n      key: \"_getServiceInfo\",\n      value() {\n        return memoizeOne((service, serviceDomains) => {\n          if (!service || !serviceDomains) {\n            return undefined;\n          }\n          const domain = computeDomain(service);\n          const serviceName = computeObjectId(service);\n          if (!(domain in serviceDomains)) {\n            return undefined;\n          }\n          if (!(serviceName in serviceDomains[domain])) {\n            return undefined;\n          }\n          const fields = Object.entries(serviceDomains[domain][serviceName].fields).map(([key, value]) => ({\n            key,\n            ...value,\n            selector: value.selector\n          }));\n          return {\n            ...serviceDomains[domain][serviceName],\n            fields,\n            hasSelector: fields.length ? fields.filter(field => field.selector).map(field => field.key) : []\n          };\n        });\n      }\n    }, {\n      kind: \"field\",\n      key: \"_filterFields\",\n      value() {\n        return memoizeOne((serviceData, value) => {\n          var _serviceData$fields;\n          return serviceData === null || serviceData === void 0 || (_serviceData$fields = serviceData.fields) === null || _serviceData$fields === void 0 ? void 0 : _serviceData$fields.filter(field => !field.filter || this._filterField(serviceData.target, field.filter, value));\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_filterField\",\n      value: function _filterField(target, filter, value) {\n        var _ensureArray, _value$target, _value$data, _ensureArray2, _value$target2, _value$data2, _ensureArray3, _value$target3, _value$data3;\n        const targetSelector = target ? {\n          target\n        } : {\n          target: {}\n        };\n        const targetEntities = ((_ensureArray = ensureArray((value === null || value === void 0 || (_value$target = value.target) === null || _value$target === void 0 ? void 0 : _value$target.entity_id) || (value === null || value === void 0 || (_value$data = value.data) === null || _value$data === void 0 ? void 0 : _value$data.entity_id))) === null || _ensureArray === void 0 ? void 0 : _ensureArray.slice()) || [];\n        const targetDevices = ((_ensureArray2 = ensureArray((value === null || value === void 0 || (_value$target2 = value.target) === null || _value$target2 === void 0 ? void 0 : _value$target2.device_id) || (value === null || value === void 0 || (_value$data2 = value.data) === null || _value$data2 === void 0 ? void 0 : _value$data2.device_id))) === null || _ensureArray2 === void 0 ? void 0 : _ensureArray2.slice()) || [];\n        const targetAreas = (_ensureArray3 = ensureArray((value === null || value === void 0 || (_value$target3 = value.target) === null || _value$target3 === void 0 ? void 0 : _value$target3.area_id) || (value === null || value === void 0 || (_value$data3 = value.data) === null || _value$data3 === void 0 ? void 0 : _value$data3.area_id))) === null || _ensureArray3 === void 0 ? void 0 : _ensureArray3.slice();\n        if (targetAreas) {\n          targetAreas.forEach(areaId => {\n            const expanded = expandAreaTarget(this.hass, areaId, this.hass.devices, this.hass.entities, targetSelector);\n            targetEntities.push(...expanded.entities);\n            targetDevices.push(...expanded.devices);\n          });\n        }\n        if (targetDevices.length) {\n          targetDevices.forEach(deviceId => {\n            targetEntities.push(...expandDeviceTarget(this.hass, deviceId, this.hass.entities, targetSelector).entities);\n          });\n        }\n        if (!targetEntities.length) {\n          return false;\n        }\n        if (targetEntities.some(entityId => {\n          var _supported_features;\n          const entityState = this.hass.states[entityId];\n          if (!entityState) {\n            return false;\n          }\n          if ((_supported_features = filter.supported_features) !== null && _supported_features !== void 0 && _supported_features.some(feature => supportsFeature(entityState, feature))) {\n            return true;\n          }\n          if (filter.attribute && Object.entries(filter.attribute).some(([attribute, values]) => attribute in entityState.attributes && attributeFilter(values, entityState.attributes[attribute]))) {\n            return true;\n          }\n          return false;\n        })) {\n          return true;\n        }\n        return false;\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var _this$_value2, _this$_value3, _this$_value4, _this$_value5, _this$_value6, _this$_value7, _this$_value8, _this$_value9;\n        const serviceData = this._getServiceInfo((_this$_value2 = this._value) === null || _this$_value2 === void 0 ? void 0 : _this$_value2.service, this.hass.services);\n        const shouldRenderServiceDataYaml = (serviceData === null || serviceData === void 0 ? void 0 : serviceData.fields.length) && !serviceData.hasSelector.length || serviceData && Object.keys(((_this$_value3 = this._value) === null || _this$_value3 === void 0 ? void 0 : _this$_value3.data) || {}).some(key => !serviceData.hasSelector.includes(key));\n        const entityId = shouldRenderServiceDataYaml && (serviceData === null || serviceData === void 0 ? void 0 : serviceData.fields.find(field => field.key === \"entity_id\"));\n        const hasOptional = Boolean(!shouldRenderServiceDataYaml && (serviceData === null || serviceData === void 0 ? void 0 : serviceData.fields.some(field => showOptionalToggle(field))));\n        const filteredFields = this._filterFields(serviceData, this._value);\n        const domain = (_this$_value4 = this._value) !== null && _this$_value4 !== void 0 && _this$_value4.service ? computeDomain(this._value.service) : undefined;\n        const serviceName = (_this$_value5 = this._value) !== null && _this$_value5 !== void 0 && _this$_value5.service ? computeObjectId(this._value.service) : undefined;\n        const description = serviceName && this.hass.localize(`component.${domain}.services.${serviceName}.description`) || (serviceData === null || serviceData === void 0 ? void 0 : serviceData.description);\n        return html`${this.hidePicker ? nothing : html`<ha-service-picker\n            .hass=${this.hass}\n            .value=${(_this$_value6 = this._value) === null || _this$_value6 === void 0 ? void 0 : _this$_value6.service}\n            .disabled=${this.disabled}\n            @value-changed=${this._serviceChanged}\n          ></ha-service-picker>`}\n      <div class=\"description\">\n        ${description ? html`<p>${description}</p>` : \"\"}\n        ${this._manifest ? html` <a\n              href=${this._manifest.is_built_in ? documentationUrl(this.hass, `/integrations/${this._manifest.domain}`) : this._manifest.documentation}\n              title=${this.hass.localize(\"ui.components.service-control.integration_doc\")}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              <ha-icon-button\n                .path=${mdiHelpCircle}\n                class=\"help-icon\"\n              ></ha-icon-button>\n            </a>` : \"\"}\n      </div>\n      ${serviceData && \"target\" in serviceData ? html`<ha-settings-row .narrow=${this.narrow}>\n            ${hasOptional ? html`<div slot=\"prefix\" class=\"checkbox-spacer\"></div>` : \"\"}\n            <span slot=\"heading\"\n              >${this.hass.localize(\"ui.components.service-control.target\")}</span\n            >\n            <span slot=\"description\"\n              >${this.hass.localize(\"ui.components.service-control.target_description\")}</span\n            ><ha-selector\n              .hass=${this.hass}\n              .selector=${serviceData.target ? {\n          target: serviceData.target\n        } : {\n          target: {}\n        }}\n              .disabled=${this.disabled}\n              @value-changed=${this._targetChanged}\n              .value=${(_this$_value7 = this._value) === null || _this$_value7 === void 0 ? void 0 : _this$_value7.target}\n            ></ha-selector\n          ></ha-settings-row>` : entityId ? html`<ha-entity-picker\n              .hass=${this.hass}\n              .disabled=${this.disabled}\n              .value=${(_this$_value8 = this._value) === null || _this$_value8 === void 0 || (_this$_value8 = _this$_value8.data) === null || _this$_value8 === void 0 ? void 0 : _this$_value8.entity_id}\n              .label=${this.hass.localize(`component.${domain}.services.${serviceName}.fields.entity_id.description`) || entityId.description}\n              @value-changed=${this._entityPicked}\n              allow-custom-entity\n            ></ha-entity-picker>` : \"\"}\n      ${shouldRenderServiceDataYaml ? html`<ha-yaml-editor\n            .hass=${this.hass}\n            .label=${this.hass.localize(\"ui.components.service-control.data\")}\n            .name=${\"data\"}\n            .readOnly=${this.disabled}\n            .defaultValue=${(_this$_value9 = this._value) === null || _this$_value9 === void 0 ? void 0 : _this$_value9.data}\n            @value-changed=${this._dataChanged}\n          ></ha-yaml-editor>` : filteredFields === null || filteredFields === void 0 ? void 0 : filteredFields.map(dataField => {\n          var _dataField$selector, _this$_value10, _this$_value11, _this$_value12, _this$_value13;\n          const selector = (_dataField$selector = dataField === null || dataField === void 0 ? void 0 : dataField.selector) !== null && _dataField$selector !== void 0 ? _dataField$selector : {\n            text: undefined\n          };\n          const type = Object.keys(selector)[0];\n          const enhancedSelector = [\"action\", \"condition\", \"trigger\"].includes(type) ? {\n            [type]: {\n              ...selector[type],\n              path: [dataField.key]\n            }\n          } : selector;\n          const showOptional = showOptionalToggle(dataField);\n          return dataField.selector && (!dataField.advanced || this.showAdvanced || (_this$_value10 = this._value) !== null && _this$_value10 !== void 0 && _this$_value10.data && this._value.data[dataField.key] !== undefined) ? html`<ha-settings-row .narrow=${this.narrow}>\n                  ${!showOptional ? hasOptional ? html`<div slot=\"prefix\" class=\"checkbox-spacer\"></div>` : \"\" : html`<ha-checkbox\n                        .key=${dataField.key}\n                        .checked=${this._checkedKeys.has(dataField.key) || ((_this$_value11 = this._value) === null || _this$_value11 === void 0 ? void 0 : _this$_value11.data) && this._value.data[dataField.key] !== undefined}\n                        .disabled=${this.disabled}\n                        @change=${this._checkboxChanged}\n                        slot=\"prefix\"\n                      ></ha-checkbox>`}\n                  <span slot=\"heading\"\n                    >${this.hass.localize(`component.${domain}.services.${serviceName}.fields.${dataField.key}.name`) || dataField.name || dataField.key}</span\n                  >\n                  <span slot=\"description\"\n                    >${this.hass.localize(`component.${domain}.services.${serviceName}.fields.${dataField.key}.description`) || (dataField === null || dataField === void 0 ? void 0 : dataField.description)}</span\n                  >\n                  <ha-selector\n                    .disabled=${this.disabled || showOptional && !this._checkedKeys.has(dataField.key) && (!((_this$_value12 = this._value) !== null && _this$_value12 !== void 0 && _this$_value12.data) || this._value.data[dataField.key] === undefined)}\n                    .hass=${this.hass}\n                    .selector=${enhancedSelector}\n                    .key=${dataField.key}\n                    @value-changed=${this._serviceDataChanged}\n                    .value=${(_this$_value13 = this._value) !== null && _this$_value13 !== void 0 && _this$_value13.data ? this._value.data[dataField.key] : undefined}\n                    .placeholder=${dataField.default}\n                    .localizeValue=${this._localizeValueCallback}\n                    @item-moved=${this._itemMoved}\n                  ></ha-selector>\n                </ha-settings-row>` : \"\";\n        })}`;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_localizeValueCallback\",\n      value() {\n        return key => {\n          var _this$_value14;\n          if (!((_this$_value14 = this._value) !== null && _this$_value14 !== void 0 && _this$_value14.service)) {\n            return \"\";\n          }\n          return this.hass.localize(`component.${computeDomain(this._value.service)}.selector.${key}`);\n        };\n      }\n    }, {\n      kind: \"method\",\n      key: \"_checkboxChanged\",\n      value: function _checkboxChanged(ev) {\n        const checked = ev.currentTarget.checked;\n        const key = ev.currentTarget.key;\n        let data;\n        if (checked) {\n          var _this$_getServiceInfo, _this$_value15;\n          this._checkedKeys.add(key);\n          const field = (_this$_getServiceInfo = this._getServiceInfo((_this$_value15 = this._value) === null || _this$_value15 === void 0 ? void 0 : _this$_value15.service, this.hass.services)) === null || _this$_getServiceInfo === void 0 ? void 0 : _this$_getServiceInfo.fields.find(_field => _field.key === key);\n          let defaultValue = field === null || field === void 0 ? void 0 : field.default;\n          if (defaultValue == null && field !== null && field !== void 0 && field.selector && \"constant\" in field.selector) {\n            var _field$selector$const;\n            defaultValue = (_field$selector$const = field.selector.constant) === null || _field$selector$const === void 0 ? void 0 : _field$selector$const.value;\n          }\n          if (defaultValue == null && field !== null && field !== void 0 && field.selector && \"boolean\" in field.selector) {\n            defaultValue = false;\n          }\n          if (defaultValue != null) {\n            var _this$_value16;\n            data = {\n              ...((_this$_value16 = this._value) === null || _this$_value16 === void 0 ? void 0 : _this$_value16.data),\n              [key]: defaultValue\n            };\n          }\n        } else {\n          var _this$_value17;\n          this._checkedKeys.delete(key);\n          data = {\n            ...((_this$_value17 = this._value) === null || _this$_value17 === void 0 ? void 0 : _this$_value17.data)\n          };\n          delete data[key];\n        }\n        if (data) {\n          fireEvent(this, \"value-changed\", {\n            value: {\n              ...this._value,\n              data\n            }\n          });\n        }\n        this.requestUpdate(\"_checkedKeys\");\n      }\n    }, {\n      kind: \"method\",\n      key: \"_serviceChanged\",\n      value: function _serviceChanged(ev) {\n        var _this$_value18;\n        ev.stopPropagation();\n        if (ev.detail.value === ((_this$_value18 = this._value) === null || _this$_value18 === void 0 ? void 0 : _this$_value18.service)) {\n          return;\n        }\n        const newService = ev.detail.value || \"\";\n        let target;\n        if (newService) {\n          var _this$_value19;\n          const serviceData = this._getServiceInfo(newService, this.hass.services);\n          const currentTarget = (_this$_value19 = this._value) === null || _this$_value19 === void 0 ? void 0 : _this$_value19.target;\n          if (currentTarget && serviceData !== null && serviceData !== void 0 && serviceData.target) {\n            var _ensureArray4, _data, _ensureArray5, _data2, _ensureArray6, _data3;\n            const targetSelector = {\n              target: {\n                ...serviceData.target\n              }\n            };\n            let targetEntities = ((_ensureArray4 = ensureArray(currentTarget.entity_id || ((_data = this._value.data) === null || _data === void 0 ? void 0 : _data.entity_id))) === null || _ensureArray4 === void 0 ? void 0 : _ensureArray4.slice()) || [];\n            let targetDevices = ((_ensureArray5 = ensureArray(currentTarget.device_id || ((_data2 = this._value.data) === null || _data2 === void 0 ? void 0 : _data2.device_id))) === null || _ensureArray5 === void 0 ? void 0 : _ensureArray5.slice()) || [];\n            let targetAreas = ((_ensureArray6 = ensureArray(currentTarget.area_id || ((_data3 = this._value.data) === null || _data3 === void 0 ? void 0 : _data3.area_id))) === null || _ensureArray6 === void 0 ? void 0 : _ensureArray6.slice()) || [];\n            if (targetAreas.length) {\n              targetAreas = targetAreas.filter(area => areaMeetsTargetSelector(this.hass, this.hass.entities, this.hass.devices, area, targetSelector));\n            }\n            if (targetDevices.length) {\n              targetDevices = targetDevices.filter(device => deviceMeetsTargetSelector(this.hass, Object.values(this.hass.entities), this.hass.devices[device], targetSelector));\n            }\n            if (targetEntities.length) {\n              targetEntities = targetEntities.filter(entity => entityMeetsTargetSelector(this.hass.states[entity], targetSelector));\n            }\n            target = {\n              ...(targetEntities.length ? {\n                entity_id: targetEntities\n              } : {}),\n              ...(targetDevices.length ? {\n                device_id: targetDevices\n              } : {}),\n              ...(targetAreas.length ? {\n                area_id: targetAreas\n              } : {})\n            };\n          }\n        }\n        const value = {\n          service: newService,\n          target\n        };\n        fireEvent(this, \"value-changed\", {\n          value\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_entityPicked\",\n      value: function _entityPicked(ev) {\n        var _this$_value20, _this$_value21;\n        ev.stopPropagation();\n        const newValue = ev.detail.value;\n        if (((_this$_value20 = this._value) === null || _this$_value20 === void 0 || (_this$_value20 = _this$_value20.data) === null || _this$_value20 === void 0 ? void 0 : _this$_value20.entity_id) === newValue) {\n          return;\n        }\n        let value;\n        if (!newValue && (_this$_value21 = this._value) !== null && _this$_value21 !== void 0 && _this$_value21.data) {\n          value = {\n            ...this._value\n          };\n          delete value.data.entity_id;\n        } else {\n          var _this$_value22;\n          value = {\n            ...this._value,\n            data: {\n              ...((_this$_value22 = this._value) === null || _this$_value22 === void 0 ? void 0 : _this$_value22.data),\n              entity_id: ev.detail.value\n            }\n          };\n        }\n        fireEvent(this, \"value-changed\", {\n          value\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_targetChanged\",\n      value: function _targetChanged(ev) {\n        var _this$_value23;\n        ev.stopPropagation();\n        const newValue = ev.detail.value;\n        if (((_this$_value23 = this._value) === null || _this$_value23 === void 0 ? void 0 : _this$_value23.target) === newValue) {\n          return;\n        }\n        let value;\n        if (!newValue) {\n          value = {\n            ...this._value\n          };\n          delete value.target;\n        } else {\n          value = {\n            ...this._value,\n            target: ev.detail.value\n          };\n        }\n        fireEvent(this, \"value-changed\", {\n          value\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_serviceDataChanged\",\n      value: function _serviceDataChanged(ev) {\n        var _this$_value24, _this$_value25, _this$_value26;\n        ev.stopPropagation();\n        const key = ev.currentTarget.key;\n        const value = ev.detail.value;\n        if (((_this$_value24 = this._value) === null || _this$_value24 === void 0 || (_this$_value24 = _this$_value24.data) === null || _this$_value24 === void 0 ? void 0 : _this$_value24[key]) === value || !((_this$_value25 = this._value) !== null && _this$_value25 !== void 0 && (_this$_value25 = _this$_value25.data) !== null && _this$_value25 !== void 0 && _this$_value25[key]) && (value === \"\" || value === undefined)) {\n          return;\n        }\n        const data = {\n          ...((_this$_value26 = this._value) === null || _this$_value26 === void 0 ? void 0 : _this$_value26.data),\n          [key]: value\n        };\n        if (value === \"\" || value === undefined) {\n          delete data[key];\n        }\n        fireEvent(this, \"value-changed\", {\n          value: {\n            ...this._value,\n            data\n          }\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_itemMoved\",\n      value: function _itemMoved(ev) {\n        var _this$value$data, _this$value9;\n        ev.stopPropagation();\n        const {\n          oldIndex,\n          newIndex,\n          oldPath,\n          newPath\n        } = ev.detail;\n        const data = (_this$value$data = (_this$value9 = this.value) === null || _this$value9 === void 0 ? void 0 : _this$value9.data) !== null && _this$value$data !== void 0 ? _this$value$data : {};\n        const newData = nestedArrayMove(data, oldIndex, newIndex, oldPath, newPath);\n        fireEvent(this, \"value-changed\", {\n          value: {\n            ...this.value,\n            data: newData\n          }\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_dataChanged\",\n      value: function _dataChanged(ev) {\n        ev.stopPropagation();\n        if (!ev.detail.isValid) {\n          return;\n        }\n        fireEvent(this, \"value-changed\", {\n          value: {\n            ...this._value,\n            data: ev.detail.value\n          }\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_fetchManifest\",\n      value: async function _fetchManifest(integration) {\n        this._manifest = undefined;\n        try {\n          this._manifest = await fetchIntegrationManifest(this.hass, integration);\n        } catch (err) {\n          // Ignore if loading manifest fails. Probably bad JSON in manifest\n        }\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css`\n      ha-settings-row {\n        padding: var(--service-control-padding, 0 16px);\n      }\n      ha-settings-row {\n        --paper-time-input-justify-content: flex-end;\n        --settings-row-content-width: 100%;\n        --settings-row-prefix-display: contents;\n        border-top: var(\n          --service-control-items-border-top,\n          1px solid var(--divider-color)\n        );\n      }\n      ha-service-picker,\n      ha-entity-picker,\n      ha-yaml-editor {\n        display: block;\n        margin: var(--service-control-padding, 0 16px);\n      }\n      ha-yaml-editor {\n        padding: 16px 0;\n      }\n      p {\n        margin: var(--service-control-padding, 0 16px);\n        padding: 16px 0;\n      }\n      :host([hidePicker]) p {\n        padding-top: 0;\n      }\n      .checkbox-spacer {\n        width: 32px;\n      }\n      ha-checkbox {\n        margin-left: -16px;\n        margin-inline-start: -16px;\n        margin-inline-end: initial;\n      }\n      .help-icon {\n        color: var(--secondary-text-color);\n      }\n      .description {\n        justify-content: space-between;\n        display: flex;\n        align-items: center;\n        padding-right: 2px;\n        padding-inline-end: 2px;\n        padding-inline-start: initial;\n      }\n      .description p {\n        direction: ltr;\n      }\n    `;\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","nothing","customElement","property","query","state","memoizeOne","ensureArray","fireEvent","computeDomain","computeObjectId","supportsFeature","nestedArrayMove","fetchIntegrationManifest","areaMeetsTargetSelector","deviceMeetsTargetSelector","entityMeetsTargetSelector","expandAreaTarget","expandDeviceTarget","documentationUrl","attributeFilter","values","attribute","Array","isArray","some","item","includes","showOptionalToggle","field","selector","required","default","HaServiceControl","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","key","value","type","Boolean","reflect","Set","willUpdate","changedProperties","_this$value","_this$value2","_this$value3","_this$value5","_this$value6","_this$value7","_this$value8","_this$_value","hasUpdated","hass","loadBackendTranslation","has","oldValue","get","service","_checkedKeys","serviceData","_getServiceInfo","services","_this$value4","_fetchManifest","_manifest","undefined","data","entity_id","area_id","device_id","_this$value$target","_this$value$target2","_this$value$target3","target","_value","updatedDefaultValue","loadDefaults","fields","forEach","yamlEditor","_yamlEditor","setValue","serviceDomains","domain","serviceName","Object","entries","map","hasSelector","length","filter","_serviceData$fields","_filterField","_ensureArray","_value$target","_value$data","_ensureArray2","_value$target2","_value$data2","_ensureArray3","_value$target3","_value$data3","targetSelector","targetEntities","slice","targetDevices","targetAreas","areaId","expanded","devices","entities","push","deviceId","entityId","_supported_features","entityState","states","supported_features","feature","attributes","render","_this$_value2","_this$_value3","_this$_value4","_this$_value5","_this$_value6","_this$_value7","_this$_value8","_this$_value9","shouldRenderServiceDataYaml","keys","find","hasOptional","filteredFields","_filterFields","description","localize","hidePicker","disabled","_serviceChanged","is_built_in","documentation","mdiHelpCircle","narrow","_targetChanged","_entityPicked","_dataChanged","dataField","_dataField$selector","_this$_value10","_this$_value11","_this$_value12","_this$_value13","text","enhancedSelector","path","showOptional","advanced","showAdvanced","_checkboxChanged","name","_serviceDataChanged","_localizeValueCallback","_itemMoved","_this$_value14","ev","checked","currentTarget","_this$_getServiceInfo","_this$_value15","add","_field","defaultValue","_field$selector$const","constant","_this$_value16","_this$_value17","delete","requestUpdate","_this$_value18","stopPropagation","detail","newService","_this$_value19","_ensureArray4","_data","_ensureArray5","_data2","_ensureArray6","_data3","area","device","entity","_this$_value20","_this$_value21","newValue","_this$_value22","_this$_value23","_this$_value24","_this$_value25","_this$_value26","_this$value$data","_this$value9","oldIndex","newIndex","oldPath","newPath","newData","isValid","integration","err","static","styles"],"sources":["/workspaces/frontend/src/components/ha-service-control.ts"],"sourcesContent":["import { mdiHelpCircle } from \"@mdi/js\";\nimport {\n  HassService,\n  HassServices,\n  HassServiceTarget,\n} from \"home-assistant-js-websocket\";\nimport {\n  css,\n  CSSResultGroup,\n  html,\n  LitElement,\n  nothing,\n  PropertyValues,\n} from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { ensureArray } from \"../common/array/ensure-array\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { computeDomain } from \"../common/entity/compute_domain\";\nimport { computeObjectId } from \"../common/entity/compute_object_id\";\nimport { supportsFeature } from \"../common/entity/supports-feature\";\nimport { nestedArrayMove } from \"../common/util/array-move\";\nimport {\n  fetchIntegrationManifest,\n  IntegrationManifest,\n} from \"../data/integration\";\nimport {\n  areaMeetsTargetSelector,\n  deviceMeetsTargetSelector,\n  entityMeetsTargetSelector,\n  expandAreaTarget,\n  expandDeviceTarget,\n  Selector,\n} from \"../data/selector\";\nimport { HomeAssistant, ValueChangedEvent } from \"../types\";\nimport { documentationUrl } from \"../util/documentation-url\";\nimport \"./ha-checkbox\";\nimport \"./ha-icon-button\";\nimport \"./ha-selector/ha-selector\";\nimport \"./ha-service-picker\";\nimport \"./ha-settings-row\";\nimport \"./ha-yaml-editor\";\nimport type { HaYamlEditor } from \"./ha-yaml-editor\";\n\nconst attributeFilter = (values: any[], attribute: any) => {\n  if (typeof attribute === \"object\") {\n    if (Array.isArray(attribute)) {\n      return attribute.some((item) => values.includes(item));\n    }\n    return false;\n  }\n  return values.includes(attribute);\n};\n\nconst showOptionalToggle = (field) =>\n  field.selector &&\n  !field.required &&\n  !(\"boolean\" in field.selector && field.default);\n\ninterface ExtHassService extends Omit<HassService, \"fields\"> {\n  fields: {\n    key: string;\n    name?: string;\n    description: string;\n    required?: boolean;\n    advanced?: boolean;\n    default?: any;\n    example?: any;\n    filter?: {\n      supported_features?: number[];\n      attribute?: Record<string, any[]>;\n    };\n    selector?: Selector;\n  }[];\n  hasSelector: string[];\n}\n\n@customElement(\"ha-service-control\")\nexport class HaServiceControl extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public value?: {\n    service: string;\n    target?: HassServiceTarget;\n    data?: Record<string, any>;\n  };\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @property({ type: Boolean, reflect: true }) public narrow = false;\n\n  @property({ type: Boolean }) public showAdvanced = false;\n\n  @property({ type: Boolean, reflect: true }) public hidePicker = false;\n\n  @state() private _value!: this[\"value\"];\n\n  @state() private _checkedKeys = new Set();\n\n  @state() private _manifest?: IntegrationManifest;\n\n  @query(\"ha-yaml-editor\") private _yamlEditor?: HaYamlEditor;\n\n  protected willUpdate(changedProperties: PropertyValues<this>) {\n    if (!this.hasUpdated) {\n      this.hass.loadBackendTranslation(\"services\");\n      this.hass.loadBackendTranslation(\"selector\");\n    }\n    if (!changedProperties.has(\"value\")) {\n      return;\n    }\n    const oldValue = changedProperties.get(\"value\") as\n      | undefined\n      | this[\"value\"];\n\n    if (oldValue?.service !== this.value?.service) {\n      this._checkedKeys = new Set();\n    }\n\n    const serviceData = this._getServiceInfo(\n      this.value?.service,\n      this.hass.services\n    );\n\n    // Fetch the manifest if we have a service selected and the service domain changed.\n    // If no service is selected, clear the manifest.\n    if (this.value?.service) {\n      if (\n        !oldValue?.service ||\n        computeDomain(this.value.service) !== computeDomain(oldValue.service)\n      ) {\n        this._fetchManifest(computeDomain(this.value?.service));\n      }\n    } else {\n      this._manifest = undefined;\n    }\n\n    if (\n      serviceData &&\n      \"target\" in serviceData &&\n      (this.value?.data?.entity_id ||\n        this.value?.data?.area_id ||\n        this.value?.data?.device_id)\n    ) {\n      const target = {\n        ...this.value.target,\n      };\n\n      if (this.value.data.entity_id && !this.value.target?.entity_id) {\n        target.entity_id = this.value.data.entity_id;\n      }\n      if (this.value.data.area_id && !this.value.target?.area_id) {\n        target.area_id = this.value.data.area_id;\n      }\n      if (this.value.data.device_id && !this.value.target?.device_id) {\n        target.device_id = this.value.data.device_id;\n      }\n\n      this._value = {\n        ...this.value,\n        target,\n        data: { ...this.value.data },\n      };\n\n      delete this._value.data!.entity_id;\n      delete this._value.data!.device_id;\n      delete this._value.data!.area_id;\n    } else {\n      this._value = this.value;\n    }\n\n    if (oldValue?.service !== this.value?.service) {\n      let updatedDefaultValue = false;\n      if (this._value && serviceData) {\n        const loadDefaults = this.value && !(\"data\" in this.value);\n        // Set mandatory bools without a default value to false\n        if (!this._value.data) {\n          this._value.data = {};\n        }\n        serviceData.fields.forEach((field) => {\n          if (\n            field.selector &&\n            field.required &&\n            field.default === undefined &&\n            \"boolean\" in field.selector &&\n            this._value!.data![field.key] === undefined\n          ) {\n            updatedDefaultValue = true;\n            this._value!.data![field.key] = false;\n          }\n          if (\n            loadDefaults &&\n            field.selector &&\n            field.default !== undefined &&\n            this._value!.data![field.key] === undefined\n          ) {\n            updatedDefaultValue = true;\n            this._value!.data![field.key] = field.default;\n          }\n        });\n      }\n      if (updatedDefaultValue) {\n        fireEvent(this, \"value-changed\", {\n          value: {\n            ...this._value,\n          },\n        });\n      }\n    }\n\n    if (this._value?.data) {\n      const yamlEditor = this._yamlEditor;\n      if (yamlEditor && yamlEditor.value !== this._value.data) {\n        yamlEditor.setValue(this._value.data);\n      }\n    }\n  }\n\n  private _getServiceInfo = memoizeOne(\n    (\n      service?: string,\n      serviceDomains?: HassServices\n    ): ExtHassService | undefined => {\n      if (!service || !serviceDomains) {\n        return undefined;\n      }\n      const domain = computeDomain(service);\n      const serviceName = computeObjectId(service);\n      if (!(domain in serviceDomains)) {\n        return undefined;\n      }\n      if (!(serviceName in serviceDomains[domain])) {\n        return undefined;\n      }\n\n      const fields = Object.entries(\n        serviceDomains[domain][serviceName].fields\n      ).map(([key, value]) => ({\n        key,\n        ...value,\n        selector: value.selector as Selector | undefined,\n      }));\n      return {\n        ...serviceDomains[domain][serviceName],\n        fields,\n        hasSelector: fields.length\n          ? fields.filter((field) => field.selector).map((field) => field.key)\n          : [],\n      };\n    }\n  );\n\n  private _filterFields = memoizeOne(\n    (serviceData: ExtHassService | undefined, value: this[\"value\"]) =>\n      serviceData?.fields?.filter(\n        (field) =>\n          !field.filter ||\n          this._filterField(serviceData.target, field.filter, value)\n      )\n  );\n\n  private _filterField(\n    target: ExtHassService[\"target\"],\n    filter: ExtHassService[\"fields\"][number][\"filter\"],\n    value: this[\"value\"]\n  ) {\n    const targetSelector = target ? { target } : { target: {} };\n    const targetEntities =\n      ensureArray(\n        value?.target?.entity_id || value?.data?.entity_id\n      )?.slice() || [];\n    const targetDevices =\n      ensureArray(\n        value?.target?.device_id || value?.data?.device_id\n      )?.slice() || [];\n    const targetAreas = ensureArray(\n      value?.target?.area_id || value?.data?.area_id\n    )?.slice();\n    if (targetAreas) {\n      targetAreas.forEach((areaId) => {\n        const expanded = expandAreaTarget(\n          this.hass,\n          areaId,\n          this.hass.devices,\n          this.hass.entities,\n          targetSelector\n        );\n        targetEntities.push(...expanded.entities);\n        targetDevices.push(...expanded.devices);\n      });\n    }\n    if (targetDevices.length) {\n      targetDevices.forEach((deviceId) => {\n        targetEntities.push(\n          ...expandDeviceTarget(\n            this.hass,\n            deviceId,\n            this.hass.entities,\n            targetSelector\n          ).entities\n        );\n      });\n    }\n    if (!targetEntities.length) {\n      return false;\n    }\n    if (\n      targetEntities.some((entityId) => {\n        const entityState = this.hass.states[entityId];\n        if (!entityState) {\n          return false;\n        }\n        if (\n          filter!.supported_features?.some((feature) =>\n            supportsFeature(entityState, feature)\n          )\n        ) {\n          return true;\n        }\n        if (\n          filter!.attribute &&\n          Object.entries(filter!.attribute).some(\n            ([attribute, values]) =>\n              attribute in entityState.attributes &&\n              attributeFilter(values, entityState.attributes[attribute])\n          )\n        ) {\n          return true;\n        }\n        return false;\n      })\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  protected render() {\n    const serviceData = this._getServiceInfo(\n      this._value?.service,\n      this.hass.services\n    );\n\n    const shouldRenderServiceDataYaml =\n      (serviceData?.fields.length && !serviceData.hasSelector.length) ||\n      (serviceData &&\n        Object.keys(this._value?.data || {}).some(\n          (key) => !serviceData!.hasSelector.includes(key)\n        ));\n\n    const entityId =\n      shouldRenderServiceDataYaml &&\n      serviceData?.fields.find((field) => field.key === \"entity_id\");\n\n    const hasOptional = Boolean(\n      !shouldRenderServiceDataYaml &&\n        serviceData?.fields.some((field) => showOptionalToggle(field))\n    );\n\n    const filteredFields = this._filterFields(serviceData, this._value);\n\n    const domain = this._value?.service\n      ? computeDomain(this._value.service)\n      : undefined;\n    const serviceName = this._value?.service\n      ? computeObjectId(this._value.service)\n      : undefined;\n\n    const description =\n      (serviceName &&\n        this.hass.localize(\n          `component.${domain}.services.${serviceName}.description`\n        )) ||\n      serviceData?.description;\n\n    return html`${this.hidePicker\n        ? nothing\n        : html`<ha-service-picker\n            .hass=${this.hass}\n            .value=${this._value?.service}\n            .disabled=${this.disabled}\n            @value-changed=${this._serviceChanged}\n          ></ha-service-picker>`}\n      <div class=\"description\">\n        ${description ? html`<p>${description}</p>` : \"\"}\n        ${this._manifest\n          ? html` <a\n              href=${this._manifest.is_built_in\n                ? documentationUrl(\n                    this.hass,\n                    `/integrations/${this._manifest.domain}`\n                  )\n                : this._manifest.documentation}\n              title=${this.hass.localize(\n                \"ui.components.service-control.integration_doc\"\n              )}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              <ha-icon-button\n                .path=${mdiHelpCircle}\n                class=\"help-icon\"\n              ></ha-icon-button>\n            </a>`\n          : \"\"}\n      </div>\n      ${serviceData && \"target\" in serviceData\n        ? html`<ha-settings-row .narrow=${this.narrow}>\n            ${hasOptional\n              ? html`<div slot=\"prefix\" class=\"checkbox-spacer\"></div>`\n              : \"\"}\n            <span slot=\"heading\"\n              >${this.hass.localize(\n                \"ui.components.service-control.target\"\n              )}</span\n            >\n            <span slot=\"description\"\n              >${this.hass.localize(\n                \"ui.components.service-control.target_description\"\n              )}</span\n            ><ha-selector\n              .hass=${this.hass}\n              .selector=${serviceData.target\n                ? { target: serviceData.target }\n                : { target: {} }}\n              .disabled=${this.disabled}\n              @value-changed=${this._targetChanged}\n              .value=${this._value?.target}\n            ></ha-selector\n          ></ha-settings-row>`\n        : entityId\n          ? html`<ha-entity-picker\n              .hass=${this.hass}\n              .disabled=${this.disabled}\n              .value=${this._value?.data?.entity_id}\n              .label=${this.hass.localize(\n                `component.${domain}.services.${serviceName}.fields.entity_id.description`\n              ) || entityId.description}\n              @value-changed=${this._entityPicked}\n              allow-custom-entity\n            ></ha-entity-picker>`\n          : \"\"}\n      ${shouldRenderServiceDataYaml\n        ? html`<ha-yaml-editor\n            .hass=${this.hass}\n            .label=${this.hass.localize(\"ui.components.service-control.data\")}\n            .name=${\"data\"}\n            .readOnly=${this.disabled}\n            .defaultValue=${this._value?.data}\n            @value-changed=${this._dataChanged}\n          ></ha-yaml-editor>`\n        : filteredFields?.map((dataField) => {\n            const selector = dataField?.selector ?? { text: undefined };\n            const type = Object.keys(selector)[0];\n            const enhancedSelector = [\n              \"action\",\n              \"condition\",\n              \"trigger\",\n            ].includes(type)\n              ? {\n                  [type]: {\n                    ...selector[type],\n                    path: [dataField.key],\n                  },\n                }\n              : selector;\n\n            const showOptional = showOptionalToggle(dataField);\n\n            return dataField.selector &&\n              (!dataField.advanced ||\n                this.showAdvanced ||\n                (this._value?.data &&\n                  this._value.data[dataField.key] !== undefined))\n              ? html`<ha-settings-row .narrow=${this.narrow}>\n                  ${!showOptional\n                    ? hasOptional\n                      ? html`<div slot=\"prefix\" class=\"checkbox-spacer\"></div>`\n                      : \"\"\n                    : html`<ha-checkbox\n                        .key=${dataField.key}\n                        .checked=${this._checkedKeys.has(dataField.key) ||\n                        (this._value?.data &&\n                          this._value.data[dataField.key] !== undefined)}\n                        .disabled=${this.disabled}\n                        @change=${this._checkboxChanged}\n                        slot=\"prefix\"\n                      ></ha-checkbox>`}\n                  <span slot=\"heading\"\n                    >${this.hass.localize(\n                      `component.${domain}.services.${serviceName}.fields.${dataField.key}.name`\n                    ) ||\n                    dataField.name ||\n                    dataField.key}</span\n                  >\n                  <span slot=\"description\"\n                    >${this.hass.localize(\n                      `component.${domain}.services.${serviceName}.fields.${dataField.key}.description`\n                    ) || dataField?.description}</span\n                  >\n                  <ha-selector\n                    .disabled=${this.disabled ||\n                    (showOptional &&\n                      !this._checkedKeys.has(dataField.key) &&\n                      (!this._value?.data ||\n                        this._value.data[dataField.key] === undefined))}\n                    .hass=${this.hass}\n                    .selector=${enhancedSelector}\n                    .key=${dataField.key}\n                    @value-changed=${this._serviceDataChanged}\n                    .value=${this._value?.data\n                      ? this._value.data[dataField.key]\n                      : undefined}\n                    .placeholder=${dataField.default}\n                    .localizeValue=${this._localizeValueCallback}\n                    @item-moved=${this._itemMoved}\n                  ></ha-selector>\n                </ha-settings-row>`\n              : \"\";\n          })}`;\n  }\n\n  private _localizeValueCallback = (key: string) => {\n    if (!this._value?.service) {\n      return \"\";\n    }\n    return this.hass.localize(\n      `component.${computeDomain(this._value.service)}.selector.${key}`\n    );\n  };\n\n  private _checkboxChanged(ev) {\n    const checked = ev.currentTarget.checked;\n    const key = ev.currentTarget.key;\n    let data;\n\n    if (checked) {\n      this._checkedKeys.add(key);\n      const field = this._getServiceInfo(\n        this._value?.service,\n        this.hass.services\n      )?.fields.find((_field) => _field.key === key);\n\n      let defaultValue = field?.default;\n\n      if (\n        defaultValue == null &&\n        field?.selector &&\n        \"constant\" in field.selector\n      ) {\n        defaultValue = field.selector.constant?.value;\n      }\n\n      if (\n        defaultValue == null &&\n        field?.selector &&\n        \"boolean\" in field.selector\n      ) {\n        defaultValue = false;\n      }\n\n      if (defaultValue != null) {\n        data = {\n          ...this._value?.data,\n          [key]: defaultValue,\n        };\n      }\n    } else {\n      this._checkedKeys.delete(key);\n      data = { ...this._value?.data };\n      delete data[key];\n    }\n    if (data) {\n      fireEvent(this, \"value-changed\", {\n        value: {\n          ...this._value,\n          data,\n        },\n      });\n    }\n    this.requestUpdate(\"_checkedKeys\");\n  }\n\n  private _serviceChanged(ev: ValueChangedEvent<string>) {\n    ev.stopPropagation();\n    if (ev.detail.value === this._value?.service) {\n      return;\n    }\n\n    const newService = ev.detail.value || \"\";\n    let target: HassServiceTarget | undefined;\n\n    if (newService) {\n      const serviceData = this._getServiceInfo(newService, this.hass.services);\n      const currentTarget = this._value?.target;\n      if (currentTarget && serviceData?.target) {\n        const targetSelector = { target: { ...serviceData.target } };\n        let targetEntities =\n          ensureArray(\n            currentTarget.entity_id || this._value!.data?.entity_id\n          )?.slice() || [];\n        let targetDevices =\n          ensureArray(\n            currentTarget.device_id || this._value!.data?.device_id\n          )?.slice() || [];\n        let targetAreas =\n          ensureArray(\n            currentTarget.area_id || this._value!.data?.area_id\n          )?.slice() || [];\n        if (targetAreas.length) {\n          targetAreas = targetAreas.filter((area) =>\n            areaMeetsTargetSelector(\n              this.hass,\n              this.hass.entities,\n              this.hass.devices,\n              area,\n              targetSelector\n            )\n          );\n        }\n        if (targetDevices.length) {\n          targetDevices = targetDevices.filter((device) =>\n            deviceMeetsTargetSelector(\n              this.hass,\n              Object.values(this.hass.entities),\n              this.hass.devices[device],\n              targetSelector\n            )\n          );\n        }\n        if (targetEntities.length) {\n          targetEntities = targetEntities.filter((entity) =>\n            entityMeetsTargetSelector(this.hass.states[entity], targetSelector)\n          );\n        }\n        target = {\n          ...(targetEntities.length ? { entity_id: targetEntities } : {}),\n          ...(targetDevices.length ? { device_id: targetDevices } : {}),\n          ...(targetAreas.length ? { area_id: targetAreas } : {}),\n        };\n      }\n    }\n\n    const value = {\n      service: newService,\n      target,\n    };\n\n    fireEvent(this, \"value-changed\", {\n      value,\n    });\n  }\n\n  private _entityPicked(ev: CustomEvent) {\n    ev.stopPropagation();\n    const newValue = ev.detail.value;\n    if (this._value?.data?.entity_id === newValue) {\n      return;\n    }\n    let value;\n    if (!newValue && this._value?.data) {\n      value = { ...this._value };\n      delete value.data.entity_id;\n    } else {\n      value = {\n        ...this._value,\n        data: { ...this._value?.data, entity_id: ev.detail.value },\n      };\n    }\n    fireEvent(this, \"value-changed\", {\n      value,\n    });\n  }\n\n  private _targetChanged(ev: CustomEvent) {\n    ev.stopPropagation();\n    const newValue = ev.detail.value;\n    if (this._value?.target === newValue) {\n      return;\n    }\n    let value;\n    if (!newValue) {\n      value = { ...this._value };\n      delete value.target;\n    } else {\n      value = { ...this._value, target: ev.detail.value };\n    }\n    fireEvent(this, \"value-changed\", {\n      value,\n    });\n  }\n\n  private _serviceDataChanged(ev: CustomEvent) {\n    ev.stopPropagation();\n    const key = (ev.currentTarget as any).key;\n    const value = ev.detail.value;\n    if (\n      this._value?.data?.[key] === value ||\n      (!this._value?.data?.[key] && (value === \"\" || value === undefined))\n    ) {\n      return;\n    }\n\n    const data = { ...this._value?.data, [key]: value };\n\n    if (value === \"\" || value === undefined) {\n      delete data[key];\n    }\n\n    fireEvent(this, \"value-changed\", {\n      value: {\n        ...this._value,\n        data,\n      },\n    });\n  }\n\n  private _itemMoved(ev) {\n    ev.stopPropagation();\n    const { oldIndex, newIndex, oldPath, newPath } = ev.detail;\n\n    const data = this.value?.data ?? {};\n\n    const newData = nestedArrayMove(data, oldIndex, newIndex, oldPath, newPath);\n\n    fireEvent(this, \"value-changed\", {\n      value: {\n        ...this.value,\n        data: newData,\n      },\n    });\n  }\n\n  private _dataChanged(ev: CustomEvent) {\n    ev.stopPropagation();\n    if (!ev.detail.isValid) {\n      return;\n    }\n    fireEvent(this, \"value-changed\", {\n      value: {\n        ...this._value,\n        data: ev.detail.value,\n      },\n    });\n  }\n\n  private async _fetchManifest(integration: string) {\n    this._manifest = undefined;\n    try {\n      this._manifest = await fetchIntegrationManifest(this.hass, integration);\n    } catch (err: any) {\n      // Ignore if loading manifest fails. Probably bad JSON in manifest\n    }\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      ha-settings-row {\n        padding: var(--service-control-padding, 0 16px);\n      }\n      ha-settings-row {\n        --paper-time-input-justify-content: flex-end;\n        --settings-row-content-width: 100%;\n        --settings-row-prefix-display: contents;\n        border-top: var(\n          --service-control-items-border-top,\n          1px solid var(--divider-color)\n        );\n      }\n      ha-service-picker,\n      ha-entity-picker,\n      ha-yaml-editor {\n        display: block;\n        margin: var(--service-control-padding, 0 16px);\n      }\n      ha-yaml-editor {\n        padding: 16px 0;\n      }\n      p {\n        margin: var(--service-control-padding, 0 16px);\n        padding: 16px 0;\n      }\n      :host([hidePicker]) p {\n        padding-top: 0;\n      }\n      .checkbox-spacer {\n        width: 32px;\n      }\n      ha-checkbox {\n        margin-left: -16px;\n        margin-inline-start: -16px;\n        margin-inline-end: initial;\n      }\n      .help-icon {\n        color: var(--secondary-text-color);\n      }\n      .description {\n        justify-content: space-between;\n        display: flex;\n        align-items: center;\n        padding-right: 2px;\n        padding-inline-end: 2px;\n        padding-inline-start: initial;\n      }\n      .description p {\n        direction: ltr;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-service-control\": HaServiceControl;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}