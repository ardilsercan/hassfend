{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/helpers/regeneratorRuntime\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nexport var loggingMixin = function loggingMixin(superClass) {\n  return /*#__PURE__*/function (_superClass) {\n    _inherits(_class, _superClass);\n    function _class() {\n      _classCallCheck(this, _class);\n      return _callSuper(this, _class, arguments);\n    }\n    _createClass(_class, [{\n      key: \"hassConnected\",\n      value: function hassConnected() {\n        var _this = this;\n        _get(_getPrototypeOf(_class.prototype), \"hassConnected\", this).call(this);\n        window.addEventListener(\"error\", /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(ev) {\n            var _this$hass;\n            var _yield$import, createLogMessage, message;\n            return _regeneratorRuntime().wrap(function _callee$(_context) {\n              while (1) switch (_context.prev = _context.next) {\n                case 0:\n                  if ((_this$hass = _this.hass) !== null && _this$hass !== void 0 && _this$hass.connected) {\n                    _context.next = 2;\n                    break;\n                  }\n                  return _context.abrupt(\"return\");\n                case 2:\n                  if (!(!__DEV__ && (ev.message.includes(\"ResizeObserver loop limit exceeded\") || ev.message.includes(\"ResizeObserver loop completed with undelivered notifications\")))) {\n                    _context.next = 7;\n                    break;\n                  }\n                  ev.preventDefault();\n                  ev.stopImmediatePropagation();\n                  ev.stopPropagation();\n                  return _context.abrupt(\"return\");\n                case 7:\n                  _context.prev = 7;\n                  _context.next = 10;\n                  return import(\"../resources/log-message\");\n                case 10:\n                  _yield$import = _context.sent;\n                  createLogMessage = _yield$import.createLogMessage;\n                  _context.next = 14;\n                  return createLogMessage(ev.error, \"Uncaught error\",\n                  // The error object from browsers includes the message and a stack trace,\n                  // so use the data in the error event just as fallback\n                  ev.message, \"@\".concat(ev.filename, \":\").concat(ev.lineno, \":\").concat(ev.colno));\n                case 14:\n                  message = _context.sent;\n                  _context.next = 17;\n                  return _this._writeLog({\n                    message: message\n                  });\n                case 17:\n                  _context.next = 22;\n                  break;\n                case 19:\n                  _context.prev = 19;\n                  _context.t0 = _context[\"catch\"](7);\n                  // catch errors during logging so we don't get into a loop\n                  // eslint-disable-next-line no-console\n                  console.error(\"Failure writing uncaught error to system log:\", _context.t0);\n                case 22:\n                case \"end\":\n                  return _context.stop();\n              }\n            }, _callee, null, [[7, 19]]);\n          }));\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }());\n        window.addEventListener(\"unhandledrejection\", /*#__PURE__*/function () {\n          var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(ev) {\n            var _this$hass2;\n            var _yield$import2, createLogMessage, message;\n            return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n              while (1) switch (_context2.prev = _context2.next) {\n                case 0:\n                  if ((_this$hass2 = _this.hass) !== null && _this$hass2 !== void 0 && _this$hass2.connected) {\n                    _context2.next = 2;\n                    break;\n                  }\n                  return _context2.abrupt(\"return\");\n                case 2:\n                  _context2.prev = 2;\n                  _context2.next = 5;\n                  return import(\"../resources/log-message\");\n                case 5:\n                  _yield$import2 = _context2.sent;\n                  createLogMessage = _yield$import2.createLogMessage;\n                  _context2.next = 9;\n                  return createLogMessage(ev.reason, \"Unhandled promise rejection\");\n                case 9:\n                  message = _context2.sent;\n                  _context2.next = 12;\n                  return _this._writeLog({\n                    message: message,\n                    level: \"debug\"\n                  });\n                case 12:\n                  _context2.next = 17;\n                  break;\n                case 14:\n                  _context2.prev = 14;\n                  _context2.t0 = _context2[\"catch\"](2);\n                  // catch errors during logging so we don't get into a loop\n                  // eslint-disable-next-line no-console\n                  console.error(\"Failure writing unhandled promise rejection to system log:\", _context2.t0);\n                case 17:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }, _callee2, null, [[2, 14]]);\n          }));\n          return function (_x2) {\n            return _ref2.apply(this, arguments);\n          };\n        }());\n      }\n    }, {\n      key: \"firstUpdated\",\n      value: function firstUpdated(changedProps) {\n        var _this2 = this;\n        _get(_getPrototypeOf(_class.prototype), \"firstUpdated\", this).call(this, changedProps);\n        this.addEventListener(\"write_log\", function (ev) {\n          _this2._writeLog(ev.detail);\n        });\n      }\n    }, {\n      key: \"_writeLog\",\n      value: function _writeLog(log) {\n        var _this$hass3;\n        return (_this$hass3 = this.hass) === null || _this$hass3 === void 0 ? void 0 : _this$hass3.callService(\"system_log\", \"write\", {\n          logger: \"frontend.\".concat(__DEV__ ? \"js_dev\" : \"js\", \".\").concat(__BUILD__, \".\").concat(__VERSION__.replace(\".\", \"\")),\n          message: log.message,\n          level: log.level || \"error\"\n        }, undefined, false);\n      }\n    }]);\n    return _class;\n  }(superClass);\n};","map":{"version":3,"names":["loggingMixin","superClass","_superClass","_inherits","_class","_classCallCheck","_callSuper","arguments","_createClass","key","value","hassConnected","_this","_get","_getPrototypeOf","prototype","call","window","addEventListener","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","ev","_this$hass","_yield$import","createLogMessage","message","wrap","_callee$","_context","prev","next","hass","connected","abrupt","__DEV__","includes","preventDefault","stopImmediatePropagation","stopPropagation","sent","error","concat","filename","lineno","colno","_writeLog","t0","console","stop","_x","apply","_ref2","_callee2","_this$hass2","_yield$import2","_callee2$","_context2","reason","level","_x2","firstUpdated","changedProps","_this2","detail","log","_this$hass3","callService","logger","__BUILD__","__VERSION__","replace","undefined"],"sources":["/Users/sercanardil/Desktop/frontend/src/state/logging-mixin.ts"],"sourcesContent":["import { HASSDomEvent } from \"../common/dom/fire_event\";\nimport { SystemLogLevel } from \"../data/system_log\";\nimport { Constructor } from \"../types\";\nimport { HassBaseEl } from \"./hass-base-mixin\";\n\ninterface WriteLogParams {\n  level?: SystemLogLevel;\n  message: string;\n}\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    write_log: WriteLogParams;\n  }\n  interface HTMLElementEventMap {\n    write_log: HASSDomEvent<WriteLogParams>;\n  }\n}\n\nexport const loggingMixin = <T extends Constructor<HassBaseEl>>(\n  superClass: T\n) =>\n  class extends superClass {\n    protected hassConnected() {\n      super.hassConnected();\n      window.addEventListener(\"error\", async (ev) => {\n        if (!this.hass?.connected) {\n          return;\n        }\n        if (\n          !__DEV__ &&\n          (ev.message.includes(\"ResizeObserver loop limit exceeded\") ||\n            ev.message.includes(\n              \"ResizeObserver loop completed with undelivered notifications\"\n            ))\n        ) {\n          ev.preventDefault();\n          ev.stopImmediatePropagation();\n          ev.stopPropagation();\n          return;\n        }\n        try {\n          const { createLogMessage } = await import(\"../resources/log-message\");\n          const message = await createLogMessage(\n            ev.error,\n            \"Uncaught error\",\n            // The error object from browsers includes the message and a stack trace,\n            // so use the data in the error event just as fallback\n            ev.message,\n            `@${ev.filename}:${ev.lineno}:${ev.colno}`\n          );\n          await this._writeLog({ message });\n        } catch (e) {\n          // catch errors during logging so we don't get into a loop\n          // eslint-disable-next-line no-console\n          console.error(\"Failure writing uncaught error to system log:\", e);\n        }\n      });\n      window.addEventListener(\"unhandledrejection\", async (ev) => {\n        if (!this.hass?.connected) {\n          return;\n        }\n        try {\n          const { createLogMessage } = await import(\"../resources/log-message\");\n          const message = await createLogMessage(\n            ev.reason,\n            \"Unhandled promise rejection\"\n          );\n          await this._writeLog({\n            message,\n            level: \"debug\",\n          });\n        } catch (e) {\n          // catch errors during logging so we don't get into a loop\n          // eslint-disable-next-line no-console\n          console.error(\n            \"Failure writing unhandled promise rejection to system log:\",\n            e\n          );\n        }\n      });\n    }\n\n    protected firstUpdated(changedProps) {\n      super.firstUpdated(changedProps);\n      this.addEventListener(\"write_log\", (ev) => {\n        this._writeLog(ev.detail);\n      });\n    }\n\n    private _writeLog(log: WriteLogParams) {\n      return this.hass?.callService(\n        \"system_log\",\n        \"write\",\n        {\n          logger: `frontend.${\n            __DEV__ ? \"js_dev\" : \"js\"\n          }.${__BUILD__}.${__VERSION__.replace(\".\", \"\")}`,\n          message: log.message,\n          level: log.level || \"error\",\n        },\n        undefined,\n        false\n      );\n    }\n  };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}