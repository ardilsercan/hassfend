{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport \"core-js/modules/es.error.cause.js\";\n/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport '../utils/boot.js';\nimport { PropertyEffects } from '../mixins/property-effects.js';\nimport { OptionalMutableData } from '../mixins/mutable-data.js';\nimport { GestureEventListeners } from '../mixins/gesture-event-listeners.js';\nimport { strictTemplatePolicy } from '../utils/settings.js';\nimport { wrap } from '../utils/wrap.js';\nimport { hideElementsGlobally } from '../utils/hide-template-controls.js';\n\n/**\n * @constructor\n * @extends {HTMLElement}\n * @implements {Polymer_PropertyEffects}\n * @implements {Polymer_OptionalMutableData}\n * @implements {Polymer_GestureEventListeners}\n * @private\n */\nvar domBindBase = GestureEventListeners(OptionalMutableData(PropertyEffects(HTMLElement)));\n\n/**\n * Custom element to allow using Polymer's template features (data binding,\n * declarative event listeners, etc.) in the main document without defining\n * a new custom element.\n *\n * `<template>` tags utilizing bindings may be wrapped with the `<dom-bind>`\n * element, which will immediately stamp the wrapped template into the main\n * document and bind elements to the `dom-bind` element itself as the\n * binding scope.\n *\n * @polymer\n * @customElement\n * @appliesMixin PropertyEffects\n * @appliesMixin OptionalMutableData\n * @appliesMixin GestureEventListeners\n * @extends {domBindBase}\n * @summary Custom element to allow using Polymer's template features (data\n *   binding, declarative event listeners, etc.) in the main document.\n */\nexport var DomBind = /*#__PURE__*/function (_domBindBase) {\n  _inherits(DomBind, _domBindBase);\n  function DomBind() {\n    var _this;\n    _classCallCheck(this, DomBind);\n    _this = _callSuper(this, DomBind);\n    if (strictTemplatePolicy) {\n      throw new Error(\"strictTemplatePolicy: dom-bind not allowed\");\n    }\n    _this.root = null;\n    _this.$ = null;\n    _this.__children = null;\n    return _this;\n  }\n\n  /* eslint-disable no-unused-vars */\n  /**\n   * @override\n   * @param {string} name Name of attribute that changed\n   * @param {?string} old Old attribute value\n   * @param {?string} value New attribute value\n   * @param {?string} namespace Attribute namespace.\n   * @return {void}\n   */\n  _createClass(DomBind, [{\n    key: \"attributeChangedCallback\",\n    value: function attributeChangedCallback(name, old, value, namespace) {\n      // assumes only one observed attribute\n      this.mutableData = true;\n    }\n\n    /**\n     * @override\n     * @return {void}\n     */\n  }, {\n    key: \"connectedCallback\",\n    value: function connectedCallback() {\n      if (!hideElementsGlobally()) {\n        this.style.display = 'none';\n      }\n      this.render();\n    }\n\n    /**\n     * @override\n     * @return {void}\n     */\n  }, {\n    key: \"disconnectedCallback\",\n    value: function disconnectedCallback() {\n      this.__removeChildren();\n    }\n  }, {\n    key: \"__insertChildren\",\n    value: function __insertChildren() {\n      wrap(wrap(this).parentNode).insertBefore(this.root, this);\n    }\n  }, {\n    key: \"__removeChildren\",\n    value: function __removeChildren() {\n      if (this.__children) {\n        for (var i = 0; i < this.__children.length; i++) {\n          this.root.appendChild(this.__children[i]);\n        }\n      }\n    }\n\n    /**\n     * Forces the element to render its content. This is typically only\n     * necessary to call if HTMLImports with the async attribute are used.\n     * @return {void}\n     */\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var template;\n      if (!this.__children) {\n        template = /** @type {?HTMLTemplateElement} */template || this.querySelector('template');\n        if (!template) {\n          // Wait until childList changes and template should be there by then\n          var observer = new MutationObserver(function () {\n            template = /** @type {HTMLTemplateElement} */_this2.querySelector('template');\n            if (template) {\n              observer.disconnect();\n              _this2.render();\n            } else {\n              throw new Error('dom-bind requires a <template> child');\n            }\n          });\n          observer.observe(this, {\n            childList: true\n          });\n          return;\n        }\n        this.root = this._stampTemplate( /** @type {!HTMLTemplateElement} */template);\n        this.$ = this.root.$;\n        this.__children = [];\n        for (var n = this.root.firstChild; n; n = n.nextSibling) {\n          this.__children[this.__children.length] = n;\n        }\n        this._enableProperties();\n      }\n      this.__insertChildren();\n      this.dispatchEvent(new CustomEvent('dom-change', {\n        bubbles: true,\n        composed: true\n      }));\n    }\n  }], [{\n    key: \"observedAttributes\",\n    get: function get() {\n      return ['mutable-data'];\n    }\n  }]);\n  return DomBind;\n}(domBindBase);\ncustomElements.define('dom-bind', DomBind);","map":{"version":3,"names":["PropertyEffects","OptionalMutableData","GestureEventListeners","strictTemplatePolicy","wrap","hideElementsGlobally","domBindBase","HTMLElement","DomBind","_domBindBase","_inherits","_this","_classCallCheck","_callSuper","Error","root","$","__children","_createClass","key","value","attributeChangedCallback","name","old","namespace","mutableData","connectedCallback","style","display","render","disconnectedCallback","__removeChildren","__insertChildren","parentNode","insertBefore","i","length","appendChild","_this2","template","querySelector","observer","MutationObserver","disconnect","observe","childList","_stampTemplate","n","firstChild","nextSibling","_enableProperties","dispatchEvent","CustomEvent","bubbles","composed","get","customElements","define"],"sources":["/Users/sercanardil/Desktop/frontend/node_modules/@polymer/polymer/lib/elements/dom-bind.js"],"sourcesContent":["/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport '../utils/boot.js';\n\nimport { PropertyEffects } from '../mixins/property-effects.js';\nimport { OptionalMutableData } from '../mixins/mutable-data.js';\nimport { GestureEventListeners } from '../mixins/gesture-event-listeners.js';\nimport { strictTemplatePolicy } from '../utils/settings.js';\nimport { wrap } from '../utils/wrap.js';\nimport { hideElementsGlobally } from '../utils/hide-template-controls.js';\n\n/**\n * @constructor\n * @extends {HTMLElement}\n * @implements {Polymer_PropertyEffects}\n * @implements {Polymer_OptionalMutableData}\n * @implements {Polymer_GestureEventListeners}\n * @private\n */\nconst domBindBase =\n  GestureEventListeners(\n    OptionalMutableData(\n      PropertyEffects(HTMLElement)));\n\n/**\n * Custom element to allow using Polymer's template features (data binding,\n * declarative event listeners, etc.) in the main document without defining\n * a new custom element.\n *\n * `<template>` tags utilizing bindings may be wrapped with the `<dom-bind>`\n * element, which will immediately stamp the wrapped template into the main\n * document and bind elements to the `dom-bind` element itself as the\n * binding scope.\n *\n * @polymer\n * @customElement\n * @appliesMixin PropertyEffects\n * @appliesMixin OptionalMutableData\n * @appliesMixin GestureEventListeners\n * @extends {domBindBase}\n * @summary Custom element to allow using Polymer's template features (data\n *   binding, declarative event listeners, etc.) in the main document.\n */\nexport class DomBind extends domBindBase {\n\n  static get observedAttributes() { return ['mutable-data']; }\n\n  constructor() {\n    super();\n    if (strictTemplatePolicy) {\n      throw new Error(`strictTemplatePolicy: dom-bind not allowed`);\n    }\n    this.root = null;\n    this.$ = null;\n    this.__children = null;\n  }\n\n  /* eslint-disable no-unused-vars */\n  /**\n   * @override\n   * @param {string} name Name of attribute that changed\n   * @param {?string} old Old attribute value\n   * @param {?string} value New attribute value\n   * @param {?string} namespace Attribute namespace.\n   * @return {void}\n   */\n  attributeChangedCallback(name, old, value, namespace) {\n    // assumes only one observed attribute\n    this.mutableData = true;\n  }\n\n  /**\n   * @override\n   * @return {void}\n   */\n  connectedCallback() {\n    if (!hideElementsGlobally()) {\n      this.style.display = 'none';\n    }\n    this.render();\n  }\n\n  /**\n   * @override\n   * @return {void}\n   */\n  disconnectedCallback() {\n    this.__removeChildren();\n  }\n\n  __insertChildren() {\n    wrap(wrap(this).parentNode).insertBefore(this.root, this);\n  }\n\n  __removeChildren() {\n    if (this.__children) {\n      for (let i=0; i<this.__children.length; i++) {\n        this.root.appendChild(this.__children[i]);\n      }\n    }\n  }\n\n  /**\n   * Forces the element to render its content. This is typically only\n   * necessary to call if HTMLImports with the async attribute are used.\n   * @return {void}\n   */\n  render() {\n    let template;\n    if (!this.__children) {\n      template = /** @type {?HTMLTemplateElement} */(template || this.querySelector('template'));\n      if (!template) {\n        // Wait until childList changes and template should be there by then\n        let observer = new MutationObserver(() => {\n          template = /** @type {HTMLTemplateElement} */(this.querySelector('template'));\n          if (template) {\n            observer.disconnect();\n            this.render();\n          } else {\n            throw new Error('dom-bind requires a <template> child');\n          }\n        });\n        observer.observe(this, {childList: true});\n        return;\n      }\n      this.root = this._stampTemplate(\n        /** @type {!HTMLTemplateElement} */(template));\n      this.$ = this.root.$;\n      this.__children = [];\n      for (let n=this.root.firstChild; n; n=n.nextSibling) {\n        this.__children[this.__children.length] = n;\n      }\n      this._enableProperties();\n    }\n    this.__insertChildren();\n    this.dispatchEvent(new CustomEvent('dom-change', {\n      bubbles: true,\n      composed: true\n    }));\n  }\n\n}\n\ncustomElements.define('dom-bind', DomBind);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}