{"ast":null,"code":"import { atLeastVersion } from \"../../common/config/version\";\nimport { hassioApiResultExtractor } from \"./common\";\nexport const reloadSupervisor = async hass => {\n  if (atLeastVersion(hass.config.version, 2021, 2, 4)) {\n    await hass.callWS({\n      type: \"supervisor/api\",\n      endpoint: \"/supervisor/reload\",\n      method: \"post\"\n    });\n    return;\n  }\n  await hass.callApi(\"POST\", `hassio/supervisor/reload`);\n};\nexport const restartSupervisor = async hass => {\n  if (atLeastVersion(hass.config.version, 2021, 2, 4)) {\n    await hass.callWS({\n      type: \"supervisor/api\",\n      endpoint: \"/supervisor/restart\",\n      method: \"post\",\n      timeout: null\n    });\n    return;\n  }\n  await hass.callApi(\"POST\", `hassio/supervisor/restart`);\n};\nexport const updateSupervisor = async hass => {\n  if (atLeastVersion(hass.config.version, 2021, 2, 4)) {\n    await hass.callWS({\n      type: \"supervisor/api\",\n      endpoint: \"/supervisor/update\",\n      method: \"post\",\n      timeout: null\n    });\n    return;\n  }\n  await hass.callApi(\"POST\", `hassio/supervisor/update`);\n};\nexport const fetchHassioHomeAssistantInfo = async hass => {\n  if (atLeastVersion(hass.config.version, 2021, 2, 4)) {\n    return hass.callWS({\n      type: \"supervisor/api\",\n      endpoint: \"/core/info\",\n      method: \"get\"\n    });\n  }\n  return hassioApiResultExtractor(await hass.callApi(\"GET\", \"hassio/core/info\"));\n};\nexport const fetchHassioSupervisorInfo = async hass => {\n  if (atLeastVersion(hass.config.version, 2021, 2, 4)) {\n    return hass.callWS({\n      type: \"supervisor/api\",\n      endpoint: \"/supervisor/info\",\n      method: \"get\"\n    });\n  }\n  return hassioApiResultExtractor(await hass.callApi(\"GET\", \"hassio/supervisor/info\"));\n};\nexport const fetchHassioInfo = async hass => {\n  if (atLeastVersion(hass.config.version, 2021, 2, 4)) {\n    return hass.callWS({\n      type: \"supervisor/api\",\n      endpoint: \"/info\",\n      method: \"get\"\n    });\n  }\n  return hassioApiResultExtractor(await hass.callApi(\"GET\", \"hassio/info\"));\n};\nexport const fetchHassioLogs = async (hass, provider) => hass.callApi(\"GET\", `hassio/${provider.includes(\"_\") ? `addons/${provider}` : provider}/logs`);\nexport const getHassioLogDownloadUrl = provider => `/api/hassio/${provider.includes(\"_\") ? `addons/${provider}` : provider}/logs`;\nexport const setSupervisorOption = async (hass, data) => {\n  if (atLeastVersion(hass.config.version, 2021, 2, 4)) {\n    await hass.callWS({\n      type: \"supervisor/api\",\n      endpoint: \"/supervisor/options\",\n      method: \"post\",\n      data\n    });\n    return;\n  }\n  await hass.callApi(\"POST\", \"hassio/supervisor/options\", data);\n};","map":{"version":3,"names":["atLeastVersion","hassioApiResultExtractor","reloadSupervisor","hass","config","version","callWS","type","endpoint","method","callApi","restartSupervisor","timeout","updateSupervisor","fetchHassioHomeAssistantInfo","fetchHassioSupervisorInfo","fetchHassioInfo","fetchHassioLogs","provider","includes","getHassioLogDownloadUrl","setSupervisorOption","data"],"sources":["/Users/sercanardil/Desktop/frontend/src/data/hassio/supervisor.ts"],"sourcesContent":["import { atLeastVersion } from \"../../common/config/version\";\nimport { HomeAssistant, PanelInfo } from \"../../types\";\nimport { SupervisorArch } from \"../supervisor/supervisor\";\nimport { hassioApiResultExtractor, HassioResponse } from \"./common\";\n\nexport type HassioHomeAssistantInfo = {\n  arch: SupervisorArch;\n  audio_input: string | null;\n  audio_output: string | null;\n  boot: boolean;\n  image: string;\n  ip_address: string;\n  machine: string;\n  port: number;\n  ssl: boolean;\n  update_available: boolean;\n  version_latest: string;\n  version: string;\n  wait_boot: number;\n  watchdog: boolean;\n};\n\nexport type HassioSupervisorInfo = {\n  addons: string[];\n  addons_repositories: string[];\n  arch: SupervisorArch;\n  channel: string;\n  debug: boolean;\n  debug_block: boolean;\n  diagnostics: boolean | null;\n  healthy: boolean;\n  ip_address: string;\n  logging: string;\n  supported: boolean;\n  timezone: string;\n  update_available: boolean;\n  version: string;\n  version_latest: string;\n  wait_boot: number;\n};\n\nexport type HassioInfo = {\n  arch: SupervisorArch;\n  channel: string;\n  docker: string;\n  features: string[];\n  hassos: null;\n  homeassistant: string;\n  hostname: string;\n  logging: string;\n  machine: string;\n  state:\n    | \"initialize\"\n    | \"setup\"\n    | \"startup\"\n    | \"running\"\n    | \"freeze\"\n    | \"shutdown\"\n    | \"stopping\"\n    | \"close\";\n  operating_system: string;\n  supervisor: string;\n  supported: boolean;\n  supported_arch: SupervisorArch[];\n  timezone: string;\n};\n\nexport type HassioPanelInfo = PanelInfo<\n  | undefined\n  | {\n      ingress?: string;\n    }\n>;\n\nexport interface CreateSessionResponse {\n  session: string;\n}\n\nexport interface SupervisorOptions {\n  channel?: \"beta\" | \"dev\" | \"stable\";\n  diagnostics?: boolean;\n  addons_repositories?: string[];\n}\n\nexport const reloadSupervisor = async (hass: HomeAssistant) => {\n  if (atLeastVersion(hass.config.version, 2021, 2, 4)) {\n    await hass.callWS({\n      type: \"supervisor/api\",\n      endpoint: \"/supervisor/reload\",\n      method: \"post\",\n    });\n    return;\n  }\n\n  await hass.callApi<HassioResponse<void>>(\"POST\", `hassio/supervisor/reload`);\n};\n\nexport const restartSupervisor = async (hass: HomeAssistant) => {\n  if (atLeastVersion(hass.config.version, 2021, 2, 4)) {\n    await hass.callWS({\n      type: \"supervisor/api\",\n      endpoint: \"/supervisor/restart\",\n      method: \"post\",\n      timeout: null,\n    });\n    return;\n  }\n\n  await hass.callApi<HassioResponse<void>>(\"POST\", `hassio/supervisor/restart`);\n};\n\nexport const updateSupervisor = async (hass: HomeAssistant) => {\n  if (atLeastVersion(hass.config.version, 2021, 2, 4)) {\n    await hass.callWS({\n      type: \"supervisor/api\",\n      endpoint: \"/supervisor/update\",\n      method: \"post\",\n      timeout: null,\n    });\n    return;\n  }\n\n  await hass.callApi<HassioResponse<void>>(\"POST\", `hassio/supervisor/update`);\n};\n\nexport const fetchHassioHomeAssistantInfo = async (\n  hass: HomeAssistant\n): Promise<HassioHomeAssistantInfo> => {\n  if (atLeastVersion(hass.config.version, 2021, 2, 4)) {\n    return hass.callWS({\n      type: \"supervisor/api\",\n      endpoint: \"/core/info\",\n      method: \"get\",\n    });\n  }\n\n  return hassioApiResultExtractor(\n    await hass.callApi<HassioResponse<HassioHomeAssistantInfo>>(\n      \"GET\",\n      \"hassio/core/info\"\n    )\n  );\n};\n\nexport const fetchHassioSupervisorInfo = async (\n  hass: HomeAssistant\n): Promise<HassioSupervisorInfo> => {\n  if (atLeastVersion(hass.config.version, 2021, 2, 4)) {\n    return hass.callWS({\n      type: \"supervisor/api\",\n      endpoint: \"/supervisor/info\",\n      method: \"get\",\n    });\n  }\n\n  return hassioApiResultExtractor(\n    await hass.callApi<HassioResponse<HassioSupervisorInfo>>(\n      \"GET\",\n      \"hassio/supervisor/info\"\n    )\n  );\n};\n\nexport const fetchHassioInfo = async (\n  hass: HomeAssistant\n): Promise<HassioInfo> => {\n  if (atLeastVersion(hass.config.version, 2021, 2, 4)) {\n    return hass.callWS({\n      type: \"supervisor/api\",\n      endpoint: \"/info\",\n      method: \"get\",\n    });\n  }\n\n  return hassioApiResultExtractor(\n    await hass.callApi<HassioResponse<HassioInfo>>(\"GET\", \"hassio/info\")\n  );\n};\n\nexport const fetchHassioLogs = async (hass: HomeAssistant, provider: string) =>\n  hass.callApi<string>(\n    \"GET\",\n    `hassio/${provider.includes(\"_\") ? `addons/${provider}` : provider}/logs`\n  );\n\nexport const getHassioLogDownloadUrl = (provider: string) =>\n  `/api/hassio/${\n    provider.includes(\"_\") ? `addons/${provider}` : provider\n  }/logs`;\n\nexport const setSupervisorOption = async (\n  hass: HomeAssistant,\n  data: SupervisorOptions\n) => {\n  if (atLeastVersion(hass.config.version, 2021, 2, 4)) {\n    await hass.callWS({\n      type: \"supervisor/api\",\n      endpoint: \"/supervisor/options\",\n      method: \"post\",\n      data,\n    });\n    return;\n  }\n\n  await hass.callApi<HassioResponse<void>>(\n    \"POST\",\n    \"hassio/supervisor/options\",\n    data\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}