{"ast":null,"code":"/**\n * @license\n * Copyright (c) 2017 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { afterNextRender } from '@polymer/polymer/lib/utils/render-status.js';\nimport { isIOS } from '@vaadin/component-base/src/browser-utils.js';\nimport { OverlayFocusMixin } from './vaadin-overlay-focus-mixin.js';\nimport { OverlayStackMixin } from './vaadin-overlay-stack-mixin.js';\n\n/**\n * @polymerMixin\n * @mixes OverlayFocusMixin\n * @mixes OverlayStackMixin\n */\nexport const OverlayMixin = superClass => class OverlayMixin extends OverlayFocusMixin(OverlayStackMixin(superClass)) {\n  static get properties() {\n    return {\n      /**\n       * When true, the overlay is visible and attached to body.\n       */\n      opened: {\n        type: Boolean,\n        notify: true,\n        observer: '_openedChanged',\n        reflectToAttribute: true\n      },\n      /**\n       * Owner element passed with renderer function\n       * @type {HTMLElement}\n       */\n      owner: {\n        type: Object\n      },\n      /**\n       * Object with properties that is passed to `renderer` function\n       */\n      model: {\n        type: Object\n      },\n      /**\n       * Custom function for rendering the content of the overlay.\n       * Receives three arguments:\n       *\n       * - `root` The root container DOM element. Append your content to it.\n       * - `owner` The host element of the renderer function.\n       * - `model` The object with the properties related with rendering.\n       * @type {OverlayRenderer | null | undefined}\n       */\n      renderer: {\n        type: Object\n      },\n      /**\n       * When true the overlay won't disable the main content, showing\n       * it doesn't change the functionality of the user interface.\n       * @type {boolean}\n       */\n      modeless: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true,\n        observer: '_modelessChanged'\n      },\n      /**\n       * When set to true, the overlay is hidden. This also closes the overlay\n       * immediately in case there is a closing animation in progress.\n       * @type {boolean}\n       */\n      hidden: {\n        type: Boolean,\n        reflectToAttribute: true,\n        observer: '_hiddenChanged'\n      },\n      /**\n       * When true the overlay has backdrop on top of content when opened.\n       * @type {boolean}\n       */\n      withBackdrop: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      }\n    };\n  }\n  static get observers() {\n    return ['_rendererOrDataChanged(renderer, owner, model, opened)'];\n  }\n  constructor() {\n    super();\n    this._boundMouseDownListener = this._mouseDownListener.bind(this);\n    this._boundMouseUpListener = this._mouseUpListener.bind(this);\n    this._boundOutsideClickListener = this._outsideClickListener.bind(this);\n    this._boundKeydownListener = this._keydownListener.bind(this);\n\n    /* c8 ignore next 3 */\n    if (isIOS) {\n      this._boundIosResizeListener = () => this._detectIosNavbar();\n    }\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n\n    // Need to add dummy click listeners to this and the backdrop or else\n    // the document click event listener (_outsideClickListener) may never\n    // get invoked on iOS Safari (reproducible in <vaadin-dialog>\n    // and <vaadin-context-menu>).\n    this.addEventListener('click', () => {});\n    this.$.backdrop.addEventListener('click', () => {});\n    this.addEventListener('mouseup', () => {\n      // In Chrome, focus moves to body on overlay content mousedown\n      // See https://github.com/vaadin/flow-components/issues/5507\n      if (document.activeElement === document.body && this.$.overlay.getAttribute('tabindex') === '0') {\n        this.$.overlay.focus();\n      }\n    });\n  }\n\n  /** @protected */\n  connectedCallback() {\n    super.connectedCallback();\n\n    /* c8 ignore next 3 */\n    if (this._boundIosResizeListener) {\n      this._detectIosNavbar();\n      window.addEventListener('resize', this._boundIosResizeListener);\n    }\n  }\n\n  /** @protected */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    /* c8 ignore next 3 */\n    if (this._boundIosResizeListener) {\n      window.removeEventListener('resize', this._boundIosResizeListener);\n    }\n  }\n\n  /**\n   * Requests an update for the content of the overlay.\n   * While performing the update, it invokes the renderer passed in the `renderer` property.\n   *\n   * It is not guaranteed that the update happens immediately (synchronously) after it is requested.\n   */\n  requestContentUpdate() {\n    if (this.renderer) {\n      this.renderer.call(this.owner, this, this.owner, this.model);\n    }\n  }\n\n  /**\n   * @param {Event=} sourceEvent\n   */\n  close(sourceEvent) {\n    const evt = new CustomEvent('vaadin-overlay-close', {\n      bubbles: true,\n      cancelable: true,\n      detail: {\n        sourceEvent\n      }\n    });\n    this.dispatchEvent(evt);\n    if (!evt.defaultPrevented) {\n      this.opened = false;\n    }\n  }\n\n  /** @private */\n  _detectIosNavbar() {\n    /* c8 ignore next 15 */\n    if (!this.opened) {\n      return;\n    }\n    const innerHeight = window.innerHeight;\n    const innerWidth = window.innerWidth;\n    const landscape = innerWidth > innerHeight;\n    const clientHeight = document.documentElement.clientHeight;\n    if (landscape && clientHeight > innerHeight) {\n      this.style.setProperty('--vaadin-overlay-viewport-bottom', `${clientHeight - innerHeight}px`);\n    } else {\n      this.style.setProperty('--vaadin-overlay-viewport-bottom', '0');\n    }\n  }\n\n  /** @private */\n  _addGlobalListeners() {\n    document.addEventListener('mousedown', this._boundMouseDownListener);\n    document.addEventListener('mouseup', this._boundMouseUpListener);\n    // Firefox leaks click to document on contextmenu even if prevented\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=990614\n    document.documentElement.addEventListener('click', this._boundOutsideClickListener, true);\n  }\n\n  /** @private */\n  _removeGlobalListeners() {\n    document.removeEventListener('mousedown', this._boundMouseDownListener);\n    document.removeEventListener('mouseup', this._boundMouseUpListener);\n    document.documentElement.removeEventListener('click', this._boundOutsideClickListener, true);\n  }\n\n  /** @private */\n  _rendererOrDataChanged(renderer, owner, model, opened) {\n    const ownerOrModelChanged = this._oldOwner !== owner || this._oldModel !== model;\n    this._oldModel = model;\n    this._oldOwner = owner;\n    const rendererChanged = this._oldRenderer !== renderer;\n    this._oldRenderer = renderer;\n    const openedChanged = this._oldOpened !== opened;\n    this._oldOpened = opened;\n    if (rendererChanged) {\n      this.innerHTML = '';\n      // Whenever a Lit-based renderer is used, it assigns a Lit part to the node it was rendered into.\n      // When clearing the rendered content, this part needs to be manually disposed of.\n      // Otherwise, using a Lit-based renderer on the same node will throw an exception or render nothing afterward.\n      delete this._$litPart$;\n    }\n    if (opened && renderer && (rendererChanged || openedChanged || ownerOrModelChanged)) {\n      this.requestContentUpdate();\n    }\n  }\n\n  /** @private */\n  _modelessChanged(modeless) {\n    if (!modeless) {\n      if (this.opened) {\n        this._addGlobalListeners();\n        this._enterModalState();\n      }\n    } else {\n      this._removeGlobalListeners();\n      this._exitModalState();\n    }\n  }\n\n  /** @private */\n  _openedChanged(opened, wasOpened) {\n    if (opened) {\n      this._saveFocus();\n      this._animatedOpening();\n      afterNextRender(this, () => {\n        this._trapFocus();\n        const evt = new CustomEvent('vaadin-overlay-open', {\n          bubbles: true\n        });\n        this.dispatchEvent(evt);\n      });\n      document.addEventListener('keydown', this._boundKeydownListener);\n      if (!this.modeless) {\n        this._addGlobalListeners();\n      }\n    } else if (wasOpened) {\n      this._resetFocus();\n      this._animatedClosing();\n      document.removeEventListener('keydown', this._boundKeydownListener);\n      if (!this.modeless) {\n        this._removeGlobalListeners();\n      }\n    }\n  }\n\n  /** @private */\n  _hiddenChanged(hidden) {\n    if (hidden && this.hasAttribute('closing')) {\n      this._flushAnimation('closing');\n    }\n  }\n\n  /**\n   * @return {boolean}\n   * @private\n   */\n  _shouldAnimate() {\n    const style = getComputedStyle(this);\n    const name = style.getPropertyValue('animation-name');\n    const hidden = style.getPropertyValue('display') === 'none';\n    return !hidden && name && name !== 'none';\n  }\n\n  /**\n   * @param {string} type\n   * @param {Function} callback\n   * @private\n   */\n  _enqueueAnimation(type, callback) {\n    const handler = `__${type}Handler`;\n    const listener = event => {\n      if (event && event.target !== this) {\n        return;\n      }\n      callback();\n      this.removeEventListener('animationend', listener);\n      delete this[handler];\n    };\n    this[handler] = listener;\n    this.addEventListener('animationend', listener);\n  }\n\n  /**\n   * @param {string} type\n   * @protected\n   */\n  _flushAnimation(type) {\n    const handler = `__${type}Handler`;\n    if (typeof this[handler] === 'function') {\n      this[handler]();\n    }\n  }\n\n  /** @private */\n  _animatedOpening() {\n    if (this.parentNode === document.body && this.hasAttribute('closing')) {\n      this._flushAnimation('closing');\n    }\n    this._attachOverlay();\n    if (!this.modeless) {\n      this._enterModalState();\n    }\n    this.setAttribute('opening', '');\n    if (this._shouldAnimate()) {\n      this._enqueueAnimation('opening', () => {\n        this._finishOpening();\n      });\n    } else {\n      this._finishOpening();\n    }\n  }\n\n  /** @private */\n  _attachOverlay() {\n    this._placeholder = document.createComment('vaadin-overlay-placeholder');\n    this.parentNode.insertBefore(this._placeholder, this);\n    document.body.appendChild(this);\n    this.bringToFront();\n  }\n\n  /** @private */\n  _finishOpening() {\n    this.removeAttribute('opening');\n  }\n\n  /** @private */\n  _finishClosing() {\n    this._detachOverlay();\n    this.$.overlay.style.removeProperty('pointer-events');\n    this.removeAttribute('closing');\n    this.dispatchEvent(new CustomEvent('vaadin-overlay-closed'));\n  }\n\n  /** @private */\n  _animatedClosing() {\n    if (this.hasAttribute('opening')) {\n      this._flushAnimation('opening');\n    }\n    if (this._placeholder) {\n      this._exitModalState();\n      this.setAttribute('closing', '');\n      this.dispatchEvent(new CustomEvent('vaadin-overlay-closing'));\n      if (this._shouldAnimate()) {\n        this._enqueueAnimation('closing', () => {\n          this._finishClosing();\n        });\n      } else {\n        this._finishClosing();\n      }\n    }\n  }\n\n  /** @private */\n  _detachOverlay() {\n    this._placeholder.parentNode.insertBefore(this, this._placeholder);\n    this._placeholder.parentNode.removeChild(this._placeholder);\n  }\n\n  /** @private */\n  _mouseDownListener(event) {\n    this._mouseDownInside = event.composedPath().indexOf(this.$.overlay) >= 0;\n  }\n\n  /** @private */\n  _mouseUpListener(event) {\n    this._mouseUpInside = event.composedPath().indexOf(this.$.overlay) >= 0;\n  }\n\n  /**\n   * Whether to close the overlay on outside click or not.\n   * Override this method to customize the closing logic.\n   *\n   * @param {Event} _event\n   * @return {boolean}\n   * @protected\n   */\n  _shouldCloseOnOutsideClick(_event) {\n    return this._last;\n  }\n\n  /**\n   * Outside click listener used in capture phase to close the overlay before\n   * propagating the event to the listener on the element that triggered it.\n   * Otherwise, calling `open()` would result in closing and re-opening.\n   *\n   * @private\n   */\n  _outsideClickListener(event) {\n    if (event.composedPath().includes(this.$.overlay) || this._mouseDownInside || this._mouseUpInside) {\n      this._mouseDownInside = false;\n      this._mouseUpInside = false;\n      return;\n    }\n    if (!this._shouldCloseOnOutsideClick(event)) {\n      return;\n    }\n    const evt = new CustomEvent('vaadin-overlay-outside-click', {\n      bubbles: true,\n      cancelable: true,\n      detail: {\n        sourceEvent: event\n      }\n    });\n    this.dispatchEvent(evt);\n    if (this.opened && !evt.defaultPrevented) {\n      this.close(event);\n    }\n  }\n\n  /**\n   * Listener used to close whe overlay on Escape press, if it is the last one.\n   * @private\n   */\n  _keydownListener(event) {\n    if (!this._last) {\n      return;\n    }\n\n    // Only close modeless overlay on Esc press when it contains focus\n    if (this.modeless && !event.composedPath().includes(this.$.overlay)) {\n      return;\n    }\n    if (event.key === 'Escape') {\n      const evt = new CustomEvent('vaadin-overlay-escape-press', {\n        bubbles: true,\n        cancelable: true,\n        detail: {\n          sourceEvent: event\n        }\n      });\n      this.dispatchEvent(evt);\n      if (this.opened && !evt.defaultPrevented) {\n        this.close(event);\n      }\n    }\n  }\n};","map":{"version":3,"names":["afterNextRender","isIOS","OverlayFocusMixin","OverlayStackMixin","OverlayMixin","superClass","properties","opened","type","Boolean","notify","observer","reflectToAttribute","owner","Object","model","renderer","modeless","value","hidden","withBackdrop","observers","constructor","_boundMouseDownListener","_mouseDownListener","bind","_boundMouseUpListener","_mouseUpListener","_boundOutsideClickListener","_outsideClickListener","_boundKeydownListener","_keydownListener","_boundIosResizeListener","_detectIosNavbar","ready","addEventListener","$","backdrop","document","activeElement","body","overlay","getAttribute","focus","connectedCallback","window","disconnectedCallback","removeEventListener","requestContentUpdate","call","close","sourceEvent","evt","CustomEvent","bubbles","cancelable","detail","dispatchEvent","defaultPrevented","innerHeight","innerWidth","landscape","clientHeight","documentElement","style","setProperty","_addGlobalListeners","_removeGlobalListeners","_rendererOrDataChanged","ownerOrModelChanged","_oldOwner","_oldModel","rendererChanged","_oldRenderer","openedChanged","_oldOpened","innerHTML","_$litPart$","_modelessChanged","_enterModalState","_exitModalState","_openedChanged","wasOpened","_saveFocus","_animatedOpening","_trapFocus","_resetFocus","_animatedClosing","_hiddenChanged","hasAttribute","_flushAnimation","_shouldAnimate","getComputedStyle","name","getPropertyValue","_enqueueAnimation","callback","handler","listener","event","target","parentNode","_attachOverlay","setAttribute","_finishOpening","_placeholder","createComment","insertBefore","appendChild","bringToFront","removeAttribute","_finishClosing","_detachOverlay","removeProperty","removeChild","_mouseDownInside","composedPath","indexOf","_mouseUpInside","_shouldCloseOnOutsideClick","_event","_last","includes","key"],"sources":["/workspaces/frontend/node_modules/@vaadin/overlay/src/vaadin-overlay-mixin.js"],"sourcesContent":["/**\n * @license\n * Copyright (c) 2017 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { afterNextRender } from '@polymer/polymer/lib/utils/render-status.js';\nimport { isIOS } from '@vaadin/component-base/src/browser-utils.js';\nimport { OverlayFocusMixin } from './vaadin-overlay-focus-mixin.js';\nimport { OverlayStackMixin } from './vaadin-overlay-stack-mixin.js';\n\n/**\n * @polymerMixin\n * @mixes OverlayFocusMixin\n * @mixes OverlayStackMixin\n */\nexport const OverlayMixin = (superClass) =>\n  class OverlayMixin extends OverlayFocusMixin(OverlayStackMixin(superClass)) {\n    static get properties() {\n      return {\n        /**\n         * When true, the overlay is visible and attached to body.\n         */\n        opened: {\n          type: Boolean,\n          notify: true,\n          observer: '_openedChanged',\n          reflectToAttribute: true,\n        },\n\n        /**\n         * Owner element passed with renderer function\n         * @type {HTMLElement}\n         */\n        owner: {\n          type: Object,\n        },\n\n        /**\n         * Object with properties that is passed to `renderer` function\n         */\n        model: {\n          type: Object,\n        },\n\n        /**\n         * Custom function for rendering the content of the overlay.\n         * Receives three arguments:\n         *\n         * - `root` The root container DOM element. Append your content to it.\n         * - `owner` The host element of the renderer function.\n         * - `model` The object with the properties related with rendering.\n         * @type {OverlayRenderer | null | undefined}\n         */\n        renderer: {\n          type: Object,\n        },\n\n        /**\n         * When true the overlay won't disable the main content, showing\n         * it doesn't change the functionality of the user interface.\n         * @type {boolean}\n         */\n        modeless: {\n          type: Boolean,\n          value: false,\n          reflectToAttribute: true,\n          observer: '_modelessChanged',\n        },\n\n        /**\n         * When set to true, the overlay is hidden. This also closes the overlay\n         * immediately in case there is a closing animation in progress.\n         * @type {boolean}\n         */\n        hidden: {\n          type: Boolean,\n          reflectToAttribute: true,\n          observer: '_hiddenChanged',\n        },\n\n        /**\n         * When true the overlay has backdrop on top of content when opened.\n         * @type {boolean}\n         */\n        withBackdrop: {\n          type: Boolean,\n          value: false,\n          reflectToAttribute: true,\n        },\n      };\n    }\n\n    static get observers() {\n      return ['_rendererOrDataChanged(renderer, owner, model, opened)'];\n    }\n\n    constructor() {\n      super();\n\n      this._boundMouseDownListener = this._mouseDownListener.bind(this);\n      this._boundMouseUpListener = this._mouseUpListener.bind(this);\n      this._boundOutsideClickListener = this._outsideClickListener.bind(this);\n      this._boundKeydownListener = this._keydownListener.bind(this);\n\n      /* c8 ignore next 3 */\n      if (isIOS) {\n        this._boundIosResizeListener = () => this._detectIosNavbar();\n      }\n    }\n\n    /** @protected */\n    ready() {\n      super.ready();\n\n      // Need to add dummy click listeners to this and the backdrop or else\n      // the document click event listener (_outsideClickListener) may never\n      // get invoked on iOS Safari (reproducible in <vaadin-dialog>\n      // and <vaadin-context-menu>).\n      this.addEventListener('click', () => {});\n      this.$.backdrop.addEventListener('click', () => {});\n\n      this.addEventListener('mouseup', () => {\n        // In Chrome, focus moves to body on overlay content mousedown\n        // See https://github.com/vaadin/flow-components/issues/5507\n        if (document.activeElement === document.body && this.$.overlay.getAttribute('tabindex') === '0') {\n          this.$.overlay.focus();\n        }\n      });\n    }\n\n    /** @protected */\n    connectedCallback() {\n      super.connectedCallback();\n\n      /* c8 ignore next 3 */\n      if (this._boundIosResizeListener) {\n        this._detectIosNavbar();\n        window.addEventListener('resize', this._boundIosResizeListener);\n      }\n    }\n\n    /** @protected */\n    disconnectedCallback() {\n      super.disconnectedCallback();\n\n      /* c8 ignore next 3 */\n      if (this._boundIosResizeListener) {\n        window.removeEventListener('resize', this._boundIosResizeListener);\n      }\n    }\n\n    /**\n     * Requests an update for the content of the overlay.\n     * While performing the update, it invokes the renderer passed in the `renderer` property.\n     *\n     * It is not guaranteed that the update happens immediately (synchronously) after it is requested.\n     */\n    requestContentUpdate() {\n      if (this.renderer) {\n        this.renderer.call(this.owner, this, this.owner, this.model);\n      }\n    }\n\n    /**\n     * @param {Event=} sourceEvent\n     */\n    close(sourceEvent) {\n      const evt = new CustomEvent('vaadin-overlay-close', {\n        bubbles: true,\n        cancelable: true,\n        detail: { sourceEvent },\n      });\n      this.dispatchEvent(evt);\n      if (!evt.defaultPrevented) {\n        this.opened = false;\n      }\n    }\n\n    /** @private */\n    _detectIosNavbar() {\n      /* c8 ignore next 15 */\n      if (!this.opened) {\n        return;\n      }\n\n      const innerHeight = window.innerHeight;\n      const innerWidth = window.innerWidth;\n\n      const landscape = innerWidth > innerHeight;\n\n      const clientHeight = document.documentElement.clientHeight;\n\n      if (landscape && clientHeight > innerHeight) {\n        this.style.setProperty('--vaadin-overlay-viewport-bottom', `${clientHeight - innerHeight}px`);\n      } else {\n        this.style.setProperty('--vaadin-overlay-viewport-bottom', '0');\n      }\n    }\n\n    /** @private */\n    _addGlobalListeners() {\n      document.addEventListener('mousedown', this._boundMouseDownListener);\n      document.addEventListener('mouseup', this._boundMouseUpListener);\n      // Firefox leaks click to document on contextmenu even if prevented\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=990614\n      document.documentElement.addEventListener('click', this._boundOutsideClickListener, true);\n    }\n\n    /** @private */\n    _removeGlobalListeners() {\n      document.removeEventListener('mousedown', this._boundMouseDownListener);\n      document.removeEventListener('mouseup', this._boundMouseUpListener);\n      document.documentElement.removeEventListener('click', this._boundOutsideClickListener, true);\n    }\n\n    /** @private */\n    _rendererOrDataChanged(renderer, owner, model, opened) {\n      const ownerOrModelChanged = this._oldOwner !== owner || this._oldModel !== model;\n      this._oldModel = model;\n      this._oldOwner = owner;\n\n      const rendererChanged = this._oldRenderer !== renderer;\n      this._oldRenderer = renderer;\n\n      const openedChanged = this._oldOpened !== opened;\n      this._oldOpened = opened;\n\n      if (rendererChanged) {\n        this.innerHTML = '';\n        // Whenever a Lit-based renderer is used, it assigns a Lit part to the node it was rendered into.\n        // When clearing the rendered content, this part needs to be manually disposed of.\n        // Otherwise, using a Lit-based renderer on the same node will throw an exception or render nothing afterward.\n        delete this._$litPart$;\n      }\n\n      if (opened && renderer && (rendererChanged || openedChanged || ownerOrModelChanged)) {\n        this.requestContentUpdate();\n      }\n    }\n\n    /** @private */\n    _modelessChanged(modeless) {\n      if (!modeless) {\n        if (this.opened) {\n          this._addGlobalListeners();\n          this._enterModalState();\n        }\n      } else {\n        this._removeGlobalListeners();\n        this._exitModalState();\n      }\n    }\n\n    /** @private */\n    _openedChanged(opened, wasOpened) {\n      if (opened) {\n        this._saveFocus();\n\n        this._animatedOpening();\n\n        afterNextRender(this, () => {\n          this._trapFocus();\n\n          const evt = new CustomEvent('vaadin-overlay-open', { bubbles: true });\n          this.dispatchEvent(evt);\n        });\n\n        document.addEventListener('keydown', this._boundKeydownListener);\n\n        if (!this.modeless) {\n          this._addGlobalListeners();\n        }\n      } else if (wasOpened) {\n        this._resetFocus();\n\n        this._animatedClosing();\n\n        document.removeEventListener('keydown', this._boundKeydownListener);\n\n        if (!this.modeless) {\n          this._removeGlobalListeners();\n        }\n      }\n    }\n\n    /** @private */\n    _hiddenChanged(hidden) {\n      if (hidden && this.hasAttribute('closing')) {\n        this._flushAnimation('closing');\n      }\n    }\n\n    /**\n     * @return {boolean}\n     * @private\n     */\n    _shouldAnimate() {\n      const style = getComputedStyle(this);\n      const name = style.getPropertyValue('animation-name');\n      const hidden = style.getPropertyValue('display') === 'none';\n      return !hidden && name && name !== 'none';\n    }\n\n    /**\n     * @param {string} type\n     * @param {Function} callback\n     * @private\n     */\n    _enqueueAnimation(type, callback) {\n      const handler = `__${type}Handler`;\n      const listener = (event) => {\n        if (event && event.target !== this) {\n          return;\n        }\n        callback();\n        this.removeEventListener('animationend', listener);\n        delete this[handler];\n      };\n      this[handler] = listener;\n      this.addEventListener('animationend', listener);\n    }\n\n    /**\n     * @param {string} type\n     * @protected\n     */\n    _flushAnimation(type) {\n      const handler = `__${type}Handler`;\n      if (typeof this[handler] === 'function') {\n        this[handler]();\n      }\n    }\n\n    /** @private */\n    _animatedOpening() {\n      if (this.parentNode === document.body && this.hasAttribute('closing')) {\n        this._flushAnimation('closing');\n      }\n      this._attachOverlay();\n      if (!this.modeless) {\n        this._enterModalState();\n      }\n      this.setAttribute('opening', '');\n\n      if (this._shouldAnimate()) {\n        this._enqueueAnimation('opening', () => {\n          this._finishOpening();\n        });\n      } else {\n        this._finishOpening();\n      }\n    }\n\n    /** @private */\n    _attachOverlay() {\n      this._placeholder = document.createComment('vaadin-overlay-placeholder');\n      this.parentNode.insertBefore(this._placeholder, this);\n      document.body.appendChild(this);\n      this.bringToFront();\n    }\n\n    /** @private */\n    _finishOpening() {\n      this.removeAttribute('opening');\n    }\n\n    /** @private */\n    _finishClosing() {\n      this._detachOverlay();\n      this.$.overlay.style.removeProperty('pointer-events');\n      this.removeAttribute('closing');\n      this.dispatchEvent(new CustomEvent('vaadin-overlay-closed'));\n    }\n\n    /** @private */\n    _animatedClosing() {\n      if (this.hasAttribute('opening')) {\n        this._flushAnimation('opening');\n      }\n      if (this._placeholder) {\n        this._exitModalState();\n        this.setAttribute('closing', '');\n        this.dispatchEvent(new CustomEvent('vaadin-overlay-closing'));\n\n        if (this._shouldAnimate()) {\n          this._enqueueAnimation('closing', () => {\n            this._finishClosing();\n          });\n        } else {\n          this._finishClosing();\n        }\n      }\n    }\n\n    /** @private */\n    _detachOverlay() {\n      this._placeholder.parentNode.insertBefore(this, this._placeholder);\n      this._placeholder.parentNode.removeChild(this._placeholder);\n    }\n\n    /** @private */\n    _mouseDownListener(event) {\n      this._mouseDownInside = event.composedPath().indexOf(this.$.overlay) >= 0;\n    }\n\n    /** @private */\n    _mouseUpListener(event) {\n      this._mouseUpInside = event.composedPath().indexOf(this.$.overlay) >= 0;\n    }\n\n    /**\n     * Whether to close the overlay on outside click or not.\n     * Override this method to customize the closing logic.\n     *\n     * @param {Event} _event\n     * @return {boolean}\n     * @protected\n     */\n    _shouldCloseOnOutsideClick(_event) {\n      return this._last;\n    }\n\n    /**\n     * Outside click listener used in capture phase to close the overlay before\n     * propagating the event to the listener on the element that triggered it.\n     * Otherwise, calling `open()` would result in closing and re-opening.\n     *\n     * @private\n     */\n    _outsideClickListener(event) {\n      if (event.composedPath().includes(this.$.overlay) || this._mouseDownInside || this._mouseUpInside) {\n        this._mouseDownInside = false;\n        this._mouseUpInside = false;\n        return;\n      }\n\n      if (!this._shouldCloseOnOutsideClick(event)) {\n        return;\n      }\n\n      const evt = new CustomEvent('vaadin-overlay-outside-click', {\n        bubbles: true,\n        cancelable: true,\n        detail: { sourceEvent: event },\n      });\n      this.dispatchEvent(evt);\n\n      if (this.opened && !evt.defaultPrevented) {\n        this.close(event);\n      }\n    }\n\n    /**\n     * Listener used to close whe overlay on Escape press, if it is the last one.\n     * @private\n     */\n    _keydownListener(event) {\n      if (!this._last) {\n        return;\n      }\n\n      // Only close modeless overlay on Esc press when it contains focus\n      if (this.modeless && !event.composedPath().includes(this.$.overlay)) {\n        return;\n      }\n\n      if (event.key === 'Escape') {\n        const evt = new CustomEvent('vaadin-overlay-escape-press', {\n          bubbles: true,\n          cancelable: true,\n          detail: { sourceEvent: event },\n        });\n        this.dispatchEvent(evt);\n\n        if (this.opened && !evt.defaultPrevented) {\n          this.close(event);\n        }\n      }\n    }\n  };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}