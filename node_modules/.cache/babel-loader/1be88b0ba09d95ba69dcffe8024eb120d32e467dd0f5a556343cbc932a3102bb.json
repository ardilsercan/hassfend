{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/helpers/regeneratorRuntime\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4;\nimport \"core-js/modules/es.array.concat.js\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { isComponentLoaded } from \"../common/config/is_component_loaded\";\nimport { computeStateName } from \"../common/entity/compute_state_name\";\nimport { supportsFeature } from \"../common/entity/supports-feature\";\nimport { CAMERA_SUPPORT_STREAM, computeMJPEGStreamUrl, fetchStreamUrl, fetchThumbnailUrlWithCache, STREAM_TYPE_HLS, STREAM_TYPE_WEB_RTC } from \"../data/camera\";\nimport \"./ha-hls-player\";\nimport \"./ha-web-rtc-player\";\nexport var HaCameraStream = _decorate([customElement(\"ha-camera-stream\")], function (_initialize, _LitElement) {\n  var HaCameraStream = /*#__PURE__*/function (_LitElement2) {\n    _inherits(HaCameraStream, _LitElement2);\n    function HaCameraStream() {\n      var _this;\n      _classCallCheck(this, HaCameraStream);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, HaCameraStream, [].concat(args));\n      _initialize(_assertThisInitialized(_this));\n      return _this;\n    }\n    return _createClass(HaCameraStream);\n  }(_LitElement);\n  return {\n    F: HaCameraStream,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"stateObj\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        attribute: \"controls\"\n      })],\n      key: \"controls\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        attribute: \"muted\"\n      })],\n      key: \"muted\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        attribute: \"allow-exoplayer\"\n      })],\n      key: \"allowExoPlayer\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_posterUrl\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_forceMJPEG\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_url\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_connected\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"method\",\n      key: \"willUpdate\",\n      value:\n      // Video background image before its loaded\n\n      // We keep track if we should force MJPEG if there was a failure\n      // to get the HLS stream url. This is reset if we change entities.\n\n      function willUpdate(changedProps) {\n        var _changedProps$get;\n        if (changedProps.has(\"stateObj\") && !this._shouldRenderMJPEG && this.stateObj && ((_changedProps$get = changedProps.get(\"stateObj\")) === null || _changedProps$get === void 0 ? void 0 : _changedProps$get.entity_id) !== this.stateObj.entity_id) {\n          this._getPosterUrl();\n          if (this.stateObj.attributes.frontend_stream_type === STREAM_TYPE_HLS) {\n            this._forceMJPEG = undefined;\n            this._url = undefined;\n            this._getStreamUrl();\n          }\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"connectedCallback\",\n      value: function connectedCallback() {\n        _get(_getPrototypeOf(HaCameraStream.prototype), \"connectedCallback\", this).call(this);\n        this._connected = true;\n      }\n    }, {\n      kind: \"method\",\n      key: \"disconnectedCallback\",\n      value: function disconnectedCallback() {\n        _get(_getPrototypeOf(HaCameraStream.prototype), \"disconnectedCallback\", this).call(this);\n        this._connected = false;\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this.stateObj) {\n          return nothing;\n        }\n        if (__DEMO__ || this._shouldRenderMJPEG) {\n          return html(_templateObject || (_templateObject = _taggedTemplateLiteral([\"<img\\n        .src=\", \"\\n        .alt=\", \"\\n      />\"])), __DEMO__ ? this.stateObj.attributes.entity_picture : this._connected ? computeMJPEGStreamUrl(this.stateObj) : \"\", \"Preview of the \".concat(computeStateName(this.stateObj), \" camera.\"));\n        }\n        if (this.stateObj.attributes.frontend_stream_type === STREAM_TYPE_HLS) {\n          return this._url ? html(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"<ha-hls-player\\n            autoplay\\n            playsinline\\n            .allowExoPlayer=\", \"\\n            .muted=\", \"\\n            .controls=\", \"\\n            .hass=\", \"\\n            .url=\", \"\\n            .posterUrl=\", \"\\n          ></ha-hls-player>\"])), this.allowExoPlayer, this.muted, this.controls, this.hass, this._url, this._posterUrl) : nothing;\n        }\n        if (this.stateObj.attributes.frontend_stream_type === STREAM_TYPE_WEB_RTC) {\n          return html(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"<ha-web-rtc-player\\n        autoplay\\n        playsinline\\n        .muted=\", \"\\n        .controls=\", \"\\n        .hass=\", \"\\n        .entityid=\", \"\\n        .posterUrl=\", \"\\n      ></ha-web-rtc-player>\"])), this.muted, this.controls, this.hass, this.stateObj.entity_id, this._posterUrl);\n        }\n        return nothing;\n      }\n    }, {\n      kind: \"get\",\n      key: \"_shouldRenderMJPEG\",\n      value: function _shouldRenderMJPEG() {\n        if (this._forceMJPEG === this.stateObj.entity_id) {\n          // Fallback when unable to fetch stream url\n          return true;\n        }\n        if (!supportsFeature(this.stateObj, CAMERA_SUPPORT_STREAM)) {\n          // Steaming is not supported by the camera so fallback to MJPEG stream\n          return true;\n        }\n        if (this.stateObj.attributes.frontend_stream_type === STREAM_TYPE_WEB_RTC) {\n          // Browser support required for WebRTC\n          return typeof RTCPeerConnection === \"undefined\";\n        }\n        // Server side stream component required for HLS\n        return !isComponentLoaded(this.hass, \"stream\");\n      }\n    }, {\n      kind: \"method\",\n      key: \"_getPosterUrl\",\n      value: function () {\n        var _getPosterUrl2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return fetchThumbnailUrlWithCache(this.hass, this.stateObj.entity_id, this.clientWidth, this.clientHeight);\n              case 3:\n                this._posterUrl = _context.sent;\n                _context.next = 9;\n                break;\n              case 6:\n                _context.prev = 6;\n                _context.t0 = _context[\"catch\"](0);\n                // poster url is optional\n                this._posterUrl = undefined;\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee, this, [[0, 6]]);\n        }));\n        function _getPosterUrl() {\n          return _getPosterUrl2.apply(this, arguments);\n        }\n        return _getPosterUrl;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"_getStreamUrl\",\n      value: function () {\n        var _getStreamUrl2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n          var _yield$fetchStreamUrl, url;\n          return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n            while (1) switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return fetchStreamUrl(this.hass, this.stateObj.entity_id);\n              case 3:\n                _yield$fetchStreamUrl = _context2.sent;\n                url = _yield$fetchStreamUrl.url;\n                this._url = url;\n                _context2.next = 12;\n                break;\n              case 8:\n                _context2.prev = 8;\n                _context2.t0 = _context2[\"catch\"](0);\n                // Fails if we were unable to get a stream\n                // eslint-disable-next-line\n                console.error(_context2.t0);\n                this._forceMJPEG = this.stateObj.entity_id;\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }, _callee2, this, [[0, 8]]);\n        }));\n        function _getStreamUrl() {\n          return _getStreamUrl2.apply(this, arguments);\n        }\n        return _getStreamUrl;\n      }()\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n      :host,\\n      img {\\n        display: block;\\n      }\\n\\n      img {\\n        width: 100%;\\n      }\\n    \"])));\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","nothing","customElement","property","state","isComponentLoaded","computeStateName","supportsFeature","CAMERA_SUPPORT_STREAM","computeMJPEGStreamUrl","fetchStreamUrl","fetchThumbnailUrlWithCache","STREAM_TYPE_HLS","STREAM_TYPE_WEB_RTC","HaCameraStream","_decorate","_initialize","_LitElement","_LitElement2","_inherits","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_assertThisInitialized","_createClass","F","d","kind","decorators","attribute","key","value","type","Boolean","willUpdate","changedProps","_changedProps$get","has","_shouldRenderMJPEG","stateObj","get","entity_id","_getPosterUrl","attributes","frontend_stream_type","_forceMJPEG","undefined","_url","_getStreamUrl","connectedCallback","_get","_getPrototypeOf","prototype","call","_connected","disconnectedCallback","render","__DEMO__","_templateObject","_taggedTemplateLiteral","entity_picture","_templateObject2","allowExoPlayer","muted","controls","hass","_posterUrl","_templateObject3","RTCPeerConnection","_getPosterUrl2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","clientWidth","clientHeight","sent","t0","stop","apply","_getStreamUrl2","_callee2","_yield$fetchStreamUrl","url","_callee2$","_context2","console","error","static","styles","_templateObject4"],"sources":["/workspaces/frontend/src/components/ha-camera-stream.ts"],"sourcesContent":["import {\n  css,\n  CSSResultGroup,\n  html,\n  LitElement,\n  PropertyValues,\n  nothing,\n} from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { isComponentLoaded } from \"../common/config/is_component_loaded\";\nimport { computeStateName } from \"../common/entity/compute_state_name\";\nimport { supportsFeature } from \"../common/entity/supports-feature\";\nimport {\n  CameraEntity,\n  CAMERA_SUPPORT_STREAM,\n  computeMJPEGStreamUrl,\n  fetchStreamUrl,\n  fetchThumbnailUrlWithCache,\n  STREAM_TYPE_HLS,\n  STREAM_TYPE_WEB_RTC,\n} from \"../data/camera\";\nimport { HomeAssistant } from \"../types\";\nimport \"./ha-hls-player\";\nimport \"./ha-web-rtc-player\";\n\n@customElement(\"ha-camera-stream\")\nexport class HaCameraStream extends LitElement {\n  @property({ attribute: false }) public hass?: HomeAssistant;\n\n  @property({ attribute: false }) public stateObj?: CameraEntity;\n\n  @property({ type: Boolean, attribute: \"controls\" })\n  public controls = false;\n\n  @property({ type: Boolean, attribute: \"muted\" })\n  public muted = false;\n\n  @property({ type: Boolean, attribute: \"allow-exoplayer\" })\n  public allowExoPlayer = false;\n\n  // Video background image before its loaded\n  @state() private _posterUrl?: string;\n\n  // We keep track if we should force MJPEG if there was a failure\n  // to get the HLS stream url. This is reset if we change entities.\n  @state() private _forceMJPEG?: string;\n\n  @state() private _url?: string;\n\n  @state() private _connected = false;\n\n  public willUpdate(changedProps: PropertyValues): void {\n    if (\n      changedProps.has(\"stateObj\") &&\n      !this._shouldRenderMJPEG &&\n      this.stateObj &&\n      (changedProps.get(\"stateObj\") as CameraEntity | undefined)?.entity_id !==\n        this.stateObj.entity_id\n    ) {\n      this._getPosterUrl();\n      if (this.stateObj!.attributes.frontend_stream_type === STREAM_TYPE_HLS) {\n        this._forceMJPEG = undefined;\n        this._url = undefined;\n        this._getStreamUrl();\n      }\n    }\n  }\n\n  public connectedCallback() {\n    super.connectedCallback();\n    this._connected = true;\n  }\n\n  public disconnectedCallback() {\n    super.disconnectedCallback();\n    this._connected = false;\n  }\n\n  protected render() {\n    if (!this.stateObj) {\n      return nothing;\n    }\n    if (__DEMO__ || this._shouldRenderMJPEG) {\n      return html`<img\n        .src=${__DEMO__\n          ? this.stateObj.attributes.entity_picture!\n          : this._connected\n            ? computeMJPEGStreamUrl(this.stateObj)\n            : \"\"}\n        .alt=${`Preview of the ${computeStateName(this.stateObj)} camera.`}\n      />`;\n    }\n    if (this.stateObj.attributes.frontend_stream_type === STREAM_TYPE_HLS) {\n      return this._url\n        ? html`<ha-hls-player\n            autoplay\n            playsinline\n            .allowExoPlayer=${this.allowExoPlayer}\n            .muted=${this.muted}\n            .controls=${this.controls}\n            .hass=${this.hass}\n            .url=${this._url}\n            .posterUrl=${this._posterUrl}\n          ></ha-hls-player>`\n        : nothing;\n    }\n    if (this.stateObj.attributes.frontend_stream_type === STREAM_TYPE_WEB_RTC) {\n      return html`<ha-web-rtc-player\n        autoplay\n        playsinline\n        .muted=${this.muted}\n        .controls=${this.controls}\n        .hass=${this.hass}\n        .entityid=${this.stateObj.entity_id}\n        .posterUrl=${this._posterUrl}\n      ></ha-web-rtc-player>`;\n    }\n    return nothing;\n  }\n\n  private get _shouldRenderMJPEG() {\n    if (this._forceMJPEG === this.stateObj!.entity_id) {\n      // Fallback when unable to fetch stream url\n      return true;\n    }\n    if (!supportsFeature(this.stateObj!, CAMERA_SUPPORT_STREAM)) {\n      // Steaming is not supported by the camera so fallback to MJPEG stream\n      return true;\n    }\n    if (\n      this.stateObj!.attributes.frontend_stream_type === STREAM_TYPE_WEB_RTC\n    ) {\n      // Browser support required for WebRTC\n      return typeof RTCPeerConnection === \"undefined\";\n    }\n    // Server side stream component required for HLS\n    return !isComponentLoaded(this.hass!, \"stream\");\n  }\n\n  private async _getPosterUrl(): Promise<void> {\n    try {\n      this._posterUrl = await fetchThumbnailUrlWithCache(\n        this.hass!,\n        this.stateObj!.entity_id,\n        this.clientWidth,\n        this.clientHeight\n      );\n    } catch (err: any) {\n      // poster url is optional\n      this._posterUrl = undefined;\n    }\n  }\n\n  private async _getStreamUrl(): Promise<void> {\n    try {\n      const { url } = await fetchStreamUrl(\n        this.hass!,\n        this.stateObj!.entity_id\n      );\n\n      this._url = url;\n    } catch (err: any) {\n      // Fails if we were unable to get a stream\n      // eslint-disable-next-line\n      console.error(err);\n\n      this._forceMJPEG = this.stateObj!.entity_id;\n    }\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      :host,\n      img {\n        display: block;\n      }\n\n      img {\n        width: 100%;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-camera-stream\": HaCameraStream;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}