{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\n// https://stackoverflow.com/a/14322189/1947205\n// Changes:\n// 1. Do not allow a plus or minus at the start.\n// 2. Enforce that we have a \"T\" or a blank after the date portion\n//    to ensure we have a timestamp and not only a date.\n// 3. Disallow dates based on week number.\n// 4. Disallow dates only consisting of a year.\n// https://regex101.com/r/kc5C14/3\nvar regexp = /^\\d{4}-(0[1-9]|1[0-2])-([12]\\d|0[1-9]|3[01])[T| ](((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24:?00)([.,]\\d+(?!:))?)(\\8[0-5]\\d([.,]\\d+)?)?([zZ]|([+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)$/;\nexport var isTimestamp = function isTimestamp(input) {\n  return regexp.test(input);\n};","map":{"version":3,"names":["regexp","isTimestamp","input","test"],"sources":["/workspaces/frontend/src/common/string/is_timestamp.ts"],"sourcesContent":["// https://stackoverflow.com/a/14322189/1947205\n// Changes:\n// 1. Do not allow a plus or minus at the start.\n// 2. Enforce that we have a \"T\" or a blank after the date portion\n//    to ensure we have a timestamp and not only a date.\n// 3. Disallow dates based on week number.\n// 4. Disallow dates only consisting of a year.\n// https://regex101.com/r/kc5C14/3\nconst regexp =\n  /^\\d{4}-(0[1-9]|1[0-2])-([12]\\d|0[1-9]|3[01])[T| ](((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24:?00)([.,]\\d+(?!:))?)(\\8[0-5]\\d([.,]\\d+)?)?([zZ]|([+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)$/;\n\nexport const isTimestamp = (input: string): boolean => regexp.test(input);\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAMA,MAAM,GACV,4KAA4K;AAE9K,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAIC,KAAa;EAAA,OAAcF,MAAM,CAACG,IAAI,CAACD,KAAK,CAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}