{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport { DIRECTION_ALL, Manager, Pan, Press, Tap, TouchMouseInput } from \"@egjs/hammerjs\";\nimport { LitElement, css, html, nothing, svg } from \"lit\";\nimport { customElement, property, query, queryAll, state } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport { ifDefined } from \"lit/directives/if-defined\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { clamp } from \"../common/number/clamp\";\nimport { svgArc } from \"../resources/svg-arc\";\nimport { isTouch } from \"../util/is_touch\";\nconst MAX_ANGLE = 270;\nconst ROTATE_ANGLE = 360 - MAX_ANGLE / 2 - 90;\nconst RADIUS = 145;\nfunction xy2polar(x, y) {\n  const r = Math.sqrt(x * x + y * y);\n  const phi = Math.atan2(y, x);\n  return [r, phi];\n}\nfunction rad2deg(rad) {\n  return rad / (2 * Math.PI) * 360;\n}\nconst A11Y_KEY_CODES = new Set([\"ArrowRight\", \"ArrowUp\", \"ArrowLeft\", \"ArrowDown\", \"PageUp\", \"PageDown\", \"Home\", \"End\"]);\nexport let HaControlCircularSlider = _decorate([customElement(\"ha-control-circular-slider\")], function (_initialize, _LitElement) {\n  class HaControlCircularSlider extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaControlCircularSlider,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        reflect: true\n      })],\n      key: \"disabled\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        reflect: true\n      })],\n      key: \"readonly\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"dual\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: String\n      })],\n      key: \"mode\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"inactive\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: String\n      })],\n      key: \"label\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: String,\n        attribute: \"low-label\"\n      })],\n      key: \"lowLabel\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: String,\n        attribute: \"high-label\"\n      })],\n      key: \"highLabel\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Number\n      })],\n      key: \"value\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Number\n      })],\n      key: \"low\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Number\n      })],\n      key: \"high\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Number\n      })],\n      key: \"current\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Number\n      })],\n      key: \"step\",\n      value() {\n        return 1;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Number\n      })],\n      key: \"min\",\n      value() {\n        return 0;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Number\n      })],\n      key: \"max\",\n      value() {\n        return 100;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        attribute: \"prevent-interaction-on-scroll\"\n      })],\n      key: \"preventInteractionOnScroll\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_localValue\",\n      value() {\n        return this.value;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_localLow\",\n      value() {\n        return this.low;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_localHigh\",\n      value() {\n        return this.high;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_activeSlider\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_lastSlider\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"_valueToPercentage\",\n      value: function _valueToPercentage(value) {\n        return (clamp(value, this.min, this.max) - this.min) / (this.max - this.min);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_percentageToValue\",\n      value: function _percentageToValue(value) {\n        return (this.max - this.min) * value + this.min;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_steppedValue\",\n      value: function _steppedValue(value) {\n        return Math.round(value / this.step) * this.step;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_boundedValue\",\n      value: function _boundedValue(value) {\n        var _this$_localLow, _this$_localHigh;\n        const min = this._activeSlider === \"high\" ? Math.min((_this$_localLow = this._localLow) !== null && _this$_localLow !== void 0 ? _this$_localLow : this.max) : this.min;\n        const max = this._activeSlider === \"low\" ? Math.max((_this$_localHigh = this._localHigh) !== null && _this$_localHigh !== void 0 ? _this$_localHigh : this.min) : this.max;\n        return Math.min(Math.max(value, min), max);\n      }\n    }, {\n      kind: \"method\",\n      key: \"updated\",\n      value: function updated(changedProps) {\n        _get(_getPrototypeOf(HaControlCircularSlider.prototype), \"updated\", this).call(this, changedProps);\n        if (!this._activeSlider) {\n          if (changedProps.has(\"value\")) {\n            this._localValue = this.value;\n          }\n          if (changedProps.has(\"low\")) {\n            this._localLow = this.low;\n          }\n          if (changedProps.has(\"high\")) {\n            this._localHigh = this.high;\n          }\n        }\n        if (changedProps.has(\"_localValue\") && changedProps.get(\"_localValue\") == null || changedProps.has(\"_localLow\") && changedProps.get(\"_localLow\") == null || changedProps.has(\"_localHigh\") && changedProps.get(\"_localHigh\") == null || changedProps.has(\"preventInteractionOnScroll\")) {\n          this._destroyListeners();\n          this._setupListeners();\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"connectedCallback\",\n      value: function connectedCallback() {\n        _get(_getPrototypeOf(HaControlCircularSlider.prototype), \"connectedCallback\", this).call(this);\n        this._setupListeners();\n      }\n    }, {\n      kind: \"method\",\n      key: \"disconnectedCallback\",\n      value: function disconnectedCallback() {\n        _get(_getPrototypeOf(HaControlCircularSlider.prototype), \"disconnectedCallback\", this).call(this);\n      }\n    }, {\n      kind: \"field\",\n      key: \"_managers\",\n      value() {\n        return [];\n      }\n    }, {\n      kind: \"field\",\n      key: \"_getPercentageFromEvent\",\n      value() {\n        return e => {\n          const bound = this._slider.getBoundingClientRect();\n          const x = 2 * (e.center.x - bound.left - bound.width / 2) / bound.width;\n          const y = 2 * (e.center.y - bound.top - bound.height / 2) / bound.height;\n          const [, phi] = xy2polar(x, y);\n          const offset = (360 - MAX_ANGLE) / 2;\n          const angle = (rad2deg(phi) + offset - ROTATE_ANGLE + 360) % 360 - offset;\n          return Math.max(Math.min(angle / MAX_ANGLE, 1), 0);\n        };\n      }\n    }, {\n      kind: \"field\",\n      decorators: [query(\"#slider\")],\n      key: \"_slider\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [queryAll(\"[data-interaction]\")],\n      key: \"_interactions\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"_findActiveSlider\",\n      value: function _findActiveSlider(value) {\n        var _this$_localLow2, _this$_localHigh2;\n        if (!this.dual) return \"value\";\n        const low = Math.max((_this$_localLow2 = this._localLow) !== null && _this$_localLow2 !== void 0 ? _this$_localLow2 : this.min, this.min);\n        const high = Math.min((_this$_localHigh2 = this._localHigh) !== null && _this$_localHigh2 !== void 0 ? _this$_localHigh2 : this.max, this.max);\n        if (low >= value) {\n          return \"low\";\n        }\n        if (high <= value) {\n          return \"high\";\n        }\n        const lowDistance = Math.abs(value - low);\n        const highDistance = Math.abs(value - high);\n        return lowDistance <= highDistance ? \"low\" : \"high\";\n      }\n    }, {\n      kind: \"method\",\n      key: \"_setActiveValue\",\n      value: function _setActiveValue(value) {\n        switch (this._activeSlider) {\n          case \"high\":\n            this._localHigh = value;\n            break;\n          case \"low\":\n            this._localLow = value;\n            break;\n          case \"value\":\n            this._localValue = value;\n            break;\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_getActiveValue\",\n      value: function _getActiveValue() {\n        switch (this._activeSlider) {\n          case \"high\":\n            return this._localHigh;\n          case \"low\":\n            return this._localLow;\n          case \"value\":\n            return this._localValue;\n        }\n        return undefined;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_setupListeners\",\n      value: function _setupListeners() {\n        if (this._interactions && this._managers.length === 0) {\n          this._interactions.forEach(interaction => {\n            const mc = new Manager(interaction, {\n              inputClass: TouchMouseInput\n            });\n            this._managers.push(mc);\n            const pressToActivate = this.preventInteractionOnScroll && isTouch;\n\n            // If press to activate is true, a 50ms press is required to activate the slider\n            mc.add(new Press({\n              enable: pressToActivate,\n              pointers: 1,\n              time: 50\n            }));\n            const panRecognizer = new Pan({\n              direction: DIRECTION_ALL,\n              enable: !pressToActivate,\n              threshold: 0\n            });\n            mc.add(panRecognizer);\n            mc.add(new Tap({\n              event: \"singletap\"\n            }));\n            mc.on(\"press\", e => {\n              e.srcEvent.stopPropagation();\n              e.srcEvent.preventDefault();\n              if (this.disabled || this.readonly) return;\n              const percentage = this._getPercentageFromEvent(e);\n              const raw = this._percentageToValue(percentage);\n              this._activeSlider = this._findActiveSlider(raw);\n              const bounded = this._boundedValue(raw);\n              this._setActiveValue(bounded);\n              const stepped = this._steppedValue(bounded);\n              if (this._activeSlider) {\n                fireEvent(this, `${this._activeSlider}-changing`, {\n                  value: stepped\n                });\n              }\n              panRecognizer.set({\n                enable: true\n              });\n            });\n            mc.on(\"pressup\", e => {\n              e.srcEvent.stopPropagation();\n              e.srcEvent.preventDefault();\n              const percentage = this._getPercentageFromEvent(e);\n              const raw = this._percentageToValue(percentage);\n              const bounded = this._boundedValue(raw);\n              const stepped = this._steppedValue(bounded);\n              this._setActiveValue(stepped);\n              if (this._activeSlider) {\n                fireEvent(this, `${this._activeSlider}-changing`, {\n                  value: undefined\n                });\n                fireEvent(this, `${this._activeSlider}-changed`, {\n                  value: stepped\n                });\n              }\n              this._activeSlider = undefined;\n            });\n            mc.on(\"pan\", e => {\n              e.srcEvent.stopPropagation();\n              e.srcEvent.preventDefault();\n            });\n            mc.on(\"panstart\", e => {\n              var _this$shadowRoot;\n              if (this.disabled || this.readonly) return;\n              const percentage = this._getPercentageFromEvent(e);\n              const raw = this._percentageToValue(percentage);\n              this._activeSlider = this._findActiveSlider(raw);\n              this._lastSlider = this._activeSlider;\n              (_this$shadowRoot = this.shadowRoot) === null || _this$shadowRoot === void 0 || (_this$shadowRoot = _this$shadowRoot.getElementById(\"#slider\")) === null || _this$shadowRoot === void 0 || _this$shadowRoot.focus();\n            });\n            mc.on(\"pancancel\", () => {\n              if (this.disabled || this.readonly) return;\n              this._activeSlider = undefined;\n              if (pressToActivate) {\n                panRecognizer.set({\n                  enable: false\n                });\n              }\n            });\n            mc.on(\"panmove\", e => {\n              if (this.disabled || this.readonly) return;\n              const percentage = this._getPercentageFromEvent(e);\n              const raw = this._percentageToValue(percentage);\n              const bounded = this._boundedValue(raw);\n              this._setActiveValue(bounded);\n              const stepped = this._steppedValue(bounded);\n              if (this._activeSlider) {\n                fireEvent(this, `${this._activeSlider}-changing`, {\n                  value: stepped\n                });\n              }\n            });\n            mc.on(\"panend\", e => {\n              if (this.disabled || this.readonly) return;\n              const percentage = this._getPercentageFromEvent(e);\n              const raw = this._percentageToValue(percentage);\n              const bounded = this._boundedValue(raw);\n              const stepped = this._steppedValue(bounded);\n              this._setActiveValue(stepped);\n              if (this._activeSlider) {\n                fireEvent(this, `${this._activeSlider}-changing`, {\n                  value: undefined\n                });\n                fireEvent(this, `${this._activeSlider}-changed`, {\n                  value: stepped\n                });\n              }\n              this._activeSlider = undefined;\n              if (pressToActivate) {\n                panRecognizer.set({\n                  enable: false\n                });\n              }\n            });\n            mc.on(\"singletap\", e => {\n              var _this$shadowRoot2;\n              if (this.disabled || this.readonly) return;\n              const percentage = this._getPercentageFromEvent(e);\n              const raw = this._percentageToValue(percentage);\n              this._activeSlider = this._findActiveSlider(raw);\n              const bounded = this._boundedValue(raw);\n              const stepped = this._steppedValue(bounded);\n              this._setActiveValue(stepped);\n              if (this._activeSlider) {\n                fireEvent(this, `${this._activeSlider}-changing`, {\n                  value: undefined\n                });\n                fireEvent(this, `${this._activeSlider}-changed`, {\n                  value: stepped\n                });\n              }\n              this._lastSlider = this._activeSlider;\n              (_this$shadowRoot2 = this.shadowRoot) === null || _this$shadowRoot2 === void 0 || (_this$shadowRoot2 = _this$shadowRoot2.getElementById(\"#slider\")) === null || _this$shadowRoot2 === void 0 || _this$shadowRoot2.focus();\n              this._activeSlider = undefined;\n              if (pressToActivate) {\n                panRecognizer.set({\n                  enable: false\n                });\n              }\n            });\n          });\n        }\n      }\n    }, {\n      kind: \"get\",\n      key: \"_tenPercentStep\",\n      value: function _tenPercentStep() {\n        return Math.max(this.step, (this.max - this.min) / 10);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleKeyDown\",\n      value: function _handleKeyDown(e) {\n        var _this$_lastSlider;\n        if (!A11Y_KEY_CODES.has(e.code)) return;\n        e.preventDefault();\n        if (this._lastSlider) {\n          var _this$shadowRoot3;\n          (_this$shadowRoot3 = this.shadowRoot) === null || _this$shadowRoot3 === void 0 || (_this$shadowRoot3 = _this$shadowRoot3.getElementById(this._lastSlider)) === null || _this$shadowRoot3 === void 0 || _this$shadowRoot3.focus();\n        }\n        this._activeSlider = (_this$_lastSlider = this._lastSlider) !== null && _this$_lastSlider !== void 0 ? _this$_lastSlider : e.currentTarget.id;\n        this._lastSlider = undefined;\n        const value = this._getActiveValue();\n        switch (e.code) {\n          case \"ArrowRight\":\n          case \"ArrowUp\":\n            this._setActiveValue(this._boundedValue((value !== null && value !== void 0 ? value : this.min) + this.step));\n            break;\n          case \"ArrowLeft\":\n          case \"ArrowDown\":\n            this._setActiveValue(this._boundedValue((value !== null && value !== void 0 ? value : this.min) - this.step));\n            break;\n          case \"PageUp\":\n            this._setActiveValue(this._steppedValue(this._boundedValue((value !== null && value !== void 0 ? value : this.min) + this._tenPercentStep)));\n            break;\n          case \"PageDown\":\n            this._setActiveValue(this._steppedValue(this._boundedValue((value !== null && value !== void 0 ? value : this.min) - this._tenPercentStep)));\n            break;\n          case \"Home\":\n            this._setActiveValue(this._boundedValue(this.min));\n            break;\n          case \"End\":\n            this._setActiveValue(this._boundedValue(this.max));\n            break;\n        }\n        fireEvent(this, `${this._activeSlider}-changing`, {\n          value: this._getActiveValue()\n        });\n        this._activeSlider = undefined;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleKeyUp\",\n      value: function _handleKeyUp(e) {\n        if (!A11Y_KEY_CODES.has(e.code)) return;\n        this._activeSlider = e.currentTarget.id;\n        e.preventDefault();\n        fireEvent(this, `${this._activeSlider}-changing`, {\n          value: undefined\n        });\n        fireEvent(this, `${this._activeSlider}-changed`, {\n          value: this._getActiveValue()\n        });\n        this._activeSlider = undefined;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_destroyListeners\",\n      value: function _destroyListeners() {\n        if (this._managers.length > 0) {\n          this._managers.forEach(manager => manager.destroy());\n          this._managers = [];\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_strokeCircleDashArc\",\n      value: function _strokeCircleDashArc(value) {\n        return this._strokeDashArc(value, value);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_strokeDashArc\",\n      value: function _strokeDashArc(from, to) {\n        const start = this._valueToPercentage(from);\n        const end = this._valueToPercentage(to);\n        const track = RADIUS * 2 * Math.PI * MAX_ANGLE / 360;\n        const arc = Math.max((end - start) * track, 0);\n        const arcOffset = start * track - 0.5;\n        const strokeDasharray = `${arc} ${track - arc}`;\n        const strokeDashOffset = `-${arcOffset}`;\n        return [strokeDasharray, strokeDashOffset];\n      }\n    }, {\n      kind: \"method\",\n      key: \"renderArc\",\n      value: function renderArc(id, value, mode) {\n        var _this$current, _this$lowLabel;\n        if (this.disabled) return nothing;\n        const path = svgArc({\n          x: 0,\n          y: 0,\n          start: 0,\n          end: MAX_ANGLE,\n          r: RADIUS\n        });\n        const angle = value != null ? this._valueToPercentage(value) * MAX_ANGLE : undefined;\n        const limit = mode === \"end\" ? this.max : this.min;\n        const current = (_this$current = this.current) !== null && _this$current !== void 0 ? _this$current : limit;\n        const target = value !== null && value !== void 0 ? value : limit;\n        const showActive = mode === \"end\" ? target <= current : mode === \"start\" ? current <= target : false;\n        const showTarget = value != null;\n        const activeArc = showTarget ? showActive ? mode === \"end\" ? this._strokeDashArc(target, current) : this._strokeDashArc(current, target) : this._strokeCircleDashArc(target) : undefined;\n        const coloredArc = mode === \"full\" ? this._strokeDashArc(this.min, this.max) : mode === \"end\" ? this._strokeDashArc(target, limit) : this._strokeDashArc(limit, target);\n        const targetCircle = showTarget ? this._strokeCircleDashArc(target) : undefined;\n        const currentCircle = this.current != null && this.current <= this.max && this.current >= this.min && (showActive || this.mode === \"full\") ? this._strokeCircleDashArc(this.current) : undefined;\n        const onlyDotInteraction = this.preventInteractionOnScroll && isTouch || false;\n        return svg`\n      <g class=${classMap({\n          inactive: Boolean(this.inactive)\n        })}>\n        <path\n          class=\"arc arc-clear\"\n          d=${path}\n          stroke-dasharray=${coloredArc[0]}\n          stroke-dashoffset=${coloredArc[1]}\n        />\n        <path\n          class=\"arc arc-colored ${classMap({\n          [id]: true\n        })}\"\n          d=${path}\n          stroke-dasharray=${coloredArc[0]}\n          stroke-dashoffset=${coloredArc[1]}\n        />\n        ${activeArc ? svg`\n              <path\n                .id=${id}\n                d=${path}\n                class=\"arc arc-active ${classMap({\n          [id]: true\n        })}\"\n                stroke-dasharray=${activeArc[0]}\n                stroke-dashoffset=${activeArc[1]}\n                role=\"slider\"\n                tabindex=\"0\"\n                aria-valuemin=${this.min}\n                aria-valuemax=${this.max}\n                aria-valuenow=${this._localValue != null ? this._steppedValue(this._localValue) : undefined}\n                aria-disabled=${this.disabled}\n                aria-readonly=${this.readonly}\n                aria-label=${ifDefined((_this$lowLabel = this.lowLabel) !== null && _this$lowLabel !== void 0 ? _this$lowLabel : this.label)}\n                @keydown=${this._handleKeyDown}\n                @keyup=${this._handleKeyUp}\n              />\n            ` : nothing}\n        ${currentCircle ? svg`\n              <path\n                class=\"current arc-current\"\n                d=${path}\n                stroke-dasharray=${currentCircle[0]}\n                stroke-dashoffset=${currentCircle[1]}\n              />\n          ` : nothing}\n        ${targetCircle ? svg`\n              <!-- Use circle instead of path for interaction (Safari doesn't support well pointer-events with stroke-dasharray) -->\n              <circle\n                transform=\"rotate(${angle} 0 0)\"\n                ?data-interaction=${onlyDotInteraction}\n                cx=${RADIUS}\n                cy=\"0\"\n                />\n              <path\n                d=${path}\n                stroke-dasharray=${targetCircle[0]}\n                stroke-dashoffset=${targetCircle[1]}\n              />\n              <path\n                class=\"target-border ${classMap({\n          [id]: true\n        })}\"\n                d=${path}\n                stroke-dasharray=${targetCircle[0]}\n                stroke-dashoffset=${targetCircle[1]}\n              />\n              <path\n                class=\"target\"\n                d=${path}\n                stroke-dasharray=${targetCircle[0]}\n                stroke-dashoffset=${targetCircle[1]}\n              />\n          ` : nothing}\n      </g>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        const trackPath = svgArc({\n          x: 0,\n          y: 0,\n          start: 0,\n          end: MAX_ANGLE,\n          r: RADIUS\n        });\n        const lowValue = this.dual ? this._localLow : this._localValue;\n        const highValue = this._localHigh;\n        const current = this.current;\n        const currentStroke = current ? this._strokeCircleDashArc(current) : undefined;\n        const onlyDotInteraction = this.preventInteractionOnScroll && isTouch || false;\n        return html`\n      <svg\n        id=\"slider\"\n        viewBox=\"0 0 320 320\"\n        overflow=\"visible\"\n        class=${classMap({\n          pressed: Boolean(this._activeSlider)\n        })}\n        @keydown=${this._handleKeyDown}\n        tabindex=${this._lastSlider ? \"0\" : \"-1\"}\n      >\n        <g\n          id=\"container\"\n          transform=\"translate(160 160) rotate(${ROTATE_ANGLE})\"\n        >\n          <path d=${trackPath} ?data-interaction=${!onlyDotInteraction} />\n          <path class=\"background\" d=${trackPath} />\n          ${currentStroke ? svg`\n                  <path\n                    class=\"current\"\n                    d=${trackPath}\n                    stroke-dasharray=${currentStroke[0]}\n                    stroke-dashoffset=${currentStroke[1]}\n                  />\n                ` : nothing}\n          ${lowValue != null || this.mode === \"full\" ? this.renderArc(this.dual ? \"low\" : \"value\", lowValue, !this.dual && this.mode || \"start\") : nothing}\n          ${this.dual && highValue != null ? this.renderArc(\"high\", highValue, \"end\") : nothing}\n        </g>\n      </svg>\n    `;\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css`\n      :host {\n        --control-circular-slider-color: var(--primary-color);\n        --control-circular-slider-background: var(--disabled-color);\n        --control-circular-slider-background-opacity: 0.3;\n        --control-circular-slider-low-color: var(\n          --control-circular-slider-color\n        );\n        --control-circular-slider-high-color: var(\n          --control-circular-slider-color\n        );\n        --control-circular-slider-interaction-margin: 12px;\n        width: 320px;\n        display: block;\n      }\n      svg {\n        width: 100%;\n        display: block;\n        pointer-events: none;\n      }\n      g {\n        fill: none;\n      }\n      #slider {\n        outline: none;\n      }\n      path[data-interaction] {\n        fill: none;\n        cursor: pointer;\n        pointer-events: auto;\n        stroke: transparent;\n        stroke-linecap: round;\n        stroke-width: calc(\n          24px + 2 * var(--control-circular-slider-interaction-margin)\n        );\n      }\n      circle[data-interaction] {\n        r: calc(12px + var(--control-circular-slider-interaction-margin));\n        fill: transparent;\n        cursor: pointer;\n        pointer-events: auto;\n      }\n      :host([disabled]) [data-interaction],\n      :host([readonly]) [data-interaction] {\n        cursor: initial;\n        pointer-events: none;\n      }\n\n      .background {\n        fill: none;\n        stroke: var(--control-circular-slider-background);\n        opacity: var(--control-circular-slider-background-opacity);\n        transition:\n          stroke 180ms ease-in-out,\n          opacity 180ms ease-in-out;\n        stroke-linecap: round;\n        stroke-width: 24px;\n      }\n\n      .arc {\n        fill: none;\n        stroke-linecap: round;\n        stroke-width: 24px;\n        transition:\n          stroke-width 300ms ease-in-out,\n          stroke-dasharray 300ms ease-in-out,\n          stroke-dashoffset 300ms ease-in-out,\n          stroke 180ms ease-in-out,\n          opacity 180ms ease-in-out;\n      }\n\n      .target {\n        fill: none;\n        stroke-linecap: round;\n        stroke-width: 18px;\n        stroke: white;\n        transition:\n          stroke-width 300ms ease-in-out,\n          stroke-dasharray 300ms ease-in-out,\n          stroke-dashoffset 300ms ease-in-out,\n          stroke 180ms ease-in-out,\n          opacity 180ms ease-in-out;\n      }\n\n      .target-border {\n        fill: none;\n        stroke-linecap: round;\n        stroke-width: 24px;\n        stroke: white;\n        transition:\n          stroke-width 300ms ease-in-out,\n          stroke-dasharray 300ms ease-in-out,\n          stroke-dashoffset 300ms ease-in-out,\n          stroke 180ms ease-in-out,\n          opacity 180ms ease-in-out;\n      }\n\n      .current {\n        fill: none;\n        stroke-linecap: round;\n        stroke-width: 8px;\n        stroke: var(--primary-text-color);\n        opacity: 0.5;\n        transition:\n          stroke-width 300ms ease-in-out,\n          stroke-dasharray 300ms ease-in-out,\n          stroke-dashoffset 300ms ease-in-out,\n          stroke 180ms ease-in-out,\n          opacity 180ms ease-in-out;\n      }\n\n      .arc-current {\n        stroke: var(--clear-background-color);\n      }\n\n      .arc-clear {\n        stroke: var(--clear-background-color);\n      }\n      .arc-colored {\n        opacity: 0.5;\n      }\n      .arc-active {\n        outline: none;\n      }\n      .arc-active:focus-visible {\n        stroke-width: 28px;\n      }\n\n      .pressed .arc,\n      .pressed .target,\n      .pressed .target-border,\n      .pressed .current {\n        transition:\n          stroke-width 300ms ease-in-out,\n          stroke 180ms ease-in-out,\n          opacity 180ms ease-in-out;\n      }\n\n      .inactive .arc,\n      .inactive .arc-current {\n        opacity: 0;\n      }\n\n      .value {\n        stroke: var(--control-circular-slider-color);\n      }\n\n      .low {\n        stroke: var(--control-circular-slider-low-color);\n      }\n\n      .high {\n        stroke: var(--control-circular-slider-high-color);\n      }\n    `;\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["DIRECTION_ALL","Manager","Pan","Press","Tap","TouchMouseInput","LitElement","css","html","nothing","svg","customElement","property","query","queryAll","state","classMap","ifDefined","fireEvent","clamp","svgArc","isTouch","MAX_ANGLE","ROTATE_ANGLE","RADIUS","xy2polar","x","y","r","Math","sqrt","phi","atan2","rad2deg","rad","PI","A11Y_KEY_CODES","Set","HaControlCircularSlider","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","type","Boolean","reflect","key","value","String","attribute","Number","low","high","_valueToPercentage","min","max","_percentageToValue","_steppedValue","round","step","_boundedValue","_this$_localLow","_this$_localHigh","_activeSlider","_localLow","_localHigh","updated","changedProps","_get","_getPrototypeOf","prototype","call","has","_localValue","get","_destroyListeners","_setupListeners","connectedCallback","disconnectedCallback","e","bound","_slider","getBoundingClientRect","center","left","width","top","height","offset","angle","_findActiveSlider","_this$_localLow2","_this$_localHigh2","dual","lowDistance","abs","highDistance","_setActiveValue","_getActiveValue","undefined","_interactions","_managers","length","forEach","interaction","mc","inputClass","push","pressToActivate","preventInteractionOnScroll","add","enable","pointers","time","panRecognizer","direction","threshold","event","on","srcEvent","stopPropagation","preventDefault","disabled","readonly","percentage","_getPercentageFromEvent","raw","bounded","stepped","set","_this$shadowRoot","_lastSlider","shadowRoot","getElementById","focus","_this$shadowRoot2","_tenPercentStep","_handleKeyDown","_this$_lastSlider","code","_this$shadowRoot3","currentTarget","id","_handleKeyUp","manager","destroy","_strokeCircleDashArc","_strokeDashArc","from","to","start","end","track","arc","arcOffset","strokeDasharray","strokeDashOffset","renderArc","mode","_this$current","_this$lowLabel","path","limit","current","target","showActive","showTarget","activeArc","coloredArc","targetCircle","currentCircle","onlyDotInteraction","inactive","lowLabel","label","render","trackPath","lowValue","highValue","currentStroke","pressed","static","styles"],"sources":["/workspaces/frontend/src/components/ha-control-circular-slider.ts"],"sourcesContent":["import {\n  DIRECTION_ALL,\n  Manager,\n  Pan,\n  Press,\n  Tap,\n  TouchMouseInput,\n} from \"@egjs/hammerjs\";\nimport {\n  CSSResultGroup,\n  LitElement,\n  PropertyValues,\n  TemplateResult,\n  css,\n  html,\n  nothing,\n  svg,\n} from \"lit\";\nimport {\n  customElement,\n  property,\n  query,\n  queryAll,\n  state,\n} from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport { ifDefined } from \"lit/directives/if-defined\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { clamp } from \"../common/number/clamp\";\nimport { svgArc } from \"../resources/svg-arc\";\nimport { isTouch } from \"../util/is_touch\";\n\nconst MAX_ANGLE = 270;\nconst ROTATE_ANGLE = 360 - MAX_ANGLE / 2 - 90;\nconst RADIUS = 145;\n\nfunction xy2polar(x: number, y: number) {\n  const r = Math.sqrt(x * x + y * y);\n  const phi = Math.atan2(y, x);\n  return [r, phi];\n}\n\nfunction rad2deg(rad: number) {\n  return (rad / (2 * Math.PI)) * 360;\n}\n\ntype ActiveSlider = \"low\" | \"high\" | \"value\";\n\ndeclare global {\n  interface HASSDomEvents {\n    \"value-changing\": { value: unknown };\n    \"low-changing\": { value: unknown };\n    \"low-changed\": { value: unknown };\n    \"high-changing\": { value: unknown };\n    \"high-changed\": { value: unknown };\n  }\n}\n\nconst A11Y_KEY_CODES = new Set([\n  \"ArrowRight\",\n  \"ArrowUp\",\n  \"ArrowLeft\",\n  \"ArrowDown\",\n  \"PageUp\",\n  \"PageDown\",\n  \"Home\",\n  \"End\",\n]);\n\nexport type ControlCircularSliderMode = \"start\" | \"end\" | \"full\";\n\n@customElement(\"ha-control-circular-slider\")\nexport class HaControlCircularSlider extends LitElement {\n  @property({ type: Boolean, reflect: true }) public disabled = false;\n\n  @property({ type: Boolean, reflect: true }) public readonly = false;\n\n  @property({ type: Boolean }) public dual = false;\n\n  @property({ type: String }) public mode?: ControlCircularSliderMode;\n\n  @property({ type: Boolean }) public inactive = false;\n\n  @property({ type: String }) public label?: string;\n\n  @property({ type: String, attribute: \"low-label\" }) public lowLabel?: string;\n\n  @property({ type: String, attribute: \"high-label\" })\n  public highLabel?: string;\n\n  @property({ type: Number }) public value?: number;\n\n  @property({ type: Number }) public low?: number;\n\n  @property({ type: Number }) public high?: number;\n\n  @property({ type: Number }) public current?: number;\n\n  @property({ type: Number }) public step = 1;\n\n  @property({ type: Number }) public min = 0;\n\n  @property({ type: Number }) public max = 100;\n\n  @property({ type: Boolean, attribute: \"prevent-interaction-on-scroll\" })\n  public preventInteractionOnScroll = false;\n\n  @state() public _localValue?: number = this.value;\n\n  @state() public _localLow?: number = this.low;\n\n  @state() public _localHigh?: number = this.high;\n\n  @state() public _activeSlider?: ActiveSlider;\n\n  @state() public _lastSlider?: ActiveSlider;\n\n  private _valueToPercentage(value: number) {\n    return (\n      (clamp(value, this.min, this.max) - this.min) / (this.max - this.min)\n    );\n  }\n\n  private _percentageToValue(value: number) {\n    return (this.max - this.min) * value + this.min;\n  }\n\n  private _steppedValue(value: number) {\n    return Math.round(value / this.step) * this.step;\n  }\n\n  private _boundedValue(value: number) {\n    const min =\n      this._activeSlider === \"high\"\n        ? Math.min(this._localLow ?? this.max)\n        : this.min;\n    const max =\n      this._activeSlider === \"low\"\n        ? Math.max(this._localHigh ?? this.min)\n        : this.max;\n    return Math.min(Math.max(value, min), max);\n  }\n\n  protected updated(changedProps: PropertyValues): void {\n    super.updated(changedProps);\n    if (!this._activeSlider) {\n      if (changedProps.has(\"value\")) {\n        this._localValue = this.value;\n      }\n      if (changedProps.has(\"low\")) {\n        this._localLow = this.low;\n      }\n      if (changedProps.has(\"high\")) {\n        this._localHigh = this.high;\n      }\n    }\n\n    if (\n      (changedProps.has(\"_localValue\") &&\n        changedProps.get(\"_localValue\") == null) ||\n      (changedProps.has(\"_localLow\") &&\n        changedProps.get(\"_localLow\") == null) ||\n      (changedProps.has(\"_localHigh\") &&\n        changedProps.get(\"_localHigh\") == null) ||\n      changedProps.has(\"preventInteractionOnScroll\")\n    ) {\n      this._destroyListeners();\n      this._setupListeners();\n    }\n  }\n\n  connectedCallback(): void {\n    super.connectedCallback();\n    this._setupListeners();\n  }\n\n  disconnectedCallback(): void {\n    super.disconnectedCallback();\n  }\n\n  private _managers: HammerManager[] = [];\n\n  private _getPercentageFromEvent = (e: HammerInput) => {\n    const bound = this._slider.getBoundingClientRect();\n    const x = (2 * (e.center.x - bound.left - bound.width / 2)) / bound.width;\n    const y = (2 * (e.center.y - bound.top - bound.height / 2)) / bound.height;\n\n    const [, phi] = xy2polar(x, y);\n\n    const offset = (360 - MAX_ANGLE) / 2;\n\n    const angle = ((rad2deg(phi) + offset - ROTATE_ANGLE + 360) % 360) - offset;\n\n    return Math.max(Math.min(angle / MAX_ANGLE, 1), 0);\n  };\n\n  @query(\"#slider\")\n  private _slider;\n\n  @queryAll(\"[data-interaction]\")\n  private _interactions?: HTMLElement[];\n\n  private _findActiveSlider(value: number): ActiveSlider {\n    if (!this.dual) return \"value\";\n    const low = Math.max(this._localLow ?? this.min, this.min);\n    const high = Math.min(this._localHigh ?? this.max, this.max);\n    if (low >= value) {\n      return \"low\";\n    }\n    if (high <= value) {\n      return \"high\";\n    }\n    const lowDistance = Math.abs(value - low);\n    const highDistance = Math.abs(value - high);\n    return lowDistance <= highDistance ? \"low\" : \"high\";\n  }\n\n  private _setActiveValue(value: number) {\n    switch (this._activeSlider) {\n      case \"high\":\n        this._localHigh = value;\n        break;\n      case \"low\":\n        this._localLow = value;\n        break;\n      case \"value\":\n        this._localValue = value;\n        break;\n    }\n  }\n\n  private _getActiveValue(): number | undefined {\n    switch (this._activeSlider) {\n      case \"high\":\n        return this._localHigh;\n      case \"low\":\n        return this._localLow;\n      case \"value\":\n        return this._localValue;\n    }\n    return undefined;\n  }\n\n  private _setupListeners() {\n    if (this._interactions && this._managers.length === 0) {\n      this._interactions.forEach((interaction) => {\n        const mc = new Manager(interaction, {\n          inputClass: TouchMouseInput,\n        });\n\n        this._managers.push(mc);\n\n        const pressToActivate = this.preventInteractionOnScroll && isTouch;\n\n        // If press to activate is true, a 50ms press is required to activate the slider\n        mc.add(\n          new Press({\n            enable: pressToActivate,\n            pointers: 1,\n            time: 50,\n          })\n        );\n\n        const panRecognizer = new Pan({\n          direction: DIRECTION_ALL,\n          enable: !pressToActivate,\n          threshold: 0,\n        });\n\n        mc.add(panRecognizer);\n\n        mc.add(new Tap({ event: \"singletap\" }));\n\n        mc.on(\"press\", (e) => {\n          e.srcEvent.stopPropagation();\n          e.srcEvent.preventDefault();\n          if (this.disabled || this.readonly) return;\n          const percentage = this._getPercentageFromEvent(e);\n          const raw = this._percentageToValue(percentage);\n          this._activeSlider = this._findActiveSlider(raw);\n          const bounded = this._boundedValue(raw);\n          this._setActiveValue(bounded);\n          const stepped = this._steppedValue(bounded);\n          if (this._activeSlider) {\n            fireEvent(this, `${this._activeSlider}-changing`, {\n              value: stepped,\n            });\n          }\n          panRecognizer.set({ enable: true });\n        });\n\n        mc.on(\"pressup\", (e) => {\n          e.srcEvent.stopPropagation();\n          e.srcEvent.preventDefault();\n          const percentage = this._getPercentageFromEvent(e);\n          const raw = this._percentageToValue(percentage);\n          const bounded = this._boundedValue(raw);\n          const stepped = this._steppedValue(bounded);\n          this._setActiveValue(stepped);\n          if (this._activeSlider) {\n            fireEvent(this, `${this._activeSlider}-changing`, {\n              value: undefined,\n            });\n            fireEvent(this, `${this._activeSlider}-changed`, {\n              value: stepped,\n            });\n          }\n          this._activeSlider = undefined;\n        });\n\n        mc.on(\"pan\", (e) => {\n          e.srcEvent.stopPropagation();\n          e.srcEvent.preventDefault();\n        });\n        mc.on(\"panstart\", (e) => {\n          if (this.disabled || this.readonly) return;\n          const percentage = this._getPercentageFromEvent(e);\n          const raw = this._percentageToValue(percentage);\n          this._activeSlider = this._findActiveSlider(raw);\n          this._lastSlider = this._activeSlider;\n          this.shadowRoot?.getElementById(\"#slider\")?.focus();\n        });\n        mc.on(\"pancancel\", () => {\n          if (this.disabled || this.readonly) return;\n          this._activeSlider = undefined;\n          if (pressToActivate) {\n            panRecognizer.set({ enable: false });\n          }\n        });\n        mc.on(\"panmove\", (e) => {\n          if (this.disabled || this.readonly) return;\n          const percentage = this._getPercentageFromEvent(e);\n          const raw = this._percentageToValue(percentage);\n          const bounded = this._boundedValue(raw);\n          this._setActiveValue(bounded);\n          const stepped = this._steppedValue(bounded);\n          if (this._activeSlider) {\n            fireEvent(this, `${this._activeSlider}-changing`, {\n              value: stepped,\n            });\n          }\n        });\n        mc.on(\"panend\", (e) => {\n          if (this.disabled || this.readonly) return;\n          const percentage = this._getPercentageFromEvent(e);\n          const raw = this._percentageToValue(percentage);\n          const bounded = this._boundedValue(raw);\n          const stepped = this._steppedValue(bounded);\n          this._setActiveValue(stepped);\n          if (this._activeSlider) {\n            fireEvent(this, `${this._activeSlider}-changing`, {\n              value: undefined,\n            });\n            fireEvent(this, `${this._activeSlider}-changed`, {\n              value: stepped,\n            });\n          }\n          this._activeSlider = undefined;\n          if (pressToActivate) {\n            panRecognizer.set({ enable: false });\n          }\n        });\n        mc.on(\"singletap\", (e) => {\n          if (this.disabled || this.readonly) return;\n          const percentage = this._getPercentageFromEvent(e);\n          const raw = this._percentageToValue(percentage);\n          this._activeSlider = this._findActiveSlider(raw);\n          const bounded = this._boundedValue(raw);\n          const stepped = this._steppedValue(bounded);\n          this._setActiveValue(stepped);\n          if (this._activeSlider) {\n            fireEvent(this, `${this._activeSlider}-changing`, {\n              value: undefined,\n            });\n            fireEvent(this, `${this._activeSlider}-changed`, {\n              value: stepped,\n            });\n          }\n          this._lastSlider = this._activeSlider;\n          this.shadowRoot?.getElementById(\"#slider\")?.focus();\n          this._activeSlider = undefined;\n          if (pressToActivate) {\n            panRecognizer.set({ enable: false });\n          }\n        });\n      });\n    }\n  }\n\n  private get _tenPercentStep() {\n    return Math.max(this.step, (this.max - this.min) / 10);\n  }\n\n  private _handleKeyDown(e: KeyboardEvent) {\n    if (!A11Y_KEY_CODES.has(e.code)) return;\n    e.preventDefault();\n    if (this._lastSlider) {\n      this.shadowRoot?.getElementById(this._lastSlider)?.focus();\n    }\n    this._activeSlider =\n      this._lastSlider ?? ((e.currentTarget as any).id as ActiveSlider);\n    this._lastSlider = undefined;\n\n    const value = this._getActiveValue();\n\n    switch (e.code) {\n      case \"ArrowRight\":\n      case \"ArrowUp\":\n        this._setActiveValue(\n          this._boundedValue((value ?? this.min) + this.step)\n        );\n        break;\n      case \"ArrowLeft\":\n      case \"ArrowDown\":\n        this._setActiveValue(\n          this._boundedValue((value ?? this.min) - this.step)\n        );\n        break;\n      case \"PageUp\":\n        this._setActiveValue(\n          this._steppedValue(\n            this._boundedValue((value ?? this.min) + this._tenPercentStep)\n          )\n        );\n        break;\n      case \"PageDown\":\n        this._setActiveValue(\n          this._steppedValue(\n            this._boundedValue((value ?? this.min) - this._tenPercentStep)\n          )\n        );\n        break;\n      case \"Home\":\n        this._setActiveValue(this._boundedValue(this.min));\n        break;\n      case \"End\":\n        this._setActiveValue(this._boundedValue(this.max));\n        break;\n    }\n    fireEvent(this, `${this._activeSlider}-changing`, {\n      value: this._getActiveValue(),\n    });\n    this._activeSlider = undefined;\n  }\n\n  _handleKeyUp(e: KeyboardEvent) {\n    if (!A11Y_KEY_CODES.has(e.code)) return;\n    this._activeSlider = (e.currentTarget as any).id as ActiveSlider;\n    e.preventDefault();\n    fireEvent(this, `${this._activeSlider}-changing`, {\n      value: undefined,\n    });\n    fireEvent(this, `${this._activeSlider}-changed`, {\n      value: this._getActiveValue(),\n    });\n    this._activeSlider = undefined;\n  }\n\n  private _destroyListeners() {\n    if (this._managers.length > 0) {\n      this._managers.forEach((manager) => manager.destroy());\n      this._managers = [];\n    }\n  }\n\n  private _strokeCircleDashArc(value: number): [string, string] {\n    return this._strokeDashArc(value, value);\n  }\n\n  private _strokeDashArc(from: number, to: number): [string, string] {\n    const start = this._valueToPercentage(from);\n    const end = this._valueToPercentage(to);\n\n    const track = (RADIUS * 2 * Math.PI * MAX_ANGLE) / 360;\n    const arc = Math.max((end - start) * track, 0);\n    const arcOffset = start * track - 0.5;\n\n    const strokeDasharray = `${arc} ${track - arc}`;\n    const strokeDashOffset = `-${arcOffset}`;\n    return [strokeDasharray, strokeDashOffset];\n  }\n\n  protected renderArc(\n    id: string,\n    value: number | undefined,\n    mode: ControlCircularSliderMode\n  ) {\n    if (this.disabled) return nothing;\n\n    const path = svgArc({\n      x: 0,\n      y: 0,\n      start: 0,\n      end: MAX_ANGLE,\n      r: RADIUS,\n    });\n\n    const angle =\n      value != null ? this._valueToPercentage(value) * MAX_ANGLE : undefined;\n\n    const limit = mode === \"end\" ? this.max : this.min;\n\n    const current = this.current ?? limit;\n    const target = value ?? limit;\n\n    const showActive =\n      mode === \"end\"\n        ? target <= current\n        : mode === \"start\"\n          ? current <= target\n          : false;\n\n    const showTarget = value != null;\n\n    const activeArc = showTarget\n      ? showActive\n        ? mode === \"end\"\n          ? this._strokeDashArc(target, current)\n          : this._strokeDashArc(current, target)\n        : this._strokeCircleDashArc(target)\n      : undefined;\n\n    const coloredArc =\n      mode === \"full\"\n        ? this._strokeDashArc(this.min, this.max)\n        : mode === \"end\"\n          ? this._strokeDashArc(target, limit)\n          : this._strokeDashArc(limit, target);\n\n    const targetCircle = showTarget\n      ? this._strokeCircleDashArc(target)\n      : undefined;\n\n    const currentCircle =\n      this.current != null &&\n      this.current <= this.max &&\n      this.current >= this.min &&\n      (showActive || this.mode === \"full\")\n        ? this._strokeCircleDashArc(this.current)\n        : undefined;\n\n    const onlyDotInteraction =\n      (this.preventInteractionOnScroll && isTouch) || false;\n\n    return svg`\n      <g class=${classMap({ inactive: Boolean(this.inactive) })}>\n        <path\n          class=\"arc arc-clear\"\n          d=${path}\n          stroke-dasharray=${coloredArc[0]}\n          stroke-dashoffset=${coloredArc[1]}\n        />\n        <path\n          class=\"arc arc-colored ${classMap({ [id]: true })}\"\n          d=${path}\n          stroke-dasharray=${coloredArc[0]}\n          stroke-dashoffset=${coloredArc[1]}\n        />\n        ${\n          activeArc\n            ? svg`\n              <path\n                .id=${id}\n                d=${path}\n                class=\"arc arc-active ${classMap({ [id]: true })}\"\n                stroke-dasharray=${activeArc[0]}\n                stroke-dashoffset=${activeArc[1]}\n                role=\"slider\"\n                tabindex=\"0\"\n                aria-valuemin=${this.min}\n                aria-valuemax=${this.max}\n                aria-valuenow=${\n                  this._localValue != null\n                    ? this._steppedValue(this._localValue)\n                    : undefined\n                }\n                aria-disabled=${this.disabled}\n                aria-readonly=${this.readonly}\n                aria-label=${ifDefined(this.lowLabel ?? this.label)}\n                @keydown=${this._handleKeyDown}\n                @keyup=${this._handleKeyUp}\n              />\n            `\n            : nothing\n        }\n        ${\n          currentCircle\n            ? svg`\n              <path\n                class=\"current arc-current\"\n                d=${path}\n                stroke-dasharray=${currentCircle[0]}\n                stroke-dashoffset=${currentCircle[1]}\n              />\n          `\n            : nothing\n        }\n        ${\n          targetCircle\n            ? svg`\n              <!-- Use circle instead of path for interaction (Safari doesn't support well pointer-events with stroke-dasharray) -->\n              <circle\n                transform=\"rotate(${angle} 0 0)\"\n                ?data-interaction=${onlyDotInteraction}\n                cx=${RADIUS}\n                cy=\"0\"\n                />\n              <path\n                d=${path}\n                stroke-dasharray=${targetCircle[0]}\n                stroke-dashoffset=${targetCircle[1]}\n              />\n              <path\n                class=\"target-border ${classMap({ [id]: true })}\"\n                d=${path}\n                stroke-dasharray=${targetCircle[0]}\n                stroke-dashoffset=${targetCircle[1]}\n              />\n              <path\n                class=\"target\"\n                d=${path}\n                stroke-dasharray=${targetCircle[0]}\n                stroke-dashoffset=${targetCircle[1]}\n              />\n          `\n            : nothing\n        }\n      </g>\n    `;\n  }\n\n  protected render(): TemplateResult {\n    const trackPath = svgArc({\n      x: 0,\n      y: 0,\n      start: 0,\n      end: MAX_ANGLE,\n      r: RADIUS,\n    });\n\n    const lowValue = this.dual ? this._localLow : this._localValue;\n    const highValue = this._localHigh;\n    const current = this.current;\n\n    const currentStroke = current\n      ? this._strokeCircleDashArc(current)\n      : undefined;\n\n    const onlyDotInteraction =\n      (this.preventInteractionOnScroll && isTouch) || false;\n\n    return html`\n      <svg\n        id=\"slider\"\n        viewBox=\"0 0 320 320\"\n        overflow=\"visible\"\n        class=${classMap({\n          pressed: Boolean(this._activeSlider),\n        })}\n        @keydown=${this._handleKeyDown}\n        tabindex=${this._lastSlider ? \"0\" : \"-1\"}\n      >\n        <g\n          id=\"container\"\n          transform=\"translate(160 160) rotate(${ROTATE_ANGLE})\"\n        >\n          <path d=${trackPath} ?data-interaction=${!onlyDotInteraction} />\n          <path class=\"background\" d=${trackPath} />\n          ${currentStroke\n            ? svg`\n                  <path\n                    class=\"current\"\n                    d=${trackPath}\n                    stroke-dasharray=${currentStroke[0]}\n                    stroke-dashoffset=${currentStroke[1]}\n                  />\n                `\n            : nothing}\n          ${lowValue != null || this.mode === \"full\"\n            ? this.renderArc(\n                this.dual ? \"low\" : \"value\",\n                lowValue,\n                (!this.dual && this.mode) || \"start\"\n              )\n            : nothing}\n          ${this.dual && highValue != null\n            ? this.renderArc(\"high\", highValue, \"end\")\n            : nothing}\n        </g>\n      </svg>\n    `;\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      :host {\n        --control-circular-slider-color: var(--primary-color);\n        --control-circular-slider-background: var(--disabled-color);\n        --control-circular-slider-background-opacity: 0.3;\n        --control-circular-slider-low-color: var(\n          --control-circular-slider-color\n        );\n        --control-circular-slider-high-color: var(\n          --control-circular-slider-color\n        );\n        --control-circular-slider-interaction-margin: 12px;\n        width: 320px;\n        display: block;\n      }\n      svg {\n        width: 100%;\n        display: block;\n        pointer-events: none;\n      }\n      g {\n        fill: none;\n      }\n      #slider {\n        outline: none;\n      }\n      path[data-interaction] {\n        fill: none;\n        cursor: pointer;\n        pointer-events: auto;\n        stroke: transparent;\n        stroke-linecap: round;\n        stroke-width: calc(\n          24px + 2 * var(--control-circular-slider-interaction-margin)\n        );\n      }\n      circle[data-interaction] {\n        r: calc(12px + var(--control-circular-slider-interaction-margin));\n        fill: transparent;\n        cursor: pointer;\n        pointer-events: auto;\n      }\n      :host([disabled]) [data-interaction],\n      :host([readonly]) [data-interaction] {\n        cursor: initial;\n        pointer-events: none;\n      }\n\n      .background {\n        fill: none;\n        stroke: var(--control-circular-slider-background);\n        opacity: var(--control-circular-slider-background-opacity);\n        transition:\n          stroke 180ms ease-in-out,\n          opacity 180ms ease-in-out;\n        stroke-linecap: round;\n        stroke-width: 24px;\n      }\n\n      .arc {\n        fill: none;\n        stroke-linecap: round;\n        stroke-width: 24px;\n        transition:\n          stroke-width 300ms ease-in-out,\n          stroke-dasharray 300ms ease-in-out,\n          stroke-dashoffset 300ms ease-in-out,\n          stroke 180ms ease-in-out,\n          opacity 180ms ease-in-out;\n      }\n\n      .target {\n        fill: none;\n        stroke-linecap: round;\n        stroke-width: 18px;\n        stroke: white;\n        transition:\n          stroke-width 300ms ease-in-out,\n          stroke-dasharray 300ms ease-in-out,\n          stroke-dashoffset 300ms ease-in-out,\n          stroke 180ms ease-in-out,\n          opacity 180ms ease-in-out;\n      }\n\n      .target-border {\n        fill: none;\n        stroke-linecap: round;\n        stroke-width: 24px;\n        stroke: white;\n        transition:\n          stroke-width 300ms ease-in-out,\n          stroke-dasharray 300ms ease-in-out,\n          stroke-dashoffset 300ms ease-in-out,\n          stroke 180ms ease-in-out,\n          opacity 180ms ease-in-out;\n      }\n\n      .current {\n        fill: none;\n        stroke-linecap: round;\n        stroke-width: 8px;\n        stroke: var(--primary-text-color);\n        opacity: 0.5;\n        transition:\n          stroke-width 300ms ease-in-out,\n          stroke-dasharray 300ms ease-in-out,\n          stroke-dashoffset 300ms ease-in-out,\n          stroke 180ms ease-in-out,\n          opacity 180ms ease-in-out;\n      }\n\n      .arc-current {\n        stroke: var(--clear-background-color);\n      }\n\n      .arc-clear {\n        stroke: var(--clear-background-color);\n      }\n      .arc-colored {\n        opacity: 0.5;\n      }\n      .arc-active {\n        outline: none;\n      }\n      .arc-active:focus-visible {\n        stroke-width: 28px;\n      }\n\n      .pressed .arc,\n      .pressed .target,\n      .pressed .target-border,\n      .pressed .current {\n        transition:\n          stroke-width 300ms ease-in-out,\n          stroke 180ms ease-in-out,\n          opacity 180ms ease-in-out;\n      }\n\n      .inactive .arc,\n      .inactive .arc-current {\n        opacity: 0;\n      }\n\n      .value {\n        stroke: var(--control-circular-slider-color);\n      }\n\n      .low {\n        stroke: var(--control-circular-slider-low-color);\n      }\n\n      .high {\n        stroke: var(--control-circular-slider-high-color);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-control-circular-slider\": HaControlCircularSlider;\n  }\n}\n"],"mappings":";;;AAAA,SACEA,aAAa,EACbC,OAAO,EACPC,GAAG,EACHC,KAAK,EACLC,GAAG,EACHC,eAAe,QACV,gBAAgB;AACvB,SAEEC,UAAU,EAGVC,GAAG,EACHC,IAAI,EACJC,OAAO,EACPC,GAAG,QACE,KAAK;AACZ,SACEC,aAAa,EACbC,QAAQ,EACRC,KAAK,EACLC,QAAQ,EACRC,KAAK,QACA,gBAAgB;AACvB,SAASC,QAAQ,QAAQ,0BAA0B;AACnD,SAASC,SAAS,QAAQ,2BAA2B;AACrD,SAASC,SAAS,QAAQ,0BAA0B;AACpD,SAASC,KAAK,QAAQ,wBAAwB;AAC9C,SAASC,MAAM,QAAQ,sBAAsB;AAC7C,SAASC,OAAO,QAAQ,kBAAkB;AAE1C,MAAMC,SAAS,GAAG,GAAG;AACrB,MAAMC,YAAY,GAAG,GAAG,GAAGD,SAAS,GAAG,CAAC,GAAG,EAAE;AAC7C,MAAME,MAAM,GAAG,GAAG;AAElB,SAASC,QAAQA,CAACC,CAAS,EAAEC,CAAS,EAAE;EACtC,MAAMC,CAAC,GAAGC,IAAI,CAACC,IAAI,CAACJ,CAAC,GAAGA,CAAC,GAAGC,CAAC,GAAGA,CAAC,CAAC;EAClC,MAAMI,GAAG,GAAGF,IAAI,CAACG,KAAK,CAACL,CAAC,EAAED,CAAC,CAAC;EAC5B,OAAO,CAACE,CAAC,EAAEG,GAAG,CAAC;AACjB;AAEA,SAASE,OAAOA,CAACC,GAAW,EAAE;EAC5B,OAAQA,GAAG,IAAI,CAAC,GAAGL,IAAI,CAACM,EAAE,CAAC,GAAI,GAAG;AACpC;AAcA,MAAMC,cAAc,GAAG,IAAIC,GAAG,CAAC,CAC7B,YAAY,EACZ,SAAS,EACT,WAAW,EACX,WAAW,EACX,QAAQ,EACR,UAAU,EACV,MAAM,EACN,KAAK,CACN,CAAC;AAIF,WACaC,uBAAuB,GAAAC,SAAA,EADnC5B,aAAa,CAAC,4BAA4B,CAAC,aAAA6B,WAAA,EAAAC,WAAA;EAA5C,MACaH,uBAAuB,SAAAG,WAAA,CAAoB;IAAAC,YAAA,GAAAC,IAAA;MAAA,SAAAA,IAAA;MAAAH,WAAA;IAAA;EA0wBxD;EAAC;IAAAI,CAAA,EA1wBYN,uBAAuB;IAAAO,CAAA;MAAAC,IAAA;MAAAC,UAAA,GACjCnC,QAAQ,CAAC;QAAEoC,IAAI,EAAEC,OAAO;QAAEC,OAAO,EAAE;MAAK,CAAC,CAAC;MAAAC,GAAA;MAAAC,MAAA;QAAA,OAAmB,KAAK;MAAA;IAAA;MAAAN,IAAA;MAAAC,UAAA,GAElEnC,QAAQ,CAAC;QAAEoC,IAAI,EAAEC,OAAO;QAAEC,OAAO,EAAE;MAAK,CAAC,CAAC;MAAAC,GAAA;MAAAC,MAAA;QAAA,OAAmB,KAAK;MAAA;IAAA;MAAAN,IAAA;MAAAC,UAAA,GAElEnC,QAAQ,CAAC;QAAEoC,IAAI,EAAEC;MAAQ,CAAC,CAAC;MAAAE,GAAA;MAAAC,MAAA;QAAA,OAAe,KAAK;MAAA;IAAA;MAAAN,IAAA;MAAAC,UAAA,GAE/CnC,QAAQ,CAAC;QAAEoC,IAAI,EAAEK;MAAO,CAAC,CAAC;MAAAF,GAAA;MAAAC,KAAA;IAAA;MAAAN,IAAA;MAAAC,UAAA,GAE1BnC,QAAQ,CAAC;QAAEoC,IAAI,EAAEC;MAAQ,CAAC,CAAC;MAAAE,GAAA;MAAAC,MAAA;QAAA,OAAmB,KAAK;MAAA;IAAA;MAAAN,IAAA;MAAAC,UAAA,GAEnDnC,QAAQ,CAAC;QAAEoC,IAAI,EAAEK;MAAO,CAAC,CAAC;MAAAF,GAAA;MAAAC,KAAA;IAAA;MAAAN,IAAA;MAAAC,UAAA,GAE1BnC,QAAQ,CAAC;QAAEoC,IAAI,EAAEK,MAAM;QAAEC,SAAS,EAAE;MAAY,CAAC,CAAC;MAAAH,GAAA;MAAAC,KAAA;IAAA;MAAAN,IAAA;MAAAC,UAAA,GAElDnC,QAAQ,CAAC;QAAEoC,IAAI,EAAEK,MAAM;QAAEC,SAAS,EAAE;MAAa,CAAC,CAAC;MAAAH,GAAA;MAAAC,KAAA;IAAA;MAAAN,IAAA;MAAAC,UAAA,GAGnDnC,QAAQ,CAAC;QAAEoC,IAAI,EAAEO;MAAO,CAAC,CAAC;MAAAJ,GAAA;MAAAC,KAAA;IAAA;MAAAN,IAAA;MAAAC,UAAA,GAE1BnC,QAAQ,CAAC;QAAEoC,IAAI,EAAEO;MAAO,CAAC,CAAC;MAAAJ,GAAA;MAAAC,KAAA;IAAA;MAAAN,IAAA;MAAAC,UAAA,GAE1BnC,QAAQ,CAAC;QAAEoC,IAAI,EAAEO;MAAO,CAAC,CAAC;MAAAJ,GAAA;MAAAC,KAAA;IAAA;MAAAN,IAAA;MAAAC,UAAA,GAE1BnC,QAAQ,CAAC;QAAEoC,IAAI,EAAEO;MAAO,CAAC,CAAC;MAAAJ,GAAA;MAAAC,KAAA;IAAA;MAAAN,IAAA;MAAAC,UAAA,GAE1BnC,QAAQ,CAAC;QAAEoC,IAAI,EAAEO;MAAO,CAAC,CAAC;MAAAJ,GAAA;MAAAC,MAAA;QAAA,OAAe,CAAC;MAAA;IAAA;MAAAN,IAAA;MAAAC,UAAA,GAE1CnC,QAAQ,CAAC;QAAEoC,IAAI,EAAEO;MAAO,CAAC,CAAC;MAAAJ,GAAA;MAAAC,MAAA;QAAA,OAAc,CAAC;MAAA;IAAA;MAAAN,IAAA;MAAAC,UAAA,GAEzCnC,QAAQ,CAAC;QAAEoC,IAAI,EAAEO;MAAO,CAAC,CAAC;MAAAJ,GAAA;MAAAC,MAAA;QAAA,OAAc,GAAG;MAAA;IAAA;MAAAN,IAAA;MAAAC,UAAA,GAE3CnC,QAAQ,CAAC;QAAEoC,IAAI,EAAEC,OAAO;QAAEK,SAAS,EAAE;MAAgC,CAAC,CAAC;MAAAH,GAAA;MAAAC,MAAA;QAAA,OACpC,KAAK;MAAA;IAAA;MAAAN,IAAA;MAAAC,UAAA,GAExChC,KAAK,CAAC,CAAC;MAAAoC,GAAA;MAAAC,MAAA;QAAA,OAA+B,IAAI,CAACA,KAAK;MAAA;IAAA;MAAAN,IAAA;MAAAC,UAAA,GAEhDhC,KAAK,CAAC,CAAC;MAAAoC,GAAA;MAAAC,MAAA;QAAA,OAA6B,IAAI,CAACI,GAAG;MAAA;IAAA;MAAAV,IAAA;MAAAC,UAAA,GAE5ChC,KAAK,CAAC,CAAC;MAAAoC,GAAA;MAAAC,MAAA;QAAA,OAA8B,IAAI,CAACK,IAAI;MAAA;IAAA;MAAAX,IAAA;MAAAC,UAAA,GAE9ChC,KAAK,CAAC,CAAC;MAAAoC,GAAA;MAAAC,KAAA;IAAA;MAAAN,IAAA;MAAAC,UAAA,GAEPhC,KAAK,CAAC,CAAC;MAAAoC,GAAA;MAAAC,KAAA;IAAA;MAAAN,IAAA;MAAAK,GAAA;MAAAC,KAAA,EAER,SAAAM,mBAA2BN,KAAa,EAAE;QACxC,OACE,CAACjC,KAAK,CAACiC,KAAK,EAAE,IAAI,CAACO,GAAG,EAAE,IAAI,CAACC,GAAG,CAAC,GAAG,IAAI,CAACD,GAAG,KAAK,IAAI,CAACC,GAAG,GAAG,IAAI,CAACD,GAAG,CAAC;MAEzE;IAAC;MAAAb,IAAA;MAAAK,GAAA;MAAAC,KAAA,EAED,SAAAS,mBAA2BT,KAAa,EAAE;QACxC,OAAO,CAAC,IAAI,CAACQ,GAAG,GAAG,IAAI,CAACD,GAAG,IAAIP,KAAK,GAAG,IAAI,CAACO,GAAG;MACjD;IAAC;MAAAb,IAAA;MAAAK,GAAA;MAAAC,KAAA,EAED,SAAAU,cAAsBV,KAAa,EAAE;QACnC,OAAOvB,IAAI,CAACkC,KAAK,CAACX,KAAK,GAAG,IAAI,CAACY,IAAI,CAAC,GAAG,IAAI,CAACA,IAAI;MAClD;IAAC;MAAAlB,IAAA;MAAAK,GAAA;MAAAC,KAAA,EAED,SAAAa,cAAsBb,KAAa,EAAE;QAAA,IAAAc,eAAA,EAAAC,gBAAA;QACnC,MAAMR,GAAG,GACP,IAAI,CAACS,aAAa,KAAK,MAAM,GACzBvC,IAAI,CAAC8B,GAAG,EAAAO,eAAA,GAAC,IAAI,CAACG,SAAS,cAAAH,eAAA,cAAAA,eAAA,GAAI,IAAI,CAACN,GAAG,CAAC,GACpC,IAAI,CAACD,GAAG;QACd,MAAMC,GAAG,GACP,IAAI,CAACQ,aAAa,KAAK,KAAK,GACxBvC,IAAI,CAAC+B,GAAG,EAAAO,gBAAA,GAAC,IAAI,CAACG,UAAU,cAAAH,gBAAA,cAAAA,gBAAA,GAAI,IAAI,CAACR,GAAG,CAAC,GACrC,IAAI,CAACC,GAAG;QACd,OAAO/B,IAAI,CAAC8B,GAAG,CAAC9B,IAAI,CAAC+B,GAAG,CAACR,KAAK,EAAEO,GAAG,CAAC,EAAEC,GAAG,CAAC;MAC5C;IAAC;MAAAd,IAAA;MAAAK,GAAA;MAAAC,KAAA,EAED,SAAAmB,QAAkBC,YAA4B,EAAQ;QACpDC,IAAA,CAAAC,eAAA,CAxESpC,uBAAuB,CAAAqC,SAAA,oBAAAC,IAAA,OAwElBJ,YAAY;QAC1B,IAAI,CAAC,IAAI,CAACJ,aAAa,EAAE;UACvB,IAAII,YAAY,CAACK,GAAG,CAAC,OAAO,CAAC,EAAE;YAC7B,IAAI,CAACC,WAAW,GAAG,IAAI,CAAC1B,KAAK;UAC/B;UACA,IAAIoB,YAAY,CAACK,GAAG,CAAC,KAAK,CAAC,EAAE;YAC3B,IAAI,CAACR,SAAS,GAAG,IAAI,CAACb,GAAG;UAC3B;UACA,IAAIgB,YAAY,CAACK,GAAG,CAAC,MAAM,CAAC,EAAE;YAC5B,IAAI,CAACP,UAAU,GAAG,IAAI,CAACb,IAAI;UAC7B;QACF;QAEA,IACGe,YAAY,CAACK,GAAG,CAAC,aAAa,CAAC,IAC9BL,YAAY,CAACO,GAAG,CAAC,aAAa,CAAC,IAAI,IAAI,IACxCP,YAAY,CAACK,GAAG,CAAC,WAAW,CAAC,IAC5BL,YAAY,CAACO,GAAG,CAAC,WAAW,CAAC,IAAI,IAAK,IACvCP,YAAY,CAACK,GAAG,CAAC,YAAY,CAAC,IAC7BL,YAAY,CAACO,GAAG,CAAC,YAAY,CAAC,IAAI,IAAK,IACzCP,YAAY,CAACK,GAAG,CAAC,4BAA4B,CAAC,EAC9C;UACA,IAAI,CAACG,iBAAiB,CAAC,CAAC;UACxB,IAAI,CAACC,eAAe,CAAC,CAAC;QACxB;MACF;IAAC;MAAAnC,IAAA;MAAAK,GAAA;MAAAC,KAAA,EAED,SAAA8B,kBAAA,EAA0B;QACxBT,IAAA,CAAAC,eAAA,CApGSpC,uBAAuB,CAAAqC,SAAA,8BAAAC,IAAA;QAqGhC,IAAI,CAACK,eAAe,CAAC,CAAC;MACxB;IAAC;MAAAnC,IAAA;MAAAK,GAAA;MAAAC,KAAA,EAED,SAAA+B,qBAAA,EAA6B;QAC3BV,IAAA,CAAAC,eAAA,CAzGSpC,uBAAuB,CAAAqC,SAAA,iCAAAC,IAAA;MA0GlC;IAAC;MAAA9B,IAAA;MAAAK,GAAA;MAAAC,MAAA;QAAA,OAEoC,EAAE;MAAA;IAAA;MAAAN,IAAA;MAAAK,GAAA;MAAAC,MAAA;QAAA,OAEJgC,CAAc,IAAK;UACpD,MAAMC,KAAK,GAAG,IAAI,CAACC,OAAO,CAACC,qBAAqB,CAAC,CAAC;UAClD,MAAM7D,CAAC,GAAI,CAAC,IAAI0D,CAAC,CAACI,MAAM,CAAC9D,CAAC,GAAG2D,KAAK,CAACI,IAAI,GAAGJ,KAAK,CAACK,KAAK,GAAG,CAAC,CAAC,GAAIL,KAAK,CAACK,KAAK;UACzE,MAAM/D,CAAC,GAAI,CAAC,IAAIyD,CAAC,CAACI,MAAM,CAAC7D,CAAC,GAAG0D,KAAK,CAACM,GAAG,GAAGN,KAAK,CAACO,MAAM,GAAG,CAAC,CAAC,GAAIP,KAAK,CAACO,MAAM;UAE1E,MAAM,GAAG7D,GAAG,CAAC,GAAGN,QAAQ,CAACC,CAAC,EAAEC,CAAC,CAAC;UAE9B,MAAMkE,MAAM,GAAG,CAAC,GAAG,GAAGvE,SAAS,IAAI,CAAC;UAEpC,MAAMwE,KAAK,GAAI,CAAC7D,OAAO,CAACF,GAAG,CAAC,GAAG8D,MAAM,GAAGtE,YAAY,GAAG,GAAG,IAAI,GAAG,GAAIsE,MAAM;UAE3E,OAAOhE,IAAI,CAAC+B,GAAG,CAAC/B,IAAI,CAAC8B,GAAG,CAACmC,KAAK,GAAGxE,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;QACpD,CAAC;MAAA;IAAA;MAAAwB,IAAA;MAAAC,UAAA,GAEAlC,KAAK,CAAC,SAAS,CAAC;MAAAsC,GAAA;MAAAC,KAAA;IAAA;MAAAN,IAAA;MAAAC,UAAA,GAGhBjC,QAAQ,CAAC,oBAAoB,CAAC;MAAAqC,GAAA;MAAAC,KAAA;IAAA;MAAAN,IAAA;MAAAK,GAAA;MAAAC,KAAA,EAG/B,SAAA2C,kBAA0B3C,KAAa,EAAgB;QAAA,IAAA4C,gBAAA,EAAAC,iBAAA;QACrD,IAAI,CAAC,IAAI,CAACC,IAAI,EAAE,OAAO,OAAO;QAC9B,MAAM1C,GAAG,GAAG3B,IAAI,CAAC+B,GAAG,EAAAoC,gBAAA,GAAC,IAAI,CAAC3B,SAAS,cAAA2B,gBAAA,cAAAA,gBAAA,GAAI,IAAI,CAACrC,GAAG,EAAE,IAAI,CAACA,GAAG,CAAC;QAC1D,MAAMF,IAAI,GAAG5B,IAAI,CAAC8B,GAAG,EAAAsC,iBAAA,GAAC,IAAI,CAAC3B,UAAU,cAAA2B,iBAAA,cAAAA,iBAAA,GAAI,IAAI,CAACrC,GAAG,EAAE,IAAI,CAACA,GAAG,CAAC;QAC5D,IAAIJ,GAAG,IAAIJ,KAAK,EAAE;UAChB,OAAO,KAAK;QACd;QACA,IAAIK,IAAI,IAAIL,KAAK,EAAE;UACjB,OAAO,MAAM;QACf;QACA,MAAM+C,WAAW,GAAGtE,IAAI,CAACuE,GAAG,CAAChD,KAAK,GAAGI,GAAG,CAAC;QACzC,MAAM6C,YAAY,GAAGxE,IAAI,CAACuE,GAAG,CAAChD,KAAK,GAAGK,IAAI,CAAC;QAC3C,OAAO0C,WAAW,IAAIE,YAAY,GAAG,KAAK,GAAG,MAAM;MACrD;IAAC;MAAAvD,IAAA;MAAAK,GAAA;MAAAC,KAAA,EAED,SAAAkD,gBAAwBlD,KAAa,EAAE;QACrC,QAAQ,IAAI,CAACgB,aAAa;UACxB,KAAK,MAAM;YACT,IAAI,CAACE,UAAU,GAAGlB,KAAK;YACvB;UACF,KAAK,KAAK;YACR,IAAI,CAACiB,SAAS,GAAGjB,KAAK;YACtB;UACF,KAAK,OAAO;YACV,IAAI,CAAC0B,WAAW,GAAG1B,KAAK;YACxB;QACJ;MACF;IAAC;MAAAN,IAAA;MAAAK,GAAA;MAAAC,KAAA,EAED,SAAAmD,gBAAA,EAA8C;QAC5C,QAAQ,IAAI,CAACnC,aAAa;UACxB,KAAK,MAAM;YACT,OAAO,IAAI,CAACE,UAAU;UACxB,KAAK,KAAK;YACR,OAAO,IAAI,CAACD,SAAS;UACvB,KAAK,OAAO;YACV,OAAO,IAAI,CAACS,WAAW;QAC3B;QACA,OAAO0B,SAAS;MAClB;IAAC;MAAA1D,IAAA;MAAAK,GAAA;MAAAC,KAAA,EAED,SAAA6B,gBAAA,EAA0B;QACxB,IAAI,IAAI,CAACwB,aAAa,IAAI,IAAI,CAACC,SAAS,CAACC,MAAM,KAAK,CAAC,EAAE;UACrD,IAAI,CAACF,aAAa,CAACG,OAAO,CAAEC,WAAW,IAAK;YAC1C,MAAMC,EAAE,GAAG,IAAI7G,OAAO,CAAC4G,WAAW,EAAE;cAClCE,UAAU,EAAE1G;YACd,CAAC,CAAC;YAEF,IAAI,CAACqG,SAAS,CAACM,IAAI,CAACF,EAAE,CAAC;YAEvB,MAAMG,eAAe,GAAG,IAAI,CAACC,0BAA0B,IAAI7F,OAAO;;YAElE;YACAyF,EAAE,CAACK,GAAG,CACJ,IAAIhH,KAAK,CAAC;cACRiH,MAAM,EAAEH,eAAe;cACvBI,QAAQ,EAAE,CAAC;cACXC,IAAI,EAAE;YACR,CAAC,CACH,CAAC;YAED,MAAMC,aAAa,GAAG,IAAIrH,GAAG,CAAC;cAC5BsH,SAAS,EAAExH,aAAa;cACxBoH,MAAM,EAAE,CAACH,eAAe;cACxBQ,SAAS,EAAE;YACb,CAAC,CAAC;YAEFX,EAAE,CAACK,GAAG,CAACI,aAAa,CAAC;YAErBT,EAAE,CAACK,GAAG,CAAC,IAAI/G,GAAG,CAAC;cAAEsH,KAAK,EAAE;YAAY,CAAC,CAAC,CAAC;YAEvCZ,EAAE,CAACa,EAAE,CAAC,OAAO,EAAGvC,CAAC,IAAK;cACpBA,CAAC,CAACwC,QAAQ,CAACC,eAAe,CAAC,CAAC;cAC5BzC,CAAC,CAACwC,QAAQ,CAACE,cAAc,CAAC,CAAC;cAC3B,IAAI,IAAI,CAACC,QAAQ,IAAI,IAAI,CAACC,QAAQ,EAAE;cACpC,MAAMC,UAAU,GAAG,IAAI,CAACC,uBAAuB,CAAC9C,CAAC,CAAC;cAClD,MAAM+C,GAAG,GAAG,IAAI,CAACtE,kBAAkB,CAACoE,UAAU,CAAC;cAC/C,IAAI,CAAC7D,aAAa,GAAG,IAAI,CAAC2B,iBAAiB,CAACoC,GAAG,CAAC;cAChD,MAAMC,OAAO,GAAG,IAAI,CAACnE,aAAa,CAACkE,GAAG,CAAC;cACvC,IAAI,CAAC7B,eAAe,CAAC8B,OAAO,CAAC;cAC7B,MAAMC,OAAO,GAAG,IAAI,CAACvE,aAAa,CAACsE,OAAO,CAAC;cAC3C,IAAI,IAAI,CAAChE,aAAa,EAAE;gBACtBlD,SAAS,CAAC,IAAI,EAAG,GAAE,IAAI,CAACkD,aAAc,WAAU,EAAE;kBAChDhB,KAAK,EAAEiF;gBACT,CAAC,CAAC;cACJ;cACAd,aAAa,CAACe,GAAG,CAAC;gBAAElB,MAAM,EAAE;cAAK,CAAC,CAAC;YACrC,CAAC,CAAC;YAEFN,EAAE,CAACa,EAAE,CAAC,SAAS,EAAGvC,CAAC,IAAK;cACtBA,CAAC,CAACwC,QAAQ,CAACC,eAAe,CAAC,CAAC;cAC5BzC,CAAC,CAACwC,QAAQ,CAACE,cAAc,CAAC,CAAC;cAC3B,MAAMG,UAAU,GAAG,IAAI,CAACC,uBAAuB,CAAC9C,CAAC,CAAC;cAClD,MAAM+C,GAAG,GAAG,IAAI,CAACtE,kBAAkB,CAACoE,UAAU,CAAC;cAC/C,MAAMG,OAAO,GAAG,IAAI,CAACnE,aAAa,CAACkE,GAAG,CAAC;cACvC,MAAME,OAAO,GAAG,IAAI,CAACvE,aAAa,CAACsE,OAAO,CAAC;cAC3C,IAAI,CAAC9B,eAAe,CAAC+B,OAAO,CAAC;cAC7B,IAAI,IAAI,CAACjE,aAAa,EAAE;gBACtBlD,SAAS,CAAC,IAAI,EAAG,GAAE,IAAI,CAACkD,aAAc,WAAU,EAAE;kBAChDhB,KAAK,EAAEoD;gBACT,CAAC,CAAC;gBACFtF,SAAS,CAAC,IAAI,EAAG,GAAE,IAAI,CAACkD,aAAc,UAAS,EAAE;kBAC/ChB,KAAK,EAAEiF;gBACT,CAAC,CAAC;cACJ;cACA,IAAI,CAACjE,aAAa,GAAGoC,SAAS;YAChC,CAAC,CAAC;YAEFM,EAAE,CAACa,EAAE,CAAC,KAAK,EAAGvC,CAAC,IAAK;cAClBA,CAAC,CAACwC,QAAQ,CAACC,eAAe,CAAC,CAAC;cAC5BzC,CAAC,CAACwC,QAAQ,CAACE,cAAc,CAAC,CAAC;YAC7B,CAAC,CAAC;YACFhB,EAAE,CAACa,EAAE,CAAC,UAAU,EAAGvC,CAAC,IAAK;cAAA,IAAAmD,gBAAA;cACvB,IAAI,IAAI,CAACR,QAAQ,IAAI,IAAI,CAACC,QAAQ,EAAE;cACpC,MAAMC,UAAU,GAAG,IAAI,CAACC,uBAAuB,CAAC9C,CAAC,CAAC;cAClD,MAAM+C,GAAG,GAAG,IAAI,CAACtE,kBAAkB,CAACoE,UAAU,CAAC;cAC/C,IAAI,CAAC7D,aAAa,GAAG,IAAI,CAAC2B,iBAAiB,CAACoC,GAAG,CAAC;cAChD,IAAI,CAACK,WAAW,GAAG,IAAI,CAACpE,aAAa;cACrC,CAAAmE,gBAAA,OAAI,CAACE,UAAU,cAAAF,gBAAA,gBAAAA,gBAAA,GAAfA,gBAAA,CAAiBG,cAAc,CAAC,SAAS,CAAC,cAAAH,gBAAA,eAA1CA,gBAAA,CAA4CI,KAAK,CAAC,CAAC;YACrD,CAAC,CAAC;YACF7B,EAAE,CAACa,EAAE,CAAC,WAAW,EAAE,MAAM;cACvB,IAAI,IAAI,CAACI,QAAQ,IAAI,IAAI,CAACC,QAAQ,EAAE;cACpC,IAAI,CAAC5D,aAAa,GAAGoC,SAAS;cAC9B,IAAIS,eAAe,EAAE;gBACnBM,aAAa,CAACe,GAAG,CAAC;kBAAElB,MAAM,EAAE;gBAAM,CAAC,CAAC;cACtC;YACF,CAAC,CAAC;YACFN,EAAE,CAACa,EAAE,CAAC,SAAS,EAAGvC,CAAC,IAAK;cACtB,IAAI,IAAI,CAAC2C,QAAQ,IAAI,IAAI,CAACC,QAAQ,EAAE;cACpC,MAAMC,UAAU,GAAG,IAAI,CAACC,uBAAuB,CAAC9C,CAAC,CAAC;cAClD,MAAM+C,GAAG,GAAG,IAAI,CAACtE,kBAAkB,CAACoE,UAAU,CAAC;cAC/C,MAAMG,OAAO,GAAG,IAAI,CAACnE,aAAa,CAACkE,GAAG,CAAC;cACvC,IAAI,CAAC7B,eAAe,CAAC8B,OAAO,CAAC;cAC7B,MAAMC,OAAO,GAAG,IAAI,CAACvE,aAAa,CAACsE,OAAO,CAAC;cAC3C,IAAI,IAAI,CAAChE,aAAa,EAAE;gBACtBlD,SAAS,CAAC,IAAI,EAAG,GAAE,IAAI,CAACkD,aAAc,WAAU,EAAE;kBAChDhB,KAAK,EAAEiF;gBACT,CAAC,CAAC;cACJ;YACF,CAAC,CAAC;YACFvB,EAAE,CAACa,EAAE,CAAC,QAAQ,EAAGvC,CAAC,IAAK;cACrB,IAAI,IAAI,CAAC2C,QAAQ,IAAI,IAAI,CAACC,QAAQ,EAAE;cACpC,MAAMC,UAAU,GAAG,IAAI,CAACC,uBAAuB,CAAC9C,CAAC,CAAC;cAClD,MAAM+C,GAAG,GAAG,IAAI,CAACtE,kBAAkB,CAACoE,UAAU,CAAC;cAC/C,MAAMG,OAAO,GAAG,IAAI,CAACnE,aAAa,CAACkE,GAAG,CAAC;cACvC,MAAME,OAAO,GAAG,IAAI,CAACvE,aAAa,CAACsE,OAAO,CAAC;cAC3C,IAAI,CAAC9B,eAAe,CAAC+B,OAAO,CAAC;cAC7B,IAAI,IAAI,CAACjE,aAAa,EAAE;gBACtBlD,SAAS,CAAC,IAAI,EAAG,GAAE,IAAI,CAACkD,aAAc,WAAU,EAAE;kBAChDhB,KAAK,EAAEoD;gBACT,CAAC,CAAC;gBACFtF,SAAS,CAAC,IAAI,EAAG,GAAE,IAAI,CAACkD,aAAc,UAAS,EAAE;kBAC/ChB,KAAK,EAAEiF;gBACT,CAAC,CAAC;cACJ;cACA,IAAI,CAACjE,aAAa,GAAGoC,SAAS;cAC9B,IAAIS,eAAe,EAAE;gBACnBM,aAAa,CAACe,GAAG,CAAC;kBAAElB,MAAM,EAAE;gBAAM,CAAC,CAAC;cACtC;YACF,CAAC,CAAC;YACFN,EAAE,CAACa,EAAE,CAAC,WAAW,EAAGvC,CAAC,IAAK;cAAA,IAAAwD,iBAAA;cACxB,IAAI,IAAI,CAACb,QAAQ,IAAI,IAAI,CAACC,QAAQ,EAAE;cACpC,MAAMC,UAAU,GAAG,IAAI,CAACC,uBAAuB,CAAC9C,CAAC,CAAC;cAClD,MAAM+C,GAAG,GAAG,IAAI,CAACtE,kBAAkB,CAACoE,UAAU,CAAC;cAC/C,IAAI,CAAC7D,aAAa,GAAG,IAAI,CAAC2B,iBAAiB,CAACoC,GAAG,CAAC;cAChD,MAAMC,OAAO,GAAG,IAAI,CAACnE,aAAa,CAACkE,GAAG,CAAC;cACvC,MAAME,OAAO,GAAG,IAAI,CAACvE,aAAa,CAACsE,OAAO,CAAC;cAC3C,IAAI,CAAC9B,eAAe,CAAC+B,OAAO,CAAC;cAC7B,IAAI,IAAI,CAACjE,aAAa,EAAE;gBACtBlD,SAAS,CAAC,IAAI,EAAG,GAAE,IAAI,CAACkD,aAAc,WAAU,EAAE;kBAChDhB,KAAK,EAAEoD;gBACT,CAAC,CAAC;gBACFtF,SAAS,CAAC,IAAI,EAAG,GAAE,IAAI,CAACkD,aAAc,UAAS,EAAE;kBAC/ChB,KAAK,EAAEiF;gBACT,CAAC,CAAC;cACJ;cACA,IAAI,CAACG,WAAW,GAAG,IAAI,CAACpE,aAAa;cACrC,CAAAwE,iBAAA,OAAI,CAACH,UAAU,cAAAG,iBAAA,gBAAAA,iBAAA,GAAfA,iBAAA,CAAiBF,cAAc,CAAC,SAAS,CAAC,cAAAE,iBAAA,eAA1CA,iBAAA,CAA4CD,KAAK,CAAC,CAAC;cACnD,IAAI,CAACvE,aAAa,GAAGoC,SAAS;cAC9B,IAAIS,eAAe,EAAE;gBACnBM,aAAa,CAACe,GAAG,CAAC;kBAAElB,MAAM,EAAE;gBAAM,CAAC,CAAC;cACtC;YACF,CAAC,CAAC;UACJ,CAAC,CAAC;QACJ;MACF;IAAC;MAAAtE,IAAA;MAAAK,GAAA;MAAAC,KAAA,EAED,SAAAyF,gBAAA,EAA8B;QAC5B,OAAOhH,IAAI,CAAC+B,GAAG,CAAC,IAAI,CAACI,IAAI,EAAE,CAAC,IAAI,CAACJ,GAAG,GAAG,IAAI,CAACD,GAAG,IAAI,EAAE,CAAC;MACxD;IAAC;MAAAb,IAAA;MAAAK,GAAA;MAAAC,KAAA,EAED,SAAA0F,eAAuB1D,CAAgB,EAAE;QAAA,IAAA2D,iBAAA;QACvC,IAAI,CAAC3G,cAAc,CAACyC,GAAG,CAACO,CAAC,CAAC4D,IAAI,CAAC,EAAE;QACjC5D,CAAC,CAAC0C,cAAc,CAAC,CAAC;QAClB,IAAI,IAAI,CAACU,WAAW,EAAE;UAAA,IAAAS,iBAAA;UACpB,CAAAA,iBAAA,OAAI,CAACR,UAAU,cAAAQ,iBAAA,gBAAAA,iBAAA,GAAfA,iBAAA,CAAiBP,cAAc,CAAC,IAAI,CAACF,WAAW,CAAC,cAAAS,iBAAA,eAAjDA,iBAAA,CAAmDN,KAAK,CAAC,CAAC;QAC5D;QACA,IAAI,CAACvE,aAAa,IAAA2E,iBAAA,GAChB,IAAI,CAACP,WAAW,cAAAO,iBAAA,cAAAA,iBAAA,GAAM3D,CAAC,CAAC8D,aAAa,CAASC,EAAmB;QACnE,IAAI,CAACX,WAAW,GAAGhC,SAAS;QAE5B,MAAMpD,KAAK,GAAG,IAAI,CAACmD,eAAe,CAAC,CAAC;QAEpC,QAAQnB,CAAC,CAAC4D,IAAI;UACZ,KAAK,YAAY;UACjB,KAAK,SAAS;YACZ,IAAI,CAAC1C,eAAe,CAClB,IAAI,CAACrC,aAAa,CAAC,CAACb,KAAK,aAALA,KAAK,cAALA,KAAK,GAAI,IAAI,CAACO,GAAG,IAAI,IAAI,CAACK,IAAI,CACpD,CAAC;YACD;UACF,KAAK,WAAW;UAChB,KAAK,WAAW;YACd,IAAI,CAACsC,eAAe,CAClB,IAAI,CAACrC,aAAa,CAAC,CAACb,KAAK,aAALA,KAAK,cAALA,KAAK,GAAI,IAAI,CAACO,GAAG,IAAI,IAAI,CAACK,IAAI,CACpD,CAAC;YACD;UACF,KAAK,QAAQ;YACX,IAAI,CAACsC,eAAe,CAClB,IAAI,CAACxC,aAAa,CAChB,IAAI,CAACG,aAAa,CAAC,CAACb,KAAK,aAALA,KAAK,cAALA,KAAK,GAAI,IAAI,CAACO,GAAG,IAAI,IAAI,CAACkF,eAAe,CAC/D,CACF,CAAC;YACD;UACF,KAAK,UAAU;YACb,IAAI,CAACvC,eAAe,CAClB,IAAI,CAACxC,aAAa,CAChB,IAAI,CAACG,aAAa,CAAC,CAACb,KAAK,aAALA,KAAK,cAALA,KAAK,GAAI,IAAI,CAACO,GAAG,IAAI,IAAI,CAACkF,eAAe,CAC/D,CACF,CAAC;YACD;UACF,KAAK,MAAM;YACT,IAAI,CAACvC,eAAe,CAAC,IAAI,CAACrC,aAAa,CAAC,IAAI,CAACN,GAAG,CAAC,CAAC;YAClD;UACF,KAAK,KAAK;YACR,IAAI,CAAC2C,eAAe,CAAC,IAAI,CAACrC,aAAa,CAAC,IAAI,CAACL,GAAG,CAAC,CAAC;YAClD;QACJ;QACA1C,SAAS,CAAC,IAAI,EAAG,GAAE,IAAI,CAACkD,aAAc,WAAU,EAAE;UAChDhB,KAAK,EAAE,IAAI,CAACmD,eAAe,CAAC;QAC9B,CAAC,CAAC;QACF,IAAI,CAACnC,aAAa,GAAGoC,SAAS;MAChC;IAAC;MAAA1D,IAAA;MAAAK,GAAA;MAAAC,KAAA,EAED,SAAAgG,aAAahE,CAAgB,EAAE;QAC7B,IAAI,CAAChD,cAAc,CAACyC,GAAG,CAACO,CAAC,CAAC4D,IAAI,CAAC,EAAE;QACjC,IAAI,CAAC5E,aAAa,GAAIgB,CAAC,CAAC8D,aAAa,CAASC,EAAkB;QAChE/D,CAAC,CAAC0C,cAAc,CAAC,CAAC;QAClB5G,SAAS,CAAC,IAAI,EAAG,GAAE,IAAI,CAACkD,aAAc,WAAU,EAAE;UAChDhB,KAAK,EAAEoD;QACT,CAAC,CAAC;QACFtF,SAAS,CAAC,IAAI,EAAG,GAAE,IAAI,CAACkD,aAAc,UAAS,EAAE;UAC/ChB,KAAK,EAAE,IAAI,CAACmD,eAAe,CAAC;QAC9B,CAAC,CAAC;QACF,IAAI,CAACnC,aAAa,GAAGoC,SAAS;MAChC;IAAC;MAAA1D,IAAA;MAAAK,GAAA;MAAAC,KAAA,EAED,SAAA4B,kBAAA,EAA4B;QAC1B,IAAI,IAAI,CAAC0B,SAAS,CAACC,MAAM,GAAG,CAAC,EAAE;UAC7B,IAAI,CAACD,SAAS,CAACE,OAAO,CAAEyC,OAAO,IAAKA,OAAO,CAACC,OAAO,CAAC,CAAC,CAAC;UACtD,IAAI,CAAC5C,SAAS,GAAG,EAAE;QACrB;MACF;IAAC;MAAA5D,IAAA;MAAAK,GAAA;MAAAC,KAAA,EAED,SAAAmG,qBAA6BnG,KAAa,EAAoB;QAC5D,OAAO,IAAI,CAACoG,cAAc,CAACpG,KAAK,EAAEA,KAAK,CAAC;MAC1C;IAAC;MAAAN,IAAA;MAAAK,GAAA;MAAAC,KAAA,EAED,SAAAoG,eAAuBC,IAAY,EAAEC,EAAU,EAAoB;QACjE,MAAMC,KAAK,GAAG,IAAI,CAACjG,kBAAkB,CAAC+F,IAAI,CAAC;QAC3C,MAAMG,GAAG,GAAG,IAAI,CAAClG,kBAAkB,CAACgG,EAAE,CAAC;QAEvC,MAAMG,KAAK,GAAIrI,MAAM,GAAG,CAAC,GAAGK,IAAI,CAACM,EAAE,GAAGb,SAAS,GAAI,GAAG;QACtD,MAAMwI,GAAG,GAAGjI,IAAI,CAAC+B,GAAG,CAAC,CAACgG,GAAG,GAAGD,KAAK,IAAIE,KAAK,EAAE,CAAC,CAAC;QAC9C,MAAME,SAAS,GAAGJ,KAAK,GAAGE,KAAK,GAAG,GAAG;QAErC,MAAMG,eAAe,GAAI,GAAEF,GAAI,IAAGD,KAAK,GAAGC,GAAI,EAAC;QAC/C,MAAMG,gBAAgB,GAAI,IAAGF,SAAU,EAAC;QACxC,OAAO,CAACC,eAAe,EAAEC,gBAAgB,CAAC;MAC5C;IAAC;MAAAnH,IAAA;MAAAK,GAAA;MAAAC,KAAA,EAED,SAAA8G,UACEf,EAAU,EACV/F,KAAyB,EACzB+G,IAA+B,EAC/B;QAAA,IAAAC,aAAA,EAAAC,cAAA;QACA,IAAI,IAAI,CAACtC,QAAQ,EAAE,OAAOtH,OAAO;QAEjC,MAAM6J,IAAI,GAAGlJ,MAAM,CAAC;UAClBM,CAAC,EAAE,CAAC;UACJC,CAAC,EAAE,CAAC;UACJgI,KAAK,EAAE,CAAC;UACRC,GAAG,EAAEtI,SAAS;UACdM,CAAC,EAAEJ;QACL,CAAC,CAAC;QAEF,MAAMsE,KAAK,GACT1C,KAAK,IAAI,IAAI,GAAG,IAAI,CAACM,kBAAkB,CAACN,KAAK,CAAC,GAAG9B,SAAS,GAAGkF,SAAS;QAExE,MAAM+D,KAAK,GAAGJ,IAAI,KAAK,KAAK,GAAG,IAAI,CAACvG,GAAG,GAAG,IAAI,CAACD,GAAG;QAElD,MAAM6G,OAAO,IAAAJ,aAAA,GAAG,IAAI,CAACI,OAAO,cAAAJ,aAAA,cAAAA,aAAA,GAAIG,KAAK;QACrC,MAAME,MAAM,GAAGrH,KAAK,aAALA,KAAK,cAALA,KAAK,GAAImH,KAAK;QAE7B,MAAMG,UAAU,GACdP,IAAI,KAAK,KAAK,GACVM,MAAM,IAAID,OAAO,GACjBL,IAAI,KAAK,OAAO,GACdK,OAAO,IAAIC,MAAM,GACjB,KAAK;QAEb,MAAME,UAAU,GAAGvH,KAAK,IAAI,IAAI;QAEhC,MAAMwH,SAAS,GAAGD,UAAU,GACxBD,UAAU,GACRP,IAAI,KAAK,KAAK,GACZ,IAAI,CAACX,cAAc,CAACiB,MAAM,EAAED,OAAO,CAAC,GACpC,IAAI,CAAChB,cAAc,CAACgB,OAAO,EAAEC,MAAM,CAAC,GACtC,IAAI,CAAClB,oBAAoB,CAACkB,MAAM,CAAC,GACnCjE,SAAS;QAEb,MAAMqE,UAAU,GACdV,IAAI,KAAK,MAAM,GACX,IAAI,CAACX,cAAc,CAAC,IAAI,CAAC7F,GAAG,EAAE,IAAI,CAACC,GAAG,CAAC,GACvCuG,IAAI,KAAK,KAAK,GACZ,IAAI,CAACX,cAAc,CAACiB,MAAM,EAAEF,KAAK,CAAC,GAClC,IAAI,CAACf,cAAc,CAACe,KAAK,EAAEE,MAAM,CAAC;QAE1C,MAAMK,YAAY,GAAGH,UAAU,GAC3B,IAAI,CAACpB,oBAAoB,CAACkB,MAAM,CAAC,GACjCjE,SAAS;QAEb,MAAMuE,aAAa,GACjB,IAAI,CAACP,OAAO,IAAI,IAAI,IACpB,IAAI,CAACA,OAAO,IAAI,IAAI,CAAC5G,GAAG,IACxB,IAAI,CAAC4G,OAAO,IAAI,IAAI,CAAC7G,GAAG,KACvB+G,UAAU,IAAI,IAAI,CAACP,IAAI,KAAK,MAAM,CAAC,GAChC,IAAI,CAACZ,oBAAoB,CAAC,IAAI,CAACiB,OAAO,CAAC,GACvChE,SAAS;QAEf,MAAMwE,kBAAkB,GACrB,IAAI,CAAC9D,0BAA0B,IAAI7F,OAAO,IAAK,KAAK;QAEvD,OAAOX,GAAI;AACf,iBAAiBM,QAAQ,CAAC;UAAEiK,QAAQ,EAAEhI,OAAO,CAAC,IAAI,CAACgI,QAAQ;QAAE,CAAC,CAAE;AAChE;AACA;AACA,cAAcX,IAAK;AACnB,6BAA6BO,UAAU,CAAC,CAAC,CAAE;AAC3C,8BAA8BA,UAAU,CAAC,CAAC,CAAE;AAC5C;AACA;AACA,mCAAmC7J,QAAQ,CAAC;UAAE,CAACmI,EAAE,GAAG;QAAK,CAAC,CAAE;AAC5D,cAAcmB,IAAK;AACnB,6BAA6BO,UAAU,CAAC,CAAC,CAAE;AAC3C,8BAA8BA,UAAU,CAAC,CAAC,CAAE;AAC5C;AACA,UACUD,SAAS,GACLlK,GAAI;AAClB;AACA,sBAAsByI,EAAG;AACzB,oBAAoBmB,IAAK;AACzB,wCAAwCtJ,QAAQ,CAAC;UAAE,CAACmI,EAAE,GAAG;QAAK,CAAC,CAAE;AACjE,mCAAmCyB,SAAS,CAAC,CAAC,CAAE;AAChD,oCAAoCA,SAAS,CAAC,CAAC,CAAE;AACjD;AACA;AACA,gCAAgC,IAAI,CAACjH,GAAI;AACzC,gCAAgC,IAAI,CAACC,GAAI;AACzC,gCACkB,IAAI,CAACkB,WAAW,IAAI,IAAI,GACpB,IAAI,CAAChB,aAAa,CAAC,IAAI,CAACgB,WAAW,CAAC,GACpC0B,SACL;AACjB,gCAAgC,IAAI,CAACuB,QAAS;AAC9C,gCAAgC,IAAI,CAACC,QAAS;AAC9C,6BAA6B/G,SAAS,EAAAoJ,cAAA,GAAC,IAAI,CAACa,QAAQ,cAAAb,cAAA,cAAAA,cAAA,GAAI,IAAI,CAACc,KAAK,CAAE;AACpE,2BAA2B,IAAI,CAACrC,cAAe;AAC/C,yBAAyB,IAAI,CAACM,YAAa;AAC3C;AACA,aAAa,GACC3I,OACL;AACT,UACUsK,aAAa,GACTrK,GAAI;AAClB;AACA;AACA,oBAAoB4J,IAAK;AACzB,mCAAmCS,aAAa,CAAC,CAAC,CAAE;AACpD,oCAAoCA,aAAa,CAAC,CAAC,CAAE;AACrD;AACA,WAAW,GACGtK,OACL;AACT,UACUqK,YAAY,GACRpK,GAAI;AAClB;AACA;AACA,oCAAoCoF,KAAM;AAC1C,oCAAoCkF,kBAAmB;AACvD,qBAAqBxJ,MAAO;AAC5B;AACA;AACA;AACA,oBAAoB8I,IAAK;AACzB,mCAAmCQ,YAAY,CAAC,CAAC,CAAE;AACnD,oCAAoCA,YAAY,CAAC,CAAC,CAAE;AACpD;AACA;AACA,uCAAuC9J,QAAQ,CAAC;UAAE,CAACmI,EAAE,GAAG;QAAK,CAAC,CAAE;AAChE,oBAAoBmB,IAAK;AACzB,mCAAmCQ,YAAY,CAAC,CAAC,CAAE;AACnD,oCAAoCA,YAAY,CAAC,CAAC,CAAE;AACpD;AACA;AACA;AACA,oBAAoBR,IAAK;AACzB,mCAAmCQ,YAAY,CAAC,CAAC,CAAE;AACnD,oCAAoCA,YAAY,CAAC,CAAC,CAAE;AACpD;AACA,WAAW,GACGrK,OACL;AACT;AACA,KAAK;MACH;IAAC;MAAAqC,IAAA;MAAAK,GAAA;MAAAC,KAAA,EAED,SAAAgI,OAAA,EAAmC;QACjC,MAAMC,SAAS,GAAGjK,MAAM,CAAC;UACvBM,CAAC,EAAE,CAAC;UACJC,CAAC,EAAE,CAAC;UACJgI,KAAK,EAAE,CAAC;UACRC,GAAG,EAAEtI,SAAS;UACdM,CAAC,EAAEJ;QACL,CAAC,CAAC;QAEF,MAAM8J,QAAQ,GAAG,IAAI,CAACpF,IAAI,GAAG,IAAI,CAAC7B,SAAS,GAAG,IAAI,CAACS,WAAW;QAC9D,MAAMyG,SAAS,GAAG,IAAI,CAACjH,UAAU;QACjC,MAAMkG,OAAO,GAAG,IAAI,CAACA,OAAO;QAE5B,MAAMgB,aAAa,GAAGhB,OAAO,GACzB,IAAI,CAACjB,oBAAoB,CAACiB,OAAO,CAAC,GAClChE,SAAS;QAEb,MAAMwE,kBAAkB,GACrB,IAAI,CAAC9D,0BAA0B,IAAI7F,OAAO,IAAK,KAAK;QAEvD,OAAOb,IAAK;AAChB;AACA;AACA;AACA;AACA,gBAAgBQ,QAAQ,CAAC;UACfyK,OAAO,EAAExI,OAAO,CAAC,IAAI,CAACmB,aAAa;QACrC,CAAC,CAAE;AACX,mBAAmB,IAAI,CAAC0E,cAAe;AACvC,mBAAmB,IAAI,CAACN,WAAW,GAAG,GAAG,GAAG,IAAK;AACjD;AACA;AACA;AACA,iDAAiDjH,YAAa;AAC9D;AACA,oBAAoB8J,SAAU,sBAAqB,CAACL,kBAAmB;AACvE,uCAAuCK,SAAU;AACjD,YAAYG,aAAa,GACX9K,GAAI;AAClB;AACA;AACA,wBAAwB2K,SAAU;AAClC,uCAAuCG,aAAa,CAAC,CAAC,CAAE;AACxD,wCAAwCA,aAAa,CAAC,CAAC,CAAE;AACzD;AACA,iBAAiB,GACH/K,OAAQ;AACtB,YAAY6K,QAAQ,IAAI,IAAI,IAAI,IAAI,CAACnB,IAAI,KAAK,MAAM,GACtC,IAAI,CAACD,SAAS,CACZ,IAAI,CAAChE,IAAI,GAAG,KAAK,GAAG,OAAO,EAC3BoF,QAAQ,EACP,CAAC,IAAI,CAACpF,IAAI,IAAI,IAAI,CAACiE,IAAI,IAAK,OAC/B,CAAC,GACD1J,OAAQ;AACtB,YAAY,IAAI,CAACyF,IAAI,IAAIqF,SAAS,IAAI,IAAI,GAC5B,IAAI,CAACrB,SAAS,CAAC,MAAM,EAAEqB,SAAS,EAAE,KAAK,CAAC,GACxC9K,OAAQ;AACtB;AACA;AACA,KAAK;MACH;IAAC;MAAAqC,IAAA;MAAA4I,MAAA;MAAAvI,GAAA;MAAAC,KAAA,EAED,SAAAuI,OAAA,EAAoC;QAClC,OAAOpL,GAAI;AACfzwB0CD,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}