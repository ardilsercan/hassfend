{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport \"@material/mwc-linear-progress/mwc-linear-progress\";\nconst mdiChevronDown = \"M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z\";\nconst mdiMonitor = \"M21,16H3V4H21M21,2H3C1.89,2 1,2.89 1,4V16A2,2 0 0,0 3,18H10V20H8V22H16V20H14V18H21A2,2 0 0,0 23,16V4C23,2.89 22.1,2 21,2Z\";\nconst mdiPause = \"M14,19H18V5H14M6,19H10V5H6V19Z\";\nconst mdiPlay = \"M8,5.14V19.14L19,12.14L8,5.14Z\";\nconst mdiPlayPause = \"M3,5V19L11,12M13,19H16V5H13M18,5V19H21V5\";\nconst mdiStop = \"M18,18H6V6H18V18Z\";\nconst mdiVolumeHigh = \"M14,3.23V5.29C16.89,6.15 19,8.83 19,12C19,15.17 16.89,17.84 14,18.7V20.77C18,19.86 21,16.28 21,12C21,7.72 18,4.14 14,3.23M16.5,12C16.5,10.23 15.5,8.71 14,7.97V16C15.5,15.29 16.5,13.76 16.5,12M3,9V15H7L12,20V4L7,9H3Z\";\nimport { LitElement, css, html, nothing } from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport { until } from \"lit/directives/until\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { computeDomain } from \"../../common/entity/compute_domain\";\nimport { computeStateDomain } from \"../../common/entity/compute_state_domain\";\nimport { computeStateName } from \"../../common/entity/compute_state_name\";\nimport { supportsFeature } from \"../../common/entity/supports-feature\";\nimport { debounce } from \"../../common/util/debounce\";\nimport \"../../components/ha-button\";\nimport \"../../components/ha-button-menu\";\nimport \"../../components/ha-circular-progress\";\nimport \"../../components/ha-domain-icon\";\nimport \"../../components/ha-icon-button\";\nimport \"../../components/ha-list-item\";\nimport \"../../components/ha-state-icon\";\nimport \"../../components/ha-svg-icon\";\nimport { UNAVAILABLE } from \"../../data/entity\";\nimport { BROWSER_PLAYER, MediaPlayerEntityFeature, cleanupMediaTitle, computeMediaControls, computeMediaDescription, formatMediaTime, getCurrentProgress, handleMediaControlClick, setMediaPlayerVolume } from \"../../data/media-player\";\nimport { showAlertDialog } from \"../../dialogs/generic/show-dialog-box\";\nimport { SubscribeMixin } from \"../../mixins/subscribe-mixin\";\nimport \"../lovelace/components/hui-marquee\";\nimport { BrowserMediaPlayer, ERR_UNSUPPORTED_MEDIA } from \"./browser-media-player\";\nexport let BarMediaPlayer = _decorate([customElement(\"ha-bar-media-player\")], function (_initialize, _SubscribeMixin) {\n  class BarMediaPlayer extends _SubscribeMixin {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: BarMediaPlayer,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"entityId\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        reflect: true\n      })],\n      key: \"narrow\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [query(\"mwc-linear-progress\")],\n      key: \"_progressBar\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [query(\"#CurrentProgress\")],\n      key: \"_currentProgress\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_marqueeActive\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_newMediaExpected\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_browserPlayer\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_progressInterval\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_browserPlayerVolume\",\n      value() {\n        return 0.8;\n      }\n    }, {\n      kind: \"method\",\n      key: \"connectedCallback\",\n      value: function connectedCallback() {\n        _get(_getPrototypeOf(BarMediaPlayer.prototype), \"connectedCallback\", this).call(this);\n        const stateObj = this._stateObj;\n        if (!stateObj) {\n          return;\n        }\n        if (!this._progressInterval && this._showProgressBar && stateObj.state === \"playing\") {\n          this._progressInterval = window.setInterval(() => this._updateProgressBar(), 1000);\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"disconnectedCallback\",\n      value: function disconnectedCallback() {\n        _get(_getPrototypeOf(BarMediaPlayer.prototype), \"disconnectedCallback\", this).call(this);\n        if (this._progressInterval) {\n          clearInterval(this._progressInterval);\n          this._progressInterval = undefined;\n        }\n        this._tearDownBrowserPlayer();\n      }\n    }, {\n      kind: \"method\",\n      key: \"showResolvingNewMediaPicked\",\n      value: function showResolvingNewMediaPicked() {\n        this._tearDownBrowserPlayer();\n        this._newMediaExpected = true;\n        // Sometimes the state does not update when playing media, like with TTS, so we wait max 2 secs and then stop waiting\n        this._debouncedResetMediaExpected();\n      }\n    }, {\n      kind: \"field\",\n      key: \"_debouncedResetMediaExpected\",\n      value() {\n        return debounce(() => {\n          this._newMediaExpected = false;\n        }, 2000);\n      }\n    }, {\n      kind: \"method\",\n      key: \"hideResolvingNewMediaPicked\",\n      value: function hideResolvingNewMediaPicked() {\n        this._newMediaExpected = false;\n      }\n    }, {\n      kind: \"method\",\n      key: \"playItem\",\n      value: function playItem(item, resolved) {\n        if (this.entityId !== BROWSER_PLAYER) {\n          throw Error(\"Only browser supported\");\n        }\n        this._tearDownBrowserPlayer();\n        try {\n          this._browserPlayer = new BrowserMediaPlayer(this.hass, item, resolved, this._browserPlayerVolume, () => this.requestUpdate(\"_browserPlayer\"));\n        } catch (err) {\n          if (err.message === ERR_UNSUPPORTED_MEDIA) {\n            showAlertDialog(this, {\n              text: this.hass.localize(\"ui.components.media-browser.media_not_supported\")\n            });\n          } else {\n            throw err;\n          }\n        }\n        this._newMediaExpected = false;\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var _this$_browserPlayer;\n        if (this._newMediaExpected) {\n          return html`\n        <div class=\"controls-progress buffering\">\n          ${until(\n          // Only show spinner after 500ms\n          new Promise(resolve => {\n            setTimeout(resolve, 500);\n          }).then(() => html`<ha-circular-progress\n                  indeterminate\n                ></ha-circular-progress>`))}\n        </div>\n      `;\n        }\n        const isBrowser = this.entityId === BROWSER_PLAYER;\n        const stateObj = this._stateObj;\n        if (!stateObj) {\n          return this._renderChoosePlayer(stateObj);\n        }\n        const controls = !this.narrow ? computeMediaControls(stateObj, true) : stateObj.state === \"playing\" && (supportsFeature(stateObj, MediaPlayerEntityFeature.PAUSE) || supportsFeature(stateObj, MediaPlayerEntityFeature.STOP)) || (stateObj.state === \"paused\" || stateObj.state === \"idle\") && supportsFeature(stateObj, MediaPlayerEntityFeature.PLAY) || stateObj.state === \"on\" && (supportsFeature(stateObj, MediaPlayerEntityFeature.PLAY) || supportsFeature(stateObj, MediaPlayerEntityFeature.PAUSE)) ? [{\n          icon: stateObj.state === \"on\" ? mdiPlayPause : stateObj.state !== \"playing\" ? mdiPlay : supportsFeature(stateObj, MediaPlayerEntityFeature.PAUSE) ? mdiPause : mdiStop,\n          action: stateObj.state !== \"playing\" ? \"media_play\" : supportsFeature(stateObj, MediaPlayerEntityFeature.PAUSE) ? \"media_pause\" : \"media_stop\"\n        }] : undefined;\n        const mediaDescription = computeMediaDescription(stateObj);\n        const mediaDuration = formatMediaTime(stateObj.attributes.media_duration);\n        const mediaTitleClean = cleanupMediaTitle(stateObj.attributes.media_title || stateObj.attributes.media_content_id);\n        const mediaArt = stateObj.attributes.entity_picture_local || stateObj.attributes.entity_picture;\n        return html`\n      <div\n        class=${classMap({\n          info: true,\n          pointer: !isBrowser,\n          app: ((_this$_browserPlayer = this._browserPlayer) === null || _this$_browserPlayer === void 0 ? void 0 : _this$_browserPlayer.item.media_class) === \"app\"\n        })}\n        @click=${this._openMoreInfo}\n      >\n        ${mediaArt ? html`<img alt=\"\" src=${this.hass.hassUrl(mediaArt)} />` : \"\"}\n        <div class=\"media-info\">\n          <hui-marquee\n            .text=${mediaTitleClean || mediaDescription || (stateObj.state !== \"playing\" && stateObj.state !== \"on\" ? this.hass.localize(`ui.card.media_player.nothing_playing`) : \"\")}\n            .active=${this._marqueeActive}\n            @mouseover=${this._marqueeMouseOver}\n            @mouseleave=${this._marqueeMouseLeave}\n          ></hui-marquee>\n          <span class=\"secondary\">\n            ${mediaTitleClean ? mediaDescription : \"\"}\n          </span>\n        </div>\n      </div>\n      <div\n        class=\"controls-progress ${stateObj.state === \"buffering\" ? \"buffering\" : \"\"}\"\n      >\n        ${stateObj.state === \"buffering\" ? html`<ha-circular-progress indeterminate></ha-circular-progress> ` : html`\n              <div class=\"controls\">\n                ${controls === undefined ? \"\" : controls.map(control => html`\n                        <ha-icon-button\n                          .label=${this.hass.localize(`ui.card.media_player.${control.action}`)}\n                          .path=${control.icon}\n                          action=${control.action}\n                          @click=${this._handleControlClick}\n                        >\n                        </ha-icon-button>\n                      `)}\n              </div>\n              ${stateObj.attributes.media_duration === Infinity ? nothing : this.narrow ? html`<mwc-linear-progress></mwc-linear-progress>` : html`\n                      <div class=\"progress\">\n                        <div id=\"CurrentProgress\"></div>\n                        <mwc-linear-progress wide></mwc-linear-progress>\n                        <div>${mediaDuration}</div>\n                      </div>\n                    `}\n            `}\n      </div>\n      ${this._renderChoosePlayer(stateObj)}\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_renderChoosePlayer\",\n      value: function _renderChoosePlayer(stateObj) {\n        const isBrowser = this.entityId === BROWSER_PLAYER;\n        return html`\n    <div class=\"choose-player ${isBrowser ? \"browser\" : \"\"}\">\n      ${!this.narrow && stateObj && supportsFeature(stateObj, MediaPlayerEntityFeature.VOLUME_SET) ? html`\n              <ha-button-menu y=\"0\" x=\"76\">\n                <ha-icon-button\n                  slot=\"trigger\"\n                  .path=${mdiVolumeHigh}\n                ></ha-icon-button>\n                <ha-slider\n                  labeled\n                  min=\"0\"\n                  max=\"100\"\n                  step=\"1\"\n                  .value=${stateObj.attributes.volume_level * 100}\n                  @change=${this._handleVolumeChange}\n                >\n                </ha-slider>\n              </ha-button-menu>\n            ` : \"\"}\n\n          <ha-button-menu>\n            ${this.narrow ? html`\n                    <ha-icon-button slot=\"trigger\">\n                      ${this._renderIcon(isBrowser, stateObj)}\n                    </ha-icon-button>\n                  ` : html`\n                    <ha-button\n                      slot=\"trigger\"\n                      .label=${this.narrow ? nothing : `${stateObj ? computeStateName(stateObj) : this.entityId}\n                `}\n                    >\n                      <span slot=\"icon\">\n                        ${this._renderIcon(isBrowser, stateObj)}\n                      </span>\n                      <ha-svg-icon\n                        slot=\"trailingIcon\"\n                        .path=${mdiChevronDown}\n                      ></ha-svg-icon>\n                    </ha-button>\n                  `}\n            <ha-list-item\n              .player=${BROWSER_PLAYER}\n              ?selected=${isBrowser}\n              @click=${this._selectPlayer}\n            >\n              ${this.hass.localize(\"ui.components.media-browser.web-browser\")}\n            </ha-list-item>\n            ${this._mediaPlayerEntities.map(source => html`\n                <ha-list-item\n                  ?selected=${source.entity_id === this.entityId}\n                  .disabled=${source.state === UNAVAILABLE}\n                  .player=${source.entity_id}\n                  @click=${this._selectPlayer}\n                >\n                  ${computeStateName(source)}\n                </ha-list-item>\n              `)}\n          </ha-button-menu>\n        </div>\n      </div>\n\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_renderIcon\",\n      value: function _renderIcon(isBrowser, stateObj) {\n        if (isBrowser) {\n          return html`<ha-svg-icon .path=${mdiMonitor}></ha-svg-icon>`;\n        }\n        if (stateObj) {\n          return html`\n        <ha-state-icon .hass=${this.hass} .stateObj=${stateObj}></ha-state-icon>\n      `;\n        }\n        return html`\n      <ha-domain-icon\n        .hass=${this.hass}\n        .domain=${computeDomain(this.entityId)}\n      ></ha-domain-icon>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"willUpdate\",\n      value: function willUpdate(changedProps) {\n        _get(_getPrototypeOf(BarMediaPlayer.prototype), \"willUpdate\", this).call(this, changedProps);\n        if (changedProps.has(\"entityId\")) {\n          this._tearDownBrowserPlayer();\n        }\n        if (!changedProps.has(\"hass\") || this.entityId === BROWSER_PLAYER) {\n          return;\n        }\n        // Reset new media expected if media player state changes\n        const oldHass = changedProps.get(\"hass\");\n        if (!oldHass || oldHass.states[this.entityId] !== this.hass.states[this.entityId]) {\n          this._newMediaExpected = false;\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"updated\",\n      value: function updated(changedProps) {\n        _get(_getPrototypeOf(BarMediaPlayer.prototype), \"updated\", this).call(this, changedProps);\n        if (this.entityId === BROWSER_PLAYER) {\n          if (!changedProps.has(\"_browserPlayer\")) {\n            return;\n          }\n        } else {\n          const oldHass = changedProps.get(\"hass\");\n          if (oldHass && oldHass.states[this.entityId] === this._stateObj) {\n            return;\n          }\n        }\n        const stateObj = this._stateObj;\n        this._updateProgressBar();\n        if (!this._progressInterval && this._showProgressBar && (stateObj === null || stateObj === void 0 ? void 0 : stateObj.state) === \"playing\") {\n          this._progressInterval = window.setInterval(() => this._updateProgressBar(), 1000);\n        } else if (this._progressInterval && (!this._showProgressBar || (stateObj === null || stateObj === void 0 ? void 0 : stateObj.state) !== \"playing\")) {\n          clearInterval(this._progressInterval);\n          this._progressInterval = undefined;\n        }\n      }\n    }, {\n      kind: \"get\",\n      key: \"_stateObj\",\n      value: function _stateObj() {\n        if (this.entityId === BROWSER_PLAYER) {\n          return this._browserPlayer ? this._browserPlayer.toStateObj() : BrowserMediaPlayer.idleStateObj();\n        }\n        return this.hass.states[this.entityId];\n      }\n    }, {\n      kind: \"method\",\n      key: \"_tearDownBrowserPlayer\",\n      value: function _tearDownBrowserPlayer() {\n        if (this._browserPlayer) {\n          this._browserPlayer.remove();\n          this._browserPlayer = undefined;\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_openMoreInfo\",\n      value: function _openMoreInfo() {\n        if (this._browserPlayer) {\n          return;\n        }\n        fireEvent(this, \"hass-more-info\", {\n          entityId: this.entityId\n        });\n      }\n    }, {\n      kind: \"get\",\n      key: \"_showProgressBar\",\n      value: function _showProgressBar() {\n        if (!this.hass) {\n          return false;\n        }\n        const stateObj = this._stateObj;\n        return stateObj && (stateObj.state === \"playing\" || stateObj.state === \"paused\") && \"media_duration\" in stateObj.attributes && \"media_position\" in stateObj.attributes;\n      }\n    }, {\n      kind: \"get\",\n      key: \"_mediaPlayerEntities\",\n      value: function _mediaPlayerEntities() {\n        return Object.values(this.hass.states).filter(entity => {\n          var _this$hass$entities$e;\n          return computeStateDomain(entity) === \"media_player\" && supportsFeature(entity, MediaPlayerEntityFeature.BROWSE_MEDIA) && !((_this$hass$entities$e = this.hass.entities[entity.entity_id]) !== null && _this$hass$entities$e !== void 0 && _this$hass$entities$e.hidden);\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_updateProgressBar\",\n      value: function _updateProgressBar() {\n        const stateObj = this._stateObj;\n        if (!this._progressBar || !this._currentProgress || !stateObj) {\n          return;\n        }\n        if (!stateObj.attributes.media_duration) {\n          this._progressBar.progress = 0;\n          this._currentProgress.innerHTML = \"\";\n          return;\n        }\n        const currentProgress = getCurrentProgress(stateObj);\n        this._progressBar.progress = currentProgress / stateObj.attributes.media_duration;\n        if (this._currentProgress) {\n          this._currentProgress.innerHTML = formatMediaTime(currentProgress);\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleControlClick\",\n      value: function _handleControlClick(e) {\n        const action = e.currentTarget.getAttribute(\"action\");\n        if (!this._browserPlayer) {\n          handleMediaControlClick(this.hass, this._stateObj, e.currentTarget.getAttribute(\"action\"));\n          return;\n        }\n        if (action === \"media_pause\") {\n          this._browserPlayer.pause();\n        } else if (action === \"media_play\") {\n          this._browserPlayer.play();\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_marqueeMouseOver\",\n      value: function _marqueeMouseOver() {\n        if (!this._marqueeActive) {\n          this._marqueeActive = true;\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_marqueeMouseLeave\",\n      value: function _marqueeMouseLeave() {\n        if (this._marqueeActive) {\n          this._marqueeActive = false;\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_selectPlayer\",\n      value: function _selectPlayer(ev) {\n        const entityId = ev.currentTarget.player;\n        fireEvent(this, \"player-picked\", {\n          entityId\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleVolumeChange\",\n      value: async function _handleVolumeChange(ev) {\n        ev.stopPropagation();\n        const value = Number(ev.target.value) / 100;\n        if (this._browserPlayer) {\n          this._browserPlayerVolume = value;\n          this._browserPlayer.setVolume(value);\n        } else {\n          await setMediaPlayerVolume(this.hass, this.entityId, value);\n        }\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css`\n      :host {\n        display: flex;\n        height: 100px;\n        box-sizing: border-box;\n        background: var(\n          --ha-card-background,\n          var(--card-background-color, white)\n        );\n        border-top: 1px solid var(--divider-color);\n        padding-bottom: env(safe-area-inset-bottom);\n      }\n\n      mwc-linear-progress {\n        width: 100%;\n        padding: 0 4px;\n        --mdc-theme-primary: var(--secondary-text-color);\n      }\n\n      ha-button-menu ha-button[slot=\"trigger\"] {\n        line-height: 1;\n        --mdc-theme-primary: var(--primary-text-color);\n        --mdc-icon-size: 16px;\n      }\n\n      .info {\n        flex: 1;\n        display: flex;\n        align-items: center;\n        width: 100%;\n        margin-right: 16px;\n        margin-inline-end: 16px;\n        margin-inline-start: initial;\n\n        text-overflow: ellipsis;\n        white-space: nowrap;\n        overflow: hidden;\n      }\n\n      .pointer {\n        cursor: pointer;\n      }\n\n      .secondary,\n      .progress {\n        color: var(--secondary-text-color);\n      }\n\n      .choose-player {\n        flex: 1;\n        display: flex;\n        justify-content: flex-end;\n        align-items: center;\n        padding: 16px;\n      }\n\n      .controls {\n        height: 48px;\n        padding-bottom: 4px;\n      }\n\n      .controls-progress {\n        flex: 2;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        flex-direction: column;\n        direction: ltr;\n      }\n\n      .progress {\n        display: flex;\n        width: 100%;\n        align-items: center;\n      }\n\n      mwc-linear-progress[wide] {\n        margin: 0 4px;\n      }\n\n      .media-info {\n        text-overflow: ellipsis;\n        white-space: nowrap;\n        overflow: hidden;\n        padding-left: 16px;\n        padding-inline-start: 16px;\n        padding-inline-end: initial;\n        width: 100%;\n      }\n\n      hui-marquee {\n        font-size: 1.2em;\n        margin: 0px 0 4px;\n      }\n\n      img {\n        height: 100%;\n      }\n\n      .app img {\n        height: 68px;\n        margin: 16px 0 16px 16px;\n      }\n\n      :host([narrow]) {\n        height: 57px;\n      }\n\n      :host([narrow]) .controls-progress {\n        flex: unset;\n        min-width: 48px;\n      }\n\n      :host([narrow]) .controls-progress.buffering {\n        flex: 1;\n      }\n\n      :host([narrow]) .media-info {\n        padding-left: 8px;\n        padding-inline-start: 8px;\n        padding-inline-end: initial;\n      }\n\n      :host([narrow]) .controls {\n        display: flex;\n        padding-bottom: 0;\n        --mdc-icon-size: 30px;\n      }\n\n      :host([narrow]) .choose-player {\n        padding-left: 0;\n        padding-right: 8px;\n        padding-inline-start: 0;\n        padding-inline-end: 8px;\n        min-width: 48px;\n        flex: unset;\n        justify-content: center;\n      }\n\n      :host([narrow]) .choose-player.browser {\n        justify-content: flex-end;\n      }\n\n      :host([narrow]) mwc-linear-progress {\n        padding: 0;\n        position: absolute;\n        top: -4px;\n        left: 0;\n      }\n\n      ha-list-item[selected] {\n        font-weight: bold;\n      }\n\n      span[slot=\"icon\"] {\n        display: flex;\n        align-items: center;\n      }\n\n      ha-svg-icon[slot=\"trailingIcon\"] {\n        margin-inline-start: 8px !important;\n        margin-inline-end: 0px !important;\n        direction: var(--direction);\n      }\n    `;\n      }\n    }]\n  };\n}, SubscribeMixin(LitElement));","map":{"version":3,"names":["mdiChevronDown","mdiMonitor","mdiPause","mdiPlay","mdiPlayPause","mdiStop","mdiVolumeHigh","LitElement","css","html","nothing","customElement","property","query","state","classMap","until","fireEvent","computeDomain","computeStateDomain","computeStateName","supportsFeature","debounce","UNAVAILABLE","BROWSER_PLAYER","MediaPlayerEntityFeature","cleanupMediaTitle","computeMediaControls","computeMediaDescription","formatMediaTime","getCurrentProgress","handleMediaControlClick","setMediaPlayerVolume","showAlertDialog","SubscribeMixin","BrowserMediaPlayer","ERR_UNSUPPORTED_MEDIA","BarMediaPlayer","_decorate","_initialize","_SubscribeMixin","constructor","args","F","d","kind","decorators","attribute","key","value","type","Boolean","reflect","connectedCallback","_get","_getPrototypeOf","prototype","call","stateObj","_stateObj","_progressInterval","_showProgressBar","window","setInterval","_updateProgressBar","disconnectedCallback","clearInterval","undefined","_tearDownBrowserPlayer","showResolvingNewMediaPicked","_newMediaExpected","_debouncedResetMediaExpected","hideResolvingNewMediaPicked","playItem","item","resolved","entityId","Error","_browserPlayer","hass","_browserPlayerVolume","requestUpdate","err","message","text","localize","render","_this$_browserPlayer","Promise","resolve","setTimeout","then","isBrowser","_renderChoosePlayer","controls","narrow","PAUSE","STOP","PLAY","icon","action","mediaDescription","mediaDuration","attributes","media_duration","mediaTitleClean","media_title","media_content_id","mediaArt","entity_picture_local","entity_picture","info","pointer","app","media_class","_openMoreInfo","hassUrl","_marqueeActive","_marqueeMouseOver","_marqueeMouseLeave","map","control","_handleControlClick","Infinity","VOLUME_SET","volume_level","_handleVolumeChange","_renderIcon","_selectPlayer","_mediaPlayerEntities","source","entity_id","willUpdate","changedProps","has","oldHass","get","states","updated","toStateObj","idleStateObj","remove","Object","values","filter","entity","_this$hass$entities$e","BROWSE_MEDIA","entities","hidden","_progressBar","_currentProgress","progress","innerHTML","currentProgress","e","currentTarget","getAttribute","pause","play","ev","player","stopPropagation","Number","target","setVolume","static","styles"],"sources":["/Users/sercanardil/Desktop/frontend/src/panels/media-browser/ha-bar-media-player.ts"],"sourcesContent":["import \"@material/mwc-linear-progress/mwc-linear-progress\";\nimport type { LinearProgress } from \"@material/mwc-linear-progress/mwc-linear-progress\";\nimport {\n  mdiChevronDown,\n  mdiMonitor,\n  mdiPause,\n  mdiPlay,\n  mdiPlayPause,\n  mdiStop,\n  mdiVolumeHigh,\n} from \"@mdi/js\";\nimport {\n  CSSResultGroup,\n  LitElement,\n  PropertyValues,\n  css,\n  html,\n  nothing,\n} from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport { until } from \"lit/directives/until\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { computeDomain } from \"../../common/entity/compute_domain\";\nimport { computeStateDomain } from \"../../common/entity/compute_state_domain\";\nimport { computeStateName } from \"../../common/entity/compute_state_name\";\nimport { supportsFeature } from \"../../common/entity/supports-feature\";\nimport { debounce } from \"../../common/util/debounce\";\nimport \"../../components/ha-button\";\nimport \"../../components/ha-button-menu\";\nimport \"../../components/ha-circular-progress\";\nimport \"../../components/ha-domain-icon\";\nimport \"../../components/ha-icon-button\";\nimport \"../../components/ha-list-item\";\nimport \"../../components/ha-state-icon\";\nimport \"../../components/ha-svg-icon\";\nimport { UNAVAILABLE } from \"../../data/entity\";\nimport {\n  BROWSER_PLAYER,\n  ControlButton,\n  MediaPlayerEntity,\n  MediaPlayerEntityFeature,\n  MediaPlayerItem,\n  cleanupMediaTitle,\n  computeMediaControls,\n  computeMediaDescription,\n  formatMediaTime,\n  getCurrentProgress,\n  handleMediaControlClick,\n  setMediaPlayerVolume,\n} from \"../../data/media-player\";\nimport { ResolvedMediaSource } from \"../../data/media_source\";\nimport { showAlertDialog } from \"../../dialogs/generic/show-dialog-box\";\nimport { SubscribeMixin } from \"../../mixins/subscribe-mixin\";\nimport type { HomeAssistant } from \"../../types\";\nimport \"../lovelace/components/hui-marquee\";\nimport {\n  BrowserMediaPlayer,\n  ERR_UNSUPPORTED_MEDIA,\n} from \"./browser-media-player\";\n\ndeclare global {\n  interface HASSDomEvents {\n    \"player-picked\": { entityId: string };\n  }\n}\n\n@customElement(\"ha-bar-media-player\")\nexport class BarMediaPlayer extends SubscribeMixin(LitElement) {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public entityId!: string;\n\n  @property({ type: Boolean, reflect: true }) public narrow = false;\n\n  @query(\"mwc-linear-progress\") private _progressBar?: LinearProgress;\n\n  @query(\"#CurrentProgress\") private _currentProgress?: HTMLElement;\n\n  @state() private _marqueeActive = false;\n\n  @state() private _newMediaExpected = false;\n\n  @state() private _browserPlayer?: BrowserMediaPlayer;\n\n  private _progressInterval?: number;\n\n  private _browserPlayerVolume = 0.8;\n\n  public connectedCallback(): void {\n    super.connectedCallback();\n\n    const stateObj = this._stateObj;\n\n    if (!stateObj) {\n      return;\n    }\n\n    if (\n      !this._progressInterval &&\n      this._showProgressBar &&\n      stateObj.state === \"playing\"\n    ) {\n      this._progressInterval = window.setInterval(\n        () => this._updateProgressBar(),\n        1000\n      );\n    }\n  }\n\n  public disconnectedCallback(): void {\n    super.disconnectedCallback();\n    if (this._progressInterval) {\n      clearInterval(this._progressInterval);\n      this._progressInterval = undefined;\n    }\n    this._tearDownBrowserPlayer();\n  }\n\n  public showResolvingNewMediaPicked() {\n    this._tearDownBrowserPlayer();\n    this._newMediaExpected = true;\n    // Sometimes the state does not update when playing media, like with TTS, so we wait max 2 secs and then stop waiting\n    this._debouncedResetMediaExpected();\n  }\n\n  private _debouncedResetMediaExpected = debounce(() => {\n    this._newMediaExpected = false;\n  }, 2000);\n\n  public hideResolvingNewMediaPicked() {\n    this._newMediaExpected = false;\n  }\n\n  public playItem(item: MediaPlayerItem, resolved: ResolvedMediaSource) {\n    if (this.entityId !== BROWSER_PLAYER) {\n      throw Error(\"Only browser supported\");\n    }\n    this._tearDownBrowserPlayer();\n    try {\n      this._browserPlayer = new BrowserMediaPlayer(\n        this.hass,\n        item,\n        resolved,\n        this._browserPlayerVolume,\n        () => this.requestUpdate(\"_browserPlayer\")\n      );\n    } catch (err: any) {\n      if (err.message === ERR_UNSUPPORTED_MEDIA) {\n        showAlertDialog(this, {\n          text: this.hass.localize(\n            \"ui.components.media-browser.media_not_supported\"\n          ),\n        });\n      } else {\n        throw err;\n      }\n    }\n    this._newMediaExpected = false;\n  }\n\n  protected render() {\n    if (this._newMediaExpected) {\n      return html`\n        <div class=\"controls-progress buffering\">\n          ${until(\n            // Only show spinner after 500ms\n            new Promise((resolve) => {\n              setTimeout(resolve, 500);\n            }).then(\n              () =>\n                html`<ha-circular-progress\n                  indeterminate\n                ></ha-circular-progress>`\n            )\n          )}\n        </div>\n      `;\n    }\n\n    const isBrowser = this.entityId === BROWSER_PLAYER;\n    const stateObj = this._stateObj;\n\n    if (!stateObj) {\n      return this._renderChoosePlayer(stateObj);\n    }\n\n    const controls: ControlButton[] | undefined = !this.narrow\n      ? computeMediaControls(stateObj, true)\n      : (stateObj.state === \"playing\" &&\n            (supportsFeature(stateObj, MediaPlayerEntityFeature.PAUSE) ||\n              supportsFeature(stateObj, MediaPlayerEntityFeature.STOP))) ||\n          ((stateObj.state === \"paused\" || stateObj.state === \"idle\") &&\n            supportsFeature(stateObj, MediaPlayerEntityFeature.PLAY)) ||\n          (stateObj.state === \"on\" &&\n            (supportsFeature(stateObj, MediaPlayerEntityFeature.PLAY) ||\n              supportsFeature(stateObj, MediaPlayerEntityFeature.PAUSE)))\n        ? [\n            {\n              icon:\n                stateObj.state === \"on\"\n                  ? mdiPlayPause\n                  : stateObj.state !== \"playing\"\n                    ? mdiPlay\n                    : supportsFeature(stateObj, MediaPlayerEntityFeature.PAUSE)\n                      ? mdiPause\n                      : mdiStop,\n              action:\n                stateObj.state !== \"playing\"\n                  ? \"media_play\"\n                  : supportsFeature(stateObj, MediaPlayerEntityFeature.PAUSE)\n                    ? \"media_pause\"\n                    : \"media_stop\",\n            },\n          ]\n        : undefined;\n    const mediaDescription = computeMediaDescription(stateObj);\n    const mediaDuration = formatMediaTime(stateObj.attributes.media_duration);\n    const mediaTitleClean = cleanupMediaTitle(\n      stateObj.attributes.media_title || stateObj.attributes.media_content_id\n    );\n    const mediaArt =\n      stateObj.attributes.entity_picture_local ||\n      stateObj.attributes.entity_picture;\n\n    return html`\n      <div\n        class=${classMap({\n          info: true,\n          pointer: !isBrowser,\n          app: this._browserPlayer?.item.media_class === \"app\",\n        })}\n        @click=${this._openMoreInfo}\n      >\n        ${mediaArt\n          ? html`<img alt=\"\" src=${this.hass.hassUrl(mediaArt)} />`\n          : \"\"}\n        <div class=\"media-info\">\n          <hui-marquee\n            .text=${mediaTitleClean ||\n            mediaDescription ||\n            (stateObj.state !== \"playing\" && stateObj.state !== \"on\"\n              ? this.hass.localize(`ui.card.media_player.nothing_playing`)\n              : \"\")}\n            .active=${this._marqueeActive}\n            @mouseover=${this._marqueeMouseOver}\n            @mouseleave=${this._marqueeMouseLeave}\n          ></hui-marquee>\n          <span class=\"secondary\">\n            ${mediaTitleClean ? mediaDescription : \"\"}\n          </span>\n        </div>\n      </div>\n      <div\n        class=\"controls-progress ${stateObj.state === \"buffering\"\n          ? \"buffering\"\n          : \"\"}\"\n      >\n        ${stateObj.state === \"buffering\"\n          ? html`<ha-circular-progress indeterminate></ha-circular-progress> `\n          : html`\n              <div class=\"controls\">\n                ${controls === undefined\n                  ? \"\"\n                  : controls.map(\n                      (control) => html`\n                        <ha-icon-button\n                          .label=${this.hass.localize(\n                            `ui.card.media_player.${control.action}`\n                          )}\n                          .path=${control.icon}\n                          action=${control.action}\n                          @click=${this._handleControlClick}\n                        >\n                        </ha-icon-button>\n                      `\n                    )}\n              </div>\n              ${stateObj.attributes.media_duration === Infinity\n                ? nothing\n                : this.narrow\n                  ? html`<mwc-linear-progress></mwc-linear-progress>`\n                  : html`\n                      <div class=\"progress\">\n                        <div id=\"CurrentProgress\"></div>\n                        <mwc-linear-progress wide></mwc-linear-progress>\n                        <div>${mediaDuration}</div>\n                      </div>\n                    `}\n            `}\n      </div>\n      ${this._renderChoosePlayer(stateObj)}\n    `;\n  }\n\n  private _renderChoosePlayer(stateObj: MediaPlayerEntity | undefined) {\n    const isBrowser = this.entityId === BROWSER_PLAYER;\n    return html`\n    <div class=\"choose-player ${isBrowser ? \"browser\" : \"\"}\">\n      ${\n        !this.narrow &&\n        stateObj &&\n        supportsFeature(stateObj, MediaPlayerEntityFeature.VOLUME_SET)\n          ? html`\n              <ha-button-menu y=\"0\" x=\"76\">\n                <ha-icon-button\n                  slot=\"trigger\"\n                  .path=${mdiVolumeHigh}\n                ></ha-icon-button>\n                <ha-slider\n                  labeled\n                  min=\"0\"\n                  max=\"100\"\n                  step=\"1\"\n                  .value=${stateObj.attributes.volume_level! * 100}\n                  @change=${this._handleVolumeChange}\n                >\n                </ha-slider>\n              </ha-button-menu>\n            `\n          : \"\"\n      }\n\n          <ha-button-menu>\n            ${\n              this.narrow\n                ? html`\n                    <ha-icon-button slot=\"trigger\">\n                      ${this._renderIcon(isBrowser, stateObj)}\n                    </ha-icon-button>\n                  `\n                : html`\n                    <ha-button\n                      slot=\"trigger\"\n                      .label=${this.narrow\n                        ? nothing\n                        : `${\n                            stateObj\n                              ? computeStateName(stateObj)\n                              : this.entityId\n                          }\n                `}\n                    >\n                      <span slot=\"icon\">\n                        ${this._renderIcon(isBrowser, stateObj)}\n                      </span>\n                      <ha-svg-icon\n                        slot=\"trailingIcon\"\n                        .path=${mdiChevronDown}\n                      ></ha-svg-icon>\n                    </ha-button>\n                  `\n            }\n            <ha-list-item\n              .player=${BROWSER_PLAYER}\n              ?selected=${isBrowser}\n              @click=${this._selectPlayer}\n            >\n              ${this.hass.localize(\"ui.components.media-browser.web-browser\")}\n            </ha-list-item>\n            ${this._mediaPlayerEntities.map(\n              (source) => html`\n                <ha-list-item\n                  ?selected=${source.entity_id === this.entityId}\n                  .disabled=${source.state === UNAVAILABLE}\n                  .player=${source.entity_id}\n                  @click=${this._selectPlayer}\n                >\n                  ${computeStateName(source)}\n                </ha-list-item>\n              `\n            )}\n          </ha-button-menu>\n        </div>\n      </div>\n\n    `;\n  }\n\n  private _renderIcon(isBrowser: boolean, stateObj?: MediaPlayerEntity) {\n    if (isBrowser) {\n      return html`<ha-svg-icon .path=${mdiMonitor}></ha-svg-icon>`;\n    }\n    if (stateObj) {\n      return html`\n        <ha-state-icon .hass=${this.hass} .stateObj=${stateObj}></ha-state-icon>\n      `;\n    }\n    return html`\n      <ha-domain-icon\n        .hass=${this.hass}\n        .domain=${computeDomain(this.entityId)}\n      ></ha-domain-icon>\n    `;\n  }\n\n  public willUpdate(changedProps: PropertyValues) {\n    super.willUpdate(changedProps);\n    if (changedProps.has(\"entityId\")) {\n      this._tearDownBrowserPlayer();\n    }\n    if (!changedProps.has(\"hass\") || this.entityId === BROWSER_PLAYER) {\n      return;\n    }\n    // Reset new media expected if media player state changes\n    const oldHass = changedProps.get(\"hass\") as HomeAssistant | undefined;\n    if (\n      !oldHass ||\n      oldHass.states[this.entityId] !== this.hass.states[this.entityId]\n    ) {\n      this._newMediaExpected = false;\n    }\n  }\n\n  protected updated(changedProps: PropertyValues) {\n    super.updated(changedProps);\n\n    if (this.entityId === BROWSER_PLAYER) {\n      if (!changedProps.has(\"_browserPlayer\")) {\n        return;\n      }\n    } else {\n      const oldHass = changedProps.get(\"hass\") as HomeAssistant | undefined;\n      if (oldHass && oldHass.states[this.entityId] === this._stateObj) {\n        return;\n      }\n    }\n\n    const stateObj = this._stateObj;\n\n    this._updateProgressBar();\n\n    if (\n      !this._progressInterval &&\n      this._showProgressBar &&\n      stateObj?.state === \"playing\"\n    ) {\n      this._progressInterval = window.setInterval(\n        () => this._updateProgressBar(),\n        1000\n      );\n    } else if (\n      this._progressInterval &&\n      (!this._showProgressBar || stateObj?.state !== \"playing\")\n    ) {\n      clearInterval(this._progressInterval);\n      this._progressInterval = undefined;\n    }\n  }\n\n  private get _stateObj(): MediaPlayerEntity | undefined {\n    if (this.entityId === BROWSER_PLAYER) {\n      return this._browserPlayer\n        ? this._browserPlayer.toStateObj()\n        : BrowserMediaPlayer.idleStateObj();\n    }\n    return this.hass!.states[this.entityId] as MediaPlayerEntity | undefined;\n  }\n\n  private _tearDownBrowserPlayer() {\n    if (this._browserPlayer) {\n      this._browserPlayer.remove();\n      this._browserPlayer = undefined;\n    }\n  }\n\n  private _openMoreInfo() {\n    if (this._browserPlayer) {\n      return;\n    }\n    fireEvent(this, \"hass-more-info\", { entityId: this.entityId });\n  }\n\n  private get _showProgressBar() {\n    if (!this.hass) {\n      return false;\n    }\n\n    const stateObj = this._stateObj;\n\n    return (\n      stateObj &&\n      (stateObj.state === \"playing\" || stateObj.state === \"paused\") &&\n      \"media_duration\" in stateObj.attributes &&\n      \"media_position\" in stateObj.attributes\n    );\n  }\n\n  private get _mediaPlayerEntities() {\n    return Object.values(this.hass!.states).filter(\n      (entity) =>\n        computeStateDomain(entity) === \"media_player\" &&\n        supportsFeature(entity, MediaPlayerEntityFeature.BROWSE_MEDIA) &&\n        !this.hass.entities[entity.entity_id]?.hidden\n    );\n  }\n\n  private _updateProgressBar(): void {\n    const stateObj = this._stateObj;\n\n    if (!this._progressBar || !this._currentProgress || !stateObj) {\n      return;\n    }\n\n    if (!stateObj.attributes.media_duration) {\n      this._progressBar.progress = 0;\n      this._currentProgress.innerHTML = \"\";\n      return;\n    }\n\n    const currentProgress = getCurrentProgress(stateObj);\n    this._progressBar.progress =\n      currentProgress / stateObj.attributes.media_duration;\n\n    if (this._currentProgress) {\n      this._currentProgress.innerHTML = formatMediaTime(currentProgress);\n    }\n  }\n\n  private _handleControlClick(e: MouseEvent): void {\n    const action = (e.currentTarget! as HTMLElement).getAttribute(\"action\")!;\n\n    if (!this._browserPlayer) {\n      handleMediaControlClick(\n        this.hass!,\n        this._stateObj!,\n        (e.currentTarget as HTMLElement).getAttribute(\"action\")!\n      );\n      return;\n    }\n    if (action === \"media_pause\") {\n      this._browserPlayer.pause();\n    } else if (action === \"media_play\") {\n      this._browserPlayer.play();\n    }\n  }\n\n  private _marqueeMouseOver(): void {\n    if (!this._marqueeActive) {\n      this._marqueeActive = true;\n    }\n  }\n\n  private _marqueeMouseLeave(): void {\n    if (this._marqueeActive) {\n      this._marqueeActive = false;\n    }\n  }\n\n  private _selectPlayer(ev: CustomEvent): void {\n    const entityId = (ev.currentTarget as any).player;\n    fireEvent(this, \"player-picked\", { entityId });\n  }\n\n  private async _handleVolumeChange(ev) {\n    ev.stopPropagation();\n    const value = Number(ev.target.value) / 100;\n    if (this._browserPlayer) {\n      this._browserPlayerVolume = value;\n      this._browserPlayer.setVolume(value);\n    } else {\n      await setMediaPlayerVolume(this.hass, this.entityId, value);\n    }\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      :host {\n        display: flex;\n        height: 100px;\n        box-sizing: border-box;\n        background: var(\n          --ha-card-background,\n          var(--card-background-color, white)\n        );\n        border-top: 1px solid var(--divider-color);\n        padding-bottom: env(safe-area-inset-bottom);\n      }\n\n      mwc-linear-progress {\n        width: 100%;\n        padding: 0 4px;\n        --mdc-theme-primary: var(--secondary-text-color);\n      }\n\n      ha-button-menu ha-button[slot=\"trigger\"] {\n        line-height: 1;\n        --mdc-theme-primary: var(--primary-text-color);\n        --mdc-icon-size: 16px;\n      }\n\n      .info {\n        flex: 1;\n        display: flex;\n        align-items: center;\n        width: 100%;\n        margin-right: 16px;\n        margin-inline-end: 16px;\n        margin-inline-start: initial;\n\n        text-overflow: ellipsis;\n        white-space: nowrap;\n        overflow: hidden;\n      }\n\n      .pointer {\n        cursor: pointer;\n      }\n\n      .secondary,\n      .progress {\n        color: var(--secondary-text-color);\n      }\n\n      .choose-player {\n        flex: 1;\n        display: flex;\n        justify-content: flex-end;\n        align-items: center;\n        padding: 16px;\n      }\n\n      .controls {\n        height: 48px;\n        padding-bottom: 4px;\n      }\n\n      .controls-progress {\n        flex: 2;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        flex-direction: column;\n        direction: ltr;\n      }\n\n      .progress {\n        display: flex;\n        width: 100%;\n        align-items: center;\n      }\n\n      mwc-linear-progress[wide] {\n        margin: 0 4px;\n      }\n\n      .media-info {\n        text-overflow: ellipsis;\n        white-space: nowrap;\n        overflow: hidden;\n        padding-left: 16px;\n        padding-inline-start: 16px;\n        padding-inline-end: initial;\n        width: 100%;\n      }\n\n      hui-marquee {\n        font-size: 1.2em;\n        margin: 0px 0 4px;\n      }\n\n      img {\n        height: 100%;\n      }\n\n      .app img {\n        height: 68px;\n        margin: 16px 0 16px 16px;\n      }\n\n      :host([narrow]) {\n        height: 57px;\n      }\n\n      :host([narrow]) .controls-progress {\n        flex: unset;\n        min-width: 48px;\n      }\n\n      :host([narrow]) .controls-progress.buffering {\n        flex: 1;\n      }\n\n      :host([narrow]) .media-info {\n        padding-left: 8px;\n        padding-inline-start: 8px;\n        padding-inline-end: initial;\n      }\n\n      :host([narrow]) .controls {\n        display: flex;\n        padding-bottom: 0;\n        --mdc-icon-size: 30px;\n      }\n\n      :host([narrow]) .choose-player {\n        padding-left: 0;\n        padding-right: 8px;\n        padding-inline-start: 0;\n        padding-inline-end: 8px;\n        min-width: 48px;\n        flex: unset;\n        justify-content: center;\n      }\n\n      :host([narrow]) .choose-player.browser {\n        justify-content: flex-end;\n      }\n\n      :host([narrow]) mwc-linear-progress {\n        padding: 0;\n        position: absolute;\n        top: -4px;\n        left: 0;\n      }\n\n      ha-list-item[selected] {\n        font-weight: bold;\n      }\n\n      span[slot=\"icon\"] {\n        display: flex;\n        align-items: center;\n      }\n\n      ha-svg-icon[slot=\"trailingIcon\"] {\n        margin-inline-start: 8px !important;\n        margin-inline-end: 0px !important;\n        direction: var(--direction);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-bar-media-player\": BarMediaPlayer;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}