{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport { html, LitElement } from \"lit\";\nimport { customElement, property, query } from \"lit/decorators\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport \"../ha-yaml-editor\";\nimport \"../ha-input-helper-text\";\nexport let HaObjectSelector = _decorate([customElement(\"ha-selector-object\")], function (_initialize, _LitElement) {\n  class HaObjectSelector extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaObjectSelector,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"value\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"label\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"helper\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"placeholder\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"disabled\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"required\",\n      value() {\n        return true;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [query(\"ha-yaml-editor\", true)],\n      key: \"_yamlEditor\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_valueChangedFromChild\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        return html`<ha-yaml-editor\n        .hass=${this.hass}\n        .readonly=${this.disabled}\n        .label=${this.label}\n        .required=${this.required}\n        .placeholder=${this.placeholder}\n        .defaultValue=${this.value}\n        @value-changed=${this._handleChange}\n      ></ha-yaml-editor>\n      ${this.helper ? html`<ha-input-helper-text>${this.helper}</ha-input-helper-text>` : \"\"} `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"updated\",\n      value: function updated(changedProps) {\n        _get(_getPrototypeOf(HaObjectSelector.prototype), \"updated\", this).call(this, changedProps);\n        if (changedProps.has(\"value\") && !this._valueChangedFromChild) {\n          this._yamlEditor.setValue(this.value);\n        }\n        this._valueChangedFromChild = false;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleChange\",\n      value: function _handleChange(ev) {\n        this._valueChangedFromChild = true;\n        const value = ev.target.value;\n        if (!ev.target.isValid) {\n          return;\n        }\n        if (this.value === value) {\n          return;\n        }\n        fireEvent(this, \"value-changed\", {\n          value\n        });\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["html","LitElement","customElement","property","query","fireEvent","HaObjectSelector","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","type","Boolean","render","hass","disabled","label","required","placeholder","_handleChange","helper","updated","changedProps","_get","_getPrototypeOf","prototype","call","has","_valueChangedFromChild","_yamlEditor","setValue","ev","target","isValid"],"sources":["/workspaces/frontend/src/components/ha-selector/ha-selector-object.ts"],"sourcesContent":["import { html, LitElement, PropertyValues } from \"lit\";\nimport { customElement, property, query } from \"lit/decorators\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { HomeAssistant } from \"../../types\";\nimport \"../ha-yaml-editor\";\nimport \"../ha-input-helper-text\";\nimport type { HaYamlEditor } from \"../ha-yaml-editor\";\n\n@customElement(\"ha-selector-object\")\nexport class HaObjectSelector extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property() public value?: any;\n\n  @property() public label?: string;\n\n  @property() public helper?: string;\n\n  @property() public placeholder?: string;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @property({ type: Boolean }) public required = true;\n\n  @query(\"ha-yaml-editor\", true) private _yamlEditor!: HaYamlEditor;\n\n  private _valueChangedFromChild = false;\n\n  protected render() {\n    return html`<ha-yaml-editor\n        .hass=${this.hass}\n        .readonly=${this.disabled}\n        .label=${this.label}\n        .required=${this.required}\n        .placeholder=${this.placeholder}\n        .defaultValue=${this.value}\n        @value-changed=${this._handleChange}\n      ></ha-yaml-editor>\n      ${this.helper\n        ? html`<ha-input-helper-text>${this.helper}</ha-input-helper-text>`\n        : \"\"} `;\n  }\n\n  protected updated(changedProps: PropertyValues) {\n    super.updated(changedProps);\n    if (changedProps.has(\"value\") && !this._valueChangedFromChild) {\n      this._yamlEditor.setValue(this.value);\n    }\n    this._valueChangedFromChild = false;\n  }\n\n  private _handleChange(ev) {\n    this._valueChangedFromChild = true;\n    const value = ev.target.value;\n    if (!ev.target.isValid) {\n      return;\n    }\n    if (this.value === value) {\n      return;\n    }\n    fireEvent(this, \"value-changed\", { value });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-selector-object\": HaObjectSelector;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}