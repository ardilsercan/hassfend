{"ast":null,"code":"/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\n// Note this blocking-elements import is not redundant with the one below,\n// because we need to ensure we import this module at runtime for its\n// side-effects. See\n// https://github.com/Microsoft/TypeScript/wiki/FAQ#why-are-imports-being-elided-in-my-emit.\nimport 'blocking-elements';\nimport 'wicg-inert';\nimport { strings } from '@material/drawer/constants.js';\nimport MDCDismissibleDrawerFoundation from '@material/drawer/dismissible/foundation.js';\nimport MDCModalDrawerFoundation from '@material/drawer/modal/foundation.js';\nimport { addHasRemoveClass, BaseElement } from '@material/mwc-base/base-element.js';\nimport { observer } from '@material/mwc-base/observer.js';\nimport { html } from 'lit';\nimport { property, query } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nconst blockingElements = document.$blockingElements;\nexport class DrawerBase extends BaseElement {\n  constructor() {\n    super(...arguments);\n    this._previousFocus = null;\n    this.open = false;\n    this.hasHeader = false;\n    this.type = '';\n  }\n  get mdcFoundationClass() {\n    return this.type === 'modal' ? MDCModalDrawerFoundation : MDCDismissibleDrawerFoundation;\n  }\n  createAdapter() {\n    return Object.assign(Object.assign({}, addHasRemoveClass(this.mdcRoot)), {\n      elementHasClass: (element, className) => element.classList.contains(className),\n      saveFocus: () => {\n        // Note, casting to avoid cumbersome runtime check.\n        this._previousFocus = this.getRootNode().activeElement;\n      },\n      restoreFocus: () => {\n        const previousFocus = this._previousFocus && this._previousFocus.focus;\n        if (previousFocus) {\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          this._previousFocus.focus();\n        }\n      },\n      notifyClose: () => {\n        this.open = false;\n        this.dispatchEvent(new Event(strings.CLOSE_EVENT, {\n          bubbles: true,\n          cancelable: true\n        }));\n      },\n      notifyOpen: () => {\n        this.open = true;\n        this.dispatchEvent(new Event(strings.OPEN_EVENT, {\n          bubbles: true,\n          cancelable: true\n        }));\n      },\n      focusActiveNavigationItem: () => {},\n      trapFocus: () => {\n        blockingElements.push(this);\n        this.appContent.inert = true;\n      },\n      releaseFocus: () => {\n        blockingElements.remove(this);\n        this.appContent.inert = false;\n      }\n    });\n  }\n  _handleScrimClick() {\n    if (this.mdcFoundation instanceof MDCModalDrawerFoundation) {\n      this.mdcFoundation.handleScrimClick();\n    }\n  }\n  render() {\n    const dismissible = this.type === 'dismissible' || this.type === 'modal';\n    const modal = this.type === 'modal';\n    const header = this.hasHeader ? html`\n      <div class=\"mdc-drawer__header\">\n        <h3 class=\"mdc-drawer__title\"><slot name=\"title\"></slot></h3>\n        <h6 class=\"mdc-drawer__subtitle\"><slot name=\"subtitle\"></slot></h6>\n        <slot name=\"header\"></slot>\n      </div>\n      ` : '';\n    const classes = {\n      'mdc-drawer--dismissible': dismissible,\n      'mdc-drawer--modal': modal\n    };\n    return html`\n      <aside class=\"mdc-drawer ${classMap(classes)}\">\n        ${header}\n        <div class=\"mdc-drawer__content\"><slot></slot></div>\n      </aside>\n      ${modal ? html`<div class=\"mdc-drawer-scrim\"\n                          @click=\"${this._handleScrimClick}\"></div>` : ''}\n      <div class=\"mdc-drawer-app-content\">\n        <slot name=\"appContent\"></slot>\n      </div>\n      `;\n  }\n  // note, we avoid calling `super.firstUpdated()` to control when\n  // `createFoundation()` is called.\n  firstUpdated() {\n    this.mdcRoot.addEventListener('keydown', e => this.mdcFoundation.handleKeydown(e));\n    this.mdcRoot.addEventListener('transitionend', e => this.mdcFoundation.handleTransitionEnd(e));\n  }\n  updated(changedProperties) {\n    if (changedProperties.has('type')) {\n      this.createFoundation();\n    }\n  }\n}\n__decorate([query('.mdc-drawer')], DrawerBase.prototype, \"mdcRoot\", void 0);\n__decorate([query('.mdc-drawer-app-content')], DrawerBase.prototype, \"appContent\", void 0);\n__decorate([observer(function (value) {\n  if (this.type === '') {\n    return;\n  }\n  if (value) {\n    this.mdcFoundation.open();\n  } else {\n    this.mdcFoundation.close();\n  }\n}), property({\n  type: Boolean,\n  reflect: true\n})], DrawerBase.prototype, \"open\", void 0);\n__decorate([property({\n  type: Boolean\n})], DrawerBase.prototype, \"hasHeader\", void 0);\n__decorate([property({\n  reflect: true\n})], DrawerBase.prototype, \"type\", void 0);","map":{"version":3,"names":["strings","MDCDismissibleDrawerFoundation","MDCModalDrawerFoundation","addHasRemoveClass","BaseElement","observer","html","property","query","classMap","blockingElements","document","$blockingElements","DrawerBase","constructor","_previousFocus","open","hasHeader","type","mdcFoundationClass","createAdapter","Object","assign","mdcRoot","elementHasClass","element","className","classList","contains","saveFocus","getRootNode","activeElement","restoreFocus","previousFocus","focus","notifyClose","dispatchEvent","Event","CLOSE_EVENT","bubbles","cancelable","notifyOpen","OPEN_EVENT","focusActiveNavigationItem","trapFocus","push","appContent","inert","releaseFocus","remove","_handleScrimClick","mdcFoundation","handleScrimClick","render","dismissible","modal","header","classes","firstUpdated","addEventListener","e","handleKeydown","handleTransitionEnd","updated","changedProperties","has","createFoundation","__decorate","value","close","Boolean","reflect"],"sources":["mwc-drawer-base.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\n\n\n// Note this blocking-elements import is not redundant with the one below,\n// because we need to ensure we import this module at runtime for its\n// side-effects. See\n// https://github.com/Microsoft/TypeScript/wiki/FAQ#why-are-imports-being-elided-in-my-emit.\nimport 'blocking-elements';\nimport 'wicg-inert';\n\nimport {MDCDrawerAdapter} from '@material/drawer/adapter.js';\nimport {strings} from '@material/drawer/constants.js';\nimport MDCDismissibleDrawerFoundation from '@material/drawer/dismissible/foundation.js';\nimport MDCModalDrawerFoundation from '@material/drawer/modal/foundation.js';\nimport {addHasRemoveClass, BaseElement} from '@material/mwc-base/base-element.js';\nimport {observer} from '@material/mwc-base/observer.js';\nimport {DocumentWithBlockingElements} from 'blocking-elements';\nimport {html, PropertyValues} from 'lit';\nimport {property, query} from 'lit/decorators.js';\nimport {classMap} from 'lit/directives/class-map.js';\n\ninterface InertableHTMLElement extends HTMLElement {\n  inert?: boolean;\n}\n\nconst blockingElements =\n    (document as DocumentWithBlockingElements).$blockingElements;\n\nexport class DrawerBase extends BaseElement {\n  @query('.mdc-drawer') protected mdcRoot!: HTMLElement;\n\n  @query('.mdc-drawer-app-content') protected appContent!: InertableHTMLElement;\n\n  protected mdcFoundation!: MDCDismissibleDrawerFoundation;\n\n  protected get mdcFoundationClass() {\n    return this.type === 'modal' ? MDCModalDrawerFoundation :\n                                   MDCDismissibleDrawerFoundation;\n  }\n\n  protected createAdapter(): MDCDrawerAdapter {\n    return {\n      ...addHasRemoveClass(this.mdcRoot),\n      elementHasClass: (element: HTMLElement, className: string) =>\n          element.classList.contains(className),\n      saveFocus: () => {\n        // Note, casting to avoid cumbersome runtime check.\n        this._previousFocus =\n            (this.getRootNode() as ShadowRoot).activeElement as HTMLElement;\n      },\n      restoreFocus: () => {\n        const previousFocus = this._previousFocus && this._previousFocus.focus;\n        if (previousFocus) {\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          this._previousFocus!.focus();\n        }\n      },\n      notifyClose: () => {\n        this.open = false;\n        this.dispatchEvent(\n            new Event(strings.CLOSE_EVENT, {bubbles: true, cancelable: true}));\n      },\n      notifyOpen: () => {\n        this.open = true;\n        this.dispatchEvent(\n            new Event(strings.OPEN_EVENT, {bubbles: true, cancelable: true}));\n      },\n      focusActiveNavigationItem:\n          () => { /* TODO(sorvell): Implement list focusing integration. */ },\n      trapFocus: () => {\n        blockingElements.push(this);\n        this.appContent.inert = true;\n      },\n      releaseFocus: () => {\n        blockingElements.remove(this);\n        this.appContent.inert = false;\n      },\n    };\n  }\n\n  protected _previousFocus: HTMLElement|null = null;\n\n  protected _handleScrimClick() {\n    if (this.mdcFoundation instanceof MDCModalDrawerFoundation) {\n      this.mdcFoundation.handleScrimClick();\n    }\n  }\n\n  @observer(function(this: DrawerBase, value: boolean) {\n    if (this.type === '') {\n      return;\n    }\n    if (value) {\n      this.mdcFoundation.open();\n    } else {\n      this.mdcFoundation.close();\n    }\n  })\n  @property({type: Boolean, reflect: true})\n  open = false;\n\n  @property({type: Boolean}) hasHeader = false;\n\n  @property({reflect: true}) type = '';\n\n  protected override render() {\n    const dismissible = this.type === 'dismissible' || this.type === 'modal';\n    const modal = this.type === 'modal';\n    const header = this.hasHeader ? html`\n      <div class=\"mdc-drawer__header\">\n        <h3 class=\"mdc-drawer__title\"><slot name=\"title\"></slot></h3>\n        <h6 class=\"mdc-drawer__subtitle\"><slot name=\"subtitle\"></slot></h6>\n        <slot name=\"header\"></slot>\n      </div>\n      ` :\n                                    '';\n    const classes = {\n      'mdc-drawer--dismissible': dismissible,\n      'mdc-drawer--modal': modal,\n    };\n\n    return html`\n      <aside class=\"mdc-drawer ${classMap(classes)}\">\n        ${header}\n        <div class=\"mdc-drawer__content\"><slot></slot></div>\n      </aside>\n      ${\n        modal ? html`<div class=\"mdc-drawer-scrim\"\n                          @click=\"${this._handleScrimClick}\"></div>` :\n                ''}\n      <div class=\"mdc-drawer-app-content\">\n        <slot name=\"appContent\"></slot>\n      </div>\n      `;\n  }\n\n  // note, we avoid calling `super.firstUpdated()` to control when\n  // `createFoundation()` is called.\n  protected override firstUpdated() {\n    this.mdcRoot.addEventListener(\n        'keydown', (e) => this.mdcFoundation.handleKeydown(e));\n    this.mdcRoot.addEventListener(\n        'transitionend', (e) => this.mdcFoundation.handleTransitionEnd(e));\n  }\n\n  protected override updated(changedProperties: PropertyValues) {\n    if (changedProperties.has('type')) {\n      this.createFoundation();\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}