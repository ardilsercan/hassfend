{"ast":null,"code":"import \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.parse-float.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.self.js\";\n/**\n * Detects whether window and document objects are available in current environment.\n */\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\nvar global$1 = function () {\n  if (typeof global !== 'undefined' && global.Math === Math) {\n    return global;\n  }\n  if (typeof self !== 'undefined' && self.Math === Math) {\n    return self;\n  }\n  if (typeof window !== 'undefined' && window.Math === Math) {\n    return window;\n  }\n  // eslint-disable-next-line no-new-func\n  return Function('return this')();\n}();\n\n/**\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\n * first one is not supported.\n *\n * @returns {number} Requests' identifier.\n */\nvar requestAnimationFrame$1 = function () {\n  if (typeof requestAnimationFrame === 'function') {\n    // It's required to use a bounded function because IE sometimes throws\n    // an \"Invalid calling object\" error if rAF is invoked without the global\n    // object on the left hand side.\n    return requestAnimationFrame.bind(global$1);\n  }\n  var result = function result(callback) {\n    return setTimeout(function () {\n      callback(+Date.now());\n    }, 1000 / 60);\n  };\n  return result;\n}();\n\n// Defines minimum timeout before adding a trailing call.\nvar trailingTimeout = 2;\n/**\n * Creates a wrapper function which ensures that provided callback will be\n * invoked only once during the specified delay period.\n *\n * @param callback - Function to be invoked after the delay period.\n * @param delay - Delay after which to invoke callback.\n */\nfunction throttle(callback, delay) {\n  var leadingCall = false,\n    trailingCall = false,\n    lastCallTime = 0;\n  /**\n   * Invokes the original callback function and schedules new invocation if\n   * the \"proxy\" was called during current request.\n   */\n  function resolvePending() {\n    if (leadingCall) {\n      leadingCall = false;\n      callback();\n    }\n    if (trailingCall) {\n      proxy();\n    }\n  }\n  /**\n   * Callback invoked after the specified delay. It will further postpone\n   * invocation of the original function delegating it to the\n   * requestAnimationFrame.\n   *\n   * @returns {void}\n   */\n  function timeoutCallback() {\n    requestAnimationFrame$1(resolvePending);\n  }\n  /**\n   * Schedules invocation of the original function.\n   */\n  function proxy() {\n    var timeStamp = Date.now();\n    if (leadingCall) {\n      // Reject immediately following calls.\n      if (timeStamp - lastCallTime < trailingTimeout) {\n        return;\n      }\n      // Schedule new call to be in invoked when the pending one is resolved.\n      // This is important for \"transitions\" which never actually start\n      // immediately so there is a chance that we might miss one if change\n      // happens amids the pending invocation.\n      trailingCall = true;\n    } else {\n      leadingCall = true;\n      trailingCall = false;\n      setTimeout(timeoutCallback, delay);\n    }\n    lastCallTime = timeStamp;\n  }\n  return proxy;\n}\n\n// Minimum delay before invoking the update of observers.\nvar REFRESH_DELAY = 20;\n// A list of substrings of CSS properties used to find transition events that\n// might affect dimensions of observed elements.\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\n// Check if MutationObserver is available.\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\n// Get the native implementation of HTMLElement.attachShadow\nvar origAttachShadow = isBrowser && HTMLElement.prototype.attachShadow && HTMLElement.prototype.attachShadow.toString().indexOf('[native code]') !== -1 ? HTMLElement.prototype.attachShadow : null;\n/**\n * Singleton controller class which handles updates of ResizeObserver instances.\n */\nvar ResizeObserverController = /** @class */function () {\n  /**\n   * Creates a new instance of ResizeObserverController.\n   */\n  function ResizeObserverController() {\n    /**\n     * Indicates whether DOM listeners have been added.\n     */\n    this.connected_ = false;\n    /**\n     * Tells that controller has subscribed for Mutation Events.\n     */\n    this.mutationEventsAdded_ = false;\n    /**\n     * Keeps reference to the instance of MutationObserver.\n     */\n    this.mutationsObserver_ = null;\n    /**\n     * A list of connected observers.\n     */\n    this.observers_ = [];\n    this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\n    this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\n  }\n  /**\n   * Adds observer to observers list.\n   *\n   * @param observer Observer to be added.\n   */\n  ResizeObserverController.prototype.addObserver = function (observer) {\n    if (!~this.observers_.indexOf(observer)) {\n      this.observers_.push(observer);\n    }\n    // Add listeners if they haven't been added yet.\n    if (!this.connected_) {\n      this.connect_();\n    }\n  };\n  /**\n   * Removes observer from observers list.\n   *\n   * @param observer Observer to be removed.\n   */\n  ResizeObserverController.prototype.removeObserver = function (observer) {\n    var observers = this.observers_;\n    var index = observers.indexOf(observer);\n    // Remove observer if it's present in registry.\n    if (~index) {\n      observers.splice(index, 1);\n    }\n    // Remove listeners if controller has no connected observers.\n    if (!observers.length && this.connected_) {\n      this.disconnect_();\n    }\n  };\n  /**\n   * Invokes the update of observers. It will continue running updates insofar\n   * it detects changes.\n   */\n  ResizeObserverController.prototype.refresh = function () {\n    var changesDetected = this.updateObservers_();\n    // Continue running updates if changes have been detected as there might\n    // be future ones caused by CSS transitions.\n    if (changesDetected) {\n      this.refresh();\n    }\n  };\n  /**\n   * Updates every observer from observers list and notifies them of queued\n   * entries.\n   *\n   * @returns Returns \"true\" if any observer has detected changes in\n   *      dimensions of it's elements.\n   */\n  ResizeObserverController.prototype.updateObservers_ = function () {\n    // Collect observers that have active observations.\n    var activeObservers = this.observers_.filter(function (observer) {\n      return observer.gatherActive(), observer.hasActive();\n    });\n    // Deliver notifications in a separate cycle in order to avoid any\n    // collisions between observers, e.g. when multiple instances of\n    // ResizeObserver are tracking the same element and the callback of one\n    // of them changes content dimensions of the observed target. Sometimes\n    // this may result in notifications being blocked for the rest of observers.\n    activeObservers.forEach(function (observer) {\n      return observer.broadcastActive();\n    });\n    return activeObservers.length > 0;\n  };\n  /**\n   * Initializes DOM listeners.\n   */\n  ResizeObserverController.prototype.connect_ = function () {\n    // Do nothing if running in a non-browser environment or if listeners\n    // have been already added.\n    if (!isBrowser || this.connected_) {\n      return;\n    }\n    // Subscription to the \"Transitionend\" event is used as a workaround for\n    // delayed transitions. This way it's possible to capture at least the\n    // final state of an element.\n    document.addEventListener('transitionend', this.onTransitionEnd_);\n    window.addEventListener('resize', this.refresh);\n    if (mutationObserverSupported) {\n      this.mutationsObserver_ = new MutationObserver(this.refresh);\n      var options_1 = {\n        attributes: true,\n        childList: true,\n        characterData: true,\n        subtree: true\n      };\n      this.mutationsObserver_.observe(document, options_1);\n      if (origAttachShadow) {\n        var controller_1 = this;\n        (function observeExistingShadowRoots(node) {\n          var shadowRoot = node.shadowRoot;\n          if (shadowRoot) {\n            controller_1.mutationsObserver_.observe(shadowRoot, options_1);\n            observeExistingShadowRoots(shadowRoot);\n          }\n          var child = node.firstElementChild;\n          while (child) {\n            observeExistingShadowRoots(child);\n            child = child.nextElementSibling;\n          }\n        })(document);\n        HTMLElement.prototype.attachShadow = function () {\n          var args = [];\n          for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n          }\n          var shadowRoot = origAttachShadow.apply(this, args);\n          controller_1.mutationsObserver_.observe(shadowRoot, options_1);\n          return shadowRoot;\n        };\n      }\n    } else {\n      document.addEventListener('DOMSubtreeModified', this.refresh);\n      this.mutationEventsAdded_ = true;\n    }\n    this.connected_ = true;\n  };\n  /**\n   * Removes DOM listeners.\n   */\n  ResizeObserverController.prototype.disconnect_ = function () {\n    // Do nothing if running in a non-browser environment or if listeners\n    // have been already removed.\n    if (!isBrowser || !this.connected_) {\n      return;\n    }\n    document.removeEventListener('transitionend', this.onTransitionEnd_);\n    window.removeEventListener('resize', this.refresh);\n    if (this.mutationsObserver_) {\n      this.mutationsObserver_.disconnect();\n      if (origAttachShadow) {\n        HTMLElement.prototype.attachShadow = origAttachShadow;\n      }\n    }\n    if (this.mutationEventsAdded_) {\n      document.removeEventListener('DOMSubtreeModified', this.refresh);\n    }\n    this.mutationsObserver_ = null;\n    this.mutationEventsAdded_ = false;\n    this.connected_ = false;\n  };\n  /**\n   * \"Transitionend\" event handler.\n   */\n  ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {\n    var _b = _a.propertyName,\n      propertyName = _b === void 0 ? '' : _b;\n    // Detect whether transition may affect dimensions of an element.\n    var isReflowProperty = transitionKeys.some(function (key) {\n      return !!~propertyName.indexOf(key);\n    });\n    if (isReflowProperty) {\n      this.refresh();\n    }\n  };\n  /**\n   * Returns instance of the ResizeObserverController.\n   */\n  ResizeObserverController.getInstance = function () {\n    if (!ResizeObserverController.instance_) {\n      ResizeObserverController.instance_ = new ResizeObserverController();\n    }\n    return ResizeObserverController.instance_;\n  };\n  /**\n   * Holds reference to the controller's instance.\n   */\n  ResizeObserverController.instance_ = null;\n  return ResizeObserverController;\n}();\n\n/*! *****************************************************************************\n Copyright (c) Microsoft Corporation. All rights reserved.\n Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\n this file except in compliance with the License. You may obtain a copy of the\n License at http://www.apache.org/licenses/LICENSE-2.0\n \n THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\n WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\n MERCHANTABLITY OR NON-INFRINGEMENT.\n \n See the Apache Version 2.0 License for specific language governing permissions\n and limitations under the License.\n ***************************************************************************** */\n\nfunction __values(o) {\n  var m = typeof Symbol === 'function' && o[Symbol.iterator],\n    i = 0;\n  if (m) return m.call(o);\n  return {\n    next: function next() {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n}\n\n/**\n * Defines non-writable/enumerable properties of the provided target object.\n *\n * @param target Object for which to define properties.\n * @param props Properties to be defined.\n * @returns Target object.\n */\nvar defineConfigurable = function defineConfigurable(target, props) {\n  var e_1, _a;\n  try {\n    for (var _b = __values(Object.keys(props)), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var key = _c.value;\n      Object.defineProperty(target, key, {\n        value: props[key],\n        enumerable: false,\n        writable: false,\n        configurable: true\n      });\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n  return target;\n};\n\n/**\n * Returns the global object associated with provided element.\n *\n * @param {EventT} target\n * @returns {Object}\n */\nvar getWindowOf = function getWindowOf(target) {\n  var _a;\n  // Assume that the element is an instance of Node, which means that it\n  // has the \"ownerDocument\" property from which we can retrieve a\n  // corresponding global object.\n  // Return the local global object if it's not possible extract one from\n  // provided element.\n  return ((_a = target === null || target === void 0 ? void 0 : target.ownerDocument) === null || _a === void 0 ? void 0 : _a.defaultView) || global$1;\n};\n\n// Placeholder of an empty content rectangle.\nvar emptyRect = createRectInit(0, 0, 0, 0);\n/**\n * Converts provided string to a number.\n */\nfunction toFloat(value) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  return parseFloat(value) || 0;\n}\n/**\n * Extracts borders size from provided styles.\n */\nfunction getBordersSize(styles) {\n  var positions = [];\n  for (var _i = 1; _i < arguments.length; _i++) {\n    positions[_i - 1] = arguments[_i];\n  }\n  return positions.reduce(function (size, position) {\n    var value = styles['border-' + position + '-width'];\n    return size + toFloat(value);\n  }, 0);\n}\n/**\n * Extracts paddings sizes from provided styles.\n */\nfunction getPaddings(styles) {\n  var st = styles;\n  return {\n    top: toFloat(st['padding-top']),\n    right: toFloat(st['padding-right']),\n    bottom: toFloat(st['padding-bottom']),\n    left: toFloat(st['padding-left'])\n  };\n}\n/**\n * Calculates content rectangle of provided SVG element.\n *\n * @param target Element content rectangle of which needs to be calculated.\n */\nfunction getSVGContentRect(target) {\n  var bbox = target.getBBox();\n  return createRectInit(0, 0, bbox.width, bbox.height);\n}\n/**\n * Calculates content rectangle of provided HTMLElement.\n *\n * @param target Element for which to calculate the content rectangle.\n */\nfunction getHTMLElementContentRect(target) {\n  // Client width & height properties can't be\n  // used exclusively as they provide rounded values.\n  var clientWidth = target.clientWidth,\n    clientHeight = target.clientHeight;\n  // By this condition we can catch all non-replaced inline, hidden and\n  // detached elements. Though elements with width & height properties less\n  // than 0.5 will be discarded as well.\n  //\n  // Without it we would need to implement separate methods for each of\n  // those cases and it's not possible to perform a precise and performance\n  // effective test for hidden elements. E.g. even jQuery's ':visible' filter\n  // gives wrong results for elements with width & height less than 0.5.\n  if (!clientWidth && !clientHeight) {\n    return emptyRect;\n  }\n  var styles = getWindowOf(target).getComputedStyle(target);\n  var paddings = getPaddings(styles);\n  var horizPad = paddings.left + paddings.right;\n  var vertPad = paddings.top + paddings.bottom;\n  // Computed styles of width & height are being used because they are the\n  // only dimensions available to JS that contain non-rounded values. It could\n  // be possible to utilize the getBoundingClientRect if only it's data wasn't\n  // affected by CSS transformations let alone paddings, borders and scroll\n  // bars.\n  var width = toFloat(styles.width),\n    height = toFloat(styles.height);\n  // Width & height include paddings and borders when the 'border-box' box\n  // model is applied (except for IE).\n  if (styles.boxSizing === 'border-box') {\n    // Following conditions are required to handle Internet Explorer which\n    // doesn't include paddings and borders to computed CSS dimensions.\n    //\n    // We can say that if CSS dimensions + paddings are equal to the \"client\"\n    // properties then it's either IE, and thus we don't need to subtract\n    // anything, or an element merely doesn't have paddings/borders styles.\n    if (Math.round(width + horizPad) !== clientWidth) {\n      width -= getBordersSize(styles, 'left', 'right') + horizPad;\n    }\n    if (Math.round(height + vertPad) !== clientHeight) {\n      height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\n    }\n  }\n  // Following steps can't be applied to the document's root element as its\n  // client[Width/Height] properties represent viewport area of the window.\n  // Besides, it's as well not necessary as the <html> itself neither has\n  // rendered scroll bars nor it can be clipped.\n  if (!isDocumentElement(target)) {\n    // In some browsers (only in Firefox, actually) CSS width & height\n    // include scroll bars size which can be removed at this step as scroll\n    // bars are the only difference between rounded dimensions + paddings\n    // and \"client\" properties, though that is not always true in Chrome.\n    var vertScrollbar = Math.round(width + horizPad) - clientWidth;\n    var horizScrollbar = Math.round(height + vertPad) - clientHeight;\n    // Chrome has a rather weird rounding of \"client\" properties.\n    // E.g. for an element with content width of 314.2px it sometimes gives\n    // the client width of 315px and for the width of 314.7px it may give\n    // 314px. And it doesn't happen all the time. So just ignore this delta\n    // as a non-relevant.\n    if (Math.abs(vertScrollbar) !== 1) {\n      width -= vertScrollbar;\n    }\n    if (Math.abs(horizScrollbar) !== 1) {\n      height -= horizScrollbar;\n    }\n  }\n  return createRectInit(paddings.left, paddings.top, width, height);\n}\n/**\n * Checks whether provided element is an instance of the SVGGraphicsElement.\n *\n * @param target Element to be checked.\n */\nvar isSVGGraphicsElement = function () {\n  // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\n  // interface.\n  if (typeof SVGGraphicsElement !== 'undefined') {\n    return function (target) {\n      return target instanceof getWindowOf(target).SVGGraphicsElement;\n    };\n  }\n  // If it's so, then check that element is at least an instance of the\n  // SVGElement and that it has the \"getBBox\" method.\n  // eslint-disable-next-line no-extra-parens\n  return function (target) {\n    return target instanceof getWindowOf(target).SVGElement && typeof target.getBBox === 'function';\n  };\n}();\n/**\n * Checks whether provided element is a document element (<html>).\n *\n * @param target Element to be checked.\n */\nfunction isDocumentElement(target) {\n  return target === getWindowOf(target).document.documentElement;\n}\n/**\n * Calculates an appropriate content rectangle for provided html or svg element.\n *\n * @param target Element content rectangle of which needs to be calculated.\n */\nfunction getContentRect(target) {\n  if (!isBrowser) {\n    return emptyRect;\n  }\n  if (isSVGGraphicsElement(target)) {\n    return getSVGContentRect(target);\n  }\n  return getHTMLElementContentRect(target);\n}\n/**\n * Creates rectangle with an interface of the DOMRectReadOnly.\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\n *\n * @param rectInit Object with rectangle's x/y coordinates and\n *     dimensions.\n */\nfunction createReadOnlyRect(_a) {\n  var x = _a.x,\n    y = _a.y,\n    width = _a.width,\n    height = _a.height;\n  // If DOMRectReadOnly is available use it as a prototype for the rectangle.\n  var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\n  var rect = Object.create(Constr.prototype);\n  // Rectangle's properties are not writable and non-enumerable.\n  defineConfigurable(rect, {\n    x: x,\n    y: y,\n    width: width,\n    height: height,\n    top: y,\n    right: x + width,\n    bottom: height + y,\n    left: x\n  });\n  return rect;\n}\n/**\n * Creates DOMRectInit object based on the provided dimensions and the x/y\n * coordinates. Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\n *\n * @param x X coordinate.\n * @param y Y coordinate.\n * @param width Rectangle's width.\n * @param height Rectangle's height.\n */\nfunction createRectInit(x, y, width, height) {\n  return {\n    x: x,\n    y: y,\n    width: width,\n    height: height\n  };\n}\n\n/**\n * Class that is responsible for computations of the content rectangle of\n * provided DOM element and for keeping track of it's changes.\n */\nvar ResizeObservation = /** @class */function () {\n  /**\n   * Creates an instance of ResizeObservation.\n   *\n   * @param target Element to be observed.\n   */\n  function ResizeObservation(target) {\n    /**\n     * Broadcasted width of content rectangle.\n     */\n    this.broadcastWidth = 0;\n    /**\n     * Broadcasted height of content rectangle.\n     */\n    this.broadcastHeight = 0;\n    /**\n     * Reference to the last observed content rectangle.\n     */\n    this.contentRect_ = createRectInit(0, 0, 0, 0);\n    this.target = target;\n  }\n  /**\n   * Updates content rectangle and tells whether it's width or height properties\n   * have changed since the last broadcast.\n   */\n  ResizeObservation.prototype.isActive = function () {\n    var rect = getContentRect(this.target);\n    this.contentRect_ = rect;\n    return rect.width !== this.broadcastWidth || rect.height !== this.broadcastHeight;\n  };\n  /**\n   * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\n   * from the corresponding properties of the last observed content rectangle.\n   *\n   * @returns Last observed content rectangle.\n   */\n  ResizeObservation.prototype.broadcastRect = function () {\n    var rect = this.contentRect_;\n    this.broadcastWidth = rect.width;\n    this.broadcastHeight = rect.height;\n    return rect;\n  };\n  return ResizeObservation;\n}();\nvar ResizeObserverEntry = /** @class */function () {\n  /**\n   * Creates an instance of ResizeObserverEntry.\n   *\n   * @param target Element that is being observed.\n   * @param rectInit Data of the element's content rectangle.\n   */\n  function ResizeObserverEntry(target, rectInit) {\n    var contentRect = createReadOnlyRect(rectInit);\n    // According to the specification following properties are not writable\n    // and are also not enumerable in the native implementation.\n    //\n    // Property accessors are not being used as they'd require to define a\n    // private WeakMap storage which may cause memory leaks in browsers that\n    // don't support this type of collections.\n    defineConfigurable(this, {\n      target: target,\n      contentRect: contentRect\n    });\n  }\n  return ResizeObserverEntry;\n}();\n\n/**\n * A collection of shims that provide minimal functionality of the ES6\n * collections.\n *\n * These implementations are not meant to be used outside of the ResizeObserver\n * modules as they cover only a limited range of use cases.\n */\n/* eslint-disable require-jsdoc, valid-jsdoc */\nvar MapShim = function () {\n  if (typeof Map !== 'undefined') {\n    return Map;\n  }\n  /**\n   * Returns index in provided array that matches the specified key.\n   */\n  function getIndex(arr, key) {\n    var result = -1;\n    arr.some(function (entry, index) {\n      if (entry[0] === key) {\n        result = index;\n        return true;\n      }\n      return false;\n    });\n    return result;\n  }\n  return /** @class */function () {\n    function class_1() {\n      this.__entries__ = [];\n    }\n    Object.defineProperty(class_1.prototype, 'size', {\n      get: function get() {\n        return this.__entries__.length;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    class_1.prototype.get = function (key) {\n      var _a;\n      var index = getIndex(this.__entries__, key);\n      return (_a = this.__entries__[index]) === null || _a === void 0 ? void 0 : _a[1];\n    };\n    class_1.prototype.set = function (key, value) {\n      var index = getIndex(this.__entries__, key);\n      if (~index) {\n        this.__entries__[index][1] = value;\n      } else {\n        this.__entries__.push([key, value]);\n      }\n    };\n    class_1.prototype.delete = function (key) {\n      var entries = this.__entries__;\n      var index = getIndex(entries, key);\n      if (~index) {\n        entries.splice(index, 1);\n      }\n    };\n    class_1.prototype.has = function (key) {\n      return !!~getIndex(this.__entries__, key);\n    };\n    class_1.prototype.clear = function () {\n      this.__entries__.splice(0);\n    };\n    class_1.prototype.forEach = function (callback, ctx) {\n      var e_1, _a;\n      if (ctx === void 0) {\n        ctx = null;\n      }\n      try {\n        for (var _b = __values(this.__entries__), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var entry = _c.value;\n          callback.call(ctx, entry[1], entry[0]);\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    };\n    return class_1;\n  }();\n}();\nvar ResizeObserverSPI = /** @class */function () {\n  /**\n   * Creates a new instance of ResizeObserver.\n   *\n   * @param callback Callback function that is invoked when one of the observed\n   *     elements changes it's content dimensions.\n   * @param controller Controller instance which is responsible for the updates\n   *     of observer.\n   * @param callbackCtx Reference to the public ResizeObserver instance which\n   *     will be passed to callback function.\n   */\n  function ResizeObserverSPI(callback, controller, callbackCtx) {\n    /**\n     * Collection of resize observations that have detected changes in dimensions\n     * of elements.\n     */\n    this.activeObservations_ = [];\n    /**\n     * Registry of the ResizeObservation instances.\n     */\n    this.observations_ = new MapShim();\n    if (typeof callback !== 'function') {\n      throw new TypeError('The callback provided as parameter 1 is not a function.');\n    }\n    this.callback_ = callback;\n    this.controller_ = controller;\n    this.callbackCtx_ = callbackCtx;\n  }\n  /**\n   * Starts observing provided element.\n   *\n   * @param target Element to be observed.\n   */\n  ResizeObserverSPI.prototype.observe = function (target) {\n    if (target === undefined) {\n      throw new TypeError('1 argument required, but only 0 present.');\n    }\n    // Do nothing if current environment doesn't have the Element interface.\n    if (typeof Element === 'undefined' || !(Element instanceof Object)) {\n      return;\n    }\n    if (!(target instanceof getWindowOf(target).Element)) {\n      throw new TypeError('parameter 1 is not of type \"Element\".');\n    }\n    var observations = this.observations_;\n    // Do nothing if element is already being observed.\n    if (observations.has(target)) {\n      return;\n    }\n    observations.set(target, new ResizeObservation(target));\n    this.controller_.addObserver(this);\n    // Force the update of observations.\n    this.controller_.refresh();\n  };\n  /**\n   * Stops observing provided element.\n   *\n   * @param target Element to stop observing.\n   */\n  ResizeObserverSPI.prototype.unobserve = function (target) {\n    if (target === undefined) {\n      throw new TypeError('1 argument required, but only 0 present.');\n    }\n    // Do nothing if current environment doesn't have the Element interface.\n    if (typeof Element === 'undefined' || !(Element instanceof Object)) {\n      return;\n    }\n    if (!(target instanceof getWindowOf(target).Element)) {\n      throw new TypeError('parameter 1 is not of type \"Element\".');\n    }\n    var observations = this.observations_;\n    // Do nothing if element is not being observed.\n    if (!observations.has(target)) {\n      return;\n    }\n    observations.delete(target);\n    if (!observations.size) {\n      this.controller_.removeObserver(this);\n    }\n  };\n  /**\n   * Stops observing all elements.\n   */\n  ResizeObserverSPI.prototype.disconnect = function () {\n    this.clearActive();\n    this.observations_.clear();\n    this.controller_.removeObserver(this);\n  };\n  /**\n   * Collects observation instances the associated element of which has changed\n   * it's content rectangle.\n   */\n  ResizeObserverSPI.prototype.gatherActive = function () {\n    var _this = this;\n    this.clearActive();\n    this.observations_.forEach(function (observation) {\n      if (observation.isActive()) {\n        _this.activeObservations_.push(observation);\n      }\n    });\n  };\n  /**\n   * Invokes initial callback function with a list of ResizeObserverEntry\n   * instances collected from active resize observations.\n   */\n  ResizeObserverSPI.prototype.broadcastActive = function () {\n    // Do nothing if observer doesn't have active observations.\n    if (!this.hasActive()) {\n      return;\n    }\n    var ctx = this.callbackCtx_;\n    // Create ResizeObserverEntry instance for every active observation.\n    var entries = this.activeObservations_.map(function (observation) {\n      return new ResizeObserverEntry(observation.target, observation.broadcastRect());\n    });\n    this.callback_.call(ctx, entries, ctx);\n    this.clearActive();\n  };\n  /**\n   * Clears the collection of active observations.\n   */\n  ResizeObserverSPI.prototype.clearActive = function () {\n    this.activeObservations_.splice(0);\n  };\n  /**\n   * Tells whether observer has active observations.\n   */\n  ResizeObserverSPI.prototype.hasActive = function () {\n    return this.activeObservations_.length > 0;\n  };\n  return ResizeObserverSPI;\n}();\n\n/**\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\n * exposing only those methods and properties that are defined in the spec.\n */\nvar ResizeObserver = /** @class */function () {\n  /**\n   * Creates a new instance of ResizeObserver.\n   *\n   * @param callback Callback that is invoked when dimensions of the observed\n   *     elements change.\n   */\n  function ResizeObserver(callback) {\n    if (!(this instanceof ResizeObserver)) {\n      throw new TypeError('Cannot call a class as a function.');\n    }\n    if (!arguments.length) {\n      throw new TypeError('1 argument required, but only 0 present.');\n    }\n    var controller = ResizeObserverController.getInstance();\n    this.observer_ = new ResizeObserverSPI(callback, controller, this);\n  }\n  ResizeObserver.prototype.observe = function (target) {\n    this.observer_.observe(target);\n  };\n  ResizeObserver.prototype.unobserve = function (target) {\n    this.observer_.unobserve(target);\n  };\n  ResizeObserver.prototype.disconnect = function () {\n    this.observer_.disconnect();\n  };\n  return ResizeObserver;\n}();\nvar index = function () {\n  // Export existing implementation if available.\n  if (typeof global$1.ResizeObserver !== 'undefined') {\n    return global$1.ResizeObserver;\n  }\n  return ResizeObserver;\n}();\nexport default index;","map":{"version":3,"names":["isBrowser","window","document","global$1","global","Math","self","Function","requestAnimationFrame$1","requestAnimationFrame","bind","result","callback","setTimeout","Date","now","trailingTimeout","throttle","delay","leadingCall","trailingCall","lastCallTime","resolvePending","proxy","timeoutCallback","timeStamp","REFRESH_DELAY","transitionKeys","mutationObserverSupported","MutationObserver","origAttachShadow","HTMLElement","prototype","attachShadow","toString","indexOf","ResizeObserverController","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","refresh","addObserver","observer","push","connect_","removeObserver","observers","index","splice","length","disconnect_","changesDetected","updateObservers_","activeObservers","filter","gatherActive","hasActive","forEach","broadcastActive","addEventListener","options_1","attributes","childList","characterData","subtree","observe","controller_1","observeExistingShadowRoots","node","shadowRoot","child","firstElementChild","nextElementSibling","args","_i","arguments","apply","removeEventListener","disconnect","_a","_b","propertyName","isReflowProperty","some","key","getInstance","instance_","__values","o","m","Symbol","iterator","i","call","next","value","done","defineConfigurable","target","props","e_1","Object","keys","_c","defineProperty","enumerable","writable","configurable","e_1_1","error","return","getWindowOf","ownerDocument","defaultView","emptyRect","createRectInit","toFloat","parseFloat","getBordersSize","styles","positions","reduce","size","position","getPaddings","st","top","right","bottom","left","getSVGContentRect","bbox","getBBox","width","height","getHTMLElementContentRect","clientWidth","clientHeight","getComputedStyle","paddings","horizPad","vertPad","boxSizing","round","isDocumentElement","vertScrollbar","horizScrollbar","abs","isSVGGraphicsElement","SVGGraphicsElement","SVGElement","documentElement","getContentRect","createReadOnlyRect","x","y","Constr","DOMRectReadOnly","rect","create","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","isActive","broadcastRect","ResizeObserverEntry","rectInit","contentRect","MapShim","Map","getIndex","arr","entry","class_1","__entries__","get","set","delete","entries","has","clear","ctx","ResizeObserverSPI","controller","callbackCtx","activeObservations_","observations_","TypeError","callback_","controller_","callbackCtx_","undefined","Element","observations","unobserve","clearActive","_this","observation","map","ResizeObserver","observer_"],"sources":["/workspaces/frontend/node_modules/@lit-labs/virtualizer/polyfills/resize-observer-polyfill/ResizeObserver.js"],"sourcesContent":["/**\n * Detects whether window and document objects are available in current environment.\n */\nvar isBrowser =\n  typeof window !== 'undefined' &&\n  typeof document !== 'undefined' &&\n  window.document === document;\n\n// Returns global object of a current environment.\nvar global$1 = (function () {\n  if (typeof global !== 'undefined' && global.Math === Math) {\n    return global;\n  }\n  if (typeof self !== 'undefined' && self.Math === Math) {\n    return self;\n  }\n  if (typeof window !== 'undefined' && window.Math === Math) {\n    return window;\n  }\n  // eslint-disable-next-line no-new-func\n  return Function('return this')();\n})();\n\n/**\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\n * first one is not supported.\n *\n * @returns {number} Requests' identifier.\n */\nvar requestAnimationFrame$1 = (function () {\n  if (typeof requestAnimationFrame === 'function') {\n    // It's required to use a bounded function because IE sometimes throws\n    // an \"Invalid calling object\" error if rAF is invoked without the global\n    // object on the left hand side.\n    return requestAnimationFrame.bind(global$1);\n  }\n  var result = function (callback) {\n    return setTimeout(function () {\n      callback(+Date.now());\n    }, 1000 / 60);\n  };\n  return result;\n})();\n\n// Defines minimum timeout before adding a trailing call.\nvar trailingTimeout = 2;\n/**\n * Creates a wrapper function which ensures that provided callback will be\n * invoked only once during the specified delay period.\n *\n * @param callback - Function to be invoked after the delay period.\n * @param delay - Delay after which to invoke callback.\n */\nfunction throttle(callback, delay) {\n  var leadingCall = false,\n    trailingCall = false,\n    lastCallTime = 0;\n  /**\n   * Invokes the original callback function and schedules new invocation if\n   * the \"proxy\" was called during current request.\n   */\n  function resolvePending() {\n    if (leadingCall) {\n      leadingCall = false;\n      callback();\n    }\n    if (trailingCall) {\n      proxy();\n    }\n  }\n  /**\n   * Callback invoked after the specified delay. It will further postpone\n   * invocation of the original function delegating it to the\n   * requestAnimationFrame.\n   *\n   * @returns {void}\n   */\n  function timeoutCallback() {\n    requestAnimationFrame$1(resolvePending);\n  }\n  /**\n   * Schedules invocation of the original function.\n   */\n  function proxy() {\n    var timeStamp = Date.now();\n    if (leadingCall) {\n      // Reject immediately following calls.\n      if (timeStamp - lastCallTime < trailingTimeout) {\n        return;\n      }\n      // Schedule new call to be in invoked when the pending one is resolved.\n      // This is important for \"transitions\" which never actually start\n      // immediately so there is a chance that we might miss one if change\n      // happens amids the pending invocation.\n      trailingCall = true;\n    } else {\n      leadingCall = true;\n      trailingCall = false;\n      setTimeout(timeoutCallback, delay);\n    }\n    lastCallTime = timeStamp;\n  }\n  return proxy;\n}\n\n// Minimum delay before invoking the update of observers.\nvar REFRESH_DELAY = 20;\n// A list of substrings of CSS properties used to find transition events that\n// might affect dimensions of observed elements.\nvar transitionKeys = [\n  'top',\n  'right',\n  'bottom',\n  'left',\n  'width',\n  'height',\n  'size',\n  'weight',\n];\n// Check if MutationObserver is available.\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\n// Get the native implementation of HTMLElement.attachShadow\nvar origAttachShadow =\n  isBrowser &&\n  HTMLElement.prototype.attachShadow &&\n  HTMLElement.prototype.attachShadow.toString().indexOf('[native code]') !== -1\n    ? HTMLElement.prototype.attachShadow\n    : null;\n/**\n * Singleton controller class which handles updates of ResizeObserver instances.\n */\nvar ResizeObserverController = /** @class */ (function () {\n  /**\n   * Creates a new instance of ResizeObserverController.\n   */\n  function ResizeObserverController() {\n    /**\n     * Indicates whether DOM listeners have been added.\n     */\n    this.connected_ = false;\n    /**\n     * Tells that controller has subscribed for Mutation Events.\n     */\n    this.mutationEventsAdded_ = false;\n    /**\n     * Keeps reference to the instance of MutationObserver.\n     */\n    this.mutationsObserver_ = null;\n    /**\n     * A list of connected observers.\n     */\n    this.observers_ = [];\n    this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\n    this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\n  }\n  /**\n   * Adds observer to observers list.\n   *\n   * @param observer Observer to be added.\n   */\n  ResizeObserverController.prototype.addObserver = function (observer) {\n    if (!~this.observers_.indexOf(observer)) {\n      this.observers_.push(observer);\n    }\n    // Add listeners if they haven't been added yet.\n    if (!this.connected_) {\n      this.connect_();\n    }\n  };\n  /**\n   * Removes observer from observers list.\n   *\n   * @param observer Observer to be removed.\n   */\n  ResizeObserverController.prototype.removeObserver = function (observer) {\n    var observers = this.observers_;\n    var index = observers.indexOf(observer);\n    // Remove observer if it's present in registry.\n    if (~index) {\n      observers.splice(index, 1);\n    }\n    // Remove listeners if controller has no connected observers.\n    if (!observers.length && this.connected_) {\n      this.disconnect_();\n    }\n  };\n  /**\n   * Invokes the update of observers. It will continue running updates insofar\n   * it detects changes.\n   */\n  ResizeObserverController.prototype.refresh = function () {\n    var changesDetected = this.updateObservers_();\n    // Continue running updates if changes have been detected as there might\n    // be future ones caused by CSS transitions.\n    if (changesDetected) {\n      this.refresh();\n    }\n  };\n  /**\n   * Updates every observer from observers list and notifies them of queued\n   * entries.\n   *\n   * @returns Returns \"true\" if any observer has detected changes in\n   *      dimensions of it's elements.\n   */\n  ResizeObserverController.prototype.updateObservers_ = function () {\n    // Collect observers that have active observations.\n    var activeObservers = this.observers_.filter(function (observer) {\n      return observer.gatherActive(), observer.hasActive();\n    });\n    // Deliver notifications in a separate cycle in order to avoid any\n    // collisions between observers, e.g. when multiple instances of\n    // ResizeObserver are tracking the same element and the callback of one\n    // of them changes content dimensions of the observed target. Sometimes\n    // this may result in notifications being blocked for the rest of observers.\n    activeObservers.forEach(function (observer) {\n      return observer.broadcastActive();\n    });\n    return activeObservers.length > 0;\n  };\n  /**\n   * Initializes DOM listeners.\n   */\n  ResizeObserverController.prototype.connect_ = function () {\n    // Do nothing if running in a non-browser environment or if listeners\n    // have been already added.\n    if (!isBrowser || this.connected_) {\n      return;\n    }\n    // Subscription to the \"Transitionend\" event is used as a workaround for\n    // delayed transitions. This way it's possible to capture at least the\n    // final state of an element.\n    document.addEventListener('transitionend', this.onTransitionEnd_);\n    window.addEventListener('resize', this.refresh);\n    if (mutationObserverSupported) {\n      this.mutationsObserver_ = new MutationObserver(this.refresh);\n      var options_1 = {\n        attributes: true,\n        childList: true,\n        characterData: true,\n        subtree: true,\n      };\n      this.mutationsObserver_.observe(document, options_1);\n      if (origAttachShadow) {\n        var controller_1 = this;\n        (function observeExistingShadowRoots(node) {\n          var shadowRoot = node.shadowRoot;\n          if (shadowRoot) {\n            controller_1.mutationsObserver_.observe(shadowRoot, options_1);\n            observeExistingShadowRoots(shadowRoot);\n          }\n          var child = node.firstElementChild;\n          while (child) {\n            observeExistingShadowRoots(child);\n            child = child.nextElementSibling;\n          }\n        })(document);\n        HTMLElement.prototype.attachShadow = function () {\n          var args = [];\n          for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n          }\n          var shadowRoot = origAttachShadow.apply(this, args);\n          controller_1.mutationsObserver_.observe(shadowRoot, options_1);\n          return shadowRoot;\n        };\n      }\n    } else {\n      document.addEventListener('DOMSubtreeModified', this.refresh);\n      this.mutationEventsAdded_ = true;\n    }\n    this.connected_ = true;\n  };\n  /**\n   * Removes DOM listeners.\n   */\n  ResizeObserverController.prototype.disconnect_ = function () {\n    // Do nothing if running in a non-browser environment or if listeners\n    // have been already removed.\n    if (!isBrowser || !this.connected_) {\n      return;\n    }\n    document.removeEventListener('transitionend', this.onTransitionEnd_);\n    window.removeEventListener('resize', this.refresh);\n    if (this.mutationsObserver_) {\n      this.mutationsObserver_.disconnect();\n      if (origAttachShadow) {\n        HTMLElement.prototype.attachShadow = origAttachShadow;\n      }\n    }\n    if (this.mutationEventsAdded_) {\n      document.removeEventListener('DOMSubtreeModified', this.refresh);\n    }\n    this.mutationsObserver_ = null;\n    this.mutationEventsAdded_ = false;\n    this.connected_ = false;\n  };\n  /**\n   * \"Transitionend\" event handler.\n   */\n  ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {\n    var _b = _a.propertyName,\n      propertyName = _b === void 0 ? '' : _b;\n    // Detect whether transition may affect dimensions of an element.\n    var isReflowProperty = transitionKeys.some(function (key) {\n      return !!~propertyName.indexOf(key);\n    });\n    if (isReflowProperty) {\n      this.refresh();\n    }\n  };\n  /**\n   * Returns instance of the ResizeObserverController.\n   */\n  ResizeObserverController.getInstance = function () {\n    if (!ResizeObserverController.instance_) {\n      ResizeObserverController.instance_ = new ResizeObserverController();\n    }\n    return ResizeObserverController.instance_;\n  };\n  /**\n   * Holds reference to the controller's instance.\n   */\n  ResizeObserverController.instance_ = null;\n  return ResizeObserverController;\n})();\n\n/*! *****************************************************************************\n Copyright (c) Microsoft Corporation. All rights reserved.\n Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\n this file except in compliance with the License. You may obtain a copy of the\n License at http://www.apache.org/licenses/LICENSE-2.0\n \n THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\n WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\n MERCHANTABLITY OR NON-INFRINGEMENT.\n \n See the Apache Version 2.0 License for specific language governing permissions\n and limitations under the License.\n ***************************************************************************** */\n\nfunction __values(o) {\n  var m = typeof Symbol === 'function' && o[Symbol.iterator],\n    i = 0;\n  if (m) return m.call(o);\n  return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {value: o && o[i++], done: !o};\n    },\n  };\n}\n\n/**\n * Defines non-writable/enumerable properties of the provided target object.\n *\n * @param target Object for which to define properties.\n * @param props Properties to be defined.\n * @returns Target object.\n */\nvar defineConfigurable = function (target, props) {\n  var e_1, _a;\n  try {\n    for (\n      var _b = __values(Object.keys(props)), _c = _b.next();\n      !_c.done;\n      _c = _b.next()\n    ) {\n      var key = _c.value;\n      Object.defineProperty(target, key, {\n        value: props[key],\n        enumerable: false,\n        writable: false,\n        configurable: true,\n      });\n    }\n  } catch (e_1_1) {\n    e_1 = {error: e_1_1};\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n  return target;\n};\n\n/**\n * Returns the global object associated with provided element.\n *\n * @param {EventT} target\n * @returns {Object}\n */\nvar getWindowOf = function (target) {\n  var _a;\n  // Assume that the element is an instance of Node, which means that it\n  // has the \"ownerDocument\" property from which we can retrieve a\n  // corresponding global object.\n  // Return the local global object if it's not possible extract one from\n  // provided element.\n  return (\n    ((_a =\n      target === null || target === void 0 ? void 0 : target.ownerDocument) ===\n      null || _a === void 0\n      ? void 0\n      : _a.defaultView) || global$1\n  );\n};\n\n// Placeholder of an empty content rectangle.\nvar emptyRect = createRectInit(0, 0, 0, 0);\n/**\n * Converts provided string to a number.\n */\nfunction toFloat(value) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  return parseFloat(value) || 0;\n}\n/**\n * Extracts borders size from provided styles.\n */\nfunction getBordersSize(styles) {\n  var positions = [];\n  for (var _i = 1; _i < arguments.length; _i++) {\n    positions[_i - 1] = arguments[_i];\n  }\n  return positions.reduce(function (size, position) {\n    var value = styles['border-' + position + '-width'];\n    return size + toFloat(value);\n  }, 0);\n}\n/**\n * Extracts paddings sizes from provided styles.\n */\nfunction getPaddings(styles) {\n  var st = styles;\n  return {\n    top: toFloat(st['padding-top']),\n    right: toFloat(st['padding-right']),\n    bottom: toFloat(st['padding-bottom']),\n    left: toFloat(st['padding-left']),\n  };\n}\n/**\n * Calculates content rectangle of provided SVG element.\n *\n * @param target Element content rectangle of which needs to be calculated.\n */\nfunction getSVGContentRect(target) {\n  var bbox = target.getBBox();\n  return createRectInit(0, 0, bbox.width, bbox.height);\n}\n/**\n * Calculates content rectangle of provided HTMLElement.\n *\n * @param target Element for which to calculate the content rectangle.\n */\nfunction getHTMLElementContentRect(target) {\n  // Client width & height properties can't be\n  // used exclusively as they provide rounded values.\n  var clientWidth = target.clientWidth,\n    clientHeight = target.clientHeight;\n  // By this condition we can catch all non-replaced inline, hidden and\n  // detached elements. Though elements with width & height properties less\n  // than 0.5 will be discarded as well.\n  //\n  // Without it we would need to implement separate methods for each of\n  // those cases and it's not possible to perform a precise and performance\n  // effective test for hidden elements. E.g. even jQuery's ':visible' filter\n  // gives wrong results for elements with width & height less than 0.5.\n  if (!clientWidth && !clientHeight) {\n    return emptyRect;\n  }\n  var styles = getWindowOf(target).getComputedStyle(target);\n  var paddings = getPaddings(styles);\n  var horizPad = paddings.left + paddings.right;\n  var vertPad = paddings.top + paddings.bottom;\n  // Computed styles of width & height are being used because they are the\n  // only dimensions available to JS that contain non-rounded values. It could\n  // be possible to utilize the getBoundingClientRect if only it's data wasn't\n  // affected by CSS transformations let alone paddings, borders and scroll\n  // bars.\n  var width = toFloat(styles.width),\n    height = toFloat(styles.height);\n  // Width & height include paddings and borders when the 'border-box' box\n  // model is applied (except for IE).\n  if (styles.boxSizing === 'border-box') {\n    // Following conditions are required to handle Internet Explorer which\n    // doesn't include paddings and borders to computed CSS dimensions.\n    //\n    // We can say that if CSS dimensions + paddings are equal to the \"client\"\n    // properties then it's either IE, and thus we don't need to subtract\n    // anything, or an element merely doesn't have paddings/borders styles.\n    if (Math.round(width + horizPad) !== clientWidth) {\n      width -= getBordersSize(styles, 'left', 'right') + horizPad;\n    }\n    if (Math.round(height + vertPad) !== clientHeight) {\n      height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\n    }\n  }\n  // Following steps can't be applied to the document's root element as its\n  // client[Width/Height] properties represent viewport area of the window.\n  // Besides, it's as well not necessary as the <html> itself neither has\n  // rendered scroll bars nor it can be clipped.\n  if (!isDocumentElement(target)) {\n    // In some browsers (only in Firefox, actually) CSS width & height\n    // include scroll bars size which can be removed at this step as scroll\n    // bars are the only difference between rounded dimensions + paddings\n    // and \"client\" properties, though that is not always true in Chrome.\n    var vertScrollbar = Math.round(width + horizPad) - clientWidth;\n    var horizScrollbar = Math.round(height + vertPad) - clientHeight;\n    // Chrome has a rather weird rounding of \"client\" properties.\n    // E.g. for an element with content width of 314.2px it sometimes gives\n    // the client width of 315px and for the width of 314.7px it may give\n    // 314px. And it doesn't happen all the time. So just ignore this delta\n    // as a non-relevant.\n    if (Math.abs(vertScrollbar) !== 1) {\n      width -= vertScrollbar;\n    }\n    if (Math.abs(horizScrollbar) !== 1) {\n      height -= horizScrollbar;\n    }\n  }\n  return createRectInit(paddings.left, paddings.top, width, height);\n}\n/**\n * Checks whether provided element is an instance of the SVGGraphicsElement.\n *\n * @param target Element to be checked.\n */\nvar isSVGGraphicsElement = (function () {\n  // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\n  // interface.\n  if (typeof SVGGraphicsElement !== 'undefined') {\n    return function (target) {\n      return target instanceof getWindowOf(target).SVGGraphicsElement;\n    };\n  }\n  // If it's so, then check that element is at least an instance of the\n  // SVGElement and that it has the \"getBBox\" method.\n  // eslint-disable-next-line no-extra-parens\n  return function (target) {\n    return (\n      target instanceof getWindowOf(target).SVGElement &&\n      typeof target.getBBox === 'function'\n    );\n  };\n})();\n/**\n * Checks whether provided element is a document element (<html>).\n *\n * @param target Element to be checked.\n */\nfunction isDocumentElement(target) {\n  return target === getWindowOf(target).document.documentElement;\n}\n/**\n * Calculates an appropriate content rectangle for provided html or svg element.\n *\n * @param target Element content rectangle of which needs to be calculated.\n */\nfunction getContentRect(target) {\n  if (!isBrowser) {\n    return emptyRect;\n  }\n  if (isSVGGraphicsElement(target)) {\n    return getSVGContentRect(target);\n  }\n  return getHTMLElementContentRect(target);\n}\n/**\n * Creates rectangle with an interface of the DOMRectReadOnly.\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\n *\n * @param rectInit Object with rectangle's x/y coordinates and\n *     dimensions.\n */\nfunction createReadOnlyRect(_a) {\n  var x = _a.x,\n    y = _a.y,\n    width = _a.width,\n    height = _a.height;\n  // If DOMRectReadOnly is available use it as a prototype for the rectangle.\n  var Constr =\n    typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\n  var rect = Object.create(Constr.prototype);\n  // Rectangle's properties are not writable and non-enumerable.\n  defineConfigurable(rect, {\n    x: x,\n    y: y,\n    width: width,\n    height: height,\n    top: y,\n    right: x + width,\n    bottom: height + y,\n    left: x,\n  });\n  return rect;\n}\n/**\n * Creates DOMRectInit object based on the provided dimensions and the x/y\n * coordinates. Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\n *\n * @param x X coordinate.\n * @param y Y coordinate.\n * @param width Rectangle's width.\n * @param height Rectangle's height.\n */\nfunction createRectInit(x, y, width, height) {\n  return {x: x, y: y, width: width, height: height};\n}\n\n/**\n * Class that is responsible for computations of the content rectangle of\n * provided DOM element and for keeping track of it's changes.\n */\nvar ResizeObservation = /** @class */ (function () {\n  /**\n   * Creates an instance of ResizeObservation.\n   *\n   * @param target Element to be observed.\n   */\n  function ResizeObservation(target) {\n    /**\n     * Broadcasted width of content rectangle.\n     */\n    this.broadcastWidth = 0;\n    /**\n     * Broadcasted height of content rectangle.\n     */\n    this.broadcastHeight = 0;\n    /**\n     * Reference to the last observed content rectangle.\n     */\n    this.contentRect_ = createRectInit(0, 0, 0, 0);\n    this.target = target;\n  }\n  /**\n   * Updates content rectangle and tells whether it's width or height properties\n   * have changed since the last broadcast.\n   */\n  ResizeObservation.prototype.isActive = function () {\n    var rect = getContentRect(this.target);\n    this.contentRect_ = rect;\n    return (\n      rect.width !== this.broadcastWidth || rect.height !== this.broadcastHeight\n    );\n  };\n  /**\n   * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\n   * from the corresponding properties of the last observed content rectangle.\n   *\n   * @returns Last observed content rectangle.\n   */\n  ResizeObservation.prototype.broadcastRect = function () {\n    var rect = this.contentRect_;\n    this.broadcastWidth = rect.width;\n    this.broadcastHeight = rect.height;\n    return rect;\n  };\n  return ResizeObservation;\n})();\n\nvar ResizeObserverEntry = /** @class */ (function () {\n  /**\n   * Creates an instance of ResizeObserverEntry.\n   *\n   * @param target Element that is being observed.\n   * @param rectInit Data of the element's content rectangle.\n   */\n  function ResizeObserverEntry(target, rectInit) {\n    var contentRect = createReadOnlyRect(rectInit);\n    // According to the specification following properties are not writable\n    // and are also not enumerable in the native implementation.\n    //\n    // Property accessors are not being used as they'd require to define a\n    // private WeakMap storage which may cause memory leaks in browsers that\n    // don't support this type of collections.\n    defineConfigurable(this, {target: target, contentRect: contentRect});\n  }\n  return ResizeObserverEntry;\n})();\n\n/**\n * A collection of shims that provide minimal functionality of the ES6\n * collections.\n *\n * These implementations are not meant to be used outside of the ResizeObserver\n * modules as they cover only a limited range of use cases.\n */\n/* eslint-disable require-jsdoc, valid-jsdoc */\nvar MapShim = (function () {\n  if (typeof Map !== 'undefined') {\n    return Map;\n  }\n  /**\n   * Returns index in provided array that matches the specified key.\n   */\n  function getIndex(arr, key) {\n    var result = -1;\n    arr.some(function (entry, index) {\n      if (entry[0] === key) {\n        result = index;\n        return true;\n      }\n      return false;\n    });\n    return result;\n  }\n  return /** @class */ (function () {\n    function class_1() {\n      this.__entries__ = [];\n    }\n    Object.defineProperty(class_1.prototype, 'size', {\n      get: function () {\n        return this.__entries__.length;\n      },\n      enumerable: true,\n      configurable: true,\n    });\n    class_1.prototype.get = function (key) {\n      var _a;\n      var index = getIndex(this.__entries__, key);\n      return (_a = this.__entries__[index]) === null || _a === void 0\n        ? void 0\n        : _a[1];\n    };\n    class_1.prototype.set = function (key, value) {\n      var index = getIndex(this.__entries__, key);\n      if (~index) {\n        this.__entries__[index][1] = value;\n      } else {\n        this.__entries__.push([key, value]);\n      }\n    };\n    class_1.prototype.delete = function (key) {\n      var entries = this.__entries__;\n      var index = getIndex(entries, key);\n      if (~index) {\n        entries.splice(index, 1);\n      }\n    };\n    class_1.prototype.has = function (key) {\n      return !!~getIndex(this.__entries__, key);\n    };\n    class_1.prototype.clear = function () {\n      this.__entries__.splice(0);\n    };\n    class_1.prototype.forEach = function (callback, ctx) {\n      var e_1, _a;\n      if (ctx === void 0) {\n        ctx = null;\n      }\n      try {\n        for (\n          var _b = __values(this.__entries__), _c = _b.next();\n          !_c.done;\n          _c = _b.next()\n        ) {\n          var entry = _c.value;\n          callback.call(ctx, entry[1], entry[0]);\n        }\n      } catch (e_1_1) {\n        e_1 = {error: e_1_1};\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    };\n    return class_1;\n  })();\n})();\n\nvar ResizeObserverSPI = /** @class */ (function () {\n  /**\n   * Creates a new instance of ResizeObserver.\n   *\n   * @param callback Callback function that is invoked when one of the observed\n   *     elements changes it's content dimensions.\n   * @param controller Controller instance which is responsible for the updates\n   *     of observer.\n   * @param callbackCtx Reference to the public ResizeObserver instance which\n   *     will be passed to callback function.\n   */\n  function ResizeObserverSPI(callback, controller, callbackCtx) {\n    /**\n     * Collection of resize observations that have detected changes in dimensions\n     * of elements.\n     */\n    this.activeObservations_ = [];\n    /**\n     * Registry of the ResizeObservation instances.\n     */\n    this.observations_ = new MapShim();\n    if (typeof callback !== 'function') {\n      throw new TypeError(\n        'The callback provided as parameter 1 is not a function.'\n      );\n    }\n    this.callback_ = callback;\n    this.controller_ = controller;\n    this.callbackCtx_ = callbackCtx;\n  }\n  /**\n   * Starts observing provided element.\n   *\n   * @param target Element to be observed.\n   */\n  ResizeObserverSPI.prototype.observe = function (target) {\n    if (target === undefined) {\n      throw new TypeError('1 argument required, but only 0 present.');\n    }\n    // Do nothing if current environment doesn't have the Element interface.\n    if (typeof Element === 'undefined' || !(Element instanceof Object)) {\n      return;\n    }\n    if (!(target instanceof getWindowOf(target).Element)) {\n      throw new TypeError('parameter 1 is not of type \"Element\".');\n    }\n    var observations = this.observations_;\n    // Do nothing if element is already being observed.\n    if (observations.has(target)) {\n      return;\n    }\n    observations.set(target, new ResizeObservation(target));\n    this.controller_.addObserver(this);\n    // Force the update of observations.\n    this.controller_.refresh();\n  };\n  /**\n   * Stops observing provided element.\n   *\n   * @param target Element to stop observing.\n   */\n  ResizeObserverSPI.prototype.unobserve = function (target) {\n    if (target === undefined) {\n      throw new TypeError('1 argument required, but only 0 present.');\n    }\n    // Do nothing if current environment doesn't have the Element interface.\n    if (typeof Element === 'undefined' || !(Element instanceof Object)) {\n      return;\n    }\n    if (!(target instanceof getWindowOf(target).Element)) {\n      throw new TypeError('parameter 1 is not of type \"Element\".');\n    }\n    var observations = this.observations_;\n    // Do nothing if element is not being observed.\n    if (!observations.has(target)) {\n      return;\n    }\n    observations.delete(target);\n    if (!observations.size) {\n      this.controller_.removeObserver(this);\n    }\n  };\n  /**\n   * Stops observing all elements.\n   */\n  ResizeObserverSPI.prototype.disconnect = function () {\n    this.clearActive();\n    this.observations_.clear();\n    this.controller_.removeObserver(this);\n  };\n  /**\n   * Collects observation instances the associated element of which has changed\n   * it's content rectangle.\n   */\n  ResizeObserverSPI.prototype.gatherActive = function () {\n    var _this = this;\n    this.clearActive();\n    this.observations_.forEach(function (observation) {\n      if (observation.isActive()) {\n        _this.activeObservations_.push(observation);\n      }\n    });\n  };\n  /**\n   * Invokes initial callback function with a list of ResizeObserverEntry\n   * instances collected from active resize observations.\n   */\n  ResizeObserverSPI.prototype.broadcastActive = function () {\n    // Do nothing if observer doesn't have active observations.\n    if (!this.hasActive()) {\n      return;\n    }\n    var ctx = this.callbackCtx_;\n    // Create ResizeObserverEntry instance for every active observation.\n    var entries = this.activeObservations_.map(function (observation) {\n      return new ResizeObserverEntry(\n        observation.target,\n        observation.broadcastRect()\n      );\n    });\n    this.callback_.call(ctx, entries, ctx);\n    this.clearActive();\n  };\n  /**\n   * Clears the collection of active observations.\n   */\n  ResizeObserverSPI.prototype.clearActive = function () {\n    this.activeObservations_.splice(0);\n  };\n  /**\n   * Tells whether observer has active observations.\n   */\n  ResizeObserverSPI.prototype.hasActive = function () {\n    return this.activeObservations_.length > 0;\n  };\n  return ResizeObserverSPI;\n})();\n\n/**\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\n * exposing only those methods and properties that are defined in the spec.\n */\nvar ResizeObserver = /** @class */ (function () {\n  /**\n   * Creates a new instance of ResizeObserver.\n   *\n   * @param callback Callback that is invoked when dimensions of the observed\n   *     elements change.\n   */\n  function ResizeObserver(callback) {\n    if (!(this instanceof ResizeObserver)) {\n      throw new TypeError('Cannot call a class as a function.');\n    }\n    if (!arguments.length) {\n      throw new TypeError('1 argument required, but only 0 present.');\n    }\n    var controller = ResizeObserverController.getInstance();\n    this.observer_ = new ResizeObserverSPI(callback, controller, this);\n  }\n  ResizeObserver.prototype.observe = function (target) {\n    this.observer_.observe(target);\n  };\n  ResizeObserver.prototype.unobserve = function (target) {\n    this.observer_.unobserve(target);\n  };\n  ResizeObserver.prototype.disconnect = function () {\n    this.observer_.disconnect();\n  };\n  return ResizeObserver;\n})();\n\nvar index = (function () {\n  // Export existing implementation if available.\n  if (typeof global$1.ResizeObserver !== 'undefined') {\n    return global$1.ResizeObserver;\n  }\n  return ResizeObserver;\n})();\n\nexport default index;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}