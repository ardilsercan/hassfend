{"ast":null,"code":"import memoizeOne from \"memoize-one\";\nimport \"../../resources/intl-polyfill\";\nimport { formatDateNumeric } from \"./format_date\";\nimport { formatTime } from \"./format_time\";\nimport { resolveTimeZone } from \"./resolve-time-zone\";\nimport { useAmPm } from \"./use_am_pm\";\n\n// August 9, 2021, 8:23 AM\nexport const formatDateTime = (dateObj, locale, config) => formatDateTimeMem(locale, config.time_zone).format(dateObj);\nconst formatDateTimeMem = memoizeOne((locale, serverTimeZone) => new Intl.DateTimeFormat(locale.language, {\n  year: \"numeric\",\n  month: \"long\",\n  day: \"numeric\",\n  hour: useAmPm(locale) ? \"numeric\" : \"2-digit\",\n  minute: \"2-digit\",\n  hourCycle: useAmPm(locale) ? \"h12\" : \"h23\",\n  timeZone: resolveTimeZone(locale.time_zone, serverTimeZone)\n}));\n\n// Aug 9, 2021, 8:23 AM\nexport const formatShortDateTimeWithYear = (dateObj, locale, config) => formatShortDateTimeWithYearMem(locale, config.time_zone).format(dateObj);\nconst formatShortDateTimeWithYearMem = memoizeOne((locale, serverTimeZone) => new Intl.DateTimeFormat(locale.language, {\n  year: \"numeric\",\n  month: \"short\",\n  day: \"numeric\",\n  hour: useAmPm(locale) ? \"numeric\" : \"2-digit\",\n  minute: \"2-digit\",\n  hourCycle: useAmPm(locale) ? \"h12\" : \"h23\",\n  timeZone: resolveTimeZone(locale.time_zone, serverTimeZone)\n}));\n\n// Aug 9, 8:23 AM\nexport const formatShortDateTime = (dateObj, locale, config) => formatShortDateTimeMem(locale, config.time_zone).format(dateObj);\nconst formatShortDateTimeMem = memoizeOne((locale, serverTimeZone) => new Intl.DateTimeFormat(locale.language, {\n  month: \"short\",\n  day: \"numeric\",\n  hour: useAmPm(locale) ? \"numeric\" : \"2-digit\",\n  minute: \"2-digit\",\n  hourCycle: useAmPm(locale) ? \"h12\" : \"h23\",\n  timeZone: resolveTimeZone(locale.time_zone, serverTimeZone)\n}));\n\n// August 9, 2021, 8:23:15 AM\nexport const formatDateTimeWithSeconds = (dateObj, locale, config) => formatDateTimeWithSecondsMem(locale, config.time_zone).format(dateObj);\nconst formatDateTimeWithSecondsMem = memoizeOne((locale, serverTimeZone) => new Intl.DateTimeFormat(locale.language, {\n  year: \"numeric\",\n  month: \"long\",\n  day: \"numeric\",\n  hour: useAmPm(locale) ? \"numeric\" : \"2-digit\",\n  minute: \"2-digit\",\n  second: \"2-digit\",\n  hourCycle: useAmPm(locale) ? \"h12\" : \"h23\",\n  timeZone: resolveTimeZone(locale.time_zone, serverTimeZone)\n}));\n\n// 9/8/2021, 8:23 AM\nexport const formatDateTimeNumeric = (dateObj, locale, config) => `${formatDateNumeric(dateObj, locale, config)}, ${formatTime(dateObj, locale, config)}`;","map":{"version":3,"names":["memoizeOne","formatDateNumeric","formatTime","resolveTimeZone","useAmPm","formatDateTime","dateObj","locale","config","formatDateTimeMem","time_zone","format","serverTimeZone","Intl","DateTimeFormat","language","year","month","day","hour","minute","hourCycle","timeZone","formatShortDateTimeWithYear","formatShortDateTimeWithYearMem","formatShortDateTime","formatShortDateTimeMem","formatDateTimeWithSeconds","formatDateTimeWithSecondsMem","second","formatDateTimeNumeric"],"sources":["/workspaces/frontend/src/common/datetime/format_date_time.ts"],"sourcesContent":["import { HassConfig } from \"home-assistant-js-websocket\";\nimport memoizeOne from \"memoize-one\";\nimport { FrontendLocaleData } from \"../../data/translation\";\nimport \"../../resources/intl-polyfill\";\nimport { formatDateNumeric } from \"./format_date\";\nimport { formatTime } from \"./format_time\";\nimport { resolveTimeZone } from \"./resolve-time-zone\";\nimport { useAmPm } from \"./use_am_pm\";\n\n// August 9, 2021, 8:23 AM\nexport const formatDateTime = (\n  dateObj: Date,\n  locale: FrontendLocaleData,\n  config: HassConfig\n) => formatDateTimeMem(locale, config.time_zone).format(dateObj);\n\nconst formatDateTimeMem = memoizeOne(\n  (locale: FrontendLocaleData, serverTimeZone: string) =>\n    new Intl.DateTimeFormat(locale.language, {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n      hour: useAmPm(locale) ? \"numeric\" : \"2-digit\",\n      minute: \"2-digit\",\n      hourCycle: useAmPm(locale) ? \"h12\" : \"h23\",\n      timeZone: resolveTimeZone(locale.time_zone, serverTimeZone),\n    })\n);\n\n// Aug 9, 2021, 8:23 AM\nexport const formatShortDateTimeWithYear = (\n  dateObj: Date,\n  locale: FrontendLocaleData,\n  config: HassConfig\n) => formatShortDateTimeWithYearMem(locale, config.time_zone).format(dateObj);\n\nconst formatShortDateTimeWithYearMem = memoizeOne(\n  (locale: FrontendLocaleData, serverTimeZone: string) =>\n    new Intl.DateTimeFormat(locale.language, {\n      year: \"numeric\",\n      month: \"short\",\n      day: \"numeric\",\n      hour: useAmPm(locale) ? \"numeric\" : \"2-digit\",\n      minute: \"2-digit\",\n      hourCycle: useAmPm(locale) ? \"h12\" : \"h23\",\n      timeZone: resolveTimeZone(locale.time_zone, serverTimeZone),\n    })\n);\n\n// Aug 9, 8:23 AM\nexport const formatShortDateTime = (\n  dateObj: Date,\n  locale: FrontendLocaleData,\n  config: HassConfig\n) => formatShortDateTimeMem(locale, config.time_zone).format(dateObj);\n\nconst formatShortDateTimeMem = memoizeOne(\n  (locale: FrontendLocaleData, serverTimeZone: string) =>\n    new Intl.DateTimeFormat(locale.language, {\n      month: \"short\",\n      day: \"numeric\",\n      hour: useAmPm(locale) ? \"numeric\" : \"2-digit\",\n      minute: \"2-digit\",\n      hourCycle: useAmPm(locale) ? \"h12\" : \"h23\",\n      timeZone: resolveTimeZone(locale.time_zone, serverTimeZone),\n    })\n);\n\n// August 9, 2021, 8:23:15 AM\nexport const formatDateTimeWithSeconds = (\n  dateObj: Date,\n  locale: FrontendLocaleData,\n  config: HassConfig\n) => formatDateTimeWithSecondsMem(locale, config.time_zone).format(dateObj);\n\nconst formatDateTimeWithSecondsMem = memoizeOne(\n  (locale: FrontendLocaleData, serverTimeZone: string) =>\n    new Intl.DateTimeFormat(locale.language, {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n      hour: useAmPm(locale) ? \"numeric\" : \"2-digit\",\n      minute: \"2-digit\",\n      second: \"2-digit\",\n      hourCycle: useAmPm(locale) ? \"h12\" : \"h23\",\n      timeZone: resolveTimeZone(locale.time_zone, serverTimeZone),\n    })\n);\n\n// 9/8/2021, 8:23 AM\nexport const formatDateTimeNumeric = (\n  dateObj: Date,\n  locale: FrontendLocaleData,\n  config: HassConfig\n) =>\n  `${formatDateNumeric(dateObj, locale, config)}, ${formatTime(\n    dateObj,\n    locale,\n    config\n  )}`;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}