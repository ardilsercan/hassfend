{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport { css, html, LitElement } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport { roundWithOneDecimal } from \"../util/calculate\";\nimport \"./ha-bar\";\nimport \"./ha-settings-row\";\nlet HaMetric = _decorate([customElement(\"ha-metric\")], function (_initialize, _LitElement) {\n  class HaMetric extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaMetric,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        type: Number\n      })],\n      key: \"value\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: String\n      })],\n      key: \"heading\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: String\n      })],\n      key: \"tooltip\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var _this$tooltip;\n        const roundedValue = roundWithOneDecimal(this.value);\n        return html`\n      <ha-settings-row>\n        <span slot=\"heading\"> ${this.heading} </span>\n        <div slot=\"description\" .title=${(_this$tooltip = this.tooltip) !== null && _this$tooltip !== void 0 ? _this$tooltip : \"\"}>\n          <span class=\"value\"> ${roundedValue} % </span>\n          <ha-bar\n            class=${classMap({\n          \"target-warning\": roundedValue > 50,\n          \"target-critical\": roundedValue > 85\n        })}\n            .value=${this.value}\n          ></ha-bar>\n        </div>\n      </ha-settings-row>\n    `;\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css`\n      ha-settings-row {\n        padding: 0;\n        height: 54px;\n        width: 100%;\n      }\n      ha-settings-row > div[slot=\"description\"] {\n        white-space: normal;\n        color: var(--secondary-text-color);\n        display: flex;\n        justify-content: space-between;\n      }\n      ha-bar {\n        --ha-bar-primary-color: var(\n          --metric-bar-ok-color,\n          var(--success-color)\n        );\n      }\n      .target-warning {\n        --ha-bar-primary-color: var(\n          --metric-bar-warning-color,\n          var(--warning-color)\n        );\n      }\n      .target-critical {\n        --ha-bar-primary-color: var(\n          --metric-bar-critical-color,\n          var(--error-color)\n        );\n      }\n      .value {\n        width: 48px;\n        padding-right: 4px;\n        padding-inline-end: 4px;\n        padding-inline-start: initial;\n        flex-shrink: 0;\n      }\n    `;\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","customElement","property","classMap","roundWithOneDecimal","HaMetric","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","type","Number","key","value","String","render","_this$tooltip","roundedValue","heading","tooltip","static","styles"],"sources":["/Users/sercanardil/Desktop/frontend/src/components/ha-metric.ts"],"sourcesContent":["import { css, CSSResultGroup, html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport { roundWithOneDecimal } from \"../util/calculate\";\nimport \"./ha-bar\";\nimport \"./ha-settings-row\";\n\n@customElement(\"ha-metric\")\nclass HaMetric extends LitElement {\n  @property({ type: Number }) public value!: number;\n\n  @property({ type: String }) public heading!: string;\n\n  @property({ type: String }) public tooltip?: string;\n\n  protected render(): TemplateResult {\n    const roundedValue = roundWithOneDecimal(this.value);\n    return html`\n      <ha-settings-row>\n        <span slot=\"heading\"> ${this.heading} </span>\n        <div slot=\"description\" .title=${this.tooltip ?? \"\"}>\n          <span class=\"value\"> ${roundedValue} % </span>\n          <ha-bar\n            class=${classMap({\n              \"target-warning\": roundedValue > 50,\n              \"target-critical\": roundedValue > 85,\n            })}\n            .value=${this.value}\n          ></ha-bar>\n        </div>\n      </ha-settings-row>\n    `;\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      ha-settings-row {\n        padding: 0;\n        height: 54px;\n        width: 100%;\n      }\n      ha-settings-row > div[slot=\"description\"] {\n        white-space: normal;\n        color: var(--secondary-text-color);\n        display: flex;\n        justify-content: space-between;\n      }\n      ha-bar {\n        --ha-bar-primary-color: var(\n          --metric-bar-ok-color,\n          var(--success-color)\n        );\n      }\n      .target-warning {\n        --ha-bar-primary-color: var(\n          --metric-bar-warning-color,\n          var(--warning-color)\n        );\n      }\n      .target-critical {\n        --ha-bar-primary-color: var(\n          --metric-bar-critical-color,\n          var(--error-color)\n        );\n      }\n      .value {\n        width: 48px;\n        padding-right: 4px;\n        padding-inline-end: 4px;\n        padding-inline-start: initial;\n        flex-shrink: 0;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-metric\": HaMetric;\n  }\n}\n"],"mappings":";AAAA,SAASA,GAAG,EAAkBC,IAAI,EAAEC,UAAU,QAAwB,KAAK;AAC3E,SAASC,aAAa,EAAEC,QAAQ,QAAQ,gBAAgB;AACxD,SAASC,QAAQ,QAAQ,0BAA0B;AACnD,SAASC,mBAAmB,QAAQ,mBAAmB;AACvD,OAAO,UAAU;AACjB,OAAO,mBAAmB;AAAC,IAGrBC,QAAQ,GAAAC,SAAA,EADbL,aAAa,CAAC,WAAW,CAAC,aAAAM,WAAA,EAAAC,WAAA;EAA3B,MACMH,QAAQ,SAAAG,WAAA,CAAoB;IAAAC,YAAA,GAAAC,IAAA;MAAA,SAAAA,IAAA;MAAAH,WAAA;IAAA;EAkElC;EAAC;IAAAI,CAAA,EAlEKN,QAAQ;IAAAO,CAAA;MAAAC,IAAA;MAAAC,UAAA,GACXZ,QAAQ,CAAC;QAAEa,IAAI,EAAEC;MAAO,CAAC,CAAC;MAAAC,GAAA;MAAAC,KAAA;IAAA;MAAAL,IAAA;MAAAC,UAAA,GAE1BZ,QAAQ,CAAC;QAAEa,IAAI,EAAEI;MAAO,CAAC,CAAC;MAAAF,GAAA;MAAAC,KAAA;IAAA;MAAAL,IAAA;MAAAC,UAAA,GAE1BZ,QAAQ,CAAC;QAAEa,IAAI,EAAEI;MAAO,CAAC,CAAC;MAAAF,GAAA;MAAAC,KAAA;IAAA;MAAAL,IAAA;MAAAI,GAAA;MAAAC,KAAA,EAE3B,SAAAE,OAAA,EAAmC;QAAA,IAAAC,aAAA;QACjC,MAAMC,YAAY,GAAGlB,mBAAmB,CAAC,IAAI,CAACc,KAAK,CAAC;QACpD,OAAOnB,IAAK;AAChB;AACA,gCAAgC,IAAI,CAACwB,OAAQ;AAC7C,yCAAuC,CAAAF,aAAA,GAAE,IAAI,CAACG,OAAO,cAAAH,aAAA,cAAAA,aAAA,GAAI,EAAG;AAC5D,iCAAiCC,YAAa;AAC9C;AACA,oBAAoBnB,QAAQ,CAAC;UACf,gBAAgB,EAAEmB,YAAY,GAAG,EAAE;UACnC,iBAAiB,EAAEA,YAAY,GAAG;QACpC,CAAC,CAAE;AACf,qBAAqB,IAAI,CAACJ,KAAM;AAChC;AACA;AACA;AACA,KAAK;MACH;IAAC;MAAAL,IAAA;MAAAY,MAAA;MAAAR,GAAA;MAAAC,KAAA,EAED,SAAAQ,OAAA,EAAoC;QAClC,OAAO5B,GAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;MACH;IAAC;EAAA;AAAA,GAjEoBE,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}