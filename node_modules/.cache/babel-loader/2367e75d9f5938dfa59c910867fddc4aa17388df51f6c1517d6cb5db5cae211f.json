{"ast":null,"code":"import { extractSearchParam } from \"../url/search-params\";\nconst storage = window.localStorage || {};\n// So that core.js and main app hit same shared object.\nlet tokenCache = window.__tokenCache;\nif (!tokenCache) {\n  tokenCache = window.__tokenCache = {\n    tokens: undefined,\n    writeEnabled: undefined\n  };\n}\nexport function askWrite() {\n  return tokenCache.tokens !== undefined && tokenCache.writeEnabled === undefined;\n}\nexport function saveTokens(tokens) {\n  tokenCache.tokens = tokens;\n  if (!tokenCache.writeEnabled && extractSearchParam(\"storeToken\") === \"true\") {\n    tokenCache.writeEnabled = true;\n  }\n  if (tokenCache.writeEnabled) {\n    try {\n      storage.hassTokens = JSON.stringify(tokens);\n    } catch (err) {\n      // write failed, ignore it. Happens if storage is full or private mode.\n    }\n  }\n}\nexport function enableWrite() {\n  tokenCache.writeEnabled = true;\n  if (tokenCache.tokens) {\n    saveTokens(tokenCache.tokens);\n  }\n}\nexport function loadTokens() {\n  if (tokenCache.tokens === undefined) {\n    try {\n      // Delete the old token cache.\n      delete storage.tokens;\n      const tokens = storage.hassTokens;\n      if (tokens) {\n        tokenCache.tokens = JSON.parse(tokens);\n        tokenCache.writeEnabled = true;\n      } else {\n        tokenCache.tokens = null;\n      }\n    } catch (err) {\n      tokenCache.tokens = null;\n    }\n  }\n  return tokenCache.tokens;\n}","map":{"version":3,"names":["extractSearchParam","storage","window","localStorage","tokenCache","__tokenCache","tokens","undefined","writeEnabled","askWrite","saveTokens","hassTokens","JSON","stringify","err","enableWrite","loadTokens","parse"],"sources":["/workspaces/frontend/src/common/auth/token_storage.ts"],"sourcesContent":["import { AuthData } from \"home-assistant-js-websocket\";\nimport { extractSearchParam } from \"../url/search-params\";\n\nconst storage = window.localStorage || {};\n\ndeclare global {\n  interface Window {\n    __tokenCache: {\n      // undefined: we haven't loaded yet\n      // null: none stored\n      tokens?: AuthData | null;\n      writeEnabled?: boolean;\n    };\n  }\n}\n\n// So that core.js and main app hit same shared object.\nlet tokenCache = window.__tokenCache;\nif (!tokenCache) {\n  tokenCache = window.__tokenCache = {\n    tokens: undefined,\n    writeEnabled: undefined,\n  };\n}\n\nexport function askWrite() {\n  return (\n    tokenCache.tokens !== undefined && tokenCache.writeEnabled === undefined\n  );\n}\n\nexport function saveTokens(tokens: AuthData | null) {\n  tokenCache.tokens = tokens;\n\n  if (!tokenCache.writeEnabled && extractSearchParam(\"storeToken\") === \"true\") {\n    tokenCache.writeEnabled = true;\n  }\n\n  if (tokenCache.writeEnabled) {\n    try {\n      storage.hassTokens = JSON.stringify(tokens);\n    } catch (err: any) {\n      // write failed, ignore it. Happens if storage is full or private mode.\n    }\n  }\n}\n\nexport function enableWrite() {\n  tokenCache.writeEnabled = true;\n  if (tokenCache.tokens) {\n    saveTokens(tokenCache.tokens);\n  }\n}\nexport function loadTokens() {\n  if (tokenCache.tokens === undefined) {\n    try {\n      // Delete the old token cache.\n      delete storage.tokens;\n      const tokens = storage.hassTokens;\n      if (tokens) {\n        tokenCache.tokens = JSON.parse(tokens);\n        tokenCache.writeEnabled = true;\n      } else {\n        tokenCache.tokens = null;\n      }\n    } catch (err: any) {\n      tokenCache.tokens = null;\n    }\n  }\n  return tokenCache.tokens;\n}\n"],"mappings":"AACA,SAASA,kBAAkB,QAAQ,sBAAsB;AAEzD,MAAMC,OAAO,GAAGC,MAAM,CAACC,YAAY,IAAI,CAAC,CAAC;AAazC;AACA,IAAIC,UAAU,GAAGF,MAAM,CAACG,YAAY;AACpC,IAAI,CAACD,UAAU,EAAE;EACfA,UAAU,GAAGF,MAAM,CAACG,YAAY,GAAG;IACjCC,MAAM,EAAEC,SAAS;IACjBC,YAAY,EAAED;EAChB,CAAC;AACH;AAEA,OAAO,SAASE,QAAQA,CAAA,EAAG;EACzB,OACEL,UAAU,CAACE,MAAM,KAAKC,SAAS,IAAIH,UAAU,CAACI,YAAY,KAAKD,SAAS;AAE5E;AAEA,OAAO,SAASG,UAAUA,CAACJ,MAAuB,EAAE;EAClDF,UAAU,CAACE,MAAM,GAAGA,MAAM;EAE1B,IAAI,CAACF,UAAU,CAACI,YAAY,IAAIR,kBAAkB,CAAC,YAAY,CAAC,KAAK,MAAM,EAAE;IAC3EI,UAAU,CAACI,YAAY,GAAG,IAAI;EAChC;EAEA,IAAIJ,UAAU,CAACI,YAAY,EAAE;IAC3B,IAAI;MACFP,OAAO,CAACU,UAAU,GAAGC,IAAI,CAACC,SAAS,CAACP,MAAM,CAAC;IAC7C,CAAC,CAAC,OAAOQ,GAAQ,EAAE;MACjB;IAAA;EAEJ;AACF;AAEA,OAAO,SAASC,WAAWA,CAAA,EAAG;EAC5BX,UAAU,CAACI,YAAY,GAAG,IAAI;EAC9B,IAAIJ,UAAU,CAACE,MAAM,EAAE;IACrBI,UAAU,CAACN,UAAU,CAACE,MAAM,CAAC;EAC/B;AACF;AACA,OAAO,SAASU,UAAUA,CAAA,EAAG;EAC3B,IAAIZ,UAAU,CAACE,MAAM,KAAKC,SAAS,EAAE;IACnC,IAAI;MACF;MACA,OAAON,OAAO,CAACK,MAAM;MACrB,MAAMA,MAAM,GAAGL,OAAO,CAACU,UAAU;MACjC,IAAIL,MAAM,EAAE;QACVF,UAAU,CAACE,MAAM,GAAGM,IAAI,CAACK,KAAK,CAACX,MAAM,CAAC;QACtCF,UAAU,CAACI,YAAY,GAAG,IAAI;MAChC,CAAC,MAAM;QACLJ,UAAU,CAACE,MAAM,GAAG,IAAI;MAC1B;IACF,CAAC,CAAC,OAAOQ,GAAQ,EAAE;MACjBV,UAAU,CAACE,MAAM,GAAG,IAAI;IAC1B;EACF;EACA,OAAOF,UAAU,CAACE,MAAM;AAC1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}