{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport { css, html, LitElement } from \"lit\";\nimport { customElement, property, query } from \"lit/decorators\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport \"../ha-slider\";\nexport let HaFormInteger = _decorate([customElement(\"ha-form-integer\")], function (_initialize, _LitElement) {\n  class HaFormInteger extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaFormInteger,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"localize\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"schema\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"data\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"label\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"helper\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"disabled\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [query(\"ha-textfield ha-slider\")],\n      key: \"_input\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_lastValue\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"focus\",\n      value: function focus() {\n        if (this._input) {\n          this._input.focus();\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var _this$schema$descript, _this$localize;\n        if (this.schema.valueMin !== undefined && this.schema.valueMax !== undefined && this.schema.valueMax - this.schema.valueMin < 256) {\n          return html`\n        <div>\n          ${this.label}\n          <div class=\"flex\">\n            ${!this.schema.required ? html`\n                  <ha-checkbox\n                    @change=${this._handleCheckboxChange}\n                    .checked=${this.data !== undefined}\n                    .disabled=${this.disabled}\n                  ></ha-checkbox>\n                ` : \"\"}\n            <ha-slider\n              labeled\n              .value=${this._value}\n              .min=${this.schema.valueMin}\n              .max=${this.schema.valueMax}\n              .disabled=${this.disabled || this.data === undefined && !this.schema.required}\n              @change=${this._valueChanged}\n            ></ha-slider>\n          </div>\n          ${this.helper ? html`<ha-input-helper-text>${this.helper}</ha-input-helper-text>` : \"\"}\n        </div>\n      `;\n        }\n        return html`\n      <ha-textfield\n        type=\"number\"\n        inputMode=\"numeric\"\n        .label=${this.label}\n        .helper=${this.helper}\n        helperPersistent\n        .value=${this.data !== undefined ? this.data : \"\"}\n        .disabled=${this.disabled}\n        .required=${this.schema.required}\n        .autoValidate=${this.schema.required}\n        .suffix=${(_this$schema$descript = this.schema.description) === null || _this$schema$descript === void 0 ? void 0 : _this$schema$descript.suffix}\n        .validationMessage=${this.schema.required ? (_this$localize = this.localize) === null || _this$localize === void 0 ? void 0 : _this$localize.call(this, \"ui.common.error_required\") : undefined}\n        @input=${this._valueChanged}\n      ></ha-textfield>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"updated\",\n      value: function updated(changedProps) {\n        if (changedProps.has(\"schema\")) {\n          this.toggleAttribute(\"own-margin\", !(\"valueMin\" in this.schema && \"valueMax\" in this.schema) && !!this.schema.required);\n        }\n      }\n    }, {\n      kind: \"get\",\n      key: \"_value\",\n      value: function _value() {\n        var _this$schema$descript2, _this$schema$descript3;\n        if (this.data !== undefined) {\n          return this.data;\n        }\n        if (!this.schema.required) {\n          return this.schema.valueMin || 0;\n        }\n        return ((_this$schema$descript2 = this.schema.description) === null || _this$schema$descript2 === void 0 ? void 0 : _this$schema$descript2.suggested_value) !== undefined && ((_this$schema$descript3 = this.schema.description) === null || _this$schema$descript3 === void 0 ? void 0 : _this$schema$descript3.suggested_value) !== null || this.schema.default || this.schema.valueMin || 0;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleCheckboxChange\",\n      value: function _handleCheckboxChange(ev) {\n        const checked = ev.target.checked;\n        let value;\n        if (checked) {\n          for (const candidate of [this._lastValue, (_this$schema$descript4 = this.schema.description) === null || _this$schema$descript4 === void 0 ? void 0 : _this$schema$descript4.suggested_value, this.schema.default, 0]) {\n            var _this$schema$descript4;\n            if (candidate !== undefined) {\n              value = candidate;\n              break;\n            }\n          }\n        } else {\n          // We track last value so user can disable and enable a field without losing\n          // their value.\n          this._lastValue = this.data;\n        }\n        fireEvent(this, \"value-changed\", {\n          value\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_valueChanged\",\n      value: function _valueChanged(ev) {\n        const source = ev.target;\n        const rawValue = source.value;\n        let value;\n        if (rawValue !== \"\") {\n          value = parseInt(String(rawValue));\n        }\n        if (this.data === value) {\n          // parseInt will drop invalid text at the end, in that case update textfield\n          const newRawValue = value === undefined ? \"\" : String(value);\n          if (source.value !== newRawValue) {\n            source.value = newRawValue;\n          }\n          return;\n        }\n        fireEvent(this, \"value-changed\", {\n          value\n        });\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css`\n      :host([own-margin]) {\n        margin-bottom: 5px;\n      }\n      .flex {\n        display: flex;\n      }\n      ha-slider {\n        flex: 1;\n      }\n      ha-textfield {\n        display: block;\n      }\n    `;\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","customElement","property","query","fireEvent","HaFormInteger","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","type","Boolean","focus","_input","render","_this$schema$descript","_this$localize","schema","valueMin","undefined","valueMax","label","required","_handleCheckboxChange","data","disabled","_value","_valueChanged","helper","description","suffix","localize","call","updated","changedProps","has","toggleAttribute","_this$schema$descript2","_this$schema$descript3","suggested_value","default","ev","checked","target","candidate","_lastValue","_this$schema$descript4","source","rawValue","parseInt","String","newRawValue","static","styles"],"sources":["/Users/sercanardil/Desktop/frontend/src/components/ha-form/ha-form-integer.ts"],"sourcesContent":["import {\n  css,\n  CSSResultGroup,\n  html,\n  LitElement,\n  PropertyValues,\n  TemplateResult,\n} from \"lit\";\nimport { customElement, property, query } from \"lit/decorators\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { HaCheckbox } from \"../ha-checkbox\";\nimport \"../ha-slider\";\nimport { HaTextField } from \"../ha-textfield\";\nimport { HaFormElement, HaFormIntegerData, HaFormIntegerSchema } from \"./types\";\nimport { LocalizeFunc } from \"../../common/translations/localize\";\n\n@customElement(\"ha-form-integer\")\nexport class HaFormInteger extends LitElement implements HaFormElement {\n  @property({ attribute: false }) public localize?: LocalizeFunc;\n\n  @property({ attribute: false }) public schema!: HaFormIntegerSchema;\n\n  @property({ attribute: false }) public data?: HaFormIntegerData;\n\n  @property() public label?: string;\n\n  @property() public helper?: string;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @query(\"ha-textfield ha-slider\") private _input?:\n    | HaTextField\n    | HTMLInputElement;\n\n  private _lastValue?: HaFormIntegerData;\n\n  public focus() {\n    if (this._input) {\n      this._input.focus();\n    }\n  }\n\n  protected render(): TemplateResult {\n    if (\n      this.schema.valueMin !== undefined &&\n      this.schema.valueMax !== undefined &&\n      this.schema.valueMax - this.schema.valueMin < 256\n    ) {\n      return html`\n        <div>\n          ${this.label}\n          <div class=\"flex\">\n            ${!this.schema.required\n              ? html`\n                  <ha-checkbox\n                    @change=${this._handleCheckboxChange}\n                    .checked=${this.data !== undefined}\n                    .disabled=${this.disabled}\n                  ></ha-checkbox>\n                `\n              : \"\"}\n            <ha-slider\n              labeled\n              .value=${this._value}\n              .min=${this.schema.valueMin}\n              .max=${this.schema.valueMax}\n              .disabled=${this.disabled ||\n              (this.data === undefined && !this.schema.required)}\n              @change=${this._valueChanged}\n            ></ha-slider>\n          </div>\n          ${this.helper\n            ? html`<ha-input-helper-text>${this.helper}</ha-input-helper-text>`\n            : \"\"}\n        </div>\n      `;\n    }\n\n    return html`\n      <ha-textfield\n        type=\"number\"\n        inputMode=\"numeric\"\n        .label=${this.label}\n        .helper=${this.helper}\n        helperPersistent\n        .value=${this.data !== undefined ? this.data : \"\"}\n        .disabled=${this.disabled}\n        .required=${this.schema.required}\n        .autoValidate=${this.schema.required}\n        .suffix=${this.schema.description?.suffix}\n        .validationMessage=${this.schema.required\n          ? this.localize?.(\"ui.common.error_required\")\n          : undefined}\n        @input=${this._valueChanged}\n      ></ha-textfield>\n    `;\n  }\n\n  protected updated(changedProps: PropertyValues): void {\n    if (changedProps.has(\"schema\")) {\n      this.toggleAttribute(\n        \"own-margin\",\n        !(\"valueMin\" in this.schema && \"valueMax\" in this.schema) &&\n          !!this.schema.required\n      );\n    }\n  }\n\n  private get _value() {\n    if (this.data !== undefined) {\n      return this.data;\n    }\n\n    if (!this.schema.required) {\n      return this.schema.valueMin || 0;\n    }\n\n    return (\n      (this.schema.description?.suggested_value !== undefined &&\n        this.schema.description?.suggested_value !== null) ||\n      this.schema.default ||\n      this.schema.valueMin ||\n      0\n    );\n  }\n\n  private _handleCheckboxChange(ev: Event) {\n    const checked = (ev.target as HaCheckbox).checked;\n    let value: HaFormIntegerData | undefined;\n    if (checked) {\n      for (const candidate of [\n        this._lastValue,\n        this.schema.description?.suggested_value as HaFormIntegerData,\n        this.schema.default,\n        0,\n      ]) {\n        if (candidate !== undefined) {\n          value = candidate;\n          break;\n        }\n      }\n    } else {\n      // We track last value so user can disable and enable a field without losing\n      // their value.\n      this._lastValue = this.data;\n    }\n    fireEvent(this, \"value-changed\", {\n      value,\n    });\n  }\n\n  private _valueChanged(ev: Event) {\n    const source = ev.target as HaTextField | HTMLInputElement;\n    const rawValue = source.value;\n\n    let value: number | undefined;\n\n    if (rawValue !== \"\") {\n      value = parseInt(String(rawValue));\n    }\n\n    if (this.data === value) {\n      // parseInt will drop invalid text at the end, in that case update textfield\n      const newRawValue = value === undefined ? \"\" : String(value);\n      if (source.value !== newRawValue) {\n        source.value = newRawValue;\n      }\n      return;\n    }\n\n    fireEvent(this, \"value-changed\", {\n      value,\n    });\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      :host([own-margin]) {\n        margin-bottom: 5px;\n      }\n      .flex {\n        display: flex;\n      }\n      ha-slider {\n        flex: 1;\n      }\n      ha-textfield {\n        display: block;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-form-integer\": HaFormInteger;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}