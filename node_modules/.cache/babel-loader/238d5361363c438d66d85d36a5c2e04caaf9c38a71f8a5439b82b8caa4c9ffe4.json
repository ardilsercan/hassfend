{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport \"@material/mwc-button\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, state } from \"lit/decorators\";\nimport { formatDateTime } from \"../../../../common/datetime/format_date_time\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { createCloseHeading } from \"../../../../components/ha-dialog\";\nimport { haStyleDialog } from \"../../../../resources/styles\";\nlet DialogCloudCertificate = _decorate([customElement(\"dialog-cloud-certificate\")], function (_initialize, _LitElement) {\n  class DialogCloudCertificate extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: DialogCloudCertificate,\n    d: [{\n      kind: \"field\",\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_params\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"showDialog\",\n      value: function showDialog(params) {\n        this._params = params;\n      }\n    }, {\n      kind: \"method\",\n      key: \"closeDialog\",\n      value: function closeDialog() {\n        this._params = undefined;\n        fireEvent(this, \"dialog-closed\", {\n          dialog: this.localName\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this._params) {\n          return nothing;\n        }\n        const {\n          certificateInfo\n        } = this._params;\n        return html`\n      <ha-dialog\n        open\n        hideActions\n        @closed=${this.closeDialog}\n        .heading=${createCloseHeading(this.hass, this.hass.localize(\"ui.panel.config.cloud.dialog_certificate.certificate_information\"))}\n      >\n        <div>\n          <p>\n            ${this.hass.localize(\"ui.panel.config.cloud.dialog_certificate.certificate_expiration_date\")}\n            ${formatDateTime(new Date(certificateInfo.expire_date), this.hass.locale, this.hass.config)}<br />\n            (${this.hass.localize(\"ui.panel.config.cloud.dialog_certificate.will_be_auto_renewed\")})\n          </p>\n          <p class=\"break-word\">\n            ${this.hass.localize(\"ui.panel.config.cloud.dialog_certificate.fingerprint\")}\n            ${certificateInfo.fingerprint}\n          </p>\n          <p class=\"break-word\">\n            ${this.hass.localize(\"ui.panel.config.cloud.dialog_certificate.alternative_names\")}\n          </p>\n          <ul>\n            ${certificateInfo.alternative_names.map(name => html`<li><code>${name}</code></li>`)}\n          </ul>\n        </div>\n\n        <mwc-button @click=${this.closeDialog} slot=\"primaryAction\">\n          ${this.hass.localize(\"ui.panel.config.cloud.dialog_certificate.close\")}\n        </mwc-button>\n      </ha-dialog>\n    `;\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [haStyleDialog, css`\n        ha-dialog {\n          --mdc-dialog-max-width: 535px;\n        }\n        .break-word {\n          overflow-wrap: break-word;\n        }\n        p {\n          margin-top: 0;\n          margin-bottom: 12px;\n        }\n        p:last-child {\n          margin-bottom: 0;\n        }\n      `];\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","nothing","customElement","state","formatDateTime","fireEvent","createCloseHeading","haStyleDialog","DialogCloudCertificate","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","key","value","decorators","showDialog","params","_params","closeDialog","undefined","dialog","localName","render","certificateInfo","hass","localize","Date","expire_date","locale","config","fingerprint","alternative_names","map","name","static","styles"],"sources":["/workspaces/frontend/src/panels/config/cloud/dialog-cloud-certificate/dialog-cloud-certificate.ts"],"sourcesContent":["import \"@material/mwc-button\";\nimport { css, CSSResultGroup, html, LitElement, nothing } from \"lit\";\nimport { customElement, state } from \"lit/decorators\";\nimport { formatDateTime } from \"../../../../common/datetime/format_date_time\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { createCloseHeading } from \"../../../../components/ha-dialog\";\nimport { haStyleDialog } from \"../../../../resources/styles\";\nimport type { HomeAssistant } from \"../../../../types\";\nimport type { CloudCertificateParams as CloudCertificateDialogParams } from \"./show-dialog-cloud-certificate\";\n\n@customElement(\"dialog-cloud-certificate\")\nclass DialogCloudCertificate extends LitElement {\n  public hass!: HomeAssistant;\n\n  @state() private _params?: CloudCertificateDialogParams;\n\n  public showDialog(params: CloudCertificateDialogParams) {\n    this._params = params;\n  }\n\n  public closeDialog() {\n    this._params = undefined;\n    fireEvent(this, \"dialog-closed\", { dialog: this.localName });\n  }\n\n  protected render() {\n    if (!this._params) {\n      return nothing;\n    }\n    const { certificateInfo } = this._params;\n\n    return html`\n      <ha-dialog\n        open\n        hideActions\n        @closed=${this.closeDialog}\n        .heading=${createCloseHeading(\n          this.hass,\n          this.hass.localize(\n            \"ui.panel.config.cloud.dialog_certificate.certificate_information\"\n          )\n        )}\n      >\n        <div>\n          <p>\n            ${this.hass!.localize(\n              \"ui.panel.config.cloud.dialog_certificate.certificate_expiration_date\"\n            )}\n            ${formatDateTime(\n              new Date(certificateInfo.expire_date),\n              this.hass!.locale,\n              this.hass!.config\n            )}<br />\n            (${this.hass!.localize(\n              \"ui.panel.config.cloud.dialog_certificate.will_be_auto_renewed\"\n            )})\n          </p>\n          <p class=\"break-word\">\n            ${this.hass!.localize(\n              \"ui.panel.config.cloud.dialog_certificate.fingerprint\"\n            )}\n            ${certificateInfo.fingerprint}\n          </p>\n          <p class=\"break-word\">\n            ${this.hass!.localize(\n              \"ui.panel.config.cloud.dialog_certificate.alternative_names\"\n            )}\n          </p>\n          <ul>\n            ${certificateInfo.alternative_names.map(\n              (name) => html`<li><code>${name}</code></li>`\n            )}\n          </ul>\n        </div>\n\n        <mwc-button @click=${this.closeDialog} slot=\"primaryAction\">\n          ${this.hass!.localize(\n            \"ui.panel.config.cloud.dialog_certificate.close\"\n          )}\n        </mwc-button>\n      </ha-dialog>\n    `;\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyleDialog,\n      css`\n        ha-dialog {\n          --mdc-dialog-max-width: 535px;\n        }\n        .break-word {\n          overflow-wrap: break-word;\n        }\n        p {\n          margin-top: 0;\n          margin-bottom: 12px;\n        }\n        p:last-child {\n          margin-bottom: 0;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"dialog-cloud-certificate\": DialogCloudCertificate;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}