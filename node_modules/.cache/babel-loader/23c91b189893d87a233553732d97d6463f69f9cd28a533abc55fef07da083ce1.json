{"ast":null,"code":"/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nvar cssClasses = {\n  ANCHOR: 'mdc-menu-surface--anchor',\n  ANIMATING_CLOSED: 'mdc-menu-surface--animating-closed',\n  ANIMATING_OPEN: 'mdc-menu-surface--animating-open',\n  FIXED: 'mdc-menu-surface--fixed',\n  IS_OPEN_BELOW: 'mdc-menu-surface--is-open-below',\n  OPEN: 'mdc-menu-surface--open',\n  ROOT: 'mdc-menu-surface'\n};\n// tslint:disable:object-literal-sort-keys\nvar strings = {\n  CLOSED_EVENT: 'MDCMenuSurface:closed',\n  CLOSING_EVENT: 'MDCMenuSurface:closing',\n  OPENED_EVENT: 'MDCMenuSurface:opened',\n  OPENING_EVENT: 'MDCMenuSurface:opening',\n  FOCUSABLE_ELEMENTS: ['button:not(:disabled)', '[href]:not([aria-disabled=\"true\"])', 'input:not(:disabled)', 'select:not(:disabled)', 'textarea:not(:disabled)', '[tabindex]:not([tabindex=\"-1\"]):not([aria-disabled=\"true\"])'].join(', ')\n};\n// tslint:enable:object-literal-sort-keys\nvar numbers = {\n  /** Total duration of menu-surface open animation. */\n  TRANSITION_OPEN_DURATION: 120,\n  /** Total duration of menu-surface close animation. */\n  TRANSITION_CLOSE_DURATION: 75,\n  /**\n   * Margin left to the edge of the viewport when menu-surface is at maximum\n   * possible height. Also used as a viewport margin.\n   */\n  MARGIN_TO_EDGE: 32,\n  /**\n   * Ratio of anchor width to menu-surface width for switching from corner\n   * positioning to center positioning.\n   */\n  ANCHOR_TO_MENU_SURFACE_WIDTH_RATIO: 0.67,\n  /**\n   * Amount of time to wait before restoring focus when closing the menu\n   * surface. This is important because if a touch event triggered the menu\n   * close, and the subsequent mouse event occurs after focus is restored, then\n   * the restored focus would be lost.\n   */\n  TOUCH_EVENT_WAIT_MS: 30\n};\n/**\n * Enum for bits in the {@see Corner) bitmap.\n */\nvar CornerBit;\n(function (CornerBit) {\n  CornerBit[CornerBit[\"BOTTOM\"] = 1] = \"BOTTOM\";\n  CornerBit[CornerBit[\"CENTER\"] = 2] = \"CENTER\";\n  CornerBit[CornerBit[\"RIGHT\"] = 4] = \"RIGHT\";\n  CornerBit[CornerBit[\"FLIP_RTL\"] = 8] = \"FLIP_RTL\";\n})(CornerBit || (CornerBit = {}));\n/**\n * Enum for representing an element corner for positioning the menu-surface.\n *\n * The START constants map to LEFT if element directionality is left\n * to right and RIGHT if the directionality is right to left.\n * Likewise END maps to RIGHT or LEFT depending on the directionality.\n */\nvar Corner;\n(function (Corner) {\n  Corner[Corner[\"TOP_LEFT\"] = 0] = \"TOP_LEFT\";\n  Corner[Corner[\"TOP_RIGHT\"] = 4] = \"TOP_RIGHT\";\n  Corner[Corner[\"BOTTOM_LEFT\"] = 1] = \"BOTTOM_LEFT\";\n  Corner[Corner[\"BOTTOM_RIGHT\"] = 5] = \"BOTTOM_RIGHT\";\n  Corner[Corner[\"TOP_START\"] = 8] = \"TOP_START\";\n  Corner[Corner[\"TOP_END\"] = 12] = \"TOP_END\";\n  Corner[Corner[\"BOTTOM_START\"] = 9] = \"BOTTOM_START\";\n  Corner[Corner[\"BOTTOM_END\"] = 13] = \"BOTTOM_END\";\n})(Corner || (Corner = {}));\nexport { cssClasses, strings, numbers, CornerBit, Corner };","map":{"version":3,"names":["cssClasses","ANCHOR","ANIMATING_CLOSED","ANIMATING_OPEN","FIXED","IS_OPEN_BELOW","OPEN","ROOT","strings","CLOSED_EVENT","CLOSING_EVENT","OPENED_EVENT","OPENING_EVENT","FOCUSABLE_ELEMENTS","join","numbers","TRANSITION_OPEN_DURATION","TRANSITION_CLOSE_DURATION","MARGIN_TO_EDGE","ANCHOR_TO_MENU_SURFACE_WIDTH_RATIO","TOUCH_EVENT_WAIT_MS","CornerBit","Corner"],"sources":["constants.ts"],"sourcesContent":[null],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;AAuBA,IAAMA,UAAU,GAAG;EACjBC,MAAM,EAAE,0BAA0B;EAClCC,gBAAgB,EAAE,oCAAoC;EACtDC,cAAc,EAAE,kCAAkC;EAClDC,KAAK,EAAE,yBAAyB;EAChCC,aAAa,EAAE,iCAAiC;EAChDC,IAAI,EAAE,wBAAwB;EAC9BC,IAAI,EAAE;CACP;AAED;AACA,IAAMC,OAAO,GAAG;EACdC,YAAY,EAAE,uBAAuB;EACrCC,aAAa,EAAE,wBAAwB;EACvCC,YAAY,EAAE,uBAAuB;EACrCC,aAAa,EAAE,wBAAwB;EACvCC,kBAAkB,EAAE,CAClB,uBAAuB,EACvB,oCAAoC,EACpC,sBAAsB,EACtB,uBAAuB,EACvB,yBAAyB,EACzB,6DAA6D,CAC9D,CAACC,IAAI,CAAC,IAAI;CACZ;AACD;AAEA,IAAMC,OAAO,GAAG;EACd;EACAC,wBAAwB,EAAE,GAAG;EAE7B;EACAC,yBAAyB,EAAE,EAAE;EAE7B;;;;EAIAC,cAAc,EAAE,EAAE;EAElB;;;;EAIAC,kCAAkC,EAAE,IAAI;EAExC;;;;;;EAMAC,mBAAmB,EAAE;CACtB;AAED;;;AAGA,IAAKC,SAKJ;AALD,WAAKA,SAAS;EACZA,SAAA,CAAAA,SAAA,0BAAU;EACVA,SAAA,CAAAA,SAAA,0BAAU;EACVA,SAAA,CAAAA,SAAA,wBAAS;EACTA,SAAA,CAAAA,SAAA,8BAAY;AACd,CAAC,EALIA,SAAS,KAATA,SAAS;AAOd;;;;;;;AAOA,IAAKC,MASJ;AATD,WAAKA,MAAM;EACTA,MAAA,CAAAA,MAAA,8BAAY;EACZA,MAAA,CAAAA,MAAA,gCAA2B;EAC3BA,MAAA,CAAAA,MAAA,oCAA8B;EAC9BA,MAAA,CAAAA,MAAA,sCAAiD;EACjDA,MAAA,CAAAA,MAAA,gCAA8B;EAC9BA,MAAA,CAAAA,MAAA,6BAA8C;EAC9CA,MAAA,CAAAA,MAAA,sCAAoD;EACpDA,MAAA,CAAAA,MAAA,mCAAoE;AACtE,CAAC,EATIA,MAAM,KAANA,MAAM;AAWX,SAAQtB,UAAU,EAAEQ,OAAO,EAAEO,OAAO,EAAEM,SAAS,EAAEC,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}