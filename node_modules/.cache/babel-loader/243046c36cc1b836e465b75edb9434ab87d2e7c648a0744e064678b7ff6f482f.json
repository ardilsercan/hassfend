{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\nimport './mwc-list-item.js';\nimport { BaseElement } from '@material/mwc-base/base-element.js';\nimport { observer } from '@material/mwc-base/observer.js';\nimport { deepActiveElementPath, doesElementContainFocus, isNodeElement } from '@material/mwc-base/utils.js';\nimport { html } from 'lit';\nimport { property, query, queryAssignedNodes } from 'lit/decorators.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport MDCListFoundation, { isIndexSet } from './mwc-list-foundation.js';\nexport { createSetFromIndex, isEventMulti, isIndexSet } from './mwc-list-foundation.js';\nfunction debounceLayout(callback, waitInMS = 50) {\n  let timeoutId;\n  // tslint:disable-next-line\n  return function (updateItems = true) {\n    clearTimeout(timeoutId);\n    timeoutId = setTimeout(() => {\n      callback(updateItems);\n    }, waitInMS);\n  };\n}\nconst isListItem = element => {\n  return element.hasAttribute('mwc-list-item');\n};\nfunction clearAndCreateItemsReadyPromise() {\n  const oldResolver = this.itemsReadyResolver;\n  this.itemsReady = new Promise(res => {\n    // TODO(b/175626389): Type '(value: never[] | PromiseLike<never[]>) => void'\n    // is not assignable to type '(value?: never[] | PromiseLike<never[]> |\n    // undefined) => void'.\n    return this.itemsReadyResolver = res;\n  });\n  oldResolver();\n}\n/**\n * @fires selected {SelectedDetail}\n * @fires action {ActionDetail}\n * @fires items-updated\n */\nexport class ListBase extends BaseElement {\n  constructor() {\n    super();\n    this.mdcAdapter = null;\n    this.mdcFoundationClass = MDCListFoundation;\n    this.activatable = false;\n    this.multi = false;\n    this.wrapFocus = false;\n    this.itemRoles = null;\n    this.innerRole = null;\n    this.innerAriaLabel = null;\n    this.rootTabbable = false;\n    this.previousTabindex = null;\n    this.noninteractive = false;\n    this.itemsReadyResolver = () => {\n      //\n    };\n    this.itemsReady = Promise.resolve([]);\n    // tslint:enable:ban-ts-ignore\n    this.items_ = [];\n    const debouncedFunction = debounceLayout(this.layout.bind(this));\n    this.debouncedLayout = (updateItems = true) => {\n      clearAndCreateItemsReadyPromise.call(this);\n      debouncedFunction(updateItems);\n    };\n  }\n  // tslint:disable:ban-ts-ignore\n  async getUpdateComplete() {\n    // @ts-ignore\n    const result = await super.getUpdateComplete();\n    await this.itemsReady;\n    return result;\n  }\n  get items() {\n    return this.items_;\n  }\n  updateItems() {\n    var _a;\n    const nodes = (_a = this.assignedElements) !== null && _a !== void 0 ? _a : [];\n    const listItems = [];\n    for (const node of nodes) {\n      if (isListItem(node)) {\n        listItems.push(node);\n        node._managingList = this;\n      }\n      if (node.hasAttribute('divider') && !node.hasAttribute('role')) {\n        node.setAttribute('role', 'separator');\n      }\n    }\n    this.items_ = listItems;\n    const selectedIndices = new Set();\n    this.items_.forEach((item, index) => {\n      if (this.itemRoles) {\n        item.setAttribute('role', this.itemRoles);\n      } else {\n        item.removeAttribute('role');\n      }\n      if (item.selected) {\n        selectedIndices.add(index);\n      }\n    });\n    if (this.multi) {\n      this.select(selectedIndices);\n    } else {\n      const index = selectedIndices.size ? selectedIndices.entries().next().value[1] : -1;\n      this.select(index);\n    }\n    const itemsUpdatedEv = new Event('items-updated', {\n      bubbles: true,\n      composed: true\n    });\n    this.dispatchEvent(itemsUpdatedEv);\n  }\n  get selected() {\n    const index = this.index;\n    if (!isIndexSet(index)) {\n      if (index === -1) {\n        return null;\n      }\n      return this.items[index];\n    }\n    const selected = [];\n    for (const entry of index) {\n      selected.push(this.items[entry]);\n    }\n    return selected;\n  }\n  get index() {\n    if (this.mdcFoundation) {\n      return this.mdcFoundation.getSelectedIndex();\n    }\n    return -1;\n  }\n  render() {\n    const role = this.innerRole === null ? undefined : this.innerRole;\n    const ariaLabel = this.innerAriaLabel === null ? undefined : this.innerAriaLabel;\n    const tabindex = this.rootTabbable ? '0' : '-1';\n    return html`\n      <!-- @ts-ignore -->\n      <ul\n          tabindex=${tabindex}\n          role=\"${ifDefined(role)}\"\n          aria-label=\"${ifDefined(ariaLabel)}\"\n          class=\"mdc-deprecated-list\"\n          @keydown=${this.onKeydown}\n          @focusin=${this.onFocusIn}\n          @focusout=${this.onFocusOut}\n          @request-selected=${this.onRequestSelected}\n          @list-item-rendered=${this.onListItemConnected}>\n        <slot></slot>\n        ${this.renderPlaceholder()}\n      </ul>\n    `;\n  }\n  renderPlaceholder() {\n    var _a;\n    const nodes = (_a = this.assignedElements) !== null && _a !== void 0 ? _a : [];\n    if (this.emptyMessage !== undefined && nodes.length === 0) {\n      return html`\n        <mwc-list-item noninteractive>${this.emptyMessage}</mwc-list-item>\n      `;\n    }\n    return null;\n  }\n  firstUpdated() {\n    super.firstUpdated();\n    if (!this.items.length) {\n      // required because this is called before observers\n      this.mdcFoundation.setMulti(this.multi);\n      // for when children upgrade before list\n      this.layout();\n    }\n  }\n  onFocusIn(evt) {\n    if (this.mdcFoundation && this.mdcRoot) {\n      const index = this.getIndexOfTarget(evt);\n      this.mdcFoundation.handleFocusIn(evt, index);\n    }\n  }\n  onFocusOut(evt) {\n    if (this.mdcFoundation && this.mdcRoot) {\n      const index = this.getIndexOfTarget(evt);\n      this.mdcFoundation.handleFocusOut(evt, index);\n    }\n  }\n  onKeydown(evt) {\n    if (this.mdcFoundation && this.mdcRoot) {\n      const index = this.getIndexOfTarget(evt);\n      const target = evt.target;\n      const isRootListItem = isListItem(target);\n      this.mdcFoundation.handleKeydown(evt, isRootListItem, index);\n    }\n  }\n  onRequestSelected(evt) {\n    if (this.mdcFoundation) {\n      let index = this.getIndexOfTarget(evt);\n      // might happen in shady dom slowness. Recalc children\n      if (index === -1) {\n        this.layout();\n        index = this.getIndexOfTarget(evt);\n        // still not found; may not be mwc-list-item. Unsupported case.\n        if (index === -1) {\n          return;\n        }\n      }\n      const element = this.items[index];\n      if (element.disabled) {\n        return;\n      }\n      const selected = evt.detail.selected;\n      const source = evt.detail.source;\n      this.mdcFoundation.handleSingleSelection(index, source === 'interaction', selected);\n      evt.stopPropagation();\n    }\n  }\n  getIndexOfTarget(evt) {\n    const elements = this.items;\n    const path = evt.composedPath();\n    for (const pathItem of path) {\n      let index = -1;\n      if (isNodeElement(pathItem) && isListItem(pathItem)) {\n        index = elements.indexOf(pathItem);\n      }\n      if (index !== -1) {\n        return index;\n      }\n    }\n    return -1;\n  }\n  createAdapter() {\n    this.mdcAdapter = {\n      getListItemCount: () => {\n        if (this.mdcRoot) {\n          return this.items.length;\n        }\n        return 0;\n      },\n      getFocusedElementIndex: this.getFocusedItemIndex,\n      getAttributeForElementIndex: (index, attr) => {\n        const listElement = this.mdcRoot;\n        if (!listElement) {\n          return '';\n        }\n        const element = this.items[index];\n        return element ? element.getAttribute(attr) : '';\n      },\n      setAttributeForElementIndex: (index, attr, val) => {\n        if (!this.mdcRoot) {\n          return;\n        }\n        const element = this.items[index];\n        if (element) {\n          element.setAttribute(attr, val);\n        }\n      },\n      focusItemAtIndex: index => {\n        const element = this.items[index];\n        if (element) {\n          element.focus();\n        }\n      },\n      setTabIndexForElementIndex: (index, value) => {\n        const item = this.items[index];\n        if (item) {\n          item.tabindex = value;\n        }\n      },\n      notifyAction: index => {\n        const init = {\n          bubbles: true,\n          composed: true\n        };\n        init.detail = {\n          index\n        };\n        const ev = new CustomEvent('action', init);\n        this.dispatchEvent(ev);\n      },\n      notifySelected: (index, diff) => {\n        const init = {\n          bubbles: true,\n          composed: true\n        };\n        init.detail = {\n          index,\n          diff\n        };\n        const ev = new CustomEvent('selected', init);\n        this.dispatchEvent(ev);\n      },\n      isFocusInsideList: () => {\n        return doesElementContainFocus(this);\n      },\n      isRootFocused: () => {\n        const mdcRoot = this.mdcRoot;\n        const root = mdcRoot.getRootNode();\n        return root.activeElement === mdcRoot;\n      },\n      setDisabledStateForElementIndex: (index, value) => {\n        const item = this.items[index];\n        if (!item) {\n          return;\n        }\n        item.disabled = value;\n      },\n      getDisabledStateForElementIndex: index => {\n        const item = this.items[index];\n        if (!item) {\n          return false;\n        }\n        return item.disabled;\n      },\n      setSelectedStateForElementIndex: (index, value) => {\n        const item = this.items[index];\n        if (!item) {\n          return;\n        }\n        item.selected = value;\n      },\n      getSelectedStateForElementIndex: index => {\n        const item = this.items[index];\n        if (!item) {\n          return false;\n        }\n        return item.selected;\n      },\n      setActivatedStateForElementIndex: (index, value) => {\n        const item = this.items[index];\n        if (!item) {\n          return;\n        }\n        item.activated = value;\n      }\n    };\n    return this.mdcAdapter;\n  }\n  selectUi(index, activate = false) {\n    const item = this.items[index];\n    if (item) {\n      item.selected = true;\n      item.activated = activate;\n    }\n  }\n  deselectUi(index) {\n    const item = this.items[index];\n    if (item) {\n      item.selected = false;\n      item.activated = false;\n    }\n  }\n  select(index) {\n    if (!this.mdcFoundation) {\n      return;\n    }\n    this.mdcFoundation.setSelectedIndex(index);\n  }\n  toggle(index, force) {\n    if (this.multi) {\n      this.mdcFoundation.toggleMultiAtIndex(index, force);\n    }\n  }\n  onListItemConnected(e) {\n    const target = e.target;\n    this.layout(this.items.indexOf(target) === -1);\n  }\n  layout(updateItems = true) {\n    if (updateItems) {\n      this.updateItems();\n    }\n    const first = this.items[0];\n    for (const item of this.items) {\n      item.tabindex = -1;\n    }\n    if (first) {\n      if (this.noninteractive) {\n        if (!this.previousTabindex) {\n          this.previousTabindex = first;\n        }\n      } else {\n        first.tabindex = 0;\n      }\n    }\n    this.itemsReadyResolver();\n  }\n  getFocusedItemIndex() {\n    if (!this.mdcRoot) {\n      return -1;\n    }\n    if (!this.items.length) {\n      return -1;\n    }\n    const activeElementPath = deepActiveElementPath();\n    if (!activeElementPath.length) {\n      return -1;\n    }\n    for (let i = activeElementPath.length - 1; i >= 0; i--) {\n      const activeItem = activeElementPath[i];\n      if (isListItem(activeItem)) {\n        return this.items.indexOf(activeItem);\n      }\n    }\n    return -1;\n  }\n  focusItemAtIndex(index) {\n    for (const item of this.items) {\n      if (item.tabindex === 0) {\n        item.tabindex = -1;\n        break;\n      }\n    }\n    this.items[index].tabindex = 0;\n    this.items[index].focus();\n  }\n  focus() {\n    const root = this.mdcRoot;\n    if (root) {\n      root.focus();\n    }\n  }\n  blur() {\n    const root = this.mdcRoot;\n    if (root) {\n      root.blur();\n    }\n  }\n}\n__decorate([property({\n  type: String\n})], ListBase.prototype, \"emptyMessage\", void 0);\n__decorate([query('.mdc-deprecated-list')], ListBase.prototype, \"mdcRoot\", void 0);\n__decorate([queryAssignedNodes('', true, '*')], ListBase.prototype, \"assignedElements\", void 0);\n__decorate([queryAssignedNodes('', true, '[tabindex=\"0\"]')], ListBase.prototype, \"tabbableElements\", void 0);\n__decorate([property({\n  type: Boolean\n}), observer(function (value) {\n  if (this.mdcFoundation) {\n    this.mdcFoundation.setUseActivatedClass(value);\n  }\n})], ListBase.prototype, \"activatable\", void 0);\n__decorate([property({\n  type: Boolean\n}), observer(function (newValue, oldValue) {\n  if (this.mdcFoundation) {\n    this.mdcFoundation.setMulti(newValue);\n  }\n  if (oldValue !== undefined) {\n    this.layout();\n  }\n})], ListBase.prototype, \"multi\", void 0);\n__decorate([property({\n  type: Boolean\n}), observer(function (value) {\n  if (this.mdcFoundation) {\n    this.mdcFoundation.setWrapFocus(value);\n  }\n})], ListBase.prototype, \"wrapFocus\", void 0);\n__decorate([property({\n  type: String\n}), observer(function (_newValue, oldValue) {\n  if (oldValue !== undefined) {\n    this.updateItems();\n  }\n})], ListBase.prototype, \"itemRoles\", void 0);\n__decorate([property({\n  type: String\n})], ListBase.prototype, \"innerRole\", void 0);\n__decorate([property({\n  type: String\n})], ListBase.prototype, \"innerAriaLabel\", void 0);\n__decorate([property({\n  type: Boolean\n})], ListBase.prototype, \"rootTabbable\", void 0);\n__decorate([property({\n  type: Boolean,\n  reflect: true\n}), observer(function (value) {\n  var _a, _b;\n  if (value) {\n    const tabbable = (_b = (_a = this.tabbableElements) === null || _a === void 0 ? void 0 : _a[0]) !== null && _b !== void 0 ? _b : null;\n    this.previousTabindex = tabbable;\n    if (tabbable) {\n      tabbable.setAttribute('tabindex', '-1');\n    }\n  } else if (!value && this.previousTabindex) {\n    this.previousTabindex.setAttribute('tabindex', '0');\n    this.previousTabindex = null;\n  }\n})], ListBase.prototype, \"noninteractive\", void 0);","map":{"version":3,"names":["BaseElement","observer","deepActiveElementPath","doesElementContainFocus","isNodeElement","html","property","query","queryAssignedNodes","ifDefined","MDCListFoundation","isIndexSet","createSetFromIndex","isEventMulti","debounceLayout","callback","waitInMS","timeoutId","updateItems","clearTimeout","setTimeout","isListItem","element","hasAttribute","clearAndCreateItemsReadyPromise","oldResolver","itemsReadyResolver","itemsReady","Promise","res","ListBase","constructor","mdcAdapter","mdcFoundationClass","activatable","multi","wrapFocus","itemRoles","innerRole","innerAriaLabel","rootTabbable","previousTabindex","noninteractive","resolve","items_","debouncedFunction","layout","bind","debouncedLayout","call","getUpdateComplete","result","items","nodes","_a","assignedElements","listItems","node","push","_managingList","setAttribute","selectedIndices","Set","forEach","item","index","removeAttribute","selected","add","select","size","entries","next","value","itemsUpdatedEv","Event","bubbles","composed","dispatchEvent","entry","mdcFoundation","getSelectedIndex","render","role","undefined","ariaLabel","tabindex","onKeydown","onFocusIn","onFocusOut","onRequestSelected","onListItemConnected","renderPlaceholder","emptyMessage","length","firstUpdated","setMulti","evt","mdcRoot","getIndexOfTarget","handleFocusIn","handleFocusOut","target","isRootListItem","handleKeydown","disabled","detail","source","handleSingleSelection","stopPropagation","elements","path","composedPath","pathItem","indexOf","createAdapter","getListItemCount","getFocusedElementIndex","getFocusedItemIndex","getAttributeForElementIndex","attr","listElement","getAttribute","setAttributeForElementIndex","val","focusItemAtIndex","focus","setTabIndexForElementIndex","notifyAction","init","ev","CustomEvent","notifySelected","diff","isFocusInsideList","isRootFocused","root","getRootNode","activeElement","setDisabledStateForElementIndex","getDisabledStateForElementIndex","setSelectedStateForElementIndex","getSelectedStateForElementIndex","setActivatedStateForElementIndex","activated","selectUi","activate","deselectUi","setSelectedIndex","toggle","force","toggleMultiAtIndex","e","first","activeElementPath","i","activeItem","blur","__decorate","type","String","Boolean","setUseActivatedClass","newValue","oldValue","setWrapFocus","_newValue","reflect","tabbable","_b","tabbableElements"],"sources":["mwc-list-base.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\n\nimport './mwc-list-item.js';\n\nimport {BaseElement} from '@material/mwc-base/base-element.js';\nimport {observer} from '@material/mwc-base/observer.js';\nimport {deepActiveElementPath, doesElementContainFocus, isNodeElement} from '@material/mwc-base/utils.js';\nimport {html} from 'lit';\nimport {property, query, queryAssignedNodes} from 'lit/decorators.js';\nimport {ifDefined} from 'lit/directives/if-defined.js';\n\nimport {MDCListAdapter} from './mwc-list-adapter.js';\nimport MDCListFoundation, {ActionDetail, isIndexSet, SelectedDetail} from './mwc-list-foundation.js';\nimport {MWCListIndex} from './mwc-list-foundation.js';\nimport {Layoutable, ListItemBase, RequestSelectedDetail} from './mwc-list-item-base.js';\n\nexport {ActionDetail, createSetFromIndex, isEventMulti, isIndexSet, MultiSelectedEvent, MWCListIndex, SelectedDetail, SelectedEvent, SingleSelectedEvent} from './mwc-list-foundation.js';\n\nfunction debounceLayout(\n    callback: (updateItems: boolean) => void, waitInMS = 50) {\n  let timeoutId: number;\n  // tslint:disable-next-line\n  return function(updateItems = true) {\n    clearTimeout(timeoutId);\n    timeoutId = setTimeout(() => {\n                  callback(updateItems);\n                }, waitInMS) as unknown as number;\n  };\n}\n\nconst isListItem = (element: Element): element is ListItemBase => {\n  return element.hasAttribute('mwc-list-item');\n};\n\nfunction clearAndCreateItemsReadyPromise(this: ListBase) {\n  const oldResolver = this.itemsReadyResolver;\n  this.itemsReady = new Promise((res) => {\n    // TODO(b/175626389): Type '(value: never[] | PromiseLike<never[]>) => void'\n    // is not assignable to type '(value?: never[] | PromiseLike<never[]> |\n    // undefined) => void'.\n    return this.itemsReadyResolver = res as any;\n  });\n  oldResolver();\n}\n\n/**\n * @fires selected {SelectedDetail}\n * @fires action {ActionDetail}\n * @fires items-updated\n */\nexport abstract class ListBase extends BaseElement implements Layoutable {\n  protected mdcFoundation!: MDCListFoundation;\n  protected mdcAdapter: MDCListAdapter|null = null;\n\n  protected readonly mdcFoundationClass = MDCListFoundation;\n\n  @property({type: String}) emptyMessage: string|undefined;\n\n  @query('.mdc-deprecated-list') protected mdcRoot!: HTMLElement;\n\n  @queryAssignedNodes('', true, '*')\n  protected assignedElements!: HTMLElement[]|null;\n  @queryAssignedNodes('', true, '[tabindex=\"0\"]')\n  protected tabbableElements!: HTMLElement[]|null;\n\n  @property({type: Boolean})\n  @observer(function(this: ListBase, value: boolean) {\n    if (this.mdcFoundation) {\n      this.mdcFoundation.setUseActivatedClass(value);\n    }\n  })\n  activatable = false;\n\n  @property({type: Boolean})\n  @observer(function(this: ListBase, newValue: boolean, oldValue: boolean) {\n    if (this.mdcFoundation) {\n      this.mdcFoundation.setMulti(newValue);\n    }\n\n    if (oldValue !== undefined) {\n      this.layout();\n    }\n  })\n  multi = false;\n\n  @property({type: Boolean})\n  @observer(function(this: ListBase, value: boolean) {\n    if (this.mdcFoundation) {\n      this.mdcFoundation.setWrapFocus(value);\n    }\n  })\n  wrapFocus = false;\n\n  @property({type: String})\n  @observer(function(this: ListBase, _newValue, oldValue: string|null) {\n    if (oldValue !== undefined) {\n      this.updateItems();\n    }\n  })\n  itemRoles: string|null = null;\n\n  @property({type: String}) innerRole: string|null = null;\n\n  @property({type: String}) innerAriaLabel: string|null = null;\n\n  @property({type: Boolean}) rootTabbable = false;\n\n  protected previousTabindex: Element|null = null;\n\n  @property({type: Boolean, reflect: true})\n  @observer(function(this: ListBase, value: boolean) {\n    if (value) {\n      const tabbable = this.tabbableElements?.[0] ?? null;\n      this.previousTabindex = tabbable;\n      if (tabbable) {\n        tabbable.setAttribute('tabindex', '-1');\n      }\n    } else if (!value && this.previousTabindex) {\n      this.previousTabindex.setAttribute('tabindex', '0');\n      this.previousTabindex = null;\n    }\n  })\n  noninteractive = false;\n\n  debouncedLayout: (updateItems?: boolean) => void | undefined;\n  protected itemsReadyResolver:\n      (value?: (PromiseLike<never[]>|never[]|undefined)) => void =\n          (() => {\n               //\n           }) as(value?: (PromiseLike<unknown[]>|unknown[])) => void;\n\n  constructor() {\n    super();\n    const debouncedFunction = debounceLayout(this.layout.bind(this));\n    this.debouncedLayout = (updateItems = true) => {\n      clearAndCreateItemsReadyPromise.call(this);\n\n      debouncedFunction(updateItems);\n    };\n  }\n\n  itemsReady = Promise.resolve([]);\n\n  // tslint:disable:ban-ts-ignore\n  protected override async getUpdateComplete() {\n    // @ts-ignore\n    const result = await super.getUpdateComplete();\n    await this.itemsReady;\n    return result;\n  }\n  // tslint:enable:ban-ts-ignore\n\n\n  protected items_: ListItemBase[] = [];\n\n  get items(): ListItemBase[] {\n    return this.items_;\n  }\n\n  protected updateItems() {\n    const nodes = this.assignedElements ?? [];\n    const listItems: ListItemBase[] = [];\n\n    for (const node of nodes) {\n      if (isListItem(node)) {\n        listItems.push(node);\n        node._managingList = this;\n      }\n\n      if (node.hasAttribute('divider') && !node.hasAttribute('role')) {\n        node.setAttribute('role', 'separator');\n      }\n    }\n\n    this.items_ = listItems;\n    const selectedIndices = new Set<number>();\n\n    this.items_.forEach((item, index) => {\n      if (this.itemRoles) {\n        item.setAttribute('role', this.itemRoles);\n      } else {\n        item.removeAttribute('role');\n      }\n\n      if (item.selected) {\n        selectedIndices.add(index);\n      }\n    });\n\n    if (this.multi) {\n      this.select(selectedIndices);\n    } else {\n      const index =\n          selectedIndices.size ? selectedIndices.entries().next().value[1] : -1;\n      this.select(index);\n    }\n\n    const itemsUpdatedEv =\n        new Event('items-updated', {bubbles: true, composed: true});\n    this.dispatchEvent(itemsUpdatedEv);\n  }\n\n  get selected(): ListItemBase|ListItemBase[]|null {\n    const index = this.index;\n\n    if (!isIndexSet(index)) {\n      if (index === -1) {\n        return null;\n      }\n\n      return this.items[index];\n    }\n\n    const selected: ListItemBase[] = [];\n\n    for (const entry of index) {\n      selected.push(this.items[entry]);\n    }\n\n    return selected;\n  }\n\n  get index(): MWCListIndex {\n    if (this.mdcFoundation) {\n      return this.mdcFoundation.getSelectedIndex();\n    }\n\n    return -1;\n  }\n\n  override render() {\n    const role = this.innerRole === null ? undefined : this.innerRole;\n    const ariaLabel =\n        this.innerAriaLabel === null ? undefined : this.innerAriaLabel;\n    const tabindex = this.rootTabbable ? '0' : '-1';\n\n    return html`\n      <!-- @ts-ignore -->\n      <ul\n          tabindex=${tabindex}\n          role=\"${ifDefined(role)}\"\n          aria-label=\"${ifDefined(ariaLabel)}\"\n          class=\"mdc-deprecated-list\"\n          @keydown=${this.onKeydown}\n          @focusin=${this.onFocusIn}\n          @focusout=${this.onFocusOut}\n          @request-selected=${this.onRequestSelected}\n          @list-item-rendered=${this.onListItemConnected}>\n        <slot></slot>\n        ${this.renderPlaceholder()}\n      </ul>\n    `;\n  }\n\n  renderPlaceholder() {\n    const nodes = this.assignedElements ?? [];\n    if (this.emptyMessage !== undefined && nodes.length === 0) {\n      return html`\n        <mwc-list-item noninteractive>${this.emptyMessage}</mwc-list-item>\n      `;\n    }\n\n    return null;\n  }\n\n  override firstUpdated() {\n    super.firstUpdated();\n\n    if (!this.items.length) {\n      // required because this is called before observers\n      this.mdcFoundation.setMulti(this.multi);\n      // for when children upgrade before list\n      this.layout();\n    }\n  }\n\n  protected onFocusIn(evt: FocusEvent) {\n    if (this.mdcFoundation && this.mdcRoot) {\n      const index = this.getIndexOfTarget(evt);\n      this.mdcFoundation.handleFocusIn(evt, index);\n    }\n  }\n\n  protected onFocusOut(evt: FocusEvent) {\n    if (this.mdcFoundation && this.mdcRoot) {\n      const index = this.getIndexOfTarget(evt);\n      this.mdcFoundation.handleFocusOut(evt, index);\n    }\n  }\n\n  protected onKeydown(evt: KeyboardEvent) {\n    if (this.mdcFoundation && this.mdcRoot) {\n      const index = this.getIndexOfTarget(evt);\n      const target = evt.target as Element;\n      const isRootListItem = isListItem(target);\n      this.mdcFoundation.handleKeydown(evt, isRootListItem, index);\n    }\n  }\n\n  protected onRequestSelected(evt: CustomEvent<RequestSelectedDetail>) {\n    if (this.mdcFoundation) {\n      let index = this.getIndexOfTarget(evt);\n\n      // might happen in shady dom slowness. Recalc children\n      if (index === -1) {\n        this.layout();\n        index = this.getIndexOfTarget(evt);\n\n        // still not found; may not be mwc-list-item. Unsupported case.\n        if (index === -1) {\n          return;\n        }\n      }\n\n      const element = this.items[index];\n\n      if (element.disabled) {\n        return;\n      }\n\n      const selected = evt.detail.selected;\n      const source = evt.detail.source;\n\n      this.mdcFoundation.handleSingleSelection(\n          index, source === 'interaction', selected);\n\n      evt.stopPropagation();\n    }\n  }\n\n  protected getIndexOfTarget(evt: Event): number {\n    const elements = this.items;\n    const path = evt.composedPath();\n\n    for (const pathItem of path as Node[]) {\n      let index = -1;\n      if (isNodeElement(pathItem) && isListItem(pathItem)) {\n        index = elements.indexOf(pathItem);\n      }\n\n      if (index !== -1) {\n        return index;\n      }\n    }\n\n    return -1;\n  }\n\n  protected createAdapter(): MDCListAdapter {\n    this.mdcAdapter = {\n      getListItemCount: () => {\n        if (this.mdcRoot) {\n          return this.items.length;\n        }\n\n        return 0;\n      },\n      getFocusedElementIndex: this.getFocusedItemIndex,\n      getAttributeForElementIndex: (index, attr) => {\n        const listElement = this.mdcRoot;\n        if (!listElement) {\n          return '';\n        }\n\n        const element = this.items[index];\n        return element ? element.getAttribute(attr) : '';\n      },\n      setAttributeForElementIndex: (index, attr, val) => {\n        if (!this.mdcRoot) {\n          return;\n        }\n\n        const element = this.items[index];\n\n        if (element) {\n          element.setAttribute(attr, val);\n        }\n      },\n      focusItemAtIndex: (index) => {\n        const element = this.items[index];\n        if (element) {\n          element.focus();\n        }\n      },\n      setTabIndexForElementIndex: (index, value) => {\n        const item = this.items[index];\n\n        if (item) {\n          item.tabindex = value;\n        }\n      },\n      notifyAction: (index) => {\n        const init: CustomEventInit = {bubbles: true, composed: true};\n        init.detail = {index};\n        const ev = new CustomEvent<ActionDetail>('action', init);\n        this.dispatchEvent(ev);\n      },\n      notifySelected: (index, diff) => {\n        const init: CustomEventInit = {bubbles: true, composed: true};\n        init.detail = {index, diff};\n        const ev = new CustomEvent<SelectedDetail>('selected', init);\n        this.dispatchEvent(ev);\n      },\n      isFocusInsideList: () => {\n        return doesElementContainFocus(this);\n      },\n      isRootFocused: () => {\n        const mdcRoot = this.mdcRoot;\n        const root = mdcRoot.getRootNode() as unknown as DocumentOrShadowRoot;\n        return root.activeElement === mdcRoot;\n      },\n      setDisabledStateForElementIndex: (index, value) => {\n        const item = this.items[index];\n\n        if (!item) {\n          return;\n        }\n\n        item.disabled = value;\n      },\n      getDisabledStateForElementIndex: (index) => {\n        const item = this.items[index];\n\n        if (!item) {\n          return false;\n        }\n\n        return item.disabled;\n      },\n      setSelectedStateForElementIndex: (index, value) => {\n        const item = this.items[index];\n\n        if (!item) {\n          return;\n        }\n\n        item.selected = value;\n      },\n      getSelectedStateForElementIndex: (index) => {\n        const item = this.items[index];\n\n        if (!item) {\n          return false;\n        }\n\n        return item.selected;\n      },\n      setActivatedStateForElementIndex: (index, value) => {\n        const item = this.items[index];\n\n        if (!item) {\n          return;\n        }\n\n        item.activated = value;\n      },\n    };\n\n    return this.mdcAdapter;\n  }\n\n  protected selectUi(index: number, activate = false) {\n    const item = this.items[index];\n    if (item) {\n      item.selected = true;\n      item.activated = activate;\n    }\n  }\n\n  protected deselectUi(index: number) {\n    const item = this.items[index];\n    if (item) {\n      item.selected = false;\n      item.activated = false;\n    }\n  }\n\n  select(index: MWCListIndex) {\n    if (!this.mdcFoundation) {\n      return;\n    }\n\n    this.mdcFoundation.setSelectedIndex(index);\n  }\n\n  toggle(index: number, force?: boolean) {\n    if (this.multi) {\n      this.mdcFoundation.toggleMultiAtIndex(index, force);\n    }\n  }\n\n  protected onListItemConnected(e: CustomEvent) {\n    const target = e.target as ListItemBase;\n\n    this.layout(this.items.indexOf(target) === -1);\n  }\n\n  layout(updateItems = true) {\n    if (updateItems) {\n      this.updateItems();\n    }\n\n    const first: ListItemBase|undefined = this.items[0];\n\n    for (const item of this.items) {\n      item.tabindex = -1;\n    }\n\n    if (first) {\n      if (this.noninteractive) {\n        if (!this.previousTabindex) {\n          this.previousTabindex = first;\n        }\n      } else {\n        first.tabindex = 0;\n      }\n    }\n\n    this.itemsReadyResolver();\n  }\n\n  getFocusedItemIndex() {\n    if (!this.mdcRoot) {\n      return -1;\n    }\n\n    if (!this.items.length) {\n      return -1;\n    }\n\n    const activeElementPath = deepActiveElementPath();\n\n    if (!activeElementPath.length) {\n      return -1;\n    }\n\n    for (let i = activeElementPath.length - 1; i >= 0; i--) {\n      const activeItem = activeElementPath[i];\n\n      if (isListItem(activeItem)) {\n        return this.items.indexOf(activeItem);\n      }\n    }\n\n    return -1;\n  }\n\n  focusItemAtIndex(index: number) {\n    for (const item of this.items) {\n      if (item.tabindex === 0) {\n        item.tabindex = -1;\n        break;\n      }\n    }\n\n    this.items[index].tabindex = 0;\n    this.items[index].focus();\n  }\n\n  override focus() {\n    const root = this.mdcRoot;\n\n    if (root) {\n      root.focus();\n    }\n  }\n\n  override blur() {\n    const root = this.mdcRoot;\n\n    if (root) {\n      root.blur();\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}