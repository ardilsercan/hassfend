{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _decorate from \"@babel/runtime/helpers/decorate\";\nvar _templateObject, _templateObject2;\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, state } from \"lit/decorators\";\nimport \"../../../components/buttons/ha-call-service-button\";\nexport var HuiServiceButtonElement = _decorate([customElement(\"hui-service-button-element\")], function (_initialize, _LitElement) {\n  var HuiServiceButtonElement = /*#__PURE__*/function (_LitElement2) {\n    _inherits(HuiServiceButtonElement, _LitElement2);\n    function HuiServiceButtonElement() {\n      var _this;\n      _classCallCheck(this, HuiServiceButtonElement);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, HuiServiceButtonElement, [].concat(args));\n      _initialize(_assertThisInitialized(_this));\n      return _this;\n    }\n    return _createClass(HuiServiceButtonElement);\n  }(_LitElement);\n  return {\n    F: HuiServiceButtonElement,\n    d: [{\n      kind: \"field\",\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_config\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_domain\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_service\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"setConfig\",\n      value: function setConfig(config) {\n        if (!config || !config.service) {\n          throw Error(\"Service required\");\n        }\n        var _config$service$split = config.service.split(\".\", 2);\n        var _config$service$split2 = _slicedToArray(_config$service$split, 2);\n        this._domain = _config$service$split2[0];\n        this._service = _config$service$split2[1];\n        if (!this._domain) {\n          throw Error(\"Service does not have a service domain\");\n        }\n        if (!this._service) {\n          throw Error(\"Service does not have a service name\");\n        }\n        this._config = config;\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this._config || !this.hass) {\n          return nothing;\n        }\n        return html(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      <ha-call-service-button\\n        .hass=\", \"\\n        .domain=\", \"\\n        .service=\", \"\\n        .serviceData=\", \"\\n        >\", \"</ha-call-service-button\\n      >\\n    \"])), this.hass, this._domain, this._service, this._config.service_data, this._config.title);\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n      ha-call-service-button {\\n        color: var(--primary-color);\\n        white-space: nowrap;\\n      }\\n    \"])));\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","nothing","customElement","state","HuiServiceButtonElement","_decorate","_initialize","_LitElement","_LitElement2","_inherits","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_assertThisInitialized","_createClass","F","d","kind","key","value","decorators","setConfig","config","service","Error","_config$service$split","split","_config$service$split2","_slicedToArray","_domain","_service","_config","render","hass","_templateObject","_taggedTemplateLiteral","service_data","title","static","styles","_templateObject2"],"sources":["/workspaces/frontend/src/panels/lovelace/elements/hui-service-button-element.ts"],"sourcesContent":["import { css, CSSResultGroup, html, LitElement, nothing } from \"lit\";\nimport { customElement, state } from \"lit/decorators\";\nimport \"../../../components/buttons/ha-call-service-button\";\nimport { HomeAssistant } from \"../../../types\";\nimport { LovelaceElement, ServiceButtonElementConfig } from \"./types\";\n\n@customElement(\"hui-service-button-element\")\nexport class HuiServiceButtonElement\n  extends LitElement\n  implements LovelaceElement\n{\n  public hass?: HomeAssistant;\n\n  @state() private _config?: ServiceButtonElementConfig;\n\n  private _domain?: string;\n\n  private _service?: string;\n\n  public setConfig(config: ServiceButtonElementConfig): void {\n    if (!config || !config.service) {\n      throw Error(\"Service required\");\n    }\n\n    [this._domain, this._service] = config.service.split(\".\", 2);\n\n    if (!this._domain) {\n      throw Error(\"Service does not have a service domain\");\n    }\n\n    if (!this._service) {\n      throw Error(\"Service does not have a service name\");\n    }\n\n    this._config = config;\n  }\n\n  protected render() {\n    if (!this._config || !this.hass) {\n      return nothing;\n    }\n\n    return html`\n      <ha-call-service-button\n        .hass=${this.hass}\n        .domain=${this._domain}\n        .service=${this._service}\n        .serviceData=${this._config.service_data}\n        >${this._config.title}</ha-call-service-button\n      >\n    `;\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      ha-call-service-button {\n        color: var(--primary-color);\n        white-space: nowrap;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-service-button-element\": HuiServiceButtonElement;\n  }\n}\n"],"mappings":";;;;;;;;;;;AAAA,SAASA,GAAG,EAAkBC,IAAI,EAAEC,UAAU,EAAEC,OAAO,QAAQ,KAAK;AACpE,SAASC,aAAa,EAAEC,KAAK,QAAQ,gBAAgB;AACrD,OAAO,oDAAoD;AAI3D,WACaC,uBAAuB,GAAAC,SAAA,EADnCH,aAAa,CAAC,4BAA4B,CAAC,aAAAI,WAAA,EAAAC,WAAA;EAAA,IAC/BH,uBAAuB,0BAAAI,YAAA;IAAAC,SAAA,CAAAL,uBAAA,EAAAI,YAAA;IAAA,SAAAJ,wBAAA;MAAA,IAAAM,KAAA;MAAAC,eAAA,OAAAP,uBAAA;MAAA,SAAAQ,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAAC,IAAA,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;QAAAF,IAAA,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;MAAA;MAAAP,KAAA,GAAAQ,UAAA,OAAAd,uBAAA,KAAAe,MAAA,CAAAJ,IAAA;MAAAT,WAAA,CAAAc,sBAAA,CAAAV,KAAA;MAAA,OAAAA,KAAA;IAAA;IAAA,OAAAW,YAAA,CAAAjB,uBAAA;EAAA,EAAAG,WAAA;EAAA;IAAAe,CAAA,EAAvBlB,uBAAuB;IAAAmB,CAAA;MAAAC,IAAA;MAAAC,GAAA;MAAAC,KAAA;IAAA;MAAAF,IAAA;MAAAG,UAAA,GAMjCxB,KAAK,CAAC,CAAC;MAAAsB,GAAA;MAAAC,KAAA;IAAA;MAAAF,IAAA;MAAAC,GAAA;MAAAC,KAAA;IAAA;MAAAF,IAAA;MAAAC,GAAA;MAAAC,KAAA;IAAA;MAAAF,IAAA;MAAAC,GAAA;MAAAC,KAAA,EAMR,SAAAE,UAAiBC,MAAkC,EAAQ;QACzD,IAAI,CAACA,MAAM,IAAI,CAACA,MAAM,CAACC,OAAO,EAAE;UAC9B,MAAMC,KAAK,CAAC,kBAAkB,CAAC;QACjC;QAAC,IAAAC,qBAAA,GAE+BH,MAAM,CAACC,OAAO,CAACG,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC;QAAA,IAAAC,sBAAA,GAAAC,cAAA,CAAAH,qBAAA;QAA3D,IAAI,CAACI,OAAO,GAAAF,sBAAA;QAAE,IAAI,CAACG,QAAQ,GAAAH,sBAAA;QAE5B,IAAI,CAAC,IAAI,CAACE,OAAO,EAAE;UACjB,MAAML,KAAK,CAAC,wCAAwC,CAAC;QACvD;QAEA,IAAI,CAAC,IAAI,CAACM,QAAQ,EAAE;UAClB,MAAMN,KAAK,CAAC,sCAAsC,CAAC;QACrD;QAEA,IAAI,CAACO,OAAO,GAAGT,MAAM;MACvB;IAAC;MAAAL,IAAA;MAAAC,GAAA;MAAAC,KAAA,EAED,SAAAa,OAAA,EAAmB;QACjB,IAAI,CAAC,IAAI,CAACD,OAAO,IAAI,CAAC,IAAI,CAACE,IAAI,EAAE;UAC/B,OAAOvC,OAAO;QAChB;QAEA,OAAOF,IAAI,CAAA0C,eAAA,KAAAA,eAAA,GAAAC,sBAAA,0LAEC,IAAI,CAACF,IAAI,EACP,IAAI,CAACJ,OAAO,EACX,IAAI,CAACC,QAAQ,EACT,IAAI,CAACC,OAAO,CAACK,YAAY,EACrC,IAAI,CAACL,OAAO,CAACM,KAAK;MAG3B;IAAC;MAAApB,IAAA;MAAAqB,MAAA;MAAApB,GAAA;MAAAC,KAAA,EAED,SAAAoB,OAAA,EAAoC;QAClC,OAAOhD,GAAG,CAAAiD,gBAAA,KAAAA,gBAAA,GAAAL,sBAAA;MAMZ;IAAC;EAAA;AAAA,GApDO1C,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}