{"ast":null,"code":"export var subscribeDataEntryFlowProgressed = function subscribeDataEntryFlowProgressed(conn, callback) {\n  return conn.subscribeEvents(callback, \"data_entry_flow_progressed\");\n};","map":{"version":3,"names":["subscribeDataEntryFlowProgressed","conn","callback","subscribeEvents"],"sources":["/workspaces/frontend/src/data/data_entry_flow.ts"],"sourcesContent":["import { Connection } from \"home-assistant-js-websocket\";\nimport type { HaFormSchema } from \"../components/ha-form/types\";\nimport { ConfigEntry } from \"./config_entries\";\n\nexport type FlowType = \"config_flow\" | \"options_flow\" | \"repair_flow\";\n\nexport interface DataEntryFlowProgressedEvent {\n  type: \"data_entry_flow_progressed\";\n  data: {\n    handler: string;\n    flow_id: string;\n    refresh: boolean;\n  };\n}\n\nexport interface DataEntryFlowProgress {\n  flow_id: string;\n  handler: string;\n  step_id: string;\n  context: {\n    title_placeholders: Record<string, string>;\n    [key: string]: any;\n  };\n}\n\nexport interface DataEntryFlowStepForm {\n  type: \"form\";\n  flow_id: string;\n  handler: string;\n  step_id: string;\n  data_schema: HaFormSchema[];\n  errors: Record<string, string>;\n  description_placeholders?: Record<string, string>;\n  last_step: boolean | null;\n  preview?: string;\n}\n\nexport interface DataEntryFlowStepExternal {\n  type: \"external\";\n  flow_id: string;\n  handler: string;\n  step_id: string;\n  url: string;\n  description_placeholders: Record<string, string>;\n}\n\nexport interface DataEntryFlowStepCreateEntry {\n  type: \"create_entry\";\n  version: number;\n  flow_id: string;\n  handler: string;\n  title: string;\n  result?: ConfigEntry;\n  description: string;\n  description_placeholders?: Record<string, string>;\n}\n\nexport interface DataEntryFlowStepAbort {\n  type: \"abort\";\n  flow_id: string;\n  handler: string;\n  reason: string;\n  description_placeholders?: Record<string, string>;\n}\n\nexport interface DataEntryFlowStepProgress {\n  type: \"progress\";\n  flow_id: string;\n  handler: string;\n  step_id: string;\n  progress_action: string;\n  description_placeholders?: Record<string, string>;\n}\n\nexport interface DataEntryFlowStepMenu {\n  type: \"menu\";\n  flow_id: string;\n  handler: string;\n  step_id: string;\n  /** If array, use value to lookup translations in strings.json */\n  menu_options: string[] | Record<string, string>;\n  description_placeholders?: Record<string, string>;\n}\n\nexport type DataEntryFlowStep =\n  | DataEntryFlowStepForm\n  | DataEntryFlowStepExternal\n  | DataEntryFlowStepCreateEntry\n  | DataEntryFlowStepAbort\n  | DataEntryFlowStepProgress\n  | DataEntryFlowStepMenu;\n\nexport const subscribeDataEntryFlowProgressed = (\n  conn: Connection,\n  callback: (ev: DataEntryFlowProgressedEvent) => void\n) =>\n  conn.subscribeEvents<DataEntryFlowProgressedEvent>(\n    callback,\n    \"data_entry_flow_progressed\"\n  );\n"],"mappings":"AA4FA,OAAO,IAAMA,gCAAgC,GAAG,SAAnCA,gCAAgCA,CAC3CC,IAAgB,EAChBC,QAAoD;EAAA,OAEpDD,IAAI,CAACE,eAAe,CAClBD,QAAQ,EACR,4BACF,CAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}