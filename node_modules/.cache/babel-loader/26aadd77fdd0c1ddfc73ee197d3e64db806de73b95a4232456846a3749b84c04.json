{"ast":null,"code":"/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\nimport { BaseElement } from '@material/mwc-base/base-element.js';\nimport { MDCNotchedOutlineFoundation } from '@material/notched-outline/foundation.js';\nimport { html } from 'lit';\nimport { property, query } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nexport class NotchedOutlineBase extends BaseElement {\n  constructor() {\n    super(...arguments);\n    this.mdcFoundationClass = MDCNotchedOutlineFoundation;\n    this.width = 0;\n    this.open = false;\n    this.lastOpen = this.open;\n  }\n  createAdapter() {\n    return {\n      addClass: className => this.mdcRoot.classList.add(className),\n      removeClass: className => this.mdcRoot.classList.remove(className),\n      setNotchWidthProperty: width => this.notchElement.style.setProperty('width', `${width}px`),\n      removeNotchWidthProperty: () => this.notchElement.style.removeProperty('width')\n    };\n  }\n  openOrClose(shouldOpen, width) {\n    if (!this.mdcFoundation) {\n      return;\n    }\n    if (shouldOpen && width !== undefined) {\n      this.mdcFoundation.notch(width);\n    } else {\n      this.mdcFoundation.closeNotch();\n    }\n  }\n  render() {\n    this.openOrClose(this.open, this.width);\n    const classes = classMap({\n      'mdc-notched-outline--notched': this.open\n    });\n    return html`\n      <span class=\"mdc-notched-outline ${classes}\">\n        <span class=\"mdc-notched-outline__leading\"></span>\n        <span class=\"mdc-notched-outline__notch\">\n          <slot></slot>\n        </span>\n        <span class=\"mdc-notched-outline__trailing\"></span>\n      </span>`;\n  }\n}\n__decorate([query('.mdc-notched-outline')], NotchedOutlineBase.prototype, \"mdcRoot\", void 0);\n__decorate([property({\n  type: Number\n})], NotchedOutlineBase.prototype, \"width\", void 0);\n__decorate([property({\n  type: Boolean,\n  reflect: true\n})], NotchedOutlineBase.prototype, \"open\", void 0);\n__decorate([query('.mdc-notched-outline__notch')], NotchedOutlineBase.prototype, \"notchElement\", void 0);","map":{"version":3,"names":["BaseElement","MDCNotchedOutlineFoundation","html","property","query","classMap","NotchedOutlineBase","constructor","mdcFoundationClass","width","open","lastOpen","createAdapter","addClass","className","mdcRoot","classList","add","removeClass","remove","setNotchWidthProperty","notchElement","style","setProperty","removeNotchWidthProperty","removeProperty","openOrClose","shouldOpen","mdcFoundation","undefined","notch","closeNotch","render","classes","__decorate","type","Number","Boolean","reflect"],"sources":["mwc-notched-outline-base.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\n\nimport {BaseElement} from '@material/mwc-base/base-element.js';\nimport {MDCNotchedOutlineAdapter} from '@material/notched-outline/adapter.js';\nimport {MDCNotchedOutlineFoundation} from '@material/notched-outline/foundation.js';\nimport {html} from 'lit';\nimport {property, query} from 'lit/decorators.js';\nimport {classMap} from 'lit/directives/class-map.js';\n\nexport class NotchedOutlineBase extends BaseElement {\n  @query('.mdc-notched-outline') protected mdcRoot!: HTMLElement;\n  protected mdcFoundation!: MDCNotchedOutlineFoundation;\n\n  protected readonly mdcFoundationClass = MDCNotchedOutlineFoundation;\n\n  @property({type: Number}) width = 0;\n\n  @property({type: Boolean, reflect: true}) open = false;\n\n  protected lastOpen = this.open;\n\n  @query('.mdc-notched-outline__notch') protected notchElement!: HTMLDivElement;\n\n  protected createAdapter(): MDCNotchedOutlineAdapter {\n    return {\n      addClass: (className) => this.mdcRoot.classList.add(className),\n      removeClass: (className) => this.mdcRoot.classList.remove(className),\n      setNotchWidthProperty: (width) =>\n          this.notchElement.style.setProperty('width', `${width}px`),\n      removeNotchWidthProperty: () =>\n          this.notchElement.style.removeProperty('width'),\n    };\n  }\n\n  protected openOrClose(shouldOpen: boolean, width?: number) {\n    if (!this.mdcFoundation) {\n      return;\n    }\n\n    if (shouldOpen && width !== undefined) {\n      this.mdcFoundation.notch(width);\n    } else {\n      this.mdcFoundation.closeNotch();\n    }\n  }\n\n  override render() {\n    this.openOrClose(this.open, this.width);\n\n    const classes = classMap({\n      'mdc-notched-outline--notched': this.open,\n    });\n\n    return html`\n      <span class=\"mdc-notched-outline ${classes}\">\n        <span class=\"mdc-notched-outline__leading\"></span>\n        <span class=\"mdc-notched-outline__notch\">\n          <slot></slot>\n        </span>\n        <span class=\"mdc-notched-outline__trailing\"></span>\n      </span>`;\n  }\n}\n"],"mappings":"AAAA;;;;;;AAMA;AACA;AAEA,SAAQA,WAAW,QAAO,oCAAoC;AAE9D,SAAQC,2BAA2B,QAAO,yCAAyC;AACnF,SAAQC,IAAI,QAAO,KAAK;AACxB,SAAQC,QAAQ,EAAEC,KAAK,QAAO,mBAAmB;AACjD,SAAQC,QAAQ,QAAO,6BAA6B;AAEpD,OAAM,MAAOC,kBAAmB,SAAQN,WAAW;EAAnDO,YAAA;;IAIqB,KAAAC,kBAAkB,GAAGP,2BAA2B;IAEzC,KAAAQ,KAAK,GAAG,CAAC;IAEO,KAAAC,IAAI,GAAG,KAAK;IAE5C,KAAAC,QAAQ,GAAG,IAAI,CAACD,IAAI;EA2ChC;EAvCYE,aAAaA,CAAA;IACrB,OAAO;MACLC,QAAQ,EAAGC,SAAS,IAAK,IAAI,CAACC,OAAO,CAACC,SAAS,CAACC,GAAG,CAACH,SAAS,CAAC;MAC9DI,WAAW,EAAGJ,SAAS,IAAK,IAAI,CAACC,OAAO,CAACC,SAAS,CAACG,MAAM,CAACL,SAAS,CAAC;MACpEM,qBAAqB,EAAGX,KAAK,IACzB,IAAI,CAACY,YAAY,CAACC,KAAK,CAACC,WAAW,CAAC,OAAO,EAAE,GAAGd,KAAK,IAAI,CAAC;MAC9De,wBAAwB,EAAEA,CAAA,KACtB,IAAI,CAACH,YAAY,CAACC,KAAK,CAACG,cAAc,CAAC,OAAO;KACnD;EACH;EAEUC,WAAWA,CAACC,UAAmB,EAAElB,KAAc;IACvD,IAAI,CAAC,IAAI,CAACmB,aAAa,EAAE;MACvB;;IAGF,IAAID,UAAU,IAAIlB,KAAK,KAAKoB,SAAS,EAAE;MACrC,IAAI,CAACD,aAAa,CAACE,KAAK,CAACrB,KAAK,CAAC;KAChC,MAAM;MACL,IAAI,CAACmB,aAAa,CAACG,UAAU,EAAE;;EAEnC;EAESC,MAAMA,CAAA;IACb,IAAI,CAACN,WAAW,CAAC,IAAI,CAAChB,IAAI,EAAE,IAAI,CAACD,KAAK,CAAC;IAEvC,MAAMwB,OAAO,GAAG5B,QAAQ,CAAC;MACvB,8BAA8B,EAAE,IAAI,CAACK;KACtC,CAAC;IAEF,OAAOR,IAAI;yCAC0B+B,OAAO;;;;;;cAMlC;EACZ;;AAnD+BC,UAAA,EAA9B9B,KAAK,CAAC,sBAAsB,CAAC,C,kDAAiC;AAKrC8B,UAAA,EAAzB/B,QAAQ,CAAC;EAACgC,IAAI,EAAEC;AAAM,CAAC,CAAC,C,gDAAW;AAEMF,UAAA,EAAzC/B,QAAQ,CAAC;EAACgC,IAAI,EAAEE,OAAO;EAAEC,OAAO,EAAE;AAAI,CAAC,CAAC,C,+CAAc;AAIjBJ,UAAA,EAArC9B,KAAK,CAAC,6BAA6B,CAAC,C,uDAAyC"},"metadata":{},"sourceType":"module","externalDependencies":[]}