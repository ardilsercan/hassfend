{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/helpers/regeneratorRuntime\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _createForOfIteratorHelper from \"@babel/runtime/helpers/createForOfIteratorHelper\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10, _templateObject11, _templateObject12, _templateObject13, _templateObject14, _templateObject15, _templateObject16, _templateObject17, _templateObject18, _templateObject19, _templateObject20, _templateObject21;\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.string.search.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/esnext.set.difference.v2.js\";\nimport \"core-js/modules/esnext.set.intersection.v2.js\";\nimport \"core-js/modules/esnext.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/esnext.set.is-subset-of.v2.js\";\nimport \"core-js/modules/esnext.set.is-superset-of.v2.js\";\nimport \"core-js/modules/esnext.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/esnext.set.union.v2.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.url-search-params.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nvar mdiFilterVariant = \"M6,13H18V11H6M3,6V8H21V6M10,18H14V16H10V18Z\";\nvar mdiPlus = \"M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z\";\nimport Fuse from \"fuse.js\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { ifDefined } from \"lit/directives/if-defined\";\nimport memoizeOne from \"memoize-one\";\nimport { isComponentLoaded } from \"../../../common/config/is_component_loaded\";\nimport { protocolIntegrationPicked, PROTOCOL_INTEGRATIONS } from \"../../../common/integrations/protocolIntegrationPicked\";\nimport { navigate } from \"../../../common/navigate\";\nimport { extractSearchParam } from \"../../../common/url/search-params\";\nimport { nextRender } from \"../../../common/util/render-status\";\nimport \"../../../components/ha-button-menu\";\nimport \"../../../components/ha-check-list-item\";\nimport \"../../../components/ha-checkbox\";\nimport \"../../../components/ha-fab\";\nimport \"../../../components/ha-icon-button\";\nimport \"../../../components/ha-svg-icon\";\nimport \"../../../components/search-input\";\nimport { getConfigFlowInProgressCollection } from \"../../../data/config_flow\";\nimport { fetchDiagnosticHandlers } from \"../../../data/diagnostics\";\nimport { subscribeEntityRegistry } from \"../../../data/entity_registry\";\nimport { domainToName, fetchIntegrationManifest, fetchIntegrationManifests, subscribeLogInfo } from \"../../../data/integration\";\nimport { findIntegration, getIntegrationDescriptions } from \"../../../data/integrations\";\nimport { scanUSBDevices } from \"../../../data/usb\";\nimport { showConfigFlowDialog } from \"../../../dialogs/config-flow/show-dialog-config-flow\";\nimport { showAlertDialog, showConfirmationDialog } from \"../../../dialogs/generic/show-dialog-box\";\nimport \"../../../layouts/hass-loading-screen\";\nimport \"../../../layouts/hass-tabs-subpage\";\nimport { SubscribeMixin } from \"../../../mixins/subscribe-mixin\";\nimport { haStyle } from \"../../../resources/styles\";\nimport { configSections } from \"../ha-panel-config\";\nimport { isHelperDomain } from \"../helpers/const\";\nimport \"./ha-config-flow-card\";\nimport \"./ha-ignored-config-entry-card\";\nimport \"./ha-integration-card\";\nimport \"./ha-integration-overflow-menu\";\nimport { showAddIntegrationDialog } from \"./show-add-integration-dialog\";\nimport \"./ha-disabled-config-entry-card\";\nimport { caseInsensitiveStringCompare } from \"../../../common/string/compare\";\nvar groupByIntegration = function groupByIntegration(entries) {\n  var result = new Map();\n  entries.forEach(function (entry) {\n    if (result.has(entry.domain)) {\n      result.get(entry.domain).push(entry);\n    } else {\n      result.set(entry.domain, [entry]);\n    }\n  });\n  return result;\n};\nvar HaConfigIntegrationsDashboard = _decorate([customElement(\"ha-config-integrations-dashboard\")], function (_initialize, _SubscribeMixin) {\n  var HaConfigIntegrationsDashboard = /*#__PURE__*/function (_SubscribeMixin2) {\n    _inherits(HaConfigIntegrationsDashboard, _SubscribeMixin2);\n    function HaConfigIntegrationsDashboard() {\n      var _this;\n      _classCallCheck(this, HaConfigIntegrationsDashboard);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, HaConfigIntegrationsDashboard, [].concat(args));\n      _initialize(_assertThisInitialized(_this));\n      return _this;\n    }\n    return _createClass(HaConfigIntegrationsDashboard);\n  }(_SubscribeMixin);\n  return {\n    F: HaConfigIntegrationsDashboard,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        reflect: true\n      })],\n      key: \"narrow\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"isWide\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"showAdvanced\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"route\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"configEntries\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"configEntriesInProgress\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_entityRegistryEntries\",\n      value: function value() {\n        return [];\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_manifests\",\n      value: function value() {\n        return {};\n      }\n    }, {\n      kind: \"field\",\n      key: \"_extraFetchedManifests\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_showIgnored\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_showDisabled\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_searchParms\",\n      value: function value() {\n        return new URLSearchParams(window.location.hash.substring(1));\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_filter\",\n      value: function value() {\n        var _history$state;\n        return ((_history$state = history.state) === null || _history$state === void 0 ? void 0 : _history$state.filter) || \"\";\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_diagnosticHandlers\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_logInfos\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"hassSubscribe\",\n      value: function hassSubscribe() {\n        var _this2 = this;\n        return [subscribeEntityRegistry(this.hass.connection, function (entries) {\n          _this2._entityRegistryEntries = entries;\n        }), subscribeLogInfo(this.hass.connection, function (log_infos) {\n          var logInfoLookup = {};\n          var _iterator = _createForOfIteratorHelper(log_infos),\n            _step;\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var log_info = _step.value;\n              logInfoLookup[log_info.domain] = log_info;\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n          _this2._logInfos = logInfoLookup;\n        })];\n      }\n    }, {\n      kind: \"field\",\n      key: \"_filterConfigEntries\",\n      value: function value() {\n        var _this3 = this;\n        return memoizeOne(function (configEntries, filter) {\n          var filteredConfigEntries;\n          var ignored = [];\n          var disabled = [];\n          var integrations = [];\n          if (filter) {\n            var options = {\n              keys: [\"domain\", \"localized_domain_name\", \"title\"],\n              isCaseSensitive: false,\n              minMatchCharLength: Math.min(filter.length, 2),\n              threshold: 0.2\n            };\n            var fuse = new Fuse(configEntries, options);\n            filteredConfigEntries = fuse.search(filter).map(function (result) {\n              return result.item;\n            });\n          } else {\n            filteredConfigEntries = configEntries;\n          }\n          var _iterator2 = _createForOfIteratorHelper(filteredConfigEntries),\n            _step2;\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var entry = _step2.value;\n              if (entry.source === \"ignore\") {\n                ignored.push(entry);\n              } else if (entry.disabled_by !== null) {\n                disabled.push(entry);\n              } else {\n                integrations.push(entry);\n              }\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n          return [Array.from(groupByIntegration(integrations)).sort(function (groupA, groupB) {\n            return caseInsensitiveStringCompare(groupA[1][0].localized_domain_name || groupA[0], groupB[1][0].localized_domain_name || groupB[0], _this3.hass.locale.language);\n          }), ignored, disabled];\n        });\n      }\n    }, {\n      kind: \"field\",\n      key: \"_filterConfigEntriesInProgress\",\n      value: function value() {\n        var _this4 = this;\n        return memoizeOne(function (configEntriesInProgress, filter) {\n          var filteredEntries;\n          if (filter) {\n            var options = {\n              keys: [\"handler\", \"localized_title\"],\n              isCaseSensitive: false,\n              minMatchCharLength: Math.min(filter.length, 2),\n              threshold: 0.2\n            };\n            var fuse = new Fuse(configEntriesInProgress, options);\n            filteredEntries = fuse.search(filter).map(function (result) {\n              return result.item;\n            });\n          } else {\n            filteredEntries = configEntriesInProgress;\n          }\n          return filteredEntries.sort(function (a, b) {\n            return caseInsensitiveStringCompare(a.localized_title || a.handler, b.localized_title || b.handler, _this4.hass.locale.language);\n          });\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"firstUpdated\",\n      value: function firstUpdated(changed) {\n        var _this5 = this;\n        _get(_getPrototypeOf(HaConfigIntegrationsDashboard.prototype), \"firstUpdated\", this).call(this, changed);\n        this._fetchManifests();\n        if (this.route.path === \"/add\") {\n          this._handleAdd();\n        }\n        this._scanUSBDevices();\n        if (isComponentLoaded(this.hass, \"diagnostics\")) {\n          fetchDiagnosticHandlers(this.hass).then(function (infos) {\n            var handlers = {};\n            var _iterator3 = _createForOfIteratorHelper(infos),\n              _step3;\n            try {\n              for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                var info = _step3.value;\n                handlers[info.domain] = info.handlers.config_entry;\n              }\n            } catch (err) {\n              _iterator3.e(err);\n            } finally {\n              _iterator3.f();\n            }\n            _this5._diagnosticHandlers = handlers;\n          });\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"updated\",\n      value: function updated(changed) {\n        _get(_getPrototypeOf(HaConfigIntegrationsDashboard.prototype), \"updated\", this).call(this, changed);\n        if ((this._searchParms.has(\"config_entry\") || this._searchParms.has(\"domain\")) && changed.has(\"configEntries\") && !changed.get(\"configEntries\") && this.configEntries) {\n          this._highlightEntry();\n        }\n        if (changed.has(\"configEntriesInProgress\") && this.configEntriesInProgress) {\n          this._fetchIntegrationManifests(this.configEntriesInProgress.map(function (flow) {\n            return flow.handler;\n          }));\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var _this6 = this;\n        if (!this.configEntries || !this.configEntriesInProgress) {\n          return html(_templateObject || (_templateObject = _taggedTemplateLiteral([\"<hass-loading-screen\\n        .hass=\", \"\\n        .narrow=\", \"\\n      ></hass-loading-screen>\"])), this.hass, this.narrow);\n        }\n        var _this$_filterConfigEn = this._filterConfigEntries(this.configEntries, this._filter),\n          _this$_filterConfigEn2 = _slicedToArray(_this$_filterConfigEn, 3),\n          integrations = _this$_filterConfigEn2[0],\n          ignoredConfigEntries = _this$_filterConfigEn2[1],\n          disabledConfigEntries = _this$_filterConfigEn2[2];\n        var configEntriesInProgress = this._filterConfigEntriesInProgress(this.configEntriesInProgress, this._filter);\n        var filterMenu = html(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n      <div slot=\", \">\\n        <div class=\\\"menu-badge-container\\\">\\n          \", \"\\n          <ha-button-menu\\n            multi\\n            @action=\", \"\\n            @click=\", \"\\n          >\\n            <ha-icon-button\\n              slot=\\\"trigger\\\"\\n              .label=\", \"\\n              .path=\", \"\\n            >\\n            </ha-icon-button>\\n            <ha-check-list-item left .selected=\", \">\\n              \", \"\\n            </ha-check-list-item>\\n            <ha-check-list-item left .selected=\", \">\\n              \", \"\\n            </ha-check-list-item>\\n          </ha-button-menu>\\n        </div>\\n        \", \"\\n      </div>\\n    \"])), ifDefined(this.narrow ? \"toolbar-icon\" : undefined), !this._showDisabled && this.narrow && disabledConfigEntries.length ? html(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"<span class=\\\"badge\\\">\", \"</span>\"])), disabledConfigEntries.length) : \"\", this._handleMenuAction, this._preventDefault, this.hass.localize(\"ui.common.menu\"), mdiFilterVariant, this._showIgnored, this.hass.localize(\"ui.panel.config.integrations.ignore.show_ignored\"), this._showDisabled, this.hass.localize(\"ui.panel.config.integrations.disable.show_disabled\"), this.narrow ? html(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n              <ha-integration-overflow-menu\\n                .hass=\", \"\\n                slot=\\\"toolbar-icon\\\"\\n              ></ha-integration-overflow-menu>\\n            \"])), this.hass) : \"\");\n        return html(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"\\n      <hass-tabs-subpage\\n        .hass=\", \"\\n        .narrow=\", \"\\n        back-path=\\\"/config\\\"\\n        .route=\", \"\\n        .tabs=\", \"\\n      >\\n        \", \"\\n        \", \"\\n        \", \"\\n        \", \"\\n        \", \"\\n        <div class=\\\"container\\\">\\n          \", \"\\n        </div>\\n        <ha-fab\\n          slot=\\\"fab\\\"\\n          .label=\", \"\\n          extended\\n          @click=\", \"\\n        >\\n          <ha-svg-icon slot=\\\"icon\\\" .path=\", \"></ha-svg-icon>\\n        </ha-fab>\\n      </hass-tabs-subpage>\\n    \"])), this.hass, this.narrow, this.route, configSections.devices, this.narrow ? html(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"\\n              <div slot=\\\"header\\\">\\n                <search-input\\n                  .hass=\", \"\\n                  .filter=\", \"\\n                  class=\\\"header\\\"\\n                  @value-changed=\", \"\\n                  .label=\", \"\\n                ></search-input>\\n              </div>\\n              \", \"\\n            \"])), this.hass, this._filter, this._handleSearchChange, this.hass.localize(\"ui.panel.config.integrations.search\"), filterMenu) : html(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral([\"\\n              <ha-integration-overflow-menu\\n                .hass=\", \"\\n                slot=\\\"toolbar-icon\\\"\\n              ></ha-integration-overflow-menu>\\n              <div class=\\\"search\\\">\\n                <search-input\\n                  .hass=\", \"\\n                  suffix\\n                  .filter=\", \"\\n                  @value-changed=\", \"\\n                  .label=\", \"\\n                >\\n                  <div class=\\\"filters\\\" slot=\\\"suffix\\\">\\n                    \", \"\\n                    \", \"\\n                  </div>\\n                </search-input>\\n              </div>\\n            \"])), this.hass, this.hass, this._filter, this._handleSearchChange, this.hass.localize(\"ui.panel.config.integrations.search\"), !this._showDisabled && disabledConfigEntries.length ? html(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral([\"<div\\n                          class=\\\"active-filters\\\"\\n                          @click=\", \"\\n                        >\\n                          \", \"\\n                          <mwc-button\\n                            @click=\", \"\\n                            .label=\", \"\\n                          ></mwc-button>\\n                        </div>\"])), this._preventDefault, this.hass.localize(\"ui.panel.config.integrations.disable.disabled_integrations\", {\n          number: disabledConfigEntries.length\n        }), this._toggleShowDisabled, this.hass.localize(\"ui.panel.config.integrations.disable.show\")) : \"\", filterMenu), this._showIgnored ? html(_templateObject9 || (_templateObject9 = _taggedTemplateLiteral([\"<h1>\\n                \", \"\\n              </h1>\\n              <div class=\\\"container\\\">\\n                \", \"\\n              </div>\"])), this.hass.localize(\"ui.panel.config.integrations.ignore.ignored\"), ignoredConfigEntries.length > 0 ? ignoredConfigEntries.map(function (entry) {\n          return html(_templateObject10 || (_templateObject10 = _taggedTemplateLiteral([\"\\n                        <ha-ignored-config-entry-card\\n                          .hass=\", \"\\n                          .manifest=\", \"\\n                          .entry=\", \"\\n                          @change=\", \"\\n                        ></ha-ignored-config-entry-card>\\n                      \"])), _this6.hass, _this6._manifests[entry.domain], entry, _this6._handleFlowUpdated);\n        }) : html(_templateObject11 || (_templateObject11 = _taggedTemplateLiteral([\"\", \"\"])), this.hass.localize(\"ui.panel.config.integrations.no_ignored_integrations\"))) : \"\", configEntriesInProgress.length ? html(_templateObject12 || (_templateObject12 = _taggedTemplateLiteral([\"<h1>\\n                \", \"\\n              </h1>\\n              <div class=\\\"container\\\">\\n                \", \"\\n              </div>\"])), this.hass.localize(\"ui.panel.config.integrations.discovered\"), configEntriesInProgress.map(function (flow) {\n          return html(_templateObject13 || (_templateObject13 = _taggedTemplateLiteral([\"\\n                    <ha-config-flow-card\\n                      .hass=\", \"\\n                      .manifest=\", \"\\n                      .flow=\", \"\\n                      @change=\", \"\\n                    ></ha-config-flow-card>\\n                  \"])), _this6.hass, _this6._manifests[flow.handler], flow, _this6._handleFlowUpdated);\n        })) : \"\", this._showDisabled ? html(_templateObject14 || (_templateObject14 = _taggedTemplateLiteral([\"<h1>\\n                \", \"\\n              </h1>\\n              <div class=\\\"container\\\">\\n                \", \"\\n              </div>\"])), this.hass.localize(\"ui.panel.config.integrations.disabled\"), disabledConfigEntries.length > 0 ? disabledConfigEntries.map(function (entry) {\n          return html(_templateObject15 || (_templateObject15 = _taggedTemplateLiteral([\"\\n                        <ha-disabled-config-entry-card\\n                          .hass=\", \"\\n                          .entry=\", \"\\n                          .manifest=\", \"\\n                          .entityRegistryEntries=\", \"\\n                        ></ha-disabled-config-entry-card>\\n                      \"])), _this6.hass, entry, _this6._manifests[entry.domain], _this6._entityRegistryEntries);\n        }) : html(_templateObject16 || (_templateObject16 = _taggedTemplateLiteral([\"\", \"\"])), this.hass.localize(\"ui.panel.config.integrations.no_disabled_integrations\"))) : \"\", configEntriesInProgress.length || this._showDisabled || this._showIgnored ? html(_templateObject17 || (_templateObject17 = _taggedTemplateLiteral([\"<h1>\\n              \", \"\\n            </h1>\"])), this.hass.localize(\"ui.panel.config.integrations.configured\")) : \"\", integrations.length ? integrations.map(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n            domain = _ref2[0],\n            items = _ref2[1];\n          return html(_templateObject18 || (_templateObject18 = _taggedTemplateLiteral([\"<ha-integration-card\\n                    data-domain=\", \"\\n                    .hass=\", \"\\n                    .domain=\", \"\\n                    .items=\", \"\\n                    .manifest=\", \"\\n                    .entityRegistryEntries=\", \"\\n                    .supportsDiagnostics=\", \"\\n                    .logInfo=\", \"\\n                  ></ha-integration-card>\"])), domain, _this6.hass, domain, items, _this6._manifests[domain], _this6._entityRegistryEntries, _this6._diagnosticHandlers ? _this6._diagnosticHandlers[domain] : false, _this6._logInfos ? _this6._logInfos[domain] : nothing);\n        }) : this._filter && !configEntriesInProgress.length && !integrations.length && this.configEntries.length ? html(_templateObject19 || (_templateObject19 = _taggedTemplateLiteral([\"\\n                  <div class=\\\"empty-message\\\">\\n                    <h1>\\n                      \", \"\\n                    </h1>\\n                    <p>\\n                      \", \"\\n                    </p>\\n                    <mwc-button\\n                      @click=\", \"\\n                      unelevated\\n                      .label=\", \"\\n                    ></mwc-button>\\n                  </div>\\n                \"])), this.hass.localize(\"ui.panel.config.integrations.none_found\"), this.hass.localize(\"ui.panel.config.integrations.none_found_detail\"), this._createFlow, this.hass.localize(\"ui.panel.config.integrations.add_integration\")) :\n        // If we have a filter, never show a card\n        this._filter ? \"\" :\n        // If we're showing 0 cards, show empty state text\n        (!this._showIgnored || ignoredConfigEntries.length === 0) && (!this._showDisabled || disabledConfigEntries.length === 0) && integrations.length === 0 ? html(_templateObject20 || (_templateObject20 = _taggedTemplateLiteral([\"\\n                      <div class=\\\"empty-message\\\">\\n                        <h1>\\n                          \", \"\\n                        </h1>\\n                        <p>\\n                          \", \"\\n                        </p>\\n                        <mwc-button\\n                          @click=\", \"\\n                          unelevated\\n                          .label=\", \"\\n                        ></mwc-button>\\n                      </div>\\n                    \"])), this.hass.localize(\"ui.panel.config.integrations.none\"), this.hass.localize(\"ui.panel.config.integrations.no_integrations\"), this._createFlow, this.hass.localize(\"ui.panel.config.integrations.add_integration\")) : \"\", this.hass.localize(\"ui.panel.config.integrations.add_integration\"), this._createFlow, mdiPlus);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_preventDefault\",\n      value: function _preventDefault(ev) {\n        ev.preventDefault();\n      }\n    }, {\n      kind: \"method\",\n      key: \"_scanUSBDevices\",\n      value: function () {\n        var _scanUSBDevices2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                if (isComponentLoaded(this.hass, \"usb\")) {\n                  _context.next = 2;\n                  break;\n                }\n                return _context.abrupt(\"return\");\n              case 2:\n                _context.next = 4;\n                return scanUSBDevices(this.hass);\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee, this);\n        }));\n        function _scanUSBDevices() {\n          return _scanUSBDevices2.apply(this, arguments);\n        }\n        return _scanUSBDevices;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"_fetchManifests\",\n      value: function () {\n        var _fetchManifests2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(integrations) {\n          var fetched, manifests, _iterator4, _step4, manifest;\n          return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n            while (1) switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return fetchIntegrationManifests(this.hass, integrations);\n              case 2:\n                fetched = _context2.sent;\n                // Make a copy so we can keep track of previously loaded manifests\n                // for discovered flows (which are not part of these results)\n                manifests = Object.assign({}, this._manifests);\n                _iterator4 = _createForOfIteratorHelper(fetched);\n                try {\n                  for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                    manifest = _step4.value;\n                    manifests[manifest.domain] = manifest;\n                  }\n                } catch (err) {\n                  _iterator4.e(err);\n                } finally {\n                  _iterator4.f();\n                }\n                this._manifests = manifests;\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }, _callee2, this);\n        }));\n        function _fetchManifests(_x) {\n          return _fetchManifests2.apply(this, arguments);\n        }\n        return _fetchManifests;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"_fetchIntegrationManifests\",\n      value: function () {\n        var _fetchIntegrationManifests2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(integrations) {\n          var manifestsToFetch, _iterator5, _step5, _integration;\n          return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n            while (1) switch (_context3.prev = _context3.next) {\n              case 0:\n                manifestsToFetch = [];\n                _iterator5 = _createForOfIteratorHelper(integrations);\n                _context3.prev = 2;\n                _iterator5.s();\n              case 4:\n                if ((_step5 = _iterator5.n()).done) {\n                  _context3.next = 18;\n                  break;\n                }\n                _integration = _step5.value;\n                if (!(_integration in this._manifests)) {\n                  _context3.next = 8;\n                  break;\n                }\n                return _context3.abrupt(\"continue\", 16);\n              case 8:\n                if (!this._extraFetchedManifests) {\n                  _context3.next = 13;\n                  break;\n                }\n                if (!this._extraFetchedManifests.has(_integration)) {\n                  _context3.next = 11;\n                  break;\n                }\n                return _context3.abrupt(\"continue\", 16);\n              case 11:\n                _context3.next = 14;\n                break;\n              case 13:\n                this._extraFetchedManifests = new Set();\n              case 14:\n                this._extraFetchedManifests.add(_integration);\n                manifestsToFetch.push(_integration);\n              case 16:\n                _context3.next = 4;\n                break;\n              case 18:\n                _context3.next = 23;\n                break;\n              case 20:\n                _context3.prev = 20;\n                _context3.t0 = _context3[\"catch\"](2);\n                _iterator5.e(_context3.t0);\n              case 23:\n                _context3.prev = 23;\n                _iterator5.f();\n                return _context3.finish(23);\n              case 26:\n                if (!manifestsToFetch.length) {\n                  _context3.next = 29;\n                  break;\n                }\n                _context3.next = 29;\n                return this._fetchManifests(manifestsToFetch);\n              case 29:\n              case \"end\":\n                return _context3.stop();\n            }\n          }, _callee3, this, [[2, 20, 23, 26]]);\n        }));\n        function _fetchIntegrationManifests(_x2) {\n          return _fetchIntegrationManifests2.apply(this, arguments);\n        }\n        return _fetchIntegrationManifests;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"_handleFlowUpdated\",\n      value: function _handleFlowUpdated() {\n        getConfigFlowInProgressCollection(this.hass.connection).refresh();\n        this._fetchManifests();\n      }\n    }, {\n      kind: \"method\",\n      key: \"_createFlow\",\n      value: function _createFlow() {\n        showAddIntegrationDialog(this, {\n          initialFilter: this._filter\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleMenuAction\",\n      value: function _handleMenuAction(ev) {\n        switch (ev.detail.index) {\n          case 0:\n            this._showIgnored = !this._showIgnored;\n            break;\n          case 1:\n            this._toggleShowDisabled();\n            break;\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_toggleShowDisabled\",\n      value: function _toggleShowDisabled() {\n        this._showDisabled = !this._showDisabled;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleSearchChange\",\n      value: function _handleSearchChange(ev) {\n        this._filter = ev.detail.value;\n        history.replaceState({\n          filter: this._filter\n        }, \"\");\n      }\n    }, {\n      kind: \"method\",\n      key: \"_highlightEntry\",\n      value: function () {\n        var _highlightEntry2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n          var entryId, domain, configEntry, card;\n          return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n            while (1) switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return nextRender();\n              case 2:\n                entryId = this._searchParms.get(\"config_entry\");\n                if (!entryId) {\n                  _context4.next = 10;\n                  break;\n                }\n                configEntry = this.configEntries.find(function (entry) {\n                  return entry.entry_id === entryId;\n                });\n                if (configEntry) {\n                  _context4.next = 7;\n                  break;\n                }\n                return _context4.abrupt(\"return\");\n              case 7:\n                domain = configEntry.domain;\n                _context4.next = 11;\n                break;\n              case 10:\n                domain = this._searchParms.get(\"domain\");\n              case 11:\n                card = this.shadowRoot.querySelector(\"[data-domain=\".concat(domain, \"]\"));\n                if (card) {\n                  card.scrollIntoView({\n                    block: \"center\"\n                  });\n                  card.classList.add(\"highlight\");\n                }\n              case 13:\n              case \"end\":\n                return _context4.stop();\n            }\n          }, _callee4, this);\n        }));\n        function _highlightEntry() {\n          return _highlightEntry2.apply(this, arguments);\n        }\n        return _highlightEntry;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"_handleAdd\",\n      value: function () {\n        var _handleAdd2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n          var _this7 = this;\n          var brand, domain, descriptions, integrations, integration, localize, _localize, supportedIntegration, helpers, helper;\n          return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n            while (1) switch (_context6.prev = _context6.next) {\n              case 0:\n                brand = extractSearchParam(\"brand\");\n                domain = extractSearchParam(\"domain\");\n                navigate(\"/config/integrations\", {\n                  replace: true\n                });\n                if (!brand) {\n                  _context6.next = 6;\n                  break;\n                }\n                showAddIntegrationDialog(this, {\n                  brand: brand\n                });\n                return _context6.abrupt(\"return\");\n              case 6:\n                if (domain) {\n                  _context6.next = 8;\n                  break;\n                }\n                return _context6.abrupt(\"return\");\n              case 8:\n                _context6.next = 10;\n                return getIntegrationDescriptions(this.hass);\n              case 10:\n                descriptions = _context6.sent;\n                integrations = Object.assign(Object.assign({}, descriptions.core.integration), descriptions.custom.integration);\n                integration = findIntegration(integrations, domain);\n                if (!(integration !== null && integration !== void 0 && integration.config_flow)) {\n                  _context6.next = 22;\n                  break;\n                }\n                _context6.next = 16;\n                return this.hass.loadBackendTranslation(\"title\", domain, false);\n              case 16:\n                localize = _context6.sent;\n                _context6.next = 19;\n                return showConfirmationDialog(this, {\n                  title: localize(\"ui.panel.config.integrations.confirm_new\", {\n                    integration: integration.name || domainToName(localize, domain)\n                  })\n                });\n              case 19:\n                if (!_context6.sent) {\n                  _context6.next = 21;\n                  break;\n                }\n                showAddIntegrationDialog(this, {\n                  domain: domain\n                });\n              case 21:\n                return _context6.abrupt(\"return\");\n              case 22:\n                if (!(integration !== null && integration !== void 0 && integration.supported_by)) {\n                  _context6.next = 31;\n                  break;\n                }\n                _context6.next = 25;\n                return this.hass.loadBackendTranslation(\"title\", domain, false);\n              case 25:\n                _localize = _context6.sent;\n                supportedIntegration = findIntegration(integrations, integration.supported_by);\n                if (supportedIntegration) {\n                  _context6.next = 29;\n                  break;\n                }\n                return _context6.abrupt(\"return\");\n              case 29:\n                showConfirmationDialog(this, {\n                  text: this.hass.localize(\"ui.panel.config.integrations.config_flow.supported_brand_flow\", {\n                    supported_brand: integration.name || domainToName(_localize, domain),\n                    flow_domain_name: supportedIntegration.name || domainToName(_localize, integration.supported_by)\n                  }),\n                  confirm: function () {\n                    var _confirm = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n                      var _this7$hass$userData;\n                      return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n                        while (1) switch (_context5.prev = _context5.next) {\n                          case 0:\n                            if (!PROTOCOL_INTEGRATIONS.includes(integration.supported_by)) {\n                              _context5.next = 3;\n                              break;\n                            }\n                            protocolIntegrationPicked(_this7, _this7.hass, integration.supported_by);\n                            return _context5.abrupt(\"return\");\n                          case 3:\n                            _context5.t0 = showConfigFlowDialog;\n                            _context5.t1 = _this7;\n                            _context5.t2 = function dialogClosedCallback() {\n                              _this7._handleFlowUpdated();\n                            };\n                            _context5.t3 = integration.supported_by;\n                            _context5.next = 9;\n                            return fetchIntegrationManifest(_this7.hass, integration.supported_by);\n                          case 9:\n                            _context5.t4 = _context5.sent;\n                            _context5.t5 = (_this7$hass$userData = _this7.hass.userData) === null || _this7$hass$userData === void 0 ? void 0 : _this7$hass$userData.showAdvanced;\n                            _context5.t6 = {\n                              dialogClosedCallback: _context5.t2,\n                              startFlowHandler: _context5.t3,\n                              manifest: _context5.t4,\n                              showAdvanced: _context5.t5\n                            };\n                            (0, _context5.t0)(_context5.t1, _context5.t6);\n                          case 13:\n                          case \"end\":\n                            return _context5.stop();\n                        }\n                      }, _callee5);\n                    }));\n                    function confirm() {\n                      return _confirm.apply(this, arguments);\n                    }\n                    return confirm;\n                  }()\n                });\n                return _context6.abrupt(\"return\");\n              case 31:\n                if (!isHelperDomain(domain)) {\n                  _context6.next = 34;\n                  break;\n                }\n                navigate(\"/config/helpers/add?domain=\".concat(domain), {\n                  replace: true\n                });\n                return _context6.abrupt(\"return\");\n              case 34:\n                helpers = Object.assign(Object.assign({}, descriptions.core.helper), descriptions.custom.helper);\n                helper = findIntegration(helpers, domain);\n                if (!helper) {\n                  _context6.next = 39;\n                  break;\n                }\n                navigate(\"/config/helpers/add?domain=\".concat(domain), {\n                  replace: true\n                });\n                return _context6.abrupt(\"return\");\n              case 39:\n                showAlertDialog(this, {\n                  title: this.hass.localize(\"ui.panel.config.integrations.config_flow.error\"),\n                  text: this.hass.localize(\"ui.panel.config.integrations.config_flow.no_config_flow\")\n                });\n              case 40:\n              case \"end\":\n                return _context6.stop();\n            }\n          }, _callee6, this);\n        }));\n        function _handleAdd() {\n          return _handleAdd2.apply(this, arguments);\n        }\n        return _handleAdd;\n      }()\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [haStyle, css(_templateObject21 || (_templateObject21 = _taggedTemplateLiteral([\"\\n        :host([narrow]) hass-tabs-subpage {\\n          --main-title-margin: 0;\\n        }\\n        ha-button-menu {\\n          margin-left: 8px;\\n          margin-inline-start: 8px;\\n          margin-inline-end: initial;\\n          direction: var(--direction);\\n        }\\n        .container {\\n          display: grid;\\n          grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\\n          grid-gap: 8px 8px;\\n          padding: 8px 16px 16px;\\n        }\\n        .container:last-of-type {\\n          margin-bottom: 64px;\\n        }\\n        .empty-message {\\n          margin: auto;\\n          text-align: center;\\n          grid-column-start: 1;\\n          grid-column-end: -1;\\n        }\\n        .empty-message h1 {\\n          margin: 0;\\n        }\\n        search-input {\\n          --mdc-text-field-fill-color: var(--sidebar-background-color);\\n          --mdc-text-field-idle-line-color: var(--divider-color);\\n          --text-field-overflow: visible;\\n        }\\n        search-input.header {\\n          display: block;\\n          color: var(--secondary-text-color);\\n          margin-left: 8px;\\n          margin-inline-start: 8px;\\n          margin-inline-end: initial;\\n          direction: var(--direction);\\n          --mdc-ripple-color: transparant;\\n        }\\n        .search {\\n          display: flex;\\n          justify-content: flex-end;\\n          width: 100%;\\n          align-items: center;\\n          height: 56px;\\n          position: sticky;\\n          top: 0;\\n          z-index: 2;\\n        }\\n        .search search-input {\\n          display: block;\\n          position: absolute;\\n          top: 0;\\n          right: 0;\\n          left: 0;\\n        }\\n        .filters {\\n          --mdc-text-field-fill-color: var(--input-fill-color);\\n          --mdc-text-field-idle-line-color: var(--input-idle-line-color);\\n          --mdc-shape-small: 4px;\\n          --text-field-overflow: initial;\\n          display: flex;\\n          justify-content: flex-end;\\n          color: var(--primary-text-color);\\n        }\\n        .active-filters {\\n          color: var(--primary-text-color);\\n          position: relative;\\n          display: flex;\\n          align-items: center;\\n          padding-top: 2px;\\n          padding-bottom: 2px;\\n          padding-right: 2px;\\n          padding-left: 8px;\\n          padding-inline-start: 8px;\\n          padding-inline-end: 2px;\\n          font-size: 14px;\\n          width: max-content;\\n          cursor: initial;\\n          direction: var(--direction);\\n        }\\n        .active-filters mwc-button {\\n          margin-left: 8px;\\n          margin-inline-start: 8px;\\n          margin-inline-end: initial;\\n          direction: var(--direction);\\n        }\\n        .active-filters::before {\\n          background-color: var(--primary-color);\\n          opacity: 0.12;\\n          border-radius: 4px;\\n          position: absolute;\\n          top: 0;\\n          right: 0;\\n          bottom: 0;\\n          left: 0;\\n          content: \\\"\\\";\\n        }\\n        .badge {\\n          min-width: 20px;\\n          box-sizing: border-box;\\n          border-radius: 50%;\\n          font-weight: 400;\\n          background-color: var(--primary-color);\\n          line-height: 20px;\\n          text-align: center;\\n          padding: 0px 4px;\\n          color: var(--text-primary-color);\\n          position: absolute;\\n          right: 0px;\\n          top: 4px;\\n          font-size: 0.65em;\\n        }\\n        .menu-badge-container {\\n          position: relative;\\n        }\\n        h1 {\\n          margin: 8px 0 0 16px;\\n        }\\n        ha-button-menu {\\n          color: var(--primary-text-color);\\n        }\\n      \"])))];\n      }\n    }]\n  };\n}, SubscribeMixin(LitElement));","map":{"version":3,"names":["Fuse","css","html","LitElement","nothing","customElement","property","state","ifDefined","memoizeOne","isComponentLoaded","protocolIntegrationPicked","PROTOCOL_INTEGRATIONS","navigate","extractSearchParam","nextRender","getConfigFlowInProgressCollection","fetchDiagnosticHandlers","subscribeEntityRegistry","domainToName","fetchIntegrationManifest","fetchIntegrationManifests","subscribeLogInfo","findIntegration","getIntegrationDescriptions","scanUSBDevices","showConfigFlowDialog","showAlertDialog","showConfirmationDialog","SubscribeMixin","haStyle","configSections","isHelperDomain","showAddIntegrationDialog","caseInsensitiveStringCompare","groupByIntegration","entries","result","Map","forEach","entry","has","domain","get","push","set","HaConfigIntegrationsDashboard","_decorate","_initialize","_SubscribeMixin","_SubscribeMixin2","_inherits","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_assertThisInitialized","_createClass","F","d","kind","decorators","attribute","key","value","type","Boolean","reflect","URLSearchParams","window","location","hash","substring","_history$state","history","filter","hassSubscribe","_this2","hass","connection","_entityRegistryEntries","log_infos","logInfoLookup","_iterator","_createForOfIteratorHelper","_step","s","n","done","log_info","err","e","f","_logInfos","_this3","configEntries","filteredConfigEntries","ignored","disabled","integrations","options","keys","isCaseSensitive","minMatchCharLength","Math","min","threshold","fuse","search","map","item","_iterator2","_step2","source","disabled_by","from","sort","groupA","groupB","localized_domain_name","locale","language","_this4","configEntriesInProgress","filteredEntries","a","b","localized_title","handler","firstUpdated","changed","_this5","_get","_getPrototypeOf","prototype","call","_fetchManifests","route","path","_handleAdd","_scanUSBDevices","then","infos","handlers","_iterator3","_step3","info","config_entry","_diagnosticHandlers","updated","_searchParms","_highlightEntry","_fetchIntegrationManifests","flow","render","_this6","_templateObject","_taggedTemplateLiteral","narrow","_this$_filterConfigEn","_filterConfigEntries","_filter","_this$_filterConfigEn2","_slicedToArray","ignoredConfigEntries","disabledConfigEntries","_filterConfigEntriesInProgress","filterMenu","_templateObject2","undefined","_showDisabled","_templateObject3","_handleMenuAction","_preventDefault","localize","mdiFilterVariant","_showIgnored","_templateObject4","_templateObject5","devices","_templateObject6","_handleSearchChange","_templateObject7","_templateObject8","number","_toggleShowDisabled","_templateObject9","_templateObject10","_manifests","_handleFlowUpdated","_templateObject11","_templateObject12","_templateObject13","_templateObject14","_templateObject15","_templateObject16","_templateObject17","_ref","_ref2","items","_templateObject18","_templateObject19","_createFlow","_templateObject20","mdiPlus","ev","preventDefault","_scanUSBDevices2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","abrupt","stop","apply","_fetchManifests2","_callee2","fetched","manifests","_iterator4","_step4","manifest","_callee2$","_context2","sent","Object","assign","_x","_fetchIntegrationManifests2","_callee3","manifestsToFetch","_iterator5","_step5","_integration","_callee3$","_context3","integration","_extraFetchedManifests","Set","add","t0","finish","_x2","refresh","initialFilter","detail","index","replaceState","_highlightEntry2","_callee4","entryId","configEntry","card","_callee4$","_context4","find","entry_id","shadowRoot","querySelector","scrollIntoView","block","classList","_handleAdd2","_callee6","_this7","brand","descriptions","_localize","supportedIntegration","helpers","helper","_callee6$","_context6","replace","core","custom","config_flow","loadBackendTranslation","title","name","supported_by","text","supported_brand","flow_domain_name","confirm","_confirm","_callee5","_this7$hass$userData","_callee5$","_context5","includes","t1","t2","dialogClosedCallback","t3","t4","t5","userData","showAdvanced","t6","startFlowHandler","static","styles","_templateObject21"],"sources":["/workspaces/frontend/src/panels/config/integrations/ha-config-integrations-dashboard.ts"],"sourcesContent":["import { ActionDetail } from \"@material/mwc-list\";\nimport { mdiFilterVariant, mdiPlus } from \"@mdi/js\";\nimport Fuse from \"fuse.js\";\nimport type { IFuseOptions } from \"fuse.js\";\nimport type { UnsubscribeFunc } from \"home-assistant-js-websocket\";\nimport {\n  css,\n  CSSResultGroup,\n  html,\n  LitElement,\n  nothing,\n  PropertyValues,\n} from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { ifDefined } from \"lit/directives/if-defined\";\nimport memoizeOne from \"memoize-one\";\nimport { isComponentLoaded } from \"../../../common/config/is_component_loaded\";\nimport {\n  protocolIntegrationPicked,\n  PROTOCOL_INTEGRATIONS,\n} from \"../../../common/integrations/protocolIntegrationPicked\";\nimport { navigate } from \"../../../common/navigate\";\nimport { extractSearchParam } from \"../../../common/url/search-params\";\nimport { nextRender } from \"../../../common/util/render-status\";\nimport \"../../../components/ha-button-menu\";\nimport \"../../../components/ha-check-list-item\";\nimport \"../../../components/ha-checkbox\";\nimport \"../../../components/ha-fab\";\nimport \"../../../components/ha-icon-button\";\nimport \"../../../components/ha-svg-icon\";\nimport \"../../../components/search-input\";\nimport { ConfigEntry } from \"../../../data/config_entries\";\nimport { getConfigFlowInProgressCollection } from \"../../../data/config_flow\";\nimport { fetchDiagnosticHandlers } from \"../../../data/diagnostics\";\nimport {\n  EntityRegistryEntry,\n  subscribeEntityRegistry,\n} from \"../../../data/entity_registry\";\nimport {\n  domainToName,\n  fetchIntegrationManifest,\n  fetchIntegrationManifests,\n  IntegrationLogInfo,\n  IntegrationManifest,\n  subscribeLogInfo,\n} from \"../../../data/integration\";\nimport {\n  findIntegration,\n  getIntegrationDescriptions,\n} from \"../../../data/integrations\";\nimport { scanUSBDevices } from \"../../../data/usb\";\nimport { showConfigFlowDialog } from \"../../../dialogs/config-flow/show-dialog-config-flow\";\nimport {\n  showAlertDialog,\n  showConfirmationDialog,\n} from \"../../../dialogs/generic/show-dialog-box\";\nimport \"../../../layouts/hass-loading-screen\";\nimport \"../../../layouts/hass-tabs-subpage\";\nimport { SubscribeMixin } from \"../../../mixins/subscribe-mixin\";\nimport { haStyle } from \"../../../resources/styles\";\nimport type { HomeAssistant, Route } from \"../../../types\";\nimport { configSections } from \"../ha-panel-config\";\nimport { isHelperDomain } from \"../helpers/const\";\nimport \"./ha-config-flow-card\";\nimport { DataEntryFlowProgressExtended } from \"./ha-config-integrations\";\nimport \"./ha-ignored-config-entry-card\";\nimport \"./ha-integration-card\";\nimport type { HaIntegrationCard } from \"./ha-integration-card\";\nimport \"./ha-integration-overflow-menu\";\nimport { showAddIntegrationDialog } from \"./show-add-integration-dialog\";\nimport \"./ha-disabled-config-entry-card\";\nimport { caseInsensitiveStringCompare } from \"../../../common/string/compare\";\n\nexport interface ConfigEntryExtended extends ConfigEntry {\n  localized_domain_name?: string;\n}\n\nconst groupByIntegration = (\n  entries: ConfigEntryExtended[]\n): Map<string, ConfigEntryExtended[]> => {\n  const result = new Map();\n  entries.forEach((entry) => {\n    if (result.has(entry.domain)) {\n      result.get(entry.domain).push(entry);\n    } else {\n      result.set(entry.domain, [entry]);\n    }\n  });\n  return result;\n};\n@customElement(\"ha-config-integrations-dashboard\")\nclass HaConfigIntegrationsDashboard extends SubscribeMixin(LitElement) {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ type: Boolean, reflect: true }) public narrow = false;\n\n  @property({ type: Boolean }) public isWide = false;\n\n  @property({ type: Boolean }) public showAdvanced = false;\n\n  @property({ attribute: false }) public route!: Route;\n\n  @property({ attribute: false }) public configEntries?: ConfigEntryExtended[];\n\n  @property({ attribute: false })\n  public configEntriesInProgress?: DataEntryFlowProgressExtended[];\n\n  @state()\n  private _entityRegistryEntries: EntityRegistryEntry[] = [];\n\n  @state()\n  private _manifests: Record<string, IntegrationManifest> = {};\n\n  private _extraFetchedManifests?: Set<string>;\n\n  @state() private _showIgnored = false;\n\n  @state() private _showDisabled = false;\n\n  @state() private _searchParms = new URLSearchParams(\n    window.location.hash.substring(1)\n  );\n\n  @state() private _filter: string = history.state?.filter || \"\";\n\n  @state() private _diagnosticHandlers?: Record<string, boolean>;\n\n  @state() private _logInfos?: {\n    [integration: string]: IntegrationLogInfo;\n  };\n\n  public hassSubscribe(): Array<UnsubscribeFunc | Promise<UnsubscribeFunc>> {\n    return [\n      subscribeEntityRegistry(this.hass.connection, (entries) => {\n        this._entityRegistryEntries = entries;\n      }),\n      subscribeLogInfo(this.hass.connection, (log_infos) => {\n        const logInfoLookup: { [integration: string]: IntegrationLogInfo } = {};\n        for (const log_info of log_infos) {\n          logInfoLookup[log_info.domain] = log_info;\n        }\n        this._logInfos = logInfoLookup;\n      }),\n    ];\n  }\n\n  private _filterConfigEntries = memoizeOne(\n    (\n      configEntries: ConfigEntryExtended[],\n      filter?: string\n    ): [\n      [string, ConfigEntryExtended[]][],\n      ConfigEntryExtended[],\n      ConfigEntryExtended[],\n    ] => {\n      let filteredConfigEntries: ConfigEntryExtended[];\n      const ignored: ConfigEntryExtended[] = [];\n      const disabled: ConfigEntryExtended[] = [];\n      const integrations: ConfigEntryExtended[] = [];\n      if (filter) {\n        const options: IFuseOptions<ConfigEntryExtended> = {\n          keys: [\"domain\", \"localized_domain_name\", \"title\"],\n          isCaseSensitive: false,\n          minMatchCharLength: Math.min(filter.length, 2),\n          threshold: 0.2,\n        };\n        const fuse = new Fuse(configEntries, options);\n        filteredConfigEntries = fuse\n          .search(filter)\n          .map((result) => result.item);\n      } else {\n        filteredConfigEntries = configEntries;\n      }\n\n      for (const entry of filteredConfigEntries) {\n        if (entry.source === \"ignore\") {\n          ignored.push(entry);\n        } else if (entry.disabled_by !== null) {\n          disabled.push(entry);\n        } else {\n          integrations.push(entry);\n        }\n      }\n      return [\n        Array.from(groupByIntegration(integrations)).sort((groupA, groupB) =>\n          caseInsensitiveStringCompare(\n            groupA[1][0].localized_domain_name || groupA[0],\n            groupB[1][0].localized_domain_name || groupB[0],\n            this.hass.locale.language\n          )\n        ),\n        ignored,\n        disabled,\n      ];\n    }\n  );\n\n  private _filterConfigEntriesInProgress = memoizeOne(\n    (\n      configEntriesInProgress: DataEntryFlowProgressExtended[],\n      filter?: string\n    ): DataEntryFlowProgressExtended[] => {\n      let filteredEntries: DataEntryFlowProgressExtended[];\n      if (filter) {\n        const options: IFuseOptions<DataEntryFlowProgressExtended> = {\n          keys: [\"handler\", \"localized_title\"],\n          isCaseSensitive: false,\n          minMatchCharLength: Math.min(filter.length, 2),\n          threshold: 0.2,\n        };\n        const fuse = new Fuse(configEntriesInProgress, options);\n        filteredEntries = fuse.search(filter).map((result) => result.item);\n      } else {\n        filteredEntries = configEntriesInProgress;\n      }\n      return filteredEntries.sort((a, b) =>\n        caseInsensitiveStringCompare(\n          a.localized_title || a.handler,\n          b.localized_title || b.handler,\n          this.hass.locale.language\n        )\n      );\n    }\n  );\n\n  protected firstUpdated(changed: PropertyValues) {\n    super.firstUpdated(changed);\n    this._fetchManifests();\n    if (this.route.path === \"/add\") {\n      this._handleAdd();\n    }\n    this._scanUSBDevices();\n    if (isComponentLoaded(this.hass, \"diagnostics\")) {\n      fetchDiagnosticHandlers(this.hass).then((infos) => {\n        const handlers = {};\n        for (const info of infos) {\n          handlers[info.domain] = info.handlers.config_entry;\n        }\n        this._diagnosticHandlers = handlers;\n      });\n    }\n  }\n\n  protected updated(changed: PropertyValues) {\n    super.updated(changed);\n    if (\n      (this._searchParms.has(\"config_entry\") ||\n        this._searchParms.has(\"domain\")) &&\n      changed.has(\"configEntries\") &&\n      !changed.get(\"configEntries\") &&\n      this.configEntries\n    ) {\n      this._highlightEntry();\n    }\n    if (\n      changed.has(\"configEntriesInProgress\") &&\n      this.configEntriesInProgress\n    ) {\n      this._fetchIntegrationManifests(\n        this.configEntriesInProgress.map((flow) => flow.handler)\n      );\n    }\n  }\n\n  protected render() {\n    if (!this.configEntries || !this.configEntriesInProgress) {\n      return html`<hass-loading-screen\n        .hass=${this.hass}\n        .narrow=${this.narrow}\n      ></hass-loading-screen>`;\n    }\n    const [integrations, ignoredConfigEntries, disabledConfigEntries] =\n      this._filterConfigEntries(this.configEntries, this._filter);\n    const configEntriesInProgress = this._filterConfigEntriesInProgress(\n      this.configEntriesInProgress,\n      this._filter\n    );\n\n    const filterMenu = html`\n      <div slot=${ifDefined(this.narrow ? \"toolbar-icon\" : undefined)}>\n        <div class=\"menu-badge-container\">\n          ${!this._showDisabled && this.narrow && disabledConfigEntries.length\n            ? html`<span class=\"badge\">${disabledConfigEntries.length}</span>`\n            : \"\"}\n          <ha-button-menu\n            multi\n            @action=${this._handleMenuAction}\n            @click=${this._preventDefault}\n          >\n            <ha-icon-button\n              slot=\"trigger\"\n              .label=${this.hass.localize(\"ui.common.menu\")}\n              .path=${mdiFilterVariant}\n            >\n            </ha-icon-button>\n            <ha-check-list-item left .selected=${this._showIgnored}>\n              ${this.hass.localize(\n                \"ui.panel.config.integrations.ignore.show_ignored\"\n              )}\n            </ha-check-list-item>\n            <ha-check-list-item left .selected=${this._showDisabled}>\n              ${this.hass.localize(\n                \"ui.panel.config.integrations.disable.show_disabled\"\n              )}\n            </ha-check-list-item>\n          </ha-button-menu>\n        </div>\n        ${this.narrow\n          ? html`\n              <ha-integration-overflow-menu\n                .hass=${this.hass}\n                slot=\"toolbar-icon\"\n              ></ha-integration-overflow-menu>\n            `\n          : \"\"}\n      </div>\n    `;\n\n    return html`\n      <hass-tabs-subpage\n        .hass=${this.hass}\n        .narrow=${this.narrow}\n        back-path=\"/config\"\n        .route=${this.route}\n        .tabs=${configSections.devices}\n      >\n        ${this.narrow\n          ? html`\n              <div slot=\"header\">\n                <search-input\n                  .hass=${this.hass}\n                  .filter=${this._filter}\n                  class=\"header\"\n                  @value-changed=${this._handleSearchChange}\n                  .label=${this.hass.localize(\n                    \"ui.panel.config.integrations.search\"\n                  )}\n                ></search-input>\n              </div>\n              ${filterMenu}\n            `\n          : html`\n              <ha-integration-overflow-menu\n                .hass=${this.hass}\n                slot=\"toolbar-icon\"\n              ></ha-integration-overflow-menu>\n              <div class=\"search\">\n                <search-input\n                  .hass=${this.hass}\n                  suffix\n                  .filter=${this._filter}\n                  @value-changed=${this._handleSearchChange}\n                  .label=${this.hass.localize(\n                    \"ui.panel.config.integrations.search\"\n                  )}\n                >\n                  <div class=\"filters\" slot=\"suffix\">\n                    ${!this._showDisabled && disabledConfigEntries.length\n                      ? html`<div\n                          class=\"active-filters\"\n                          @click=${this._preventDefault}\n                        >\n                          ${this.hass.localize(\n                            \"ui.panel.config.integrations.disable.disabled_integrations\",\n                            { number: disabledConfigEntries.length }\n                          )}\n                          <mwc-button\n                            @click=${this._toggleShowDisabled}\n                            .label=${this.hass.localize(\n                              \"ui.panel.config.integrations.disable.show\"\n                            )}\n                          ></mwc-button>\n                        </div>`\n                      : \"\"}\n                    ${filterMenu}\n                  </div>\n                </search-input>\n              </div>\n            `}\n        ${this._showIgnored\n          ? html`<h1>\n                ${this.hass.localize(\n                  \"ui.panel.config.integrations.ignore.ignored\"\n                )}\n              </h1>\n              <div class=\"container\">\n                ${ignoredConfigEntries.length > 0\n                  ? ignoredConfigEntries.map(\n                      (entry: ConfigEntryExtended) => html`\n                        <ha-ignored-config-entry-card\n                          .hass=${this.hass}\n                          .manifest=${this._manifests[entry.domain]}\n                          .entry=${entry}\n                          @change=${this._handleFlowUpdated}\n                        ></ha-ignored-config-entry-card>\n                      `\n                    )\n                  : html`${this.hass.localize(\n                      \"ui.panel.config.integrations.no_ignored_integrations\"\n                    )}`}\n              </div>`\n          : \"\"}\n        ${configEntriesInProgress.length\n          ? html`<h1>\n                ${this.hass.localize(\"ui.panel.config.integrations.discovered\")}\n              </h1>\n              <div class=\"container\">\n                ${configEntriesInProgress.map(\n                  (flow: DataEntryFlowProgressExtended) => html`\n                    <ha-config-flow-card\n                      .hass=${this.hass}\n                      .manifest=${this._manifests[flow.handler]}\n                      .flow=${flow}\n                      @change=${this._handleFlowUpdated}\n                    ></ha-config-flow-card>\n                  `\n                )}\n              </div>`\n          : \"\"}\n        ${this._showDisabled\n          ? html`<h1>\n                ${this.hass.localize(\"ui.panel.config.integrations.disabled\")}\n              </h1>\n              <div class=\"container\">\n                ${disabledConfigEntries.length > 0\n                  ? disabledConfigEntries.map(\n                      (entry: ConfigEntryExtended) => html`\n                        <ha-disabled-config-entry-card\n                          .hass=${this.hass}\n                          .entry=${entry}\n                          .manifest=${this._manifests[entry.domain]}\n                          .entityRegistryEntries=${this._entityRegistryEntries}\n                        ></ha-disabled-config-entry-card>\n                      `\n                    )\n                  : html`${this.hass.localize(\n                      \"ui.panel.config.integrations.no_disabled_integrations\"\n                    )}`}\n              </div>`\n          : \"\"}\n        ${configEntriesInProgress.length ||\n        this._showDisabled ||\n        this._showIgnored\n          ? html`<h1>\n              ${this.hass.localize(\"ui.panel.config.integrations.configured\")}\n            </h1>`\n          : \"\"}\n        <div class=\"container\">\n          ${integrations.length\n            ? integrations.map(\n                ([domain, items]) =>\n                  html`<ha-integration-card\n                    data-domain=${domain}\n                    .hass=${this.hass}\n                    .domain=${domain}\n                    .items=${items}\n                    .manifest=${this._manifests[domain]}\n                    .entityRegistryEntries=${this._entityRegistryEntries}\n                    .supportsDiagnostics=${this._diagnosticHandlers\n                      ? this._diagnosticHandlers[domain]\n                      : false}\n                    .logInfo=${this._logInfos\n                      ? this._logInfos[domain]\n                      : nothing}\n                  ></ha-integration-card>`\n              )\n            : this._filter &&\n                !configEntriesInProgress.length &&\n                !integrations.length &&\n                this.configEntries.length\n              ? html`\n                  <div class=\"empty-message\">\n                    <h1>\n                      ${this.hass.localize(\n                        \"ui.panel.config.integrations.none_found\"\n                      )}\n                    </h1>\n                    <p>\n                      ${this.hass.localize(\n                        \"ui.panel.config.integrations.none_found_detail\"\n                      )}\n                    </p>\n                    <mwc-button\n                      @click=${this._createFlow}\n                      unelevated\n                      .label=${this.hass.localize(\n                        \"ui.panel.config.integrations.add_integration\"\n                      )}\n                    ></mwc-button>\n                  </div>\n                `\n              : // If we have a filter, never show a card\n                this._filter\n                ? \"\"\n                : // If we're showing 0 cards, show empty state text\n                  (!this._showIgnored || ignoredConfigEntries.length === 0) &&\n                    (!this._showDisabled ||\n                      disabledConfigEntries.length === 0) &&\n                    integrations.length === 0\n                  ? html`\n                      <div class=\"empty-message\">\n                        <h1>\n                          ${this.hass.localize(\n                            \"ui.panel.config.integrations.none\"\n                          )}\n                        </h1>\n                        <p>\n                          ${this.hass.localize(\n                            \"ui.panel.config.integrations.no_integrations\"\n                          )}\n                        </p>\n                        <mwc-button\n                          @click=${this._createFlow}\n                          unelevated\n                          .label=${this.hass.localize(\n                            \"ui.panel.config.integrations.add_integration\"\n                          )}\n                        ></mwc-button>\n                      </div>\n                    `\n                  : \"\"}\n        </div>\n        <ha-fab\n          slot=\"fab\"\n          .label=${this.hass.localize(\n            \"ui.panel.config.integrations.add_integration\"\n          )}\n          extended\n          @click=${this._createFlow}\n        >\n          <ha-svg-icon slot=\"icon\" .path=${mdiPlus}></ha-svg-icon>\n        </ha-fab>\n      </hass-tabs-subpage>\n    `;\n  }\n\n  private _preventDefault(ev) {\n    ev.preventDefault();\n  }\n\n  private async _scanUSBDevices() {\n    if (!isComponentLoaded(this.hass, \"usb\")) {\n      return;\n    }\n    await scanUSBDevices(this.hass);\n  }\n\n  private async _fetchManifests(integrations?: string[]) {\n    const fetched = await fetchIntegrationManifests(this.hass, integrations);\n    // Make a copy so we can keep track of previously loaded manifests\n    // for discovered flows (which are not part of these results)\n    const manifests = { ...this._manifests };\n    for (const manifest of fetched) {\n      manifests[manifest.domain] = manifest;\n    }\n    this._manifests = manifests;\n  }\n\n  private async _fetchIntegrationManifests(integrations: string[]) {\n    const manifestsToFetch: string[] = [];\n    for (const integration of integrations) {\n      if (integration in this._manifests) {\n        continue;\n      }\n      if (this._extraFetchedManifests) {\n        if (this._extraFetchedManifests.has(integration)) {\n          continue;\n        }\n      } else {\n        this._extraFetchedManifests = new Set();\n      }\n      this._extraFetchedManifests.add(integration);\n      manifestsToFetch.push(integration);\n    }\n    if (manifestsToFetch.length) {\n      await this._fetchManifests(manifestsToFetch);\n    }\n  }\n\n  private _handleFlowUpdated() {\n    getConfigFlowInProgressCollection(this.hass.connection).refresh();\n    this._fetchManifests();\n  }\n\n  private _createFlow() {\n    showAddIntegrationDialog(this, {\n      initialFilter: this._filter,\n    });\n  }\n\n  private _handleMenuAction(ev: CustomEvent<ActionDetail>) {\n    switch (ev.detail.index) {\n      case 0:\n        this._showIgnored = !this._showIgnored;\n        break;\n      case 1:\n        this._toggleShowDisabled();\n        break;\n    }\n  }\n\n  private _toggleShowDisabled() {\n    this._showDisabled = !this._showDisabled;\n  }\n\n  private _handleSearchChange(ev: CustomEvent) {\n    this._filter = ev.detail.value;\n    history.replaceState({ filter: this._filter }, \"\");\n  }\n\n  private async _highlightEntry() {\n    await nextRender();\n    const entryId = this._searchParms.get(\"config_entry\");\n    let domain: string | null;\n    if (entryId) {\n      const configEntry = this.configEntries!.find(\n        (entry) => entry.entry_id === entryId\n      );\n      if (!configEntry) {\n        return;\n      }\n      domain = configEntry.domain;\n    } else {\n      domain = this._searchParms.get(\"domain\");\n    }\n    const card: HaIntegrationCard = this.shadowRoot!.querySelector(\n      `[data-domain=${domain}]`\n    ) as HaIntegrationCard;\n    if (card) {\n      card.scrollIntoView({\n        block: \"center\",\n      });\n      card.classList.add(\"highlight\");\n    }\n  }\n\n  private async _handleAdd() {\n    const brand = extractSearchParam(\"brand\");\n    const domain = extractSearchParam(\"domain\");\n    navigate(\"/config/integrations\", { replace: true });\n\n    if (brand) {\n      showAddIntegrationDialog(this, {\n        brand,\n      });\n      return;\n    }\n    if (!domain) {\n      return;\n    }\n\n    const descriptions = await getIntegrationDescriptions(this.hass);\n    const integrations = {\n      ...descriptions.core.integration,\n      ...descriptions.custom.integration,\n    };\n\n    const integration = findIntegration(integrations, domain);\n\n    if (integration?.config_flow) {\n      // Integration exists, so we can just create a flow\n      const localize = await this.hass.loadBackendTranslation(\n        \"title\",\n        domain,\n        false\n      );\n      if (\n        await showConfirmationDialog(this, {\n          title: localize(\"ui.panel.config.integrations.confirm_new\", {\n            integration: integration.name || domainToName(localize, domain),\n          }),\n        })\n      ) {\n        showAddIntegrationDialog(this, {\n          domain,\n        });\n      }\n      return;\n    }\n\n    if (integration?.supported_by) {\n      // Integration is a alias, so we can just create a flow\n      const localize = await this.hass.loadBackendTranslation(\n        \"title\",\n        domain,\n        false\n      );\n      const supportedIntegration = findIntegration(\n        integrations,\n        integration.supported_by\n      );\n\n      if (!supportedIntegration) {\n        return;\n      }\n\n      showConfirmationDialog(this, {\n        text: this.hass.localize(\n          \"ui.panel.config.integrations.config_flow.supported_brand_flow\",\n          {\n            supported_brand: integration.name || domainToName(localize, domain),\n            flow_domain_name:\n              supportedIntegration.name ||\n              domainToName(localize, integration.supported_by),\n          }\n        ),\n        confirm: async () => {\n          if (\n            (PROTOCOL_INTEGRATIONS as ReadonlyArray<string>).includes(\n              integration.supported_by!\n            )\n          ) {\n            protocolIntegrationPicked(\n              this,\n              this.hass,\n              integration.supported_by!\n            );\n            return;\n          }\n          showConfigFlowDialog(this, {\n            dialogClosedCallback: () => {\n              this._handleFlowUpdated();\n            },\n            startFlowHandler: integration.supported_by,\n            manifest: await fetchIntegrationManifest(\n              this.hass,\n              integration.supported_by!\n            ),\n            showAdvanced: this.hass.userData?.showAdvanced,\n          });\n        },\n      });\n      return;\n    }\n\n    // If not an integration or supported brand, try helper else show alert\n    if (isHelperDomain(domain)) {\n      navigate(`/config/helpers/add?domain=${domain}`, {\n        replace: true,\n      });\n      return;\n    }\n    const helpers = {\n      ...descriptions.core.helper,\n      ...descriptions.custom.helper,\n    };\n    const helper = findIntegration(helpers, domain);\n    if (helper) {\n      navigate(`/config/helpers/add?domain=${domain}`, {\n        replace: true,\n      });\n      return;\n    }\n    showAlertDialog(this, {\n      title: this.hass.localize(\n        \"ui.panel.config.integrations.config_flow.error\"\n      ),\n      text: this.hass.localize(\n        \"ui.panel.config.integrations.config_flow.no_config_flow\"\n      ),\n    });\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyle,\n      css`\n        :host([narrow]) hass-tabs-subpage {\n          --main-title-margin: 0;\n        }\n        ha-button-menu {\n          margin-left: 8px;\n          margin-inline-start: 8px;\n          margin-inline-end: initial;\n          direction: var(--direction);\n        }\n        .container {\n          display: grid;\n          grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n          grid-gap: 8px 8px;\n          padding: 8px 16px 16px;\n        }\n        .container:last-of-type {\n          margin-bottom: 64px;\n        }\n        .empty-message {\n          margin: auto;\n          text-align: center;\n          grid-column-start: 1;\n          grid-column-end: -1;\n        }\n        .empty-message h1 {\n          margin: 0;\n        }\n        search-input {\n          --mdc-text-field-fill-color: var(--sidebar-background-color);\n          --mdc-text-field-idle-line-color: var(--divider-color);\n          --text-field-overflow: visible;\n        }\n        search-input.header {\n          display: block;\n          color: var(--secondary-text-color);\n          margin-left: 8px;\n          margin-inline-start: 8px;\n          margin-inline-end: initial;\n          direction: var(--direction);\n          --mdc-ripple-color: transparant;\n        }\n        .search {\n          display: flex;\n          justify-content: flex-end;\n          width: 100%;\n          align-items: center;\n          height: 56px;\n          position: sticky;\n          top: 0;\n          z-index: 2;\n        }\n        .search search-input {\n          display: block;\n          position: absolute;\n          top: 0;\n          right: 0;\n          left: 0;\n        }\n        .filters {\n          --mdc-text-field-fill-color: var(--input-fill-color);\n          --mdc-text-field-idle-line-color: var(--input-idle-line-color);\n          --mdc-shape-small: 4px;\n          --text-field-overflow: initial;\n          display: flex;\n          justify-content: flex-end;\n          color: var(--primary-text-color);\n        }\n        .active-filters {\n          color: var(--primary-text-color);\n          position: relative;\n          display: flex;\n          align-items: center;\n          padding-top: 2px;\n          padding-bottom: 2px;\n          padding-right: 2px;\n          padding-left: 8px;\n          padding-inline-start: 8px;\n          padding-inline-end: 2px;\n          font-size: 14px;\n          width: max-content;\n          cursor: initial;\n          direction: var(--direction);\n        }\n        .active-filters mwc-button {\n          margin-left: 8px;\n          margin-inline-start: 8px;\n          margin-inline-end: initial;\n          direction: var(--direction);\n        }\n        .active-filters::before {\n          background-color: var(--primary-color);\n          opacity: 0.12;\n          border-radius: 4px;\n          position: absolute;\n          top: 0;\n          right: 0;\n          bottom: 0;\n          left: 0;\n          content: \"\";\n        }\n        .badge {\n          min-width: 20px;\n          box-sizing: border-box;\n          border-radius: 50%;\n          font-weight: 400;\n          background-color: var(--primary-color);\n          line-height: 20px;\n          text-align: center;\n          padding: 0px 4px;\n          color: var(--text-primary-color);\n          position: absolute;\n          right: 0px;\n          top: 4px;\n          font-size: 0.65em;\n        }\n        .menu-badge-container {\n          position: relative;\n        }\n        h1 {\n          margin: 8px 0 0 16px;\n        }\n        ha-button-menu {\n          color: var(--primary-text-color);\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-config-integrations-dashboard\": HaConfigIntegrationsDashboard;\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,OAAOA,IAAI,MAAM,SAAS;AAG1B,SACEC,GAAG,EAEHC,IAAI,EACJC,UAAU,EACVC,OAAO,QAEF,KAAK;AACZ,SAASC,aAAa,EAAEC,QAAQ,EAAEC,KAAK,QAAQ,gBAAgB;AAC/D,SAASC,SAAS,QAAQ,2BAA2B;AACrD,OAAOC,UAAU,MAAM,aAAa;AACpC,SAASC,iBAAiB,QAAQ,4CAA4C;AAC9E,SACEC,yBAAyB,EACzBC,qBAAqB,QAChB,wDAAwD;AAC/D,SAASC,QAAQ,QAAQ,0BAA0B;AACnD,SAASC,kBAAkB,QAAQ,mCAAmC;AACtE,SAASC,UAAU,QAAQ,oCAAoC;AAC/D,OAAO,oCAAoC;AAC3C,OAAO,wCAAwC;AAC/C,OAAO,iCAAiC;AACxC,OAAO,4BAA4B;AACnC,OAAO,oCAAoC;AAC3C,OAAO,iCAAiC;AACxC,OAAO,kCAAkC;AAEzC,SAASC,iCAAiC,QAAQ,2BAA2B;AAC7E,SAASC,uBAAuB,QAAQ,2BAA2B;AACnE,SAEEC,uBAAuB,QAClB,+BAA+B;AACtC,SACEC,YAAY,EACZC,wBAAwB,EACxBC,yBAAyB,EAGzBC,gBAAgB,QACX,2BAA2B;AAClC,SACEC,eAAe,EACfC,0BAA0B,QACrB,4BAA4B;AACnC,SAASC,cAAc,QAAQ,mBAAmB;AAClD,SAASC,oBAAoB,QAAQ,sDAAsD;AAC3F,SACEC,eAAe,EACfC,sBAAsB,QACjB,0CAA0C;AACjD,OAAO,sCAAsC;AAC7C,OAAO,oCAAoC;AAC3C,SAASC,cAAc,QAAQ,iCAAiC;AAChE,SAASC,OAAO,QAAQ,2BAA2B;AAEnD,SAASC,cAAc,QAAQ,oBAAoB;AACnD,SAASC,cAAc,QAAQ,kBAAkB;AACjD,OAAO,uBAAuB;AAE9B,OAAO,gCAAgC;AACvC,OAAO,uBAAuB;AAE9B,OAAO,gCAAgC;AACvC,SAASC,wBAAwB,QAAQ,+BAA+B;AACxE,OAAO,iCAAiC;AACxC,SAASC,4BAA4B,QAAQ,gCAAgC;AAM7E,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkBA,CACtBC,OAA8B,EACS;EACvC,IAAMC,MAAM,GAAG,IAAIC,GAAG,CAAC,CAAC;EACxBF,OAAO,CAACG,OAAO,CAAC,UAACC,KAAK,EAAK;IACzB,IAAIH,MAAM,CAACI,GAAG,CAACD,KAAK,CAACE,MAAM,CAAC,EAAE;MAC5BL,MAAM,CAACM,GAAG,CAACH,KAAK,CAACE,MAAM,CAAC,CAACE,IAAI,CAACJ,KAAK,CAAC;IACtC,CAAC,MAAM;MACLH,MAAM,CAACQ,GAAG,CAACL,KAAK,CAACE,MAAM,EAAE,CAACF,KAAK,CAAC,CAAC;IACnC;EACF,CAAC,CAAC;EACF,OAAOH,MAAM;AACf,CAAC;AAAC,IAEIS,6BAA6B,GAAAC,SAAA,EADlC1C,aAAa,CAAC,kCAAkC,CAAC,aAAA2C,WAAA,EAAAC,eAAA;EAAA,IAC5CH,6BAA6B,0BAAAI,gBAAA;IAAAC,SAAA,CAAAL,6BAAA,EAAAI,gBAAA;IAAA,SAAAJ,8BAAA;MAAA,IAAAM,KAAA;MAAAC,eAAA,OAAAP,6BAAA;MAAA,SAAAQ,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAAC,IAAA,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;QAAAF,IAAA,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;MAAA;MAAAP,KAAA,GAAAQ,UAAA,OAAAd,6BAAA,KAAAe,MAAA,CAAAJ,IAAA;MAAAT,WAAA,CAAAc,sBAAA,CAAAV,KAAA;MAAA,OAAAA,KAAA;IAAA;IAAA,OAAAW,YAAA,CAAAjB,6BAAA;EAAA,EAAAG,eAAA;EAAA;IAAAe,CAAA,EAA7BlB,6BAA6B;IAAAmB,CAAA;MAAAC,IAAA;MAAAC,UAAA,GAChC7D,QAAQ,CAAC;QAAE8D,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAC,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAE9B7D,QAAQ,CAAC;QAAEiE,IAAI,EAAEC,OAAO;QAAEC,OAAO,EAAE;MAAK,CAAC,CAAC;MAAAJ,GAAA;MAAAC,KAAA,WAAAA,MAAA;QAAA,OAAiB,KAAK;MAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAEhE7D,QAAQ,CAAC;QAAEiE,IAAI,EAAEC;MAAQ,CAAC,CAAC;MAAAH,GAAA;MAAAC,KAAA,WAAAA,MAAA;QAAA,OAAiB,KAAK;MAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAEjD7D,QAAQ,CAAC;QAAEiE,IAAI,EAAEC;MAAQ,CAAC,CAAC;MAAAH,GAAA;MAAAC,KAAA,WAAAA,MAAA;QAAA,OAAuB,KAAK;MAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAEvD7D,QAAQ,CAAC;QAAE8D,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAC,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAE9B7D,QAAQ,CAAC;QAAE8D,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAC,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAE9B7D,QAAQ,CAAC;QAAE8D,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAC,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAG9B5D,KAAK,CAAC,CAAC;MAAA8D,GAAA;MAAAC,KAAA,WAAAA,MAAA;QAAA,OACgD,EAAE;MAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAEzD5D,KAAK,CAAC,CAAC;MAAA8D,GAAA;MAAAC,KAAA,WAAAA,MAAA;QAAA,OACkD,CAAC,CAAC;MAAA;IAAA;MAAAJ,IAAA;MAAAG,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAI3D5D,KAAK,CAAC,CAAC;MAAA8D,GAAA;MAAAC,KAAA,WAAAA,MAAA;QAAA,OAAwB,KAAK;MAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAEpC5D,KAAK,CAAC,CAAC;MAAA8D,GAAA;MAAAC,KAAA,WAAAA,MAAA;QAAA,OAAyB,KAAK;MAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAErC5D,KAAK,CAAC,CAAC;MAAA8D,GAAA;MAAAC,KAAA,WAAAA,MAAA;QAAA,OAAwB,IAAII,eAAe,CACjDC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAC,CAAC,CAClC,CAAC;MAAA;IAAA;MAAAZ,IAAA;MAAAC,UAAA,GAEA5D,KAAK,CAAC,CAAC;MAAA8D,GAAA;MAAAC,KAAA,WAAAA,MAAA;QAAA,IAAAS,cAAA;QAAA,OAA2B,EAAAA,cAAA,GAAAC,OAAO,CAACzE,KAAK,cAAAwE,cAAA,uBAAbA,cAAA,CAAeE,MAAM,KAAI,EAAE;MAAA;IAAA;MAAAf,IAAA;MAAAC,UAAA,GAE7D5D,KAAK,CAAC,CAAC;MAAA8D,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAEP5D,KAAK,CAAC,CAAC;MAAA8D,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAIR,SAAAY,cAAA,EAA0E;QAAA,IAAAC,MAAA;QACxE,OAAO,CACLjE,uBAAuB,CAAC,IAAI,CAACkE,IAAI,CAACC,UAAU,EAAE,UAACjD,OAAO,EAAK;UACzD+C,MAAI,CAACG,sBAAsB,GAAGlD,OAAO;QACvC,CAAC,CAAC,EACFd,gBAAgB,CAAC,IAAI,CAAC8D,IAAI,CAACC,UAAU,EAAE,UAACE,SAAS,EAAK;UACpD,IAAMC,aAA4D,GAAG,CAAC,CAAC;UAAC,IAAAC,SAAA,GAAAC,0BAAA,CACjDH,SAAS;YAAAI,KAAA;UAAA;YAAhC,KAAAF,SAAA,CAAAG,CAAA,MAAAD,KAAA,GAAAF,SAAA,CAAAI,CAAA,IAAAC,IAAA,GAAkC;cAAA,IAAvBC,QAAQ,GAAAJ,KAAA,CAAArB,KAAA;cACjBkB,aAAa,CAACO,QAAQ,CAACrD,MAAM,CAAC,GAAGqD,QAAQ;YAC3C;UAAC,SAAAC,GAAA;YAAAP,SAAA,CAAAQ,CAAA,CAAAD,GAAA;UAAA;YAAAP,SAAA,CAAAS,CAAA;UAAA;UACDf,MAAI,CAACgB,SAAS,GAAGX,aAAa;QAChC,CAAC,CAAC,CACH;MACH;IAAC;MAAAtB,IAAA;MAAAG,GAAA;MAAAC,KAAA,WAAAA,MAAA;QAAA,IAAA8B,MAAA;QAAA,OAE8B3F,UAAU,CACvC,UACE4F,aAAoC,EACpCpB,MAAe,EAKZ;UACH,IAAIqB,qBAA4C;UAChD,IAAMC,OAA8B,GAAG,EAAE;UACzC,IAAMC,QAA+B,GAAG,EAAE;UAC1C,IAAMC,YAAmC,GAAG,EAAE;UAC9C,IAAIxB,MAAM,EAAE;YACV,IAAMyB,OAA0C,GAAG;cACjDC,IAAI,EAAE,CAAC,QAAQ,EAAE,uBAAuB,EAAE,OAAO,CAAC;cAClDC,eAAe,EAAE,KAAK;cACtBC,kBAAkB,EAAEC,IAAI,CAACC,GAAG,CAAC9B,MAAM,CAACzB,MAAM,EAAE,CAAC,CAAC;cAC9CwD,SAAS,EAAE;YACb,CAAC;YACD,IAAMC,IAAI,GAAG,IAAIjH,IAAI,CAACqG,aAAa,EAAEK,OAAO,CAAC;YAC7CJ,qBAAqB,GAAGW,IAAI,CACzBC,MAAM,CAACjC,MAAM,CAAC,CACdkC,GAAG,CAAC,UAAC9E,MAAM;cAAA,OAAKA,MAAM,CAAC+E,IAAI;YAAA,EAAC;UACjC,CAAC,MAAM;YACLd,qBAAqB,GAAGD,aAAa;UACvC;UAAC,IAAAgB,UAAA,GAAA3B,0BAAA,CAEmBY,qBAAqB;YAAAgB,MAAA;UAAA;YAAzC,KAAAD,UAAA,CAAAzB,CAAA,MAAA0B,MAAA,GAAAD,UAAA,CAAAxB,CAAA,IAAAC,IAAA,GAA2C;cAAA,IAAhCtD,KAAK,GAAA8E,MAAA,CAAAhD,KAAA;cACd,IAAI9B,KAAK,CAAC+E,MAAM,KAAK,QAAQ,EAAE;gBAC7BhB,OAAO,CAAC3D,IAAI,CAACJ,KAAK,CAAC;cACrB,CAAC,MAAM,IAAIA,KAAK,CAACgF,WAAW,KAAK,IAAI,EAAE;gBACrChB,QAAQ,CAAC5D,IAAI,CAACJ,KAAK,CAAC;cACtB,CAAC,MAAM;gBACLiE,YAAY,CAAC7D,IAAI,CAACJ,KAAK,CAAC;cAC1B;YACF;UAAC,SAAAwD,GAAA;YAAAqB,UAAA,CAAApB,CAAA,CAAAD,GAAA;UAAA;YAAAqB,UAAA,CAAAnB,CAAA;UAAA;UACD,OAAO,CACLxC,KAAK,CAAC+D,IAAI,CAACtF,kBAAkB,CAACsE,YAAY,CAAC,CAAC,CAACiB,IAAI,CAAC,UAACC,MAAM,EAAEC,MAAM;YAAA,OAC/D1F,4BAA4B,CAC1ByF,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACE,qBAAqB,IAAIF,MAAM,CAAC,CAAC,CAAC,EAC/CC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACC,qBAAqB,IAAID,MAAM,CAAC,CAAC,CAAC,EAC/CxB,MAAI,CAAChB,IAAI,CAAC0C,MAAM,CAACC,QACnB,CAAC;UAAA,CACH,CAAC,EACDxB,OAAO,EACPC,QAAQ,CACT;QACH,CACF,CAAC;MAAA;IAAA;MAAAtC,IAAA;MAAAG,GAAA;MAAAC,KAAA,WAAAA,MAAA;QAAA,IAAA0D,MAAA;QAAA,OAEwCvH,UAAU,CACjD,UACEwH,uBAAwD,EACxDhD,MAAe,EACqB;UACpC,IAAIiD,eAAgD;UACpD,IAAIjD,MAAM,EAAE;YACV,IAAMyB,OAAoD,GAAG;cAC3DC,IAAI,EAAE,CAAC,SAAS,EAAE,iBAAiB,CAAC;cACpCC,eAAe,EAAE,KAAK;cACtBC,kBAAkB,EAAEC,IAAI,CAACC,GAAG,CAAC9B,MAAM,CAACzB,MAAM,EAAE,CAAC,CAAC;cAC9CwD,SAAS,EAAE;YACb,CAAC;YACD,IAAMC,IAAI,GAAG,IAAIjH,IAAI,CAACiI,uBAAuB,EAAEvB,OAAO,CAAC;YACvDwB,eAAe,GAAGjB,IAAI,CAACC,MAAM,CAACjC,MAAM,CAAC,CAACkC,GAAG,CAAC,UAAC9E,MAAM;cAAA,OAAKA,MAAM,CAAC+E,IAAI;YAAA,EAAC;UACpE,CAAC,MAAM;YACLc,eAAe,GAAGD,uBAAuB;UAC3C;UACA,OAAOC,eAAe,CAACR,IAAI,CAAC,UAACS,CAAC,EAAEC,CAAC;YAAA,OAC/BlG,4BAA4B,CAC1BiG,CAAC,CAACE,eAAe,IAAIF,CAAC,CAACG,OAAO,EAC9BF,CAAC,CAACC,eAAe,IAAID,CAAC,CAACE,OAAO,EAC9BN,MAAI,CAAC5C,IAAI,CAAC0C,MAAM,CAACC,QACnB,CAAC;UAAA,CACH,CAAC;QACH,CACF,CAAC;MAAA;IAAA;MAAA7D,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAiE,aAAuBC,OAAuB,EAAE;QAAA,IAAAC,MAAA;QAC9CC,IAAA,CAAAC,eAAA,CAvIE7F,6BAA6B,CAAA8F,SAAA,yBAAAC,IAAA,OAuIZL,OAAO;QAC1B,IAAI,CAACM,eAAe,CAAC,CAAC;QACtB,IAAI,IAAI,CAACC,KAAK,CAACC,IAAI,KAAK,MAAM,EAAE;UAC9B,IAAI,CAACC,UAAU,CAAC,CAAC;QACnB;QACA,IAAI,CAACC,eAAe,CAAC,CAAC;QACtB,IAAIxI,iBAAiB,CAAC,IAAI,CAAC0E,IAAI,EAAE,aAAa,CAAC,EAAE;UAC/CnE,uBAAuB,CAAC,IAAI,CAACmE,IAAI,CAAC,CAAC+D,IAAI,CAAC,UAACC,KAAK,EAAK;YACjD,IAAMC,QAAQ,GAAG,CAAC,CAAC;YAAC,IAAAC,UAAA,GAAA5D,0BAAA,CACD0D,KAAK;cAAAG,MAAA;YAAA;cAAxB,KAAAD,UAAA,CAAA1D,CAAA,MAAA2D,MAAA,GAAAD,UAAA,CAAAzD,CAAA,IAAAC,IAAA,GAA0B;gBAAA,IAAf0D,IAAI,GAAAD,MAAA,CAAAjF,KAAA;gBACb+E,QAAQ,CAACG,IAAI,CAAC9G,MAAM,CAAC,GAAG8G,IAAI,CAACH,QAAQ,CAACI,YAAY;cACpD;YAAC,SAAAzD,GAAA;cAAAsD,UAAA,CAAArD,CAAA,CAAAD,GAAA;YAAA;cAAAsD,UAAA,CAAApD,CAAA;YAAA;YACDuC,MAAI,CAACiB,mBAAmB,GAAGL,QAAQ;UACrC,CAAC,CAAC;QACJ;MACF;IAAC;MAAAnF,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAqF,QAAkBnB,OAAuB,EAAE;QACzCE,IAAA,CAAAC,eAAA,CAzJE7F,6BAA6B,CAAA8F,SAAA,oBAAAC,IAAA,OAyJjBL,OAAO;QACrB,IACE,CAAC,IAAI,CAACoB,YAAY,CAACnH,GAAG,CAAC,cAAc,CAAC,IACpC,IAAI,CAACmH,YAAY,CAACnH,GAAG,CAAC,QAAQ,CAAC,KACjC+F,OAAO,CAAC/F,GAAG,CAAC,eAAe,CAAC,IAC5B,CAAC+F,OAAO,CAAC7F,GAAG,CAAC,eAAe,CAAC,IAC7B,IAAI,CAAC0D,aAAa,EAClB;UACA,IAAI,CAACwD,eAAe,CAAC,CAAC;QACxB;QACA,IACErB,OAAO,CAAC/F,GAAG,CAAC,yBAAyB,CAAC,IACtC,IAAI,CAACwF,uBAAuB,EAC5B;UACA,IAAI,CAAC6B,0BAA0B,CAC7B,IAAI,CAAC7B,uBAAuB,CAACd,GAAG,CAAC,UAAC4C,IAAI;YAAA,OAAKA,IAAI,CAACzB,OAAO;UAAA,EACzD,CAAC;QACH;MACF;IAAC;MAAApE,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAA0F,OAAA,EAAmB;QAAA,IAAAC,MAAA;QACjB,IAAI,CAAC,IAAI,CAAC5D,aAAa,IAAI,CAAC,IAAI,CAAC4B,uBAAuB,EAAE;UACxD,OAAO/H,IAAI,CAAAgK,eAAA,KAAAA,eAAA,GAAAC,sBAAA,sGACD,IAAI,CAAC/E,IAAI,EACP,IAAI,CAACgF,MAAM;QAEzB;QACA,IAAAC,qBAAA,GACE,IAAI,CAACC,oBAAoB,CAAC,IAAI,CAACjE,aAAa,EAAE,IAAI,CAACkE,OAAO,CAAC;UAAAC,sBAAA,GAAAC,cAAA,CAAAJ,qBAAA;UADtD5D,YAAY,GAAA+D,sBAAA;UAAEE,oBAAoB,GAAAF,sBAAA;UAAEG,qBAAqB,GAAAH,sBAAA;QAEhE,IAAMvC,uBAAuB,GAAG,IAAI,CAAC2C,8BAA8B,CACjE,IAAI,CAAC3C,uBAAuB,EAC5B,IAAI,CAACsC,OACP,CAAC;QAED,IAAMM,UAAU,GAAG3K,IAAI,CAAA4K,gBAAA,KAAAA,gBAAA,GAAAX,sBAAA,qpBACT3J,SAAS,CAAC,IAAI,CAAC4J,MAAM,GAAG,cAAc,GAAGW,SAAS,CAAC,EAEzD,CAAC,IAAI,CAACC,aAAa,IAAI,IAAI,CAACZ,MAAM,IAAIO,qBAAqB,CAACnH,MAAM,GAChEtD,IAAI,CAAA+K,gBAAA,KAAAA,gBAAA,GAAAd,sBAAA,0CAAuBQ,qBAAqB,CAACnH,MAAM,IACvD,EAAE,EAGM,IAAI,CAAC0H,iBAAiB,EACvB,IAAI,CAACC,eAAe,EAIlB,IAAI,CAAC/F,IAAI,CAACgG,QAAQ,CAAC,gBAAgB,CAAC,EACrCC,gBAAgB,EAGW,IAAI,CAACC,YAAY,EAClD,IAAI,CAAClG,IAAI,CAACgG,QAAQ,CAClB,kDACF,CAAC,EAEkC,IAAI,CAACJ,aAAa,EACnD,IAAI,CAAC5F,IAAI,CAACgG,QAAQ,CAClB,oDACF,CAAC,EAIL,IAAI,CAAChB,MAAM,GACTlK,IAAI,CAAAqL,gBAAA,KAAAA,gBAAA,GAAApB,sBAAA,uLAEQ,IAAI,CAAC/E,IAAI,IAIrB,EAAE,CAET;QAED,OAAOlF,IAAI,CAAAsL,gBAAA,KAAAA,gBAAA,GAAArB,sBAAA,khBAEC,IAAI,CAAC/E,IAAI,EACP,IAAI,CAACgF,MAAM,EAEZ,IAAI,CAACrB,KAAK,EACXhH,cAAc,CAAC0J,OAAO,EAE5B,IAAI,CAACrB,MAAM,GACTlK,IAAI,CAAAwL,gBAAA,KAAAA,gBAAA,GAAAvB,sBAAA,+UAGU,IAAI,CAAC/E,IAAI,EACP,IAAI,CAACmF,OAAO,EAEL,IAAI,CAACoB,mBAAmB,EAChC,IAAI,CAACvG,IAAI,CAACgG,QAAQ,CACzB,qCACF,CAAC,EAGHP,UAAU,IAEd3K,IAAI,CAAA0L,gBAAA,KAAAA,gBAAA,GAAAzB,sBAAA,6mBAEQ,IAAI,CAAC/E,IAAI,EAKP,IAAI,CAACA,IAAI,EAEP,IAAI,CAACmF,OAAO,EACL,IAAI,CAACoB,mBAAmB,EAChC,IAAI,CAACvG,IAAI,CAACgG,QAAQ,CACzB,qCACF,CAAC,EAGG,CAAC,IAAI,CAACJ,aAAa,IAAIL,qBAAqB,CAACnH,MAAM,GACjDtD,IAAI,CAAA2L,gBAAA,KAAAA,gBAAA,GAAA1B,sBAAA,sWAEO,IAAI,CAACgB,eAAe,EAE3B,IAAI,CAAC/F,IAAI,CAACgG,QAAQ,CAClB,4DAA4D,EAC5D;UAAEU,MAAM,EAAEnB,qBAAqB,CAACnH;QAAO,CACzC,CAAC,EAEU,IAAI,CAACuI,mBAAmB,EACxB,IAAI,CAAC3G,IAAI,CAACgG,QAAQ,CACzB,2CACF,CAAC,IAGL,EAAE,EACJP,UAAU,CAInB,EACH,IAAI,CAACS,YAAY,GACfpL,IAAI,CAAA8L,gBAAA,KAAAA,gBAAA,GAAA7B,sBAAA,6IACE,IAAI,CAAC/E,IAAI,CAACgG,QAAQ,CAClB,6CACF,CAAC,EAGCV,oBAAoB,CAAClH,MAAM,GAAG,CAAC,GAC7BkH,oBAAoB,CAACvD,GAAG,CACtB,UAAC3E,KAA0B;UAAA,OAAKtC,IAAI,CAAA+L,iBAAA,KAAAA,iBAAA,GAAA9B,sBAAA,iTAExBF,MAAI,CAAC7E,IAAI,EACL6E,MAAI,CAACiC,UAAU,CAAC1J,KAAK,CAACE,MAAM,CAAC,EAChCF,KAAK,EACJyH,MAAI,CAACkC,kBAAkB;QAAA,CAGvC,CAAC,GACDjM,IAAI,CAAAkM,iBAAA,KAAAA,iBAAA,GAAAjC,sBAAA,aAAG,IAAI,CAAC/E,IAAI,CAACgG,QAAQ,CACvB,sDACF,CAAC,CAAE,IAEX,EAAE,EACJnD,uBAAuB,CAACzE,MAAM,GAC5BtD,IAAI,CAAAmM,iBAAA,KAAAA,iBAAA,GAAAlC,sBAAA,6IACE,IAAI,CAAC/E,IAAI,CAACgG,QAAQ,CAAC,yCAAyC,CAAC,EAG7DnD,uBAAuB,CAACd,GAAG,CAC3B,UAAC4C,IAAmC;UAAA,OAAK7J,IAAI,CAAAoM,iBAAA,KAAAA,iBAAA,GAAAnC,sBAAA,kQAEjCF,MAAI,CAAC7E,IAAI,EACL6E,MAAI,CAACiC,UAAU,CAACnC,IAAI,CAACzB,OAAO,CAAC,EACjCyB,IAAI,EACFE,MAAI,CAACkC,kBAAkB;QAAA,CAGvC,CAAC,IAEL,EAAE,EACJ,IAAI,CAACnB,aAAa,GAChB9K,IAAI,CAAAqM,iBAAA,KAAAA,iBAAA,GAAApC,sBAAA,6IACE,IAAI,CAAC/E,IAAI,CAACgG,QAAQ,CAAC,uCAAuC,CAAC,EAG3DT,qBAAqB,CAACnH,MAAM,GAAG,CAAC,GAC9BmH,qBAAqB,CAACxD,GAAG,CACvB,UAAC3E,KAA0B;UAAA,OAAKtC,IAAI,CAAAsM,iBAAA,KAAAA,iBAAA,GAAArC,sBAAA,kUAExBF,MAAI,CAAC7E,IAAI,EACR5C,KAAK,EACFyH,MAAI,CAACiC,UAAU,CAAC1J,KAAK,CAACE,MAAM,CAAC,EAChBuH,MAAI,CAAC3E,sBAAsB;QAAA,CAG1D,CAAC,GACDpF,IAAI,CAAAuM,iBAAA,KAAAA,iBAAA,GAAAtC,sBAAA,aAAG,IAAI,CAAC/E,IAAI,CAACgG,QAAQ,CACvB,uDACF,CAAC,CAAE,IAEX,EAAE,EACJnD,uBAAuB,CAACzE,MAAM,IAChC,IAAI,CAACwH,aAAa,IAClB,IAAI,CAACM,YAAY,GACbpL,IAAI,CAAAwM,iBAAA,KAAAA,iBAAA,GAAAvC,sBAAA,oDACA,IAAI,CAAC/E,IAAI,CAACgG,QAAQ,CAAC,yCAAyC,CAAC,IAEjE,EAAE,EAEF3E,YAAY,CAACjD,MAAM,GACjBiD,YAAY,CAACU,GAAG,CACd,UAAAwF,IAAA;UAAA,IAAAC,KAAA,GAAAnC,cAAA,CAAAkC,IAAA;YAAEjK,MAAM,GAAAkK,KAAA;YAAEC,KAAK,GAAAD,KAAA;UAAA,OACb1M,IAAI,CAAA4M,iBAAA,KAAAA,iBAAA,GAAA3C,sBAAA,wXACYzH,MAAM,EACZuH,MAAI,CAAC7E,IAAI,EACP1C,MAAM,EACPmK,KAAK,EACF5C,MAAI,CAACiC,UAAU,CAACxJ,MAAM,CAAC,EACVuH,MAAI,CAAC3E,sBAAsB,EAC7B2E,MAAI,CAACP,mBAAmB,GAC3CO,MAAI,CAACP,mBAAmB,CAAChH,MAAM,CAAC,GAChC,KAAK,EACEuH,MAAI,CAAC9D,SAAS,GACrB8D,MAAI,CAAC9D,SAAS,CAACzD,MAAM,CAAC,GACtBtC,OAAO;QAAA,CAEjB,CAAC,GACD,IAAI,CAACmK,OAAO,IACV,CAACtC,uBAAuB,CAACzE,MAAM,IAC/B,CAACiD,YAAY,CAACjD,MAAM,IACpB,IAAI,CAAC6C,aAAa,CAAC7C,MAAM,GACzBtD,IAAI,CAAA6M,iBAAA,KAAAA,iBAAA,GAAA5C,sBAAA,mbAGI,IAAI,CAAC/E,IAAI,CAACgG,QAAQ,CAClB,yCACF,CAAC,EAGC,IAAI,CAAChG,IAAI,CAACgG,QAAQ,CAClB,gDACF,CAAC,EAGQ,IAAI,CAAC4B,WAAW,EAEhB,IAAI,CAAC5H,IAAI,CAACgG,QAAQ,CACzB,8CACF,CAAC;QAIP;QACA,IAAI,CAACb,OAAO,GACV,EAAE;QACF;QACA,CAAC,CAAC,IAAI,CAACe,YAAY,IAAIZ,oBAAoB,CAAClH,MAAM,KAAK,CAAC,MACrD,CAAC,IAAI,CAACwH,aAAa,IAClBL,qBAAqB,CAACnH,MAAM,KAAK,CAAC,CAAC,IACrCiD,YAAY,CAACjD,MAAM,KAAK,CAAC,GACzBtD,IAAI,CAAA+M,iBAAA,KAAAA,iBAAA,GAAA9C,sBAAA,2eAGI,IAAI,CAAC/E,IAAI,CAACgG,QAAQ,CAClB,mCACF,CAAC,EAGC,IAAI,CAAChG,IAAI,CAACgG,QAAQ,CAClB,8CACF,CAAC,EAGQ,IAAI,CAAC4B,WAAW,EAEhB,IAAI,CAAC5H,IAAI,CAACgG,QAAQ,CACzB,8CACF,CAAC,IAIP,EAAE,EAIH,IAAI,CAAChG,IAAI,CAACgG,QAAQ,CACzB,8CACF,CAAC,EAEQ,IAAI,CAAC4B,WAAW,EAEQE,OAAO;MAIhD;IAAC;MAAAhJ,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAA6G,gBAAwBgC,EAAE,EAAE;QAC1BA,EAAE,CAACC,cAAc,CAAC,CAAC;MACrB;IAAC;MAAAlJ,IAAA;MAAAG,GAAA;MAAAC,KAAA;QAAA,IAAA+I,gBAAA,GAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAED,SAAAC,QAAA;UAAA,OAAAF,mBAAA,GAAAG,IAAA,UAAAC,SAAAC,QAAA;YAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;cAAA;gBAAA,IACOpN,iBAAiB,CAAC,IAAI,CAAC0E,IAAI,EAAE,KAAK,CAAC;kBAAAwI,QAAA,CAAAE,IAAA;kBAAA;gBAAA;gBAAA,OAAAF,QAAA,CAAAG,MAAA;cAAA;gBAAAH,QAAA,CAAAE,IAAA;gBAAA,OAGlCrM,cAAc,CAAC,IAAI,CAAC2D,IAAI,CAAC;cAAA;cAAA;gBAAA,OAAAwI,QAAA,CAAAI,IAAA;YAAA;UAAA,GAAAP,OAAA;QAAA,CAChC;QAAA,SAAAvE,gBAAA;UAAA,OAAAmE,gBAAA,CAAAY,KAAA,OAAA1K,SAAA;QAAA;QAAA,OAAA2F,eAAA;MAAA;IAAA;MAAAhF,IAAA;MAAAG,GAAA;MAAAC,KAAA;QAAA,IAAA4J,gBAAA,GAAAZ,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAED,SAAAW,SAA8B1H,YAAuB;UAAA,IAAA2H,OAAA,EAAAC,SAAA,EAAAC,UAAA,EAAAC,MAAA,EAAAC,QAAA;UAAA,OAAAjB,mBAAA,GAAAG,IAAA,UAAAe,UAAAC,SAAA;YAAA,kBAAAA,SAAA,CAAAb,IAAA,GAAAa,SAAA,CAAAZ,IAAA;cAAA;gBAAAY,SAAA,CAAAZ,IAAA;gBAAA,OAC7BzM,yBAAyB,CAAC,IAAI,CAAC+D,IAAI,EAAEqB,YAAY,CAAC;cAAA;gBAAlE2H,OAAO,GAAAM,SAAA,CAAAC,IAAA;gBACb;gBACA;gBACMN,SAAS,GAAAO,MAAA,CAAAC,MAAA,KAAQ,IAAI,CAAC3C,UAAU;gBAAAoC,UAAA,GAAA5I,0BAAA,CACf0I,OAAO;gBAAA;kBAA9B,KAAAE,UAAA,CAAA1I,CAAA,MAAA2I,MAAA,GAAAD,UAAA,CAAAzI,CAAA,IAAAC,IAAA,GAAgC;oBAArB0I,QAAQ,GAAAD,MAAA,CAAAjK,KAAA;oBACjB+J,SAAS,CAACG,QAAQ,CAAC9L,MAAM,CAAC,GAAG8L,QAAQ;kBACvC;gBAAC,SAAAxI,GAAA;kBAAAsI,UAAA,CAAArI,CAAA,CAAAD,GAAA;gBAAA;kBAAAsI,UAAA,CAAApI,CAAA;gBAAA;gBACD,IAAI,CAACgG,UAAU,GAAGmC,SAAS;cAAC;cAAA;gBAAA,OAAAK,SAAA,CAAAV,IAAA;YAAA;UAAA,GAAAG,QAAA;QAAA,CAC7B;QAAA,SAAArF,gBAAAgG,EAAA;UAAA,OAAAZ,gBAAA,CAAAD,KAAA,OAAA1K,SAAA;QAAA;QAAA,OAAAuF,eAAA;MAAA;IAAA;MAAA5E,IAAA;MAAAG,GAAA;MAAAC,KAAA;QAAA,IAAAyK,2BAAA,GAAAzB,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAED,SAAAwB,SAAyCvI,YAAsB;UAAA,IAAAwI,gBAAA,EAAAC,UAAA,EAAAC,MAAA,EAAAC,YAAA;UAAA,OAAA7B,mBAAA,GAAAG,IAAA,UAAA2B,UAAAC,SAAA;YAAA,kBAAAA,SAAA,CAAAzB,IAAA,GAAAyB,SAAA,CAAAxB,IAAA;cAAA;gBACvDmB,gBAA0B,GAAG,EAAE;gBAAAC,UAAA,GAAAxJ,0BAAA,CACXe,YAAY;gBAAA6I,SAAA,CAAAzB,IAAA;gBAAAqB,UAAA,CAAAtJ,CAAA;cAAA;gBAAA,KAAAuJ,MAAA,GAAAD,UAAA,CAAArJ,CAAA,IAAAC,IAAA;kBAAAwJ,SAAA,CAAAxB,IAAA;kBAAA;gBAAA;gBAA3ByB,YAAW,GAAAJ,MAAA,CAAA7K,KAAA;gBAAA,MAChBiL,YAAW,IAAI,IAAI,CAACrD,UAAU;kBAAAoD,SAAA,CAAAxB,IAAA;kBAAA;gBAAA;gBAAA,OAAAwB,SAAA,CAAAvB,MAAA;cAAA;gBAAA,KAG9B,IAAI,CAACyB,sBAAsB;kBAAAF,SAAA,CAAAxB,IAAA;kBAAA;gBAAA;gBAAA,KACzB,IAAI,CAAC0B,sBAAsB,CAAC/M,GAAG,CAAC8M,YAAW,CAAC;kBAAAD,SAAA,CAAAxB,IAAA;kBAAA;gBAAA;gBAAA,OAAAwB,SAAA,CAAAvB,MAAA;cAAA;gBAAAuB,SAAA,CAAAxB,IAAA;gBAAA;cAAA;gBAIhD,IAAI,CAAC0B,sBAAsB,GAAG,IAAIC,GAAG,CAAC,CAAC;cAAC;gBAE1C,IAAI,CAACD,sBAAsB,CAACE,GAAG,CAACH,YAAW,CAAC;gBAC5CN,gBAAgB,CAACrM,IAAI,CAAC2M,YAAW,CAAC;cAAC;gBAAAD,SAAA,CAAAxB,IAAA;gBAAA;cAAA;gBAAAwB,SAAA,CAAAxB,IAAA;gBAAA;cAAA;gBAAAwB,SAAA,CAAAzB,IAAA;gBAAAyB,SAAA,CAAAK,EAAA,GAAAL,SAAA;gBAAAJ,UAAA,CAAAjJ,CAAA,CAAAqJ,SAAA,CAAAK,EAAA;cAAA;gBAAAL,SAAA,CAAAzB,IAAA;gBAAAqB,UAAA,CAAAhJ,CAAA;gBAAA,OAAAoJ,SAAA,CAAAM,MAAA;cAAA;gBAAA,KAEjCX,gBAAgB,CAACzL,MAAM;kBAAA8L,SAAA,CAAAxB,IAAA;kBAAA;gBAAA;gBAAAwB,SAAA,CAAAxB,IAAA;gBAAA,OACnB,IAAI,CAAChF,eAAe,CAACmG,gBAAgB,CAAC;cAAA;cAAA;gBAAA,OAAAK,SAAA,CAAAtB,IAAA;YAAA;UAAA,GAAAgB,QAAA;QAAA,CAE/C;QAAA,SAAAlF,2BAAA+F,GAAA;UAAA,OAAAd,2BAAA,CAAAd,KAAA,OAAA1K,SAAA;QAAA;QAAA,OAAAuG,0BAAA;MAAA;IAAA;MAAA5F,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAA6H,mBAAA,EAA6B;QAC3BnL,iCAAiC,CAAC,IAAI,CAACoE,IAAI,CAACC,UAAU,CAAC,CAACyK,OAAO,CAAC,CAAC;QACjE,IAAI,CAAChH,eAAe,CAAC,CAAC;MACxB;IAAC;MAAA5E,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAA0I,YAAA,EAAsB;QACpB/K,wBAAwB,CAAC,IAAI,EAAE;UAC7B8N,aAAa,EAAE,IAAI,CAACxF;QACtB,CAAC,CAAC;MACJ;IAAC;MAAArG,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAA4G,kBAA0BiC,EAA6B,EAAE;QACvD,QAAQA,EAAE,CAAC6C,MAAM,CAACC,KAAK;UACrB,KAAK,CAAC;YACJ,IAAI,CAAC3E,YAAY,GAAG,CAAC,IAAI,CAACA,YAAY;YACtC;UACF,KAAK,CAAC;YACJ,IAAI,CAACS,mBAAmB,CAAC,CAAC;YAC1B;QACJ;MACF;IAAC;MAAA7H,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAyH,oBAAA,EAA8B;QAC5B,IAAI,CAACf,aAAa,GAAG,CAAC,IAAI,CAACA,aAAa;MAC1C;IAAC;MAAA9G,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAqH,oBAA4BwB,EAAe,EAAE;QAC3C,IAAI,CAAC5C,OAAO,GAAG4C,EAAE,CAAC6C,MAAM,CAAC1L,KAAK;QAC9BU,OAAO,CAACkL,YAAY,CAAC;UAAEjL,MAAM,EAAE,IAAI,CAACsF;QAAQ,CAAC,EAAE,EAAE,CAAC;MACpD;IAAC;MAAArG,IAAA;MAAAG,GAAA;MAAAC,KAAA;QAAA,IAAA6L,gBAAA,GAAA7C,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAED,SAAA4C,SAAA;UAAA,IAAAC,OAAA,EAAA3N,MAAA,EAAA4N,WAAA,EAAAC,IAAA;UAAA,OAAAhD,mBAAA,GAAAG,IAAA,UAAA8C,UAAAC,SAAA;YAAA,kBAAAA,SAAA,CAAA5C,IAAA,GAAA4C,SAAA,CAAA3C,IAAA;cAAA;gBAAA2C,SAAA,CAAA3C,IAAA;gBAAA,OACQ/M,UAAU,CAAC,CAAC;cAAA;gBACZsP,OAAO,GAAG,IAAI,CAACzG,YAAY,CAACjH,GAAG,CAAC,cAAc,CAAC;gBAAA,KAEjD0N,OAAO;kBAAAI,SAAA,CAAA3C,IAAA;kBAAA;gBAAA;gBACHwC,WAAW,GAAG,IAAI,CAACjK,aAAa,CAAEqK,IAAI,CAC1C,UAAClO,KAAK;kBAAA,OAAKA,KAAK,CAACmO,QAAQ,KAAKN,OAAO;gBAAA,CACvC,CAAC;gBAAA,IACIC,WAAW;kBAAAG,SAAA,CAAA3C,IAAA;kBAAA;gBAAA;gBAAA,OAAA2C,SAAA,CAAA1C,MAAA;cAAA;gBAGhBrL,MAAM,GAAG4N,WAAW,CAAC5N,MAAM;gBAAC+N,SAAA,CAAA3C,IAAA;gBAAA;cAAA;gBAE5BpL,MAAM,GAAG,IAAI,CAACkH,YAAY,CAACjH,GAAG,CAAC,QAAQ,CAAC;cAAC;gBAErC4N,IAAuB,GAAG,IAAI,CAACK,UAAU,CAAEC,aAAa,iBAAAhN,MAAA,CAC5CnB,MAAM,MACxB,CAAC;gBACD,IAAI6N,IAAI,EAAE;kBACRA,IAAI,CAACO,cAAc,CAAC;oBAClBC,KAAK,EAAE;kBACT,CAAC,CAAC;kBACFR,IAAI,CAACS,SAAS,CAACtB,GAAG,CAAC,WAAW,CAAC;gBACjC;cAAC;cAAA;gBAAA,OAAAe,SAAA,CAAAzC,IAAA;YAAA;UAAA,GAAAoC,QAAA;QAAA,CACF;QAAA,SAAAvG,gBAAA;UAAA,OAAAsG,gBAAA,CAAAlC,KAAA,OAAA1K,SAAA;QAAA;QAAA,OAAAsG,eAAA;MAAA;IAAA;MAAA3F,IAAA;MAAAG,GAAA;MAAAC,KAAA;QAAA,IAAA2M,WAAA,GAAA3D,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAED,SAAA0D,SAAA;UAAA,IAAAC,MAAA;UAAA,IAAAC,KAAA,EAAA1O,MAAA,EAAA2O,YAAA,EAAA5K,YAAA,EAAA8I,WAAA,EAAAnE,QAAA,EAAAkG,SAAA,EAAAC,oBAAA,EAAAC,OAAA,EAAAC,MAAA;UAAA,OAAAlE,mBAAA,GAAAG,IAAA,UAAAgE,UAAAC,SAAA;YAAA,kBAAAA,SAAA,CAAA9D,IAAA,GAAA8D,SAAA,CAAA7D,IAAA;cAAA;gBACQsD,KAAK,GAAGtQ,kBAAkB,CAAC,OAAO,CAAC;gBACnC4B,MAAM,GAAG5B,kBAAkB,CAAC,QAAQ,CAAC;gBAC3CD,QAAQ,CAAC,sBAAsB,EAAE;kBAAE+Q,OAAO,EAAE;gBAAK,CAAC,CAAC;gBAAC,KAEhDR,KAAK;kBAAAO,SAAA,CAAA7D,IAAA;kBAAA;gBAAA;gBACP7L,wBAAwB,CAAC,IAAI,EAAE;kBAC7BmP,KAAK,EAALA;gBACF,CAAC,CAAC;gBAAC,OAAAO,SAAA,CAAA5D,MAAA;cAAA;gBAAA,IAGArL,MAAM;kBAAAiP,SAAA,CAAA7D,IAAA;kBAAA;gBAAA;gBAAA,OAAA6D,SAAA,CAAA5D,MAAA;cAAA;gBAAA4D,SAAA,CAAA7D,IAAA;gBAAA,OAIgBtM,0BAA0B,CAAC,IAAI,CAAC4D,IAAI,CAAC;cAAA;gBAA1DiM,YAAY,GAAAM,SAAA,CAAAhD,IAAA;gBACZlI,YAAY,GAAAmI,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACbwC,YAAY,CAACQ,IAAI,CAACtC,WAAW,GAC7B8B,YAAY,CAACS,MAAM,CAACvC,WAAW;gBAG9BA,WAAW,GAAGhO,eAAe,CAACkF,YAAY,EAAE/D,MAAM,CAAC;gBAAA,MAErD6M,WAAW,aAAXA,WAAW,eAAXA,WAAW,CAAEwC,WAAW;kBAAAJ,SAAA,CAAA7D,IAAA;kBAAA;gBAAA;gBAAA6D,SAAA,CAAA7D,IAAA;gBAAA,OAEH,IAAI,CAAC1I,IAAI,CAAC4M,sBAAsB,CACrD,OAAO,EACPtP,MAAM,EACN,KACF,CAAC;cAAA;gBAJK0I,QAAQ,GAAAuG,SAAA,CAAAhD,IAAA;gBAAAgD,SAAA,CAAA7D,IAAA;gBAAA,OAMNlM,sBAAsB,CAAC,IAAI,EAAE;kBACjCqQ,KAAK,EAAE7G,QAAQ,CAAC,0CAA0C,EAAE;oBAC1DmE,WAAW,EAAEA,WAAW,CAAC2C,IAAI,IAAI/Q,YAAY,CAACiK,QAAQ,EAAE1I,MAAM;kBAChE,CAAC;gBACH,CAAC,CAAC;cAAA;gBAAA,KAAAiP,SAAA,CAAAhD,IAAA;kBAAAgD,SAAA,CAAA7D,IAAA;kBAAA;gBAAA;gBAEF7L,wBAAwB,CAAC,IAAI,EAAE;kBAC7BS,MAAM,EAANA;gBACF,CAAC,CAAC;cAAC;gBAAA,OAAAiP,SAAA,CAAA5D,MAAA;cAAA;gBAAA,MAKHwB,WAAW,aAAXA,WAAW,eAAXA,WAAW,CAAE4C,YAAY;kBAAAR,SAAA,CAAA7D,IAAA;kBAAA;gBAAA;gBAAA6D,SAAA,CAAA7D,IAAA;gBAAA,OAEJ,IAAI,CAAC1I,IAAI,CAAC4M,sBAAsB,CACrD,OAAO,EACPtP,MAAM,EACN,KACF,CAAC;cAAA;gBAJK0I,SAAQ,GAAAuG,SAAA,CAAAhD,IAAA;gBAKR4C,oBAAoB,GAAGhQ,eAAe,CAC1CkF,YAAY,EACZ8I,WAAW,CAAC4C,YACd,CAAC;gBAAA,IAEIZ,oBAAoB;kBAAAI,SAAA,CAAA7D,IAAA;kBAAA;gBAAA;gBAAA,OAAA6D,SAAA,CAAA5D,MAAA;cAAA;gBAIzBnM,sBAAsB,CAAC,IAAI,EAAE;kBAC3BwQ,IAAI,EAAE,IAAI,CAAChN,IAAI,CAACgG,QAAQ,CACtB,+DAA+D,EAC/D;oBACEiH,eAAe,EAAE9C,WAAW,CAAC2C,IAAI,IAAI/Q,YAAY,CAACiK,SAAQ,EAAE1I,MAAM,CAAC;oBACnE4P,gBAAgB,EACdf,oBAAoB,CAACW,IAAI,IACzB/Q,YAAY,CAACiK,SAAQ,EAAEmE,WAAW,CAAC4C,YAAY;kBACnD,CACF,CAAC;kBACDI,OAAO;oBAAA,IAAAC,QAAA,GAAAlF,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAE,SAAAiF,SAAA;sBAAA,IAAAC,oBAAA;sBAAA,OAAAnF,mBAAA,GAAAG,IAAA,UAAAiF,UAAAC,SAAA;wBAAA,kBAAAA,SAAA,CAAA/E,IAAA,GAAA+E,SAAA,CAAA9E,IAAA;0BAAA;4BAAA,KAEJlN,qBAAqB,CAA2BiS,QAAQ,CACvDtD,WAAW,CAAC4C,YACd,CAAC;8BAAAS,SAAA,CAAA9E,IAAA;8BAAA;4BAAA;4BAEDnN,yBAAyB,CACvBwQ,MAAI,EACJA,MAAI,CAAC/L,IAAI,EACTmK,WAAW,CAAC4C,YACd,CAAC;4BAAC,OAAAS,SAAA,CAAA7E,MAAA;0BAAA;4BAAA6E,SAAA,CAAAjD,EAAA,GAGJjO,oBAAoB;4BAAAkR,SAAA,CAAAE,EAAA,GAAC3B,MAAI;4BAAAyB,SAAA,CAAAG,EAAA,GACD,SAAAC,qBAAA,EAAM;8BAC1B7B,MAAI,CAAChF,kBAAkB,CAAC,CAAC;4BAC3B,CAAC;4BAAAyG,SAAA,CAAAK,EAAA,GACiB1D,WAAW,CAAC4C,YAAY;4BAAAS,SAAA,CAAA9E,IAAA;4BAAA,OAC1B1M,wBAAwB,CACtC+P,MAAI,CAAC/L,IAAI,EACTmK,WAAW,CAAC4C,YACd,CAAC;0BAAA;4BAAAS,SAAA,CAAAM,EAAA,GAAAN,SAAA,CAAAjE,IAAA;4BAAAiE,SAAA,CAAAO,EAAA,IAAAT,oBAAA,GACavB,MAAI,CAAC/L,IAAI,CAACgO,QAAQ,cAAAV,oBAAA,uBAAlBA,oBAAA,CAAoBW,YAAY;4BAAAT,SAAA,CAAAU,EAAA;8BAR9CN,oBAAoB,EAAAJ,SAAA,CAAAG,EAAA;8BAGpBQ,gBAAgB,EAAAX,SAAA,CAAAK,EAAA;8BAChBzE,QAAQ,EAAAoE,SAAA,CAAAM,EAAA;8BAIRG,YAAY,EAAAT,SAAA,CAAAO;4BAAA;4BAAA,IAAAP,SAAA,CAAAjD,EAAA,EAAAiD,SAAA,CAAAE,EAAA,EAAAF,SAAA,CAAAU,EAAA;0BAAA;0BAAA;4BAAA,OAAAV,SAAA,CAAA5E,IAAA;wBAAA;sBAAA,GAAAyE,QAAA;oBAAA,CAEf;oBAAA,SAAAF,QAAA;sBAAA,OAAAC,QAAA,CAAAvE,KAAA,OAAA1K,SAAA;oBAAA;oBAAA,OAAAgP,OAAA;kBAAA;gBACH,CAAC,CAAC;gBAAC,OAAAZ,SAAA,CAAA5D,MAAA;cAAA;gBAAA,KAKD/L,cAAc,CAACU,MAAM,CAAC;kBAAAiP,SAAA,CAAA7D,IAAA;kBAAA;gBAAA;gBACxBjN,QAAQ,+BAAAgD,MAAA,CAA+BnB,MAAM,GAAI;kBAC/CkP,OAAO,EAAE;gBACX,CAAC,CAAC;gBAAC,OAAAD,SAAA,CAAA5D,MAAA;cAAA;gBAGCyD,OAAO,GAAA5C,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACRwC,YAAY,CAACQ,IAAI,CAACJ,MAAM,GACxBJ,YAAY,CAACS,MAAM,CAACL,MAAM;gBAEzBA,MAAM,GAAGlQ,eAAe,CAACiQ,OAAO,EAAE9O,MAAM,CAAC;gBAAA,KAC3C+O,MAAM;kBAAAE,SAAA,CAAA7D,IAAA;kBAAA;gBAAA;gBACRjN,QAAQ,+BAAAgD,MAAA,CAA+BnB,MAAM,GAAI;kBAC/CkP,OAAO,EAAE;gBACX,CAAC,CAAC;gBAAC,OAAAD,SAAA,CAAA5D,MAAA;cAAA;gBAGLpM,eAAe,CAAC,IAAI,EAAE;kBACpBsQ,KAAK,EAAE,IAAI,CAAC7M,IAAI,CAACgG,QAAQ,CACvB,gDACF,CAAC;kBACDgH,IAAI,EAAE,IAAI,CAAChN,IAAI,CAACgG,QAAQ,CACtB,yDACF;gBACF,CAAC,CAAC;cAAC;cAAA;gBAAA,OAAAuG,SAAA,CAAA3D,IAAA;YAAA;UAAA,GAAAkD,QAAA;QAAA,CACJ;QAAA,SAAAjI,WAAA;UAAA,OAAAgI,WAAA,CAAAhD,KAAA,OAAA1K,SAAA;QAAA;QAAA,OAAA0F,UAAA;MAAA;IAAA;MAAA/E,IAAA;MAAAsP,MAAA;MAAAnP,GAAA;MAAAC,KAAA,EAED,SAAAmP,OAAA,EAAoC;QAClC,OAAO,CACL3R,OAAO,EACP7B,GAAG,CAAAyT,iBAAA,KAAAA,iBAAA,GAAAvJ,sBAAA,ioHA8HJ;MACH;IAAC;EAAA;AAAA,GAlyByCtI,cAAc,CAAC1B,UAAU,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}