{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport \"./ha-form\";\nexport let HaFormExpendable = _decorate([customElement(\"ha-form-expandable\")], function (_initialize, _LitElement) {\n  class HaFormExpendable extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaFormExpendable,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"data\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"schema\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"disabled\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"computeLabel\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"computeHelper\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var _this$schema$headingL, _this$schema$headingL2;\n        return html`\n      <ha-expansion-panel outlined .expanded=${Boolean(this.schema.expanded)}>\n        <div\n          slot=\"header\"\n          role=\"heading\"\n          aria-level=${(_this$schema$headingL = (_this$schema$headingL2 = this.schema.headingLevel) === null || _this$schema$headingL2 === void 0 ? void 0 : _this$schema$headingL2.toString()) !== null && _this$schema$headingL !== void 0 ? _this$schema$headingL : \"3\"}\n        >\n          ${this.schema.icon ? html` <ha-icon .icon=${this.schema.icon}></ha-icon> ` : this.schema.iconPath ? html`\n                  <ha-svg-icon .path=${this.schema.iconPath}></ha-svg-icon>\n                ` : nothing}\n          ${this.schema.title}\n        </div>\n        <div class=\"content\">\n          <ha-form\n            .hass=${this.hass}\n            .data=${this.data}\n            .schema=${this.schema.schema}\n            .disabled=${this.disabled}\n            .computeLabel=${this.computeLabel}\n            .computeHelper=${this.computeHelper}\n          ></ha-form>\n        </div>\n      </ha-expansion-panel>\n    `;\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css`\n      :host {\n        display: flex !important;\n        flex-direction: column;\n      }\n      :host ha-form {\n        display: block;\n      }\n      .content {\n        padding: 12px;\n      }\n      ha-expansion-panel {\n        display: block;\n        --expansion-panel-content-padding: 0;\n        border-radius: 6px;\n        --ha-card-border-radius: 6px;\n      }\n      ha-svg-icon,\n      ha-icon {\n        color: var(--secondary-text-color);\n      }\n    `;\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","nothing","customElement","property","HaFormExpendable","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","type","Boolean","render","_this$schema$headingL","_this$schema$headingL2","schema","expanded","headingLevel","toString","icon","iconPath","title","hass","data","disabled","computeLabel","computeHelper","static","styles"],"sources":["/workspaces/frontend/src/components/ha-form/ha-form-expandable.ts"],"sourcesContent":["import { css, CSSResultGroup, html, LitElement, nothing } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport type { HomeAssistant } from \"../../types\";\nimport \"./ha-form\";\nimport type {\n  HaFormDataContainer,\n  HaFormElement,\n  HaFormExpandableSchema,\n  HaFormSchema,\n} from \"./types\";\n\n@customElement(\"ha-form-expandable\")\nexport class HaFormExpendable extends LitElement implements HaFormElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public data!: HaFormDataContainer;\n\n  @property({ attribute: false }) public schema!: HaFormExpandableSchema;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @property({ attribute: false }) public computeLabel?: (\n    schema: HaFormSchema,\n    data?: HaFormDataContainer\n  ) => string;\n\n  @property({ attribute: false }) public computeHelper?: (\n    schema: HaFormSchema\n  ) => string;\n\n  protected render() {\n    return html`\n      <ha-expansion-panel outlined .expanded=${Boolean(this.schema.expanded)}>\n        <div\n          slot=\"header\"\n          role=\"heading\"\n          aria-level=${this.schema.headingLevel?.toString() ?? \"3\"}\n        >\n          ${this.schema.icon\n            ? html` <ha-icon .icon=${this.schema.icon}></ha-icon> `\n            : this.schema.iconPath\n              ? html`\n                  <ha-svg-icon .path=${this.schema.iconPath}></ha-svg-icon>\n                `\n              : nothing}\n          ${this.schema.title}\n        </div>\n        <div class=\"content\">\n          <ha-form\n            .hass=${this.hass}\n            .data=${this.data}\n            .schema=${this.schema.schema}\n            .disabled=${this.disabled}\n            .computeLabel=${this.computeLabel}\n            .computeHelper=${this.computeHelper}\n          ></ha-form>\n        </div>\n      </ha-expansion-panel>\n    `;\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      :host {\n        display: flex !important;\n        flex-direction: column;\n      }\n      :host ha-form {\n        display: block;\n      }\n      .content {\n        padding: 12px;\n      }\n      ha-expansion-panel {\n        display: block;\n        --expansion-panel-content-padding: 0;\n        border-radius: 6px;\n        --ha-card-border-radius: 6px;\n      }\n      ha-svg-icon,\n      ha-icon {\n        color: var(--secondary-text-color);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-form-expandable\": HaFormExpendable;\n  }\n}\n"],"mappings":";AAAA,SAASA,GAAG,EAAkBC,IAAI,EAAEC,UAAU,EAAEC,OAAO,QAAQ,KAAK;AACpE,SAASC,aAAa,EAAEC,QAAQ,QAAQ,gBAAgB;AAExD,OAAO,WAAW;AAQlB,WACaC,gBAAgB,GAAAC,SAAA,EAD5BH,aAAa,CAAC,oBAAoB,CAAC,aAAAI,WAAA,EAAAC,WAAA;EAApC,MACaH,gBAAgB,SAAAG,WAAA,CAA6C;IAAAC,YAAA,GAAAC,IAAA;MAAA,SAAAA,IAAA;MAAAH,WAAA;IAAA;EAyE1E;EAAC;IAAAI,CAAA,EAzEYN,gBAAgB;IAAAO,CAAA;MAAAC,IAAA;MAAAC,UAAA,GAC1BV,QAAQ,CAAC;QAAEW,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAC,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAE9BV,QAAQ,CAAC;QAAEW,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAC,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAE9BV,QAAQ,CAAC;QAAEW,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAC,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAE9BV,QAAQ,CAAC;QAAEc,IAAI,EAAEC;MAAQ,CAAC,CAAC;MAAAH,GAAA;MAAAC,MAAA;QAAA,OAAmB,KAAK;MAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAEnDV,QAAQ,CAAC;QAAEW,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAC,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAK9BV,QAAQ,CAAC;QAAEW,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAC,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAI/B,SAAAG,OAAA,EAAmB;QAAA,IAAAC,qBAAA,EAAAC,sBAAA;QACjB,OAAOtB,IAAK;AAChB,+CAA+CmB,OAAO,CAAC,IAAI,CAACI,MAAM,CAACC,QAAQ,CAAE;AAC7E;AACA;AACA;AACA,uBAAqB,CAAAH,qBAAA,IAAAC,sBAAA,GAAE,IAAI,CAACC,MAAM,CAACE,YAAY,cAAAH,sBAAA,uBAAxBA,sBAAA,CAA0BI,QAAQ,CAAC,CAAC,cAAAL,qBAAA,cAAAA,qBAAA,GAAI,GAAI;AACnE;AACA,YAAY,IAAI,CAACE,MAAM,CAACI,IAAI,GACd3B,IAAK,mBAAkB,IAAI,CAACuB,MAAM,CAACI,IAAK,cAAa,GACrD,IAAI,CAACJ,MAAM,CAACK,QAAQ,GAClB5B,IAAK;AACrB,uCAAuC,IAAI,CAACuB,MAAM,CAACK,QAAS;AAC5D,iBAAiB,GACD1B,OAAQ;AACxB,YAAY,IAAI,CAACqB,MAAM,CAACM,KAAM;AAC9B;AACA;AACA;AACA,oBAAoB,IAAI,CAACC,IAAK;AAC9B,oBAAoB,IAAI,CAACC,IAAK;AAC9B,sBAAsB,IAAI,CAACR,MAAM,CAACA,MAAO;AACzC,wBAAwB,IAAI,CAACS,QAAS;AACtC,4BAA4B,IAAI,CAACC,YAAa;AAC9C,6BAA6B,IAAI,CAACC,aAAc;AAChD;AACA;AACA;AACA,KAAK;MACH;IAAC;MAAArB,IAAA;MAAAsB,MAAA;MAAAnB,GAAA;MAAAC,KAAA,EAED,SAAAmB,OAAA,EAAoC;QAClC,OAAOrC,GAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;MACH;IAAC;EAAA;AAAA,GAxEmCE,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}