{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport \"@material/mwc-list/mwc-list\";\nconst mdiClock = \"M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M16.2,16.2L11,13V7H12.5V12.2L17,14.9L16.2,16.2Z\";\nconst mdiDelete = \"M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z\";\nconst mdiDeleteSweep = \"M15,16H19V18H15V16M15,8H22V10H15V8M15,12H21V14H15V12M3,18A2,2 0 0,0 5,20H11A2,2 0 0,0 13,18V8H3V18M14,5H11L10,4H6L5,5H2V7H14V5Z\";\nconst mdiDotsVertical = \"M12,16A2,2 0 0,1 14,18A2,2 0 0,1 12,20A2,2 0 0,1 10,18A2,2 0 0,1 12,16M12,10A2,2 0 0,1 14,12A2,2 0 0,1 12,14A2,2 0 0,1 10,12A2,2 0 0,1 12,10M12,4A2,2 0 0,1 14,6A2,2 0 0,1 12,8A2,2 0 0,1 10,6A2,2 0 0,1 12,4Z\";\nconst mdiDrag = \"M7,19V17H9V19H7M11,19V17H13V19H11M15,19V17H17V19H15M7,15V13H9V15H7M11,15V13H13V15H11M15,15V13H17V15H15M7,11V9H9V11H7M11,11V9H13V11H11M15,11V9H17V11H15M7,7V5H9V7H7M11,7V5H13V7H11M15,7V5H17V7H15Z\";\nconst mdiPlus = \"M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z\";\nconst mdiSort = \"M18 21L14 17H17V7H14L18 3L22 7H19V17H22M2 19V17H12V19M2 13V11H9V13M2 7V5H6V7H2Z\";\nimport { endOfDay, isSameDay } from \"date-fns\";\nimport { LitElement, css, html, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport { repeat } from \"lit/directives/repeat\";\nimport memoizeOne from \"memoize-one\";\nimport { applyThemesOnElement } from \"../../../common/dom/apply_themes_on_element\";\nimport { supportsFeature } from \"../../../common/entity/supports-feature\";\nimport \"../../../components/ha-card\";\nimport \"../../../components/ha-check-list-item\";\nimport \"../../../components/ha-checkbox\";\nimport \"../../../components/ha-icon-button\";\nimport \"../../../components/ha-list-item\";\nimport \"../../../components/ha-markdown-element\";\nimport \"../../../components/ha-relative-time\";\nimport \"../../../components/ha-select\";\nimport \"../../../components/ha-sortable\";\nimport \"../../../components/ha-svg-icon\";\nimport \"../../../components/ha-textfield\";\nimport { isUnavailableState } from \"../../../data/entity\";\nimport { TodoItemStatus, TodoListEntityFeature, createItem, deleteItems, moveItem, subscribeItems, updateItem } from \"../../../data/todo\";\nimport { showConfirmationDialog } from \"../../../dialogs/generic/show-dialog-box\";\nimport { showTodoItemEditDialog } from \"../../todo/show-dialog-todo-item-editor\";\nimport { findEntities } from \"../common/find-entities\";\nimport { createEntityNotFoundWarning } from \"../components/hui-warning\";\nexport let HuiTodoListCard = _decorate([customElement(\"hui-todo-list-card\")], function (_initialize, _LitElement) {\n  class HuiTodoListCard extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HuiTodoListCard,\n    d: [{\n      kind: \"method\",\n      static: true,\n      key: \"getConfigElement\",\n      value: async function getConfigElement() {\n        await import(\"../editor/config-elements/hui-todo-list-editor\");\n        return document.createElement(\"hui-todo-list-card-editor\");\n      }\n    }, {\n      kind: \"method\",\n      static: true,\n      key: \"getStubConfig\",\n      value: function getStubConfig(hass, entities, entitiesFallback) {\n        const includeDomains = [\"todo\"];\n        const maxEntities = 1;\n        const foundEntities = findEntities(hass, maxEntities, entities, entitiesFallback, includeDomains);\n        return {\n          type: \"todo-list\",\n          entity: foundEntities[0] || \"\"\n        };\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_config\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_entityId\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_items\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_reordering\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_unsubItems\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"connectedCallback\",\n      value: function connectedCallback() {\n        _get(_getPrototypeOf(HuiTodoListCard.prototype), \"connectedCallback\", this).call(this);\n        if (this.hasUpdated) {\n          this._subscribeItems();\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"disconnectedCallback\",\n      value: function disconnectedCallback() {\n        var _this$_unsubItems;\n        _get(_getPrototypeOf(HuiTodoListCard.prototype), \"disconnectedCallback\", this).call(this);\n        (_this$_unsubItems = this._unsubItems) === null || _this$_unsubItems === void 0 || _this$_unsubItems.then(unsub => unsub());\n      }\n    }, {\n      kind: \"method\",\n      key: \"getCardSize\",\n      value: function getCardSize() {\n        return (this._config ? this._config.title ? 2 : 0 : 0) + 3;\n      }\n    }, {\n      kind: \"method\",\n      key: \"setConfig\",\n      value: function setConfig(config) {\n        this.checkConfig(config);\n        this._config = config;\n        this._entityId = config.entity;\n      }\n    }, {\n      kind: \"method\",\n      key: \"checkConfig\",\n      value: function checkConfig(config) {\n        if (!config.entity || config.entity.split(\".\")[0] !== \"todo\") {\n          throw new Error(\"Specify an entity from within the todo domain\");\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"getEntityId\",\n      value: function getEntityId() {\n        // not implemented, todo list should always have an entity id set;\n        return undefined;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_getCheckedItems\",\n      value() {\n        return memoizeOne(items => items ? items.filter(item => item.status === TodoItemStatus.Completed) : []);\n      }\n    }, {\n      kind: \"field\",\n      key: \"_getUncheckedItems\",\n      value() {\n        return memoizeOne(items => items ? items.filter(item => item.status === TodoItemStatus.NeedsAction) : []);\n      }\n    }, {\n      kind: \"method\",\n      key: \"willUpdate\",\n      value: function willUpdate(changedProperties) {\n        if (!this.hasUpdated) {\n          if (!this._entityId) {\n            this._entityId = this.getEntityId();\n          }\n          this._subscribeItems();\n        } else if (changedProperties.has(\"_entityId\") || !this._items) {\n          this._items = undefined;\n          this._subscribeItems();\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"updated\",\n      value: function updated(changedProps) {\n        _get(_getPrototypeOf(HuiTodoListCard.prototype), \"updated\", this).call(this, changedProps);\n        if (!this._config || !this.hass) {\n          return;\n        }\n        const oldHass = changedProps.get(\"hass\");\n        const oldConfig = changedProps.get(\"_config\");\n        if (changedProps.has(\"hass\") && (oldHass === null || oldHass === void 0 ? void 0 : oldHass.themes) !== this.hass.themes || changedProps.has(\"_config\") && (oldConfig === null || oldConfig === void 0 ? void 0 : oldConfig.theme) !== this._config.theme) {\n          applyThemesOnElement(this, this.hass.themes, this._config.theme);\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this._config || !this.hass || !this._entityId) {\n          return nothing;\n        }\n        const stateObj = this.hass.states[this._entityId];\n        if (!stateObj) {\n          return html`\n        <hui-warning>\n          ${createEntityNotFoundWarning(this.hass, this._entityId)}\n        </hui-warning>\n      `;\n        }\n        const unavailable = isUnavailableState(stateObj.state);\n        const checkedItems = this._getCheckedItems(this._items);\n        const uncheckedItems = this._getUncheckedItems(this._items);\n        return html`\n      <ha-card\n        .header=${this._config.title}\n        class=${classMap({\n          \"has-header\": \"title\" in this._config\n        })}\n      >\n        <div class=\"addRow\">\n          ${this.todoListSupportsFeature(TodoListEntityFeature.CREATE_TODO_ITEM) ? html`\n                <ha-textfield\n                  class=\"addBox\"\n                  .placeholder=${this.hass.localize(\"ui.panel.lovelace.cards.todo-list.add_item\")}\n                  @keydown=${this._addKeyPress}\n                  .disabled=${unavailable}\n                ></ha-textfield>\n                <ha-icon-button\n                  class=\"addButton\"\n                  .path=${mdiPlus}\n                  .title=${this.hass.localize(\"ui.panel.lovelace.cards.todo-list.add_item\")}\n                  .disabled=${unavailable}\n                  @click=${this._addItem}\n                >\n                </ha-icon-button>\n              ` : nothing}\n        </div>\n        <ha-sortable\n          handle-selector=\"ha-svg-icon\"\n          draggable-selector=\".draggable\"\n          .disabled=${!this._reordering}\n          @item-moved=${this._itemMoved}\n        >\n          <mwc-list wrapFocus multi>\n            ${uncheckedItems.length ? html`\n                  <div class=\"header\" role=\"seperator\">\n                    <h2>\n                      ${this.hass.localize(\"ui.panel.lovelace.cards.todo-list.unchecked_items\")}\n                    </h2>\n                    ${this.todoListSupportsFeature(TodoListEntityFeature.MOVE_TODO_ITEM) ? html`<ha-button-menu>\n                          <ha-icon-button\n                            slot=\"trigger\"\n                            .path=${mdiDotsVertical}\n                          ></ha-icon-button>\n                          <ha-list-item\n                            @click=${this._toggleReorder}\n                            graphic=\"icon\"\n                          >\n                            ${this.hass.localize(this._reordering ? \"ui.panel.lovelace.cards.todo-list.exit_reorder_items\" : \"ui.panel.lovelace.cards.todo-list.reorder_items\")}\n                            <ha-svg-icon\n                              slot=\"graphic\"\n                              .path=${mdiSort}\n                              .disabled=${unavailable}\n                            >\n                            </ha-svg-icon>\n                          </ha-list-item>\n                        </ha-button-menu>` : nothing}\n                  </div>\n                  ${this._renderItems(uncheckedItems, unavailable)}\n                ` : html`<p class=\"empty\">\n                  ${this.hass.localize(\"ui.panel.lovelace.cards.todo-list.no_unchecked_items\")}\n                </p>`}\n            ${checkedItems.length ? html`\n                  <div role=\"separator\">\n                    <div class=\"divider\"></div>\n                    <div class=\"header\">\n                      <h2>\n                        ${this.hass.localize(\"ui.panel.lovelace.cards.todo-list.checked_items\")}\n                      </h2>\n                      ${this.todoListSupportsFeature(TodoListEntityFeature.DELETE_TODO_ITEM) ? html`<ha-button-menu>\n                            <ha-icon-button\n                              slot=\"trigger\"\n                              .path=${mdiDotsVertical}\n                            ></ha-icon-button>\n                            <ha-list-item\n                              @click=${this._clearCompletedItems}\n                              graphic=\"icon\"\n                              class=\"warning\"\n                            >\n                              ${this.hass.localize(\"ui.panel.lovelace.cards.todo-list.clear_items\")}\n                              <ha-svg-icon\n                                class=\"warning\"\n                                slot=\"graphic\"\n                                .path=${mdiDeleteSweep}\n                                .disabled=${unavailable}\n                              >\n                              </ha-svg-icon>\n                            </ha-list-item>\n                          </ha-button-menu>` : nothing}\n                    </div>\n                  </div>\n                  ${this._renderItems(checkedItems, unavailable)}\n                ` : \"\"}\n          </mwc-list>\n        </ha-sortable>\n      </ha-card>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_renderItems\",\n      value: function _renderItems(items, unavailable = false) {\n        return html`\n      ${repeat(items, item => item.uid, item => {\n          const showDelete = this.todoListSupportsFeature(TodoListEntityFeature.DELETE_TODO_ITEM) && !this.todoListSupportsFeature(TodoListEntityFeature.UPDATE_TODO_ITEM);\n          const showReorder = item.status !== TodoItemStatus.Completed && this._reordering;\n          const due = item.due ? item.due.includes(\"T\") ? new Date(item.due) : endOfDay(new Date(`${item.due}T00:00:00`)) : undefined;\n          const today = due && !item.due.includes(\"T\") && isSameDay(new Date(), due);\n          return html`\n            <ha-check-list-item\n              left\n              .hasMeta=${showReorder || showDelete}\n              class=\"editRow ${classMap({\n            draggable: item.status === TodoItemStatus.NeedsAction,\n            completed: item.status === TodoItemStatus.Completed,\n            multiline: Boolean(item.description || item.due)\n          })}\"\n              .selected=${item.status === TodoItemStatus.Completed}\n              .disabled=${unavailable || !this.todoListSupportsFeature(TodoListEntityFeature.UPDATE_TODO_ITEM)}\n              item-id=${item.uid}\n              .itemId=${item.uid}\n              @change=${this._completeItem}\n              @click=${this._openItem}\n              @request-selected=${this._requestSelected}\n              @keydown=${this._handleKeydown}\n            >\n              <div class=\"column\">\n                <span class=\"summary\">${item.summary}</span>\n                ${item.description ? html`<ha-markdown-element\n                      class=\"description\"\n                      .content=${item.description}\n                    ></ha-markdown-element>` : nothing}\n                ${due ? html`<div class=\"due ${due < new Date() ? \"overdue\" : \"\"}\">\n                      <ha-svg-icon .path=${mdiClock}></ha-svg-icon>${today ? this.hass.localize(\"ui.panel.lovelace.cards.todo-list.today\") : html`<ha-relative-time\n                            capitalize\n                            .hass=${this.hass}\n                            .datetime=${due}\n                          ></ha-relative-time>`}\n                    </div>` : nothing}\n              </div>\n              ${showReorder ? html`\n                    <ha-svg-icon\n                      .title=${this.hass.localize(\"ui.panel.lovelace.cards.todo-list.drag_and_drop\")}\n                      class=\"reorderButton handle\"\n                      .path=${mdiDrag}\n                      slot=\"meta\"\n                    >\n                    </ha-svg-icon>\n                  ` : showDelete ? html`<ha-icon-button\n                      .title=${this.hass.localize(\"ui.panel.lovelace.cards.todo-list.delete_item\")}\n                      class=\"deleteItemButton\"\n                      .path=${mdiDelete}\n                      .itemId=${item.uid}\n                      slot=\"meta\"\n                      @click=${this._deleteItem}\n                    >\n                    </ha-icon-button>` : nothing}\n            </ha-check-list-item>\n          `;\n        })}\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"todoListSupportsFeature\",\n      value: function todoListSupportsFeature(feature) {\n        const entityStateObj = this.hass.states[this._entityId];\n        return entityStateObj && supportsFeature(entityStateObj, feature);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_subscribeItems\",\n      value: async function _subscribeItems() {\n        if (this._unsubItems) {\n          this._unsubItems.then(unsub => unsub());\n          this._unsubItems = undefined;\n        }\n        if (!this.hass || !this._entityId) {\n          return;\n        }\n        if (!(this._entityId in this.hass.states)) {\n          return;\n        }\n        this._unsubItems = subscribeItems(this.hass, this._entityId, update => {\n          this._items = update.items;\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_getItem\",\n      value: function _getItem(itemId) {\n        var _this$_items;\n        return (_this$_items = this._items) === null || _this$_items === void 0 ? void 0 : _this$_items.find(item => item.uid === itemId);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_requestSelected\",\n      value: function _requestSelected(ev) {\n        ev.stopPropagation();\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleKeydown\",\n      value: function _handleKeydown(ev) {\n        if (ev.key === \" \") {\n          this._completeItem(ev);\n          return;\n        }\n        if (ev.key === \"Enter\") {\n          this._openItem(ev);\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_openItem\",\n      value: function _openItem(ev) {\n        ev.stopPropagation();\n        if (ev.composedPath().find(el => [\"input\", \"a\", \"button\"].includes(el.localName))) {\n          return;\n        }\n        const item = this._getItem(ev.currentTarget.itemId);\n        showTodoItemEditDialog(this, {\n          entity: this._config.entity,\n          item\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_completeItem\",\n      value: async function _completeItem(ev) {\n        let focusedIndex;\n        let list;\n        if (ev.type === \"keydown\") {\n          list = this.renderRoot.querySelector(\"mwc-list\");\n          focusedIndex = list.getFocusedItemIndex();\n        }\n        const item = this._getItem(ev.currentTarget.itemId);\n        if (!item) {\n          return;\n        }\n        await updateItem(this.hass, this._entityId, {\n          uid: item.uid,\n          summary: item.summary,\n          status: item.status === TodoItemStatus.NeedsAction ? TodoItemStatus.Completed : TodoItemStatus.NeedsAction\n        });\n        if (focusedIndex !== undefined && list) {\n          await this.updateComplete;\n          await list.updateComplete;\n          list.focusItemAtIndex(focusedIndex);\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_clearCompletedItems\",\n      value: async function _clearCompletedItems() {\n        if (!this.hass) {\n          return;\n        }\n        const checkedItems = this._getCheckedItems(this._items);\n        const uids = checkedItems.map(item => item.uid);\n        showConfirmationDialog(this, {\n          title: this.hass.localize(\"ui.panel.lovelace.cards.todo-list.delete_confirm_title\"),\n          text: this.hass.localize(\"ui.panel.lovelace.cards.todo-list.delete_confirm_text\", {\n            number: uids.length\n          }),\n          dismissText: this.hass.localize(\"ui.common.cancel\"),\n          confirmText: this.hass.localize(\"ui.common.delete\"),\n          destructive: true,\n          confirm: () => {\n            deleteItems(this.hass, this._entityId, uids);\n          }\n        });\n      }\n    }, {\n      kind: \"get\",\n      key: \"_newItem\",\n      value: function _newItem() {\n        return this.shadowRoot.querySelector(\".addBox\");\n      }\n    }, {\n      kind: \"method\",\n      key: \"_addItem\",\n      value: function _addItem(ev) {\n        const newItem = this._newItem;\n        if (newItem.value.length > 0) {\n          createItem(this.hass, this._entityId, {\n            summary: newItem.value\n          });\n        }\n        newItem.value = \"\";\n        if (ev) {\n          newItem.focus();\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_deleteItem\",\n      value: function _deleteItem(ev) {\n        const item = this._getItem(ev.target.itemId);\n        if (!item) {\n          return;\n        }\n        deleteItems(this.hass, this._entityId, [item.uid]);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_addKeyPress\",\n      value: function _addKeyPress(ev) {\n        if (ev.key === \"Enter\") {\n          this._addItem(null);\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_toggleReorder\",\n      value: async function _toggleReorder() {\n        this._reordering = !this._reordering;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_itemMoved\",\n      value: async function _itemMoved(ev) {\n        ev.stopPropagation();\n        const {\n          oldIndex,\n          newIndex\n        } = ev.detail;\n        this._moveItem(oldIndex, newIndex);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_moveItem\",\n      value: async function _moveItem(oldIndex, newIndex) {\n        var _prevItem;\n        // correct index for header\n        oldIndex -= 1;\n        newIndex -= 1;\n        const uncheckedItems = this._getUncheckedItems(this._items);\n        const item = uncheckedItems[oldIndex];\n        let prevItem;\n        if (newIndex > 0) {\n          if (newIndex < oldIndex) {\n            prevItem = uncheckedItems[newIndex - 1];\n          } else {\n            prevItem = uncheckedItems[newIndex];\n          }\n        }\n\n        // Optimistic change\n        const itemIndex = this._items.findIndex(itm => itm.uid === item.uid);\n        this._items.splice(itemIndex, 1);\n        if (newIndex === 0) {\n          this._items.unshift(item);\n        } else {\n          const prevIndex = this._items.findIndex(itm => itm.uid === prevItem.uid);\n          this._items.splice(prevIndex + 1, 0, item);\n        }\n        this._items = [...this._items];\n        await moveItem(this.hass, this._entityId, item.uid, (_prevItem = prevItem) === null || _prevItem === void 0 ? void 0 : _prevItem.uid);\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css`\n      ha-card {\n        height: 100%;\n        box-sizing: border-box;\n      }\n\n      .has-header {\n        padding-top: 0;\n      }\n\n      .addRow {\n        padding: 16px;\n        padding-bottom: 0;\n        position: relative;\n      }\n\n      .addRow ha-icon-button {\n        position: absolute;\n        right: 16px;\n        inset-inline-start: initial;\n        inset-inline-end: 16px;\n      }\n\n      .addRow,\n      .header {\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n      }\n\n      .header {\n        padding-left: 30px;\n        padding-right: 16px;\n        padding-inline-start: 30px;\n        padding-inline-end: 16px;\n        margin-top: 8px;\n        justify-content: space-between;\n        direction: var(--direction);\n      }\n\n      .header h2 {\n        color: var(--primary-text-color);\n        font-size: inherit;\n        font-weight: 500;\n      }\n\n      .empty {\n        padding: 16px 32px;\n        display: inline-block;\n      }\n\n      .item {\n        margin-top: 8px;\n      }\n\n      ha-check-list-item {\n        --mdc-list-item-meta-size: 56px;\n        min-height: 56px;\n        height: auto;\n      }\n\n      ha-check-list-item.multiline {\n        align-items: flex-start;\n        --check-list-item-graphic-margin-top: 8px;\n      }\n\n      .row {\n        display: flex;\n        justify-content: space-between;\n      }\n\n      .multiline .column {\n        display: flex;\n        flex-direction: column;\n        margin-top: 18px;\n        margin-bottom: 12px;\n      }\n\n      .completed .summary {\n        text-decoration: line-through;\n      }\n\n      .description,\n      .due {\n        font-size: 12px;\n        color: var(--secondary-text-color);\n      }\n\n      .description {\n        white-space: initial;\n        overflow: hidden;\n        display: -webkit-box;\n        -webkit-line-clamp: 3;\n        line-clamp: 3;\n        -webkit-box-orient: vertical;\n      }\n\n      .description p {\n        margin: 0;\n      }\n\n      .description a {\n        color: var(--primary-color);\n      }\n\n      .due {\n        display: flex;\n        align-items: center;\n      }\n\n      .due ha-svg-icon {\n        margin-right: 4px;\n        margin-inline-end: 4px;\n        margin-inline-start: initial;\n        --mdc-icon-size: 14px;\n      }\n\n      .due.overdue {\n        color: var(--warning-color);\n      }\n\n      .completed .due.overdue {\n        color: var(--secondary-text-color);\n      }\n\n      .handle {\n        cursor: move; /* fallback if grab cursor is unsupported */\n        cursor: grab;\n        height: 24px;\n        padding: 16px 4px;\n      }\n\n      .deleteItemButton {\n        position: relative;\n        left: 8px;\n      }\n\n      ha-textfield {\n        flex-grow: 1;\n      }\n\n      .divider {\n        height: 1px;\n        background-color: var(--divider-color);\n        margin: 10px 0;\n      }\n\n      .clearall {\n        cursor: pointer;\n      }\n\n      .todoList {\n        display: block;\n        padding: 8px;\n      }\n\n      .warning {\n        color: var(--error-color);\n      }\n    `;\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["mdiClock","mdiDelete","mdiDeleteSweep","mdiDotsVertical","mdiDrag","mdiPlus","mdiSort","endOfDay","isSameDay","LitElement","css","html","nothing","customElement","property","state","classMap","repeat","memoizeOne","applyThemesOnElement","supportsFeature","isUnavailableState","TodoItemStatus","TodoListEntityFeature","createItem","deleteItems","moveItem","subscribeItems","updateItem","showConfirmationDialog","showTodoItemEditDialog","findEntities","createEntityNotFoundWarning","HuiTodoListCard","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","static","key","value","getConfigElement","document","createElement","getStubConfig","hass","entities","entitiesFallback","includeDomains","maxEntities","foundEntities","type","entity","decorators","attribute","connectedCallback","_get","_getPrototypeOf","prototype","call","hasUpdated","_subscribeItems","disconnectedCallback","_this$_unsubItems","_unsubItems","then","unsub","getCardSize","_config","title","setConfig","config","checkConfig","_entityId","split","Error","getEntityId","undefined","items","filter","item","status","Completed","NeedsAction","willUpdate","changedProperties","has","_items","updated","changedProps","oldHass","get","oldConfig","themes","theme","render","stateObj","states","unavailable","checkedItems","_getCheckedItems","uncheckedItems","_getUncheckedItems","todoListSupportsFeature","CREATE_TODO_ITEM","localize","_addKeyPress","_addItem","_reordering","_itemMoved","length","MOVE_TODO_ITEM","_toggleReorder","_renderItems","DELETE_TODO_ITEM","_clearCompletedItems","uid","showDelete","UPDATE_TODO_ITEM","showReorder","due","includes","Date","today","draggable","completed","multiline","Boolean","description","_completeItem","_openItem","_requestSelected","_handleKeydown","summary","_deleteItem","feature","entityStateObj","update","_getItem","itemId","_this$_items","find","ev","stopPropagation","composedPath","el","localName","currentTarget","focusedIndex","list","renderRoot","querySelector","getFocusedItemIndex","updateComplete","focusItemAtIndex","uids","map","text","number","dismissText","confirmText","destructive","confirm","_newItem","shadowRoot","newItem","focus","target","oldIndex","newIndex","detail","_moveItem","_prevItem","prevItem","itemIndex","findIndex","itm","splice","unshift","prevIndex","styles"],"sources":["/workspaces/frontend/src/panels/lovelace/cards/hui-todo-list-card.ts"],"sourcesContent":["import \"@material/mwc-list/mwc-list\";\nimport type { List } from \"@material/mwc-list/mwc-list\";\nimport {\n  mdiClock,\n  mdiDelete,\n  mdiDeleteSweep,\n  mdiDotsVertical,\n  mdiDrag,\n  mdiPlus,\n  mdiSort,\n} from \"@mdi/js\";\nimport { endOfDay, isSameDay } from \"date-fns\";\nimport { UnsubscribeFunc } from \"home-assistant-js-websocket\";\nimport {\n  CSSResultGroup,\n  LitElement,\n  PropertyValueMap,\n  PropertyValues,\n  css,\n  html,\n  nothing,\n} from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport { repeat } from \"lit/directives/repeat\";\nimport memoizeOne from \"memoize-one\";\nimport { applyThemesOnElement } from \"../../../common/dom/apply_themes_on_element\";\nimport { supportsFeature } from \"../../../common/entity/supports-feature\";\nimport \"../../../components/ha-card\";\nimport \"../../../components/ha-check-list-item\";\nimport \"../../../components/ha-checkbox\";\nimport \"../../../components/ha-icon-button\";\nimport \"../../../components/ha-list-item\";\nimport \"../../../components/ha-markdown-element\";\nimport \"../../../components/ha-relative-time\";\nimport \"../../../components/ha-select\";\nimport \"../../../components/ha-sortable\";\nimport \"../../../components/ha-svg-icon\";\nimport \"../../../components/ha-textfield\";\nimport type { HaTextField } from \"../../../components/ha-textfield\";\nimport { isUnavailableState } from \"../../../data/entity\";\nimport {\n  TodoItem,\n  TodoItemStatus,\n  TodoListEntityFeature,\n  createItem,\n  deleteItems,\n  moveItem,\n  subscribeItems,\n  updateItem,\n} from \"../../../data/todo\";\nimport { showConfirmationDialog } from \"../../../dialogs/generic/show-dialog-box\";\nimport { HomeAssistant } from \"../../../types\";\nimport { showTodoItemEditDialog } from \"../../todo/show-dialog-todo-item-editor\";\nimport { findEntities } from \"../common/find-entities\";\nimport { createEntityNotFoundWarning } from \"../components/hui-warning\";\nimport { LovelaceCard, LovelaceCardEditor } from \"../types\";\nimport { TodoListCardConfig } from \"./types\";\n\n@customElement(\"hui-todo-list-card\")\nexport class HuiTodoListCard extends LitElement implements LovelaceCard {\n  public static async getConfigElement(): Promise<LovelaceCardEditor> {\n    await import(\"../editor/config-elements/hui-todo-list-editor\");\n    return document.createElement(\"hui-todo-list-card-editor\");\n  }\n\n  public static getStubConfig(\n    hass: HomeAssistant,\n    entities: string[],\n    entitiesFallback: string[]\n  ): TodoListCardConfig {\n    const includeDomains = [\"todo\"];\n    const maxEntities = 1;\n    const foundEntities = findEntities(\n      hass,\n      maxEntities,\n      entities,\n      entitiesFallback,\n      includeDomains\n    );\n\n    return { type: \"todo-list\", entity: foundEntities[0] || \"\" };\n  }\n\n  @property({ attribute: false }) public hass?: HomeAssistant;\n\n  @state() private _config?: TodoListCardConfig;\n\n  @state() private _entityId?: string;\n\n  @state() private _items?: TodoItem[];\n\n  @state() private _reordering = false;\n\n  private _unsubItems?: Promise<UnsubscribeFunc>;\n\n  connectedCallback(): void {\n    super.connectedCallback();\n    if (this.hasUpdated) {\n      this._subscribeItems();\n    }\n  }\n\n  disconnectedCallback(): void {\n    super.disconnectedCallback();\n    this._unsubItems?.then((unsub) => unsub());\n  }\n\n  public getCardSize(): number {\n    return (this._config ? (this._config.title ? 2 : 0) : 0) + 3;\n  }\n\n  public setConfig(config: TodoListCardConfig): void {\n    this.checkConfig(config);\n\n    this._config = config;\n    this._entityId = config.entity;\n  }\n\n  protected checkConfig(config: TodoListCardConfig): void {\n    if (!config.entity || config.entity.split(\".\")[0] !== \"todo\") {\n      throw new Error(\"Specify an entity from within the todo domain\");\n    }\n  }\n\n  protected getEntityId(): string | undefined {\n    // not implemented, todo list should always have an entity id set;\n    return undefined;\n  }\n\n  private _getCheckedItems = memoizeOne((items?: TodoItem[]): TodoItem[] =>\n    items\n      ? items.filter((item) => item.status === TodoItemStatus.Completed)\n      : []\n  );\n\n  private _getUncheckedItems = memoizeOne((items?: TodoItem[]): TodoItem[] =>\n    items\n      ? items.filter((item) => item.status === TodoItemStatus.NeedsAction)\n      : []\n  );\n\n  public willUpdate(\n    changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>\n  ): void {\n    if (!this.hasUpdated) {\n      if (!this._entityId) {\n        this._entityId = this.getEntityId();\n      }\n      this._subscribeItems();\n    } else if (changedProperties.has(\"_entityId\") || !this._items) {\n      this._items = undefined;\n      this._subscribeItems();\n    }\n  }\n\n  protected updated(changedProps: PropertyValues): void {\n    super.updated(changedProps);\n    if (!this._config || !this.hass) {\n      return;\n    }\n\n    const oldHass = changedProps.get(\"hass\") as HomeAssistant | undefined;\n    const oldConfig = changedProps.get(\"_config\") as\n      | TodoListCardConfig\n      | undefined;\n\n    if (\n      (changedProps.has(\"hass\") && oldHass?.themes !== this.hass.themes) ||\n      (changedProps.has(\"_config\") && oldConfig?.theme !== this._config.theme)\n    ) {\n      applyThemesOnElement(this, this.hass.themes, this._config.theme);\n    }\n  }\n\n  protected render() {\n    if (!this._config || !this.hass || !this._entityId) {\n      return nothing;\n    }\n\n    const stateObj = this.hass.states[this._entityId];\n\n    if (!stateObj) {\n      return html`\n        <hui-warning>\n          ${createEntityNotFoundWarning(this.hass, this._entityId)}\n        </hui-warning>\n      `;\n    }\n\n    const unavailable = isUnavailableState(stateObj.state);\n\n    const checkedItems = this._getCheckedItems(this._items);\n    const uncheckedItems = this._getUncheckedItems(this._items);\n\n    return html`\n      <ha-card\n        .header=${this._config.title}\n        class=${classMap({\n          \"has-header\": \"title\" in this._config,\n        })}\n      >\n        <div class=\"addRow\">\n          ${this.todoListSupportsFeature(TodoListEntityFeature.CREATE_TODO_ITEM)\n            ? html`\n                <ha-textfield\n                  class=\"addBox\"\n                  .placeholder=${this.hass!.localize(\n                    \"ui.panel.lovelace.cards.todo-list.add_item\"\n                  )}\n                  @keydown=${this._addKeyPress}\n                  .disabled=${unavailable}\n                ></ha-textfield>\n                <ha-icon-button\n                  class=\"addButton\"\n                  .path=${mdiPlus}\n                  .title=${this.hass!.localize(\n                    \"ui.panel.lovelace.cards.todo-list.add_item\"\n                  )}\n                  .disabled=${unavailable}\n                  @click=${this._addItem}\n                >\n                </ha-icon-button>\n              `\n            : nothing}\n        </div>\n        <ha-sortable\n          handle-selector=\"ha-svg-icon\"\n          draggable-selector=\".draggable\"\n          .disabled=${!this._reordering}\n          @item-moved=${this._itemMoved}\n        >\n          <mwc-list wrapFocus multi>\n            ${uncheckedItems.length\n              ? html`\n                  <div class=\"header\" role=\"seperator\">\n                    <h2>\n                      ${this.hass!.localize(\n                        \"ui.panel.lovelace.cards.todo-list.unchecked_items\"\n                      )}\n                    </h2>\n                    ${this.todoListSupportsFeature(\n                      TodoListEntityFeature.MOVE_TODO_ITEM\n                    )\n                      ? html`<ha-button-menu>\n                          <ha-icon-button\n                            slot=\"trigger\"\n                            .path=${mdiDotsVertical}\n                          ></ha-icon-button>\n                          <ha-list-item\n                            @click=${this._toggleReorder}\n                            graphic=\"icon\"\n                          >\n                            ${this.hass!.localize(\n                              this._reordering\n                                ? \"ui.panel.lovelace.cards.todo-list.exit_reorder_items\"\n                                : \"ui.panel.lovelace.cards.todo-list.reorder_items\"\n                            )}\n                            <ha-svg-icon\n                              slot=\"graphic\"\n                              .path=${mdiSort}\n                              .disabled=${unavailable}\n                            >\n                            </ha-svg-icon>\n                          </ha-list-item>\n                        </ha-button-menu>`\n                      : nothing}\n                  </div>\n                  ${this._renderItems(uncheckedItems, unavailable)}\n                `\n              : html`<p class=\"empty\">\n                  ${this.hass.localize(\n                    \"ui.panel.lovelace.cards.todo-list.no_unchecked_items\"\n                  )}\n                </p>`}\n            ${checkedItems.length\n              ? html`\n                  <div role=\"separator\">\n                    <div class=\"divider\"></div>\n                    <div class=\"header\">\n                      <h2>\n                        ${this.hass!.localize(\n                          \"ui.panel.lovelace.cards.todo-list.checked_items\"\n                        )}\n                      </h2>\n                      ${this.todoListSupportsFeature(\n                        TodoListEntityFeature.DELETE_TODO_ITEM\n                      )\n                        ? html`<ha-button-menu>\n                            <ha-icon-button\n                              slot=\"trigger\"\n                              .path=${mdiDotsVertical}\n                            ></ha-icon-button>\n                            <ha-list-item\n                              @click=${this._clearCompletedItems}\n                              graphic=\"icon\"\n                              class=\"warning\"\n                            >\n                              ${this.hass!.localize(\n                                \"ui.panel.lovelace.cards.todo-list.clear_items\"\n                              )}\n                              <ha-svg-icon\n                                class=\"warning\"\n                                slot=\"graphic\"\n                                .path=${mdiDeleteSweep}\n                                .disabled=${unavailable}\n                              >\n                              </ha-svg-icon>\n                            </ha-list-item>\n                          </ha-button-menu>`\n                        : nothing}\n                    </div>\n                  </div>\n                  ${this._renderItems(checkedItems, unavailable)}\n                `\n              : \"\"}\n          </mwc-list>\n        </ha-sortable>\n      </ha-card>\n    `;\n  }\n\n  private _renderItems(items: TodoItem[], unavailable = false) {\n    return html`\n      ${repeat(\n        items,\n        (item) => item.uid,\n        (item) => {\n          const showDelete =\n            this.todoListSupportsFeature(\n              TodoListEntityFeature.DELETE_TODO_ITEM\n            ) &&\n            !this.todoListSupportsFeature(\n              TodoListEntityFeature.UPDATE_TODO_ITEM\n            );\n          const showReorder =\n            item.status !== TodoItemStatus.Completed && this._reordering;\n          const due = item.due\n            ? item.due.includes(\"T\")\n              ? new Date(item.due)\n              : endOfDay(new Date(`${item.due}T00:00:00`))\n            : undefined;\n          const today =\n            due && !item.due!.includes(\"T\") && isSameDay(new Date(), due);\n          return html`\n            <ha-check-list-item\n              left\n              .hasMeta=${showReorder || showDelete}\n              class=\"editRow ${classMap({\n                draggable: item.status === TodoItemStatus.NeedsAction,\n                completed: item.status === TodoItemStatus.Completed,\n                multiline: Boolean(item.description || item.due),\n              })}\"\n              .selected=${item.status === TodoItemStatus.Completed}\n              .disabled=${unavailable ||\n              !this.todoListSupportsFeature(\n                TodoListEntityFeature.UPDATE_TODO_ITEM\n              )}\n              item-id=${item.uid}\n              .itemId=${item.uid}\n              @change=${this._completeItem}\n              @click=${this._openItem}\n              @request-selected=${this._requestSelected}\n              @keydown=${this._handleKeydown}\n            >\n              <div class=\"column\">\n                <span class=\"summary\">${item.summary}</span>\n                ${item.description\n                  ? html`<ha-markdown-element\n                      class=\"description\"\n                      .content=${item.description}\n                    ></ha-markdown-element>`\n                  : nothing}\n                ${due\n                  ? html`<div class=\"due ${due < new Date() ? \"overdue\" : \"\"}\">\n                      <ha-svg-icon .path=${mdiClock}></ha-svg-icon>${today\n                        ? this.hass!.localize(\n                            \"ui.panel.lovelace.cards.todo-list.today\"\n                          )\n                        : html`<ha-relative-time\n                            capitalize\n                            .hass=${this.hass}\n                            .datetime=${due}\n                          ></ha-relative-time>`}\n                    </div>`\n                  : nothing}\n              </div>\n              ${showReorder\n                ? html`\n                    <ha-svg-icon\n                      .title=${this.hass!.localize(\n                        \"ui.panel.lovelace.cards.todo-list.drag_and_drop\"\n                      )}\n                      class=\"reorderButton handle\"\n                      .path=${mdiDrag}\n                      slot=\"meta\"\n                    >\n                    </ha-svg-icon>\n                  `\n                : showDelete\n                  ? html`<ha-icon-button\n                      .title=${this.hass!.localize(\n                        \"ui.panel.lovelace.cards.todo-list.delete_item\"\n                      )}\n                      class=\"deleteItemButton\"\n                      .path=${mdiDelete}\n                      .itemId=${item.uid}\n                      slot=\"meta\"\n                      @click=${this._deleteItem}\n                    >\n                    </ha-icon-button>`\n                  : nothing}\n            </ha-check-list-item>\n          `;\n        }\n      )}\n    `;\n  }\n\n  private todoListSupportsFeature(feature: number): boolean {\n    const entityStateObj = this.hass!.states[this._entityId!];\n    return entityStateObj && supportsFeature(entityStateObj, feature);\n  }\n\n  private async _subscribeItems(): Promise<void> {\n    if (this._unsubItems) {\n      this._unsubItems.then((unsub) => unsub());\n      this._unsubItems = undefined;\n    }\n    if (!this.hass || !this._entityId) {\n      return;\n    }\n    if (!(this._entityId in this.hass.states)) {\n      return;\n    }\n    this._unsubItems = subscribeItems(this.hass!, this._entityId, (update) => {\n      this._items = update.items;\n    });\n  }\n\n  private _getItem(itemId: string) {\n    return this._items?.find((item) => item.uid === itemId);\n  }\n\n  private _requestSelected(ev: Event): void {\n    ev.stopPropagation();\n  }\n\n  private _handleKeydown(ev) {\n    if (ev.key === \" \") {\n      this._completeItem(ev);\n      return;\n    }\n    if (ev.key === \"Enter\") {\n      this._openItem(ev);\n    }\n  }\n\n  private _openItem(ev): void {\n    ev.stopPropagation();\n\n    if (\n      ev\n        .composedPath()\n        .find((el) => [\"input\", \"a\", \"button\"].includes(el.localName))\n    ) {\n      return;\n    }\n\n    const item = this._getItem(ev.currentTarget.itemId);\n    showTodoItemEditDialog(this, {\n      entity: this._config!.entity!,\n      item,\n    });\n  }\n\n  private async _completeItem(ev): Promise<void> {\n    let focusedIndex: number | undefined;\n    let list: List | undefined;\n    if (ev.type === \"keydown\") {\n      list = this.renderRoot.querySelector(\"mwc-list\")!;\n      focusedIndex = list.getFocusedItemIndex();\n    }\n    const item = this._getItem(ev.currentTarget.itemId);\n    if (!item) {\n      return;\n    }\n    await updateItem(this.hass!, this._entityId!, {\n      uid: item.uid,\n      summary: item.summary,\n      status:\n        item.status === TodoItemStatus.NeedsAction\n          ? TodoItemStatus.Completed\n          : TodoItemStatus.NeedsAction,\n    });\n    if (focusedIndex !== undefined && list) {\n      await this.updateComplete;\n      await list.updateComplete;\n      list.focusItemAtIndex(focusedIndex);\n    }\n  }\n\n  private async _clearCompletedItems(): Promise<void> {\n    if (!this.hass) {\n      return;\n    }\n    const checkedItems = this._getCheckedItems(this._items);\n    const uids = checkedItems.map((item: TodoItem) => item.uid);\n    showConfirmationDialog(this, {\n      title: this.hass.localize(\n        \"ui.panel.lovelace.cards.todo-list.delete_confirm_title\"\n      ),\n      text: this.hass.localize(\n        \"ui.panel.lovelace.cards.todo-list.delete_confirm_text\",\n        { number: uids.length }\n      ),\n      dismissText: this.hass.localize(\"ui.common.cancel\"),\n      confirmText: this.hass.localize(\"ui.common.delete\"),\n      destructive: true,\n      confirm: () => {\n        deleteItems(this.hass!, this._entityId!, uids);\n      },\n    });\n  }\n\n  private get _newItem(): HaTextField {\n    return this.shadowRoot!.querySelector(\".addBox\") as HaTextField;\n  }\n\n  private _addItem(ev): void {\n    const newItem = this._newItem;\n    if (newItem.value!.length > 0) {\n      createItem(this.hass!, this._entityId!, {\n        summary: newItem.value!,\n      });\n    }\n\n    newItem.value = \"\";\n    if (ev) {\n      newItem.focus();\n    }\n  }\n\n  private _deleteItem(ev): void {\n    const item = this._getItem(ev.target.itemId);\n    if (!item) {\n      return;\n    }\n    deleteItems(this.hass!, this._entityId!, [item.uid]);\n  }\n\n  private _addKeyPress(ev): void {\n    if (ev.key === \"Enter\") {\n      this._addItem(null);\n    }\n  }\n\n  private async _toggleReorder() {\n    this._reordering = !this._reordering;\n  }\n\n  private async _itemMoved(ev: CustomEvent) {\n    ev.stopPropagation();\n    const { oldIndex, newIndex } = ev.detail;\n    this._moveItem(oldIndex, newIndex);\n  }\n\n  private async _moveItem(oldIndex: number, newIndex: number) {\n    // correct index for header\n    oldIndex -= 1;\n    newIndex -= 1;\n    const uncheckedItems = this._getUncheckedItems(this._items);\n    const item = uncheckedItems[oldIndex];\n    let prevItem: TodoItem | undefined;\n    if (newIndex > 0) {\n      if (newIndex < oldIndex) {\n        prevItem = uncheckedItems[newIndex - 1];\n      } else {\n        prevItem = uncheckedItems[newIndex];\n      }\n    }\n\n    // Optimistic change\n    const itemIndex = this._items!.findIndex((itm) => itm.uid === item.uid);\n    this._items!.splice(itemIndex, 1);\n    if (newIndex === 0) {\n      this._items!.unshift(item);\n    } else {\n      const prevIndex = this._items!.findIndex(\n        (itm) => itm.uid === prevItem!.uid\n      );\n      this._items!.splice(prevIndex + 1, 0, item);\n    }\n    this._items = [...this._items!];\n\n    await moveItem(this.hass!, this._entityId!, item.uid, prevItem?.uid);\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      ha-card {\n        height: 100%;\n        box-sizing: border-box;\n      }\n\n      .has-header {\n        padding-top: 0;\n      }\n\n      .addRow {\n        padding: 16px;\n        padding-bottom: 0;\n        position: relative;\n      }\n\n      .addRow ha-icon-button {\n        position: absolute;\n        right: 16px;\n        inset-inline-start: initial;\n        inset-inline-end: 16px;\n      }\n\n      .addRow,\n      .header {\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n      }\n\n      .header {\n        padding-left: 30px;\n        padding-right: 16px;\n        padding-inline-start: 30px;\n        padding-inline-end: 16px;\n        margin-top: 8px;\n        justify-content: space-between;\n        direction: var(--direction);\n      }\n\n      .header h2 {\n        color: var(--primary-text-color);\n        font-size: inherit;\n        font-weight: 500;\n      }\n\n      .empty {\n        padding: 16px 32px;\n        display: inline-block;\n      }\n\n      .item {\n        margin-top: 8px;\n      }\n\n      ha-check-list-item {\n        --mdc-list-item-meta-size: 56px;\n        min-height: 56px;\n        height: auto;\n      }\n\n      ha-check-list-item.multiline {\n        align-items: flex-start;\n        --check-list-item-graphic-margin-top: 8px;\n      }\n\n      .row {\n        display: flex;\n        justify-content: space-between;\n      }\n\n      .multiline .column {\n        display: flex;\n        flex-direction: column;\n        margin-top: 18px;\n        margin-bottom: 12px;\n      }\n\n      .completed .summary {\n        text-decoration: line-through;\n      }\n\n      .description,\n      .due {\n        font-size: 12px;\n        color: var(--secondary-text-color);\n      }\n\n      .description {\n        white-space: initial;\n        overflow: hidden;\n        display: -webkit-box;\n        -webkit-line-clamp: 3;\n        line-clamp: 3;\n        -webkit-box-orient: vertical;\n      }\n\n      .description p {\n        margin: 0;\n      }\n\n      .description a {\n        color: var(--primary-color);\n      }\n\n      .due {\n        display: flex;\n        align-items: center;\n      }\n\n      .due ha-svg-icon {\n        margin-right: 4px;\n        margin-inline-end: 4px;\n        margin-inline-start: initial;\n        --mdc-icon-size: 14px;\n      }\n\n      .due.overdue {\n        color: var(--warning-color);\n      }\n\n      .completed .due.overdue {\n        color: var(--secondary-text-color);\n      }\n\n      .handle {\n        cursor: move; /* fallback if grab cursor is unsupported */\n        cursor: grab;\n        height: 24px;\n        padding: 16px 4px;\n      }\n\n      .deleteItemButton {\n        position: relative;\n        left: 8px;\n      }\n\n      ha-textfield {\n        flex-grow: 1;\n      }\n\n      .divider {\n        height: 1px;\n        background-color: var(--divider-color);\n        margin: 10px 0;\n      }\n\n      .clearall {\n        cursor: pointer;\n      }\n\n      .todoList {\n        display: block;\n        padding: 8px;\n      }\n\n      .warning {\n        color: var(--error-color);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-todo-list-card\": HuiTodoListCard;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}