{"ast":null,"code":"class StorageClass {\n  constructor(storage = window.localStorage) {\n    this.storage = void 0;\n    this._storage = {};\n    this._listeners = {};\n    this.storage = storage;\n    if (storage !== window.localStorage) {\n      // storage events only work for localStorage\n      return;\n    }\n    window.addEventListener(\"storage\", ev => {\n      if (ev.key && this.hasKey(ev.key)) {\n        this._storage[ev.key] = ev.newValue ? JSON.parse(ev.newValue) : ev.newValue;\n        if (this._listeners[ev.key]) {\n          this._listeners[ev.key].forEach(listener => listener(ev.oldValue ? JSON.parse(ev.oldValue) : ev.oldValue, this._storage[ev.key]));\n        }\n      }\n    });\n  }\n  addFromStorage(storageKey) {\n    if (!this._storage[storageKey]) {\n      const data = this.storage.getItem(storageKey);\n      if (data) {\n        this._storage[storageKey] = JSON.parse(data);\n      }\n    }\n  }\n  subscribeChanges(storageKey, callback) {\n    if (this._listeners[storageKey]) {\n      this._listeners[storageKey].push(callback);\n    } else {\n      this._listeners[storageKey] = [callback];\n    }\n    return () => {\n      this.unsubscribeChanges(storageKey, callback);\n    };\n  }\n  unsubscribeChanges(storageKey, callback) {\n    if (!(storageKey in this._listeners)) {\n      return;\n    }\n    const index = this._listeners[storageKey].indexOf(callback);\n    if (index !== -1) {\n      this._listeners[storageKey].splice(index, 1);\n    }\n  }\n  hasKey(storageKey) {\n    return storageKey in this._storage;\n  }\n  getValue(storageKey) {\n    return this._storage[storageKey];\n  }\n  setValue(storageKey, value) {\n    const oldValue = this._storage[storageKey];\n    this._storage[storageKey] = value;\n    try {\n      if (value === undefined) {\n        this.storage.removeItem(storageKey);\n      } else {\n        this.storage.setItem(storageKey, JSON.stringify(value));\n      }\n    } catch (err) {\n      // Safari in private mode doesn't allow localstorage\n    } finally {\n      if (this._listeners[storageKey]) {\n        this._listeners[storageKey].forEach(listener => listener(oldValue, value));\n      }\n    }\n  }\n}\nconst storages = {};\nexport const storage = options => clsElement => {\n  const storageName = options.storage || \"localStorage\";\n  let storageInstance;\n  if (storageName && storageName in storages) {\n    storageInstance = storages[storageName];\n  } else {\n    storageInstance = new StorageClass(window[storageName]);\n    storages[storageName] = storageInstance;\n  }\n  const key = String(clsElement.key);\n  const storageKey = options.key || String(clsElement.key);\n  const initVal = clsElement.initializer ? clsElement.initializer() : undefined;\n  storageInstance.addFromStorage(storageKey);\n  const subscribeChanges = options.subscribe !== false ? el => storageInstance.subscribeChanges(storageKey, (oldValue, _newValue) => {\n    el.requestUpdate(clsElement.key, oldValue);\n  }) : undefined;\n  const getValue = () => storageInstance.hasKey(storageKey) ? storageInstance.getValue(storageKey) : initVal;\n  const setValue = (el, value) => {\n    let oldValue;\n    if (options.state) {\n      oldValue = getValue();\n    }\n    storageInstance.setValue(storageKey, value);\n    if (options.state) {\n      el.requestUpdate(clsElement.key, oldValue);\n    }\n  };\n  return {\n    kind: \"method\",\n    placement: \"prototype\",\n    key: clsElement.key,\n    descriptor: {\n      set(value) {\n        setValue(this, value);\n      },\n      get() {\n        return getValue();\n      },\n      enumerable: true,\n      configurable: true\n    },\n    finisher(cls) {\n      if (options.state && options.subscribe) {\n        const connectedCallback = cls.prototype.connectedCallback;\n        const disconnectedCallback = cls.prototype.disconnectedCallback;\n        cls.prototype.connectedCallback = function () {\n          connectedCallback.call(this);\n          this[`__unbsubLocalStorage${key}`] = subscribeChanges === null || subscribeChanges === void 0 ? void 0 : subscribeChanges(this);\n        };\n        cls.prototype.disconnectedCallback = function () {\n          var _this;\n          disconnectedCallback.call(this);\n          (_this = this[`__unbsubLocalStorage${key}`]) === null || _this === void 0 || _this.call(this);\n          this[`__unbsubLocalStorage${key}`] = undefined;\n        };\n      }\n      if (options.state) {\n        cls.createProperty(clsElement.key, {\n          noAccessor: true,\n          ...options.stateOptions\n        });\n      }\n    }\n  };\n};","map":{"version":3,"names":["StorageClass","constructor","storage","window","localStorage","_storage","_listeners","addEventListener","ev","key","hasKey","newValue","JSON","parse","forEach","listener","oldValue","addFromStorage","storageKey","data","getItem","subscribeChanges","callback","push","unsubscribeChanges","index","indexOf","splice","getValue","setValue","value","undefined","removeItem","setItem","stringify","err","storages","options","clsElement","storageName","storageInstance","String","initVal","initializer","subscribe","el","_newValue","requestUpdate","state","kind","placement","descriptor","set","get","enumerable","configurable","finisher","cls","connectedCallback","prototype","disconnectedCallback","call","_this","createProperty","noAccessor","stateOptions"],"sources":["/Users/sercanardil/Desktop/frontend/src/common/decorators/storage.ts"],"sourcesContent":["import { UnsubscribeFunc } from \"home-assistant-js-websocket\";\nimport { ReactiveElement } from \"lit\";\nimport { InternalPropertyDeclaration } from \"lit/decorators\";\nimport type { ClassElement } from \"../../types\";\n\ntype Callback = (oldValue: any, newValue: any) => void;\n\nclass StorageClass {\n  constructor(storage = window.localStorage) {\n    this.storage = storage;\n    if (storage !== window.localStorage) {\n      // storage events only work for localStorage\n      return;\n    }\n    window.addEventListener(\"storage\", (ev: StorageEvent) => {\n      if (ev.key && this.hasKey(ev.key)) {\n        this._storage[ev.key] = ev.newValue\n          ? JSON.parse(ev.newValue)\n          : ev.newValue;\n        if (this._listeners[ev.key]) {\n          this._listeners[ev.key].forEach((listener) =>\n            listener(\n              ev.oldValue ? JSON.parse(ev.oldValue) : ev.oldValue,\n              this._storage[ev.key!]\n            )\n          );\n        }\n      }\n    });\n  }\n\n  public storage: globalThis.Storage;\n\n  private _storage: { [storageKey: string]: any } = {};\n\n  private _listeners: {\n    [storageKey: string]: Callback[];\n  } = {};\n\n  public addFromStorage(storageKey: any): void {\n    if (!this._storage[storageKey]) {\n      const data = this.storage.getItem(storageKey);\n      if (data) {\n        this._storage[storageKey] = JSON.parse(data);\n      }\n    }\n  }\n\n  public subscribeChanges(\n    storageKey: string,\n    callback: Callback\n  ): UnsubscribeFunc {\n    if (this._listeners[storageKey]) {\n      this._listeners[storageKey].push(callback);\n    } else {\n      this._listeners[storageKey] = [callback];\n    }\n    return () => {\n      this.unsubscribeChanges(storageKey, callback);\n    };\n  }\n\n  public unsubscribeChanges(storageKey: string, callback: Callback) {\n    if (!(storageKey in this._listeners)) {\n      return;\n    }\n    const index = this._listeners[storageKey].indexOf(callback);\n    if (index !== -1) {\n      this._listeners[storageKey].splice(index, 1);\n    }\n  }\n\n  public hasKey(storageKey: string): any {\n    return storageKey in this._storage;\n  }\n\n  public getValue(storageKey: string): any {\n    return this._storage[storageKey];\n  }\n\n  public setValue(storageKey: string, value: any): any {\n    const oldValue = this._storage[storageKey];\n    this._storage[storageKey] = value;\n    try {\n      if (value === undefined) {\n        this.storage.removeItem(storageKey);\n      } else {\n        this.storage.setItem(storageKey, JSON.stringify(value));\n      }\n    } catch (err: any) {\n      // Safari in private mode doesn't allow localstorage\n    } finally {\n      if (this._listeners[storageKey]) {\n        this._listeners[storageKey].forEach((listener) =>\n          listener(oldValue, value)\n        );\n      }\n    }\n  }\n}\n\nconst storages: Record<string, StorageClass> = {};\n\nexport const storage =\n  (options: {\n    key?: string;\n    storage?: \"localStorage\" | \"sessionStorage\";\n    subscribe?: boolean;\n    state?: boolean;\n    stateOptions?: InternalPropertyDeclaration;\n  }): any =>\n  (clsElement: ClassElement) => {\n    const storageName = options.storage || \"localStorage\";\n\n    let storageInstance: StorageClass;\n    if (storageName && storageName in storages) {\n      storageInstance = storages[storageName];\n    } else {\n      storageInstance = new StorageClass(window[storageName]);\n      storages[storageName] = storageInstance;\n    }\n\n    const key = String(clsElement.key);\n    const storageKey = options.key || String(clsElement.key);\n    const initVal = clsElement.initializer\n      ? clsElement.initializer()\n      : undefined;\n\n    storageInstance.addFromStorage(storageKey);\n\n    const subscribeChanges =\n      options.subscribe !== false\n        ? (el: ReactiveElement): UnsubscribeFunc =>\n            storageInstance.subscribeChanges(\n              storageKey!,\n              (oldValue, _newValue) => {\n                el.requestUpdate(clsElement.key, oldValue);\n              }\n            )\n        : undefined;\n\n    const getValue = (): any =>\n      storageInstance.hasKey(storageKey!)\n        ? storageInstance.getValue(storageKey!)\n        : initVal;\n\n    const setValue = (el: ReactiveElement, value: any) => {\n      let oldValue: unknown | undefined;\n      if (options.state) {\n        oldValue = getValue();\n      }\n      storageInstance.setValue(storageKey!, value);\n      if (options.state) {\n        el.requestUpdate(clsElement.key, oldValue);\n      }\n    };\n\n    return {\n      kind: \"method\",\n      placement: \"prototype\",\n      key: clsElement.key,\n      descriptor: {\n        set(this: ReactiveElement, value: unknown) {\n          setValue(this, value);\n        },\n        get() {\n          return getValue();\n        },\n        enumerable: true,\n        configurable: true,\n      },\n      finisher(cls: typeof ReactiveElement) {\n        if (options.state && options.subscribe) {\n          const connectedCallback = cls.prototype.connectedCallback;\n          const disconnectedCallback = cls.prototype.disconnectedCallback;\n          cls.prototype.connectedCallback = function () {\n            connectedCallback.call(this);\n            this[`__unbsubLocalStorage${key}`] = subscribeChanges?.(this);\n          };\n          cls.prototype.disconnectedCallback = function () {\n            disconnectedCallback.call(this);\n            this[`__unbsubLocalStorage${key}`]?.();\n            this[`__unbsubLocalStorage${key}`] = undefined;\n          };\n        }\n        if (options.state) {\n          cls.createProperty(clsElement.key, {\n            noAccessor: true,\n            ...options.stateOptions,\n          });\n        }\n      },\n    };\n  };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}