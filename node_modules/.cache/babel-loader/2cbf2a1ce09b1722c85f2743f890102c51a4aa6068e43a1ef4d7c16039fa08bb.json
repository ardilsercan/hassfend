{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport { css, html, LitElement } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { fireEvent } from \"../../../../../common/dom/fire_event\";\nimport \"../../../../../components/ha-textfield\";\nimport { haStyle } from \"../../../../../resources/styles\";\nimport \"../ha-automation-action\";\nexport let HaIfAction = _decorate([customElement(\"ha-automation-action-if\")], function (_initialize, _LitElement) {\n  class HaIfAction extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaIfAction,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"disabled\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"path\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"action\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_showElse\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"defaultConfig\",\n      value: function defaultConfig() {\n        return {\n          if: [],\n          then: []\n        };\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var _this$path, _this$path2, _this$path3;\n        const action = this.action;\n        return html`\n      <h3>\n        ${this.hass.localize(\"ui.panel.config.automation.editor.actions.type.if.if\")}*:\n      </h3>\n      <ha-automation-condition\n        .path=${[...((_this$path = this.path) !== null && _this$path !== void 0 ? _this$path : []), \"if\"]}\n        .conditions=${action.if}\n        .disabled=${this.disabled}\n        @value-changed=${this._ifChanged}\n        .hass=${this.hass}\n      ></ha-automation-condition>\n\n      <h3>\n        ${this.hass.localize(\"ui.panel.config.automation.editor.actions.type.if.then\")}*:\n      </h3>\n      <ha-automation-action\n        .path=${[...((_this$path2 = this.path) !== null && _this$path2 !== void 0 ? _this$path2 : []), \"then\"]}\n        .actions=${action.then}\n        .disabled=${this.disabled}\n        @value-changed=${this._thenChanged}\n        .hass=${this.hass}\n      ></ha-automation-action>\n      ${this._showElse || action.else ? html`\n            <h3>\n              ${this.hass.localize(\"ui.panel.config.automation.editor.actions.type.if.else\")}:\n            </h3>\n            <ha-automation-action\n              .path=${[...((_this$path3 = this.path) !== null && _this$path3 !== void 0 ? _this$path3 : []), \"else\"]}\n              .actions=${action.else || []}\n              .disabled=${this.disabled}\n              @value-changed=${this._elseChanged}\n              .hass=${this.hass}\n            ></ha-automation-action>\n          ` : html` <div class=\"link-button-row\">\n            <button\n              class=\"link\"\n              @click=${this._addElse}\n              .disabled=${this.disabled}\n            >\n              ${this.hass.localize(\"ui.panel.config.automation.editor.actions.type.if.add_else\")}\n            </button>\n          </div>`}\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_addElse\",\n      value: function _addElse() {\n        this._showElse = true;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_ifChanged\",\n      value: function _ifChanged(ev) {\n        ev.stopPropagation();\n        const value = ev.detail.value;\n        fireEvent(this, \"value-changed\", {\n          value: {\n            ...this.action,\n            if: value\n          }\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_thenChanged\",\n      value: function _thenChanged(ev) {\n        ev.stopPropagation();\n        const value = ev.detail.value;\n        fireEvent(this, \"value-changed\", {\n          value: {\n            ...this.action,\n            then: value\n          }\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_elseChanged\",\n      value: function _elseChanged(ev) {\n        ev.stopPropagation();\n        this._showElse = true;\n        const elseAction = ev.detail.value;\n        const newValue = {\n          ...this.action,\n          else: elseAction\n        };\n        if (elseAction.length === 0) {\n          delete newValue.else;\n        }\n        fireEvent(this, \"value-changed\", {\n          value: newValue\n        });\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [haStyle, css`\n        .link-button-row {\n          padding: 14px;\n        }\n      `];\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","customElement","property","state","fireEvent","haStyle","HaIfAction","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","type","Boolean","static","defaultConfig","if","then","render","_this$path","_this$path2","_this$path3","action","hass","localize","path","disabled","_ifChanged","_thenChanged","_showElse","else","_elseChanged","_addElse","ev","stopPropagation","detail","elseAction","newValue","length","styles"],"sources":["/Users/sercanardil/Desktop/frontend/src/panels/config/automation/action/types/ha-automation-action-if.ts"],"sourcesContent":["import { css, CSSResultGroup, html, LitElement } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { fireEvent } from \"../../../../../common/dom/fire_event\";\nimport \"../../../../../components/ha-textfield\";\nimport { Action, IfAction } from \"../../../../../data/script\";\nimport { haStyle } from \"../../../../../resources/styles\";\nimport type { HomeAssistant, ItemPath } from \"../../../../../types\";\nimport type { Condition } from \"../../../../lovelace/common/validate-condition\";\nimport \"../ha-automation-action\";\nimport type { ActionElement } from \"../ha-automation-action-row\";\n\n@customElement(\"ha-automation-action-if\")\nexport class HaIfAction extends LitElement implements ActionElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @property({ attribute: false }) public path?: ItemPath;\n\n  @property({ attribute: false }) public action!: IfAction;\n\n  @state() private _showElse = false;\n\n  public static get defaultConfig() {\n    return {\n      if: [],\n      then: [],\n    };\n  }\n\n  protected render() {\n    const action = this.action;\n\n    return html`\n      <h3>\n        ${this.hass.localize(\n          \"ui.panel.config.automation.editor.actions.type.if.if\"\n        )}*:\n      </h3>\n      <ha-automation-condition\n        .path=${[...(this.path ?? []), \"if\"]}\n        .conditions=${action.if}\n        .disabled=${this.disabled}\n        @value-changed=${this._ifChanged}\n        .hass=${this.hass}\n      ></ha-automation-condition>\n\n      <h3>\n        ${this.hass.localize(\n          \"ui.panel.config.automation.editor.actions.type.if.then\"\n        )}*:\n      </h3>\n      <ha-automation-action\n        .path=${[...(this.path ?? []), \"then\"]}\n        .actions=${action.then}\n        .disabled=${this.disabled}\n        @value-changed=${this._thenChanged}\n        .hass=${this.hass}\n      ></ha-automation-action>\n      ${this._showElse || action.else\n        ? html`\n            <h3>\n              ${this.hass.localize(\n                \"ui.panel.config.automation.editor.actions.type.if.else\"\n              )}:\n            </h3>\n            <ha-automation-action\n              .path=${[...(this.path ?? []), \"else\"]}\n              .actions=${action.else || []}\n              .disabled=${this.disabled}\n              @value-changed=${this._elseChanged}\n              .hass=${this.hass}\n            ></ha-automation-action>\n          `\n        : html` <div class=\"link-button-row\">\n            <button\n              class=\"link\"\n              @click=${this._addElse}\n              .disabled=${this.disabled}\n            >\n              ${this.hass.localize(\n                \"ui.panel.config.automation.editor.actions.type.if.add_else\"\n              )}\n            </button>\n          </div>`}\n    `;\n  }\n\n  private _addElse() {\n    this._showElse = true;\n  }\n\n  private _ifChanged(ev: CustomEvent) {\n    ev.stopPropagation();\n    const value = ev.detail.value as Condition[];\n    fireEvent(this, \"value-changed\", {\n      value: {\n        ...this.action,\n        if: value,\n      },\n    });\n  }\n\n  private _thenChanged(ev: CustomEvent) {\n    ev.stopPropagation();\n    const value = ev.detail.value as Action[];\n    fireEvent(this, \"value-changed\", {\n      value: {\n        ...this.action,\n        then: value,\n      },\n    });\n  }\n\n  private _elseChanged(ev: CustomEvent) {\n    ev.stopPropagation();\n    this._showElse = true;\n    const elseAction = ev.detail.value as Action[];\n    const newValue: IfAction = {\n      ...this.action,\n      else: elseAction,\n    };\n    if (elseAction.length === 0) {\n      delete newValue.else;\n    }\n    fireEvent(this, \"value-changed\", { value: newValue });\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyle,\n      css`\n        .link-button-row {\n          padding: 14px;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-automation-action-if\": HaIfAction;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}