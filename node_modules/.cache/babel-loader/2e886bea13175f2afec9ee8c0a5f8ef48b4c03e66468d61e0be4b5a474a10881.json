{"ast":null,"code":"var _typeof = require(\"@babel/runtime/helpers/typeof\").default;\nrequire(\"core-js/modules/es.array.push.js\");\nrequire(\"core-js/modules/es.object.to-string.js\");\nrequire(\"core-js/modules/es.regexp.constructor.js\");\nrequire(\"core-js/modules/es.regexp.dot-all.js\");\nrequire(\"core-js/modules/es.regexp.exec.js\");\nrequire(\"core-js/modules/es.regexp.sticky.js\");\nrequire(\"core-js/modules/es.regexp.test.js\");\nrequire(\"core-js/modules/es.regexp.to-string.js\");\n(function (root, factory) {\n  'use strict';\n\n  // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n  /* istanbul ignore next */\n  if (typeof define === 'function' && define.amd) {\n    define('stack-generator', ['stackframe'], factory);\n  } else if ((typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) === 'object') {\n    module.exports = factory(require('stackframe'));\n  } else {\n    root.StackGenerator = factory(root.StackFrame);\n  }\n})(this, function (StackFrame) {\n  return {\n    backtrace: function StackGenerator$$backtrace(opts) {\n      var stack = [];\n      var maxStackSize = 10;\n      if (_typeof(opts) === 'object' && typeof opts.maxStackSize === 'number') {\n        maxStackSize = opts.maxStackSize;\n      }\n      var curr = arguments.callee;\n      while (curr && stack.length < maxStackSize && curr['arguments']) {\n        // Allow V8 optimizations\n        var args = new Array(curr['arguments'].length);\n        for (var i = 0; i < args.length; ++i) {\n          args[i] = curr['arguments'][i];\n        }\n        if (/function(?:\\s+([\\w$]+))+\\s*\\(/.test(curr.toString())) {\n          stack.push(new StackFrame({\n            functionName: RegExp.$1 || undefined,\n            args: args\n          }));\n        } else {\n          stack.push(new StackFrame({\n            args: args\n          }));\n        }\n        try {\n          curr = curr.caller;\n        } catch (e) {\n          break;\n        }\n      }\n      return stack;\n    }\n  };\n});","map":{"version":3,"names":["root","factory","define","amd","exports","_typeof","module","require","StackGenerator","StackFrame","backtrace","StackGenerator$$backtrace","opts","stack","maxStackSize","curr","arguments","callee","length","args","Array","i","test","toString","push","functionName","RegExp","$1","undefined","caller","e"],"sources":["/Users/sercanardil/Desktop/frontend/node_modules/stack-generator/stack-generator.js"],"sourcesContent":["(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('stack-generator', ['stackframe'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('stackframe'));\n    } else {\n        root.StackGenerator = factory(root.StackFrame);\n    }\n}(this, function(StackFrame) {\n    return {\n        backtrace: function StackGenerator$$backtrace(opts) {\n            var stack = [];\n            var maxStackSize = 10;\n\n            if (typeof opts === 'object' && typeof opts.maxStackSize === 'number') {\n                maxStackSize = opts.maxStackSize;\n            }\n\n            var curr = arguments.callee;\n            while (curr && stack.length < maxStackSize && curr['arguments']) {\n                // Allow V8 optimizations\n                var args = new Array(curr['arguments'].length);\n                for (var i = 0; i < args.length; ++i) {\n                    args[i] = curr['arguments'][i];\n                }\n                if (/function(?:\\s+([\\w$]+))+\\s*\\(/.test(curr.toString())) {\n                    stack.push(new StackFrame({functionName: RegExp.$1 || undefined, args: args}));\n                } else {\n                    stack.push(new StackFrame({args: args}));\n                }\n\n                try {\n                    curr = curr.caller;\n                } catch (e) {\n                    break;\n                }\n            }\n            return stack;\n        }\n    };\n}));\n"],"mappings":";;;;;;;;;AAAC,WAASA,IAAI,EAAEC,OAAO,EAAE;EACrB,YAAY;;EACZ;;EAEA;EACA,IAAI,OAAOC,MAAM,KAAK,UAAU,IAAIA,MAAM,CAACC,GAAG,EAAE;IAC5CD,MAAM,CAAC,iBAAiB,EAAE,CAAC,YAAY,CAAC,EAAED,OAAO,CAAC;EACtD,CAAC,MAAM,IAAI,QAAOG,OAAO,iCAAAC,OAAA,CAAPD,OAAO,OAAK,QAAQ,EAAE;IACpCE,MAAM,CAACF,OAAO,GAAGH,OAAO,CAACM,OAAO,CAAC,YAAY,CAAC,CAAC;EACnD,CAAC,MAAM;IACHP,IAAI,CAACQ,cAAc,GAAGP,OAAO,CAACD,IAAI,CAACS,UAAU,CAAC;EAClD;AACJ,CAAC,EAAC,IAAI,EAAE,UAASA,UAAU,EAAE;EACzB,OAAO;IACHC,SAAS,EAAE,SAASC,yBAAyBA,CAACC,IAAI,EAAE;MAChD,IAAIC,KAAK,GAAG,EAAE;MACd,IAAIC,YAAY,GAAG,EAAE;MAErB,IAAIT,OAAA,CAAOO,IAAI,MAAK,QAAQ,IAAI,OAAOA,IAAI,CAACE,YAAY,KAAK,QAAQ,EAAE;QACnEA,YAAY,GAAGF,IAAI,CAACE,YAAY;MACpC;MAEA,IAAIC,IAAI,GAAGC,SAAS,CAACC,MAAM;MAC3B,OAAOF,IAAI,IAAIF,KAAK,CAACK,MAAM,GAAGJ,YAAY,IAAIC,IAAI,CAAC,WAAW,CAAC,EAAE;QAC7D;QACA,IAAII,IAAI,GAAG,IAAIC,KAAK,CAACL,IAAI,CAAC,WAAW,CAAC,CAACG,MAAM,CAAC;QAC9C,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,IAAI,CAACD,MAAM,EAAE,EAAEG,CAAC,EAAE;UAClCF,IAAI,CAACE,CAAC,CAAC,GAAGN,IAAI,CAAC,WAAW,CAAC,CAACM,CAAC,CAAC;QAClC;QACA,IAAI,+BAA+B,CAACC,IAAI,CAACP,IAAI,CAACQ,QAAQ,CAAC,CAAC,CAAC,EAAE;UACvDV,KAAK,CAACW,IAAI,CAAC,IAAIf,UAAU,CAAC;YAACgB,YAAY,EAAEC,MAAM,CAACC,EAAE,IAAIC,SAAS;YAAET,IAAI,EAAEA;UAAI,CAAC,CAAC,CAAC;QAClF,CAAC,MAAM;UACHN,KAAK,CAACW,IAAI,CAAC,IAAIf,UAAU,CAAC;YAACU,IAAI,EAAEA;UAAI,CAAC,CAAC,CAAC;QAC5C;QAEA,IAAI;UACAJ,IAAI,GAAGA,IAAI,CAACc,MAAM;QACtB,CAAC,CAAC,OAAOC,CAAC,EAAE;UACR;QACJ;MACJ;MACA,OAAOjB,KAAK;IAChB;EACJ,CAAC;AACL,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}