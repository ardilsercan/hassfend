{"ast":null,"code":"import _createForOfIteratorHelper from \"@babel/runtime/helpers/createForOfIteratorHelper\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport { StructError } from \"superstruct\";\nexport var handleStructError = function handleStructError(hass, err) {\n  if (!(err instanceof StructError)) {\n    return {\n      warnings: [err.message],\n      errors: undefined\n    };\n  }\n  var errors = [];\n  var warnings = [];\n  var _iterator = _createForOfIteratorHelper(err.failures()),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var failure = _step.value;\n      if (failure.value === undefined) {\n        errors.push(hass.localize(\"ui.errors.config.key_missing\", {\n          key: failure.path.join(\".\")\n        }));\n      } else if (failure.type === \"never\") {\n        warnings.push(hass.localize(\"ui.errors.config.key_not_expected\", {\n          key: failure.path.join(\".\")\n        }));\n      } else if (failure.type === \"union\") {\n        continue;\n      } else if (failure.type === \"enums\") {\n        warnings.push(hass.localize(\"ui.errors.config.key_wrong_type\", {\n          key: failure.path.join(\".\"),\n          type_correct: failure.message.replace(\"Expected \", \"\").split(\", \")[0],\n          type_wrong: JSON.stringify(failure.value)\n        }));\n      } else {\n        warnings.push(hass.localize(\"ui.errors.config.key_wrong_type\", {\n          key: failure.path.join(\".\"),\n          type_correct: failure.refinement || failure.type,\n          type_wrong: JSON.stringify(failure.value)\n        }));\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return {\n    warnings: warnings,\n    errors: errors\n  };\n};","map":{"version":3,"names":["StructError","handleStructError","hass","err","warnings","message","errors","undefined","_iterator","_createForOfIteratorHelper","failures","_step","s","n","done","failure","value","push","localize","key","path","join","type","type_correct","replace","split","type_wrong","JSON","stringify","refinement","e","f"],"sources":["/workspaces/frontend/src/common/structs/handle-errors.ts"],"sourcesContent":["import { StructError } from \"superstruct\";\nimport type { HomeAssistant } from \"../../types\";\n\nexport const handleStructError = (\n  hass: HomeAssistant,\n  err: Error\n): { warnings: string[]; errors?: string[] } => {\n  if (!(err instanceof StructError)) {\n    return { warnings: [err.message], errors: undefined };\n  }\n  const errors: string[] = [];\n  const warnings: string[] = [];\n  for (const failure of err.failures()) {\n    if (failure.value === undefined) {\n      errors.push(\n        hass.localize(\"ui.errors.config.key_missing\", {\n          key: failure.path.join(\".\"),\n        })\n      );\n    } else if (failure.type === \"never\") {\n      warnings.push(\n        hass.localize(\"ui.errors.config.key_not_expected\", {\n          key: failure.path.join(\".\"),\n        })\n      );\n    } else if (failure.type === \"union\") {\n      continue;\n    } else if (failure.type === \"enums\") {\n      warnings.push(\n        hass.localize(\"ui.errors.config.key_wrong_type\", {\n          key: failure.path.join(\".\"),\n          type_correct: failure.message.replace(\"Expected \", \"\").split(\", \")[0],\n          type_wrong: JSON.stringify(failure.value),\n        })\n      );\n    } else {\n      warnings.push(\n        hass.localize(\"ui.errors.config.key_wrong_type\", {\n          key: failure.path.join(\".\"),\n          type_correct: failure.refinement || failure.type,\n          type_wrong: JSON.stringify(failure.value),\n        })\n      );\n    }\n  }\n  return { warnings, errors };\n};\n"],"mappings":";;;;;;AAAA,SAASA,WAAW,QAAQ,aAAa;AAGzC,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAC5BC,IAAmB,EACnBC,GAAU,EACoC;EAC9C,IAAI,EAAEA,GAAG,YAAYH,WAAW,CAAC,EAAE;IACjC,OAAO;MAAEI,QAAQ,EAAE,CAACD,GAAG,CAACE,OAAO,CAAC;MAAEC,MAAM,EAAEC;IAAU,CAAC;EACvD;EACA,IAAMD,MAAgB,GAAG,EAAE;EAC3B,IAAMF,QAAkB,GAAG,EAAE;EAAC,IAAAI,SAAA,GAAAC,0BAAA,CACRN,GAAG,CAACO,QAAQ,CAAC,CAAC;IAAAC,KAAA;EAAA;IAApC,KAAAH,SAAA,CAAAI,CAAA,MAAAD,KAAA,GAAAH,SAAA,CAAAK,CAAA,IAAAC,IAAA,GAAsC;MAAA,IAA3BC,OAAO,GAAAJ,KAAA,CAAAK,KAAA;MAChB,IAAID,OAAO,CAACC,KAAK,KAAKT,SAAS,EAAE;QAC/BD,MAAM,CAACW,IAAI,CACTf,IAAI,CAACgB,QAAQ,CAAC,8BAA8B,EAAE;UAC5CC,GAAG,EAAEJ,OAAO,CAACK,IAAI,CAACC,IAAI,CAAC,GAAG;QAC5B,CAAC,CACH,CAAC;MACH,CAAC,MAAM,IAAIN,OAAO,CAACO,IAAI,KAAK,OAAO,EAAE;QACnClB,QAAQ,CAACa,IAAI,CACXf,IAAI,CAACgB,QAAQ,CAAC,mCAAmC,EAAE;UACjDC,GAAG,EAAEJ,OAAO,CAACK,IAAI,CAACC,IAAI,CAAC,GAAG;QAC5B,CAAC,CACH,CAAC;MACH,CAAC,MAAM,IAAIN,OAAO,CAACO,IAAI,KAAK,OAAO,EAAE;QACnC;MACF,CAAC,MAAM,IAAIP,OAAO,CAACO,IAAI,KAAK,OAAO,EAAE;QACnClB,QAAQ,CAACa,IAAI,CACXf,IAAI,CAACgB,QAAQ,CAAC,iCAAiC,EAAE;UAC/CC,GAAG,EAAEJ,OAAO,CAACK,IAAI,CAACC,IAAI,CAAC,GAAG,CAAC;UAC3BE,YAAY,EAAER,OAAO,CAACV,OAAO,CAACmB,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,CAACC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;UACrEC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACb,OAAO,CAACC,KAAK;QAC1C,CAAC,CACH,CAAC;MACH,CAAC,MAAM;QACLZ,QAAQ,CAACa,IAAI,CACXf,IAAI,CAACgB,QAAQ,CAAC,iCAAiC,EAAE;UAC/CC,GAAG,EAAEJ,OAAO,CAACK,IAAI,CAACC,IAAI,CAAC,GAAG,CAAC;UAC3BE,YAAY,EAAER,OAAO,CAACc,UAAU,IAAId,OAAO,CAACO,IAAI;UAChDI,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACb,OAAO,CAACC,KAAK;QAC1C,CAAC,CACH,CAAC;MACH;IACF;EAAC,SAAAb,GAAA;IAAAK,SAAA,CAAAsB,CAAA,CAAA3B,GAAA;EAAA;IAAAK,SAAA,CAAAuB,CAAA;EAAA;EACD,OAAO;IAAE3B,QAAQ,EAARA,QAAQ;IAAEE,MAAM,EAANA;EAAO,CAAC;AAC7B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}