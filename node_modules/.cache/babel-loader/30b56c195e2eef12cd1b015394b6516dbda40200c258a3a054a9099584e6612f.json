{"ast":null,"code":"import { html } from \"lit\";\nimport { domainToName } from \"../../data/integration\";\nimport { createOptionsFlow, deleteOptionsFlow, fetchOptionsFlow, handleOptionsFlowStep } from \"../../data/options_flow\";\nimport { loadDataEntryFlowDialog, showFlowDialog } from \"./show-dialog-data-entry-flow\";\nexport const loadOptionsFlowDialog = loadDataEntryFlowDialog;\nexport const showOptionsFlowDialog = (element, configEntry, dialogParams) => showFlowDialog(element, {\n  startFlowHandler: configEntry.entry_id,\n  domain: configEntry.domain,\n  ...dialogParams\n}, {\n  flowType: \"options_flow\",\n  loadDevicesAndAreas: false,\n  createFlow: async (hass, handler) => {\n    const [step] = await Promise.all([createOptionsFlow(hass, handler), hass.loadFragmentTranslation(\"config\"), hass.loadBackendTranslation(\"options\", configEntry.domain), hass.loadBackendTranslation(\"selector\", configEntry.domain)]);\n    return step;\n  },\n  fetchFlow: async (hass, flowId) => {\n    const [step] = await Promise.all([fetchOptionsFlow(hass, flowId), hass.loadFragmentTranslation(\"config\"), hass.loadBackendTranslation(\"options\", configEntry.domain), hass.loadBackendTranslation(\"selector\", configEntry.domain)]);\n    return step;\n  },\n  handleFlowStep: handleOptionsFlowStep,\n  deleteFlow: deleteOptionsFlow,\n  renderAbortDescription(hass, step) {\n    const description = hass.localize(`component.${configEntry.domain}.options.abort.${step.reason}`, step.description_placeholders);\n    return description ? html`\n              <ha-markdown\n                breaks\n                allowsvg\n                .content=${description}\n              ></ha-markdown>\n            ` : \"\";\n  },\n  renderShowFormStepHeader(hass, step) {\n    return hass.localize(`component.${configEntry.domain}.options.step.${step.step_id}.title`, step.description_placeholders) || hass.localize(`ui.dialogs.options_flow.form.header`);\n  },\n  renderShowFormStepDescription(hass, step) {\n    const description = hass.localize(`component.${configEntry.domain}.options.step.${step.step_id}.description`, step.description_placeholders);\n    return description ? html`\n              <ha-markdown\n                allowsvg\n                breaks\n                .content=${description}\n              ></ha-markdown>\n            ` : \"\";\n  },\n  renderShowFormStepFieldLabel(hass, step, field) {\n    return hass.localize(`component.${configEntry.domain}.options.step.${step.step_id}.data.${field.name}`);\n  },\n  renderShowFormStepFieldHelper(hass, step, field) {\n    const description = hass.localize(`component.${configEntry.domain}.options.step.${step.step_id}.data_description.${field.name}`, step.description_placeholders);\n    return description ? html`<ha-markdown breaks .content=${description}></ha-markdown>` : \"\";\n  },\n  renderShowFormStepFieldError(hass, step, error) {\n    return hass.localize(`component.${configEntry.domain}.options.error.${error}`, step.description_placeholders) || error;\n  },\n  renderShowFormStepFieldLocalizeValue(hass, _step, key) {\n    return hass.localize(`component.${configEntry.domain}.selector.${key}`);\n  },\n  renderShowFormStepSubmitButton(hass, step) {\n    return hass.localize(`component.${configEntry.domain}.options.step.${step.step_id}.submit`) || hass.localize(`ui.panel.config.integrations.config_flow.${step.last_step === false ? \"next\" : \"submit\"}`);\n  },\n  renderExternalStepHeader(_hass, _step) {\n    return \"\";\n  },\n  renderExternalStepDescription(_hass, _step) {\n    return \"\";\n  },\n  renderCreateEntryDescription(hass, _step) {\n    return html`\n          <p>${hass.localize(`ui.dialogs.options_flow.success.description`)}</p>\n        `;\n  },\n  renderShowFormProgressHeader(hass, step) {\n    return hass.localize(`component.${configEntry.domain}.options.step.${step.step_id}.title`) || hass.localize(`component.${configEntry.domain}.title`);\n  },\n  renderShowFormProgressDescription(hass, step) {\n    const description = hass.localize(`component.${configEntry.domain}.options.progress.${step.progress_action}`, step.description_placeholders);\n    return description ? html`\n              <ha-markdown\n                allowsvg\n                breaks\n                .content=${description}\n              ></ha-markdown>\n            ` : \"\";\n  },\n  renderMenuHeader(hass, step) {\n    return hass.localize(`component.${configEntry.domain}.options.step.${step.step_id}.title`) || hass.localize(`component.${configEntry.domain}.title`);\n  },\n  renderMenuDescription(hass, step) {\n    const description = hass.localize(`component.${configEntry.domain}.options.step.${step.step_id}.description`, step.description_placeholders);\n    return description ? html`\n              <ha-markdown\n                allowsvg\n                breaks\n                .content=${description}\n              ></ha-markdown>\n            ` : \"\";\n  },\n  renderMenuOption(hass, step, option) {\n    return hass.localize(`component.${configEntry.domain}.options.step.${step.step_id}.menu_options.${option}`, step.description_placeholders);\n  },\n  renderLoadingDescription(hass, reason) {\n    return hass.localize(`component.${configEntry.domain}.options.loading`) || (reason === \"loading_flow\" || reason === \"loading_step\" ? hass.localize(`ui.dialogs.options_flow.loading.${reason}`, {\n      integration: domainToName(hass.localize, configEntry.domain)\n    }) : \"\");\n  }\n});","map":{"version":3,"names":["html","domainToName","createOptionsFlow","deleteOptionsFlow","fetchOptionsFlow","handleOptionsFlowStep","loadDataEntryFlowDialog","showFlowDialog","loadOptionsFlowDialog","showOptionsFlowDialog","element","configEntry","dialogParams","startFlowHandler","entry_id","domain","flowType","loadDevicesAndAreas","createFlow","hass","handler","step","Promise","all","loadFragmentTranslation","loadBackendTranslation","fetchFlow","flowId","handleFlowStep","deleteFlow","renderAbortDescription","description","localize","reason","description_placeholders","renderShowFormStepHeader","step_id","renderShowFormStepDescription","renderShowFormStepFieldLabel","field","name","renderShowFormStepFieldHelper","renderShowFormStepFieldError","error","renderShowFormStepFieldLocalizeValue","_step","key","renderShowFormStepSubmitButton","last_step","renderExternalStepHeader","_hass","renderExternalStepDescription","renderCreateEntryDescription","renderShowFormProgressHeader","renderShowFormProgressDescription","progress_action","renderMenuHeader","renderMenuDescription","renderMenuOption","option","renderLoadingDescription","integration"],"sources":["/workspaces/frontend/src/dialogs/config-flow/show-dialog-options-flow.ts"],"sourcesContent":["import { html } from \"lit\";\nimport { ConfigEntry } from \"../../data/config_entries\";\nimport { domainToName } from \"../../data/integration\";\nimport {\n  createOptionsFlow,\n  deleteOptionsFlow,\n  fetchOptionsFlow,\n  handleOptionsFlowStep,\n} from \"../../data/options_flow\";\nimport {\n  DataEntryFlowDialogParams,\n  loadDataEntryFlowDialog,\n  showFlowDialog,\n} from \"./show-dialog-data-entry-flow\";\n\nexport const loadOptionsFlowDialog = loadDataEntryFlowDialog;\n\nexport const showOptionsFlowDialog = (\n  element: HTMLElement,\n  configEntry: ConfigEntry,\n  dialogParams?: Omit<DataEntryFlowDialogParams, \"flowConfig\">\n): void =>\n  showFlowDialog(\n    element,\n    {\n      startFlowHandler: configEntry.entry_id,\n      domain: configEntry.domain,\n      ...dialogParams,\n    },\n    {\n      flowType: \"options_flow\",\n      loadDevicesAndAreas: false,\n      createFlow: async (hass, handler) => {\n        const [step] = await Promise.all([\n          createOptionsFlow(hass, handler),\n          hass.loadFragmentTranslation(\"config\"),\n          hass.loadBackendTranslation(\"options\", configEntry.domain),\n          hass.loadBackendTranslation(\"selector\", configEntry.domain),\n        ]);\n        return step;\n      },\n      fetchFlow: async (hass, flowId) => {\n        const [step] = await Promise.all([\n          fetchOptionsFlow(hass, flowId),\n          hass.loadFragmentTranslation(\"config\"),\n          hass.loadBackendTranslation(\"options\", configEntry.domain),\n          hass.loadBackendTranslation(\"selector\", configEntry.domain),\n        ]);\n        return step;\n      },\n      handleFlowStep: handleOptionsFlowStep,\n      deleteFlow: deleteOptionsFlow,\n\n      renderAbortDescription(hass, step) {\n        const description = hass.localize(\n          `component.${configEntry.domain}.options.abort.${step.reason}`,\n          step.description_placeholders\n        );\n\n        return description\n          ? html`\n              <ha-markdown\n                breaks\n                allowsvg\n                .content=${description}\n              ></ha-markdown>\n            `\n          : \"\";\n      },\n\n      renderShowFormStepHeader(hass, step) {\n        return (\n          hass.localize(\n            `component.${configEntry.domain}.options.step.${step.step_id}.title`,\n            step.description_placeholders\n          ) || hass.localize(`ui.dialogs.options_flow.form.header`)\n        );\n      },\n\n      renderShowFormStepDescription(hass, step) {\n        const description = hass.localize(\n          `component.${configEntry.domain}.options.step.${step.step_id}.description`,\n          step.description_placeholders\n        );\n        return description\n          ? html`\n              <ha-markdown\n                allowsvg\n                breaks\n                .content=${description}\n              ></ha-markdown>\n            `\n          : \"\";\n      },\n\n      renderShowFormStepFieldLabel(hass, step, field) {\n        return hass.localize(\n          `component.${configEntry.domain}.options.step.${step.step_id}.data.${field.name}`\n        );\n      },\n\n      renderShowFormStepFieldHelper(hass, step, field) {\n        const description = hass.localize(\n          `component.${configEntry.domain}.options.step.${step.step_id}.data_description.${field.name}`,\n          step.description_placeholders\n        );\n        return description\n          ? html`<ha-markdown breaks .content=${description}></ha-markdown>`\n          : \"\";\n      },\n\n      renderShowFormStepFieldError(hass, step, error) {\n        return (\n          hass.localize(\n            `component.${configEntry.domain}.options.error.${error}`,\n            step.description_placeholders\n          ) || error\n        );\n      },\n\n      renderShowFormStepFieldLocalizeValue(hass, _step, key) {\n        return hass.localize(`component.${configEntry.domain}.selector.${key}`);\n      },\n\n      renderShowFormStepSubmitButton(hass, step) {\n        return (\n          hass.localize(\n            `component.${configEntry.domain}.options.step.${step.step_id}.submit`\n          ) ||\n          hass.localize(\n            `ui.panel.config.integrations.config_flow.${\n              step.last_step === false ? \"next\" : \"submit\"\n            }`\n          )\n        );\n      },\n\n      renderExternalStepHeader(_hass, _step) {\n        return \"\";\n      },\n\n      renderExternalStepDescription(_hass, _step) {\n        return \"\";\n      },\n\n      renderCreateEntryDescription(hass, _step) {\n        return html`\n          <p>${hass.localize(`ui.dialogs.options_flow.success.description`)}</p>\n        `;\n      },\n\n      renderShowFormProgressHeader(hass, step) {\n        return (\n          hass.localize(\n            `component.${configEntry.domain}.options.step.${step.step_id}.title`\n          ) || hass.localize(`component.${configEntry.domain}.title`)\n        );\n      },\n\n      renderShowFormProgressDescription(hass, step) {\n        const description = hass.localize(\n          `component.${configEntry.domain}.options.progress.${step.progress_action}`,\n          step.description_placeholders\n        );\n        return description\n          ? html`\n              <ha-markdown\n                allowsvg\n                breaks\n                .content=${description}\n              ></ha-markdown>\n            `\n          : \"\";\n      },\n\n      renderMenuHeader(hass, step) {\n        return (\n          hass.localize(\n            `component.${configEntry.domain}.options.step.${step.step_id}.title`\n          ) || hass.localize(`component.${configEntry.domain}.title`)\n        );\n      },\n\n      renderMenuDescription(hass, step) {\n        const description = hass.localize(\n          `component.${configEntry.domain}.options.step.${step.step_id}.description`,\n          step.description_placeholders\n        );\n        return description\n          ? html`\n              <ha-markdown\n                allowsvg\n                breaks\n                .content=${description}\n              ></ha-markdown>\n            `\n          : \"\";\n      },\n\n      renderMenuOption(hass, step, option) {\n        return hass.localize(\n          `component.${configEntry.domain}.options.step.${step.step_id}.menu_options.${option}`,\n          step.description_placeholders\n        );\n      },\n\n      renderLoadingDescription(hass, reason) {\n        return (\n          hass.localize(`component.${configEntry.domain}.options.loading`) ||\n          (reason === \"loading_flow\" || reason === \"loading_step\"\n            ? hass.localize(`ui.dialogs.options_flow.loading.${reason}`, {\n                integration: domainToName(hass.localize, configEntry.domain),\n              })\n            : \"\")\n        );\n      },\n    }\n  );\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}