{"ast":null,"code":"import { expandHex } from \"./hex\";\nconst rgb_hex = component => {\n  const hex = Math.round(Math.min(Math.max(component, 0), 255)).toString(16);\n  return hex.length === 1 ? `0${hex}` : hex;\n};\n\n// Conversion between HEX and RGB\n\nexport const hex2rgb = hex => {\n  hex = expandHex(hex);\n  return [parseInt(hex.substring(0, 2), 16), parseInt(hex.substring(2, 4), 16), parseInt(hex.substring(4, 6), 16)];\n};\nexport const rgb2hex = rgb => `#${rgb_hex(rgb[0])}${rgb_hex(rgb[1])}${rgb_hex(rgb[2])}`;\n\n// Conversion between LAB, XYZ and RGB from https://github.com/gka/chroma.js\n// Copyright (c) 2011-2019, Gregor Aisch\n\n// Constants for XYZ and LAB conversion\nconst Xn = 0.95047;\nconst Yn = 1;\nconst Zn = 1.08883;\nconst t0 = 0.137931034; // 4 / 29\nconst t1 = 0.206896552; // 6 / 29\nconst t2 = 0.12841855; // 3 * t1 * t1\nconst t3 = 0.008856452; // t1 * t1 * t1\n\nconst rgb_xyz = r => {\n  r /= 255;\n  if (r <= 0.04045) {\n    return r / 12.92;\n  }\n  return ((r + 0.055) / 1.055) ** 2.4;\n};\nconst xyz_lab = t => {\n  if (t > t3) {\n    return t ** (1 / 3);\n  }\n  return t / t2 + t0;\n};\nconst xyz_rgb = r => 255 * (r <= 0.00304 ? 12.92 * r : 1.055 * r ** (1 / 2.4) - 0.055);\nconst lab_xyz = t => t > t1 ? t * t * t : t2 * (t - t0);\n\n// Conversions between RGB and LAB\n\nconst rgb2xyz = rgb => {\n  let [r, g, b] = rgb;\n  r = rgb_xyz(r);\n  g = rgb_xyz(g);\n  b = rgb_xyz(b);\n  const x = xyz_lab((0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / Xn);\n  const y = xyz_lab((0.2126729 * r + 0.7151522 * g + 0.072175 * b) / Yn);\n  const z = xyz_lab((0.0193339 * r + 0.119192 * g + 0.9503041 * b) / Zn);\n  return [x, y, z];\n};\nexport const rgb2lab = rgb => {\n  const [x, y, z] = rgb2xyz(rgb);\n  const l = 116 * y - 16;\n  return [l < 0 ? 0 : l, 500 * (x - y), 200 * (y - z)];\n};\nexport const lab2rgb = lab => {\n  const [l, a, b] = lab;\n  let y = (l + 16) / 116;\n  let x = isNaN(a) ? y : y + a / 500;\n  let z = isNaN(b) ? y : y - b / 200;\n  y = Yn * lab_xyz(y);\n  x = Xn * lab_xyz(x);\n  z = Zn * lab_xyz(z);\n  const r = xyz_rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z); // D65 -> sRGB\n  const g = xyz_rgb(-0.969266 * x + 1.8760108 * y + 0.041556 * z);\n  const b_ = xyz_rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z);\n  return [r, g, b_];\n};\nexport const lab2hex = lab => {\n  const rgb = lab2rgb(lab);\n  return rgb2hex(rgb);\n};\nexport const rgb2hsv = rgb => {\n  const [r, g, b] = rgb;\n  const v = Math.max(r, g, b);\n  const c = v - Math.min(r, g, b);\n  const h = c && (v === r ? (g - b) / c : v === g ? 2 + (b - r) / c : 4 + (r - g) / c);\n  return [60 * (h < 0 ? h + 6 : h), v && c / v, v];\n};\nexport const hsv2rgb = hsv => {\n  const [h, s, v] = hsv;\n  const f = n => {\n    const k = (n + h / 60) % 6;\n    return v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  };\n  return [f(5), f(3), f(1)];\n};\nexport const rgb2hs = rgb => rgb2hsv(rgb).slice(0, 2);\nexport const hs2rgb = hs => hsv2rgb([hs[0], hs[1], 255]);","map":{"version":3,"names":["expandHex","rgb_hex","component","hex","Math","round","min","max","toString","length","hex2rgb","parseInt","substring","rgb2hex","rgb","Xn","Yn","Zn","t0","t1","t2","t3","rgb_xyz","r","xyz_lab","t","xyz_rgb","lab_xyz","rgb2xyz","g","b","x","y","z","rgb2lab","l","lab2rgb","lab","a","isNaN","b_","lab2hex","rgb2hsv","v","c","h","hsv2rgb","hsv","s","f","n","k","rgb2hs","slice","hs2rgb","hs"],"sources":["/workspaces/frontend/src/common/color/convert-color.ts"],"sourcesContent":["import { expandHex } from \"./hex\";\n\nconst rgb_hex = (component: number): string => {\n  const hex = Math.round(Math.min(Math.max(component, 0), 255)).toString(16);\n  return hex.length === 1 ? `0${hex}` : hex;\n};\n\n// Conversion between HEX and RGB\n\nexport const hex2rgb = (hex: string): [number, number, number] => {\n  hex = expandHex(hex);\n\n  return [\n    parseInt(hex.substring(0, 2), 16),\n    parseInt(hex.substring(2, 4), 16),\n    parseInt(hex.substring(4, 6), 16),\n  ];\n};\n\nexport const rgb2hex = (rgb: [number, number, number]): string =>\n  `#${rgb_hex(rgb[0])}${rgb_hex(rgb[1])}${rgb_hex(rgb[2])}`;\n\n// Conversion between LAB, XYZ and RGB from https://github.com/gka/chroma.js\n// Copyright (c) 2011-2019, Gregor Aisch\n\n// Constants for XYZ and LAB conversion\nconst Xn = 0.95047;\nconst Yn = 1;\nconst Zn = 1.08883;\n\nconst t0 = 0.137931034; // 4 / 29\nconst t1 = 0.206896552; // 6 / 29\nconst t2 = 0.12841855; // 3 * t1 * t1\nconst t3 = 0.008856452; // t1 * t1 * t1\n\nconst rgb_xyz = (r: number) => {\n  r /= 255;\n  if (r <= 0.04045) {\n    return r / 12.92;\n  }\n  return ((r + 0.055) / 1.055) ** 2.4;\n};\n\nconst xyz_lab = (t: number) => {\n  if (t > t3) {\n    return t ** (1 / 3);\n  }\n  return t / t2 + t0;\n};\n\nconst xyz_rgb = (r: number) =>\n  255 * (r <= 0.00304 ? 12.92 * r : 1.055 * r ** (1 / 2.4) - 0.055);\n\nconst lab_xyz = (t: number) => (t > t1 ? t * t * t : t2 * (t - t0));\n\n// Conversions between RGB and LAB\n\nconst rgb2xyz = (rgb: [number, number, number]): [number, number, number] => {\n  let [r, g, b] = rgb;\n  r = rgb_xyz(r);\n  g = rgb_xyz(g);\n  b = rgb_xyz(b);\n  const x = xyz_lab((0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / Xn);\n  const y = xyz_lab((0.2126729 * r + 0.7151522 * g + 0.072175 * b) / Yn);\n  const z = xyz_lab((0.0193339 * r + 0.119192 * g + 0.9503041 * b) / Zn);\n  return [x, y, z];\n};\n\nexport const rgb2lab = (\n  rgb: [number, number, number]\n): [number, number, number] => {\n  const [x, y, z] = rgb2xyz(rgb);\n  const l = 116 * y - 16;\n  return [l < 0 ? 0 : l, 500 * (x - y), 200 * (y - z)];\n};\n\nexport const lab2rgb = (\n  lab: [number, number, number]\n): [number, number, number] => {\n  const [l, a, b] = lab;\n\n  let y = (l + 16) / 116;\n  let x = isNaN(a) ? y : y + a / 500;\n  let z = isNaN(b) ? y : y - b / 200;\n\n  y = Yn * lab_xyz(y);\n  x = Xn * lab_xyz(x);\n  z = Zn * lab_xyz(z);\n\n  const r = xyz_rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z); // D65 -> sRGB\n  const g = xyz_rgb(-0.969266 * x + 1.8760108 * y + 0.041556 * z);\n  const b_ = xyz_rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z);\n\n  return [r, g, b_];\n};\n\nexport const lab2hex = (lab: [number, number, number]): string => {\n  const rgb = lab2rgb(lab);\n  return rgb2hex(rgb);\n};\n\nexport const rgb2hsv = (\n  rgb: [number, number, number]\n): [number, number, number] => {\n  const [r, g, b] = rgb;\n  const v = Math.max(r, g, b);\n  const c = v - Math.min(r, g, b);\n  const h =\n    c && (v === r ? (g - b) / c : v === g ? 2 + (b - r) / c : 4 + (r - g) / c);\n  return [60 * (h < 0 ? h + 6 : h), v && c / v, v];\n};\n\nexport const hsv2rgb = (\n  hsv: [number, number, number]\n): [number, number, number] => {\n  const [h, s, v] = hsv;\n  const f = (n: number) => {\n    const k = (n + h / 60) % 6;\n    return v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  };\n  return [f(5), f(3), f(1)];\n};\n\nexport const rgb2hs = (rgb: [number, number, number]): [number, number] =>\n  rgb2hsv(rgb).slice(0, 2) as [number, number];\n\nexport const hs2rgb = (hs: [number, number]): [number, number, number] =>\n  hsv2rgb([hs[0], hs[1], 255]);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}