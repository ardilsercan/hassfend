{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _templateObject, _templateObject2;\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { DOMAINS_TOGGLE } from \"../../../common/const\";\nimport \"../../../components/ha-switch\";\nimport { forwardHaptic } from \"../../../data/haptics\";\nimport { turnOnOffEntities } from \"../common/entity/turn-on-off-entities\";\nvar HuiEntitiesToggle = _decorate([customElement(\"hui-entities-toggle\")], function (_initialize, _LitElement) {\n  var HuiEntitiesToggle = /*#__PURE__*/function (_LitElement2) {\n    _inherits(HuiEntitiesToggle, _LitElement2);\n    function HuiEntitiesToggle() {\n      var _this;\n      _classCallCheck(this, HuiEntitiesToggle);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, HuiEntitiesToggle, [].concat(args));\n      _initialize(_assertThisInitialized(_this));\n      return _this;\n    }\n    return _createClass(HuiEntitiesToggle);\n  }(_LitElement);\n  return {\n    F: HuiEntitiesToggle,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        type: Array\n      })],\n      key: \"entities\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_toggleEntities\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"willUpdate\",\n      value: function willUpdate(changedProperties) {\n        var _this2 = this;\n        _get(_getPrototypeOf(HuiEntitiesToggle.prototype), \"willUpdate\", this).call(this, changedProperties);\n        if (changedProperties.has(\"entities\")) {\n          this._toggleEntities = this.entities.filter(function (entityId) {\n            return entityId in _this2.hass.states && DOMAINS_TOGGLE.has(entityId.split(\".\", 1)[0]);\n          });\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var _this$_toggleEntities,\n          _this3 = this;\n        if (!((_this$_toggleEntities = this._toggleEntities) !== null && _this$_toggleEntities !== void 0 && _this$_toggleEntities.length)) {\n          return nothing;\n        }\n        return html(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      <ha-switch\\n        aria-label=\", \"\\n        .checked=\", \"\\n        @change=\", \"\\n      ></ha-switch>\\n    \"])), this.hass.localize(\"ui.panel.lovelace.card.entities.toggle\"), this._toggleEntities.some(function (entityId) {\n          var stateObj = _this3.hass.states[entityId];\n          return stateObj && stateObj.state === \"on\";\n        }), this._callService);\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n      :host {\\n        width: 38px;\\n        display: block;\\n      }\\n      ha-switch {\\n        padding: 13px 5px;\\n        margin: -4px -8px;\\n      }\\n    \"])));\n      }\n    }, {\n      kind: \"method\",\n      key: \"_callService\",\n      value: function _callService(ev) {\n        forwardHaptic(\"light\");\n        var turnOn = ev.target.checked;\n        turnOnOffEntities(this.hass, this._toggleEntities, turnOn);\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","nothing","customElement","property","state","DOMAINS_TOGGLE","forwardHaptic","turnOnOffEntities","HuiEntitiesToggle","_decorate","_initialize","_LitElement","_LitElement2","_inherits","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_assertThisInitialized","_createClass","F","d","kind","decorators","type","key","value","attribute","willUpdate","changedProperties","_this2","_get","_getPrototypeOf","prototype","call","has","_toggleEntities","entities","filter","entityId","hass","states","split","render","_this$_toggleEntities","_this3","_templateObject","_taggedTemplateLiteral","localize","some","stateObj","_callService","static","styles","_templateObject2","ev","turnOn","target","checked"],"sources":["/workspaces/frontend/src/panels/lovelace/components/hui-entities-toggle.ts"],"sourcesContent":["import {\n  css,\n  CSSResultGroup,\n  html,\n  LitElement,\n  PropertyValues,\n  nothing,\n} from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { DOMAINS_TOGGLE } from \"../../../common/const\";\nimport \"../../../components/ha-switch\";\nimport type { HaSwitch } from \"../../../components/ha-switch\";\nimport { forwardHaptic } from \"../../../data/haptics\";\nimport type { HomeAssistant } from \"../../../types\";\nimport { turnOnOffEntities } from \"../common/entity/turn-on-off-entities\";\n\n@customElement(\"hui-entities-toggle\")\nclass HuiEntitiesToggle extends LitElement {\n  @property({ type: Array }) public entities?: string[];\n\n  @property({ attribute: false }) public hass?: HomeAssistant;\n\n  @state() private _toggleEntities?: string[];\n\n  public willUpdate(changedProperties: PropertyValues): void {\n    super.willUpdate(changedProperties);\n    if (changedProperties.has(\"entities\")) {\n      this._toggleEntities = this.entities!.filter(\n        (entityId) =>\n          entityId in this.hass!.states &&\n          DOMAINS_TOGGLE.has(entityId.split(\".\", 1)[0])\n      );\n    }\n  }\n\n  protected render() {\n    if (!this._toggleEntities?.length) {\n      return nothing;\n    }\n\n    return html`\n      <ha-switch\n        aria-label=${this.hass!.localize(\n          \"ui.panel.lovelace.card.entities.toggle\"\n        )}\n        .checked=${this._toggleEntities!.some((entityId) => {\n          const stateObj = this.hass!.states[entityId];\n          return stateObj && stateObj.state === \"on\";\n        })}\n        @change=${this._callService}\n      ></ha-switch>\n    `;\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      :host {\n        width: 38px;\n        display: block;\n      }\n      ha-switch {\n        padding: 13px 5px;\n        margin: -4px -8px;\n      }\n    `;\n  }\n\n  private _callService(ev: MouseEvent): void {\n    forwardHaptic(\"light\");\n    const turnOn = (ev.target as HaSwitch).checked;\n    turnOnOffEntities(this.hass!, this._toggleEntities!, turnOn!);\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-entities-toggle\": HuiEntitiesToggle;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}