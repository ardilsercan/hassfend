{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport \"../../../../../components/ha-textarea\";\nimport { html, LitElement } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport \"../../../../../components/ha-form/ha-form\";\nimport { createDurationData } from \"../../../../../common/datetime/create_duration_data\";\nimport { fireEvent } from \"../../../../../common/dom/fire_event\";\nimport { hasTemplate } from \"../../../../../common/string/has-template\";\nconst SCHEMA = [{\n  name: \"value_template\",\n  required: true,\n  selector: {\n    template: {}\n  }\n}, {\n  name: \"for\",\n  selector: {\n    duration: {}\n  }\n}];\nexport let HaTemplateTrigger = _decorate([customElement(\"ha-automation-trigger-template\")], function (_initialize, _LitElement) {\n  class HaTemplateTrigger extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaTemplateTrigger,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"trigger\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"disabled\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"defaultConfig\",\n      value: function defaultConfig() {\n        return {\n          value_template: \"\"\n        };\n      }\n    }, {\n      kind: \"method\",\n      key: \"willUpdate\",\n      value: function willUpdate(changedProperties) {\n        if (!changedProperties.has(\"trigger\")) {\n          return;\n        }\n        // Check for templates in trigger. If found, revert to YAML mode.\n        if (this.trigger && hasTemplate(this.trigger.for)) {\n          fireEvent(this, \"ui-mode-not-available\", Error(this.hass.localize(\"ui.errors.config.no_template_editor_support\")));\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        const trgFor = createDurationData(this.trigger.for);\n        const data = {\n          ...this.trigger,\n          for: trgFor\n        };\n        return html`\n      <ha-form\n        .hass=${this.hass}\n        .data=${data}\n        .schema=${SCHEMA}\n        @value-changed=${this._valueChanged}\n        .computeLabel=${this._computeLabelCallback}\n        .disabled=${this.disabled}\n      ></ha-form>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_valueChanged\",\n      value: function _valueChanged(ev) {\n        ev.stopPropagation();\n        const newTrigger = ev.detail.value;\n        if (newTrigger.for && Object.values(newTrigger.for).every(value => value === 0)) {\n          delete newTrigger.for;\n        }\n        fireEvent(this, \"value-changed\", {\n          value: newTrigger\n        });\n      }\n    }, {\n      kind: \"field\",\n      key: \"_computeLabelCallback\",\n      value() {\n        return schema => this.hass.localize(`ui.panel.config.automation.editor.triggers.type.template.${schema.name}`);\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["html","LitElement","customElement","property","createDurationData","fireEvent","hasTemplate","SCHEMA","name","required","selector","template","duration","HaTemplateTrigger","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","type","Boolean","static","defaultConfig","value_template","willUpdate","changedProperties","has","trigger","for","Error","hass","localize","render","trgFor","data","_valueChanged","_computeLabelCallback","disabled","ev","stopPropagation","newTrigger","detail","Object","values","every","schema"],"sources":["/Users/sercanardil/Desktop/frontend/src/panels/config/automation/trigger/types/ha-automation-trigger-template.ts"],"sourcesContent":["import \"../../../../../components/ha-textarea\";\nimport { html, LitElement, PropertyValues } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport type { TemplateTrigger } from \"../../../../../data/automation\";\nimport type { HomeAssistant } from \"../../../../../types\";\nimport \"../../../../../components/ha-form/ha-form\";\nimport { createDurationData } from \"../../../../../common/datetime/create_duration_data\";\nimport { fireEvent } from \"../../../../../common/dom/fire_event\";\nimport { hasTemplate } from \"../../../../../common/string/has-template\";\nimport type { SchemaUnion } from \"../../../../../components/ha-form/types\";\n\nconst SCHEMA = [\n  { name: \"value_template\", required: true, selector: { template: {} } },\n  { name: \"for\", selector: { duration: {} } },\n] as const;\n\n@customElement(\"ha-automation-trigger-template\")\nexport class HaTemplateTrigger extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public trigger!: TemplateTrigger;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  public static get defaultConfig() {\n    return { value_template: \"\" };\n  }\n\n  public willUpdate(changedProperties: PropertyValues) {\n    if (!changedProperties.has(\"trigger\")) {\n      return;\n    }\n    // Check for templates in trigger. If found, revert to YAML mode.\n    if (this.trigger && hasTemplate(this.trigger.for)) {\n      fireEvent(\n        this,\n        \"ui-mode-not-available\",\n        Error(this.hass.localize(\"ui.errors.config.no_template_editor_support\"))\n      );\n    }\n  }\n\n  protected render() {\n    const trgFor = createDurationData(this.trigger.for);\n\n    const data = {\n      ...this.trigger,\n      for: trgFor,\n    };\n\n    return html`\n      <ha-form\n        .hass=${this.hass}\n        .data=${data}\n        .schema=${SCHEMA}\n        @value-changed=${this._valueChanged}\n        .computeLabel=${this._computeLabelCallback}\n        .disabled=${this.disabled}\n      ></ha-form>\n    `;\n  }\n\n  private _valueChanged(ev: CustomEvent): void {\n    ev.stopPropagation();\n    const newTrigger = ev.detail.value;\n\n    if (\n      newTrigger.for &&\n      Object.values(newTrigger.for).every((value) => value === 0)\n    ) {\n      delete newTrigger.for;\n    }\n\n    fireEvent(this, \"value-changed\", { value: newTrigger });\n  }\n\n  private _computeLabelCallback = (\n    schema: SchemaUnion<typeof SCHEMA>\n  ): string =>\n    this.hass.localize(\n      `ui.panel.config.automation.editor.triggers.type.template.${schema.name}`\n    );\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-automation-trigger-template\": HaTemplateTrigger;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}