{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport { html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { ensureArray } from \"../../common/array/ensure-array\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { getDeviceIntegrationLookup } from \"../../data/device_registry\";\nimport { fetchEntitySourcesWithCache } from \"../../data/entity_sources\";\nimport { filterSelectorDevices, filterSelectorEntities } from \"../../data/selector\";\nimport \"../device/ha-device-picker\";\nimport \"../device/ha-devices-picker\";\nexport let HaDeviceSelector = _decorate([customElement(\"ha-selector-device\")], function (_initialize, _LitElement) {\n  class HaDeviceSelector extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaDeviceSelector,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"selector\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_entitySources\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"value\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"label\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"helper\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"disabled\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"required\",\n      value() {\n        return true;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_deviceIntegrationLookup\",\n      value() {\n        return memoizeOne(getDeviceIntegrationLookup);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_hasIntegration\",\n      value: function _hasIntegration(selector) {\n        var _selector$device, _selector$device2;\n        return ((_selector$device = selector.device) === null || _selector$device === void 0 ? void 0 : _selector$device.filter) && ensureArray(selector.device.filter).some(filter => filter.integration) || ((_selector$device2 = selector.device) === null || _selector$device2 === void 0 ? void 0 : _selector$device2.entity) && ensureArray(selector.device.entity).some(device => device.integration);\n      }\n    }, {\n      kind: \"method\",\n      key: \"willUpdate\",\n      value: function willUpdate(changedProperties) {\n        if (changedProperties.has(\"selector\") && this.value !== undefined) {\n          var _this$selector$device, _this$selector$device2;\n          if ((_this$selector$device = this.selector.device) !== null && _this$selector$device !== void 0 && _this$selector$device.multiple && !Array.isArray(this.value)) {\n            this.value = [this.value];\n            fireEvent(this, \"value-changed\", {\n              value: this.value\n            });\n          } else if (!((_this$selector$device2 = this.selector.device) !== null && _this$selector$device2 !== void 0 && _this$selector$device2.multiple) && Array.isArray(this.value)) {\n            this.value = this.value[0];\n            fireEvent(this, \"value-changed\", {\n              value: this.value\n            });\n          }\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"updated\",\n      value: function updated(changedProperties) {\n        _get(_getPrototypeOf(HaDeviceSelector.prototype), \"updated\", this).call(this, changedProperties);\n        if (changedProperties.has(\"selector\") && this._hasIntegration(this.selector) && !this._entitySources) {\n          fetchEntitySourcesWithCache(this.hass).then(sources => {\n            this._entitySources = sources;\n          });\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var _this$selector$device3, _this$selector$device5;\n        if (this._hasIntegration(this.selector) && !this._entitySources) {\n          return nothing;\n        }\n        if (!((_this$selector$device3 = this.selector.device) !== null && _this$selector$device3 !== void 0 && _this$selector$device3.multiple)) {\n          var _this$selector$device4;\n          return html`\n        <ha-device-picker\n          .hass=${this.hass}\n          .value=${this.value}\n          .label=${this.label}\n          .helper=${this.helper}\n          .deviceFilter=${this._filterDevices}\n          .entityFilter=${(_this$selector$device4 = this.selector.device) !== null && _this$selector$device4 !== void 0 && _this$selector$device4.entity ? this._filterEntities : undefined}\n          .disabled=${this.disabled}\n          .required=${this.required}\n          allow-custom-entity\n        ></ha-device-picker>\n      `;\n        }\n        return html`\n      ${this.label ? html`<label>${this.label}</label>` : \"\"}\n      <ha-devices-picker\n        .hass=${this.hass}\n        .value=${this.value}\n        .helper=${this.helper}\n        .deviceFilter=${this._filterDevices}\n        .entityFilter=${(_this$selector$device5 = this.selector.device) !== null && _this$selector$device5 !== void 0 && _this$selector$device5.entity ? this._filterEntities : undefined}\n        .disabled=${this.disabled}\n        .required=${this.required}\n      ></ha-devices-picker>\n    `;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_filterDevices\",\n      value() {\n        return device => {\n          var _this$selector$device6;\n          if (!((_this$selector$device6 = this.selector.device) !== null && _this$selector$device6 !== void 0 && _this$selector$device6.filter)) {\n            return true;\n          }\n          const deviceIntegrations = this._entitySources ? this._deviceIntegrationLookup(this._entitySources, Object.values(this.hass.entities)) : undefined;\n          return ensureArray(this.selector.device.filter).some(filter => filterSelectorDevices(filter, device, deviceIntegrations));\n        };\n      }\n    }, {\n      kind: \"field\",\n      key: \"_filterEntities\",\n      value() {\n        return entity => ensureArray(this.selector.device.entity).some(filter => filterSelectorEntities(filter, entity, this._entitySources));\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["html","LitElement","nothing","customElement","property","state","memoizeOne","ensureArray","fireEvent","getDeviceIntegrationLookup","fetchEntitySourcesWithCache","filterSelectorDevices","filterSelectorEntities","HaDeviceSelector","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","type","Boolean","_hasIntegration","selector","_selector$device","_selector$device2","device","filter","some","integration","entity","willUpdate","changedProperties","has","undefined","_this$selector$device","_this$selector$device2","multiple","Array","isArray","updated","_get","_getPrototypeOf","prototype","call","_entitySources","hass","then","sources","render","_this$selector$device3","_this$selector$device5","_this$selector$device4","label","helper","_filterDevices","_filterEntities","disabled","required","_this$selector$device6","deviceIntegrations","_deviceIntegrationLookup","Object","values","entities"],"sources":["/workspaces/frontend/src/components/ha-selector/ha-selector-device.ts"],"sourcesContent":["import { HassEntity } from \"home-assistant-js-websocket\";\nimport { html, LitElement, PropertyValues, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { ensureArray } from \"../../common/array/ensure-array\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport type { DeviceRegistryEntry } from \"../../data/device_registry\";\nimport { getDeviceIntegrationLookup } from \"../../data/device_registry\";\nimport {\n  EntitySources,\n  fetchEntitySourcesWithCache,\n} from \"../../data/entity_sources\";\nimport type { DeviceSelector } from \"../../data/selector\";\nimport {\n  filterSelectorDevices,\n  filterSelectorEntities,\n} from \"../../data/selector\";\nimport type { HomeAssistant } from \"../../types\";\nimport \"../device/ha-device-picker\";\nimport \"../device/ha-devices-picker\";\n\n@customElement(\"ha-selector-device\")\nexport class HaDeviceSelector extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public selector!: DeviceSelector;\n\n  @state() private _entitySources?: EntitySources;\n\n  @property() public value?: any;\n\n  @property() public label?: string;\n\n  @property() public helper?: string;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @property({ type: Boolean }) public required = true;\n\n  private _deviceIntegrationLookup = memoizeOne(getDeviceIntegrationLookup);\n\n  private _hasIntegration(selector: DeviceSelector) {\n    return (\n      (selector.device?.filter &&\n        ensureArray(selector.device.filter).some(\n          (filter) => filter.integration\n        )) ||\n      (selector.device?.entity &&\n        ensureArray(selector.device.entity).some(\n          (device) => device.integration\n        ))\n    );\n  }\n\n  protected willUpdate(changedProperties: PropertyValues): void {\n    if (changedProperties.has(\"selector\") && this.value !== undefined) {\n      if (this.selector.device?.multiple && !Array.isArray(this.value)) {\n        this.value = [this.value];\n        fireEvent(this, \"value-changed\", { value: this.value });\n      } else if (!this.selector.device?.multiple && Array.isArray(this.value)) {\n        this.value = this.value[0];\n        fireEvent(this, \"value-changed\", { value: this.value });\n      }\n    }\n  }\n\n  protected updated(changedProperties: PropertyValues): void {\n    super.updated(changedProperties);\n    if (\n      changedProperties.has(\"selector\") &&\n      this._hasIntegration(this.selector) &&\n      !this._entitySources\n    ) {\n      fetchEntitySourcesWithCache(this.hass).then((sources) => {\n        this._entitySources = sources;\n      });\n    }\n  }\n\n  protected render() {\n    if (this._hasIntegration(this.selector) && !this._entitySources) {\n      return nothing;\n    }\n\n    if (!this.selector.device?.multiple) {\n      return html`\n        <ha-device-picker\n          .hass=${this.hass}\n          .value=${this.value}\n          .label=${this.label}\n          .helper=${this.helper}\n          .deviceFilter=${this._filterDevices}\n          .entityFilter=${this.selector.device?.entity\n            ? this._filterEntities\n            : undefined}\n          .disabled=${this.disabled}\n          .required=${this.required}\n          allow-custom-entity\n        ></ha-device-picker>\n      `;\n    }\n\n    return html`\n      ${this.label ? html`<label>${this.label}</label>` : \"\"}\n      <ha-devices-picker\n        .hass=${this.hass}\n        .value=${this.value}\n        .helper=${this.helper}\n        .deviceFilter=${this._filterDevices}\n        .entityFilter=${this.selector.device?.entity\n          ? this._filterEntities\n          : undefined}\n        .disabled=${this.disabled}\n        .required=${this.required}\n      ></ha-devices-picker>\n    `;\n  }\n\n  private _filterDevices = (device: DeviceRegistryEntry): boolean => {\n    if (!this.selector.device?.filter) {\n      return true;\n    }\n    const deviceIntegrations = this._entitySources\n      ? this._deviceIntegrationLookup(\n          this._entitySources,\n          Object.values(this.hass.entities)\n        )\n      : undefined;\n\n    return ensureArray(this.selector.device.filter).some((filter) =>\n      filterSelectorDevices(filter, device, deviceIntegrations)\n    );\n  };\n\n  private _filterEntities = (entity: HassEntity): boolean =>\n    ensureArray(this.selector.device!.entity).some((filter) =>\n      filterSelectorEntities(filter, entity, this._entitySources)\n    );\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-selector-device\": HaDeviceSelector;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}