{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport { html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport \"../../../components/ha-date-input\";\nimport { isUnavailableState, UNAVAILABLE } from \"../../../data/entity\";\nimport { setDateValue } from \"../../../data/date\";\nimport { hasConfigOrEntityChanged } from \"../common/has-changed\";\nimport \"../components/hui-generic-entity-row\";\nimport { createEntityNotFoundWarning } from \"../components/hui-warning\";\nlet HuiDateEntityRow = _decorate([customElement(\"hui-date-entity-row\")], function (_initialize, _LitElement) {\n  class HuiDateEntityRow extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HuiDateEntityRow,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_config\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"setConfig\",\n      value: function setConfig(config) {\n        if (!config) {\n          throw new Error(\"Invalid configuration\");\n        }\n        this._config = config;\n      }\n    }, {\n      kind: \"method\",\n      key: \"shouldUpdate\",\n      value: function shouldUpdate(changedProps) {\n        return hasConfigOrEntityChanged(this, changedProps);\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this._config || !this.hass) {\n          return nothing;\n        }\n        const stateObj = this.hass.states[this._config.entity];\n        if (!stateObj) {\n          return html`\n        <hui-warning>\n          ${createEntityNotFoundWarning(this.hass, this._config.entity)}\n        </hui-warning>\n      `;\n        }\n        const unavailable = stateObj.state === UNAVAILABLE;\n        return html`\n      <hui-generic-entity-row .hass=${this.hass} .config=${this._config}>\n        <ha-date-input\n          .locale=${this.hass.locale}\n          .disabled=${unavailable}\n          .value=${isUnavailableState(stateObj.state) ? undefined : stateObj.state}\n          @value-changed=${this._dateChanged}\n        >\n        </ha-date-input>\n      </hui-generic-entity-row>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_dateChanged\",\n      value: function _dateChanged(ev) {\n        if (ev.detail.value) {\n          setDateValue(this.hass, this._config.entity, ev.detail.value);\n        }\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["html","LitElement","nothing","customElement","property","state","isUnavailableState","UNAVAILABLE","setDateValue","hasConfigOrEntityChanged","createEntityNotFoundWarning","HuiDateEntityRow","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","setConfig","config","Error","_config","shouldUpdate","changedProps","render","hass","stateObj","states","entity","unavailable","locale","undefined","_dateChanged","ev","detail"],"sources":["/workspaces/frontend/src/panels/lovelace/entity-rows/hui-date-entity-row.ts"],"sourcesContent":["import { html, LitElement, nothing, PropertyValues, TemplateResult } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport \"../../../components/ha-date-input\";\nimport { isUnavailableState, UNAVAILABLE } from \"../../../data/entity\";\nimport { setDateValue } from \"../../../data/date\";\nimport type { HomeAssistant } from \"../../../types\";\nimport { hasConfigOrEntityChanged } from \"../common/has-changed\";\nimport \"../components/hui-generic-entity-row\";\nimport { createEntityNotFoundWarning } from \"../components/hui-warning\";\nimport type { EntityConfig, LovelaceRow } from \"./types\";\n\n@customElement(\"hui-date-entity-row\")\nclass HuiDateEntityRow extends LitElement implements LovelaceRow {\n  @property({ attribute: false }) public hass?: HomeAssistant;\n\n  @state() private _config?: EntityConfig;\n\n  public setConfig(config: EntityConfig): void {\n    if (!config) {\n      throw new Error(\"Invalid configuration\");\n    }\n    this._config = config;\n  }\n\n  protected shouldUpdate(changedProps: PropertyValues): boolean {\n    return hasConfigOrEntityChanged(this, changedProps);\n  }\n\n  protected render(): TemplateResult | typeof nothing {\n    if (!this._config || !this.hass) {\n      return nothing;\n    }\n\n    const stateObj = this.hass.states[this._config.entity];\n\n    if (!stateObj) {\n      return html`\n        <hui-warning>\n          ${createEntityNotFoundWarning(this.hass, this._config.entity)}\n        </hui-warning>\n      `;\n    }\n\n    const unavailable = stateObj.state === UNAVAILABLE;\n\n    return html`\n      <hui-generic-entity-row .hass=${this.hass} .config=${this._config}>\n        <ha-date-input\n          .locale=${this.hass.locale}\n          .disabled=${unavailable}\n          .value=${isUnavailableState(stateObj.state)\n            ? undefined\n            : stateObj.state}\n          @value-changed=${this._dateChanged}\n        >\n        </ha-date-input>\n      </hui-generic-entity-row>\n    `;\n  }\n\n  private _dateChanged(ev: CustomEvent<{ value: string }>): void {\n    if (ev.detail.value) {\n      setDateValue(this.hass!, this._config!.entity, ev.detail.value);\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-date-entity-row\": HuiDateEntityRow;\n  }\n}\n"],"mappings":";AAAA,SAASA,IAAI,EAAEC,UAAU,EAAEC,OAAO,QAAwC,KAAK;AAC/E,SAASC,aAAa,EAAEC,QAAQ,EAAEC,KAAK,QAAQ,gBAAgB;AAC/D,OAAO,mCAAmC;AAC1C,SAASC,kBAAkB,EAAEC,WAAW,QAAQ,sBAAsB;AACtE,SAASC,YAAY,QAAQ,oBAAoB;AAEjD,SAASC,wBAAwB,QAAQ,uBAAuB;AAChE,OAAO,sCAAsC;AAC7C,SAASC,2BAA2B,QAAQ,2BAA2B;AAAC,IAIlEC,gBAAgB,GAAAC,SAAA,EADrBT,aAAa,CAAC,qBAAqB,CAAC,aAAAU,WAAA,EAAAC,WAAA;EAArC,MACMH,gBAAgB,SAAAG,WAAA,CAA2C;IAAAC,YAAA,GAAAC,IAAA;MAAA,SAAAA,IAAA;MAAAH,WAAA;IAAA;EAqDjE;EAAC;IAAAI,CAAA,EArDKN,gBAAgB;IAAAO,CAAA;MAAAC,IAAA;MAAAC,UAAA,GACnBhB,QAAQ,CAAC;QAAEiB,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAC,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAE9Bf,KAAK,CAAC,CAAC;MAAAiB,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAER,SAAAC,UAAiBC,MAAoB,EAAQ;QAC3C,IAAI,CAACA,MAAM,EAAE;UACX,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;QAC1C;QACA,IAAI,CAACC,OAAO,GAAGF,MAAM;MACvB;IAAC;MAAAN,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAK,aAAuBC,YAA4B,EAAW;QAC5D,OAAOpB,wBAAwB,CAAC,IAAI,EAAEoB,YAAY,CAAC;MACrD;IAAC;MAAAV,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAO,OAAA,EAAoD;QAClD,IAAI,CAAC,IAAI,CAACH,OAAO,IAAI,CAAC,IAAI,CAACI,IAAI,EAAE;UAC/B,OAAO7B,OAAO;QAChB;QAEA,MAAM8B,QAAQ,GAAG,IAAI,CAACD,IAAI,CAACE,MAAM,CAAC,IAAI,CAACN,OAAO,CAACO,MAAM,CAAC;QAEtD,IAAI,CAACF,QAAQ,EAAE;UACb,OAAOhC,IAAK;AAClB;AACA,YAAYU,2BAA2B,CAAC,IAAI,CAACqB,IAAI,EAAE,IAAI,CAACJ,OAAO,CAACO,MAAM,CAAE;AACxE;AACA,OAAO;QACH;QAEA,MAAMC,WAAW,GAAGH,QAAQ,CAAC3B,KAAK,KAAKE,WAAW;QAElD,OAAOP,IAAK;AAChB,sCAAsC,IAAI,CAAC+B,IAAK,YAAW,IAAI,CAACJ,OAAQ;AACxE;AACA,oBAAoB,IAAI,CAACI,IAAI,CAACK,MAAO;AACrC,sBAAsBD,WAAY;AAClC,mBAAmB7B,kBAAkB,CAAC0B,QAAQ,CAAC3B,KAAK,CAAC,GACvCgC,SAAS,GACTL,QAAQ,CAAC3B,KAAM;AAC7B,2BAA2B,IAAI,CAACiC,YAAa;AAC7C;AACA;AACA;AACA,KAAK;MACH;IAAC;MAAAnB,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAe,aAAqBC,EAAkC,EAAQ;QAC7D,IAAIA,EAAE,CAACC,MAAM,CAACjB,KAAK,EAAE;UACnBf,YAAY,CAAC,IAAI,CAACuB,IAAI,EAAG,IAAI,CAACJ,OAAO,CAAEO,MAAM,EAAEK,EAAE,CAACC,MAAM,CAACjB,KAAK,CAAC;QACjE;MACF;IAAC;EAAA;AAAA,GApD4BtB,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}