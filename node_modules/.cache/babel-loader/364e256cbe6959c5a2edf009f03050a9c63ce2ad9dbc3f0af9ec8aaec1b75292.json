{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\n/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { customElement } from 'lit/decorators.js';\nimport { Ripple } from './internal/ripple.js';\nimport { styles } from './internal/ripple-styles.css.js';\n/**\n * @summary Ripples, also known as state layers, are visual indicators used to\n * communicate the status of a component or interactive element.\n *\n * @description A state layer is a semi-transparent covering on an element that\n * indicates its state. State layers provide a systematic approach to\n * visualizing states by using opacity. A layer can be applied to an entire\n * element or in a circular shape and only one state layer can be applied at a\n * given time.\n *\n * @final\n * @suppress {visibility}\n */\nexport var MdRipple = /*#__PURE__*/function (_Ripple) {\n  _inherits(MdRipple, _Ripple);\n  function MdRipple() {\n    _classCallCheck(this, MdRipple);\n    return _callSuper(this, MdRipple, arguments);\n  }\n  return _createClass(MdRipple);\n}(Ripple);\nMdRipple.styles = [styles];\nMdRipple = __decorate([customElement('md-ripple')], MdRipple);","map":{"version":3,"names":["customElement","Ripple","styles","MdRipple","_Ripple","_inherits","_classCallCheck","_callSuper","arguments","_createClass","__decorate"],"sources":["ripple.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {customElement} from 'lit/decorators.js';\n\nimport {Ripple} from './internal/ripple.js';\nimport {styles} from './internal/ripple-styles.css.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-ripple': MdRipple;\n  }\n}\n\n/**\n * @summary Ripples, also known as state layers, are visual indicators used to\n * communicate the status of a component or interactive element.\n *\n * @description A state layer is a semi-transparent covering on an element that\n * indicates its state. State layers provide a systematic approach to\n * visualizing states by using opacity. A layer can be applied to an entire\n * element or in a circular shape and only one state layer can be applied at a\n * given time.\n *\n * @final\n * @suppress {visibility}\n */\n@customElement('md-ripple')\nexport class MdRipple extends Ripple {\n  static override styles = [styles];\n}\n"],"mappings":";;;;AAAA;;;;;;AAMA,SAAQA,aAAa,QAAO,mBAAmB;AAE/C,SAAQC,MAAM,QAAO,sBAAsB;AAC3C,SAAQC,MAAM,QAAO,iCAAiC;AAQtD;;;;;;;;;;;;;AAcO,WAAMC,QAAQ,0BAAAC,OAAA;EAAAC,SAAA,CAAAF,QAAA,EAAAC,OAAA;EAAA,SAAAD,SAAA;IAAAG,eAAA,OAAAH,QAAA;IAAA,OAAAI,UAAA,OAAAJ,QAAA,EAAAK,SAAA;EAAA;EAAA,OAAAC,YAAA,CAAAN,QAAA;AAAA,EAASF,MAAM,C;AAClBE,QAAA,CAAAD,MAAM,GAAG,CAACA,MAAM,CAAC;AADtBC,QAAQ,GAAAO,UAAA,EADpBV,aAAa,CAAC,WAAW,CAAC,C,EACdG,QAAQ,CAEpB"},"metadata":{},"sourceType":"module","externalDependencies":[]}