{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport \"@material/mwc-linear-progress/mwc-linear-progress\";\nimport { createConnection, genClientId, getAuth, subscribeConfig } from \"home-assistant-js-websocket\";\nimport { css, html, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { enableWrite, loadTokens, saveTokens } from \"../common/auth/token_storage\";\nimport { applyThemesOnElement } from \"../common/dom/apply_themes_on_element\";\nimport { addSearchParam, extractSearchParam, extractSearchParamsObject } from \"../common/url/search-params\";\nimport { subscribeOne } from \"../common/util/subscribe-one\";\nimport \"../components/ha-card\";\nimport { hassUrl } from \"../data/auth\";\nimport { fetchInstallationType, fetchOnboardingOverview, onboardIntegrationStep } from \"../data/onboarding\";\nimport { subscribeUser } from \"../data/ws-user\";\nimport { litLocalizeLiteMixin } from \"../mixins/lit-localize-lite-mixin\";\nimport { HassElement } from \"../state/hass-element\";\nimport { storeState } from \"../util/ha-pref-storage\";\nimport { registerServiceWorker } from \"../util/register-service-worker\";\nimport \"./onboarding-analytics\";\nimport \"./onboarding-create-user\";\nimport \"./onboarding-loading\";\nimport \"./onboarding-welcome\";\nimport \"./onboarding-welcome-links\";\nimport { makeDialogManager } from \"../dialogs/make-dialog-manager\";\nimport { navigate } from \"../common/navigate\";\nimport { mainWindow } from \"../common/dom/get_main_window\";\nlet HaOnboarding = _decorate([customElement(\"ha-onboarding\")], function (_initialize, _litLocalizeLiteMixin) {\n  class HaOnboarding extends _litLocalizeLiteMixin {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaOnboarding,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"translationFragment\",\n      value() {\n        return \"page-onboarding\";\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_progress\",\n      value() {\n        return 0;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_loading\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_init\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_restoring\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_supervisor\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_steps\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_page\",\n      value() {\n        return extractSearchParam(\"page\");\n      }\n    }, {\n      kind: \"field\",\n      key: \"_mobileApp\",\n      value() {\n        return extractSearchParam(\"redirect_uri\") === \"homeassistant://auth-callback\";\n      }\n    }, {\n      kind: \"method\",\n      key: \"connectedCallback\",\n      value: function connectedCallback() {\n        _get(_getPrototypeOf(HaOnboarding.prototype), \"connectedCallback\", this).call(this);\n        mainWindow.addEventListener(\"location-changed\", this._updatePage);\n        mainWindow.addEventListener(\"popstate\", this._updatePage);\n      }\n    }, {\n      kind: \"method\",\n      key: \"disconnectedCallback\",\n      value: function disconnectedCallback() {\n        _get(_getPrototypeOf(HaOnboarding.prototype), \"disconnectedCallback\", this).call(this);\n        mainWindow.removeEventListener(\"location-changed\", this._updatePage);\n        mainWindow.removeEventListener(\"popstate\", this._updatePage);\n      }\n    }, {\n      kind: \"field\",\n      key: \"_updatePage\",\n      value() {\n        return () => {\n          this._page = extractSearchParam(\"page\");\n        };\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        return html`<mwc-linear-progress\n        .progress=${this._progress}\n      ></mwc-linear-progress>\n      <ha-card>\n        <div class=\"card-content\">${this._renderStep()}</div>\n      </ha-card>\n      ${this._init && !this._restoring ? html`<onboarding-welcome-links\n            .localize=${this.localize}\n            .mobileApp=${this._mobileApp}\n          ></onboarding-welcome-links>` : nothing}\n      <div class=\"footer\">\n        <ha-language-picker\n          .value=${this.language}\n          .label=${\"\"}\n          nativeName\n          @value-changed=${this._languageChanged}\n        ></ha-language-picker>\n        <a\n          href=\"https://www.home-assistant.io/getting-started/onboarding/\"\n          target=\"_blank\"\n          rel=\"noreferrer noopener\"\n          >${this.localize(\"ui.panel.page-onboarding.help\")}</a\n        >\n      </div>`;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_renderStep\",\n      value: function _renderStep() {\n        if (this._restoring) {\n          return html`<onboarding-restore-backup\n        .hass=${this.hass}\n        .localize=${this.localize}\n      >\n      </onboarding-restore-backup>`;\n        }\n        if (this._init) {\n          return html`<onboarding-welcome\n        .localize=${this.localize}\n        .language=${this.language}\n        .supervisor=${this._supervisor}\n      ></onboarding-welcome>`;\n        }\n        const step = this._curStep();\n        if (this._loading || !step) {\n          return html`<onboarding-loading></onboarding-loading> `;\n        }\n        if (step.step === \"user\") {\n          return html`<onboarding-create-user\n        .localize=${this.localize}\n        .language=${this.language}\n      >\n      </onboarding-create-user>`;\n        }\n        if (step.step === \"core_config\") {\n          return html`\n        <onboarding-core-config\n          .hass=${this.hass}\n          .onboardingLocalize=${this.localize}\n        ></onboarding-core-config>\n      `;\n        }\n        if (step.step === \"analytics\") {\n          return html`\n        <onboarding-analytics\n          .hass=${this.hass}\n          .localize=${this.localize}\n        ></onboarding-analytics>\n      `;\n        }\n        if (step.step === \"integration\") {\n          return html`\n        <onboarding-integrations\n          .hass=${this.hass}\n          .onboardingLocalize=${this.localize}\n        ></onboarding-integrations>\n      `;\n        }\n        return nothing;\n      }\n    }, {\n      kind: \"method\",\n      key: \"firstUpdated\",\n      value: function firstUpdated(changedProps) {\n        _get(_getPrototypeOf(HaOnboarding.prototype), \"firstUpdated\", this).call(this, changedProps);\n        this._fetchOnboardingSteps();\n        import(\"./onboarding-integrations\");\n        import(\"./onboarding-core-config\");\n        registerServiceWorker(this, false);\n        this.addEventListener(\"onboarding-step\", ev => this._handleStepDone(ev));\n        this.addEventListener(\"onboarding-progress\", ev => this._handleProgress(ev));\n        if (window.innerWidth > 450) {\n          import(\"../resources/particles\");\n        }\n        makeDialogManager(this, this.shadowRoot);\n        import(\"../components/ha-language-picker\");\n      }\n    }, {\n      kind: \"method\",\n      key: \"updated\",\n      value: function updated(changedProps) {\n        _get(_getPrototypeOf(HaOnboarding.prototype), \"updated\", this).call(this, changedProps);\n        if (changedProps.has(\"_page\")) {\n          this._restoring = this._page === \"restore_backup\";\n          if (this._page === null && this._steps && !this._steps[0].done) {\n            this._init = true;\n          }\n        }\n        if (changedProps.has(\"language\")) {\n          document.querySelector(\"html\").setAttribute(\"lang\", this.language);\n        }\n        if (changedProps.has(\"hass\")) {\n          const oldHass = changedProps.get(\"hass\");\n          this.hassChanged(this.hass, oldHass);\n          if ((oldHass === null || oldHass === void 0 ? void 0 : oldHass.themes) !== this.hass.themes) {\n            if (matchMedia(\"(prefers-color-scheme: dark)\").matches) {\n              applyThemesOnElement(document.documentElement, {\n                default_theme: \"default\",\n                default_dark_theme: null,\n                themes: {},\n                darkMode: true,\n                theme: \"default\"\n              }, undefined, undefined, true);\n            }\n          }\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_curStep\",\n      value: function _curStep() {\n        return this._steps ? this._steps.find(stp => !stp.done) : undefined;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_fetchInstallationType\",\n      value: async function _fetchInstallationType() {\n        try {\n          const response = await fetchInstallationType();\n          this._supervisor = [\"Indexline Technology OS\", \"Indexline Technology Supervised\"].includes(response.installation_type);\n          if (this._supervisor) {\n            // Only load if we have supervisor\n            import(\"./onboarding-restore-backup\");\n          }\n        } catch (err) {\n          // eslint-disable-next-line no-console\n          console.error(\"Something went wrong loading onboarding-restore-backup\", err);\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_fetchOnboardingSteps\",\n      value: async function _fetchOnboardingSteps() {\n        try {\n          const response = await (window.stepsPromise || fetchOnboardingOverview());\n          if (response.status === 401 || response.status === 404) {\n            // We don't load the component when onboarding is done\n            document.location.assign(\"/\");\n            return;\n          }\n          const steps = await response.json();\n          if (steps.every(step => step.done)) {\n            // Onboarding is done!\n            document.location.assign(\"/\");\n            return;\n          }\n          if (steps[0].done) {\n            // First step is already done, so we need to get auth somewhere else.\n            const auth = await getAuth({\n              hassUrl,\n              limitHassInstance: true,\n              saveTokens,\n              loadTokens: () => Promise.resolve(loadTokens())\n            });\n            history.replaceState(null, \"\", location.pathname);\n            await this._connectHass(auth);\n            const currentStep = steps.findIndex(stp => !stp.done);\n            const singelStepProgress = 1 / steps.length;\n            this._progress = currentStep * singelStepProgress + singelStepProgress;\n          } else {\n            this._init = true;\n            // Init screen needs to know the installation type.\n            this._fetchInstallationType();\n          }\n          this._steps = steps;\n        } catch (err) {\n          alert(\"Something went wrong loading onboarding, try refreshing\");\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleProgress\",\n      value: function _handleProgress(ev) {\n        const stepSize = 1 / this._steps.length;\n        if (ev.detail.increase) {\n          this._progress += ev.detail.increase * stepSize;\n        }\n        if (ev.detail.decrease) {\n          this._progress -= ev.detail.decrease * stepSize;\n        }\n        if (ev.detail.progress) {\n          this._progress = ev.detail.progress;\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleStepDone\",\n      value: async function _handleStepDone(ev) {\n        const stepResult = ev.detail;\n        this._steps = this._steps.map(step => step.step === stepResult.type ? {\n          ...step,\n          done: true\n        } : step);\n        if (stepResult.type === \"init\") {\n          this._init = false;\n          this._restoring = stepResult.result.restore;\n          if (!this._restoring) {\n            this._progress = 0.25;\n          } else {\n            navigate(`${location.pathname}?${addSearchParam({\n              page: \"restore_backup\"\n            })}`);\n          }\n        } else if (stepResult.type === \"user\") {\n          const result = stepResult.result;\n          this._loading = true;\n          this._progress = 0.5;\n          enableWrite();\n          try {\n            const auth = await getAuth({\n              hassUrl,\n              limitHassInstance: true,\n              authCode: result.auth_code,\n              saveTokens\n            });\n            await this._connectHass(auth);\n          } catch (err) {\n            alert(\"Ah snap, something went wrong!\");\n            location.reload();\n          } finally {\n            this._loading = false;\n          }\n        } else if (stepResult.type === \"core_config\") {\n          this._progress = 0.75;\n          // We do nothing\n        } else if (stepResult.type === \"analytics\") {\n          this._progress = 1;\n          // We do nothing\n        } else if (stepResult.type === \"integration\") {\n          this._loading = true;\n\n          // Determine if oauth redirect has been provided\n          const externalAuthParams = extractSearchParamsObject();\n          const authParams = externalAuthParams.client_id && externalAuthParams.redirect_uri ? externalAuthParams : {\n            client_id: genClientId(),\n            redirect_uri: `${location.protocol}//${location.host}/?auth_callback=1`,\n            state: btoa(JSON.stringify({\n              hassUrl: `${location.protocol}//${location.host}`,\n              clientId: genClientId()\n            }))\n          };\n          let result;\n          try {\n            result = await onboardIntegrationStep(this.hass, {\n              client_id: authParams.client_id,\n              redirect_uri: authParams.redirect_uri\n            });\n          } catch (err) {\n            this.hass.connection.close();\n            await this.hass.auth.revoke();\n            alert(`Unable to finish onboarding: ${err.message}`);\n            document.location.assign(\"/?\");\n            return;\n          }\n\n          // If we don't close the connection manually, the connection will be\n          // closed when we navigate away from the page. Firefox allows JS to\n          // continue to execute, and so HAWS will automatically reconnect once\n          // the connection is closed. However, since we revoke our token below,\n          // HAWS will reload the page, since that will trigger the auth flow.\n          // In Firefox, triggering a reload will overrule the navigation that\n          // was in progress.\n          this.hass.connection.close();\n\n          // Revoke current auth token.\n          await this.hass.auth.revoke();\n\n          // Build up the url to redirect to\n          let redirectUrl = authParams.redirect_uri;\n          redirectUrl += (redirectUrl.includes(\"?\") ? \"&\" : \"?\") + `code=${encodeURIComponent(result.auth_code)}`;\n          if (authParams.state) {\n            redirectUrl += `&state=${encodeURIComponent(authParams.state)}`;\n          }\n          document.location.assign(redirectUrl);\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_connectHass\",\n      value: async function _connectHass(auth) {\n        const conn = await createConnection({\n          auth\n        });\n        // Make sure config and user info is loaded before we initialize.\n        // It is needed for the core config step.\n        await Promise.all([subscribeOne(conn, subscribeConfig), subscribeOne(conn, subscribeUser)]);\n        this.initializeHass(auth, conn);\n        if (this.language && this.language !== this.hass.language) {\n          this._updateHass({\n            locale: {\n              ...this.hass.locale,\n              language: this.language\n            },\n            language: this.language,\n            selectedLanguage: this.language\n          });\n          storeState(this.hass);\n        }\n        // Load config strings for integrations\n        this._loadFragmentTranslations(this.hass.language, \"config\");\n        // Make sure hass is initialized + the config/user callbacks have called.\n        await new Promise(resolve => {\n          setTimeout(resolve, 0);\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_languageChanged\",\n      value: function _languageChanged(ev) {\n        const language = ev.detail.value;\n        this.language = language;\n        if (this.hass) {\n          this._updateHass({\n            locale: {\n              ...this.hass.locale,\n              language\n            },\n            language,\n            selectedLanguage: language\n          });\n          storeState(this.hass);\n        } else {\n          try {\n            localStorage.setItem(\"selectedLanguage\", JSON.stringify(language));\n          } catch (err) {\n            // Ignore\n          }\n        }\n      }\n    }, {\n      kind: \"field\",\n      static: true,\n      key: \"styles\",\n      value() {\n        return css`\n    mwc-linear-progress {\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      z-index: 10;\n    }\n    .footer {\n      padding-top: 8px;\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n    }\n    ha-language-picker {\n      display: block;\n      width: 200px;\n      border-radius: 4px;\n      overflow: hidden;\n      --ha-select-height: 40px;\n      --mdc-select-fill-color: none;\n      --mdc-select-label-ink-color: var(--primary-text-color, #212121);\n      --mdc-select-ink-color: var(--primary-text-color, #212121);\n      --mdc-select-idle-line-color: transparent;\n      --mdc-select-hover-line-color: transparent;\n      --mdc-select-dropdown-icon-color: var(--primary-text-color, #212121);\n      --mdc-shape-small: 0;\n    }\n    a {\n      text-decoration: none;\n      color: var(--primary-text-color);\n      margin-right: 16px;\n      margin-inline-end: 16px;\n      margin-inline-start: initial;\n    }\n  `;\n      }\n    }]\n  };\n}, litLocalizeLiteMixin(HassElement));","map":{"version":3,"names":["createConnection","genClientId","getAuth","subscribeConfig","css","html","nothing","customElement","property","state","enableWrite","loadTokens","saveTokens","applyThemesOnElement","addSearchParam","extractSearchParam","extractSearchParamsObject","subscribeOne","hassUrl","fetchInstallationType","fetchOnboardingOverview","onboardIntegrationStep","subscribeUser","litLocalizeLiteMixin","HassElement","storeState","registerServiceWorker","makeDialogManager","navigate","mainWindow","HaOnboarding","_decorate","_initialize","_litLocalizeLiteMixin","constructor","args","F","d","kind","decorators","attribute","key","value","connectedCallback","_get","_getPrototypeOf","prototype","call","addEventListener","_updatePage","disconnectedCallback","removeEventListener","_page","render","_progress","_renderStep","_init","_restoring","localize","_mobileApp","language","_languageChanged","hass","_supervisor","step","_curStep","_loading","firstUpdated","changedProps","_fetchOnboardingSteps","ev","_handleStepDone","_handleProgress","window","innerWidth","shadowRoot","updated","has","_steps","done","document","querySelector","setAttribute","oldHass","get","hassChanged","themes","matchMedia","matches","documentElement","default_theme","default_dark_theme","darkMode","theme","undefined","find","stp","_fetchInstallationType","response","includes","installation_type","err","console","error","stepsPromise","status","location","assign","steps","json","every","auth","limitHassInstance","Promise","resolve","history","replaceState","pathname","_connectHass","currentStep","findIndex","singelStepProgress","length","alert","stepSize","detail","increase","decrease","progress","stepResult","map","type","result","restore","page","authCode","auth_code","reload","externalAuthParams","authParams","client_id","redirect_uri","protocol","host","btoa","JSON","stringify","clientId","connection","close","revoke","message","redirectUrl","encodeURIComponent","conn","all","initializeHass","_updateHass","locale","selectedLanguage","_loadFragmentTranslations","setTimeout","localStorage","setItem","static"],"sources":["/workspaces/frontend/src/onboarding/ha-onboarding.ts"],"sourcesContent":["import \"@material/mwc-linear-progress/mwc-linear-progress\";\nimport {\n  Auth,\n  createConnection,\n  genClientId,\n  getAuth,\n  subscribeConfig,\n} from \"home-assistant-js-websocket\";\nimport { PropertyValues, css, html, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport {\n  enableWrite,\n  loadTokens,\n  saveTokens,\n} from \"../common/auth/token_storage\";\nimport { applyThemesOnElement } from \"../common/dom/apply_themes_on_element\";\nimport { HASSDomEvent } from \"../common/dom/fire_event\";\nimport {\n  addSearchParam,\n  extractSearchParam,\n  extractSearchParamsObject,\n} from \"../common/url/search-params\";\nimport { subscribeOne } from \"../common/util/subscribe-one\";\nimport \"../components/ha-card\";\nimport { AuthUrlSearchParams, hassUrl } from \"../data/auth\";\nimport {\n  OnboardingResponses,\n  OnboardingStep,\n  fetchInstallationType,\n  fetchOnboardingOverview,\n  onboardIntegrationStep,\n} from \"../data/onboarding\";\nimport { subscribeUser } from \"../data/ws-user\";\nimport { litLocalizeLiteMixin } from \"../mixins/lit-localize-lite-mixin\";\nimport { HassElement } from \"../state/hass-element\";\nimport { HomeAssistant } from \"../types\";\nimport { storeState } from \"../util/ha-pref-storage\";\nimport { registerServiceWorker } from \"../util/register-service-worker\";\nimport \"./onboarding-analytics\";\nimport \"./onboarding-create-user\";\nimport \"./onboarding-loading\";\nimport \"./onboarding-welcome\";\nimport \"./onboarding-welcome-links\";\nimport { makeDialogManager } from \"../dialogs/make-dialog-manager\";\nimport { navigate } from \"../common/navigate\";\nimport { mainWindow } from \"../common/dom/get_main_window\";\n\ntype OnboardingEvent =\n  | {\n      type: \"init\";\n      result: { restore: boolean };\n    }\n  | {\n      type: \"user\";\n      result: OnboardingResponses[\"user\"];\n    }\n  | {\n      type: \"core_config\";\n      result: OnboardingResponses[\"core_config\"];\n    }\n  | {\n      type: \"integration\";\n    }\n  | {\n      type: \"analytics\";\n    };\n\ninterface OnboardingProgressEvent {\n  increase?: number;\n  decrease?: number;\n  progress?: number;\n}\n\ndeclare global {\n  interface HASSDomEvents {\n    \"onboarding-step\": OnboardingEvent;\n    \"onboarding-progress\": OnboardingProgressEvent;\n  }\n\n  interface GlobalEventHandlersEventMap {\n    \"onboarding-step\": HASSDomEvent<OnboardingEvent>;\n    \"onboarding-progress\": HASSDomEvent<OnboardingProgressEvent>;\n  }\n}\n\n@customElement(\"ha-onboarding\")\nclass HaOnboarding extends litLocalizeLiteMixin(HassElement) {\n  @property({ attribute: false }) public hass?: HomeAssistant;\n\n  @property() public translationFragment = \"page-onboarding\";\n\n  @state() private _progress = 0;\n\n  @state() private _loading = false;\n\n  @state() private _init = false;\n\n  @state() private _restoring = false;\n\n  @state() private _supervisor?: boolean;\n\n  @state() private _steps?: OnboardingStep[];\n\n  @state() private _page = extractSearchParam(\"page\");\n\n  private _mobileApp =\n    extractSearchParam(\"redirect_uri\") === \"homeassistant://auth-callback\";\n\n  connectedCallback() {\n    super.connectedCallback();\n    mainWindow.addEventListener(\"location-changed\", this._updatePage);\n    mainWindow.addEventListener(\"popstate\", this._updatePage);\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    mainWindow.removeEventListener(\"location-changed\", this._updatePage);\n    mainWindow.removeEventListener(\"popstate\", this._updatePage);\n  }\n\n  private _updatePage = () => {\n    this._page = extractSearchParam(\"page\");\n  };\n\n  protected render() {\n    return html`<mwc-linear-progress\n        .progress=${this._progress}\n      ></mwc-linear-progress>\n      <ha-card>\n        <div class=\"card-content\">${this._renderStep()}</div>\n      </ha-card>\n      ${this._init && !this._restoring\n        ? html`<onboarding-welcome-links\n            .localize=${this.localize}\n            .mobileApp=${this._mobileApp}\n          ></onboarding-welcome-links>`\n        : nothing}\n      <div class=\"footer\">\n        <ha-language-picker\n          .value=${this.language}\n          .label=${\"\"}\n          nativeName\n          @value-changed=${this._languageChanged}\n        ></ha-language-picker>\n        <a\n          href=\"https://www.home-assistant.io/getting-started/onboarding/\"\n          target=\"_blank\"\n          rel=\"noreferrer noopener\"\n          >${this.localize(\"ui.panel.page-onboarding.help\")}</a\n        >\n      </div>`;\n  }\n\n  private _renderStep() {\n    if (this._restoring) {\n      return html`<onboarding-restore-backup\n        .hass=${this.hass}\n        .localize=${this.localize}\n      >\n      </onboarding-restore-backup>`;\n    }\n\n    if (this._init) {\n      return html`<onboarding-welcome\n        .localize=${this.localize}\n        .language=${this.language}\n        .supervisor=${this._supervisor}\n      ></onboarding-welcome>`;\n    }\n\n    const step = this._curStep()!;\n\n    if (this._loading || !step) {\n      return html`<onboarding-loading></onboarding-loading> `;\n    }\n    if (step.step === \"user\") {\n      return html`<onboarding-create-user\n        .localize=${this.localize}\n        .language=${this.language}\n      >\n      </onboarding-create-user>`;\n    }\n    if (step.step === \"core_config\") {\n      return html`\n        <onboarding-core-config\n          .hass=${this.hass}\n          .onboardingLocalize=${this.localize}\n        ></onboarding-core-config>\n      `;\n    }\n    if (step.step === \"analytics\") {\n      return html`\n        <onboarding-analytics\n          .hass=${this.hass}\n          .localize=${this.localize}\n        ></onboarding-analytics>\n      `;\n    }\n    if (step.step === \"integration\") {\n      return html`\n        <onboarding-integrations\n          .hass=${this.hass}\n          .onboardingLocalize=${this.localize}\n        ></onboarding-integrations>\n      `;\n    }\n    return nothing;\n  }\n\n  protected firstUpdated(changedProps: PropertyValues) {\n    super.firstUpdated(changedProps);\n    this._fetchOnboardingSteps();\n    import(\"./onboarding-integrations\");\n    import(\"./onboarding-core-config\");\n    registerServiceWorker(this, false);\n    this.addEventListener(\"onboarding-step\", (ev) => this._handleStepDone(ev));\n    this.addEventListener(\"onboarding-progress\", (ev) =>\n      this._handleProgress(ev)\n    );\n    if (window.innerWidth > 450) {\n      import(\"../resources/particles\");\n    }\n    makeDialogManager(this, this.shadowRoot!);\n    import(\"../components/ha-language-picker\");\n  }\n\n  protected updated(changedProps: PropertyValues) {\n    super.updated(changedProps);\n    if (changedProps.has(\"_page\")) {\n      this._restoring = this._page === \"restore_backup\";\n      if (this._page === null && this._steps && !this._steps[0].done) {\n        this._init = true;\n      }\n    }\n    if (changedProps.has(\"language\")) {\n      document.querySelector(\"html\")!.setAttribute(\"lang\", this.language!);\n    }\n    if (changedProps.has(\"hass\")) {\n      const oldHass = changedProps.get(\"hass\") as HomeAssistant | undefined;\n      this.hassChanged(this.hass!, oldHass);\n      if (oldHass?.themes !== this.hass!.themes) {\n        if (matchMedia(\"(prefers-color-scheme: dark)\").matches) {\n          applyThemesOnElement(\n            document.documentElement,\n            {\n              default_theme: \"default\",\n              default_dark_theme: null,\n              themes: {},\n              darkMode: true,\n              theme: \"default\",\n            },\n            undefined,\n            undefined,\n            true\n          );\n        }\n      }\n    }\n  }\n\n  private _curStep() {\n    return this._steps ? this._steps.find((stp) => !stp.done) : undefined;\n  }\n\n  private async _fetchInstallationType(): Promise<void> {\n    try {\n      const response = await fetchInstallationType();\n      this._supervisor = [\n        \"Indexline Technology OS\",\n        \"Indexline Technology Supervised\",\n      ].includes(response.installation_type);\n      if (this._supervisor) {\n        // Only load if we have supervisor\n        import(\"./onboarding-restore-backup\");\n      }\n    } catch (err: any) {\n      // eslint-disable-next-line no-console\n      console.error(\n        \"Something went wrong loading onboarding-restore-backup\",\n        err\n      );\n    }\n  }\n\n  private async _fetchOnboardingSteps() {\n    try {\n      const response = await (window.stepsPromise || fetchOnboardingOverview());\n\n      if (response.status === 401 || response.status === 404) {\n        // We don't load the component when onboarding is done\n        document.location.assign(\"/\");\n        return;\n      }\n\n      const steps: OnboardingStep[] = await response.json();\n\n      if (steps.every((step) => step.done)) {\n        // Onboarding is done!\n        document.location.assign(\"/\");\n        return;\n      }\n\n      if (steps[0].done) {\n        // First step is already done, so we need to get auth somewhere else.\n        const auth = await getAuth({\n          hassUrl,\n          limitHassInstance: true,\n          saveTokens,\n          loadTokens: () => Promise.resolve(loadTokens()),\n        });\n        history.replaceState(null, \"\", location.pathname);\n        await this._connectHass(auth);\n        const currentStep = steps.findIndex((stp) => !stp.done);\n        const singelStepProgress = 1 / steps.length;\n        this._progress = currentStep * singelStepProgress + singelStepProgress;\n      } else {\n        this._init = true;\n        // Init screen needs to know the installation type.\n        this._fetchInstallationType();\n      }\n\n      this._steps = steps;\n    } catch (err: any) {\n      alert(\"Something went wrong loading onboarding, try refreshing\");\n    }\n  }\n\n  private _handleProgress(ev: HASSDomEvent<OnboardingProgressEvent>) {\n    const stepSize = 1 / this._steps!.length;\n    if (ev.detail.increase) {\n      this._progress += ev.detail.increase * stepSize;\n    }\n    if (ev.detail.decrease) {\n      this._progress -= ev.detail.decrease * stepSize;\n    }\n    if (ev.detail.progress) {\n      this._progress = ev.detail.progress;\n    }\n  }\n\n  private async _handleStepDone(ev: HASSDomEvent<OnboardingEvent>) {\n    const stepResult = ev.detail;\n    this._steps = this._steps!.map((step) =>\n      step.step === stepResult.type ? { ...step, done: true } : step\n    );\n\n    if (stepResult.type === \"init\") {\n      this._init = false;\n      this._restoring = stepResult.result.restore;\n      if (!this._restoring) {\n        this._progress = 0.25;\n      } else {\n        navigate(\n          `${location.pathname}?${addSearchParam({ page: \"restore_backup\" })}`\n        );\n      }\n    } else if (stepResult.type === \"user\") {\n      const result = stepResult.result as OnboardingResponses[\"user\"];\n      this._loading = true;\n      this._progress = 0.5;\n      enableWrite();\n      try {\n        const auth = await getAuth({\n          hassUrl,\n          limitHassInstance: true,\n          authCode: result.auth_code,\n          saveTokens,\n        });\n        await this._connectHass(auth);\n      } catch (err: any) {\n        alert(\"Ah snap, something went wrong!\");\n        location.reload();\n      } finally {\n        this._loading = false;\n      }\n    } else if (stepResult.type === \"core_config\") {\n      this._progress = 0.75;\n      // We do nothing\n    } else if (stepResult.type === \"analytics\") {\n      this._progress = 1;\n      // We do nothing\n    } else if (stepResult.type === \"integration\") {\n      this._loading = true;\n\n      // Determine if oauth redirect has been provided\n      const externalAuthParams =\n        extractSearchParamsObject() as AuthUrlSearchParams;\n      const authParams =\n        externalAuthParams.client_id && externalAuthParams.redirect_uri\n          ? externalAuthParams\n          : {\n              client_id: genClientId(),\n              redirect_uri: `${location.protocol}//${location.host}/?auth_callback=1`,\n              state: btoa(\n                JSON.stringify({\n                  hassUrl: `${location.protocol}//${location.host}`,\n                  clientId: genClientId(),\n                })\n              ),\n            };\n\n      let result: OnboardingResponses[\"integration\"];\n\n      try {\n        result = await onboardIntegrationStep(this.hass!, {\n          client_id: authParams.client_id!,\n          redirect_uri: authParams.redirect_uri!,\n        });\n      } catch (err: any) {\n        this.hass!.connection.close();\n        await this.hass!.auth.revoke();\n\n        alert(`Unable to finish onboarding: ${err.message}`);\n\n        document.location.assign(\"/?\");\n        return;\n      }\n\n      // If we don't close the connection manually, the connection will be\n      // closed when we navigate away from the page. Firefox allows JS to\n      // continue to execute, and so HAWS will automatically reconnect once\n      // the connection is closed. However, since we revoke our token below,\n      // HAWS will reload the page, since that will trigger the auth flow.\n      // In Firefox, triggering a reload will overrule the navigation that\n      // was in progress.\n      this.hass!.connection.close();\n\n      // Revoke current auth token.\n      await this.hass!.auth.revoke();\n\n      // Build up the url to redirect to\n      let redirectUrl = authParams.redirect_uri!;\n      redirectUrl +=\n        (redirectUrl.includes(\"?\") ? \"&\" : \"?\") +\n        `code=${encodeURIComponent(result.auth_code)}`;\n\n      if (authParams.state) {\n        redirectUrl += `&state=${encodeURIComponent(authParams.state)}`;\n      }\n\n      document.location.assign(redirectUrl);\n    }\n  }\n\n  private async _connectHass(auth: Auth) {\n    const conn = await createConnection({ auth });\n    // Make sure config and user info is loaded before we initialize.\n    // It is needed for the core config step.\n    await Promise.all([\n      subscribeOne(conn, subscribeConfig),\n      subscribeOne(conn, subscribeUser),\n    ]);\n    this.initializeHass(auth, conn);\n    if (this.language && this.language !== this.hass!.language) {\n      this._updateHass({\n        locale: { ...this.hass!.locale, language: this.language },\n        language: this.language,\n        selectedLanguage: this.language,\n      });\n      storeState(this.hass!);\n    }\n    // Load config strings for integrations\n    (this as any)._loadFragmentTranslations(this.hass!.language, \"config\");\n    // Make sure hass is initialized + the config/user callbacks have called.\n    await new Promise((resolve) => {\n      setTimeout(resolve, 0);\n    });\n  }\n\n  private _languageChanged(ev: CustomEvent) {\n    const language = ev.detail.value;\n    this.language = language;\n    if (this.hass) {\n      this._updateHass({\n        locale: { ...this.hass!.locale, language },\n        language,\n        selectedLanguage: language,\n      });\n      storeState(this.hass!);\n    } else {\n      try {\n        localStorage.setItem(\"selectedLanguage\", JSON.stringify(language));\n      } catch (err: any) {\n        // Ignore\n      }\n    }\n  }\n\n  static styles = css`\n    mwc-linear-progress {\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      z-index: 10;\n    }\n    .footer {\n      padding-top: 8px;\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n    }\n    ha-language-picker {\n      display: block;\n      width: 200px;\n      border-radius: 4px;\n      overflow: hidden;\n      --ha-select-height: 40px;\n      --mdc-select-fill-color: none;\n      --mdc-select-label-ink-color: var(--primary-text-color, #212121);\n      --mdc-select-ink-color: var(--primary-text-color, #212121);\n      --mdc-select-idle-line-color: transparent;\n      --mdc-select-hover-line-color: transparent;\n      --mdc-select-dropdown-icon-color: var(--primary-text-color, #212121);\n      --mdc-shape-small: 0;\n    }\n    a {\n      text-decoration: none;\n      color: var(--primary-text-color);\n      margin-right: 16px;\n      margin-inline-end: 16px;\n      margin-inline-start: initial;\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-onboarding\": HaOnboarding;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}