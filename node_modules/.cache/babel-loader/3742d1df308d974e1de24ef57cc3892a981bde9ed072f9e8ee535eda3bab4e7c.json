{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport \"@material/mwc-button\";\nconst mdiContentCopy = \"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { createCloseHeading } from \"../../components/ha-dialog\";\nimport \"../../components/ha-textfield\";\nimport \"../../components/ha-icon-button\";\nimport { haStyleDialog } from \"../../resources/styles\";\nimport { copyToClipboard } from \"../../common/util/copy-clipboard\";\nimport { showToast } from \"../../util/toast\";\nconst QR_LOGO_URL = \"/static/icons/favicon-192x192.png\";\nexport let HaLongLivedAccessTokenDialog = _decorate([customElement(\"ha-long-lived-access-token-dialog\")], function (_initialize, _LitElement) {\n  class HaLongLivedAccessTokenDialog extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaLongLivedAccessTokenDialog,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_params\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_qrCode\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"showDialog\",\n      value: function showDialog(params) {\n        this._params = params;\n      }\n    }, {\n      kind: \"method\",\n      key: \"closeDialog\",\n      value: function closeDialog() {\n        this._params = undefined;\n        this._qrCode = undefined;\n        fireEvent(this, \"dialog-closed\", {\n          dialog: this.localName\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this._params || !this._params.token) {\n          return nothing;\n        }\n        return html`\n      <ha-dialog\n        open\n        hideActions\n        .heading=${createCloseHeading(this.hass, this._params.name)}\n        @closed=${this.closeDialog}\n      >\n        <div>\n          <ha-textfield\n            dialogInitialFocus\n            .value=${this._params.token}\n            .label=${this.hass.localize(\"ui.panel.profile.long_lived_access_tokens.prompt_copy_token\")}\n            type=\"text\"\n            iconTrailing\n            readOnly\n          >\n            <ha-icon-button\n              @click=${this._copyToken}\n              slot=\"trailingIcon\"\n              .path=${mdiContentCopy}\n            ></ha-icon-button>\n          </ha-textfield>\n          <div id=\"qr\">\n            ${this._qrCode ? this._qrCode : html`\n                  <mwc-button @click=${this._generateQR}>\n                    Generate QR code\n                  </mwc-button>\n                `}\n          </div>\n        </div>\n      </ha-dialog>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_copyToken\",\n      value: async function _copyToken(ev) {\n        const textField = ev.target.parentElement;\n        await copyToClipboard(textField.value);\n        showToast(this, {\n          message: this.hass.localize(\"ui.common.copied_clipboard\")\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_generateQR\",\n      value: async function _generateQR() {\n        const qrcode = await import(\"qrcode\");\n        const canvas = await qrcode.toCanvas(this._params.token, {\n          width: 180,\n          errorCorrectionLevel: \"Q\"\n        });\n        const context = canvas.getContext(\"2d\");\n        const imageObj = new Image();\n        imageObj.src = QR_LOGO_URL;\n        await new Promise(resolve => {\n          imageObj.onload = resolve;\n        });\n        context === null || context === void 0 || context.drawImage(imageObj, canvas.width / 3, canvas.height / 3, canvas.width / 3, canvas.height / 3);\n        this._qrCode = html`<img\n        alt=${this.hass.localize(\"ui.panel.profile.long_lived_access_tokens.qr_code_image\", {\n          name: this._params.name\n        })}\n        src=${canvas.toDataURL()}\n      ></img>`;\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [haStyleDialog, css`\n        #qr {\n          text-align: center;\n        }\n        ha-textfield {\n          display: block;\n          --textfield-icon-trailing-padding: 0;\n        }\n        ha-textfield > ha-icon-button {\n          position: relative;\n          right: -8px;\n          --mdc-icon-button-size: 36px;\n          --mdc-icon-size: 20px;\n          color: var(--secondary-text-color);\n          inset-inline-start: initial;\n          inset-inline-end: -8px;\n          direction: var(--direction);\n        }\n      `];\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["mdiContentCopy","css","html","LitElement","nothing","customElement","property","state","fireEvent","createCloseHeading","haStyleDialog","copyToClipboard","showToast","QR_LOGO_URL","HaLongLivedAccessTokenDialog","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","showDialog","params","_params","closeDialog","undefined","_qrCode","dialog","localName","render","token","hass","name","localize","_copyToken","_generateQR","ev","textField","target","parentElement","message","qrcode","canvas","toCanvas","width","errorCorrectionLevel","context","getContext","imageObj","Image","src","Promise","resolve","onload","drawImage","height","toDataURL","static","styles"],"sources":["/workspaces/frontend/src/panels/profile/ha-long-lived-access-token-dialog.ts"],"sourcesContent":["import \"@material/mwc-button\";\nimport { mdiContentCopy } from \"@mdi/js\";\nimport {\n  css,\n  CSSResultGroup,\n  html,\n  LitElement,\n  TemplateResult,\n  nothing,\n} from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { createCloseHeading } from \"../../components/ha-dialog\";\nimport \"../../components/ha-textfield\";\nimport \"../../components/ha-icon-button\";\nimport { haStyleDialog } from \"../../resources/styles\";\nimport type { HomeAssistant } from \"../../types\";\nimport { LongLivedAccessTokenDialogParams } from \"./show-long-lived-access-token-dialog\";\nimport type { HaTextField } from \"../../components/ha-textfield\";\nimport { copyToClipboard } from \"../../common/util/copy-clipboard\";\nimport { showToast } from \"../../util/toast\";\n\nconst QR_LOGO_URL = \"/static/icons/favicon-192x192.png\";\n\n@customElement(\"ha-long-lived-access-token-dialog\")\nexport class HaLongLivedAccessTokenDialog extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @state() private _params?: LongLivedAccessTokenDialogParams;\n\n  @state() private _qrCode?: TemplateResult;\n\n  public showDialog(params: LongLivedAccessTokenDialogParams): void {\n    this._params = params;\n  }\n\n  public closeDialog() {\n    this._params = undefined;\n    this._qrCode = undefined;\n    fireEvent(this, \"dialog-closed\", { dialog: this.localName });\n  }\n\n  protected render() {\n    if (!this._params || !this._params.token) {\n      return nothing;\n    }\n\n    return html`\n      <ha-dialog\n        open\n        hideActions\n        .heading=${createCloseHeading(this.hass, this._params.name)}\n        @closed=${this.closeDialog}\n      >\n        <div>\n          <ha-textfield\n            dialogInitialFocus\n            .value=${this._params.token}\n            .label=${this.hass.localize(\n              \"ui.panel.profile.long_lived_access_tokens.prompt_copy_token\"\n            )}\n            type=\"text\"\n            iconTrailing\n            readOnly\n          >\n            <ha-icon-button\n              @click=${this._copyToken}\n              slot=\"trailingIcon\"\n              .path=${mdiContentCopy}\n            ></ha-icon-button>\n          </ha-textfield>\n          <div id=\"qr\">\n            ${this._qrCode\n              ? this._qrCode\n              : html`\n                  <mwc-button @click=${this._generateQR}>\n                    Generate QR code\n                  </mwc-button>\n                `}\n          </div>\n        </div>\n      </ha-dialog>\n    `;\n  }\n\n  private async _copyToken(ev): Promise<void> {\n    const textField = ev.target.parentElement as HaTextField;\n    await copyToClipboard(textField.value);\n    showToast(this, {\n      message: this.hass.localize(\"ui.common.copied_clipboard\"),\n    });\n  }\n\n  private async _generateQR() {\n    const qrcode = await import(\"qrcode\");\n    const canvas = await qrcode.toCanvas(this._params!.token, {\n      width: 180,\n      errorCorrectionLevel: \"Q\",\n    });\n    const context = canvas.getContext(\"2d\");\n\n    const imageObj = new Image();\n    imageObj.src = QR_LOGO_URL;\n    await new Promise((resolve) => {\n      imageObj.onload = resolve;\n    });\n    context?.drawImage(\n      imageObj,\n      canvas.width / 3,\n      canvas.height / 3,\n      canvas.width / 3,\n      canvas.height / 3\n    );\n\n    this._qrCode = html`<img\n        alt=${this.hass.localize(\n          \"ui.panel.profile.long_lived_access_tokens.qr_code_image\",\n          { name: this._params!.name }\n        )}\n        src=${canvas.toDataURL()}\n      ></img>`;\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyleDialog,\n      css`\n        #qr {\n          text-align: center;\n        }\n        ha-textfield {\n          display: block;\n          --textfield-icon-trailing-padding: 0;\n        }\n        ha-textfield > ha-icon-button {\n          position: relative;\n          right: -8px;\n          --mdc-icon-button-size: 36px;\n          --mdc-icon-size: 20px;\n          color: var(--secondary-text-color);\n          inset-inline-start: initial;\n          inset-inline-end: -8px;\n          direction: var(--direction);\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-long-lived-access-token-dialog\": HaLongLivedAccessTokenDialog;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}