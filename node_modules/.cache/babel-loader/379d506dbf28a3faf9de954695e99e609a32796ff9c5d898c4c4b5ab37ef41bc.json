{"ast":null,"code":"/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nvar legacyCustomElement = function legacyCustomElement(tagName, clazz) {\n  customElements.define(tagName, clazz);\n  // Cast as any because TS doesn't recognize the return type as being a\n  // subtype of the decorated class when clazz is typed as\n  // `Constructor<HTMLElement>` for some reason.\n  // `Constructor<HTMLElement>` is helpful to make sure the decorator is\n  // applied to elements however.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return clazz;\n};\nvar standardCustomElement = function standardCustomElement(tagName, descriptor) {\n  var kind = descriptor.kind,\n    elements = descriptor.elements;\n  return {\n    kind: kind,\n    elements: elements,\n    // This callback is called once the class is otherwise fully defined\n    finisher: function finisher(clazz) {\n      customElements.define(tagName, clazz);\n    }\n  };\n};\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * ```js\n * @customElement('my-element')\n * class MyElement extends LitElement {\n *   render() {\n *     return html``;\n *   }\n * }\n * ```\n * @category Decorator\n * @param tagName The tag name of the custom element to define.\n */\nexport var customElement = function customElement(tagName) {\n  return function (classOrDescriptor) {\n    return typeof classOrDescriptor === 'function' ? legacyCustomElement(tagName, classOrDescriptor) : standardCustomElement(tagName, classOrDescriptor);\n  };\n};","map":{"version":3,"names":["legacyCustomElement","tagName","clazz","customElements","define","standardCustomElement","descriptor","kind","elements","finisher","customElement","classOrDescriptor"],"sources":["../../src/decorators/custom-element.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\nimport {Constructor, ClassDescriptor} from './base.js';\n\n/**\n * Allow for custom element classes with private constructors\n */\ntype CustomElementClass = Omit<typeof HTMLElement, 'new'>;\n\nconst legacyCustomElement = (tagName: string, clazz: CustomElementClass) => {\n  customElements.define(tagName, clazz as CustomElementConstructor);\n  // Cast as any because TS doesn't recognize the return type as being a\n  // subtype of the decorated class when clazz is typed as\n  // `Constructor<HTMLElement>` for some reason.\n  // `Constructor<HTMLElement>` is helpful to make sure the decorator is\n  // applied to elements however.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return clazz as any;\n};\n\nconst standardCustomElement = (\n  tagName: string,\n  descriptor: ClassDescriptor\n) => {\n  const {kind, elements} = descriptor;\n  return {\n    kind,\n    elements,\n    // This callback is called once the class is otherwise fully defined\n    finisher(clazz: Constructor<HTMLElement>) {\n      customElements.define(tagName, clazz);\n    },\n  };\n};\n\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * ```js\n * @customElement('my-element')\n * class MyElement extends LitElement {\n *   render() {\n *     return html``;\n *   }\n * }\n * ```\n * @category Decorator\n * @param tagName The tag name of the custom element to define.\n */\nexport const customElement =\n  (tagName: string) =>\n  (classOrDescriptor: CustomElementClass | ClassDescriptor) =>\n    typeof classOrDescriptor === 'function'\n      ? legacyCustomElement(tagName, classOrDescriptor)\n      : standardCustomElement(tagName, classOrDescriptor as ClassDescriptor);\n"],"mappings":"AAAA;;;;;AAmBA,IAAMA,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAIC,OAAe,EAAEC,KAAyB,EAAI;EACzEC,cAAc,CAACC,MAAM,CAACH,OAAO,EAAEC,KAAiC,CAAC;EACjE;EACA;EACA;EACA;EACA;EACA;EACA,OAAOA,KAAY;AACrB,CAAC;AAED,IAAMG,qBAAqB,GAAG,SAAxBA,qBAAqBA,CACzBJ,OAAe,EACfK,UAA2B,EACzB;EACF,IAAOC,IAAI,GAAcD,UAAU,CAA5BC,IAAI;IAAEC,QAAQ,GAAIF,UAAU,CAAtBE,QAAQ;EACrB,OAAO;IACLD,IAAI,EAAJA,IAAI;IACJC,QAAQ,EAARA,QAAQ;IACR;IACAC,QAAQ,WAAAA,SAACP,KAA+B;MACtCC,cAAc,CAACC,MAAM,CAACH,OAAO,EAAEC,KAAK,CAAC;IACvC;GACD;AACH,CAAC;AAED;;;;;;;;;;;;;;AAcA,OAAO,IAAMQ,aAAa,GACxB,SADWA,aAAaA,CACvBT,OAAe;EAAA,OAChB,UAACU,iBAAuD;IAAA,OACtD,OAAOA,iBAAiB,KAAK,UAAU,GACnCX,mBAAmB,CAACC,OAAO,EAAEU,iBAAiB,CAAC,GAC/CN,qBAAqB,CAACJ,OAAO,EAAEU,iBAAoC,CAAC;EAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}