{"ast":null,"code":"/*\nAll commands that do UI stuff need to be loaded from the app bundle as UI stuff\nin core bundle slows things down and causes duplicate registration.\n\nThis is the entry point for providing external app stuff from app entrypoint.\n*/\n\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { mainWindow } from \"../common/dom/get_main_window\";\nimport { showAutomationEditor } from \"../data/automation\";\nexport var attachExternalToApp = function attachExternalToApp(hassMainEl) {\n  window.addEventListener(\"haptic\", function (ev) {\n    return hassMainEl.hass.auth.external.fireMessage({\n      type: \"haptic\",\n      payload: {\n        hapticType: ev.detail\n      }\n    });\n  });\n  hassMainEl.hass.auth.external.addCommandHandler(function (msg) {\n    return handleExternalMessage(hassMainEl, msg);\n  });\n};\nvar handleExternalMessage = function handleExternalMessage(hassMainEl, msg) {\n  var bus = hassMainEl.hass.auth.external;\n  if (msg.command === \"restart\") {\n    hassMainEl.hass.connection.reconnect(true);\n    bus.fireMessage({\n      id: msg.id,\n      type: \"result\",\n      success: true,\n      result: null\n    });\n  } else if (msg.command === \"notifications/show\") {\n    fireEvent(hassMainEl, \"hass-show-notifications\");\n    bus.fireMessage({\n      id: msg.id,\n      type: \"result\",\n      success: true,\n      result: null\n    });\n  } else if (msg.command === \"sidebar/toggle\") {\n    var _mainWindow$history$s;\n    if ((_mainWindow$history$s = mainWindow.history.state) !== null && _mainWindow$history$s !== void 0 && _mainWindow$history$s.open) {\n      bus.fireMessage({\n        id: msg.id,\n        type: \"result\",\n        success: false,\n        error: {\n          code: \"not_allowed\",\n          message: \"dialog open\"\n        }\n      });\n      return true;\n    }\n    fireEvent(hassMainEl, \"hass-toggle-menu\");\n    bus.fireMessage({\n      id: msg.id,\n      type: \"result\",\n      success: true,\n      result: null\n    });\n  } else if (msg.command === \"sidebar/show\") {\n    var _mainWindow$history$s2;\n    if ((_mainWindow$history$s2 = mainWindow.history.state) !== null && _mainWindow$history$s2 !== void 0 && _mainWindow$history$s2.open) {\n      bus.fireMessage({\n        id: msg.id,\n        type: \"result\",\n        success: false,\n        error: {\n          code: \"not_allowed\",\n          message: \"dialog open\"\n        }\n      });\n      return true;\n    }\n    fireEvent(hassMainEl, \"hass-toggle-menu\", {\n      open: true\n    });\n    bus.fireMessage({\n      id: msg.id,\n      type: \"result\",\n      success: true,\n      result: null\n    });\n  } else if (msg.command === \"automation/editor/show\") {\n    var _msg$payload;\n    showAutomationEditor((_msg$payload = msg.payload) === null || _msg$payload === void 0 ? void 0 : _msg$payload.config);\n    bus.fireMessage({\n      id: msg.id,\n      type: \"result\",\n      success: true,\n      result: null\n    });\n  } else {\n    return false;\n  }\n  return true;\n};","map":{"version":3,"names":["fireEvent","mainWindow","showAutomationEditor","attachExternalToApp","hassMainEl","window","addEventListener","ev","hass","auth","external","fireMessage","type","payload","hapticType","detail","addCommandHandler","msg","handleExternalMessage","bus","command","connection","reconnect","id","success","result","_mainWindow$history$s","history","state","open","error","code","message","_mainWindow$history$s2","_msg$payload","config"],"sources":["/workspaces/frontend/src/external_app/external_app_entrypoint.ts"],"sourcesContent":["/*\nAll commands that do UI stuff need to be loaded from the app bundle as UI stuff\nin core bundle slows things down and causes duplicate registration.\n\nThis is the entry point for providing external app stuff from app entrypoint.\n*/\n\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { mainWindow } from \"../common/dom/get_main_window\";\nimport { showAutomationEditor } from \"../data/automation\";\nimport { HomeAssistantMain } from \"../layouts/home-assistant-main\";\nimport type { EMIncomingMessageCommands } from \"./external_messaging\";\n\nexport const attachExternalToApp = (hassMainEl: HomeAssistantMain) => {\n  window.addEventListener(\"haptic\", (ev) =>\n    hassMainEl.hass.auth.external!.fireMessage({\n      type: \"haptic\",\n      payload: { hapticType: ev.detail },\n    })\n  );\n\n  hassMainEl.hass.auth.external!.addCommandHandler((msg) =>\n    handleExternalMessage(hassMainEl, msg)\n  );\n};\n\nconst handleExternalMessage = (\n  hassMainEl: HomeAssistantMain,\n  msg: EMIncomingMessageCommands\n): boolean => {\n  const bus = hassMainEl.hass.auth.external!;\n\n  if (msg.command === \"restart\") {\n    hassMainEl.hass.connection.reconnect(true);\n    bus.fireMessage({\n      id: msg.id,\n      type: \"result\",\n      success: true,\n      result: null,\n    });\n  } else if (msg.command === \"notifications/show\") {\n    fireEvent(hassMainEl, \"hass-show-notifications\");\n    bus.fireMessage({\n      id: msg.id,\n      type: \"result\",\n      success: true,\n      result: null,\n    });\n  } else if (msg.command === \"sidebar/toggle\") {\n    if (mainWindow.history.state?.open) {\n      bus.fireMessage({\n        id: msg.id,\n        type: \"result\",\n        success: false,\n        error: { code: \"not_allowed\", message: \"dialog open\" },\n      });\n      return true;\n    }\n    fireEvent(hassMainEl, \"hass-toggle-menu\");\n    bus.fireMessage({\n      id: msg.id,\n      type: \"result\",\n      success: true,\n      result: null,\n    });\n  } else if (msg.command === \"sidebar/show\") {\n    if (mainWindow.history.state?.open) {\n      bus.fireMessage({\n        id: msg.id,\n        type: \"result\",\n        success: false,\n        error: { code: \"not_allowed\", message: \"dialog open\" },\n      });\n      return true;\n    }\n    fireEvent(hassMainEl, \"hass-toggle-menu\", { open: true });\n    bus.fireMessage({\n      id: msg.id,\n      type: \"result\",\n      success: true,\n      result: null,\n    });\n  } else if (msg.command === \"automation/editor/show\") {\n    showAutomationEditor(msg.payload?.config);\n    bus.fireMessage({\n      id: msg.id,\n      type: \"result\",\n      success: true,\n      result: null,\n    });\n  } else {\n    return false;\n  }\n\n  return true;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}