{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, state } from \"lit/decorators\";\nimport { DOMAINS_TOGGLE } from \"../../../common/const\";\nimport { applyThemesOnElement } from \"../../../common/dom/apply_themes_on_element\";\nimport { computeDomain } from \"../../../common/entity/compute_domain\";\nimport \"../../../components/ha-card\";\nimport { computeCardSize } from \"../common/compute-card-size\";\nimport { findEntities } from \"../common/find-entities\";\nimport { processConfigEntities } from \"../common/process-config-entities\";\nimport \"../components/hui-entities-toggle\";\nimport { createHeaderFooterElement } from \"../create-element/create-header-footer-element\";\nimport { createRowElement } from \"../create-element/create-row-element\";\nlet HuiEntitiesCard = _decorate([customElement(\"hui-entities-card\")], function (_initialize, _LitElement) {\n  class HuiEntitiesCard extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HuiEntitiesCard,\n    d: [{\n      kind: \"method\",\n      static: true,\n      key: \"getConfigElement\",\n      value: async function getConfigElement() {\n        await import(\"../editor/config-elements/hui-entities-card-editor\");\n        return document.createElement(\"hui-entities-card-editor\");\n      }\n    }, {\n      kind: \"method\",\n      static: true,\n      key: \"getStubConfig\",\n      value: function getStubConfig(hass, entities, entitiesFallback) {\n        const maxEntities = 3;\n        const foundEntities = findEntities(hass, maxEntities, entities, entitiesFallback, [\"light\", \"switch\", \"sensor\"]);\n        return {\n          type: \"entities\",\n          entities: foundEntities\n        };\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_config\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_configEntities\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_showHeaderToggle\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_headerElement\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_footerElement\",\n      value: void 0\n    }, {\n      kind: \"set\",\n      key: \"hass\",\n      value: function hass(_hass) {\n        var _this$shadowRoot, _this$shadowRoot2;\n        this._hass = _hass;\n        (_this$shadowRoot = this.shadowRoot) === null || _this$shadowRoot === void 0 || _this$shadowRoot.querySelectorAll(\"#states > div > *\").forEach(element => {\n          element.hass = _hass;\n        });\n        if (this._headerElement) {\n          this._headerElement.hass = _hass;\n        }\n        if (this._footerElement) {\n          this._footerElement.hass = _hass;\n        }\n        const entitiesToggle = (_this$shadowRoot2 = this.shadowRoot) === null || _this$shadowRoot2 === void 0 ? void 0 : _this$shadowRoot2.querySelector(\"hui-entities-toggle\");\n        if (entitiesToggle) {\n          entitiesToggle.hass = _hass;\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"getCardSize\",\n      value: async function getCardSize() {\n        if (!this._config) {\n          return 0;\n        }\n        // +1 for the header\n        let size = (this._config.title || this._showHeaderToggle ? 2 : 0) + (this._config.entities.length || 1);\n        if (this._headerElement) {\n          const headerSize = computeCardSize(this._headerElement);\n          size += headerSize instanceof Promise ? await headerSize : headerSize;\n        }\n        if (this._footerElement) {\n          const footerSize = computeCardSize(this._footerElement);\n          size += footerSize instanceof Promise ? await footerSize : footerSize;\n        }\n        return size;\n      }\n    }, {\n      kind: \"method\",\n      key: \"setConfig\",\n      value: function setConfig(config) {\n        if (!config.entities || !Array.isArray(config.entities)) {\n          throw new Error(\"Entities must be specified\");\n        }\n        const entities = processConfigEntities(config.entities);\n        this._config = config;\n        this._configEntities = entities;\n        if (config.title !== undefined && config.show_header_toggle === undefined) {\n          // Default value is show toggle if we can at least toggle 2 entities.\n          let toggleable = 0;\n          for (const rowConf of entities) {\n            if (!(\"entity\" in rowConf)) {\n              continue;\n            }\n            toggleable += Number(DOMAINS_TOGGLE.has(computeDomain(rowConf.entity)));\n            if (toggleable === 2) {\n              break;\n            }\n          }\n          this._showHeaderToggle = toggleable === 2;\n        } else {\n          this._showHeaderToggle = config.show_header_toggle;\n        }\n        if (this._config.header) {\n          this._headerElement = createHeaderFooterElement(this._config.header);\n          this._headerElement.type = \"header\";\n          if (this._hass) {\n            this._headerElement.hass = this._hass;\n          }\n        } else {\n          this._headerElement = undefined;\n        }\n        if (this._config.footer) {\n          this._footerElement = createHeaderFooterElement(this._config.footer);\n          this._footerElement.type = \"footer\";\n          if (this._hass) {\n            this._footerElement.hass = this._hass;\n          }\n        } else {\n          this._footerElement = undefined;\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"updated\",\n      value: function updated(changedProps) {\n        _get(_getPrototypeOf(HuiEntitiesCard.prototype), \"updated\", this).call(this, changedProps);\n        if (!this._config || !this._hass) {\n          return;\n        }\n        const oldHass = changedProps.get(\"_hass\");\n        const oldConfig = changedProps.get(\"_config\");\n        if (changedProps.has(\"_hass\") && (!oldHass || oldHass.themes !== this._hass.themes) || changedProps.has(\"_config\") && (!oldConfig || oldConfig.theme !== this._config.theme)) {\n          applyThemesOnElement(this, this._hass.themes, this._config.theme);\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this._config || !this._hass) {\n          return nothing;\n        }\n        return html`\n      <ha-card>\n        ${this._headerElement ? html`<div class=\"header-footer header\">${this._headerElement}</div>` : \"\"}\n        ${!this._config.title && !this._showHeaderToggle && !this._config.icon ? \"\" : html`\n              <h1 class=\"card-header\">\n                <div class=\"name\">\n                  ${this._config.icon ? html`\n                        <ha-icon\n                          class=\"icon\"\n                          .icon=${this._config.icon}\n                        ></ha-icon>\n                      ` : \"\"}\n                  ${this._config.title}\n                </div>\n                ${!this._showHeaderToggle ? nothing : html`\n                      <hui-entities-toggle\n                        .hass=${this._hass}\n                        .entities=${this._configEntities.filter(conf => \"entity\" in conf).map(conf => conf.entity)}\n                      ></hui-entities-toggle>\n                    `}\n              </h1>\n            `}\n        <div id=\"states\" class=\"card-content\">\n          ${this._configEntities.map(entityConf => this.renderEntity(entityConf))}\n        </div>\n\n        ${this._footerElement ? html`<div class=\"header-footer footer\">${this._footerElement}</div>` : \"\"}\n      </ha-card>\n    `;\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css`\n      ha-card {\n        height: 100%;\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n      }\n      .card-header {\n        display: flex;\n        justify-content: space-between;\n      }\n\n      .card-header .name {\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n      }\n\n      #states {\n        flex: 1;\n      }\n\n      #states > * {\n        margin: 8px 0;\n      }\n\n      #states > *:first-child {\n        margin-top: 0;\n      }\n\n      #states > *:last-child {\n        margin-bottom: 0;\n      }\n\n      #states > div > * {\n        overflow: clip visible;\n      }\n\n      #states > div {\n        position: relative;\n      }\n\n      .icon {\n        padding: 0px 18px 0px 8px;\n      }\n\n      .header {\n        border-top-left-radius: var(--ha-card-border-radius, 12px);\n        border-top-right-radius: var(--ha-card-border-radius, 12px);\n        margin-bottom: 16px;\n        overflow: hidden;\n      }\n\n      .footer {\n        border-bottom-left-radius: var(--ha-card-border-radius, 12px);\n        border-bottom-right-radius: var(--ha-card-border-radius, 12px);\n        margin-top: -16px;\n        overflow: hidden;\n      }\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"renderEntity\",\n      value: function renderEntity(entityConf) {\n        const element = createRowElement((!(\"type\" in entityConf) || entityConf.type === \"conditional\") && this._config.state_color ? {\n          state_color: true,\n          ...entityConf\n        } : entityConf);\n        if (this._hass) {\n          element.hass = this._hass;\n        }\n        return html`<div>${element}</div>`;\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","nothing","customElement","state","DOMAINS_TOGGLE","applyThemesOnElement","computeDomain","computeCardSize","findEntities","processConfigEntities","createHeaderFooterElement","createRowElement","HuiEntitiesCard","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","static","key","value","getConfigElement","document","createElement","getStubConfig","hass","entities","entitiesFallback","maxEntities","foundEntities","type","decorators","_this$shadowRoot","_this$shadowRoot2","_hass","shadowRoot","querySelectorAll","forEach","element","_headerElement","_footerElement","entitiesToggle","querySelector","getCardSize","_config","size","title","_showHeaderToggle","length","headerSize","Promise","footerSize","setConfig","config","Array","isArray","Error","_configEntities","undefined","show_header_toggle","toggleable","rowConf","Number","has","entity","header","footer","updated","changedProps","_get","_getPrototypeOf","prototype","call","oldHass","get","oldConfig","themes","theme","render","icon","filter","conf","map","entityConf","renderEntity","styles","state_color"],"sources":["/workspaces/frontend/src/panels/lovelace/cards/hui-entities-card.ts"],"sourcesContent":["import {\n  css,\n  CSSResultGroup,\n  html,\n  LitElement,\n  PropertyValues,\n  TemplateResult,\n  nothing,\n} from \"lit\";\nimport { customElement, state } from \"lit/decorators\";\nimport { DOMAINS_TOGGLE } from \"../../../common/const\";\nimport { applyThemesOnElement } from \"../../../common/dom/apply_themes_on_element\";\nimport { computeDomain } from \"../../../common/entity/compute_domain\";\nimport \"../../../components/ha-card\";\nimport { HomeAssistant } from \"../../../types\";\nimport { computeCardSize } from \"../common/compute-card-size\";\nimport { findEntities } from \"../common/find-entities\";\nimport { processConfigEntities } from \"../common/process-config-entities\";\nimport \"../components/hui-entities-toggle\";\nimport { createHeaderFooterElement } from \"../create-element/create-header-footer-element\";\nimport { createRowElement } from \"../create-element/create-row-element\";\nimport {\n  EntityConfig,\n  LovelaceRow,\n  LovelaceRowConfig,\n} from \"../entity-rows/types\";\nimport {\n  LovelaceCard,\n  LovelaceCardEditor,\n  LovelaceHeaderFooter,\n} from \"../types\";\nimport { EntitiesCardConfig } from \"./types\";\n\n@customElement(\"hui-entities-card\")\nclass HuiEntitiesCard extends LitElement implements LovelaceCard {\n  public static async getConfigElement(): Promise<LovelaceCardEditor> {\n    await import(\"../editor/config-elements/hui-entities-card-editor\");\n    return document.createElement(\"hui-entities-card-editor\");\n  }\n\n  public static getStubConfig(\n    hass: HomeAssistant,\n    entities: string[],\n    entitiesFallback: string[]\n  ): EntitiesCardConfig {\n    const maxEntities = 3;\n    const foundEntities = findEntities(\n      hass,\n      maxEntities,\n      entities,\n      entitiesFallback,\n      [\"light\", \"switch\", \"sensor\"]\n    );\n\n    return { type: \"entities\", entities: foundEntities };\n  }\n\n  @state() private _config?: EntitiesCardConfig;\n\n  private _hass?: HomeAssistant;\n\n  private _configEntities?: LovelaceRowConfig[];\n\n  private _showHeaderToggle?: boolean;\n\n  private _headerElement?: LovelaceHeaderFooter;\n\n  private _footerElement?: LovelaceHeaderFooter;\n\n  set hass(hass: HomeAssistant) {\n    this._hass = hass;\n    this.shadowRoot\n      ?.querySelectorAll(\"#states > div > *\")\n      .forEach((element: unknown) => {\n        (element as LovelaceRow).hass = hass;\n      });\n    if (this._headerElement) {\n      this._headerElement.hass = hass;\n    }\n    if (this._footerElement) {\n      this._footerElement.hass = hass;\n    }\n    const entitiesToggle = this.shadowRoot?.querySelector(\n      \"hui-entities-toggle\"\n    );\n    if (entitiesToggle) {\n      (entitiesToggle as any).hass = hass;\n    }\n  }\n\n  public async getCardSize(): Promise<number> {\n    if (!this._config) {\n      return 0;\n    }\n    // +1 for the header\n    let size =\n      (this._config.title || this._showHeaderToggle ? 2 : 0) +\n      (this._config.entities.length || 1);\n    if (this._headerElement) {\n      const headerSize = computeCardSize(this._headerElement);\n      size += headerSize instanceof Promise ? await headerSize : headerSize;\n    }\n    if (this._footerElement) {\n      const footerSize = computeCardSize(this._footerElement);\n      size += footerSize instanceof Promise ? await footerSize : footerSize;\n    }\n\n    return size;\n  }\n\n  public setConfig(config: EntitiesCardConfig): void {\n    if (!config.entities || !Array.isArray(config.entities)) {\n      throw new Error(\"Entities must be specified\");\n    }\n\n    const entities = processConfigEntities(config.entities);\n\n    this._config = config;\n    this._configEntities = entities;\n    if (config.title !== undefined && config.show_header_toggle === undefined) {\n      // Default value is show toggle if we can at least toggle 2 entities.\n      let toggleable = 0;\n      for (const rowConf of entities) {\n        if (!(\"entity\" in rowConf)) {\n          continue;\n        }\n        toggleable += Number(DOMAINS_TOGGLE.has(computeDomain(rowConf.entity)));\n        if (toggleable === 2) {\n          break;\n        }\n      }\n      this._showHeaderToggle = toggleable === 2;\n    } else {\n      this._showHeaderToggle = config.show_header_toggle;\n    }\n\n    if (this._config.header) {\n      this._headerElement = createHeaderFooterElement(\n        this._config.header\n      ) as LovelaceHeaderFooter;\n      this._headerElement.type = \"header\";\n      if (this._hass) {\n        this._headerElement.hass = this._hass;\n      }\n    } else {\n      this._headerElement = undefined;\n    }\n\n    if (this._config.footer) {\n      this._footerElement = createHeaderFooterElement(\n        this._config.footer\n      ) as LovelaceHeaderFooter;\n      this._footerElement.type = \"footer\";\n      if (this._hass) {\n        this._footerElement.hass = this._hass;\n      }\n    } else {\n      this._footerElement = undefined;\n    }\n  }\n\n  protected updated(changedProps: PropertyValues): void {\n    super.updated(changedProps);\n    if (!this._config || !this._hass) {\n      return;\n    }\n    const oldHass = changedProps.get(\"_hass\") as HomeAssistant | undefined;\n    const oldConfig = changedProps.get(\"_config\") as\n      | EntitiesCardConfig\n      | undefined;\n\n    if (\n      (changedProps.has(\"_hass\") &&\n        (!oldHass || oldHass.themes !== this._hass.themes)) ||\n      (changedProps.has(\"_config\") &&\n        (!oldConfig || oldConfig.theme !== this._config.theme))\n    ) {\n      applyThemesOnElement(this, this._hass.themes, this._config.theme);\n    }\n  }\n\n  protected render() {\n    if (!this._config || !this._hass) {\n      return nothing;\n    }\n\n    return html`\n      <ha-card>\n        ${this._headerElement\n          ? html`<div class=\"header-footer header\">${this._headerElement}</div>`\n          : \"\"}\n        ${!this._config.title && !this._showHeaderToggle && !this._config.icon\n          ? \"\"\n          : html`\n              <h1 class=\"card-header\">\n                <div class=\"name\">\n                  ${this._config.icon\n                    ? html`\n                        <ha-icon\n                          class=\"icon\"\n                          .icon=${this._config.icon}\n                        ></ha-icon>\n                      `\n                    : \"\"}\n                  ${this._config.title}\n                </div>\n                ${!this._showHeaderToggle\n                  ? nothing\n                  : html`\n                      <hui-entities-toggle\n                        .hass=${this._hass}\n                        .entities=${(\n                          this._configEntities!.filter(\n                            (conf) => \"entity\" in conf\n                          ) as EntityConfig[]\n                        ).map((conf) => conf.entity)}\n                      ></hui-entities-toggle>\n                    `}\n              </h1>\n            `}\n        <div id=\"states\" class=\"card-content\">\n          ${this._configEntities!.map((entityConf) =>\n            this.renderEntity(entityConf)\n          )}\n        </div>\n\n        ${this._footerElement\n          ? html`<div class=\"header-footer footer\">${this._footerElement}</div>`\n          : \"\"}\n      </ha-card>\n    `;\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      ha-card {\n        height: 100%;\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n      }\n      .card-header {\n        display: flex;\n        justify-content: space-between;\n      }\n\n      .card-header .name {\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n      }\n\n      #states {\n        flex: 1;\n      }\n\n      #states > * {\n        margin: 8px 0;\n      }\n\n      #states > *:first-child {\n        margin-top: 0;\n      }\n\n      #states > *:last-child {\n        margin-bottom: 0;\n      }\n\n      #states > div > * {\n        overflow: clip visible;\n      }\n\n      #states > div {\n        position: relative;\n      }\n\n      .icon {\n        padding: 0px 18px 0px 8px;\n      }\n\n      .header {\n        border-top-left-radius: var(--ha-card-border-radius, 12px);\n        border-top-right-radius: var(--ha-card-border-radius, 12px);\n        margin-bottom: 16px;\n        overflow: hidden;\n      }\n\n      .footer {\n        border-bottom-left-radius: var(--ha-card-border-radius, 12px);\n        border-bottom-right-radius: var(--ha-card-border-radius, 12px);\n        margin-top: -16px;\n        overflow: hidden;\n      }\n    `;\n  }\n\n  private renderEntity(entityConf: LovelaceRowConfig): TemplateResult {\n    const element = createRowElement(\n      (!(\"type\" in entityConf) || entityConf.type === \"conditional\") &&\n        this._config!.state_color\n        ? ({\n            state_color: true,\n            ...(entityConf as EntityConfig),\n          } as EntityConfig)\n        : entityConf\n    );\n    if (this._hass) {\n      element.hass = this._hass;\n    }\n\n    return html`<div>${element}</div>`;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-entities-card\": HuiEntitiesCard;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}