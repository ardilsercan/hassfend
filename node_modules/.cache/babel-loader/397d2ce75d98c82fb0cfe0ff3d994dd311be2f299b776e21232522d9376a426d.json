{"ast":null,"code":"import { fireEvent } from \"../../../common/dom/fire_event\";\nimport { navigate } from \"../../../common/navigate\";\nimport { forwardHaptic } from \"../../../data/haptics\";\nimport { domainToName } from \"../../../data/integration\";\nimport { showConfirmationDialog } from \"../../../dialogs/generic/show-dialog-box\";\nimport { showVoiceCommandDialog } from \"../../../dialogs/voice-command-dialog/show-ha-voice-command-dialog\";\nimport { showToast } from \"../../../util/toast\";\nimport { toggleEntity } from \"./entity/toggle-entity\";\nexport const handleAction = async (node, hass, config, action) => {\n  let actionConfig;\n  if (action === \"double_tap\" && config.double_tap_action) {\n    actionConfig = config.double_tap_action;\n  } else if (action === \"hold\" && config.hold_action) {\n    actionConfig = config.hold_action;\n  } else if (action === \"tap\" && config.tap_action) {\n    actionConfig = config.tap_action;\n  }\n  if (!actionConfig) {\n    actionConfig = {\n      action: \"more-info\"\n    };\n  }\n  if (actionConfig.confirmation && (!actionConfig.confirmation.exemptions || !actionConfig.confirmation.exemptions.some(e => {\n    var _user;\n    return e.user === ((_user = hass.user) === null || _user === void 0 ? void 0 : _user.id);\n  }))) {\n    forwardHaptic(\"warning\");\n    let serviceName;\n    if (actionConfig.action === \"call-service\") {\n      const [domain, service] = actionConfig.service.split(\".\", 2);\n      const serviceDomains = hass.services;\n      if (domain in serviceDomains && service in serviceDomains[domain]) {\n        await hass.loadBackendTranslation(\"title\");\n        const localize = await hass.loadBackendTranslation(\"services\");\n        serviceName = `${domainToName(localize, domain)}: ${localize(`component.${domain}.services.${serviceName}.name`) || serviceDomains[domain][service].name || service}`;\n      }\n    }\n    if (!(await showConfirmationDialog(node, {\n      text: actionConfig.confirmation.text || hass.localize(\"ui.panel.lovelace.cards.actions.action_confirmation\", {\n        action: serviceName || hass.localize(`ui.panel.lovelace.editor.action-editor.actions.${actionConfig.action}`) || actionConfig.action\n      })\n    }))) {\n      return;\n    }\n  }\n  switch (actionConfig.action) {\n    case \"more-info\":\n      {\n        if (config.entity || config.camera_image || config.image_entity) {\n          fireEvent(node, \"hass-more-info\", {\n            entityId: config.entity || config.camera_image || config.image_entity\n          });\n        } else {\n          showToast(node, {\n            message: hass.localize(\"ui.panel.lovelace.cards.actions.no_entity_more_info\")\n          });\n          forwardHaptic(\"failure\");\n        }\n        break;\n      }\n    case \"navigate\":\n      if (actionConfig.navigation_path) {\n        navigate(actionConfig.navigation_path, {\n          replace: actionConfig.navigation_replace\n        });\n      } else {\n        showToast(node, {\n          message: hass.localize(\"ui.panel.lovelace.cards.actions.no_navigation_path\")\n        });\n        forwardHaptic(\"failure\");\n      }\n      break;\n    case \"url\":\n      {\n        if (actionConfig.url_path) {\n          window.open(actionConfig.url_path);\n        } else {\n          showToast(node, {\n            message: hass.localize(\"ui.panel.lovelace.cards.actions.no_url\")\n          });\n          forwardHaptic(\"failure\");\n        }\n        break;\n      }\n    case \"toggle\":\n      {\n        if (config.entity) {\n          toggleEntity(hass, config.entity);\n          forwardHaptic(\"light\");\n        } else {\n          showToast(node, {\n            message: hass.localize(\"ui.panel.lovelace.cards.actions.no_entity_toggle\")\n          });\n          forwardHaptic(\"failure\");\n        }\n        break;\n      }\n    case \"call-service\":\n      {\n        var _actionConfig$data;\n        if (!actionConfig.service) {\n          showToast(node, {\n            message: hass.localize(\"ui.panel.lovelace.cards.actions.no_service\")\n          });\n          forwardHaptic(\"failure\");\n          return;\n        }\n        const [domain, service] = actionConfig.service.split(\".\", 2);\n        hass.callService(domain, service, (_actionConfig$data = actionConfig.data) !== null && _actionConfig$data !== void 0 ? _actionConfig$data : actionConfig.service_data, actionConfig.target);\n        forwardHaptic(\"light\");\n        break;\n      }\n    case \"assist\":\n      {\n        var _actionConfig$start_l, _actionConfig$pipelin;\n        showVoiceCommandDialog(node, hass, {\n          start_listening: (_actionConfig$start_l = actionConfig.start_listening) !== null && _actionConfig$start_l !== void 0 ? _actionConfig$start_l : false,\n          pipeline_id: (_actionConfig$pipelin = actionConfig.pipeline_id) !== null && _actionConfig$pipelin !== void 0 ? _actionConfig$pipelin : \"last_used\"\n        });\n        break;\n      }\n    case \"fire-dom-event\":\n      {\n        fireEvent(node, \"ll-custom\", actionConfig);\n      }\n  }\n};","map":{"version":3,"names":["fireEvent","navigate","forwardHaptic","domainToName","showConfirmationDialog","showVoiceCommandDialog","showToast","toggleEntity","handleAction","node","hass","config","action","actionConfig","double_tap_action","hold_action","tap_action","confirmation","exemptions","some","e","_user","user","id","serviceName","domain","service","split","serviceDomains","services","loadBackendTranslation","localize","name","text","entity","camera_image","image_entity","entityId","message","navigation_path","replace","navigation_replace","url_path","window","open","_actionConfig$data","callService","data","service_data","target","_actionConfig$start_l","_actionConfig$pipelin","start_listening","pipeline_id"],"sources":["/Users/sercanardil/Desktop/frontend/src/panels/lovelace/common/handle-action.ts"],"sourcesContent":["import { fireEvent } from \"../../../common/dom/fire_event\";\nimport { navigate } from \"../../../common/navigate\";\nimport { forwardHaptic } from \"../../../data/haptics\";\nimport { domainToName } from \"../../../data/integration\";\nimport { ActionConfig } from \"../../../data/lovelace/config/action\";\nimport { showConfirmationDialog } from \"../../../dialogs/generic/show-dialog-box\";\nimport { showVoiceCommandDialog } from \"../../../dialogs/voice-command-dialog/show-ha-voice-command-dialog\";\nimport { HomeAssistant } from \"../../../types\";\nimport { showToast } from \"../../../util/toast\";\nimport { toggleEntity } from \"./entity/toggle-entity\";\n\ndeclare global {\n  interface HASSDomEvents {\n    \"ll-custom\": ActionConfig;\n  }\n}\n\nexport type ActionConfigParams = {\n  entity?: string;\n  camera_image?: string;\n  image_entity?: string;\n  hold_action?: ActionConfig;\n  tap_action?: ActionConfig;\n  double_tap_action?: ActionConfig;\n};\n\nexport const handleAction = async (\n  node: HTMLElement,\n  hass: HomeAssistant,\n  config: ActionConfigParams,\n  action: string\n): Promise<void> => {\n  let actionConfig: ActionConfig | undefined;\n\n  if (action === \"double_tap\" && config.double_tap_action) {\n    actionConfig = config.double_tap_action;\n  } else if (action === \"hold\" && config.hold_action) {\n    actionConfig = config.hold_action;\n  } else if (action === \"tap\" && config.tap_action) {\n    actionConfig = config.tap_action;\n  }\n\n  if (!actionConfig) {\n    actionConfig = {\n      action: \"more-info\",\n    };\n  }\n\n  if (\n    actionConfig.confirmation &&\n    (!actionConfig.confirmation.exemptions ||\n      !actionConfig.confirmation.exemptions.some(\n        (e) => e.user === hass!.user?.id\n      ))\n  ) {\n    forwardHaptic(\"warning\");\n\n    let serviceName;\n    if (actionConfig.action === \"call-service\") {\n      const [domain, service] = actionConfig.service.split(\".\", 2);\n      const serviceDomains = hass.services;\n      if (domain in serviceDomains && service in serviceDomains[domain]) {\n        await hass.loadBackendTranslation(\"title\");\n        const localize = await hass.loadBackendTranslation(\"services\");\n        serviceName = `${domainToName(localize, domain)}: ${\n          localize(`component.${domain}.services.${serviceName}.name`) ||\n          serviceDomains[domain][service].name ||\n          service\n        }`;\n      }\n    }\n\n    if (\n      !(await showConfirmationDialog(node, {\n        text:\n          actionConfig.confirmation.text ||\n          hass.localize(\"ui.panel.lovelace.cards.actions.action_confirmation\", {\n            action:\n              serviceName ||\n              hass.localize(\n                `ui.panel.lovelace.editor.action-editor.actions.${actionConfig.action}`\n              ) ||\n              actionConfig.action,\n          }),\n      }))\n    ) {\n      return;\n    }\n  }\n\n  switch (actionConfig.action) {\n    case \"more-info\": {\n      if (config.entity || config.camera_image || config.image_entity) {\n        fireEvent(node, \"hass-more-info\", {\n          entityId: (config.entity ||\n            config.camera_image ||\n            config.image_entity)!,\n        });\n      } else {\n        showToast(node, {\n          message: hass.localize(\n            \"ui.panel.lovelace.cards.actions.no_entity_more_info\"\n          ),\n        });\n        forwardHaptic(\"failure\");\n      }\n      break;\n    }\n    case \"navigate\":\n      if (actionConfig.navigation_path) {\n        navigate(actionConfig.navigation_path, {\n          replace: actionConfig.navigation_replace,\n        });\n      } else {\n        showToast(node, {\n          message: hass.localize(\n            \"ui.panel.lovelace.cards.actions.no_navigation_path\"\n          ),\n        });\n        forwardHaptic(\"failure\");\n      }\n      break;\n    case \"url\": {\n      if (actionConfig.url_path) {\n        window.open(actionConfig.url_path);\n      } else {\n        showToast(node, {\n          message: hass.localize(\"ui.panel.lovelace.cards.actions.no_url\"),\n        });\n        forwardHaptic(\"failure\");\n      }\n      break;\n    }\n    case \"toggle\": {\n      if (config.entity) {\n        toggleEntity(hass, config.entity!);\n        forwardHaptic(\"light\");\n      } else {\n        showToast(node, {\n          message: hass.localize(\n            \"ui.panel.lovelace.cards.actions.no_entity_toggle\"\n          ),\n        });\n        forwardHaptic(\"failure\");\n      }\n      break;\n    }\n    case \"call-service\": {\n      if (!actionConfig.service) {\n        showToast(node, {\n          message: hass.localize(\"ui.panel.lovelace.cards.actions.no_service\"),\n        });\n        forwardHaptic(\"failure\");\n        return;\n      }\n      const [domain, service] = actionConfig.service.split(\".\", 2);\n      hass.callService(\n        domain,\n        service,\n        actionConfig.data ?? actionConfig.service_data,\n        actionConfig.target\n      );\n      forwardHaptic(\"light\");\n      break;\n    }\n    case \"assist\": {\n      showVoiceCommandDialog(node, hass, {\n        start_listening: actionConfig.start_listening ?? false,\n        pipeline_id: actionConfig.pipeline_id ?? \"last_used\",\n      });\n      break;\n    }\n    case \"fire-dom-event\": {\n      fireEvent(node, \"ll-custom\", actionConfig);\n    }\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}