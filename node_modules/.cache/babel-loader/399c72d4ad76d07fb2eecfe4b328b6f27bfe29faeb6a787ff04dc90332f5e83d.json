{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport { css, html, LitElement } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport \"../../../../components/ha-form/ha-form\";\nexport let AssistPipelineDetailSTT = _decorate([customElement(\"assist-pipeline-detail-stt\")], function (_initialize, _LitElement) {\n  class AssistPipelineDetailSTT extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: AssistPipelineDetailSTT,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"data\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_supportedLanguages\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_schema\",\n      value() {\n        return memoizeOne((language, supportedLanguages) => [{\n          name: \"\",\n          type: \"grid\",\n          schema: [{\n            name: \"stt_engine\",\n            selector: {\n              stt: {\n                language\n              }\n            }\n          }, supportedLanguages !== null && supportedLanguages !== void 0 && supportedLanguages.length ? {\n            name: \"stt_language\",\n            required: true,\n            selector: {\n              language: {\n                languages: supportedLanguages,\n                no_sort: true\n              }\n            }\n          } : {\n            name: \"\",\n            type: \"constant\"\n          }]\n        }]);\n      }\n    }, {\n      kind: \"field\",\n      key: \"_computeLabel\",\n      value() {\n        return schema => schema.name ? this.hass.localize(`ui.panel.config.voice_assistants.assistants.pipeline.detail.form.${schema.name}`) : \"\";\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var _this$data;\n        return html`\n      <div class=\"section\">\n        <div class=\"intro\">\n          <h3>\n            ${this.hass.localize(`ui.panel.config.voice_assistants.assistants.pipeline.detail.steps.stt.title`)}\n          </h3>\n          <p>\n            ${this.hass.localize(`ui.panel.config.voice_assistants.assistants.pipeline.detail.steps.stt.description`)}\n          </p>\n        </div>\n        <ha-form\n          .schema=${this._schema((_this$data = this.data) === null || _this$data === void 0 ? void 0 : _this$data.language, this._supportedLanguages)}\n          .data=${this.data}\n          .hass=${this.hass}\n          .computeLabel=${this._computeLabel}\n          @supported-languages-changed=${this._supportedLanguagesChanged}\n        ></ha-form>\n      </div>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_supportedLanguagesChanged\",\n      value: function _supportedLanguagesChanged(ev) {\n        this._supportedLanguages = ev.detail.value;\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css`\n      .section {\n        border: 1px solid var(--divider-color);\n        border-radius: 8px;\n        box-sizing: border-box;\n        padding: 16px;\n      }\n      .intro {\n        margin-bottom: 16px;\n      }\n      h3 {\n        font-weight: normal;\n        font-size: 22px;\n        line-height: 28px;\n        margin-top: 0;\n        margin-bottom: 4px;\n      }\n      p {\n        color: var(--secondary-text-color);\n        font-size: var(--mdc-typography-body2-font-size, 0.875rem);\n        margin-top: 0;\n        margin-bottom: 0;\n      }\n    `;\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","customElement","property","state","memoizeOne","AssistPipelineDetailSTT","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","language","supportedLanguages","name","type","schema","selector","stt","length","required","languages","no_sort","hass","localize","render","_this$data","_schema","data","_supportedLanguages","_computeLabel","_supportedLanguagesChanged","ev","detail","static","styles"],"sources":["/workspaces/frontend/src/panels/config/voice-assistants/assist-pipeline-detail/assist-pipeline-detail-stt.ts"],"sourcesContent":["import { css, CSSResultGroup, html, LitElement } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { LocalizeKeys } from \"../../../../common/translations/localize\";\nimport { AssistPipeline } from \"../../../../data/assist_pipeline\";\nimport { HomeAssistant } from \"../../../../types\";\nimport \"../../../../components/ha-form/ha-form\";\n\n@customElement(\"assist-pipeline-detail-stt\")\nexport class AssistPipelineDetailSTT extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public data?: Partial<AssistPipeline>;\n\n  @state() private _supportedLanguages?: string[];\n\n  private _schema = memoizeOne(\n    (language?: string, supportedLanguages?: string[]) =>\n      [\n        {\n          name: \"\",\n          type: \"grid\",\n          schema: [\n            {\n              name: \"stt_engine\",\n              selector: {\n                stt: {\n                  language,\n                },\n              },\n            },\n            supportedLanguages?.length\n              ? {\n                  name: \"stt_language\",\n                  required: true,\n                  selector: {\n                    language: { languages: supportedLanguages, no_sort: true },\n                  },\n                }\n              : { name: \"\", type: \"constant\" },\n          ] as const,\n        },\n      ] as const\n  );\n\n  private _computeLabel = (schema): string =>\n    schema.name\n      ? this.hass.localize(\n          `ui.panel.config.voice_assistants.assistants.pipeline.detail.form.${schema.name}` as LocalizeKeys\n        )\n      : \"\";\n\n  protected render() {\n    return html`\n      <div class=\"section\">\n        <div class=\"intro\">\n          <h3>\n            ${this.hass.localize(\n              `ui.panel.config.voice_assistants.assistants.pipeline.detail.steps.stt.title`\n            )}\n          </h3>\n          <p>\n            ${this.hass.localize(\n              `ui.panel.config.voice_assistants.assistants.pipeline.detail.steps.stt.description`\n            )}\n          </p>\n        </div>\n        <ha-form\n          .schema=${this._schema(this.data?.language, this._supportedLanguages)}\n          .data=${this.data}\n          .hass=${this.hass}\n          .computeLabel=${this._computeLabel}\n          @supported-languages-changed=${this._supportedLanguagesChanged}\n        ></ha-form>\n      </div>\n    `;\n  }\n\n  private _supportedLanguagesChanged(ev) {\n    this._supportedLanguages = ev.detail.value;\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      .section {\n        border: 1px solid var(--divider-color);\n        border-radius: 8px;\n        box-sizing: border-box;\n        padding: 16px;\n      }\n      .intro {\n        margin-bottom: 16px;\n      }\n      h3 {\n        font-weight: normal;\n        font-size: 22px;\n        line-height: 28px;\n        margin-top: 0;\n        margin-bottom: 4px;\n      }\n      p {\n        color: var(--secondary-text-color);\n        font-size: var(--mdc-typography-body2-font-size, 0.875rem);\n        margin-top: 0;\n        margin-bottom: 0;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"assist-pipeline-detail-stt\": AssistPipelineDetailSTT;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}