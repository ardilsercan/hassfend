{"ast":null,"code":"/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { LitElement } from 'lit';\nexport { addHasRemoveClass } from './utils.js';\n/** @soyCompatible */\nexport class BaseElement extends LitElement {\n  click() {\n    if (this.mdcRoot) {\n      this.mdcRoot.focus();\n      this.mdcRoot.click();\n      return;\n    }\n    super.click();\n  }\n  /**\n   * Create and attach the MDC Foundation to the instance\n   */\n  createFoundation() {\n    if (this.mdcFoundation !== undefined) {\n      this.mdcFoundation.destroy();\n    }\n    if (this.mdcFoundationClass) {\n      this.mdcFoundation = new this.mdcFoundationClass(this.createAdapter());\n      this.mdcFoundation.init();\n    }\n  }\n  firstUpdated() {\n    this.createFoundation();\n  }\n}","map":{"version":3,"names":["LitElement","addHasRemoveClass","BaseElement","click","mdcRoot","focus","createFoundation","mdcFoundation","undefined","destroy","mdcFoundationClass","createAdapter","init","firstUpdated"],"sources":["base-element.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\n\n\nimport {MDCFoundation} from '@material/base/foundation.js';\nimport {LitElement} from 'lit';\n\nimport {Constructor} from './utils.js';\n\nexport {CustomEventListener, EventType, SpecificEventListener} from '@material/base/types.js';\nexport {addHasRemoveClass} from './utils.js';\n\n/** @soyCompatible */\nexport abstract class BaseElement extends LitElement {\n  /**\n   * Root element for MDC Foundation usage.\n   *\n   * Define in your component with the `@query` decorator\n   */\n  protected abstract mdcRoot: HTMLElement;\n\n  /**\n   * Return the foundation class for this component\n   */\n  protected abstract readonly mdcFoundationClass?: Constructor<MDCFoundation>;\n\n  /**\n   * An instance of the MDC Foundation class to attach to the root element\n   */\n  protected abstract mdcFoundation?: MDCFoundation;\n\n  /**\n   * Create the adapter for the `mdcFoundation`.\n   *\n   * Override and return an object with the Adapter's functions implemented:\n   *\n   *    {\n   *      addClass: () => {},\n   *      removeClass: () => {},\n   *      ...\n   *    }\n   */\n  protected abstract createAdapter(): unknown;\n\n  override click() {\n    if (this.mdcRoot) {\n      this.mdcRoot.focus();\n      this.mdcRoot.click();\n      return;\n    }\n\n    super.click();\n  }\n\n  /**\n   * Create and attach the MDC Foundation to the instance\n   */\n  protected createFoundation() {\n    if (this.mdcFoundation !== undefined) {\n      this.mdcFoundation.destroy();\n    }\n    if (this.mdcFoundationClass) {\n      this.mdcFoundation = new this.mdcFoundationClass(this.createAdapter());\n      this.mdcFoundation.init();\n    }\n  }\n\n  protected override firstUpdated() {\n    this.createFoundation();\n  }\n}\n"],"mappings":"AAAA;;;;;AAWA,SAAQA,UAAU,QAAO,KAAK;AAK9B,SAAQC,iBAAiB,QAAO,YAAY;AAE5C;AACA,OAAM,MAAgBC,WAAY,SAAQF,UAAU;EA+BzCG,KAAKA,CAAA;IACZ,IAAI,IAAI,CAACC,OAAO,EAAE;MAChB,IAAI,CAACA,OAAO,CAACC,KAAK,EAAE;MACpB,IAAI,CAACD,OAAO,CAACD,KAAK,EAAE;MACpB;;IAGF,KAAK,CAACA,KAAK,EAAE;EACf;EAEA;;;EAGUG,gBAAgBA,CAAA;IACxB,IAAI,IAAI,CAACC,aAAa,KAAKC,SAAS,EAAE;MACpC,IAAI,CAACD,aAAa,CAACE,OAAO,EAAE;;IAE9B,IAAI,IAAI,CAACC,kBAAkB,EAAE;MAC3B,IAAI,CAACH,aAAa,GAAG,IAAI,IAAI,CAACG,kBAAkB,CAAC,IAAI,CAACC,aAAa,EAAE,CAAC;MACtE,IAAI,CAACJ,aAAa,CAACK,IAAI,EAAE;;EAE7B;EAEmBC,YAAYA,CAAA;IAC7B,IAAI,CAACP,gBAAgB,EAAE;EACzB"},"metadata":{},"sourceType":"module","externalDependencies":[]}