{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n/* eslint-disable lit/prefer-static-styles */\nimport { css, html, LitElement } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { listenMediaQuery } from \"../common/dom/media_query\";\nimport { toggleAttribute } from \"../common/dom/toggle_attribute\";\nimport \"../components/ha-drawer\";\nimport { showNotificationDrawer } from \"../dialogs/notifications/show-notification-drawer\";\nimport \"./partial-panel-resolver\";\nexport let HomeAssistantMain = _decorate([customElement(\"home-assistant-main\")], function (_initialize, _LitElement) {\n  class HomeAssistantMain extends _LitElement {\n    constructor() {\n      super();\n      _initialize(this);\n      listenMediaQuery(\"(max-width: 870px)\", matches => {\n        this.narrow = matches;\n      });\n    }\n  }\n  return {\n    F: HomeAssistantMain,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"route\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"narrow\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_sidebarEditMode\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_externalSidebar\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_drawerOpen\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        const sidebarNarrow = this._sidebarNarrow || this._externalSidebar;\n        return html`\n      <ha-drawer\n        .type=${sidebarNarrow ? \"modal\" : \"\"}\n        .open=${sidebarNarrow ? this._drawerOpen : undefined}\n        @MDCDrawer:closed=${this._drawerClosed}\n      >\n        <ha-sidebar\n          .hass=${this.hass}\n          .narrow=${sidebarNarrow}\n          .route=${this.route}\n          .editMode=${this._sidebarEditMode}\n          .alwaysExpand=${sidebarNarrow || this.hass.dockedSidebar === \"docked\"}\n        ></ha-sidebar>\n        <partial-panel-resolver\n          .narrow=${this.narrow}\n          .hass=${this.hass}\n          .route=${this.route}\n          slot=\"appContent\"\n        ></partial-panel-resolver>\n      </ha-drawer>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"firstUpdated\",\n      value: function firstUpdated() {\n        import( /* webpackPreload: true */\"../components/ha-sidebar\");\n        if (this.hass.auth.external) {\n          this._externalSidebar = this.hass.auth.external.config.hasSidebar === true;\n          import(\"../external_app/external_app_entrypoint\").then(mod => mod.attachExternalToApp(this));\n        }\n        this.addEventListener(\"hass-edit-sidebar\", ev => {\n          this._sidebarEditMode = ev.detail.editMode;\n          if (this._sidebarEditMode) {\n            if (this._sidebarNarrow) {\n              this._drawerOpen = true;\n            } else {\n              fireEvent(this, \"hass-dock-sidebar\", {\n                dock: \"docked\"\n              });\n            }\n          }\n        });\n        this.addEventListener(\"hass-toggle-menu\", ev => {\n          if (this._sidebarEditMode) {\n            return;\n          }\n          if (this._externalSidebar) {\n            this.hass.auth.external.fireMessage({\n              type: \"sidebar/show\"\n            });\n            return;\n          }\n          if (this._sidebarNarrow) {\n            var _ev$detail$open, _ev$detail;\n            this._drawerOpen = (_ev$detail$open = (_ev$detail = ev.detail) === null || _ev$detail === void 0 ? void 0 : _ev$detail.open) !== null && _ev$detail$open !== void 0 ? _ev$detail$open : !this._drawerOpen;\n          } else {\n            var _ev$detail2, _ev$detail3;\n            fireEvent(this, \"hass-dock-sidebar\", {\n              dock: (_ev$detail2 = ev.detail) !== null && _ev$detail2 !== void 0 && _ev$detail2.open ? \"docked\" : ((_ev$detail3 = ev.detail) === null || _ev$detail3 === void 0 ? void 0 : _ev$detail3.open) === false ? \"auto\" : this.hass.dockedSidebar === \"auto\" ? \"docked\" : \"auto\"\n            });\n          }\n        });\n        this.addEventListener(\"hass-show-notifications\", () => {\n          showNotificationDrawer(this, {\n            narrow: this.narrow\n          });\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"willUpdate\",\n      value: function willUpdate(changedProps) {\n        if (changedProps.has(\"route\") && this._sidebarNarrow) {\n          this._drawerOpen = false;\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"updated\",\n      value: function updated(changedProps) {\n        _get(_getPrototypeOf(HomeAssistantMain.prototype), \"updated\", this).call(this, changedProps);\n        toggleAttribute(this, \"expanded\", this.hass.dockedSidebar === \"docked\");\n        toggleAttribute(this, \"modal\", this._sidebarNarrow || this._externalSidebar);\n      }\n    }, {\n      kind: \"get\",\n      key: \"_sidebarNarrow\",\n      value: function _sidebarNarrow() {\n        return this.narrow || this.hass.dockedSidebar === \"always_hidden\";\n      }\n    }, {\n      kind: \"method\",\n      key: \"_drawerClosed\",\n      value: function _drawerClosed() {\n        this._drawerOpen = false;\n        this._sidebarEditMode = false;\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css`\n      :host {\n        color: var(--primary-text-color);\n        /* remove the grey tap highlights in iOS on the fullscreen touch targets */\n        -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n        --mdc-drawer-width: 56px;\n        --mdc-top-app-bar-width: calc(100% - var(--mdc-drawer-width));\n      }\n      :host([expanded]) {\n        --mdc-drawer-width: calc(256px + env(safe-area-inset-left));\n      }\n      :host([modal]) {\n        --mdc-drawer-width: unset;\n        --mdc-top-app-bar-width: unset;\n      }\n      partial-panel-resolver,\n      ha-sidebar {\n        /* allow a light tap highlight on the actual interface elements  */\n        -webkit-tap-highlight-color: rgba(0, 0, 0, 0.1);\n      }\n    `;\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","customElement","property","state","fireEvent","listenMediaQuery","toggleAttribute","showNotificationDrawer","HomeAssistantMain","_decorate","_initialize","_LitElement","constructor","matches","narrow","F","d","kind","decorators","attribute","key","value","type","Boolean","render","sidebarNarrow","_sidebarNarrow","_externalSidebar","_drawerOpen","undefined","_drawerClosed","hass","route","_sidebarEditMode","dockedSidebar","firstUpdated","auth","external","config","hasSidebar","then","mod","attachExternalToApp","addEventListener","ev","detail","editMode","dock","fireMessage","_ev$detail$open","_ev$detail","open","_ev$detail2","_ev$detail3","willUpdate","changedProps","has","updated","_get","_getPrototypeOf","prototype","call","static","styles"],"sources":["/workspaces/frontend/src/layouts/home-assistant-main.ts"],"sourcesContent":["/* eslint-disable lit/prefer-static-styles */\nimport {\n  css,\n  CSSResultGroup,\n  html,\n  LitElement,\n  PropertyValues,\n  TemplateResult,\n} from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { fireEvent, HASSDomEvent } from \"../common/dom/fire_event\";\nimport { listenMediaQuery } from \"../common/dom/media_query\";\nimport { toggleAttribute } from \"../common/dom/toggle_attribute\";\nimport \"../components/ha-drawer\";\nimport { showNotificationDrawer } from \"../dialogs/notifications/show-notification-drawer\";\nimport type { HomeAssistant, Route } from \"../types\";\nimport \"./partial-panel-resolver\";\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    \"hass-toggle-menu\": undefined | { open?: boolean };\n    \"hass-edit-sidebar\": EditSideBarEvent;\n    \"hass-show-notifications\": undefined;\n  }\n  interface HTMLElementEventMap {\n    \"hass-edit-sidebar\": HASSDomEvent<EditSideBarEvent>;\n    \"hass-toggle-menu\": HASSDomEvent<HASSDomEvents[\"hass-toggle-menu\"]>;\n  }\n}\n\ninterface EditSideBarEvent {\n  editMode: boolean;\n}\n\n@customElement(\"home-assistant-main\")\nexport class HomeAssistantMain extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public route?: Route;\n\n  @property({ type: Boolean }) public narrow = false;\n\n  @state() private _sidebarEditMode = false;\n\n  @state() private _externalSidebar = false;\n\n  @state() private _drawerOpen = false;\n\n  constructor() {\n    super();\n    listenMediaQuery(\"(max-width: 870px)\", (matches) => {\n      this.narrow = matches;\n    });\n  }\n\n  protected render(): TemplateResult {\n    const sidebarNarrow = this._sidebarNarrow || this._externalSidebar;\n\n    return html`\n      <ha-drawer\n        .type=${sidebarNarrow ? \"modal\" : \"\"}\n        .open=${sidebarNarrow ? this._drawerOpen : undefined}\n        @MDCDrawer:closed=${this._drawerClosed}\n      >\n        <ha-sidebar\n          .hass=${this.hass}\n          .narrow=${sidebarNarrow}\n          .route=${this.route}\n          .editMode=${this._sidebarEditMode}\n          .alwaysExpand=${sidebarNarrow || this.hass.dockedSidebar === \"docked\"}\n        ></ha-sidebar>\n        <partial-panel-resolver\n          .narrow=${this.narrow}\n          .hass=${this.hass}\n          .route=${this.route}\n          slot=\"appContent\"\n        ></partial-panel-resolver>\n      </ha-drawer>\n    `;\n  }\n\n  protected firstUpdated() {\n    import(/* webpackPreload: true */ \"../components/ha-sidebar\");\n\n    if (this.hass.auth.external) {\n      this._externalSidebar =\n        this.hass.auth.external.config.hasSidebar === true;\n      import(\"../external_app/external_app_entrypoint\").then((mod) =>\n        mod.attachExternalToApp(this)\n      );\n    }\n\n    this.addEventListener(\n      \"hass-edit-sidebar\",\n      (ev: HASSDomEvent<EditSideBarEvent>) => {\n        this._sidebarEditMode = ev.detail.editMode;\n\n        if (this._sidebarEditMode) {\n          if (this._sidebarNarrow) {\n            this._drawerOpen = true;\n          } else {\n            fireEvent(this, \"hass-dock-sidebar\", {\n              dock: \"docked\",\n            });\n          }\n        }\n      }\n    );\n\n    this.addEventListener(\"hass-toggle-menu\", (ev) => {\n      if (this._sidebarEditMode) {\n        return;\n      }\n      if (this._externalSidebar) {\n        this.hass.auth.external!.fireMessage({\n          type: \"sidebar/show\",\n        });\n        return;\n      }\n      if (this._sidebarNarrow) {\n        this._drawerOpen = ev.detail?.open ?? !this._drawerOpen;\n      } else {\n        fireEvent(this, \"hass-dock-sidebar\", {\n          dock: ev.detail?.open\n            ? \"docked\"\n            : ev.detail?.open === false\n              ? \"auto\"\n              : this.hass.dockedSidebar === \"auto\"\n                ? \"docked\"\n                : \"auto\",\n        });\n      }\n    });\n\n    this.addEventListener(\"hass-show-notifications\", () => {\n      showNotificationDrawer(this, {\n        narrow: this.narrow,\n      });\n    });\n  }\n\n  public willUpdate(changedProps: PropertyValues) {\n    if (changedProps.has(\"route\") && this._sidebarNarrow) {\n      this._drawerOpen = false;\n    }\n  }\n\n  protected updated(changedProps: PropertyValues) {\n    super.updated(changedProps);\n\n    toggleAttribute(this, \"expanded\", this.hass.dockedSidebar === \"docked\");\n\n    toggleAttribute(\n      this,\n      \"modal\",\n      this._sidebarNarrow || this._externalSidebar\n    );\n  }\n\n  private get _sidebarNarrow() {\n    return this.narrow || this.hass.dockedSidebar === \"always_hidden\";\n  }\n\n  private _drawerClosed() {\n    this._drawerOpen = false;\n    this._sidebarEditMode = false;\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      :host {\n        color: var(--primary-text-color);\n        /* remove the grey tap highlights in iOS on the fullscreen touch targets */\n        -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n        --mdc-drawer-width: 56px;\n        --mdc-top-app-bar-width: calc(100% - var(--mdc-drawer-width));\n      }\n      :host([expanded]) {\n        --mdc-drawer-width: calc(256px + env(safe-area-inset-left));\n      }\n      :host([modal]) {\n        --mdc-drawer-width: unset;\n        --mdc-top-app-bar-width: unset;\n      }\n      partial-panel-resolver,\n      ha-sidebar {\n        /* allow a light tap highlight on the actual interface elements  */\n        -webkit-tap-highlight-color: rgba(0, 0, 0, 0.1);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"home-assistant-main\": HomeAssistantMain;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}