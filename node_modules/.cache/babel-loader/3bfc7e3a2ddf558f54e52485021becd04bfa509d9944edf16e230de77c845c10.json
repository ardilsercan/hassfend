{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport { html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { assert, assign, literal, number, object, optional, string, union } from \"superstruct\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport \"../../../../components/ha-form/ha-form\";\nimport { baseLovelaceCardConfig } from \"../structs/base-card-struct\";\nimport { configElementStyle } from \"./config-elements-style\";\nimport { DEFAULT_HOURS_TO_SHOW } from \"../../cards/hui-sensor-card\";\nconst cardConfigStruct = assign(baseLovelaceCardConfig, object({\n  entity: optional(string()),\n  name: optional(string()),\n  icon: optional(string()),\n  graph: optional(union([literal(\"line\"), literal(\"none\")])),\n  unit: optional(string()),\n  detail: optional(number()),\n  theme: optional(string()),\n  hours_to_show: optional(number())\n}));\nconst SCHEMA = [{\n  name: \"entity\",\n  selector: {\n    entity: {\n      domain: [\"counter\", \"input_number\", \"number\", \"sensor\"]\n    }\n  }\n}, {\n  name: \"name\",\n  selector: {\n    text: {}\n  }\n}, {\n  type: \"grid\",\n  name: \"\",\n  schema: [{\n    name: \"icon\",\n    selector: {\n      icon: {}\n    },\n    context: {\n      icon_entity: \"entity\"\n    }\n  }, {\n    name: \"graph\",\n    selector: {\n      select: {\n        options: [{\n          value: \"none\",\n          label: \"None\"\n        }, {\n          value: \"line\",\n          label: \"Line\"\n        }]\n      }\n    }\n  }, {\n    name: \"unit\",\n    selector: {\n      text: {}\n    }\n  }, {\n    name: \"detail\",\n    selector: {\n      boolean: {}\n    }\n  }, {\n    name: \"theme\",\n    selector: {\n      theme: {}\n    }\n  }, {\n    name: \"hours_to_show\",\n    default: DEFAULT_HOURS_TO_SHOW,\n    selector: {\n      number: {\n        min: 1,\n        mode: \"box\"\n      }\n    }\n  }]\n}];\nexport let HuiSensorCardEditor = _decorate([customElement(\"hui-sensor-card-editor\")], function (_initialize, _LitElement) {\n  class HuiSensorCardEditor extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HuiSensorCardEditor,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_config\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"setConfig\",\n      value: function setConfig(config) {\n        assert(config, cardConfigStruct);\n        this._config = config;\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this.hass || !this._config) {\n          return nothing;\n        }\n        const data = {\n          graph: \"none\",\n          ...this._config,\n          detail: this._config.detail === 2\n        };\n        return html`\n      <ha-form\n        .hass=${this.hass}\n        .data=${data}\n        .schema=${SCHEMA}\n        .computeLabel=${this._computeLabelCallback}\n        @value-changed=${this._valueChanged}\n      ></ha-form>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_valueChanged\",\n      value: function _valueChanged(ev) {\n        const config = ev.detail.value;\n        config.detail = config.detail ? 2 : 1;\n        fireEvent(this, \"config-changed\", {\n          config\n        });\n      }\n    }, {\n      kind: \"field\",\n      key: \"_computeLabelCallback\",\n      value() {\n        return schema => {\n          switch (schema.name) {\n            case \"theme\":\n              return `${this.hass.localize(\"ui.panel.lovelace.editor.card.generic.theme\")} (${this.hass.localize(\"ui.panel.lovelace.editor.card.config.optional\")})`;\n            case \"detail\":\n              return this.hass.localize(\"ui.panel.lovelace.editor.card.sensor.show_more_detail\");\n            case \"graph\":\n              return this.hass.localize(\"ui.panel.lovelace.editor.card.sensor.graph_type\");\n            default:\n              return this.hass.localize(`ui.panel.lovelace.editor.card.generic.${schema.name}`);\n          }\n        };\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return configElementStyle;\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["html","LitElement","nothing","customElement","property","state","assert","assign","literal","number","object","optional","string","union","fireEvent","baseLovelaceCardConfig","configElementStyle","DEFAULT_HOURS_TO_SHOW","cardConfigStruct","entity","name","icon","graph","unit","detail","theme","hours_to_show","SCHEMA","selector","domain","text","type","schema","context","icon_entity","select","options","value","label","boolean","default","min","mode","HuiSensorCardEditor","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","setConfig","config","_config","render","hass","data","_computeLabelCallback","_valueChanged","ev","localize","static","styles"],"sources":["/Users/sercanardil/Desktop/frontend/src/panels/lovelace/editor/config-elements/hui-sensor-card-editor.ts"],"sourcesContent":["import { CSSResultGroup, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport {\n  assert,\n  assign,\n  literal,\n  number,\n  object,\n  optional,\n  string,\n  union,\n} from \"superstruct\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport \"../../../../components/ha-form/ha-form\";\nimport type { SchemaUnion } from \"../../../../components/ha-form/types\";\nimport type { HomeAssistant } from \"../../../../types\";\nimport type { SensorCardConfig } from \"../../cards/types\";\nimport type { LovelaceCardEditor } from \"../../types\";\nimport { baseLovelaceCardConfig } from \"../structs/base-card-struct\";\nimport { configElementStyle } from \"./config-elements-style\";\nimport { DEFAULT_HOURS_TO_SHOW } from \"../../cards/hui-sensor-card\";\n\nconst cardConfigStruct = assign(\n  baseLovelaceCardConfig,\n  object({\n    entity: optional(string()),\n    name: optional(string()),\n    icon: optional(string()),\n    graph: optional(union([literal(\"line\"), literal(\"none\")])),\n    unit: optional(string()),\n    detail: optional(number()),\n    theme: optional(string()),\n    hours_to_show: optional(number()),\n  })\n);\n\nconst SCHEMA = [\n  {\n    name: \"entity\",\n    selector: {\n      entity: { domain: [\"counter\", \"input_number\", \"number\", \"sensor\"] },\n    },\n  },\n  { name: \"name\", selector: { text: {} } },\n  {\n    type: \"grid\",\n    name: \"\",\n    schema: [\n      {\n        name: \"icon\",\n        selector: {\n          icon: {},\n        },\n        context: {\n          icon_entity: \"entity\",\n        },\n      },\n      {\n        name: \"graph\",\n        selector: {\n          select: {\n            options: [\n              {\n                value: \"none\",\n                label: \"None\",\n              },\n              {\n                value: \"line\",\n                label: \"Line\",\n              },\n            ],\n          },\n        },\n      },\n      { name: \"unit\", selector: { text: {} } },\n      { name: \"detail\", selector: { boolean: {} } },\n      { name: \"theme\", selector: { theme: {} } },\n      {\n        name: \"hours_to_show\",\n        default: DEFAULT_HOURS_TO_SHOW,\n        selector: { number: { min: 1, mode: \"box\" } },\n      },\n    ],\n  },\n] as const;\n\n@customElement(\"hui-sensor-card-editor\")\nexport class HuiSensorCardEditor\n  extends LitElement\n  implements LovelaceCardEditor\n{\n  @property({ attribute: false }) public hass?: HomeAssistant;\n\n  @state() private _config?: SensorCardConfig;\n\n  public setConfig(config: SensorCardConfig): void {\n    assert(config, cardConfigStruct);\n    this._config = config;\n  }\n\n  protected render() {\n    if (!this.hass || !this._config) {\n      return nothing;\n    }\n\n    const data = {\n      graph: \"none\",\n      ...this._config,\n      detail: this._config!.detail === 2,\n    };\n\n    return html`\n      <ha-form\n        .hass=${this.hass}\n        .data=${data}\n        .schema=${SCHEMA}\n        .computeLabel=${this._computeLabelCallback}\n        @value-changed=${this._valueChanged}\n      ></ha-form>\n    `;\n  }\n\n  private _valueChanged(ev: CustomEvent): void {\n    const config = ev.detail.value;\n    config.detail = config.detail ? 2 : 1;\n    fireEvent(this, \"config-changed\", { config });\n  }\n\n  private _computeLabelCallback = (schema: SchemaUnion<typeof SCHEMA>) => {\n    switch (schema.name) {\n      case \"theme\":\n        return `${this.hass!.localize(\n          \"ui.panel.lovelace.editor.card.generic.theme\"\n        )} (${this.hass!.localize(\n          \"ui.panel.lovelace.editor.card.config.optional\"\n        )})`;\n      case \"detail\":\n        return this.hass!.localize(\n          \"ui.panel.lovelace.editor.card.sensor.show_more_detail\"\n        );\n      case \"graph\":\n        return this.hass!.localize(\n          \"ui.panel.lovelace.editor.card.sensor.graph_type\"\n        );\n      default:\n        return this.hass!.localize(\n          `ui.panel.lovelace.editor.card.generic.${schema.name}`\n        );\n    }\n  };\n\n  static get styles(): CSSResultGroup {\n    return configElementStyle;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-sensor-card-editor\": HuiSensorCardEditor;\n  }\n}\n"],"mappings":";AAAA,SAAyBA,IAAI,EAAEC,UAAU,EAAEC,OAAO,QAAQ,KAAK;AAC/D,SAASC,aAAa,EAAEC,QAAQ,EAAEC,KAAK,QAAQ,gBAAgB;AAC/D,SACEC,MAAM,EACNC,MAAM,EACNC,OAAO,EACPC,MAAM,EACNC,MAAM,EACNC,QAAQ,EACRC,MAAM,EACNC,KAAK,QACA,aAAa;AACpB,SAASC,SAAS,QAAQ,mCAAmC;AAC7D,OAAO,wCAAwC;AAK/C,SAASC,sBAAsB,QAAQ,6BAA6B;AACpE,SAASC,kBAAkB,QAAQ,yBAAyB;AAC5D,SAASC,qBAAqB,QAAQ,6BAA6B;AAEnE,MAAMC,gBAAgB,GAAGX,MAAM,CAC7BQ,sBAAsB,EACtBL,MAAM,CAAC;EACLS,MAAM,EAAER,QAAQ,CAACC,MAAM,CAAC,CAAC,CAAC;EAC1BQ,IAAI,EAAET,QAAQ,CAACC,MAAM,CAAC,CAAC,CAAC;EACxBS,IAAI,EAAEV,QAAQ,CAACC,MAAM,CAAC,CAAC,CAAC;EACxBU,KAAK,EAAEX,QAAQ,CAACE,KAAK,CAAC,CAACL,OAAO,CAAC,MAAM,CAAC,EAAEA,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;EAC1De,IAAI,EAAEZ,QAAQ,CAACC,MAAM,CAAC,CAAC,CAAC;EACxBY,MAAM,EAAEb,QAAQ,CAACF,MAAM,CAAC,CAAC,CAAC;EAC1BgB,KAAK,EAAEd,QAAQ,CAACC,MAAM,CAAC,CAAC,CAAC;EACzBc,aAAa,EAAEf,QAAQ,CAACF,MAAM,CAAC,CAAC;AAClC,CAAC,CACH,CAAC;AAED,MAAMkB,MAAM,GAAG,CACb;EACEP,IAAI,EAAE,QAAQ;EACdQ,QAAQ,EAAE;IACRT,MAAM,EAAE;MAAEU,MAAM,EAAE,CAAC,SAAS,EAAE,cAAc,EAAE,QAAQ,EAAE,QAAQ;IAAE;EACpE;AACF,CAAC,EACD;EAAET,IAAI,EAAE,MAAM;EAAEQ,QAAQ,EAAE;IAAEE,IAAI,EAAE,CAAC;EAAE;AAAE,CAAC,EACxC;EACEC,IAAI,EAAE,MAAM;EACZX,IAAI,EAAE,EAAE;EACRY,MAAM,EAAE,CACN;IACEZ,IAAI,EAAE,MAAM;IACZQ,QAAQ,EAAE;MACRP,IAAI,EAAE,CAAC;IACT,CAAC;IACDY,OAAO,EAAE;MACPC,WAAW,EAAE;IACf;EACF,CAAC,EACD;IACEd,IAAI,EAAE,OAAO;IACbQ,QAAQ,EAAE;MACRO,MAAM,EAAE;QACNC,OAAO,EAAE,CACP;UACEC,KAAK,EAAE,MAAM;UACbC,KAAK,EAAE;QACT,CAAC,EACD;UACED,KAAK,EAAE,MAAM;UACbC,KAAK,EAAE;QACT,CAAC;MAEL;IACF;EACF,CAAC,EACD;IAAElB,IAAI,EAAE,MAAM;IAAEQ,QAAQ,EAAE;MAAEE,IAAI,EAAE,CAAC;IAAE;EAAE,CAAC,EACxC;IAAEV,IAAI,EAAE,QAAQ;IAAEQ,QAAQ,EAAE;MAAEW,OAAO,EAAE,CAAC;IAAE;EAAE,CAAC,EAC7C;IAAEnB,IAAI,EAAE,OAAO;IAAEQ,QAAQ,EAAE;MAAEH,KAAK,EAAE,CAAC;IAAE;EAAE,CAAC,EAC1C;IACEL,IAAI,EAAE,eAAe;IACrBoB,OAAO,EAAEvB,qBAAqB;IAC9BW,QAAQ,EAAE;MAAEnB,MAAM,EAAE;QAAEgC,GAAG,EAAE,CAAC;QAAEC,IAAI,EAAE;MAAM;IAAE;EAC9C,CAAC;AAEL,CAAC,CACO;AAEV,WACaC,mBAAmB,GAAAC,SAAA,EAD/BzC,aAAa,CAAC,wBAAwB,CAAC,aAAA0C,WAAA,EAAAC,WAAA;EAAxC,MACaH,mBAAmB,SAAAG,WAAA,CAGhC;IAAAC,YAAA,GAAAC,IAAA;MAAA,SAAAA,IAAA;MAAAH,WAAA;IAAA;EAgEA;EAAC;IAAAI,CAAA,EAnEYN,mBAAmB;IAAAO,CAAA;MAAAC,IAAA;MAAAC,UAAA,GAI7BhD,QAAQ,CAAC;QAAEiD,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAC,GAAA;MAAAjB,KAAA;IAAA;MAAAc,IAAA;MAAAC,UAAA,GAE9B/C,KAAK,CAAC,CAAC;MAAAiD,GAAA;MAAAjB,KAAA;IAAA;MAAAc,IAAA;MAAAG,GAAA;MAAAjB,KAAA,EAER,SAAAkB,UAAiBC,MAAwB,EAAQ;QAC/ClD,MAAM,CAACkD,MAAM,EAAEtC,gBAAgB,CAAC;QAChC,IAAI,CAACuC,OAAO,GAAGD,MAAM;MACvB;IAAC;MAAAL,IAAA;MAAAG,GAAA;MAAAjB,KAAA,EAED,SAAAqB,OAAA,EAAmB;QACjB,IAAI,CAAC,IAAI,CAACC,IAAI,IAAI,CAAC,IAAI,CAACF,OAAO,EAAE;UAC/B,OAAOvD,OAAO;QAChB;QAEA,MAAM0D,IAAI,GAAG;UACXtC,KAAK,EAAE,MAAM;UACb,GAAG,IAAI,CAACmC,OAAO;UACfjC,MAAM,EAAE,IAAI,CAACiC,OAAO,CAAEjC,MAAM,KAAK;QACnC,CAAC;QAED,OAAOxB,IAAK;AAChB;AACA,gBAAgB,IAAI,CAAC2D,IAAK;AAC1B,gBAAgBC,IAAK;AACrB,kBAAkBjC,MAAO;AACzB,wBAAwB,IAAI,CAACkC,qBAAsB;AACnD,yBAAyB,IAAI,CAACC,aAAc;AAC5C;AACA,KAAK;MACH;IAAC;MAAAX,IAAA;MAAAG,GAAA;MAAAjB,KAAA,EAED,SAAAyB,cAAsBC,EAAe,EAAQ;QAC3C,MAAMP,MAAM,GAAGO,EAAE,CAACvC,MAAM,CAACa,KAAK;QAC9BmB,MAAM,CAAChC,MAAM,GAAGgC,MAAM,CAAChC,MAAM,GAAG,CAAC,GAAG,CAAC;QACrCV,SAAS,CAAC,IAAI,EAAE,gBAAgB,EAAE;UAAE0C;QAAO,CAAC,CAAC;MAC/C;IAAC;MAAAL,IAAA;MAAAG,GAAA;MAAAjB,MAAA;QAAA,OAEgCL,MAAkC,IAAK;UACtE,QAAQA,MAAM,CAACZ,IAAI;YACjB,KAAK,OAAO;cACV,OAAQ,GAAE,IAAI,CAACuC,IAAI,CAAEK,QAAQ,CAC3B,6CACF,CAAE,KAAI,IAAI,CAACL,IAAI,CAAEK,QAAQ,CACvB,+CACF,CAAE,GAAE;YACN,KAAK,QAAQ;cACX,OAAO,IAAI,CAACL,IAAI,CAAEK,QAAQ,CACxB,uDACF,CAAC;YACH,KAAK,OAAO;cACV,OAAO,IAAI,CAACL,IAAI,CAAEK,QAAQ,CACxB,iDACF,CAAC;YACH;cACE,OAAO,IAAI,CAACL,IAAI,CAAEK,QAAQ,CACvB,yCAAwChC,MAAM,CAACZ,IAAK,EACvD,CAAC;UACL;QACF,CAAC;MAAA;IAAA;MAAA+B,IAAA;MAAAc,MAAA;MAAAX,GAAA;MAAAjB,KAAA,EAED,SAAA6B,OAAA,EAAoC;QAClC,OAAOlD,kBAAkB;MAC3B;IAAC;EAAA;AAAA,GAjEOf,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}