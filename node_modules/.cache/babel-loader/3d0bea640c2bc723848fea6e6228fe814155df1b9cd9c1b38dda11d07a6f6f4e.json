{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport \"core-js/modules/es.object.assign.js\";\n/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport { dim1, dim2 } from './shared/BaseLayout.js';\nimport { GridBaseLayout } from './shared/GridBaseLayout.js';\nexport var grid = function grid(config) {\n  return Object.assign({\n    type: GridLayout\n  }, config);\n};\nexport var GridLayout = /*#__PURE__*/function (_GridBaseLayout) {\n  _inherits(GridLayout, _GridBaseLayout);\n  function GridLayout() {\n    _classCallCheck(this, GridLayout);\n    return _callSuper(this, GridLayout, arguments);\n  }\n  _createClass(GridLayout, [{\n    key: \"_delta\",\n    get:\n    /**\n     * Returns the average size (precise or estimated) of an item in the scrolling direction,\n     * including any surrounding space.\n     */\n    function get() {\n      return this._metrics.itemSize1 + this._metrics.gap1;\n    }\n  }, {\n    key: \"_getItemSize\",\n    value: function _getItemSize(_idx) {\n      return _defineProperty(_defineProperty({}, this._sizeDim, this._metrics.itemSize1), this._secondarySizeDim, this._metrics.itemSize2);\n    }\n  }, {\n    key: \"_getActiveItems\",\n    value: function _getActiveItems() {\n      var metrics = this._metrics;\n      var rolumns = metrics.rolumns;\n      if (rolumns === 0) {\n        this._first = -1;\n        this._last = -1;\n        this._physicalMin = 0;\n        this._physicalMax = 0;\n      } else {\n        var padding1 = metrics.padding1;\n        var min = Math.max(0, this._scrollPosition - this._overhang);\n        var max = Math.min(this._scrollSize, this._scrollPosition + this._viewDim1 + this._overhang);\n        var firstCow = Math.max(0, Math.floor((min - padding1.start) / this._delta));\n        var lastCow = Math.max(0, Math.ceil((max - padding1.start) / this._delta));\n        this._first = firstCow * rolumns;\n        this._last = Math.min(lastCow * rolumns - 1, this.items.length - 1);\n        this._physicalMin = padding1.start + this._delta * firstCow;\n        this._physicalMax = padding1.start + this._delta * lastCow;\n      }\n    }\n  }, {\n    key: \"_getItemPosition\",\n    value: function _getItemPosition(idx) {\n      var _this$_metrics = this._metrics,\n        rolumns = _this$_metrics.rolumns,\n        padding1 = _this$_metrics.padding1,\n        positions = _this$_metrics.positions,\n        itemSize1 = _this$_metrics.itemSize1,\n        itemSize2 = _this$_metrics.itemSize2;\n      return _defineProperty(_defineProperty(_defineProperty(_defineProperty({}, this._positionDim, padding1.start + Math.floor(idx / rolumns) * this._delta), this._secondaryPositionDim, positions[idx % rolumns]), dim1(this.direction), itemSize1), dim2(this.direction), itemSize2);\n    }\n  }, {\n    key: \"_updateScrollSize\",\n    value: function _updateScrollSize() {\n      var _this$_metrics2 = this._metrics,\n        rolumns = _this$_metrics2.rolumns,\n        gap1 = _this$_metrics2.gap1,\n        padding1 = _this$_metrics2.padding1,\n        itemSize1 = _this$_metrics2.itemSize1;\n      var size = 1;\n      if (rolumns > 0) {\n        var cows = Math.ceil(this.items.length / rolumns);\n        size = padding1.start + cows * itemSize1 + (cows - 1) * gap1 + padding1.end;\n      }\n      this._scrollSize = size;\n    }\n  }]);\n  return GridLayout;\n}(GridBaseLayout);","map":{"version":3,"names":["dim1","dim2","GridBaseLayout","grid","config","Object","assign","type","GridLayout","_GridBaseLayout","_inherits","_classCallCheck","_callSuper","arguments","_createClass","key","get","_metrics","itemSize1","gap1","value","_getItemSize","_idx","_defineProperty","_sizeDim","_secondarySizeDim","itemSize2","_getActiveItems","metrics","rolumns","_first","_last","_physicalMin","_physicalMax","padding1","min","Math","max","_scrollPosition","_overhang","_scrollSize","_viewDim1","firstCow","floor","start","_delta","lastCow","ceil","items","length","_getItemPosition","idx","_this$_metrics","positions","_positionDim","_secondaryPositionDim","direction","_updateScrollSize","_this$_metrics2","size","cows","end"],"sources":["../src/layouts/grid.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {LayoutHostSink, Positions, Size} from './shared/Layout.js';\nimport {dim1, dim2} from './shared/BaseLayout.js';\nimport {GridBaseLayout, GridBaseLayoutConfig} from './shared/GridBaseLayout.js';\n\ntype GridLayoutSpecifier = GridBaseLayoutConfig & {\n  type: new (\n    hostSink: LayoutHostSink,\n    config?: GridBaseLayoutConfig\n  ) => GridLayout;\n};\n\ntype GridLayoutSpecifierFactory = (\n  config?: GridBaseLayoutConfig\n) => GridLayoutSpecifier;\n\nexport const grid: GridLayoutSpecifierFactory = (\n  config?: GridBaseLayoutConfig\n) =>\n  Object.assign(\n    {\n      type: GridLayout,\n    },\n    config\n  );\n\nexport class GridLayout extends GridBaseLayout<GridBaseLayoutConfig> {\n  /**\n   * Returns the average size (precise or estimated) of an item in the scrolling direction,\n   * including any surrounding space.\n   */\n  protected get _delta() {\n    return this._metrics!.itemSize1 + this._metrics!.gap1;\n  }\n\n  protected _getItemSize(_idx: number): Size {\n    return {\n      [this._sizeDim]: this._metrics!.itemSize1,\n      [this._secondarySizeDim]: this._metrics!.itemSize2,\n    } as unknown as Size;\n  }\n\n  _getActiveItems() {\n    const metrics = this._metrics!;\n    const {rolumns} = metrics;\n    if (rolumns === 0) {\n      this._first = -1;\n      this._last = -1;\n      this._physicalMin = 0;\n      this._physicalMax = 0;\n    } else {\n      const {padding1} = metrics;\n      const min = Math.max(0, this._scrollPosition - this._overhang);\n      const max = Math.min(\n        this._scrollSize,\n        this._scrollPosition + this._viewDim1 + this._overhang\n      );\n      const firstCow = Math.max(\n        0,\n        Math.floor((min - padding1.start) / this._delta)\n      );\n      const lastCow = Math.max(\n        0,\n        Math.ceil((max - padding1.start) / this._delta)\n      );\n\n      this._first = firstCow * rolumns;\n      this._last = Math.min(lastCow * rolumns - 1, this.items.length - 1);\n      this._physicalMin = padding1.start + this._delta * firstCow;\n      this._physicalMax = padding1.start + this._delta * lastCow;\n    }\n  }\n\n  _getItemPosition(idx: number): Positions {\n    const {rolumns, padding1, positions, itemSize1, itemSize2} = this._metrics!;\n    return {\n      [this._positionDim]:\n        padding1.start + Math.floor(idx / rolumns) * this._delta,\n      [this._secondaryPositionDim]: positions[idx % rolumns],\n      [dim1(this.direction)]: itemSize1,\n      [dim2(this.direction)]: itemSize2,\n    } as unknown as {top: number; left: number};\n  }\n\n  _updateScrollSize() {\n    const {rolumns, gap1, padding1, itemSize1} = this._metrics!;\n    let size = 1;\n    if (rolumns > 0) {\n      const cows = Math.ceil(this.items.length / rolumns);\n      size =\n        padding1.start + cows * itemSize1 + (cows - 1) * gap1 + padding1.end;\n    }\n    this._scrollSize = size;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}