{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\n/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\nvar testUserAgent = function testUserAgent(regexp) {\n  return regexp.test(navigator.userAgent);\n};\nvar testPlatform = function testPlatform(regexp) {\n  return regexp.test(navigator.platform);\n};\nvar testVendor = function testVendor(regexp) {\n  return regexp.test(navigator.vendor);\n};\nexport var isAndroid = testUserAgent(/Android/);\nexport var isChrome = testUserAgent(/Chrome/) && testVendor(/Google Inc/);\nexport var isFirefox = testUserAgent(/Firefox/);\n\n// IPadOS 13 lies and says it's a Mac, but we can distinguish by detecting touch support.\nexport var isIPad = testPlatform(/^iPad/) || testPlatform(/^Mac/) && navigator.maxTouchPoints > 1;\nexport var isIPhone = testPlatform(/^iPhone/);\nexport var isIOS = isIPhone || isIPad;\nexport var isSafari = testUserAgent(/^((?!chrome|android)(?:[\\0-\\t\\x0B\\f\\x0E-\\u2027\\u202A-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]))*[s\\u017F]afari/i);\nexport var isTouch = function () {\n  try {\n    document.createEvent('TouchEvent');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}();","map":{"version":3,"names":["testUserAgent","regexp","test","navigator","userAgent","testPlatform","platform","testVendor","vendor","isAndroid","isChrome","isFirefox","isIPad","maxTouchPoints","isIPhone","isIOS","isSafari","isTouch","document","createEvent","e"],"sources":["/workspaces/frontend/node_modules/@vaadin/component-base/src/browser-utils.js"],"sourcesContent":["/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\nconst testUserAgent = (regexp) => regexp.test(navigator.userAgent);\n\nconst testPlatform = (regexp) => regexp.test(navigator.platform);\n\nconst testVendor = (regexp) => regexp.test(navigator.vendor);\n\nexport const isAndroid = testUserAgent(/Android/u);\n\nexport const isChrome = testUserAgent(/Chrome/u) && testVendor(/Google Inc/u);\n\nexport const isFirefox = testUserAgent(/Firefox/u);\n\n// IPadOS 13 lies and says it's a Mac, but we can distinguish by detecting touch support.\nexport const isIPad = testPlatform(/^iPad/u) || (testPlatform(/^Mac/u) && navigator.maxTouchPoints > 1);\n\nexport const isIPhone = testPlatform(/^iPhone/u);\n\nexport const isIOS = isIPhone || isIPad;\n\nexport const isSafari = testUserAgent(/^((?!chrome|android).)*safari/iu);\n\nexport const isTouch = (() => {\n  try {\n    document.createEvent('TouchEvent');\n    return true;\n  } catch (e) {\n    return false;\n  }\n})();\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA,IAAMA,aAAa,GAAG,SAAhBA,aAAaA,CAAIC,MAAM;EAAA,OAAKA,MAAM,CAACC,IAAI,CAACC,SAAS,CAACC,SAAS,CAAC;AAAA;AAElE,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAIJ,MAAM;EAAA,OAAKA,MAAM,CAACC,IAAI,CAACC,SAAS,CAACG,QAAQ,CAAC;AAAA;AAEhE,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAIN,MAAM;EAAA,OAAKA,MAAM,CAACC,IAAI,CAACC,SAAS,CAACK,MAAM,CAAC;AAAA;AAE5D,OAAO,IAAMC,SAAS,GAAGT,aAAa,CAAC,SAAU,CAAC;AAElD,OAAO,IAAMU,QAAQ,GAAGV,aAAa,CAAC,QAAS,CAAC,IAAIO,UAAU,CAAC,YAAa,CAAC;AAE7E,OAAO,IAAMI,SAAS,GAAGX,aAAa,CAAC,SAAU,CAAC;;AAElD;AACA,OAAO,IAAMY,MAAM,GAAGP,YAAY,CAAC,OAAQ,CAAC,IAAKA,YAAY,CAAC,MAAO,CAAC,IAAIF,SAAS,CAACU,cAAc,GAAG,CAAE;AAEvG,OAAO,IAAMC,QAAQ,GAAGT,YAAY,CAAC,SAAU,CAAC;AAEhD,OAAO,IAAMU,KAAK,GAAGD,QAAQ,IAAIF,MAAM;AAEvC,OAAO,IAAMI,QAAQ,GAAGhB,aAAa,CAAC,qMAAiC,CAAC;AAExE,OAAO,IAAMiB,OAAO,GAAI,YAAM;EAC5B,IAAI;IACFC,QAAQ,CAACC,WAAW,CAAC,YAAY,CAAC;IAClC,OAAO,IAAI;EACb,CAAC,CAAC,OAAOC,CAAC,EAAE;IACV,OAAO,KAAK;EACd;AACF,CAAC,CAAE,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}