{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\n/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { LitElement } from 'lit';\nimport { property } from 'lit/decorators.js';\n/**\n * A divider component.\n */\nexport var Divider = /*#__PURE__*/function (_LitElement) {\n  _inherits(Divider, _LitElement);\n  function Divider() {\n    var _this;\n    _classCallCheck(this, Divider);\n    _this = _callSuper(this, Divider, arguments);\n    /**\n     * Indents the divider with equal padding on both sides.\n     */\n    _this.inset = false;\n    /**\n     * Indents the divider with padding on the leading side.\n     */\n    _this.insetStart = false;\n    /**\n     * Indents the divider with padding on the trailing side.\n     */\n    _this.insetEnd = false;\n    return _this;\n  }\n  return _createClass(Divider);\n}(LitElement);\n__decorate([property({\n  type: Boolean,\n  reflect: true\n})], Divider.prototype, \"inset\", void 0);\n__decorate([property({\n  type: Boolean,\n  reflect: true,\n  attribute: 'inset-start'\n})], Divider.prototype, \"insetStart\", void 0);\n__decorate([property({\n  type: Boolean,\n  reflect: true,\n  attribute: 'inset-end'\n})], Divider.prototype, \"insetEnd\", void 0);","map":{"version":3,"names":["LitElement","property","Divider","_LitElement","_inherits","_this","_classCallCheck","inset","insetStart","insetEnd","_createClass","__decorate","type","Boolean","reflect","attribute"],"sources":["divider.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {LitElement} from 'lit';\nimport {property} from 'lit/decorators.js';\n\n/**\n * A divider component.\n */\nexport class Divider extends LitElement {\n  /**\n   * Indents the divider with equal padding on both sides.\n   */\n  @property({type: Boolean, reflect: true}) inset = false;\n\n  /**\n   * Indents the divider with padding on the leading side.\n   */\n  @property({type: Boolean, reflect: true, attribute: 'inset-start'})\n  insetStart = false;\n\n  /**\n   * Indents the divider with padding on the trailing side.\n   */\n  @property({type: Boolean, reflect: true, attribute: 'inset-end'})\n  insetEnd = false;\n}\n"],"mappings":";;;;AAAA;;;;;;AAMA,SAAQA,UAAU,QAAO,KAAK;AAC9B,SAAQC,QAAQ,QAAO,mBAAmB;AAE1C;;;AAGA,WAAaC,OAAQ,0BAAAC,WAAA;EAAAC,SAAA,CAAAF,OAAA,EAAAC,WAAA;EAArB,SAAAD,QAAA;IAAA,IAAAG,KAAA;IAAAC,eAAA,OAAAJ,OAAA;;IACE;;;IAG0CG,KAAA,CAAAE,KAAK,GAAG,KAAK;IAEvD;;;IAIAF,KAAA,CAAAG,UAAU,GAAG,KAAK;IAElB;;;IAIAH,KAAA,CAAAI,QAAQ,GAAG,KAAK;IAAC,OAAAJ,KAAA;EACnB;EAAC,OAAAK,YAAA,CAAAR,OAAA;AAAA,EAjB4BF,UAAU;AAIKW,UAAA,EAAzCV,QAAQ,CAAC;EAACW,IAAI,EAAEC,OAAO;EAAEC,OAAO,EAAE;AAAI,CAAC,CAAC,C,qCAAe;AAMxDH,UAAA,EADCV,QAAQ,CAAC;EAACW,IAAI,EAAEC,OAAO;EAAEC,OAAO,EAAE,IAAI;EAAEC,SAAS,EAAE;AAAa,CAAC,CAAC,C,0CAChD;AAMnBJ,UAAA,EADCV,QAAQ,CAAC;EAACW,IAAI,EAAEC,OAAO;EAAEC,OAAO,EAAE,IAAI;EAAEC,SAAS,EAAE;AAAW,CAAC,CAAC,C,wCAChD"},"metadata":{},"sourceType":"module","externalDependencies":[]}