{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/helpers/regeneratorRuntime\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport \"core-js/modules/es.error.cause.js\";\nimport { isStrategyView } from \"../../../data/lovelace/config/view\";\nimport { showAlertDialog } from \"../../../dialogs/generic/show-dialog-box\";\nimport { showDeleteSuccessToast } from \"../../../util/toast-deleted-success\";\nimport { showDeleteCardDialog } from \"./card-editor/show-delete-card-dialog\";\nimport { deleteCard as _deleteCard, insertCard } from \"./config-util\";\nexport function confDeleteCard(_x, _x2, _x3, _x4) {\n  return _confDeleteCard.apply(this, arguments);\n}\nfunction _confDeleteCard() {\n  _confDeleteCard = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(element, hass, lovelace, path) {\n    var view, cardConfig;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          view = lovelace.config.views[path[0]];\n          if (!isStrategyView(view)) {\n            _context3.next = 3;\n            break;\n          }\n          throw new Error(\"Deleting cards in a strategy view is not supported.\");\n        case 3:\n          cardConfig = view.cards[path[1]];\n          showDeleteCardDialog(element, {\n            cardConfig: cardConfig,\n            deleteCard: function () {\n              var _deleteCard2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n                var newLovelace, action;\n                return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n                  while (1) switch (_context2.prev = _context2.next) {\n                    case 0:\n                      _context2.prev = 0;\n                      newLovelace = _deleteCard(lovelace.config, path);\n                      _context2.next = 4;\n                      return lovelace.saveConfig(newLovelace);\n                    case 4:\n                      action = /*#__PURE__*/function () {\n                        var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n                          return _regeneratorRuntime().wrap(function _callee$(_context) {\n                            while (1) switch (_context.prev = _context.next) {\n                              case 0:\n                                _context.next = 2;\n                                return lovelace.saveConfig(insertCard(newLovelace, path, cardConfig));\n                              case 2:\n                              case \"end\":\n                                return _context.stop();\n                            }\n                          }, _callee);\n                        }));\n                        return function action() {\n                          return _ref.apply(this, arguments);\n                        };\n                      }();\n                      showDeleteSuccessToast(element, hass, action);\n                      _context2.next = 11;\n                      break;\n                    case 8:\n                      _context2.prev = 8;\n                      _context2.t0 = _context2[\"catch\"](0);\n                      showAlertDialog(element, {\n                        text: \"Deleting failed: \".concat(_context2.t0.message)\n                      });\n                    case 11:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }, _callee2, null, [[0, 8]]);\n              }));\n              function deleteCard() {\n                return _deleteCard2.apply(this, arguments);\n              }\n              return deleteCard;\n            }()\n          });\n        case 5:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  }));\n  return _confDeleteCard.apply(this, arguments);\n}","map":{"version":3,"names":["isStrategyView","showAlertDialog","showDeleteSuccessToast","showDeleteCardDialog","deleteCard","insertCard","confDeleteCard","_x","_x2","_x3","_x4","_confDeleteCard","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee3","element","hass","lovelace","path","view","cardConfig","wrap","_callee3$","_context3","prev","next","config","views","Error","cards","_deleteCard2","_callee2","newLovelace","action","_callee2$","_context2","saveConfig","_ref","_callee","_callee$","_context","stop","t0","text","concat","message"],"sources":["/Users/sercanardil/Desktop/frontend/src/panels/lovelace/editor/delete-card.ts"],"sourcesContent":["import { isStrategyView } from \"../../../data/lovelace/config/view\";\nimport { showAlertDialog } from \"../../../dialogs/generic/show-dialog-box\";\nimport { HomeAssistant } from \"../../../types\";\nimport { showDeleteSuccessToast } from \"../../../util/toast-deleted-success\";\nimport { Lovelace } from \"../types\";\nimport { showDeleteCardDialog } from \"./card-editor/show-delete-card-dialog\";\nimport { deleteCard, insertCard } from \"./config-util\";\n\nexport async function confDeleteCard(\n  element: HTMLElement,\n  hass: HomeAssistant,\n  lovelace: Lovelace,\n  path: [number, number]\n): Promise<void> {\n  const view = lovelace.config.views[path[0]];\n  if (isStrategyView(view)) {\n    throw new Error(\"Deleting cards in a strategy view is not supported.\");\n  }\n  const cardConfig = view.cards![path[1]];\n  showDeleteCardDialog(element, {\n    cardConfig,\n    deleteCard: async () => {\n      try {\n        const newLovelace = deleteCard(lovelace.config, path);\n        await lovelace.saveConfig(newLovelace);\n        const action = async () => {\n          await lovelace.saveConfig(insertCard(newLovelace, path, cardConfig));\n        };\n        showDeleteSuccessToast(element, hass!, action);\n      } catch (err: any) {\n        showAlertDialog(element, {\n          text: `Deleting failed: ${err.message}`,\n        });\n      }\n    },\n  });\n}\n"],"mappings":";;;AAAA,SAASA,cAAc,QAAQ,oCAAoC;AACnE,SAASC,eAAe,QAAQ,0CAA0C;AAE1E,SAASC,sBAAsB,QAAQ,qCAAqC;AAE5E,SAASC,oBAAoB,QAAQ,uCAAuC;AAC5E,SAASC,UAAU,IAAVA,WAAU,EAAEC,UAAU,QAAQ,eAAe;AAEtD,gBAAsBC,cAAcA,CAAAC,EAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA;EAAA,OAAAC,eAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AA4BnC,SAAAF,gBAAA;EAAAA,eAAA,GAAAG,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CA5BM,SAAAC,SACLC,OAAoB,EACpBC,IAAmB,EACnBC,QAAkB,EAClBC,IAAsB;IAAA,IAAAC,IAAA,EAAAC,UAAA;IAAA,OAAAR,mBAAA,GAAAS,IAAA,UAAAC,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAAC,IAAA,GAAAD,SAAA,CAAAE,IAAA;QAAA;UAEhBN,IAAI,GAAGF,QAAQ,CAACS,MAAM,CAACC,KAAK,CAACT,IAAI,CAAC,CAAC,CAAC,CAAC;UAAA,KACvCrB,cAAc,CAACsB,IAAI,CAAC;YAAAI,SAAA,CAAAE,IAAA;YAAA;UAAA;UAAA,MAChB,IAAIG,KAAK,CAAC,qDAAqD,CAAC;QAAA;UAElER,UAAU,GAAGD,IAAI,CAACU,KAAK,CAAEX,IAAI,CAAC,CAAC,CAAC,CAAC;UACvClB,oBAAoB,CAACe,OAAO,EAAE;YAC5BK,UAAU,EAAVA,UAAU;YACVnB,UAAU;cAAA,IAAA6B,YAAA,GAAAnB,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAE,SAAAkB,SAAA;gBAAA,IAAAC,WAAA,EAAAC,MAAA;gBAAA,OAAArB,mBAAA,GAAAS,IAAA,UAAAa,UAAAC,SAAA;kBAAA,kBAAAA,SAAA,CAAAX,IAAA,GAAAW,SAAA,CAAAV,IAAA;oBAAA;sBAAAU,SAAA,CAAAX,IAAA;sBAEFQ,WAAW,GAAG/B,WAAU,CAACgB,QAAQ,CAACS,MAAM,EAAER,IAAI,CAAC;sBAAAiB,SAAA,CAAAV,IAAA;sBAAA,OAC/CR,QAAQ,CAACmB,UAAU,CAACJ,WAAW,CAAC;oBAAA;sBAChCC,MAAM;wBAAA,IAAAI,IAAA,GAAA1B,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAyB,QAAA;0BAAA,OAAA1B,mBAAA,GAAAS,IAAA,UAAAkB,SAAAC,QAAA;4BAAA,kBAAAA,QAAA,CAAAhB,IAAA,GAAAgB,QAAA,CAAAf,IAAA;8BAAA;gCAAAe,QAAA,CAAAf,IAAA;gCAAA,OACPR,QAAQ,CAACmB,UAAU,CAAClC,UAAU,CAAC8B,WAAW,EAAEd,IAAI,EAAEE,UAAU,CAAC,CAAC;8BAAA;8BAAA;gCAAA,OAAAoB,QAAA,CAAAC,IAAA;4BAAA;0BAAA,GAAAH,OAAA;wBAAA,CACrE;wBAAA,gBAFKL,MAAMA,CAAA;0BAAA,OAAAI,IAAA,CAAA5B,KAAA,OAAAC,SAAA;wBAAA;sBAAA;sBAGZX,sBAAsB,CAACgB,OAAO,EAAEC,IAAI,EAAGiB,MAAM,CAAC;sBAACE,SAAA,CAAAV,IAAA;sBAAA;oBAAA;sBAAAU,SAAA,CAAAX,IAAA;sBAAAW,SAAA,CAAAO,EAAA,GAAAP,SAAA;sBAE/CrC,eAAe,CAACiB,OAAO,EAAE;wBACvB4B,IAAI,sBAAAC,MAAA,CAAsBT,SAAA,CAAAO,EAAA,CAAIG,OAAO;sBACvC,CAAC,CAAC;oBAAC;oBAAA;sBAAA,OAAAV,SAAA,CAAAM,IAAA;kBAAA;gBAAA,GAAAV,QAAA;cAAA,CAEN;cAAA,SAAA9B,WAAA;gBAAA,OAAA6B,YAAA,CAAArB,KAAA,OAAAC,SAAA;cAAA;cAAA,OAAAT,UAAA;YAAA;UACH,CAAC,CAAC;QAAC;QAAA;UAAA,OAAAsB,SAAA,CAAAkB,IAAA;MAAA;IAAA,GAAA3B,QAAA;EAAA,CACJ;EAAA,OAAAN,eAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}