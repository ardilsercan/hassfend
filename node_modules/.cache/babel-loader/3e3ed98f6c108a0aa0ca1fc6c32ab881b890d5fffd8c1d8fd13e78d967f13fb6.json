{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport { html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { assert, assign, boolean, object, optional, string } from \"superstruct\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport \"../../../../components/ha-form/ha-form\";\nimport { baseLovelaceCardConfig } from \"../structs/base-card-struct\";\nconst cardConfigStruct = assign(baseLovelaceCardConfig, object({\n  title: optional(string()),\n  url: optional(string()),\n  aspect_ratio: optional(string()),\n  allow_open_top_navigation: optional(boolean())\n}));\nconst SCHEMA = [{\n  name: \"title\",\n  selector: {\n    text: {}\n  }\n}, {\n  name: \"\",\n  type: \"grid\",\n  schema: [{\n    name: \"url\",\n    required: true,\n    selector: {\n      text: {}\n    }\n  }, {\n    name: \"aspect_ratio\",\n    selector: {\n      text: {}\n    }\n  }]\n}];\nexport let HuiIframeCardEditor = _decorate([customElement(\"hui-iframe-card-editor\")], function (_initialize, _LitElement) {\n  class HuiIframeCardEditor extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HuiIframeCardEditor,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_config\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"setConfig\",\n      value: function setConfig(config) {\n        assert(config, cardConfigStruct);\n        this._config = config;\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this.hass || !this._config) {\n          return nothing;\n        }\n        return html`\n      <ha-form\n        .hass=${this.hass}\n        .data=${this._config}\n        .schema=${SCHEMA}\n        .computeLabel=${this._computeLabelCallback}\n        @value-changed=${this._valueChanged}\n      ></ha-form>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_valueChanged\",\n      value: function _valueChanged(ev) {\n        fireEvent(this, \"config-changed\", {\n          config: ev.detail.value\n        });\n      }\n    }, {\n      kind: \"field\",\n      key: \"_computeLabelCallback\",\n      value() {\n        return schema => this.hass.localize(`ui.panel.lovelace.editor.card.generic.${schema.name}`);\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["html","LitElement","nothing","customElement","property","state","assert","assign","boolean","object","optional","string","fireEvent","baseLovelaceCardConfig","cardConfigStruct","title","url","aspect_ratio","allow_open_top_navigation","SCHEMA","name","selector","text","type","schema","required","HuiIframeCardEditor","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","setConfig","config","_config","render","hass","_computeLabelCallback","_valueChanged","ev","detail","localize"],"sources":["/workspaces/frontend/src/panels/lovelace/editor/config-elements/hui-iframe-card-editor.ts"],"sourcesContent":["import { html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { assert, assign, boolean, object, optional, string } from \"superstruct\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport \"../../../../components/ha-form/ha-form\";\nimport type { SchemaUnion } from \"../../../../components/ha-form/types\";\nimport type { HomeAssistant } from \"../../../../types\";\nimport type { IframeCardConfig } from \"../../cards/types\";\nimport type { LovelaceCardEditor } from \"../../types\";\nimport { baseLovelaceCardConfig } from \"../structs/base-card-struct\";\n\nconst cardConfigStruct = assign(\n  baseLovelaceCardConfig,\n  object({\n    title: optional(string()),\n    url: optional(string()),\n    aspect_ratio: optional(string()),\n    allow_open_top_navigation: optional(boolean()),\n  })\n);\n\nconst SCHEMA = [\n  { name: \"title\", selector: { text: {} } },\n  {\n    name: \"\",\n    type: \"grid\",\n    schema: [\n      { name: \"url\", required: true, selector: { text: {} } },\n      { name: \"aspect_ratio\", selector: { text: {} } },\n    ],\n  },\n] as const;\n\n@customElement(\"hui-iframe-card-editor\")\nexport class HuiIframeCardEditor\n  extends LitElement\n  implements LovelaceCardEditor\n{\n  @property({ attribute: false }) public hass?: HomeAssistant;\n\n  @state() private _config?: IframeCardConfig;\n\n  public setConfig(config: IframeCardConfig): void {\n    assert(config, cardConfigStruct);\n    this._config = config;\n  }\n\n  protected render() {\n    if (!this.hass || !this._config) {\n      return nothing;\n    }\n\n    return html`\n      <ha-form\n        .hass=${this.hass}\n        .data=${this._config}\n        .schema=${SCHEMA}\n        .computeLabel=${this._computeLabelCallback}\n        @value-changed=${this._valueChanged}\n      ></ha-form>\n    `;\n  }\n\n  private _valueChanged(ev: CustomEvent): void {\n    fireEvent(this, \"config-changed\", { config: ev.detail.value });\n  }\n\n  private _computeLabelCallback = (schema: SchemaUnion<typeof SCHEMA>) =>\n    this.hass!.localize(`ui.panel.lovelace.editor.card.generic.${schema.name}`);\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-iframe-card-editor\": HuiIframeCardEditor;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}