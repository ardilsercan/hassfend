{"ast":null,"code":"import \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\n/**\n * @license\n * Copyright (c) 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * Convenience method for reading a value from a path.\n *\n * @param {string} path\n * @param {object} object\n */\nexport function get(path, object) {\n  return path.split('.').reduce(function (obj, property) {\n    return obj ? obj[property] : undefined;\n  }, object);\n}\n\n/**\n * Convenience method for setting a value to a path.\n *\n * @param {string} path\n * @param {unknown} value\n * @param {object} object\n */\nexport function set(path, value, object) {\n  var pathParts = path.split('.');\n  var lastPart = pathParts.pop();\n  var target = pathParts.reduce(function (target, part) {\n    return target[part];\n  }, object);\n  target[lastPart] = value;\n}","map":{"version":3,"names":["get","path","object","split","reduce","obj","property","undefined","set","value","pathParts","lastPart","pop","target","part"],"sources":["/Users/sercanardil/Desktop/frontend/node_modules/@vaadin/component-base/src/path-utils.js"],"sourcesContent":["/**\n * @license\n * Copyright (c) 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * Convenience method for reading a value from a path.\n *\n * @param {string} path\n * @param {object} object\n */\nexport function get(path, object) {\n  return path.split('.').reduce((obj, property) => (obj ? obj[property] : undefined), object);\n}\n\n/**\n * Convenience method for setting a value to a path.\n *\n * @param {string} path\n * @param {unknown} value\n * @param {object} object\n */\nexport function set(path, value, object) {\n  const pathParts = path.split('.');\n  const lastPart = pathParts.pop();\n  const target = pathParts.reduce((target, part) => target[part], object);\n  target[lastPart] = value;\n}\n"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,GAAGA,CAACC,IAAI,EAAEC,MAAM,EAAE;EAChC,OAAOD,IAAI,CAACE,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,CAAC,UAACC,GAAG,EAAEC,QAAQ;IAAA,OAAMD,GAAG,GAAGA,GAAG,CAACC,QAAQ,CAAC,GAAGC,SAAS;EAAA,CAAC,EAAEL,MAAM,CAAC;AAC7F;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASM,GAAGA,CAACP,IAAI,EAAEQ,KAAK,EAAEP,MAAM,EAAE;EACvC,IAAMQ,SAAS,GAAGT,IAAI,CAACE,KAAK,CAAC,GAAG,CAAC;EACjC,IAAMQ,QAAQ,GAAGD,SAAS,CAACE,GAAG,CAAC,CAAC;EAChC,IAAMC,MAAM,GAAGH,SAAS,CAACN,MAAM,CAAC,UAACS,MAAM,EAAEC,IAAI;IAAA,OAAKD,MAAM,CAACC,IAAI,CAAC;EAAA,GAAEZ,MAAM,CAAC;EACvEW,MAAM,CAACF,QAAQ,CAAC,GAAGF,KAAK;AAC1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}