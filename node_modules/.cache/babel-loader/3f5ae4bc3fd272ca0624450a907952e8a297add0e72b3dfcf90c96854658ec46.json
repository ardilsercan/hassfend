{"ast":null,"code":"export const voiceAssistants = {\n  conversation: {\n    domain: \"assist_pipeline\",\n    name: \"Assist\"\n  },\n  \"cloud.alexa\": {\n    domain: \"alexa\",\n    name: \"Amazon Alexa\"\n  },\n  \"cloud.google_assistant\": {\n    domain: \"google_assistant\",\n    name: \"Google Assistant\"\n  }\n};\nexport const setExposeNewEntities = (hass, assistant, expose_new) => hass.callWS({\n  type: \"homeassistant/expose_new_entities/set\",\n  assistant,\n  expose_new\n});\nexport const getExposeNewEntities = (hass, assistant) => hass.callWS({\n  type: \"homeassistant/expose_new_entities/get\",\n  assistant\n});\nexport const exposeEntities = (hass, assistants, entity_ids, should_expose) => hass.callWS({\n  type: \"homeassistant/expose_entity\",\n  assistants,\n  entity_ids,\n  should_expose\n});\nexport const listExposedEntities = hass => hass.callWS({\n  type: \"homeassistant/expose_entity/list\"\n});","map":{"version":3,"names":["voiceAssistants","conversation","domain","name","setExposeNewEntities","hass","assistant","expose_new","callWS","type","getExposeNewEntities","exposeEntities","assistants","entity_ids","should_expose","listExposedEntities"],"sources":["/Users/sercanardil/Desktop/frontend/src/data/expose.ts"],"sourcesContent":["import { HomeAssistant } from \"../types\";\n\nexport const voiceAssistants = {\n  conversation: { domain: \"assist_pipeline\", name: \"Assist\" },\n  \"cloud.alexa\": {\n    domain: \"alexa\",\n    name: \"Amazon Alexa\",\n  },\n  \"cloud.google_assistant\": {\n    domain: \"google_assistant\",\n    name: \"Google Assistant\",\n  },\n} as const;\n\nexport interface ExposeEntitySettings {\n  conversation?: boolean;\n  \"cloud.alexa\"?: boolean;\n  \"cloud.google_assistant\"?: boolean;\n}\n\nexport const setExposeNewEntities = (\n  hass: HomeAssistant,\n  assistant: string,\n  expose_new: boolean\n) =>\n  hass.callWS({\n    type: \"homeassistant/expose_new_entities/set\",\n    assistant,\n    expose_new,\n  });\n\nexport const getExposeNewEntities = (hass: HomeAssistant, assistant: string) =>\n  hass.callWS<{ expose_new: boolean }>({\n    type: \"homeassistant/expose_new_entities/get\",\n    assistant,\n  });\n\nexport const exposeEntities = (\n  hass: HomeAssistant,\n  assistants: string[],\n  entity_ids: string[],\n  should_expose: boolean\n) =>\n  hass.callWS({\n    type: \"homeassistant/expose_entity\",\n    assistants,\n    entity_ids,\n    should_expose,\n  });\n\nexport const listExposedEntities = (hass: HomeAssistant) =>\n  hass.callWS<{ exposed_entities: Record<string, ExposeEntitySettings> }>({\n    type: \"homeassistant/expose_entity/list\",\n  });\n"],"mappings":"AAEA,OAAO,MAAMA,eAAe,GAAG;EAC7BC,YAAY,EAAE;IAAEC,MAAM,EAAE,iBAAiB;IAAEC,IAAI,EAAE;EAAS,CAAC;EAC3D,aAAa,EAAE;IACbD,MAAM,EAAE,OAAO;IACfC,IAAI,EAAE;EACR,CAAC;EACD,wBAAwB,EAAE;IACxBD,MAAM,EAAE,kBAAkB;IAC1BC,IAAI,EAAE;EACR;AACF,CAAU;AAQV,OAAO,MAAMC,oBAAoB,GAAGA,CAClCC,IAAmB,EACnBC,SAAiB,EACjBC,UAAmB,KAEnBF,IAAI,CAACG,MAAM,CAAC;EACVC,IAAI,EAAE,uCAAuC;EAC7CH,SAAS;EACTC;AACF,CAAC,CAAC;AAEJ,OAAO,MAAMG,oBAAoB,GAAGA,CAACL,IAAmB,EAAEC,SAAiB,KACzED,IAAI,CAACG,MAAM,CAA0B;EACnCC,IAAI,EAAE,uCAAuC;EAC7CH;AACF,CAAC,CAAC;AAEJ,OAAO,MAAMK,cAAc,GAAGA,CAC5BN,IAAmB,EACnBO,UAAoB,EACpBC,UAAoB,EACpBC,aAAsB,KAEtBT,IAAI,CAACG,MAAM,CAAC;EACVC,IAAI,EAAE,6BAA6B;EACnCG,UAAU;EACVC,UAAU;EACVC;AACF,CAAC,CAAC;AAEJ,OAAO,MAAMC,mBAAmB,GAAIV,IAAmB,IACrDA,IAAI,CAACG,MAAM,CAA6D;EACtEC,IAAI,EAAE;AACR,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}