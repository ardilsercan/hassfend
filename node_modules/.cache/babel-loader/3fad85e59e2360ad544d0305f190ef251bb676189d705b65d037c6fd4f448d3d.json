{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport memoizeOne from \"memoize-one\";\nimport { css, html, LitElement } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { fireEvent } from \"../../../../../common/dom/fire_event\";\nimport \"../../../../../components/ha-button-menu\";\nimport \"../../../../../components/ha-check-list-item\";\nimport \"../../../../../components/ha-icon-button\";\nimport \"../../../../../components/ha-textfield\";\nconst DEFAULT_UPDATE_TYPES = [\"added\", \"removed\"];\nconst DEFAULT_NOTIFICATION_ID = \"\";\nexport let HaPersistentNotificationTrigger = _decorate([customElement(\"ha-automation-trigger-persistent_notification\")], function (_initialize, _LitElement) {\n  class HaPersistentNotificationTrigger extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaPersistentNotificationTrigger,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"trigger\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"disabled\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_schema\",\n      value() {\n        return memoizeOne(localize => [{\n          name: \"notification_id\",\n          required: false,\n          selector: {\n            text: {}\n          }\n        }, {\n          name: \"update_type\",\n          type: \"multi_select\",\n          required: false,\n          options: [[\"added\", localize(\"ui.panel.config.automation.editor.triggers.type.persistent_notification.update_types.added\")], [\"removed\", localize(\"ui.panel.config.automation.editor.triggers.type.persistent_notification.update_types.removed\")], [\"current\", localize(\"ui.panel.config.automation.editor.triggers.type.persistent_notification.update_types.current\")], [\"updated\", localize(\"ui.panel.config.automation.editor.triggers.type.persistent_notification.update_types.updated\")]]\n        }]);\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"defaultConfig\",\n      value: function defaultConfig() {\n        return {\n          update_type: [...DEFAULT_UPDATE_TYPES],\n          notification_id: DEFAULT_NOTIFICATION_ID\n        };\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        const schema = this._schema(this.hass.localize);\n        return html`\n      <ha-form\n        .schema=${schema}\n        .data=${this.trigger}\n        .hass=${this.hass}\n        .disabled=${this.disabled}\n        .computeLabel=${this._computeLabelCallback}\n        @value-changed=${this._valueChanged}\n      ></ha-form>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_valueChanged\",\n      value: function _valueChanged(ev) {\n        ev.stopPropagation();\n        const newTrigger = ev.detail.value;\n        fireEvent(this, \"value-changed\", {\n          value: newTrigger\n        });\n      }\n    }, {\n      kind: \"field\",\n      key: \"_computeLabelCallback\",\n      value() {\n        return schema => this.hass.localize(`ui.panel.config.automation.editor.triggers.type.persistent_notification.${schema.name}`);\n      }\n    }, {\n      kind: \"field\",\n      static: true,\n      key: \"styles\",\n      value() {\n        return css`\n    ha-textfield {\n      display: block;\n    }\n  `;\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["memoizeOne","css","html","LitElement","customElement","property","fireEvent","DEFAULT_UPDATE_TYPES","DEFAULT_NOTIFICATION_ID","HaPersistentNotificationTrigger","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","type","Boolean","localize","name","required","selector","text","options","static","defaultConfig","update_type","notification_id","render","schema","_schema","hass","trigger","disabled","_computeLabelCallback","_valueChanged","ev","stopPropagation","newTrigger","detail"],"sources":["/workspaces/frontend/src/panels/config/automation/trigger/types/ha-automation-trigger-persistent_notification.ts"],"sourcesContent":["import memoizeOne from \"memoize-one\";\n\nimport { css, html, LitElement } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { fireEvent } from \"../../../../../common/dom/fire_event\";\nimport \"../../../../../components/ha-button-menu\";\nimport \"../../../../../components/ha-check-list-item\";\nimport \"../../../../../components/ha-icon-button\";\nimport \"../../../../../components/ha-textfield\";\nimport { PersistentNotificationTrigger } from \"../../../../../data/automation\";\nimport { HomeAssistant } from \"../../../../../types\";\nimport type { TriggerElement } from \"../ha-automation-trigger-row\";\nimport type { LocalizeFunc } from \"../../../../../common/translations/localize\";\nimport type { SchemaUnion } from \"../../../../../components/ha-form/types\";\n\nconst DEFAULT_UPDATE_TYPES = [\"added\", \"removed\"];\nconst DEFAULT_NOTIFICATION_ID = \"\";\n\n@customElement(\"ha-automation-trigger-persistent_notification\")\nexport class HaPersistentNotificationTrigger\n  extends LitElement\n  implements TriggerElement\n{\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false })\n  public trigger!: PersistentNotificationTrigger;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  private _schema = memoizeOne(\n    (localize: LocalizeFunc) =>\n      [\n        {\n          name: \"notification_id\",\n          required: false,\n          selector: { text: {} },\n        },\n        {\n          name: \"update_type\",\n          type: \"multi_select\",\n          required: false,\n          options: [\n            [\n              \"added\",\n              localize(\n                \"ui.panel.config.automation.editor.triggers.type.persistent_notification.update_types.added\"\n              ),\n            ],\n            [\n              \"removed\",\n              localize(\n                \"ui.panel.config.automation.editor.triggers.type.persistent_notification.update_types.removed\"\n              ),\n            ],\n            [\n              \"current\",\n              localize(\n                \"ui.panel.config.automation.editor.triggers.type.persistent_notification.update_types.current\"\n              ),\n            ],\n            [\n              \"updated\",\n              localize(\n                \"ui.panel.config.automation.editor.triggers.type.persistent_notification.update_types.updated\"\n              ),\n            ],\n          ],\n        },\n      ] as const\n  );\n\n  public static get defaultConfig() {\n    return {\n      update_type: [...DEFAULT_UPDATE_TYPES],\n      notification_id: DEFAULT_NOTIFICATION_ID,\n    };\n  }\n\n  protected render() {\n    const schema = this._schema(this.hass.localize);\n    return html`\n      <ha-form\n        .schema=${schema}\n        .data=${this.trigger}\n        .hass=${this.hass}\n        .disabled=${this.disabled}\n        .computeLabel=${this._computeLabelCallback}\n        @value-changed=${this._valueChanged}\n      ></ha-form>\n    `;\n  }\n\n  private _valueChanged(ev: CustomEvent): void {\n    ev.stopPropagation();\n    const newTrigger = ev.detail.value;\n    fireEvent(this, \"value-changed\", { value: newTrigger });\n  }\n\n  private _computeLabelCallback = (\n    schema: SchemaUnion<ReturnType<typeof this._schema>>\n  ): string =>\n    this.hass.localize(\n      `ui.panel.config.automation.editor.triggers.type.persistent_notification.${schema.name}`\n    );\n\n  static styles = css`\n    ha-textfield {\n      display: block;\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-automation-trigger-persistent_notification\": HaPersistentNotificationTrigger;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}