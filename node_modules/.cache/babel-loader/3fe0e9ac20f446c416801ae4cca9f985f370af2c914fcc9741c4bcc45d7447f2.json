{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _decorate from \"@babel/runtime/helpers/decorate\";\nvar _templateObject, _templateObject2;\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.parse-float.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.ends-with.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport { css, html, LitElement } from \"lit\";\nimport { customElement, property, query } from \"lit/decorators\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport \"../ha-textfield\";\nexport var HaFormFloat = _decorate([customElement(\"ha-form-float\")], function (_initialize, _LitElement) {\n  var HaFormFloat = /*#__PURE__*/function (_LitElement2) {\n    _inherits(HaFormFloat, _LitElement2);\n    function HaFormFloat() {\n      var _this;\n      _classCallCheck(this, HaFormFloat);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, HaFormFloat, [].concat(args));\n      _initialize(_assertThisInitialized(_this));\n      return _this;\n    }\n    return _createClass(HaFormFloat);\n  }(_LitElement);\n  return {\n    F: HaFormFloat,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"localize\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"schema\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"data\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"label\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"helper\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"disabled\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [query(\"ha-textfield\")],\n      key: \"_input\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"focus\",\n      value: function focus() {\n        if (this._input) {\n          this._input.focus();\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var _this$schema$descript, _this$localize;\n        return html(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      <ha-textfield\\n        type=\\\"numeric\\\"\\n        inputMode=\\\"decimal\\\"\\n        .label=\", \"\\n        .helper=\", \"\\n        helperPersistent\\n        .value=\", \"\\n        .disabled=\", \"\\n        .required=\", \"\\n        .autoValidate=\", \"\\n        .suffix=\", \"\\n        .validationMessage=\", \"\\n        @input=\", \"\\n      ></ha-textfield>\\n    \"])), this.label, this.helper, this.data !== undefined ? this.data : \"\", this.disabled, this.schema.required, this.schema.required, (_this$schema$descript = this.schema.description) === null || _this$schema$descript === void 0 ? void 0 : _this$schema$descript.suffix, this.schema.required ? (_this$localize = this.localize) === null || _this$localize === void 0 ? void 0 : _this$localize.call(this, \"ui.common.error_required\") : undefined, this._valueChanged);\n      }\n    }, {\n      kind: \"method\",\n      key: \"updated\",\n      value: function updated(changedProps) {\n        if (changedProps.has(\"schema\")) {\n          this.toggleAttribute(\"own-margin\", !!this.schema.required);\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_valueChanged\",\n      value: function _valueChanged(ev) {\n        var source = ev.target;\n        var rawValue = source.value.replace(\",\", \".\");\n        var value;\n        if (rawValue.endsWith(\".\")) {\n          return;\n        }\n\n        // Allow user to start typing a negative value\n        if (rawValue === \"-\") {\n          return;\n        }\n        if (rawValue !== \"\") {\n          value = parseFloat(rawValue);\n          if (isNaN(value)) {\n            value = undefined;\n          }\n        }\n\n        // Detect anything changed\n        if (this.data === value) {\n          // parseFloat will drop invalid text at the end, in that case update textfield\n          var newRawValue = value === undefined ? \"\" : String(value);\n          if (source.value !== newRawValue) {\n            source.value = newRawValue;\n          }\n          return;\n        }\n        fireEvent(this, \"value-changed\", {\n          value: value\n        });\n      }\n    }, {\n      kind: \"field\",\n      static: true,\n      key: \"styles\",\n      value: function value() {\n        return css(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n    :host([own-margin]) {\\n      margin-bottom: 5px;\\n    }\\n    ha-textfield {\\n      display: block;\\n    }\\n  \"])));\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","customElement","property","query","fireEvent","HaFormFloat","_decorate","_initialize","_LitElement","_LitElement2","_inherits","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_assertThisInitialized","_createClass","F","d","kind","decorators","attribute","key","value","type","Boolean","focus","_input","render","_this$schema$descript","_this$localize","_templateObject","_taggedTemplateLiteral","label","helper","data","undefined","disabled","schema","required","description","suffix","localize","call","_valueChanged","updated","changedProps","has","toggleAttribute","ev","source","target","rawValue","replace","endsWith","parseFloat","isNaN","newRawValue","String","static","_templateObject2"],"sources":["/Users/sercanardil/Desktop/frontend/src/components/ha-form/ha-form-float.ts"],"sourcesContent":["import { css, html, LitElement, TemplateResult, PropertyValues } from \"lit\";\nimport { customElement, property, query } from \"lit/decorators\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport type { HaTextField } from \"../ha-textfield\";\nimport \"../ha-textfield\";\nimport { HaFormElement, HaFormFloatData, HaFormFloatSchema } from \"./types\";\nimport { LocalizeFunc } from \"../../common/translations/localize\";\n\n@customElement(\"ha-form-float\")\nexport class HaFormFloat extends LitElement implements HaFormElement {\n  @property({ attribute: false }) public localize?: LocalizeFunc;\n\n  @property({ attribute: false }) public schema!: HaFormFloatSchema;\n\n  @property({ attribute: false }) public data!: HaFormFloatData;\n\n  @property() public label?: string;\n\n  @property() public helper?: string;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @query(\"ha-textfield\") private _input?: HaTextField;\n\n  public focus() {\n    if (this._input) {\n      this._input.focus();\n    }\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      <ha-textfield\n        type=\"numeric\"\n        inputMode=\"decimal\"\n        .label=${this.label}\n        .helper=${this.helper}\n        helperPersistent\n        .value=${this.data !== undefined ? this.data : \"\"}\n        .disabled=${this.disabled}\n        .required=${this.schema.required}\n        .autoValidate=${this.schema.required}\n        .suffix=${this.schema.description?.suffix}\n        .validationMessage=${this.schema.required\n          ? this.localize?.(\"ui.common.error_required\")\n          : undefined}\n        @input=${this._valueChanged}\n      ></ha-textfield>\n    `;\n  }\n\n  protected updated(changedProps: PropertyValues): void {\n    if (changedProps.has(\"schema\")) {\n      this.toggleAttribute(\"own-margin\", !!this.schema.required);\n    }\n  }\n\n  private _valueChanged(ev: Event) {\n    const source = ev.target as HaTextField;\n    const rawValue = source.value.replace(\",\", \".\");\n\n    let value: number | undefined;\n\n    if (rawValue.endsWith(\".\")) {\n      return;\n    }\n\n    // Allow user to start typing a negative value\n    if (rawValue === \"-\") {\n      return;\n    }\n\n    if (rawValue !== \"\") {\n      value = parseFloat(rawValue);\n      if (isNaN(value)) {\n        value = undefined;\n      }\n    }\n\n    // Detect anything changed\n    if (this.data === value) {\n      // parseFloat will drop invalid text at the end, in that case update textfield\n      const newRawValue = value === undefined ? \"\" : String(value);\n      if (source.value !== newRawValue) {\n        source.value = newRawValue;\n      }\n      return;\n    }\n\n    fireEvent(this, \"value-changed\", {\n      value,\n    });\n  }\n\n  static styles = css`\n    :host([own-margin]) {\n      margin-bottom: 5px;\n    }\n    ha-textfield {\n      display: block;\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-form-float\": HaFormFloat;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}