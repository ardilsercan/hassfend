{"ast":null,"code":"import { loadCSS, loadJS, loadModule } from \"../../../common/dom/load_resource\";\n// CSS and JS should only be imported once. Modules and HTML are safe.\nconst CSS_CACHE = {};\nconst JS_CACHE = {};\nexport const loadLovelaceResources = (resources, hass) => {\n  resources.forEach(resource => {\n    const normalizedUrl = new URL(resource.url, hass.auth.data.hassUrl).toString();\n    switch (resource.type) {\n      case \"css\":\n        if (normalizedUrl in CSS_CACHE) {\n          break;\n        }\n        CSS_CACHE[normalizedUrl] = loadCSS(normalizedUrl);\n        break;\n      case \"js\":\n        if (normalizedUrl in JS_CACHE) {\n          break;\n        }\n        JS_CACHE[normalizedUrl] = loadJS(normalizedUrl);\n        break;\n      case \"module\":\n        loadModule(normalizedUrl);\n        break;\n      default:\n        // eslint-disable-next-line\n        console.warn(`Unknown resource type specified: ${resource.type}`);\n    }\n  });\n};","map":{"version":3,"names":["loadCSS","loadJS","loadModule","CSS_CACHE","JS_CACHE","loadLovelaceResources","resources","hass","forEach","resource","normalizedUrl","URL","url","auth","data","hassUrl","toString","type","console","warn"],"sources":["/workspaces/frontend/src/panels/lovelace/common/load-resources.ts"],"sourcesContent":["import { loadCSS, loadJS, loadModule } from \"../../../common/dom/load_resource\";\nimport { LovelaceResource } from \"../../../data/lovelace/resource\";\nimport type { HomeAssistant } from \"../../../types\";\n\n// CSS and JS should only be imported once. Modules and HTML are safe.\nconst CSS_CACHE = {};\nconst JS_CACHE = {};\n\nexport const loadLovelaceResources = (\n  resources: NonNullable<LovelaceResource[]>,\n  hass: HomeAssistant\n) => {\n  resources.forEach((resource) => {\n    const normalizedUrl = new URL(\n      resource.url,\n      hass.auth.data.hassUrl\n    ).toString();\n    switch (resource.type) {\n      case \"css\":\n        if (normalizedUrl in CSS_CACHE) {\n          break;\n        }\n        CSS_CACHE[normalizedUrl] = loadCSS(normalizedUrl);\n        break;\n\n      case \"js\":\n        if (normalizedUrl in JS_CACHE) {\n          break;\n        }\n        JS_CACHE[normalizedUrl] = loadJS(normalizedUrl);\n        break;\n\n      case \"module\":\n        loadModule(normalizedUrl);\n        break;\n\n      default:\n        // eslint-disable-next-line\n        console.warn(`Unknown resource type specified: ${resource.type}`);\n    }\n  });\n};\n"],"mappings":"AAAA,SAASA,OAAO,EAAEC,MAAM,EAAEC,UAAU,QAAQ,mCAAmC;AAI/E;AACA,MAAMC,SAAS,GAAG,CAAC,CAAC;AACpB,MAAMC,QAAQ,GAAG,CAAC,CAAC;AAEnB,OAAO,MAAMC,qBAAqB,GAAGA,CACnCC,SAA0C,EAC1CC,IAAmB,KAChB;EACHD,SAAS,CAACE,OAAO,CAAEC,QAAQ,IAAK;IAC9B,MAAMC,aAAa,GAAG,IAAIC,GAAG,CAC3BF,QAAQ,CAACG,GAAG,EACZL,IAAI,CAACM,IAAI,CAACC,IAAI,CAACC,OACjB,CAAC,CAACC,QAAQ,CAAC,CAAC;IACZ,QAAQP,QAAQ,CAACQ,IAAI;MACnB,KAAK,KAAK;QACR,IAAIP,aAAa,IAAIP,SAAS,EAAE;UAC9B;QACF;QACAA,SAAS,CAACO,aAAa,CAAC,GAAGV,OAAO,CAACU,aAAa,CAAC;QACjD;MAEF,KAAK,IAAI;QACP,IAAIA,aAAa,IAAIN,QAAQ,EAAE;UAC7B;QACF;QACAA,QAAQ,CAACM,aAAa,CAAC,GAAGT,MAAM,CAACS,aAAa,CAAC;QAC/C;MAEF,KAAK,QAAQ;QACXR,UAAU,CAACQ,aAAa,CAAC;QACzB;MAEF;QACE;QACAQ,OAAO,CAACC,IAAI,CAAE,oCAAmCV,QAAQ,CAACQ,IAAK,EAAC,CAAC;IACrE;EACF,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}