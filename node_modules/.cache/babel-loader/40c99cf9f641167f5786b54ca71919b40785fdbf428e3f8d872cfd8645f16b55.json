{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport { html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { formatDate } from \"../../../common/datetime/format_date\";\nimport { formatDateTime } from \"../../../common/datetime/format_date_time\";\nimport { formatTime } from \"../../../common/datetime/format_time\";\nimport { relativeTime } from \"../../../common/datetime/relative_time\";\nimport { capitalizeFirstLetter } from \"../../../common/string/capitalize-first-letter\";\nconst FORMATS = {\n  date: formatDate,\n  datetime: formatDateTime,\n  time: formatTime\n};\nconst INTERVAL_FORMAT = [\"relative\", \"total\"];\nlet HuiTimestampDisplay = _decorate([customElement(\"hui-timestamp-display\")], function (_initialize, _LitElement) {\n  class HuiTimestampDisplay extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HuiTimestampDisplay,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"ts\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"format\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"capitalize\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_relative\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_connected\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_interval\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"connectedCallback\",\n      value: function connectedCallback() {\n        _get(_getPrototypeOf(HuiTimestampDisplay.prototype), \"connectedCallback\", this).call(this);\n        this._connected = true;\n        this._startInterval();\n      }\n    }, {\n      kind: \"method\",\n      key: \"disconnectedCallback\",\n      value: function disconnectedCallback() {\n        _get(_getPrototypeOf(HuiTimestampDisplay.prototype), \"disconnectedCallback\", this).call(this);\n        this._connected = false;\n        this._clearInterval();\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this.ts || !this.hass) {\n          return nothing;\n        }\n        if (isNaN(this.ts.getTime())) {\n          return html`${this.hass.localize(\"ui.panel.lovelace.components.timestamp-display.invalid\")}`;\n        }\n        const format = this._format;\n        if (INTERVAL_FORMAT.includes(format)) {\n          return html` ${this._relative} `;\n        }\n        if (format in FORMATS) {\n          return html`\n        ${FORMATS[format](this.ts, this.hass.locale, this.hass.config)}\n      `;\n        }\n        return html`${this.hass.localize(\"ui.panel.lovelace.components.timestamp-display.invalid_format\")}`;\n      }\n    }, {\n      kind: \"method\",\n      key: \"updated\",\n      value: function updated(changedProperties) {\n        _get(_getPrototypeOf(HuiTimestampDisplay.prototype), \"updated\", this).call(this, changedProperties);\n        if (!changedProperties.has(\"format\") || !this._connected) {\n          return;\n        }\n        if (INTERVAL_FORMAT.includes(\"relative\")) {\n          this._startInterval();\n        } else {\n          this._clearInterval();\n        }\n      }\n    }, {\n      kind: \"get\",\n      key: \"_format\",\n      value: function _format() {\n        return this.format || \"relative\";\n      }\n    }, {\n      kind: \"method\",\n      key: \"_startInterval\",\n      value: function _startInterval() {\n        this._clearInterval();\n        if (this._connected && INTERVAL_FORMAT.includes(this._format)) {\n          this._updateRelative();\n          this._interval = window.setInterval(() => this._updateRelative(), 1000);\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_clearInterval\",\n      value: function _clearInterval() {\n        if (this._interval) {\n          clearInterval(this._interval);\n          this._interval = undefined;\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_updateRelative\",\n      value: function _updateRelative() {\n        var _this$hass;\n        if (this.ts && (_this$hass = this.hass) !== null && _this$hass !== void 0 && _this$hass.localize) {\n          this._relative = this._format === \"relative\" ? relativeTime(this.ts, this.hass.locale) : relativeTime(new Date(), this.hass.locale, this.ts, false);\n          this._relative = this.capitalize ? capitalizeFirstLetter(this._relative) : this._relative;\n        }\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["html","LitElement","nothing","customElement","property","state","formatDate","formatDateTime","formatTime","relativeTime","capitalizeFirstLetter","FORMATS","date","datetime","time","INTERVAL_FORMAT","HuiTimestampDisplay","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","type","Boolean","connectedCallback","_get","_getPrototypeOf","prototype","call","_connected","_startInterval","disconnectedCallback","_clearInterval","render","ts","hass","isNaN","getTime","localize","format","_format","includes","_relative","locale","config","updated","changedProperties","has","_updateRelative","_interval","window","setInterval","clearInterval","undefined","_this$hass","Date","capitalize"],"sources":["/Users/sercanardil/Desktop/frontend/src/panels/lovelace/components/hui-timestamp-display.ts"],"sourcesContent":["import { HassConfig } from \"home-assistant-js-websocket\";\nimport { html, LitElement, PropertyValues, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { formatDate } from \"../../../common/datetime/format_date\";\nimport { formatDateTime } from \"../../../common/datetime/format_date_time\";\nimport { formatTime } from \"../../../common/datetime/format_time\";\nimport { relativeTime } from \"../../../common/datetime/relative_time\";\nimport { capitalizeFirstLetter } from \"../../../common/string/capitalize-first-letter\";\nimport { FrontendLocaleData } from \"../../../data/translation\";\nimport { HomeAssistant } from \"../../../types\";\nimport { TimestampRenderingFormat } from \"./types\";\n\nconst FORMATS: {\n  [key: string]: (\n    ts: Date,\n    lang: FrontendLocaleData,\n    config: HassConfig\n  ) => string;\n} = {\n  date: formatDate,\n  datetime: formatDateTime,\n  time: formatTime,\n};\nconst INTERVAL_FORMAT = [\"relative\", \"total\"];\n\n@customElement(\"hui-timestamp-display\")\nclass HuiTimestampDisplay extends LitElement {\n  @property({ attribute: false }) public hass?: HomeAssistant;\n\n  @property({ attribute: false }) public ts?: Date;\n\n  @property() public format?: TimestampRenderingFormat;\n\n  @property({ type: Boolean }) public capitalize = false;\n\n  @state() private _relative?: string;\n\n  private _connected?: boolean;\n\n  private _interval?: number;\n\n  public connectedCallback(): void {\n    super.connectedCallback();\n    this._connected = true;\n    this._startInterval();\n  }\n\n  public disconnectedCallback(): void {\n    super.disconnectedCallback();\n    this._connected = false;\n    this._clearInterval();\n  }\n\n  protected render() {\n    if (!this.ts || !this.hass) {\n      return nothing;\n    }\n\n    if (isNaN(this.ts.getTime())) {\n      return html`${this.hass.localize(\n        \"ui.panel.lovelace.components.timestamp-display.invalid\"\n      )}`;\n    }\n\n    const format = this._format;\n\n    if (INTERVAL_FORMAT.includes(format)) {\n      return html` ${this._relative} `;\n    }\n    if (format in FORMATS) {\n      return html`\n        ${FORMATS[format](this.ts, this.hass.locale, this.hass.config)}\n      `;\n    }\n    return html`${this.hass.localize(\n      \"ui.panel.lovelace.components.timestamp-display.invalid_format\"\n    )}`;\n  }\n\n  protected updated(changedProperties: PropertyValues): void {\n    super.updated(changedProperties);\n    if (!changedProperties.has(\"format\") || !this._connected) {\n      return;\n    }\n\n    if (INTERVAL_FORMAT.includes(\"relative\")) {\n      this._startInterval();\n    } else {\n      this._clearInterval();\n    }\n  }\n\n  private get _format(): string {\n    return this.format || \"relative\";\n  }\n\n  private _startInterval(): void {\n    this._clearInterval();\n    if (this._connected && INTERVAL_FORMAT.includes(this._format)) {\n      this._updateRelative();\n      this._interval = window.setInterval(() => this._updateRelative(), 1000);\n    }\n  }\n\n  private _clearInterval(): void {\n    if (this._interval) {\n      clearInterval(this._interval);\n      this._interval = undefined;\n    }\n  }\n\n  private _updateRelative(): void {\n    if (this.ts && this.hass?.localize) {\n      this._relative =\n        this._format === \"relative\"\n          ? relativeTime(this.ts, this.hass!.locale)\n          : relativeTime(new Date(), this.hass!.locale, this.ts, false);\n\n      this._relative = this.capitalize\n        ? capitalizeFirstLetter(this._relative)\n        : this._relative;\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-timestamp-display\": HuiTimestampDisplay;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}