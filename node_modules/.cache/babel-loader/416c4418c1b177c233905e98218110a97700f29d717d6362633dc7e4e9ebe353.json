{"ast":null,"code":"import _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.object.get-own-property-names.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\n/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport '../utils/boot.js';\nimport { wrap } from '../utils/wrap.js';\nimport '../utils/settings.js';\nimport { FlattenedNodesObserver } from '../utils/flattened-nodes-observer.js';\nexport { flush, enqueueDebouncer as addDebouncer } from '../utils/flush.js';\n/* eslint-disable no-unused-vars */\nimport { Debouncer } from '../utils/debounce.js'; // used in type annotations\n/* eslint-enable no-unused-vars */\n\nvar p = Element.prototype;\n/**\n * @const {function(this:Node, string): boolean}\n */\nvar normalizedMatchesSelector = p.matches || p.matchesSelector || p.mozMatchesSelector || p.msMatchesSelector || p.oMatchesSelector || p.webkitMatchesSelector;\n\n/**\n * Cross-platform `element.matches` shim.\n *\n * @function matchesSelector\n * @param {!Node} node Node to check selector against\n * @param {string} selector Selector to match\n * @return {boolean} True if node matched selector\n */\nexport var matchesSelector = function matchesSelector(node, selector) {\n  return normalizedMatchesSelector.call(node, selector);\n};\n\n/**\n * Node API wrapper class returned from `Polymer.dom.(target)` when\n * `target` is a `Node`.\n * @implements {PolymerDomApi}\n * @unrestricted\n */\nvar DomApiNative = /*#__PURE__*/function () {\n  /**\n   * @param {!Node} node Node for which to create a Polymer.dom helper object.\n   */\n  function DomApiNative(node) {\n    _classCallCheck(this, DomApiNative);\n    if (window['ShadyDOM'] && window['ShadyDOM']['inUse']) {\n      window['ShadyDOM']['patch'](node);\n    }\n    this.node = node;\n  }\n\n  /**\n   * Returns an instance of `FlattenedNodesObserver` that\n   * listens for node changes on this element.\n   *\n   * @param {function(this:HTMLElement, { target: !HTMLElement, addedNodes: !Array<!Element>, removedNodes: !Array<!Element> }):void} callback Called when direct or distributed children\n   *   of this element changes\n   * @return {!PolymerDomApi.ObserveHandle} Observer instance\n   * @override\n   */\n  _createClass(DomApiNative, [{\n    key: \"observeNodes\",\n    value: function observeNodes(callback) {\n      return new FlattenedNodesObserver( /** @type {!HTMLElement} */this.node, callback);\n    }\n\n    /**\n     * Disconnects an observer previously created via `observeNodes`\n     *\n     * @param {!PolymerDomApi.ObserveHandle} observerHandle Observer instance\n     *   to disconnect.\n     * @return {void}\n     * @override\n     */\n  }, {\n    key: \"unobserveNodes\",\n    value: function unobserveNodes(observerHandle) {\n      observerHandle.disconnect();\n    }\n\n    /**\n     * Provided as a backwards-compatible API only.  This method does nothing.\n     * @return {void}\n     */\n  }, {\n    key: \"notifyObserver\",\n    value: function notifyObserver() {}\n\n    /**\n     * Returns true if the provided node is contained with this element's\n     * light-DOM children or shadow root, including any nested shadow roots\n     * of children therein.\n     *\n     * @param {Node} node Node to test\n     * @return {boolean} Returns true if the given `node` is contained within\n     *   this element's light or shadow DOM.\n     * @override\n     */\n  }, {\n    key: \"deepContains\",\n    value: function deepContains(node) {\n      if (wrap(this.node).contains(node)) {\n        return true;\n      }\n      var n = node;\n      var doc = node.ownerDocument;\n      // walk from node to `this` or `document`\n      while (n && n !== doc && n !== this.node) {\n        // use logical parentnode, or native ShadowRoot host\n        n = wrap(n).parentNode || wrap(n).host;\n      }\n      return n === this.node;\n    }\n\n    /**\n     * Returns the root node of this node.  Equivalent to `getRootNode()`.\n     *\n     * @return {!Node} Top most element in the dom tree in which the node\n     * exists. If the node is connected to a document this is either a\n     * shadowRoot or the document; otherwise, it may be the node\n     * itself or a node or document fragment containing it.\n     * @override\n     */\n  }, {\n    key: \"getOwnerRoot\",\n    value: function getOwnerRoot() {\n      return wrap(this.node).getRootNode();\n    }\n\n    /**\n     * For slot elements, returns the nodes assigned to the slot; otherwise\n     * an empty array. It is equivalent to `<slot>.addignedNodes({flatten:true})`.\n     *\n     * @return {!Array<!Node>} Array of assigned nodes\n     * @override\n     */\n  }, {\n    key: \"getDistributedNodes\",\n    value: function getDistributedNodes() {\n      return this.node.localName === 'slot' ? wrap(this.node).assignedNodes({\n        flatten: true\n      }) : [];\n    }\n\n    /**\n     * Returns an array of all slots this element was distributed to.\n     *\n     * @return {!Array<!HTMLSlotElement>} Description\n     * @override\n     */\n  }, {\n    key: \"getDestinationInsertionPoints\",\n    value: function getDestinationInsertionPoints() {\n      var ip$ = [];\n      var n = wrap(this.node).assignedSlot;\n      while (n) {\n        ip$.push(n);\n        n = wrap(n).assignedSlot;\n      }\n      return ip$;\n    }\n\n    /**\n     * Calls `importNode` on the `ownerDocument` for this node.\n     *\n     * @param {!Node} node Node to import\n     * @param {boolean} deep True if the node should be cloned deeply during\n     *   import\n     * @return {Node} Clone of given node imported to this owner document\n     */\n  }, {\n    key: \"importNode\",\n    value: function importNode(node, deep) {\n      var doc = this.node instanceof Document ? this.node : this.node.ownerDocument;\n      return wrap(doc).importNode(node, deep);\n    }\n\n    /**\n     * @return {!Array<!Node>} Returns a flattened list of all child nodes and\n     * nodes assigned to child slots.\n     * @override\n     */\n  }, {\n    key: \"getEffectiveChildNodes\",\n    value: function getEffectiveChildNodes() {\n      return FlattenedNodesObserver.getFlattenedNodes( /** @type {!HTMLElement} */this.node);\n    }\n\n    /**\n     * Returns a filtered list of flattened child elements for this element based\n     * on the given selector.\n     *\n     * @param {string} selector Selector to filter nodes against\n     * @return {!Array<!HTMLElement>} List of flattened child elements\n     * @override\n     */\n  }, {\n    key: \"queryDistributedElements\",\n    value: function queryDistributedElements(selector) {\n      var c$ = this.getEffectiveChildNodes();\n      var list = [];\n      for (var i = 0, l = c$.length, c; i < l && (c = c$[i]); i++) {\n        if (c.nodeType === Node.ELEMENT_NODE && matchesSelector(c, selector)) {\n          list.push(c);\n        }\n      }\n      return list;\n    }\n\n    /**\n     * For shadow roots, returns the currently focused element within this\n     * shadow root.\n     *\n     * return {Node|undefined} Currently focused element\n     * @override\n     */\n  }, {\n    key: \"activeElement\",\n    get: function get() {\n      var node = this.node;\n      return node._activeElement !== undefined ? node._activeElement : node.activeElement;\n    }\n  }]);\n  return DomApiNative;\n}();\nfunction forwardMethods(proto, methods) {\n  var _loop = function _loop() {\n    var method = methods[i];\n    /* eslint-disable valid-jsdoc */\n    proto[method] = /** @this {DomApiNative} */function () {\n      return this.node[method].apply(this.node, arguments);\n    };\n    /* eslint-enable */\n  };\n  for (var i = 0; i < methods.length; i++) {\n    _loop();\n  }\n}\nfunction forwardReadOnlyProperties(proto, properties) {\n  var _loop2 = function _loop2() {\n    var name = properties[i];\n    Object.defineProperty(proto, name, {\n      get: function get() {\n        var domApi = /** @type {DomApiNative} */this;\n        return domApi.node[name];\n      },\n      configurable: true\n    });\n  };\n  for (var i = 0; i < properties.length; i++) {\n    _loop2();\n  }\n}\nfunction forwardProperties(proto, properties) {\n  var _loop3 = function _loop3() {\n    var name = properties[i];\n    Object.defineProperty(proto, name, {\n      /**\n       * @this {DomApiNative}\n       * @return {*} .\n       */\n      get: function get() {\n        return this.node[name];\n      },\n      /**\n       * @this {DomApiNative}\n       * @param {*} value .\n       */\n      set: function set(value) {\n        this.node[name] = value;\n      },\n      configurable: true\n    });\n  };\n  for (var i = 0; i < properties.length; i++) {\n    _loop3();\n  }\n}\n\n/**\n * Event API wrapper class returned from `dom.(target)` when\n * `target` is an `Event`.\n */\nexport var EventApi = /*#__PURE__*/function () {\n  function EventApi(event) {\n    _classCallCheck(this, EventApi);\n    this.event = event;\n  }\n\n  /**\n   * Returns the first node on the `composedPath` of this event.\n   *\n   * @return {!EventTarget} The node this event was dispatched to\n   */\n  _createClass(EventApi, [{\n    key: \"rootTarget\",\n    get: function get() {\n      return this.path[0];\n    }\n\n    /**\n     * Returns the local (re-targeted) target for this event.\n     *\n     * @return {!EventTarget} The local (re-targeted) target for this event.\n     */\n  }, {\n    key: \"localTarget\",\n    get: function get() {\n      return this.event.target;\n    }\n\n    /**\n     * Returns the `composedPath` for this event.\n     * @return {!Array<!EventTarget>} The nodes this event propagated through\n     */\n  }, {\n    key: \"path\",\n    get: function get() {\n      return this.event.composedPath();\n    }\n  }]);\n  return EventApi;\n}();\n\n/**\n * @function\n * @param {boolean=} deep\n * @return {!Node}\n */\nDomApiNative.prototype.cloneNode;\n/**\n * @function\n * @param {!Node} node\n * @return {!Node}\n */\nDomApiNative.prototype.appendChild;\n/**\n * @function\n * @param {!Node} newChild\n * @param {Node} refChild\n * @return {!Node}\n */\nDomApiNative.prototype.insertBefore;\n/**\n * @function\n * @param {!Node} node\n * @return {!Node}\n */\nDomApiNative.prototype.removeChild;\n/**\n * @function\n * @param {!Node} oldChild\n * @param {!Node} newChild\n * @return {!Node}\n */\nDomApiNative.prototype.replaceChild;\n/**\n * @function\n * @param {string} name\n * @param {string} value\n * @return {void}\n */\nDomApiNative.prototype.setAttribute;\n/**\n * @function\n * @param {string} name\n * @return {void}\n */\nDomApiNative.prototype.removeAttribute;\n/**\n * @function\n * @param {string} selector\n * @return {?Element}\n */\nDomApiNative.prototype.querySelector;\n/**\n * @function\n * @param {string} selector\n * @return {!NodeList<!Element>}\n */\nDomApiNative.prototype.querySelectorAll;\n\n/** @type {?Node} */\nDomApiNative.prototype.parentNode;\n/** @type {?Node} */\nDomApiNative.prototype.firstChild;\n/** @type {?Node} */\nDomApiNative.prototype.lastChild;\n/** @type {?Node} */\nDomApiNative.prototype.nextSibling;\n/** @type {?Node} */\nDomApiNative.prototype.previousSibling;\n/** @type {?HTMLElement} */\nDomApiNative.prototype.firstElementChild;\n/** @type {?HTMLElement} */\nDomApiNative.prototype.lastElementChild;\n/** @type {?HTMLElement} */\nDomApiNative.prototype.nextElementSibling;\n/** @type {?HTMLElement} */\nDomApiNative.prototype.previousElementSibling;\n/** @type {!Array<!Node>} */\nDomApiNative.prototype.childNodes;\n/** @type {!Array<!HTMLElement>} */\nDomApiNative.prototype.children;\n/** @type {?DOMTokenList} */\nDomApiNative.prototype.classList;\n\n/** @type {string} */\nDomApiNative.prototype.textContent;\n/** @type {string} */\nDomApiNative.prototype.innerHTML;\nvar DomApiImpl = DomApiNative;\nif (window['ShadyDOM'] && window['ShadyDOM']['inUse'] && window['ShadyDOM']['noPatch'] && window['ShadyDOM']['Wrapper']) {\n  /**\n   * @private\n   * @extends {HTMLElement}\n   */\n  var Wrapper = /*#__PURE__*/function (_window$ShadyDOM$Wrap) {\n    _inherits(Wrapper, _window$ShadyDOM$Wrap);\n    function Wrapper() {\n      _classCallCheck(this, Wrapper);\n      return _callSuper(this, Wrapper, arguments);\n    }\n    return _createClass(Wrapper);\n  }(window['ShadyDOM']['Wrapper']); // copy bespoke API onto wrapper\n  Object.getOwnPropertyNames(DomApiNative.prototype).forEach(function (prop) {\n    if (prop != 'activeElement') {\n      Wrapper.prototype[prop] = DomApiNative.prototype[prop];\n    }\n  });\n\n  // Note, `classList` is here only for legacy compatibility since it does not\n  // trigger distribution in v1 Shadow DOM.\n  forwardReadOnlyProperties(Wrapper.prototype, ['classList']);\n  DomApiImpl = Wrapper;\n  Object.defineProperties(EventApi.prototype, {\n    // Returns the \"lowest\" node in the same root as the event's currentTarget.\n    // When in `noPatch` mode, this must be calculated by walking the event's\n    // path.\n    localTarget: {\n      get: function get() {\n        var current = this.event.currentTarget;\n        var currentRoot = current && dom(current).getOwnerRoot();\n        var p$ = this.path;\n        for (var i = 0; i < p$.length; i++) {\n          var e = p$[i];\n          if (dom(e).getOwnerRoot() === currentRoot) {\n            return e;\n          }\n        }\n      },\n      configurable: true\n    },\n    path: {\n      get: function get() {\n        return window['ShadyDOM']['composedPath'](this.event);\n      },\n      configurable: true\n    }\n  });\n} else {\n  // Methods that can provoke distribution or must return the logical, not\n  // composed tree.\n  forwardMethods(DomApiNative.prototype, ['cloneNode', 'appendChild', 'insertBefore', 'removeChild', 'replaceChild', 'setAttribute', 'removeAttribute', 'querySelector', 'querySelectorAll', 'attachShadow']);\n\n  // Properties that should return the logical, not composed tree. Note, `classList`\n  // is here only for legacy compatibility since it does not trigger distribution\n  // in v1 Shadow DOM.\n  forwardReadOnlyProperties(DomApiNative.prototype, ['parentNode', 'firstChild', 'lastChild', 'nextSibling', 'previousSibling', 'firstElementChild', 'lastElementChild', 'nextElementSibling', 'previousElementSibling', 'childNodes', 'children', 'classList', 'shadowRoot']);\n  forwardProperties(DomApiNative.prototype, ['textContent', 'innerHTML', 'className']);\n}\nexport var DomApi = DomApiImpl;\n\n/**\n * Legacy DOM and Event manipulation API wrapper factory used to abstract\n * differences between native Shadow DOM and \"Shady DOM\" when polyfilling on\n * older browsers.\n *\n * Note that in Polymer 2.x use of `Polymer.dom` is no longer required and\n * in the majority of cases simply facades directly to the standard native\n * API.\n *\n * @summary Legacy DOM and Event manipulation API wrapper factory used to\n * abstract differences between native Shadow DOM and \"Shady DOM.\"\n * @param {(Node|Event|DomApiNative|EventApi)=} obj Node or event to operate on\n * @return {!DomApiNative|!EventApi} Wrapper providing either node API or event API\n */\nexport var dom = function dom(obj) {\n  obj = obj || document;\n  if (obj instanceof DomApiImpl) {\n    return /** @type {!DomApi} */obj;\n  }\n  if (obj instanceof EventApi) {\n    return /** @type {!EventApi} */obj;\n  }\n  var helper = obj['__domApi'];\n  if (!helper) {\n    if (obj instanceof Event) {\n      helper = new EventApi(obj);\n    } else {\n      helper = new DomApiImpl( /** @type {Node} */obj);\n    }\n    obj['__domApi'] = helper;\n  }\n  return helper;\n};","map":{"version":3,"names":["wrap","FlattenedNodesObserver","flush","enqueueDebouncer","addDebouncer","Debouncer","p","Element","prototype","normalizedMatchesSelector","matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","node","selector","call","DomApiNative","_classCallCheck","window","_createClass","key","value","observeNodes","callback","unobserveNodes","observerHandle","disconnect","notifyObserver","deepContains","contains","n","doc","ownerDocument","parentNode","host","getOwnerRoot","getRootNode","getDistributedNodes","localName","assignedNodes","flatten","getDestinationInsertionPoints","ip$","assignedSlot","push","importNode","deep","Document","getEffectiveChildNodes","getFlattenedNodes","queryDistributedElements","c$","list","i","l","length","c","nodeType","Node","ELEMENT_NODE","get","_activeElement","undefined","activeElement","forwardMethods","proto","methods","_loop","method","apply","arguments","forwardReadOnlyProperties","properties","_loop2","name","Object","defineProperty","domApi","configurable","forwardProperties","_loop3","set","EventApi","event","path","target","composedPath","cloneNode","appendChild","insertBefore","removeChild","replaceChild","setAttribute","removeAttribute","querySelector","querySelectorAll","firstChild","lastChild","nextSibling","previousSibling","firstElementChild","lastElementChild","nextElementSibling","previousElementSibling","childNodes","children","classList","textContent","innerHTML","DomApiImpl","Wrapper","_window$ShadyDOM$Wrap","_inherits","_callSuper","getOwnPropertyNames","forEach","prop","defineProperties","localTarget","current","currentTarget","currentRoot","dom","p$","e","DomApi","obj","document","helper","Event"],"sources":["/Users/sercanardil/Desktop/frontend/node_modules/@polymer/polymer/lib/legacy/polymer.dom.js"],"sourcesContent":["/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport '../utils/boot.js';\nimport { wrap } from '../utils/wrap.js';\nimport '../utils/settings.js';\nimport { FlattenedNodesObserver } from '../utils/flattened-nodes-observer.js';\nexport { flush, enqueueDebouncer as addDebouncer } from '../utils/flush.js';\n/* eslint-disable no-unused-vars */\nimport { Debouncer } from '../utils/debounce.js';  // used in type annotations\n/* eslint-enable no-unused-vars */\n\nconst p = Element.prototype;\n/**\n * @const {function(this:Node, string): boolean}\n */\nconst normalizedMatchesSelector = p.matches || p.matchesSelector ||\n  p.mozMatchesSelector || p.msMatchesSelector ||\n  p.oMatchesSelector || p.webkitMatchesSelector;\n\n/**\n * Cross-platform `element.matches` shim.\n *\n * @function matchesSelector\n * @param {!Node} node Node to check selector against\n * @param {string} selector Selector to match\n * @return {boolean} True if node matched selector\n */\nexport const matchesSelector = function(node, selector) {\n  return normalizedMatchesSelector.call(node, selector);\n};\n\n/**\n * Node API wrapper class returned from `Polymer.dom.(target)` when\n * `target` is a `Node`.\n * @implements {PolymerDomApi}\n * @unrestricted\n */\nclass DomApiNative {\n\n  /**\n   * @param {!Node} node Node for which to create a Polymer.dom helper object.\n   */\n  constructor(node) {\n    if (window['ShadyDOM'] && window['ShadyDOM']['inUse']) {\n      window['ShadyDOM']['patch'](node);\n    }\n    this.node = node;\n  }\n\n  /**\n   * Returns an instance of `FlattenedNodesObserver` that\n   * listens for node changes on this element.\n   *\n   * @param {function(this:HTMLElement, { target: !HTMLElement, addedNodes: !Array<!Element>, removedNodes: !Array<!Element> }):void} callback Called when direct or distributed children\n   *   of this element changes\n   * @return {!PolymerDomApi.ObserveHandle} Observer instance\n   * @override\n   */\n  observeNodes(callback) {\n    return new FlattenedNodesObserver(\n        /** @type {!HTMLElement} */(this.node), callback);\n  }\n\n  /**\n   * Disconnects an observer previously created via `observeNodes`\n   *\n   * @param {!PolymerDomApi.ObserveHandle} observerHandle Observer instance\n   *   to disconnect.\n   * @return {void}\n   * @override\n   */\n  unobserveNodes(observerHandle) {\n    observerHandle.disconnect();\n  }\n\n  /**\n   * Provided as a backwards-compatible API only.  This method does nothing.\n   * @return {void}\n   */\n  notifyObserver() {}\n\n  /**\n   * Returns true if the provided node is contained with this element's\n   * light-DOM children or shadow root, including any nested shadow roots\n   * of children therein.\n   *\n   * @param {Node} node Node to test\n   * @return {boolean} Returns true if the given `node` is contained within\n   *   this element's light or shadow DOM.\n   * @override\n   */\n  deepContains(node) {\n    if (wrap(this.node).contains(node)) {\n      return true;\n    }\n    let n = node;\n    let doc = node.ownerDocument;\n    // walk from node to `this` or `document`\n    while (n && n !== doc && n !== this.node) {\n      // use logical parentnode, or native ShadowRoot host\n      n = wrap(n).parentNode || wrap(n).host;\n    }\n    return n === this.node;\n  }\n\n  /**\n   * Returns the root node of this node.  Equivalent to `getRootNode()`.\n   *\n   * @return {!Node} Top most element in the dom tree in which the node\n   * exists. If the node is connected to a document this is either a\n   * shadowRoot or the document; otherwise, it may be the node\n   * itself or a node or document fragment containing it.\n   * @override\n   */\n  getOwnerRoot() {\n    return wrap(this.node).getRootNode();\n  }\n\n  /**\n   * For slot elements, returns the nodes assigned to the slot; otherwise\n   * an empty array. It is equivalent to `<slot>.addignedNodes({flatten:true})`.\n   *\n   * @return {!Array<!Node>} Array of assigned nodes\n   * @override\n   */\n  getDistributedNodes() {\n    return (this.node.localName === 'slot') ?\n      wrap(this.node).assignedNodes({flatten: true}) :\n      [];\n  }\n\n  /**\n   * Returns an array of all slots this element was distributed to.\n   *\n   * @return {!Array<!HTMLSlotElement>} Description\n   * @override\n   */\n  getDestinationInsertionPoints() {\n    let ip$ = [];\n    let n = wrap(this.node).assignedSlot;\n    while (n) {\n      ip$.push(n);\n      n = wrap(n).assignedSlot;\n    }\n    return ip$;\n  }\n\n  /**\n   * Calls `importNode` on the `ownerDocument` for this node.\n   *\n   * @param {!Node} node Node to import\n   * @param {boolean} deep True if the node should be cloned deeply during\n   *   import\n   * @return {Node} Clone of given node imported to this owner document\n   */\n  importNode(node, deep) {\n    let doc = this.node instanceof Document ? this.node :\n      this.node.ownerDocument;\n    return wrap(doc).importNode(node, deep);\n  }\n\n  /**\n   * @return {!Array<!Node>} Returns a flattened list of all child nodes and\n   * nodes assigned to child slots.\n   * @override\n   */\n  getEffectiveChildNodes() {\n    return FlattenedNodesObserver.getFlattenedNodes(\n        /** @type {!HTMLElement} */ (this.node));\n  }\n\n  /**\n   * Returns a filtered list of flattened child elements for this element based\n   * on the given selector.\n   *\n   * @param {string} selector Selector to filter nodes against\n   * @return {!Array<!HTMLElement>} List of flattened child elements\n   * @override\n   */\n  queryDistributedElements(selector) {\n    let c$ = this.getEffectiveChildNodes();\n    let list = [];\n    for (let i=0, l=c$.length, c; (i<l) && (c=c$[i]); i++) {\n      if ((c.nodeType === Node.ELEMENT_NODE) &&\n          matchesSelector(c, selector)) {\n        list.push(c);\n      }\n    }\n    return list;\n  }\n\n  /**\n   * For shadow roots, returns the currently focused element within this\n   * shadow root.\n   *\n   * return {Node|undefined} Currently focused element\n   * @override\n   */\n  get activeElement() {\n    let node = this.node;\n    return node._activeElement !== undefined ? node._activeElement : node.activeElement;\n  }\n}\n\nfunction forwardMethods(proto, methods) {\n  for (let i=0; i < methods.length; i++) {\n    let method = methods[i];\n    /* eslint-disable valid-jsdoc */\n    proto[method] = /** @this {DomApiNative} */ function() {\n      return this.node[method].apply(this.node, arguments);\n    };\n    /* eslint-enable */\n  }\n}\n\nfunction forwardReadOnlyProperties(proto, properties) {\n  for (let i=0; i < properties.length; i++) {\n    let name = properties[i];\n    Object.defineProperty(proto, name, {\n      get: function() {\n        const domApi = /** @type {DomApiNative} */(this);\n        return domApi.node[name];\n      },\n      configurable: true\n    });\n  }\n}\n\nfunction forwardProperties(proto, properties) {\n  for (let i=0; i < properties.length; i++) {\n    let name = properties[i];\n    Object.defineProperty(proto, name, {\n      /**\n       * @this {DomApiNative}\n       * @return {*} .\n       */\n      get: function() {\n        return this.node[name];\n      },\n      /**\n       * @this {DomApiNative}\n       * @param {*} value .\n       */\n      set: function(value) {\n        this.node[name] = value;\n      },\n      configurable: true\n    });\n  }\n}\n\n\n/**\n * Event API wrapper class returned from `dom.(target)` when\n * `target` is an `Event`.\n */\nexport class EventApi {\n  constructor(event) {\n    this.event = event;\n  }\n\n  /**\n   * Returns the first node on the `composedPath` of this event.\n   *\n   * @return {!EventTarget} The node this event was dispatched to\n   */\n  get rootTarget() {\n    return this.path[0];\n  }\n\n  /**\n   * Returns the local (re-targeted) target for this event.\n   *\n   * @return {!EventTarget} The local (re-targeted) target for this event.\n   */\n  get localTarget() {\n    return this.event.target;\n  }\n\n  /**\n   * Returns the `composedPath` for this event.\n   * @return {!Array<!EventTarget>} The nodes this event propagated through\n   */\n  get path() {\n    return this.event.composedPath();\n  }\n}\n\n/**\n * @function\n * @param {boolean=} deep\n * @return {!Node}\n */\nDomApiNative.prototype.cloneNode;\n/**\n * @function\n * @param {!Node} node\n * @return {!Node}\n */\nDomApiNative.prototype.appendChild;\n/**\n * @function\n * @param {!Node} newChild\n * @param {Node} refChild\n * @return {!Node}\n */\nDomApiNative.prototype.insertBefore;\n/**\n * @function\n * @param {!Node} node\n * @return {!Node}\n */\nDomApiNative.prototype.removeChild;\n/**\n * @function\n * @param {!Node} oldChild\n * @param {!Node} newChild\n * @return {!Node}\n */\nDomApiNative.prototype.replaceChild;\n/**\n * @function\n * @param {string} name\n * @param {string} value\n * @return {void}\n */\nDomApiNative.prototype.setAttribute;\n/**\n * @function\n * @param {string} name\n * @return {void}\n */\nDomApiNative.prototype.removeAttribute;\n/**\n * @function\n * @param {string} selector\n * @return {?Element}\n */\nDomApiNative.prototype.querySelector;\n/**\n * @function\n * @param {string} selector\n * @return {!NodeList<!Element>}\n */\nDomApiNative.prototype.querySelectorAll;\n\n/** @type {?Node} */\nDomApiNative.prototype.parentNode;\n/** @type {?Node} */\nDomApiNative.prototype.firstChild;\n/** @type {?Node} */\nDomApiNative.prototype.lastChild;\n/** @type {?Node} */\nDomApiNative.prototype.nextSibling;\n/** @type {?Node} */\nDomApiNative.prototype.previousSibling;\n/** @type {?HTMLElement} */\nDomApiNative.prototype.firstElementChild;\n/** @type {?HTMLElement} */\nDomApiNative.prototype.lastElementChild;\n/** @type {?HTMLElement} */\nDomApiNative.prototype.nextElementSibling;\n/** @type {?HTMLElement} */\nDomApiNative.prototype.previousElementSibling;\n/** @type {!Array<!Node>} */\nDomApiNative.prototype.childNodes;\n/** @type {!Array<!HTMLElement>} */\nDomApiNative.prototype.children;\n/** @type {?DOMTokenList} */\nDomApiNative.prototype.classList;\n\n/** @type {string} */\nDomApiNative.prototype.textContent;\n/** @type {string} */\nDomApiNative.prototype.innerHTML;\n\nlet DomApiImpl = DomApiNative;\n\nif (window['ShadyDOM'] && window['ShadyDOM']['inUse'] && window['ShadyDOM']['noPatch'] && window['ShadyDOM']['Wrapper']) {\n\n  /**\n   * @private\n   * @extends {HTMLElement}\n   */\n  class Wrapper extends window['ShadyDOM']['Wrapper'] {}\n\n  // copy bespoke API onto wrapper\n  Object.getOwnPropertyNames(DomApiNative.prototype).forEach((prop) => {\n    if (prop != 'activeElement') {\n      Wrapper.prototype[prop] = DomApiNative.prototype[prop];\n    }\n  });\n\n  // Note, `classList` is here only for legacy compatibility since it does not\n  // trigger distribution in v1 Shadow DOM.\n  forwardReadOnlyProperties(Wrapper.prototype, [\n    'classList'\n  ]);\n\n  DomApiImpl = Wrapper;\n\n  Object.defineProperties(EventApi.prototype, {\n\n    // Returns the \"lowest\" node in the same root as the event's currentTarget.\n    // When in `noPatch` mode, this must be calculated by walking the event's\n    // path.\n    localTarget: {\n      get() {\n        const current = this.event.currentTarget;\n        const currentRoot = current && dom(current).getOwnerRoot();\n        const p$ = this.path;\n        for (let i = 0; i < p$.length; i++) {\n          const e = p$[i];\n          if (dom(e).getOwnerRoot() === currentRoot) {\n            return e;\n          }\n        }\n      },\n      configurable: true\n    },\n\n    path: {\n      get() {\n        return window['ShadyDOM']['composedPath'](this.event);\n      },\n      configurable: true\n    }\n  });\n\n} else {\n\n  // Methods that can provoke distribution or must return the logical, not\n  // composed tree.\n  forwardMethods(DomApiNative.prototype, [\n    'cloneNode', 'appendChild', 'insertBefore', 'removeChild',\n    'replaceChild', 'setAttribute', 'removeAttribute',\n    'querySelector', 'querySelectorAll', 'attachShadow'\n  ]);\n\n  // Properties that should return the logical, not composed tree. Note, `classList`\n  // is here only for legacy compatibility since it does not trigger distribution\n  // in v1 Shadow DOM.\n  forwardReadOnlyProperties(DomApiNative.prototype, [\n    'parentNode', 'firstChild', 'lastChild',\n    'nextSibling', 'previousSibling', 'firstElementChild',\n    'lastElementChild', 'nextElementSibling', 'previousElementSibling',\n    'childNodes', 'children', 'classList', 'shadowRoot'\n  ]);\n\n  forwardProperties(DomApiNative.prototype, [\n    'textContent', 'innerHTML', 'className'\n  ]);\n}\n\nexport const DomApi = DomApiImpl;\n\n/**\n * Legacy DOM and Event manipulation API wrapper factory used to abstract\n * differences between native Shadow DOM and \"Shady DOM\" when polyfilling on\n * older browsers.\n *\n * Note that in Polymer 2.x use of `Polymer.dom` is no longer required and\n * in the majority of cases simply facades directly to the standard native\n * API.\n *\n * @summary Legacy DOM and Event manipulation API wrapper factory used to\n * abstract differences between native Shadow DOM and \"Shady DOM.\"\n * @param {(Node|Event|DomApiNative|EventApi)=} obj Node or event to operate on\n * @return {!DomApiNative|!EventApi} Wrapper providing either node API or event API\n */\nexport const dom = function(obj) {\n  obj = obj || document;\n  if (obj instanceof DomApiImpl) {\n    return /** @type {!DomApi} */(obj);\n  }\n  if (obj instanceof EventApi) {\n    return /** @type {!EventApi} */(obj);\n  }\n  let helper = obj['__domApi'];\n  if (!helper) {\n    if (obj instanceof Event) {\n      helper = new EventApi(obj);\n    } else {\n      helper = new DomApiImpl(/** @type {Node} */(obj));\n    }\n    obj['__domApi'] = helper;\n  }\n  return helper;\n};\n"],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,kBAAkB;AACzB,SAASA,IAAI,QAAQ,kBAAkB;AACvC,OAAO,sBAAsB;AAC7B,SAASC,sBAAsB,QAAQ,sCAAsC;AAC7E,SAASC,KAAK,EAAEC,gBAAgB,IAAIC,YAAY,QAAQ,mBAAmB;AAC3E;AACA,SAASC,SAAS,QAAQ,sBAAsB,CAAC,CAAE;AACnD;;AAEA,IAAMC,CAAC,GAAGC,OAAO,CAACC,SAAS;AAC3B;AACA;AACA;AACA,IAAMC,yBAAyB,GAAGH,CAAC,CAACI,OAAO,IAAIJ,CAAC,CAACK,eAAe,IAC9DL,CAAC,CAACM,kBAAkB,IAAIN,CAAC,CAACO,iBAAiB,IAC3CP,CAAC,CAACQ,gBAAgB,IAAIR,CAAC,CAACS,qBAAqB;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAMJ,eAAe,GAAG,SAAlBA,eAAeA,CAAYK,IAAI,EAAEC,QAAQ,EAAE;EACtD,OAAOR,yBAAyB,CAACS,IAAI,CAACF,IAAI,EAAEC,QAAQ,CAAC;AACvD,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AALA,IAMME,YAAY;EAEhB;AACF;AACA;EACE,SAAAA,aAAYH,IAAI,EAAE;IAAAI,eAAA,OAAAD,YAAA;IAChB,IAAIE,MAAM,CAAC,UAAU,CAAC,IAAIA,MAAM,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,EAAE;MACrDA,MAAM,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,CAACL,IAAI,CAAC;IACnC;IACA,IAAI,CAACA,IAAI,GAAGA,IAAI;EAClB;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAREM,YAAA,CAAAH,YAAA;IAAAI,GAAA;IAAAC,KAAA,EASA,SAAAC,aAAaC,QAAQ,EAAE;MACrB,OAAO,IAAIzB,sBAAsB,EAC7B,2BAA4B,IAAI,CAACe,IAAI,EAAGU,QAAQ,CAAC;IACvD;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAAH,GAAA;IAAAC,KAAA,EAQA,SAAAG,eAAeC,cAAc,EAAE;MAC7BA,cAAc,CAACC,UAAU,CAAC,CAAC;IAC7B;;IAEA;AACF;AACA;AACA;EAHE;IAAAN,GAAA;IAAAC,KAAA,EAIA,SAAAM,eAAA,EAAiB,CAAC;;IAElB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EATE;IAAAP,GAAA;IAAAC,KAAA,EAUA,SAAAO,aAAaf,IAAI,EAAE;MACjB,IAAIhB,IAAI,CAAC,IAAI,CAACgB,IAAI,CAAC,CAACgB,QAAQ,CAAChB,IAAI,CAAC,EAAE;QAClC,OAAO,IAAI;MACb;MACA,IAAIiB,CAAC,GAAGjB,IAAI;MACZ,IAAIkB,GAAG,GAAGlB,IAAI,CAACmB,aAAa;MAC5B;MACA,OAAOF,CAAC,IAAIA,CAAC,KAAKC,GAAG,IAAID,CAAC,KAAK,IAAI,CAACjB,IAAI,EAAE;QACxC;QACAiB,CAAC,GAAGjC,IAAI,CAACiC,CAAC,CAAC,CAACG,UAAU,IAAIpC,IAAI,CAACiC,CAAC,CAAC,CAACI,IAAI;MACxC;MACA,OAAOJ,CAAC,KAAK,IAAI,CAACjB,IAAI;IACxB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EARE;IAAAO,GAAA;IAAAC,KAAA,EASA,SAAAc,aAAA,EAAe;MACb,OAAOtC,IAAI,CAAC,IAAI,CAACgB,IAAI,CAAC,CAACuB,WAAW,CAAC,CAAC;IACtC;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAhB,GAAA;IAAAC,KAAA,EAOA,SAAAgB,oBAAA,EAAsB;MACpB,OAAQ,IAAI,CAACxB,IAAI,CAACyB,SAAS,KAAK,MAAM,GACpCzC,IAAI,CAAC,IAAI,CAACgB,IAAI,CAAC,CAAC0B,aAAa,CAAC;QAACC,OAAO,EAAE;MAAI,CAAC,CAAC,GAC9C,EAAE;IACN;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAApB,GAAA;IAAAC,KAAA,EAMA,SAAAoB,8BAAA,EAAgC;MAC9B,IAAIC,GAAG,GAAG,EAAE;MACZ,IAAIZ,CAAC,GAAGjC,IAAI,CAAC,IAAI,CAACgB,IAAI,CAAC,CAAC8B,YAAY;MACpC,OAAOb,CAAC,EAAE;QACRY,GAAG,CAACE,IAAI,CAACd,CAAC,CAAC;QACXA,CAAC,GAAGjC,IAAI,CAACiC,CAAC,CAAC,CAACa,YAAY;MAC1B;MACA,OAAOD,GAAG;IACZ;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAAtB,GAAA;IAAAC,KAAA,EAQA,SAAAwB,WAAWhC,IAAI,EAAEiC,IAAI,EAAE;MACrB,IAAIf,GAAG,GAAG,IAAI,CAAClB,IAAI,YAAYkC,QAAQ,GAAG,IAAI,CAAClC,IAAI,GACjD,IAAI,CAACA,IAAI,CAACmB,aAAa;MACzB,OAAOnC,IAAI,CAACkC,GAAG,CAAC,CAACc,UAAU,CAAChC,IAAI,EAAEiC,IAAI,CAAC;IACzC;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA1B,GAAA;IAAAC,KAAA,EAKA,SAAA2B,uBAAA,EAAyB;MACvB,OAAOlD,sBAAsB,CAACmD,iBAAiB,EAC3C,2BAA6B,IAAI,CAACpC,IAAK,CAAC;IAC9C;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAAO,GAAA;IAAAC,KAAA,EAQA,SAAA6B,yBAAyBpC,QAAQ,EAAE;MACjC,IAAIqC,EAAE,GAAG,IAAI,CAACH,sBAAsB,CAAC,CAAC;MACtC,IAAII,IAAI,GAAG,EAAE;MACb,KAAK,IAAIC,CAAC,GAAC,CAAC,EAAEC,CAAC,GAACH,EAAE,CAACI,MAAM,EAAEC,CAAC,EAAGH,CAAC,GAACC,CAAC,KAAME,CAAC,GAACL,EAAE,CAACE,CAAC,CAAC,CAAC,EAAEA,CAAC,EAAE,EAAE;QACrD,IAAKG,CAAC,CAACC,QAAQ,KAAKC,IAAI,CAACC,YAAY,IACjCnD,eAAe,CAACgD,CAAC,EAAE1C,QAAQ,CAAC,EAAE;UAChCsC,IAAI,CAACR,IAAI,CAACY,CAAC,CAAC;QACd;MACF;MACA,OAAOJ,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAhC,GAAA;IAAAwC,GAAA,EAOA,SAAAA,IAAA,EAAoB;MAClB,IAAI/C,IAAI,GAAG,IAAI,CAACA,IAAI;MACpB,OAAOA,IAAI,CAACgD,cAAc,KAAKC,SAAS,GAAGjD,IAAI,CAACgD,cAAc,GAAGhD,IAAI,CAACkD,aAAa;IACrF;EAAC;EAAA,OAAA/C,YAAA;AAAA;AAGH,SAASgD,cAAcA,CAACC,KAAK,EAAEC,OAAO,EAAE;EAAA,IAAAC,KAAA,YAAAA,MAAA,EACC;IACrC,IAAIC,MAAM,GAAGF,OAAO,CAACb,CAAC,CAAC;IACvB;IACAY,KAAK,CAACG,MAAM,CAAC,GAAG,2BAA4B,YAAW;MACrD,OAAO,IAAI,CAACvD,IAAI,CAACuD,MAAM,CAAC,CAACC,KAAK,CAAC,IAAI,CAACxD,IAAI,EAAEyD,SAAS,CAAC;IACtD,CAAC;IACD;EACF,CAAC;EAPD,KAAK,IAAIjB,CAAC,GAAC,CAAC,EAAEA,CAAC,GAAGa,OAAO,CAACX,MAAM,EAAEF,CAAC,EAAE;IAAAc,KAAA;EAAA;AAQvC;AAEA,SAASI,yBAAyBA,CAACN,KAAK,EAAEO,UAAU,EAAE;EAAA,IAAAC,MAAA,YAAAA,OAAA,EACV;IACxC,IAAIC,IAAI,GAAGF,UAAU,CAACnB,CAAC,CAAC;IACxBsB,MAAM,CAACC,cAAc,CAACX,KAAK,EAAES,IAAI,EAAE;MACjCd,GAAG,EAAE,SAAAA,IAAA,EAAW;QACd,IAAMiB,MAAM,GAAG,2BAA4B,IAAK;QAChD,OAAOA,MAAM,CAAChE,IAAI,CAAC6D,IAAI,CAAC;MAC1B,CAAC;MACDI,YAAY,EAAE;IAChB,CAAC,CAAC;EACJ,CAAC;EATD,KAAK,IAAIzB,CAAC,GAAC,CAAC,EAAEA,CAAC,GAAGmB,UAAU,CAACjB,MAAM,EAAEF,CAAC,EAAE;IAAAoB,MAAA;EAAA;AAU1C;AAEA,SAASM,iBAAiBA,CAACd,KAAK,EAAEO,UAAU,EAAE;EAAA,IAAAQ,MAAA,YAAAA,OAAA,EACF;IACxC,IAAIN,IAAI,GAAGF,UAAU,CAACnB,CAAC,CAAC;IACxBsB,MAAM,CAACC,cAAc,CAACX,KAAK,EAAES,IAAI,EAAE;MACjC;AACN;AACA;AACA;MACMd,GAAG,EAAE,SAAAA,IAAA,EAAW;QACd,OAAO,IAAI,CAAC/C,IAAI,CAAC6D,IAAI,CAAC;MACxB,CAAC;MACD;AACN;AACA;AACA;MACMO,GAAG,EAAE,SAAAA,IAAS5D,KAAK,EAAE;QACnB,IAAI,CAACR,IAAI,CAAC6D,IAAI,CAAC,GAAGrD,KAAK;MACzB,CAAC;MACDyD,YAAY,EAAE;IAChB,CAAC,CAAC;EACJ,CAAC;EAnBD,KAAK,IAAIzB,CAAC,GAAC,CAAC,EAAEA,CAAC,GAAGmB,UAAU,CAACjB,MAAM,EAAEF,CAAC,EAAE;IAAA2B,MAAA;EAAA;AAoB1C;;AAGA;AACA;AACA;AACA;AACA,WAAaE,QAAQ;EACnB,SAAAA,SAAYC,KAAK,EAAE;IAAAlE,eAAA,OAAAiE,QAAA;IACjB,IAAI,CAACC,KAAK,GAAGA,KAAK;EACpB;;EAEA;AACF;AACA;AACA;AACA;EAJEhE,YAAA,CAAA+D,QAAA;IAAA9D,GAAA;IAAAwC,GAAA,EAKA,SAAAA,IAAA,EAAiB;MACf,OAAO,IAAI,CAACwB,IAAI,CAAC,CAAC,CAAC;IACrB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAhE,GAAA;IAAAwC,GAAA,EAKA,SAAAA,IAAA,EAAkB;MAChB,OAAO,IAAI,CAACuB,KAAK,CAACE,MAAM;IAC1B;;IAEA;AACF;AACA;AACA;EAHE;IAAAjE,GAAA;IAAAwC,GAAA,EAIA,SAAAA,IAAA,EAAW;MACT,OAAO,IAAI,CAACuB,KAAK,CAACG,YAAY,CAAC,CAAC;IAClC;EAAC;EAAA,OAAAJ,QAAA;AAAA;;AAGH;AACA;AACA;AACA;AACA;AACAlE,YAAY,CAACX,SAAS,CAACkF,SAAS;AAChC;AACA;AACA;AACA;AACA;AACAvE,YAAY,CAACX,SAAS,CAACmF,WAAW;AAClC;AACA;AACA;AACA;AACA;AACA;AACAxE,YAAY,CAACX,SAAS,CAACoF,YAAY;AACnC;AACA;AACA;AACA;AACA;AACAzE,YAAY,CAACX,SAAS,CAACqF,WAAW;AAClC;AACA;AACA;AACA;AACA;AACA;AACA1E,YAAY,CAACX,SAAS,CAACsF,YAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA3E,YAAY,CAACX,SAAS,CAACuF,YAAY;AACnC;AACA;AACA;AACA;AACA;AACA5E,YAAY,CAACX,SAAS,CAACwF,eAAe;AACtC;AACA;AACA;AACA;AACA;AACA7E,YAAY,CAACX,SAAS,CAACyF,aAAa;AACpC;AACA;AACA;AACA;AACA;AACA9E,YAAY,CAACX,SAAS,CAAC0F,gBAAgB;;AAEvC;AACA/E,YAAY,CAACX,SAAS,CAAC4B,UAAU;AACjC;AACAjB,YAAY,CAACX,SAAS,CAAC2F,UAAU;AACjC;AACAhF,YAAY,CAACX,SAAS,CAAC4F,SAAS;AAChC;AACAjF,YAAY,CAACX,SAAS,CAAC6F,WAAW;AAClC;AACAlF,YAAY,CAACX,SAAS,CAAC8F,eAAe;AACtC;AACAnF,YAAY,CAACX,SAAS,CAAC+F,iBAAiB;AACxC;AACApF,YAAY,CAACX,SAAS,CAACgG,gBAAgB;AACvC;AACArF,YAAY,CAACX,SAAS,CAACiG,kBAAkB;AACzC;AACAtF,YAAY,CAACX,SAAS,CAACkG,sBAAsB;AAC7C;AACAvF,YAAY,CAACX,SAAS,CAACmG,UAAU;AACjC;AACAxF,YAAY,CAACX,SAAS,CAACoG,QAAQ;AAC/B;AACAzF,YAAY,CAACX,SAAS,CAACqG,SAAS;;AAEhC;AACA1F,YAAY,CAACX,SAAS,CAACsG,WAAW;AAClC;AACA3F,YAAY,CAACX,SAAS,CAACuG,SAAS;AAEhC,IAAIC,UAAU,GAAG7F,YAAY;AAE7B,IAAIE,MAAM,CAAC,UAAU,CAAC,IAAIA,MAAM,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,IAAIA,MAAM,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,IAAIA,MAAM,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,EAAE;EAEvH;AACF;AACA;AACA;EAHE,IAIM4F,OAAO,0BAAAC,qBAAA;IAAAC,SAAA,CAAAF,OAAA,EAAAC,qBAAA;IAAA,SAAAD,QAAA;MAAA7F,eAAA,OAAA6F,OAAA;MAAA,OAAAG,UAAA,OAAAH,OAAA,EAAAxC,SAAA;IAAA;IAAA,OAAAnD,YAAA,CAAA2F,OAAA;EAAA,EAAS5F,MAAM,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,GAEnD;EACAyD,MAAM,CAACuC,mBAAmB,CAAClG,YAAY,CAACX,SAAS,CAAC,CAAC8G,OAAO,CAAC,UAACC,IAAI,EAAK;IACnE,IAAIA,IAAI,IAAI,eAAe,EAAE;MAC3BN,OAAO,CAACzG,SAAS,CAAC+G,IAAI,CAAC,GAAGpG,YAAY,CAACX,SAAS,CAAC+G,IAAI,CAAC;IACxD;EACF,CAAC,CAAC;;EAEF;EACA;EACA7C,yBAAyB,CAACuC,OAAO,CAACzG,SAAS,EAAE,CAC3C,WAAW,CACZ,CAAC;EAEFwG,UAAU,GAAGC,OAAO;EAEpBnC,MAAM,CAAC0C,gBAAgB,CAACnC,QAAQ,CAAC7E,SAAS,EAAE;IAE1C;IACA;IACA;IACAiH,WAAW,EAAE;MACX1D,GAAG,WAAAA,IAAA,EAAG;QACJ,IAAM2D,OAAO,GAAG,IAAI,CAACpC,KAAK,CAACqC,aAAa;QACxC,IAAMC,WAAW,GAAGF,OAAO,IAAIG,GAAG,CAACH,OAAO,CAAC,CAACpF,YAAY,CAAC,CAAC;QAC1D,IAAMwF,EAAE,GAAG,IAAI,CAACvC,IAAI;QACpB,KAAK,IAAI/B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGsE,EAAE,CAACpE,MAAM,EAAEF,CAAC,EAAE,EAAE;UAClC,IAAMuE,CAAC,GAAGD,EAAE,CAACtE,CAAC,CAAC;UACf,IAAIqE,GAAG,CAACE,CAAC,CAAC,CAACzF,YAAY,CAAC,CAAC,KAAKsF,WAAW,EAAE;YACzC,OAAOG,CAAC;UACV;QACF;MACF,CAAC;MACD9C,YAAY,EAAE;IAChB,CAAC;IAEDM,IAAI,EAAE;MACJxB,GAAG,WAAAA,IAAA,EAAG;QACJ,OAAO1C,MAAM,CAAC,UAAU,CAAC,CAAC,cAAc,CAAC,CAAC,IAAI,CAACiE,KAAK,CAAC;MACvD,CAAC;MACDL,YAAY,EAAE;IAChB;EACF,CAAC,CAAC;AAEJ,CAAC,MAAM;EAEL;EACA;EACAd,cAAc,CAAChD,YAAY,CAACX,SAAS,EAAE,CACrC,WAAW,EAAE,aAAa,EAAE,cAAc,EAAE,aAAa,EACzD,cAAc,EAAE,cAAc,EAAE,iBAAiB,EACjD,eAAe,EAAE,kBAAkB,EAAE,cAAc,CACpD,CAAC;;EAEF;EACA;EACA;EACAkE,yBAAyB,CAACvD,YAAY,CAACX,SAAS,EAAE,CAChD,YAAY,EAAE,YAAY,EAAE,WAAW,EACvC,aAAa,EAAE,iBAAiB,EAAE,mBAAmB,EACrD,kBAAkB,EAAE,oBAAoB,EAAE,wBAAwB,EAClE,YAAY,EAAE,UAAU,EAAE,WAAW,EAAE,YAAY,CACpD,CAAC;EAEF0E,iBAAiB,CAAC/D,YAAY,CAACX,SAAS,EAAE,CACxC,aAAa,EAAE,WAAW,EAAE,WAAW,CACxC,CAAC;AACJ;AAEA,OAAO,IAAMwH,MAAM,GAAGhB,UAAU;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAMa,GAAG,GAAG,SAANA,GAAGA,CAAYI,GAAG,EAAE;EAC/BA,GAAG,GAAGA,GAAG,IAAIC,QAAQ;EACrB,IAAID,GAAG,YAAYjB,UAAU,EAAE;IAC7B,OAAO,sBAAuBiB,GAAG;EACnC;EACA,IAAIA,GAAG,YAAY5C,QAAQ,EAAE;IAC3B,OAAO,wBAAyB4C,GAAG;EACrC;EACA,IAAIE,MAAM,GAAGF,GAAG,CAAC,UAAU,CAAC;EAC5B,IAAI,CAACE,MAAM,EAAE;IACX,IAAIF,GAAG,YAAYG,KAAK,EAAE;MACxBD,MAAM,GAAG,IAAI9C,QAAQ,CAAC4C,GAAG,CAAC;IAC5B,CAAC,MAAM;MACLE,MAAM,GAAG,IAAInB,UAAU,EAAC,mBAAoBiB,GAAI,CAAC;IACnD;IACAA,GAAG,CAAC,UAAU,CAAC,GAAGE,MAAM;EAC1B;EACA,OAAOA,MAAM;AACf,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}