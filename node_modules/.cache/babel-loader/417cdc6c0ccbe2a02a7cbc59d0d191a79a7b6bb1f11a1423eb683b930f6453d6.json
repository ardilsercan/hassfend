{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport { css, html, LitElement } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport \"../../../../components/data-table/ha-data-table\";\nimport \"../../../../components/entity/state-badge\";\nimport \"../../../../components/ha-relative-time\";\nexport let HuiEntityPickerTable = _decorate([customElement(\"hui-entity-picker-table\")], function (_initialize, _LitElement) {\n  class HuiEntityPickerTable extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HuiEntityPickerTable,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"narrow\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        attribute: \"no-label-float\"\n      })],\n      key: \"noLabelFloat\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Array\n      })],\n      key: \"entities\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        return html`\n      <ha-data-table\n        .hass=${this.hass}\n        selectable\n        .id=${\"entity_id\"}\n        .columns=${this._columns(this.narrow)}\n        .data=${this.entities}\n        .searchLabel=${this.hass.localize(\"ui.panel.lovelace.unused_entities.search\")}\n        .noLabelFloat=${this.noLabelFloat}\n        .noDataText=${this.hass.localize(\"ui.panel.lovelace.unused_entities.no_data\")}\n        @selection-changed=${this._handleSelectionChanged}\n      ></ha-data-table>\n    `;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_columns\",\n      value() {\n        return memoizeOne(narrow => {\n          const columns = {\n            icon: {\n              title: \"\",\n              label: this.hass.localize(\"ui.panel.lovelace.unused_entities.state_icon\"),\n              type: \"icon\",\n              template: entity => html`\n          <state-badge\n            @click=${this._handleEntityClicked}\n            .hass=${this.hass}\n            .stateObj=${entity.stateObj}\n          ></state-badge>\n        `\n            },\n            name: {\n              title: this.hass.localize(\"ui.panel.lovelace.unused_entities.entity\"),\n              sortable: true,\n              filterable: true,\n              grows: true,\n              direction: \"asc\",\n              template: entity => html`\n          <div @click=${this._handleEntityClicked} style=\"cursor: pointer;\">\n            ${entity.name}\n            ${narrow ? html` <div class=\"secondary\">${entity.entity_id}</div> ` : \"\"}\n          </div>\n        `\n            }\n          };\n          columns.entity_id = {\n            title: this.hass.localize(\"ui.panel.lovelace.unused_entities.entity_id\"),\n            sortable: true,\n            filterable: true,\n            width: \"30%\",\n            hidden: narrow\n          };\n          columns.domain = {\n            title: this.hass.localize(\"ui.panel.lovelace.unused_entities.domain\"),\n            sortable: true,\n            filterable: true,\n            width: \"15%\",\n            hidden: narrow\n          };\n          columns.last_changed = {\n            title: this.hass.localize(\"ui.panel.lovelace.unused_entities.last_changed\"),\n            type: \"numeric\",\n            sortable: true,\n            width: \"15%\",\n            hidden: narrow,\n            template: entity => html`\n        <ha-relative-time\n          .hass=${this.hass}\n          .datetime=${entity.last_changed}\n          capitalize\n        ></ha-relative-time>\n      `\n          };\n          return columns;\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleSelectionChanged\",\n      value: function _handleSelectionChanged(ev) {\n        const selectedEntities = ev.detail.value;\n        fireEvent(this, \"selected-changed\", {\n          selectedEntities\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleEntityClicked\",\n      value: function _handleEntityClicked(ev) {\n        const entityId = ev.target.closest(\".mdc-data-table__row\").rowId;\n        fireEvent(this, \"hass-more-info\", {\n          entityId\n        });\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css`\n      ha-data-table {\n        --data-table-border-width: 0;\n        height: 100%;\n      }\n    `;\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","customElement","property","memoizeOne","fireEvent","HuiEntityPickerTable","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","type","Boolean","Array","render","hass","_columns","narrow","entities","localize","noLabelFloat","_handleSelectionChanged","columns","icon","title","label","template","entity","_handleEntityClicked","stateObj","name","sortable","filterable","grows","direction","entity_id","width","hidden","domain","last_changed","ev","selectedEntities","detail","entityId","target","closest","rowId","static","styles"],"sources":["/workspaces/frontend/src/panels/lovelace/editor/card-editor/hui-entity-picker-table.ts"],"sourcesContent":["import { css, CSSResultGroup, html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport type { HASSDomEvent } from \"../../../../common/dom/fire_event\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport \"../../../../components/data-table/ha-data-table\";\nimport type {\n  DataTableColumnContainer,\n  DataTableRowData,\n  SelectionChangedEvent,\n} from \"../../../../components/data-table/ha-data-table\";\nimport \"../../../../components/entity/state-badge\";\nimport \"../../../../components/ha-relative-time\";\nimport type { HomeAssistant } from \"../../../../types\";\n\n@customElement(\"hui-entity-picker-table\")\nexport class HuiEntityPickerTable extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ type: Boolean }) public narrow = false;\n\n  @property({ type: Boolean, attribute: \"no-label-float\" })\n  public noLabelFloat? = false;\n\n  @property({ type: Array }) public entities!: DataTableRowData[];\n\n  protected render(): TemplateResult {\n    return html`\n      <ha-data-table\n        .hass=${this.hass}\n        selectable\n        .id=${\"entity_id\"}\n        .columns=${this._columns(this.narrow!)}\n        .data=${this.entities}\n        .searchLabel=${this.hass.localize(\n          \"ui.panel.lovelace.unused_entities.search\"\n        )}\n        .noLabelFloat=${this.noLabelFloat}\n        .noDataText=${this.hass.localize(\n          \"ui.panel.lovelace.unused_entities.no_data\"\n        )}\n        @selection-changed=${this._handleSelectionChanged}\n      ></ha-data-table>\n    `;\n  }\n\n  private _columns = memoizeOne((narrow: boolean) => {\n    const columns: DataTableColumnContainer = {\n      icon: {\n        title: \"\",\n        label: this.hass!.localize(\n          \"ui.panel.lovelace.unused_entities.state_icon\"\n        ),\n        type: \"icon\",\n        template: (entity) => html`\n          <state-badge\n            @click=${this._handleEntityClicked}\n            .hass=${this.hass!}\n            .stateObj=${entity.stateObj}\n          ></state-badge>\n        `,\n      },\n      name: {\n        title: this.hass!.localize(\"ui.panel.lovelace.unused_entities.entity\"),\n        sortable: true,\n        filterable: true,\n        grows: true,\n        direction: \"asc\",\n        template: (entity: any) => html`\n          <div @click=${this._handleEntityClicked} style=\"cursor: pointer;\">\n            ${entity.name}\n            ${narrow\n              ? html` <div class=\"secondary\">${entity.entity_id}</div> `\n              : \"\"}\n          </div>\n        `,\n      },\n    };\n\n    columns.entity_id = {\n      title: this.hass!.localize(\"ui.panel.lovelace.unused_entities.entity_id\"),\n      sortable: true,\n      filterable: true,\n      width: \"30%\",\n      hidden: narrow,\n    };\n\n    columns.domain = {\n      title: this.hass!.localize(\"ui.panel.lovelace.unused_entities.domain\"),\n      sortable: true,\n      filterable: true,\n      width: \"15%\",\n      hidden: narrow,\n    };\n\n    columns.last_changed = {\n      title: this.hass!.localize(\n        \"ui.panel.lovelace.unused_entities.last_changed\"\n      ),\n      type: \"numeric\",\n      sortable: true,\n      width: \"15%\",\n      hidden: narrow,\n      template: (entity) => html`\n        <ha-relative-time\n          .hass=${this.hass!}\n          .datetime=${entity.last_changed}\n          capitalize\n        ></ha-relative-time>\n      `,\n    };\n\n    return columns;\n  });\n\n  private _handleSelectionChanged(\n    ev: HASSDomEvent<SelectionChangedEvent>\n  ): void {\n    const selectedEntities = ev.detail.value;\n\n    fireEvent(this, \"selected-changed\", { selectedEntities });\n  }\n\n  private _handleEntityClicked(ev: Event) {\n    const entityId = (\n      (ev.target as HTMLElement).closest(\".mdc-data-table__row\") as any\n    ).rowId;\n    fireEvent(this, \"hass-more-info\", {\n      entityId,\n    });\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      ha-data-table {\n        --data-table-border-width: 0;\n        height: 100%;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-entity-picker-table\": HuiEntityPickerTable;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}