{"ast":null,"code":"/**\n * Attach a media query. Listener is called right away and when it matches.\n * @param mediaQuery media query to match.\n * @param listener listener to call when media query changes between match/unmatch\n * @returns function to remove the listener.\n */\nexport var listenMediaQuery = function listenMediaQuery(mediaQuery, matchesChanged) {\n  var mql = matchMedia(mediaQuery);\n  var listener = function listener(e) {\n    return matchesChanged(e.matches);\n  };\n  mql.addListener(listener);\n  matchesChanged(mql.matches);\n  return function () {\n    return mql.removeListener(listener);\n  };\n};","map":{"version":3,"names":["listenMediaQuery","mediaQuery","matchesChanged","mql","matchMedia","listener","e","matches","addListener","removeListener"],"sources":["/workspaces/frontend/src/common/dom/media_query.ts"],"sourcesContent":["/**\n * Attach a media query. Listener is called right away and when it matches.\n * @param mediaQuery media query to match.\n * @param listener listener to call when media query changes between match/unmatch\n * @returns function to remove the listener.\n */\nexport const listenMediaQuery = (\n  mediaQuery: string,\n  matchesChanged: (matches: boolean) => void\n) => {\n  const mql = matchMedia(mediaQuery);\n  const listener = (e) => matchesChanged(e.matches);\n  mql.addListener(listener);\n  matchesChanged(mql.matches);\n  return () => mql.removeListener(listener);\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAC3BC,UAAkB,EAClBC,cAA0C,EACvC;EACH,IAAMC,GAAG,GAAGC,UAAU,CAACH,UAAU,CAAC;EAClC,IAAMI,QAAQ,GAAG,SAAXA,QAAQA,CAAIC,CAAC;IAAA,OAAKJ,cAAc,CAACI,CAAC,CAACC,OAAO,CAAC;EAAA;EACjDJ,GAAG,CAACK,WAAW,CAACH,QAAQ,CAAC;EACzBH,cAAc,CAACC,GAAG,CAACI,OAAO,CAAC;EAC3B,OAAO;IAAA,OAAMJ,GAAG,CAACM,cAAc,CAACJ,QAAQ,CAAC;EAAA;AAC3C,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}