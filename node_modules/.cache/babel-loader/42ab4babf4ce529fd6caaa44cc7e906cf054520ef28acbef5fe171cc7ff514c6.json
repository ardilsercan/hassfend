{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"base\"],\n  _excluded2 = [\"padTo\", \"floor\"];\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.object.get-own-property-names.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport { hasLocaleWeekInfo, hasRelative, padStart, roundTo, validateWeekSettings } from \"./util.js\";\nimport * as English from \"./english.js\";\nimport Settings from \"../settings.js\";\nimport DateTime from \"../datetime.js\";\nimport IANAZone from \"../zones/IANAZone.js\";\n\n// todo - remap caching\n\nvar intlLFCache = {};\nfunction getCachedLF(locString) {\n  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var key = JSON.stringify([locString, opts]);\n  var dtf = intlLFCache[key];\n  if (!dtf) {\n    dtf = new Intl.ListFormat(locString, opts);\n    intlLFCache[key] = dtf;\n  }\n  return dtf;\n}\nvar intlDTCache = {};\nfunction getCachedDTF(locString) {\n  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var key = JSON.stringify([locString, opts]);\n  var dtf = intlDTCache[key];\n  if (!dtf) {\n    dtf = new Intl.DateTimeFormat(locString, opts);\n    intlDTCache[key] = dtf;\n  }\n  return dtf;\n}\nvar intlNumCache = {};\nfunction getCachedINF(locString) {\n  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var key = JSON.stringify([locString, opts]);\n  var inf = intlNumCache[key];\n  if (!inf) {\n    inf = new Intl.NumberFormat(locString, opts);\n    intlNumCache[key] = inf;\n  }\n  return inf;\n}\nvar intlRelCache = {};\nfunction getCachedRTF(locString) {\n  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var base = opts.base,\n    cacheKeyOpts = _objectWithoutProperties(opts, _excluded); // exclude `base` from the options\n  var key = JSON.stringify([locString, cacheKeyOpts]);\n  var inf = intlRelCache[key];\n  if (!inf) {\n    inf = new Intl.RelativeTimeFormat(locString, opts);\n    intlRelCache[key] = inf;\n  }\n  return inf;\n}\nvar sysLocaleCache = null;\nfunction systemLocale() {\n  if (sysLocaleCache) {\n    return sysLocaleCache;\n  } else {\n    sysLocaleCache = new Intl.DateTimeFormat().resolvedOptions().locale;\n    return sysLocaleCache;\n  }\n}\nvar weekInfoCache = {};\nfunction getCachedWeekInfo(locString) {\n  var data = weekInfoCache[locString];\n  if (!data) {\n    var locale = new Intl.Locale(locString);\n    // browsers currently implement this as a property, but spec says it should be a getter function\n    data = \"getWeekInfo\" in locale ? locale.getWeekInfo() : locale.weekInfo;\n    weekInfoCache[locString] = data;\n  }\n  return data;\n}\nfunction parseLocaleString(localeStr) {\n  // I really want to avoid writing a BCP 47 parser\n  // see, e.g. https://github.com/wooorm/bcp-47\n  // Instead, we'll do this:\n\n  // a) if the string has no -u extensions, just leave it alone\n  // b) if it does, use Intl to resolve everything\n  // c) if Intl fails, try again without the -u\n\n  // private subtags and unicode subtags have ordering requirements,\n  // and we're not properly parsing this, so just strip out the\n  // private ones if they exist.\n  var xIndex = localeStr.indexOf(\"-x-\");\n  if (xIndex !== -1) {\n    localeStr = localeStr.substring(0, xIndex);\n  }\n  var uIndex = localeStr.indexOf(\"-u-\");\n  if (uIndex === -1) {\n    return [localeStr];\n  } else {\n    var options;\n    var selectedStr;\n    try {\n      options = getCachedDTF(localeStr).resolvedOptions();\n      selectedStr = localeStr;\n    } catch (e) {\n      var smaller = localeStr.substring(0, uIndex);\n      options = getCachedDTF(smaller).resolvedOptions();\n      selectedStr = smaller;\n    }\n    var _options = options,\n      numberingSystem = _options.numberingSystem,\n      calendar = _options.calendar;\n    return [selectedStr, numberingSystem, calendar];\n  }\n}\nfunction intlConfigString(localeStr, numberingSystem, outputCalendar) {\n  if (outputCalendar || numberingSystem) {\n    if (!localeStr.includes(\"-u-\")) {\n      localeStr += \"-u\";\n    }\n    if (outputCalendar) {\n      localeStr += \"-ca-\".concat(outputCalendar);\n    }\n    if (numberingSystem) {\n      localeStr += \"-nu-\".concat(numberingSystem);\n    }\n    return localeStr;\n  } else {\n    return localeStr;\n  }\n}\nfunction mapMonths(f) {\n  var ms = [];\n  for (var i = 1; i <= 12; i++) {\n    var dt = DateTime.utc(2009, i, 1);\n    ms.push(f(dt));\n  }\n  return ms;\n}\nfunction mapWeekdays(f) {\n  var ms = [];\n  for (var i = 1; i <= 7; i++) {\n    var dt = DateTime.utc(2016, 11, 13 + i);\n    ms.push(f(dt));\n  }\n  return ms;\n}\nfunction listStuff(loc, length, englishFn, intlFn) {\n  var mode = loc.listingMode();\n  if (mode === \"error\") {\n    return null;\n  } else if (mode === \"en\") {\n    return englishFn(length);\n  } else {\n    return intlFn(length);\n  }\n}\nfunction supportsFastNumbers(loc) {\n  if (loc.numberingSystem && loc.numberingSystem !== \"latn\") {\n    return false;\n  } else {\n    return loc.numberingSystem === \"latn\" || !loc.locale || loc.locale.startsWith(\"en\") || new Intl.DateTimeFormat(loc.intl).resolvedOptions().numberingSystem === \"latn\";\n  }\n}\n\n/**\n * @private\n */\nvar PolyNumberFormatter = /*#__PURE__*/function () {\n  function PolyNumberFormatter(intl, forceSimple, opts) {\n    _classCallCheck(this, PolyNumberFormatter);\n    this.padTo = opts.padTo || 0;\n    this.floor = opts.floor || false;\n    var padTo = opts.padTo,\n      floor = opts.floor,\n      otherOpts = _objectWithoutProperties(opts, _excluded2);\n    if (!forceSimple || Object.keys(otherOpts).length > 0) {\n      var intlOpts = Object.assign({\n        useGrouping: false\n      }, opts);\n      if (opts.padTo > 0) intlOpts.minimumIntegerDigits = opts.padTo;\n      this.inf = getCachedINF(intl, intlOpts);\n    }\n  }\n  _createClass(PolyNumberFormatter, [{\n    key: \"format\",\n    value: function format(i) {\n      if (this.inf) {\n        var fixed = this.floor ? Math.floor(i) : i;\n        return this.inf.format(fixed);\n      } else {\n        // to match the browser's numberformatter defaults\n        var _fixed = this.floor ? Math.floor(i) : roundTo(i, 3);\n        return padStart(_fixed, this.padTo);\n      }\n    }\n  }]);\n  return PolyNumberFormatter;\n}();\n/**\n * @private\n */\nvar PolyDateFormatter = /*#__PURE__*/function () {\n  function PolyDateFormatter(dt, intl, opts) {\n    _classCallCheck(this, PolyDateFormatter);\n    this.opts = opts;\n    this.originalZone = undefined;\n    var z = undefined;\n    if (this.opts.timeZone) {\n      // Don't apply any workarounds if a timeZone is explicitly provided in opts\n      this.dt = dt;\n    } else if (dt.zone.type === \"fixed\") {\n      // UTC-8 or Etc/UTC-8 are not part of tzdata, only Etc/GMT+8 and the like.\n      // That is why fixed-offset TZ is set to that unless it is:\n      // 1. Representing offset 0 when UTC is used to maintain previous behavior and does not become GMT.\n      // 2. Unsupported by the browser:\n      //    - some do not support Etc/\n      //    - < Etc/GMT-14, > Etc/GMT+12, and 30-minute or 45-minute offsets are not part of tzdata\n      var gmtOffset = -1 * (dt.offset / 60);\n      var offsetZ = gmtOffset >= 0 ? \"Etc/GMT+\".concat(gmtOffset) : \"Etc/GMT\".concat(gmtOffset);\n      if (dt.offset !== 0 && IANAZone.create(offsetZ).valid) {\n        z = offsetZ;\n        this.dt = dt;\n      } else {\n        // Not all fixed-offset zones like Etc/+4:30 are present in tzdata so\n        // we manually apply the offset and substitute the zone as needed.\n        z = \"UTC\";\n        this.dt = dt.offset === 0 ? dt : dt.setZone(\"UTC\").plus({\n          minutes: dt.offset\n        });\n        this.originalZone = dt.zone;\n      }\n    } else if (dt.zone.type === \"system\") {\n      this.dt = dt;\n    } else if (dt.zone.type === \"iana\") {\n      this.dt = dt;\n      z = dt.zone.name;\n    } else {\n      // Custom zones can have any offset / offsetName so we just manually\n      // apply the offset and substitute the zone as needed.\n      z = \"UTC\";\n      this.dt = dt.setZone(\"UTC\").plus({\n        minutes: dt.offset\n      });\n      this.originalZone = dt.zone;\n    }\n    var intlOpts = Object.assign({}, this.opts);\n    intlOpts.timeZone = intlOpts.timeZone || z;\n    this.dtf = getCachedDTF(intl, intlOpts);\n  }\n  _createClass(PolyDateFormatter, [{\n    key: \"format\",\n    value: function format() {\n      if (this.originalZone) {\n        // If we have to substitute in the actual zone name, we have to use\n        // formatToParts so that the timezone can be replaced.\n        return this.formatToParts().map(function (_ref) {\n          var value = _ref.value;\n          return value;\n        }).join(\"\");\n      }\n      return this.dtf.format(this.dt.toJSDate());\n    }\n  }, {\n    key: \"formatToParts\",\n    value: function formatToParts() {\n      var _this = this;\n      var parts = this.dtf.formatToParts(this.dt.toJSDate());\n      if (this.originalZone) {\n        return parts.map(function (part) {\n          if (part.type === \"timeZoneName\") {\n            var offsetName = _this.originalZone.offsetName(_this.dt.ts, {\n              locale: _this.dt.locale,\n              format: _this.opts.timeZoneName\n            });\n            return Object.assign(Object.assign({}, part), {}, {\n              value: offsetName\n            });\n          } else {\n            return part;\n          }\n        });\n      }\n      return parts;\n    }\n  }, {\n    key: \"resolvedOptions\",\n    value: function resolvedOptions() {\n      return this.dtf.resolvedOptions();\n    }\n  }]);\n  return PolyDateFormatter;\n}();\n/**\n * @private\n */\nvar PolyRelFormatter = /*#__PURE__*/function () {\n  function PolyRelFormatter(intl, isEnglish, opts) {\n    _classCallCheck(this, PolyRelFormatter);\n    this.opts = Object.assign({\n      style: \"long\"\n    }, opts);\n    if (!isEnglish && hasRelative()) {\n      this.rtf = getCachedRTF(intl, opts);\n    }\n  }\n  _createClass(PolyRelFormatter, [{\n    key: \"format\",\n    value: function format(count, unit) {\n      if (this.rtf) {\n        return this.rtf.format(count, unit);\n      } else {\n        return English.formatRelativeTime(unit, count, this.opts.numeric, this.opts.style !== \"long\");\n      }\n    }\n  }, {\n    key: \"formatToParts\",\n    value: function formatToParts(count, unit) {\n      if (this.rtf) {\n        return this.rtf.formatToParts(count, unit);\n      } else {\n        return [];\n      }\n    }\n  }]);\n  return PolyRelFormatter;\n}();\nvar fallbackWeekSettings = {\n  firstDay: 1,\n  minimalDays: 4,\n  weekend: [6, 7]\n};\n\n/**\n * @private\n */\nvar Locale = /*#__PURE__*/function () {\n  function Locale(locale, numbering, outputCalendar, weekSettings, specifiedLocale) {\n    _classCallCheck(this, Locale);\n    var _parseLocaleString = parseLocaleString(locale),\n      _parseLocaleString2 = _slicedToArray(_parseLocaleString, 3),\n      parsedLocale = _parseLocaleString2[0],\n      parsedNumberingSystem = _parseLocaleString2[1],\n      parsedOutputCalendar = _parseLocaleString2[2];\n    this.locale = parsedLocale;\n    this.numberingSystem = numbering || parsedNumberingSystem || null;\n    this.outputCalendar = outputCalendar || parsedOutputCalendar || null;\n    this.weekSettings = weekSettings;\n    this.intl = intlConfigString(this.locale, this.numberingSystem, this.outputCalendar);\n    this.weekdaysCache = {\n      format: {},\n      standalone: {}\n    };\n    this.monthsCache = {\n      format: {},\n      standalone: {}\n    };\n    this.meridiemCache = null;\n    this.eraCache = {};\n    this.specifiedLocale = specifiedLocale;\n    this.fastNumbersCached = null;\n  }\n  _createClass(Locale, [{\n    key: \"fastNumbers\",\n    get: function get() {\n      if (this.fastNumbersCached == null) {\n        this.fastNumbersCached = supportsFastNumbers(this);\n      }\n      return this.fastNumbersCached;\n    }\n  }, {\n    key: \"listingMode\",\n    value: function listingMode() {\n      var isActuallyEn = this.isEnglish();\n      var hasNoWeirdness = (this.numberingSystem === null || this.numberingSystem === \"latn\") && (this.outputCalendar === null || this.outputCalendar === \"gregory\");\n      return isActuallyEn && hasNoWeirdness ? \"en\" : \"intl\";\n    }\n  }, {\n    key: \"clone\",\n    value: function clone(alts) {\n      if (!alts || Object.getOwnPropertyNames(alts).length === 0) {\n        return this;\n      } else {\n        return Locale.create(alts.locale || this.specifiedLocale, alts.numberingSystem || this.numberingSystem, alts.outputCalendar || this.outputCalendar, validateWeekSettings(alts.weekSettings) || this.weekSettings, alts.defaultToEN || false);\n      }\n    }\n  }, {\n    key: \"redefaultToEN\",\n    value: function redefaultToEN() {\n      var alts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return this.clone(Object.assign(Object.assign({}, alts), {}, {\n        defaultToEN: true\n      }));\n    }\n  }, {\n    key: \"redefaultToSystem\",\n    value: function redefaultToSystem() {\n      var alts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return this.clone(Object.assign(Object.assign({}, alts), {}, {\n        defaultToEN: false\n      }));\n    }\n  }, {\n    key: \"months\",\n    value: function months(length) {\n      var _this2 = this;\n      var format = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      return listStuff(this, length, English.months, function () {\n        var intl = format ? {\n            month: length,\n            day: \"numeric\"\n          } : {\n            month: length\n          },\n          formatStr = format ? \"format\" : \"standalone\";\n        if (!_this2.monthsCache[formatStr][length]) {\n          _this2.monthsCache[formatStr][length] = mapMonths(function (dt) {\n            return _this2.extract(dt, intl, \"month\");\n          });\n        }\n        return _this2.monthsCache[formatStr][length];\n      });\n    }\n  }, {\n    key: \"weekdays\",\n    value: function weekdays(length) {\n      var _this3 = this;\n      var format = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      return listStuff(this, length, English.weekdays, function () {\n        var intl = format ? {\n            weekday: length,\n            year: \"numeric\",\n            month: \"long\",\n            day: \"numeric\"\n          } : {\n            weekday: length\n          },\n          formatStr = format ? \"format\" : \"standalone\";\n        if (!_this3.weekdaysCache[formatStr][length]) {\n          _this3.weekdaysCache[formatStr][length] = mapWeekdays(function (dt) {\n            return _this3.extract(dt, intl, \"weekday\");\n          });\n        }\n        return _this3.weekdaysCache[formatStr][length];\n      });\n    }\n  }, {\n    key: \"meridiems\",\n    value: function meridiems() {\n      var _this4 = this;\n      return listStuff(this, undefined, function () {\n        return English.meridiems;\n      }, function () {\n        // In theory there could be aribitrary day periods. We're gonna assume there are exactly two\n        // for AM and PM. This is probably wrong, but it's makes parsing way easier.\n        if (!_this4.meridiemCache) {\n          var intl = {\n            hour: \"numeric\",\n            hourCycle: \"h12\"\n          };\n          _this4.meridiemCache = [DateTime.utc(2016, 11, 13, 9), DateTime.utc(2016, 11, 13, 19)].map(function (dt) {\n            return _this4.extract(dt, intl, \"dayperiod\");\n          });\n        }\n        return _this4.meridiemCache;\n      });\n    }\n  }, {\n    key: \"eras\",\n    value: function eras(length) {\n      var _this5 = this;\n      return listStuff(this, length, English.eras, function () {\n        var intl = {\n          era: length\n        };\n\n        // This is problematic. Different calendars are going to define eras totally differently. What I need is the minimum set of dates\n        // to definitely enumerate them.\n        if (!_this5.eraCache[length]) {\n          _this5.eraCache[length] = [DateTime.utc(-40, 1, 1), DateTime.utc(2017, 1, 1)].map(function (dt) {\n            return _this5.extract(dt, intl, \"era\");\n          });\n        }\n        return _this5.eraCache[length];\n      });\n    }\n  }, {\n    key: \"extract\",\n    value: function extract(dt, intlOpts, field) {\n      var df = this.dtFormatter(dt, intlOpts),\n        results = df.formatToParts(),\n        matching = results.find(function (m) {\n          return m.type.toLowerCase() === field;\n        });\n      return matching ? matching.value : null;\n    }\n  }, {\n    key: \"numberFormatter\",\n    value: function numberFormatter() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      // this forcesimple option is never used (the only caller short-circuits on it, but it seems safer to leave)\n      // (in contrast, the rest of the condition is used heavily)\n      return new PolyNumberFormatter(this.intl, opts.forceSimple || this.fastNumbers, opts);\n    }\n  }, {\n    key: \"dtFormatter\",\n    value: function dtFormatter(dt) {\n      var intlOpts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return new PolyDateFormatter(dt, this.intl, intlOpts);\n    }\n  }, {\n    key: \"relFormatter\",\n    value: function relFormatter() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return new PolyRelFormatter(this.intl, this.isEnglish(), opts);\n    }\n  }, {\n    key: \"listFormatter\",\n    value: function listFormatter() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return getCachedLF(this.intl, opts);\n    }\n  }, {\n    key: \"isEnglish\",\n    value: function isEnglish() {\n      return this.locale === \"en\" || this.locale.toLowerCase() === \"en-us\" || new Intl.DateTimeFormat(this.intl).resolvedOptions().locale.startsWith(\"en-us\");\n    }\n  }, {\n    key: \"getWeekSettings\",\n    value: function getWeekSettings() {\n      if (this.weekSettings) {\n        return this.weekSettings;\n      } else if (!hasLocaleWeekInfo()) {\n        return fallbackWeekSettings;\n      } else {\n        return getCachedWeekInfo(this.locale);\n      }\n    }\n  }, {\n    key: \"getStartOfWeek\",\n    value: function getStartOfWeek() {\n      return this.getWeekSettings().firstDay;\n    }\n  }, {\n    key: \"getMinDaysInFirstWeek\",\n    value: function getMinDaysInFirstWeek() {\n      return this.getWeekSettings().minimalDays;\n    }\n  }, {\n    key: \"getWeekendDays\",\n    value: function getWeekendDays() {\n      return this.getWeekSettings().weekend;\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(other) {\n      return this.locale === other.locale && this.numberingSystem === other.numberingSystem && this.outputCalendar === other.outputCalendar;\n    }\n  }], [{\n    key: \"fromOpts\",\n    value: function fromOpts(opts) {\n      return Locale.create(opts.locale, opts.numberingSystem, opts.outputCalendar, opts.weekSettings, opts.defaultToEN);\n    }\n  }, {\n    key: \"create\",\n    value: function create(locale, numberingSystem, outputCalendar, weekSettings) {\n      var defaultToEN = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n      var specifiedLocale = locale || Settings.defaultLocale;\n      // the system locale is useful for human readable strings but annoying for parsing/formatting known formats\n      var localeR = specifiedLocale || (defaultToEN ? \"en-US\" : systemLocale());\n      var numberingSystemR = numberingSystem || Settings.defaultNumberingSystem;\n      var outputCalendarR = outputCalendar || Settings.defaultOutputCalendar;\n      var weekSettingsR = validateWeekSettings(weekSettings) || Settings.defaultWeekSettings;\n      return new Locale(localeR, numberingSystemR, outputCalendarR, weekSettingsR, specifiedLocale);\n    }\n  }, {\n    key: \"resetCache\",\n    value: function resetCache() {\n      sysLocaleCache = null;\n      intlDTCache = {};\n      intlNumCache = {};\n      intlRelCache = {};\n    }\n  }, {\n    key: \"fromObject\",\n    value: function fromObject() {\n      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        locale = _ref2.locale,\n        numberingSystem = _ref2.numberingSystem,\n        outputCalendar = _ref2.outputCalendar,\n        weekSettings = _ref2.weekSettings;\n      return Locale.create(locale, numberingSystem, outputCalendar, weekSettings);\n    }\n  }]);\n  return Locale;\n}();\nexport { Locale as default };","map":{"version":3,"names":["hasLocaleWeekInfo","hasRelative","padStart","roundTo","validateWeekSettings","English","Settings","DateTime","IANAZone","intlLFCache","getCachedLF","locString","opts","arguments","length","undefined","key","JSON","stringify","dtf","Intl","ListFormat","intlDTCache","getCachedDTF","DateTimeFormat","intlNumCache","getCachedINF","inf","NumberFormat","intlRelCache","getCachedRTF","base","cacheKeyOpts","_objectWithoutProperties","_excluded","RelativeTimeFormat","sysLocaleCache","systemLocale","resolvedOptions","locale","weekInfoCache","getCachedWeekInfo","data","Locale","getWeekInfo","weekInfo","parseLocaleString","localeStr","xIndex","indexOf","substring","uIndex","options","selectedStr","e","smaller","_options","numberingSystem","calendar","intlConfigString","outputCalendar","includes","concat","mapMonths","f","ms","i","dt","utc","push","mapWeekdays","listStuff","loc","englishFn","intlFn","mode","listingMode","supportsFastNumbers","startsWith","intl","PolyNumberFormatter","forceSimple","_classCallCheck","padTo","floor","otherOpts","_excluded2","Object","keys","intlOpts","assign","useGrouping","minimumIntegerDigits","_createClass","value","format","fixed","Math","PolyDateFormatter","originalZone","z","timeZone","zone","type","gmtOffset","offset","offsetZ","create","valid","setZone","plus","minutes","name","formatToParts","map","_ref","join","toJSDate","_this","parts","part","offsetName","ts","timeZoneName","PolyRelFormatter","isEnglish","style","rtf","count","unit","formatRelativeTime","numeric","fallbackWeekSettings","firstDay","minimalDays","weekend","numbering","weekSettings","specifiedLocale","_parseLocaleString","_parseLocaleString2","_slicedToArray","parsedLocale","parsedNumberingSystem","parsedOutputCalendar","weekdaysCache","standalone","monthsCache","meridiemCache","eraCache","fastNumbersCached","get","isActuallyEn","hasNoWeirdness","clone","alts","getOwnPropertyNames","defaultToEN","redefaultToEN","redefaultToSystem","months","_this2","month","day","formatStr","extract","weekdays","_this3","weekday","year","meridiems","_this4","hour","hourCycle","eras","_this5","era","field","df","dtFormatter","results","matching","find","m","toLowerCase","numberFormatter","fastNumbers","relFormatter","listFormatter","getWeekSettings","getStartOfWeek","getMinDaysInFirstWeek","getWeekendDays","equals","other","fromOpts","defaultLocale","localeR","numberingSystemR","defaultNumberingSystem","outputCalendarR","defaultOutputCalendar","weekSettingsR","defaultWeekSettings","resetCache","fromObject","_ref2","default"],"sources":["/workspaces/frontend/node_modules/luxon/src/impl/locale.js"],"sourcesContent":["import { hasLocaleWeekInfo, hasRelative, padStart, roundTo, validateWeekSettings } from \"./util.js\";\nimport * as English from \"./english.js\";\nimport Settings from \"../settings.js\";\nimport DateTime from \"../datetime.js\";\nimport IANAZone from \"../zones/IANAZone.js\";\n\n// todo - remap caching\n\nlet intlLFCache = {};\nfunction getCachedLF(locString, opts = {}) {\n  const key = JSON.stringify([locString, opts]);\n  let dtf = intlLFCache[key];\n  if (!dtf) {\n    dtf = new Intl.ListFormat(locString, opts);\n    intlLFCache[key] = dtf;\n  }\n  return dtf;\n}\n\nlet intlDTCache = {};\nfunction getCachedDTF(locString, opts = {}) {\n  const key = JSON.stringify([locString, opts]);\n  let dtf = intlDTCache[key];\n  if (!dtf) {\n    dtf = new Intl.DateTimeFormat(locString, opts);\n    intlDTCache[key] = dtf;\n  }\n  return dtf;\n}\n\nlet intlNumCache = {};\nfunction getCachedINF(locString, opts = {}) {\n  const key = JSON.stringify([locString, opts]);\n  let inf = intlNumCache[key];\n  if (!inf) {\n    inf = new Intl.NumberFormat(locString, opts);\n    intlNumCache[key] = inf;\n  }\n  return inf;\n}\n\nlet intlRelCache = {};\nfunction getCachedRTF(locString, opts = {}) {\n  const { base, ...cacheKeyOpts } = opts; // exclude `base` from the options\n  const key = JSON.stringify([locString, cacheKeyOpts]);\n  let inf = intlRelCache[key];\n  if (!inf) {\n    inf = new Intl.RelativeTimeFormat(locString, opts);\n    intlRelCache[key] = inf;\n  }\n  return inf;\n}\n\nlet sysLocaleCache = null;\nfunction systemLocale() {\n  if (sysLocaleCache) {\n    return sysLocaleCache;\n  } else {\n    sysLocaleCache = new Intl.DateTimeFormat().resolvedOptions().locale;\n    return sysLocaleCache;\n  }\n}\n\nlet weekInfoCache = {};\nfunction getCachedWeekInfo(locString) {\n  let data = weekInfoCache[locString];\n  if (!data) {\n    const locale = new Intl.Locale(locString);\n    // browsers currently implement this as a property, but spec says it should be a getter function\n    data = \"getWeekInfo\" in locale ? locale.getWeekInfo() : locale.weekInfo;\n    weekInfoCache[locString] = data;\n  }\n  return data;\n}\n\nfunction parseLocaleString(localeStr) {\n  // I really want to avoid writing a BCP 47 parser\n  // see, e.g. https://github.com/wooorm/bcp-47\n  // Instead, we'll do this:\n\n  // a) if the string has no -u extensions, just leave it alone\n  // b) if it does, use Intl to resolve everything\n  // c) if Intl fails, try again without the -u\n\n  // private subtags and unicode subtags have ordering requirements,\n  // and we're not properly parsing this, so just strip out the\n  // private ones if they exist.\n  const xIndex = localeStr.indexOf(\"-x-\");\n  if (xIndex !== -1) {\n    localeStr = localeStr.substring(0, xIndex);\n  }\n\n  const uIndex = localeStr.indexOf(\"-u-\");\n  if (uIndex === -1) {\n    return [localeStr];\n  } else {\n    let options;\n    let selectedStr;\n    try {\n      options = getCachedDTF(localeStr).resolvedOptions();\n      selectedStr = localeStr;\n    } catch (e) {\n      const smaller = localeStr.substring(0, uIndex);\n      options = getCachedDTF(smaller).resolvedOptions();\n      selectedStr = smaller;\n    }\n\n    const { numberingSystem, calendar } = options;\n    return [selectedStr, numberingSystem, calendar];\n  }\n}\n\nfunction intlConfigString(localeStr, numberingSystem, outputCalendar) {\n  if (outputCalendar || numberingSystem) {\n    if (!localeStr.includes(\"-u-\")) {\n      localeStr += \"-u\";\n    }\n\n    if (outputCalendar) {\n      localeStr += `-ca-${outputCalendar}`;\n    }\n\n    if (numberingSystem) {\n      localeStr += `-nu-${numberingSystem}`;\n    }\n    return localeStr;\n  } else {\n    return localeStr;\n  }\n}\n\nfunction mapMonths(f) {\n  const ms = [];\n  for (let i = 1; i <= 12; i++) {\n    const dt = DateTime.utc(2009, i, 1);\n    ms.push(f(dt));\n  }\n  return ms;\n}\n\nfunction mapWeekdays(f) {\n  const ms = [];\n  for (let i = 1; i <= 7; i++) {\n    const dt = DateTime.utc(2016, 11, 13 + i);\n    ms.push(f(dt));\n  }\n  return ms;\n}\n\nfunction listStuff(loc, length, englishFn, intlFn) {\n  const mode = loc.listingMode();\n\n  if (mode === \"error\") {\n    return null;\n  } else if (mode === \"en\") {\n    return englishFn(length);\n  } else {\n    return intlFn(length);\n  }\n}\n\nfunction supportsFastNumbers(loc) {\n  if (loc.numberingSystem && loc.numberingSystem !== \"latn\") {\n    return false;\n  } else {\n    return (\n      loc.numberingSystem === \"latn\" ||\n      !loc.locale ||\n      loc.locale.startsWith(\"en\") ||\n      new Intl.DateTimeFormat(loc.intl).resolvedOptions().numberingSystem === \"latn\"\n    );\n  }\n}\n\n/**\n * @private\n */\n\nclass PolyNumberFormatter {\n  constructor(intl, forceSimple, opts) {\n    this.padTo = opts.padTo || 0;\n    this.floor = opts.floor || false;\n\n    const { padTo, floor, ...otherOpts } = opts;\n\n    if (!forceSimple || Object.keys(otherOpts).length > 0) {\n      const intlOpts = { useGrouping: false, ...opts };\n      if (opts.padTo > 0) intlOpts.minimumIntegerDigits = opts.padTo;\n      this.inf = getCachedINF(intl, intlOpts);\n    }\n  }\n\n  format(i) {\n    if (this.inf) {\n      const fixed = this.floor ? Math.floor(i) : i;\n      return this.inf.format(fixed);\n    } else {\n      // to match the browser's numberformatter defaults\n      const fixed = this.floor ? Math.floor(i) : roundTo(i, 3);\n      return padStart(fixed, this.padTo);\n    }\n  }\n}\n\n/**\n * @private\n */\n\nclass PolyDateFormatter {\n  constructor(dt, intl, opts) {\n    this.opts = opts;\n    this.originalZone = undefined;\n\n    let z = undefined;\n    if (this.opts.timeZone) {\n      // Don't apply any workarounds if a timeZone is explicitly provided in opts\n      this.dt = dt;\n    } else if (dt.zone.type === \"fixed\") {\n      // UTC-8 or Etc/UTC-8 are not part of tzdata, only Etc/GMT+8 and the like.\n      // That is why fixed-offset TZ is set to that unless it is:\n      // 1. Representing offset 0 when UTC is used to maintain previous behavior and does not become GMT.\n      // 2. Unsupported by the browser:\n      //    - some do not support Etc/\n      //    - < Etc/GMT-14, > Etc/GMT+12, and 30-minute or 45-minute offsets are not part of tzdata\n      const gmtOffset = -1 * (dt.offset / 60);\n      const offsetZ = gmtOffset >= 0 ? `Etc/GMT+${gmtOffset}` : `Etc/GMT${gmtOffset}`;\n      if (dt.offset !== 0 && IANAZone.create(offsetZ).valid) {\n        z = offsetZ;\n        this.dt = dt;\n      } else {\n        // Not all fixed-offset zones like Etc/+4:30 are present in tzdata so\n        // we manually apply the offset and substitute the zone as needed.\n        z = \"UTC\";\n        this.dt = dt.offset === 0 ? dt : dt.setZone(\"UTC\").plus({ minutes: dt.offset });\n        this.originalZone = dt.zone;\n      }\n    } else if (dt.zone.type === \"system\") {\n      this.dt = dt;\n    } else if (dt.zone.type === \"iana\") {\n      this.dt = dt;\n      z = dt.zone.name;\n    } else {\n      // Custom zones can have any offset / offsetName so we just manually\n      // apply the offset and substitute the zone as needed.\n      z = \"UTC\";\n      this.dt = dt.setZone(\"UTC\").plus({ minutes: dt.offset });\n      this.originalZone = dt.zone;\n    }\n\n    const intlOpts = { ...this.opts };\n    intlOpts.timeZone = intlOpts.timeZone || z;\n    this.dtf = getCachedDTF(intl, intlOpts);\n  }\n\n  format() {\n    if (this.originalZone) {\n      // If we have to substitute in the actual zone name, we have to use\n      // formatToParts so that the timezone can be replaced.\n      return this.formatToParts()\n        .map(({ value }) => value)\n        .join(\"\");\n    }\n    return this.dtf.format(this.dt.toJSDate());\n  }\n\n  formatToParts() {\n    const parts = this.dtf.formatToParts(this.dt.toJSDate());\n    if (this.originalZone) {\n      return parts.map((part) => {\n        if (part.type === \"timeZoneName\") {\n          const offsetName = this.originalZone.offsetName(this.dt.ts, {\n            locale: this.dt.locale,\n            format: this.opts.timeZoneName,\n          });\n          return {\n            ...part,\n            value: offsetName,\n          };\n        } else {\n          return part;\n        }\n      });\n    }\n    return parts;\n  }\n\n  resolvedOptions() {\n    return this.dtf.resolvedOptions();\n  }\n}\n\n/**\n * @private\n */\nclass PolyRelFormatter {\n  constructor(intl, isEnglish, opts) {\n    this.opts = { style: \"long\", ...opts };\n    if (!isEnglish && hasRelative()) {\n      this.rtf = getCachedRTF(intl, opts);\n    }\n  }\n\n  format(count, unit) {\n    if (this.rtf) {\n      return this.rtf.format(count, unit);\n    } else {\n      return English.formatRelativeTime(unit, count, this.opts.numeric, this.opts.style !== \"long\");\n    }\n  }\n\n  formatToParts(count, unit) {\n    if (this.rtf) {\n      return this.rtf.formatToParts(count, unit);\n    } else {\n      return [];\n    }\n  }\n}\n\nconst fallbackWeekSettings = {\n  firstDay: 1,\n  minimalDays: 4,\n  weekend: [6, 7],\n};\n\n/**\n * @private\n */\n\nexport default class Locale {\n  static fromOpts(opts) {\n    return Locale.create(\n      opts.locale,\n      opts.numberingSystem,\n      opts.outputCalendar,\n      opts.weekSettings,\n      opts.defaultToEN\n    );\n  }\n\n  static create(locale, numberingSystem, outputCalendar, weekSettings, defaultToEN = false) {\n    const specifiedLocale = locale || Settings.defaultLocale;\n    // the system locale is useful for human readable strings but annoying for parsing/formatting known formats\n    const localeR = specifiedLocale || (defaultToEN ? \"en-US\" : systemLocale());\n    const numberingSystemR = numberingSystem || Settings.defaultNumberingSystem;\n    const outputCalendarR = outputCalendar || Settings.defaultOutputCalendar;\n    const weekSettingsR = validateWeekSettings(weekSettings) || Settings.defaultWeekSettings;\n    return new Locale(localeR, numberingSystemR, outputCalendarR, weekSettingsR, specifiedLocale);\n  }\n\n  static resetCache() {\n    sysLocaleCache = null;\n    intlDTCache = {};\n    intlNumCache = {};\n    intlRelCache = {};\n  }\n\n  static fromObject({ locale, numberingSystem, outputCalendar, weekSettings } = {}) {\n    return Locale.create(locale, numberingSystem, outputCalendar, weekSettings);\n  }\n\n  constructor(locale, numbering, outputCalendar, weekSettings, specifiedLocale) {\n    const [parsedLocale, parsedNumberingSystem, parsedOutputCalendar] = parseLocaleString(locale);\n\n    this.locale = parsedLocale;\n    this.numberingSystem = numbering || parsedNumberingSystem || null;\n    this.outputCalendar = outputCalendar || parsedOutputCalendar || null;\n    this.weekSettings = weekSettings;\n    this.intl = intlConfigString(this.locale, this.numberingSystem, this.outputCalendar);\n\n    this.weekdaysCache = { format: {}, standalone: {} };\n    this.monthsCache = { format: {}, standalone: {} };\n    this.meridiemCache = null;\n    this.eraCache = {};\n\n    this.specifiedLocale = specifiedLocale;\n    this.fastNumbersCached = null;\n  }\n\n  get fastNumbers() {\n    if (this.fastNumbersCached == null) {\n      this.fastNumbersCached = supportsFastNumbers(this);\n    }\n\n    return this.fastNumbersCached;\n  }\n\n  listingMode() {\n    const isActuallyEn = this.isEnglish();\n    const hasNoWeirdness =\n      (this.numberingSystem === null || this.numberingSystem === \"latn\") &&\n      (this.outputCalendar === null || this.outputCalendar === \"gregory\");\n    return isActuallyEn && hasNoWeirdness ? \"en\" : \"intl\";\n  }\n\n  clone(alts) {\n    if (!alts || Object.getOwnPropertyNames(alts).length === 0) {\n      return this;\n    } else {\n      return Locale.create(\n        alts.locale || this.specifiedLocale,\n        alts.numberingSystem || this.numberingSystem,\n        alts.outputCalendar || this.outputCalendar,\n        validateWeekSettings(alts.weekSettings) || this.weekSettings,\n        alts.defaultToEN || false\n      );\n    }\n  }\n\n  redefaultToEN(alts = {}) {\n    return this.clone({ ...alts, defaultToEN: true });\n  }\n\n  redefaultToSystem(alts = {}) {\n    return this.clone({ ...alts, defaultToEN: false });\n  }\n\n  months(length, format = false) {\n    return listStuff(this, length, English.months, () => {\n      const intl = format ? { month: length, day: \"numeric\" } : { month: length },\n        formatStr = format ? \"format\" : \"standalone\";\n      if (!this.monthsCache[formatStr][length]) {\n        this.monthsCache[formatStr][length] = mapMonths((dt) => this.extract(dt, intl, \"month\"));\n      }\n      return this.monthsCache[formatStr][length];\n    });\n  }\n\n  weekdays(length, format = false) {\n    return listStuff(this, length, English.weekdays, () => {\n      const intl = format\n          ? { weekday: length, year: \"numeric\", month: \"long\", day: \"numeric\" }\n          : { weekday: length },\n        formatStr = format ? \"format\" : \"standalone\";\n      if (!this.weekdaysCache[formatStr][length]) {\n        this.weekdaysCache[formatStr][length] = mapWeekdays((dt) =>\n          this.extract(dt, intl, \"weekday\")\n        );\n      }\n      return this.weekdaysCache[formatStr][length];\n    });\n  }\n\n  meridiems() {\n    return listStuff(\n      this,\n      undefined,\n      () => English.meridiems,\n      () => {\n        // In theory there could be aribitrary day periods. We're gonna assume there are exactly two\n        // for AM and PM. This is probably wrong, but it's makes parsing way easier.\n        if (!this.meridiemCache) {\n          const intl = { hour: \"numeric\", hourCycle: \"h12\" };\n          this.meridiemCache = [DateTime.utc(2016, 11, 13, 9), DateTime.utc(2016, 11, 13, 19)].map(\n            (dt) => this.extract(dt, intl, \"dayperiod\")\n          );\n        }\n\n        return this.meridiemCache;\n      }\n    );\n  }\n\n  eras(length) {\n    return listStuff(this, length, English.eras, () => {\n      const intl = { era: length };\n\n      // This is problematic. Different calendars are going to define eras totally differently. What I need is the minimum set of dates\n      // to definitely enumerate them.\n      if (!this.eraCache[length]) {\n        this.eraCache[length] = [DateTime.utc(-40, 1, 1), DateTime.utc(2017, 1, 1)].map((dt) =>\n          this.extract(dt, intl, \"era\")\n        );\n      }\n\n      return this.eraCache[length];\n    });\n  }\n\n  extract(dt, intlOpts, field) {\n    const df = this.dtFormatter(dt, intlOpts),\n      results = df.formatToParts(),\n      matching = results.find((m) => m.type.toLowerCase() === field);\n    return matching ? matching.value : null;\n  }\n\n  numberFormatter(opts = {}) {\n    // this forcesimple option is never used (the only caller short-circuits on it, but it seems safer to leave)\n    // (in contrast, the rest of the condition is used heavily)\n    return new PolyNumberFormatter(this.intl, opts.forceSimple || this.fastNumbers, opts);\n  }\n\n  dtFormatter(dt, intlOpts = {}) {\n    return new PolyDateFormatter(dt, this.intl, intlOpts);\n  }\n\n  relFormatter(opts = {}) {\n    return new PolyRelFormatter(this.intl, this.isEnglish(), opts);\n  }\n\n  listFormatter(opts = {}) {\n    return getCachedLF(this.intl, opts);\n  }\n\n  isEnglish() {\n    return (\n      this.locale === \"en\" ||\n      this.locale.toLowerCase() === \"en-us\" ||\n      new Intl.DateTimeFormat(this.intl).resolvedOptions().locale.startsWith(\"en-us\")\n    );\n  }\n\n  getWeekSettings() {\n    if (this.weekSettings) {\n      return this.weekSettings;\n    } else if (!hasLocaleWeekInfo()) {\n      return fallbackWeekSettings;\n    } else {\n      return getCachedWeekInfo(this.locale);\n    }\n  }\n\n  getStartOfWeek() {\n    return this.getWeekSettings().firstDay;\n  }\n\n  getMinDaysInFirstWeek() {\n    return this.getWeekSettings().minimalDays;\n  }\n\n  getWeekendDays() {\n    return this.getWeekSettings().weekend;\n  }\n\n  equals(other) {\n    return (\n      this.locale === other.locale &&\n      this.numberingSystem === other.numberingSystem &&\n      this.outputCalendar === other.outputCalendar\n    );\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,iBAAiB,EAAEC,WAAW,EAAEC,QAAQ,EAAEC,OAAO,EAAEC,oBAAoB,QAAQ,WAAW;AACnG,OAAO,KAAKC,OAAO,MAAM,cAAc;AACvC,OAAOC,QAAQ,MAAM,gBAAgB;AACrC,OAAOC,QAAQ,MAAM,gBAAgB;AACrC,OAAOC,QAAQ,MAAM,sBAAsB;;AAE3C;;AAEA,IAAIC,WAAW,GAAG,CAAC,CAAC;AACpB,SAASC,WAAWA,CAACC,SAAS,EAAa;EAAA,IAAXC,IAAI,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EACvC,IAAMG,GAAG,GAAGC,IAAI,CAACC,SAAS,CAAC,CAACP,SAAS,EAAEC,IAAI,CAAC,CAAC;EAC7C,IAAIO,GAAG,GAAGV,WAAW,CAACO,GAAG,CAAC;EAC1B,IAAI,CAACG,GAAG,EAAE;IACRA,GAAG,GAAG,IAAIC,IAAI,CAACC,UAAU,CAACV,SAAS,EAAEC,IAAI,CAAC;IAC1CH,WAAW,CAACO,GAAG,CAAC,GAAGG,GAAG;EACxB;EACA,OAAOA,GAAG;AACZ;AAEA,IAAIG,WAAW,GAAG,CAAC,CAAC;AACpB,SAASC,YAAYA,CAACZ,SAAS,EAAa;EAAA,IAAXC,IAAI,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EACxC,IAAMG,GAAG,GAAGC,IAAI,CAACC,SAAS,CAAC,CAACP,SAAS,EAAEC,IAAI,CAAC,CAAC;EAC7C,IAAIO,GAAG,GAAGG,WAAW,CAACN,GAAG,CAAC;EAC1B,IAAI,CAACG,GAAG,EAAE;IACRA,GAAG,GAAG,IAAIC,IAAI,CAACI,cAAc,CAACb,SAAS,EAAEC,IAAI,CAAC;IAC9CU,WAAW,CAACN,GAAG,CAAC,GAAGG,GAAG;EACxB;EACA,OAAOA,GAAG;AACZ;AAEA,IAAIM,YAAY,GAAG,CAAC,CAAC;AACrB,SAASC,YAAYA,CAACf,SAAS,EAAa;EAAA,IAAXC,IAAI,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EACxC,IAAMG,GAAG,GAAGC,IAAI,CAACC,SAAS,CAAC,CAACP,SAAS,EAAEC,IAAI,CAAC,CAAC;EAC7C,IAAIe,GAAG,GAAGF,YAAY,CAACT,GAAG,CAAC;EAC3B,IAAI,CAACW,GAAG,EAAE;IACRA,GAAG,GAAG,IAAIP,IAAI,CAACQ,YAAY,CAACjB,SAAS,EAAEC,IAAI,CAAC;IAC5Ca,YAAY,CAACT,GAAG,CAAC,GAAGW,GAAG;EACzB;EACA,OAAOA,GAAG;AACZ;AAEA,IAAIE,YAAY,GAAG,CAAC,CAAC;AACrB,SAASC,YAAYA,CAACnB,SAAS,EAAa;EAAA,IAAXC,IAAI,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EACxC,IAAQkB,IAAI,GAAsBnB,IAAI,CAA9BmB,IAAI;IAAKC,YAAY,GAAAC,wBAAA,CAAKrB,IAAI,EAAAsB,SAAA,EAAC,CAAC;EACxC,IAAMlB,GAAG,GAAGC,IAAI,CAACC,SAAS,CAAC,CAACP,SAAS,EAAEqB,YAAY,CAAC,CAAC;EACrD,IAAIL,GAAG,GAAGE,YAAY,CAACb,GAAG,CAAC;EAC3B,IAAI,CAACW,GAAG,EAAE;IACRA,GAAG,GAAG,IAAIP,IAAI,CAACe,kBAAkB,CAACxB,SAAS,EAAEC,IAAI,CAAC;IAClDiB,YAAY,CAACb,GAAG,CAAC,GAAGW,GAAG;EACzB;EACA,OAAOA,GAAG;AACZ;AAEA,IAAIS,cAAc,GAAG,IAAI;AACzB,SAASC,YAAYA,CAAA,EAAG;EACtB,IAAID,cAAc,EAAE;IAClB,OAAOA,cAAc;EACvB,CAAC,MAAM;IACLA,cAAc,GAAG,IAAIhB,IAAI,CAACI,cAAc,CAAC,CAAC,CAACc,eAAe,CAAC,CAAC,CAACC,MAAM;IACnE,OAAOH,cAAc;EACvB;AACF;AAEA,IAAII,aAAa,GAAG,CAAC,CAAC;AACtB,SAASC,iBAAiBA,CAAC9B,SAAS,EAAE;EACpC,IAAI+B,IAAI,GAAGF,aAAa,CAAC7B,SAAS,CAAC;EACnC,IAAI,CAAC+B,IAAI,EAAE;IACT,IAAMH,MAAM,GAAG,IAAInB,IAAI,CAACuB,MAAM,CAAChC,SAAS,CAAC;IACzC;IACA+B,IAAI,GAAG,aAAa,IAAIH,MAAM,GAAGA,MAAM,CAACK,WAAW,CAAC,CAAC,GAAGL,MAAM,CAACM,QAAQ;IACvEL,aAAa,CAAC7B,SAAS,CAAC,GAAG+B,IAAI;EACjC;EACA,OAAOA,IAAI;AACb;AAEA,SAASI,iBAAiBA,CAACC,SAAS,EAAE;EACpC;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA,IAAMC,MAAM,GAAGD,SAAS,CAACE,OAAO,CAAC,KAAK,CAAC;EACvC,IAAID,MAAM,KAAK,CAAC,CAAC,EAAE;IACjBD,SAAS,GAAGA,SAAS,CAACG,SAAS,CAAC,CAAC,EAAEF,MAAM,CAAC;EAC5C;EAEA,IAAMG,MAAM,GAAGJ,SAAS,CAACE,OAAO,CAAC,KAAK,CAAC;EACvC,IAAIE,MAAM,KAAK,CAAC,CAAC,EAAE;IACjB,OAAO,CAACJ,SAAS,CAAC;EACpB,CAAC,MAAM;IACL,IAAIK,OAAO;IACX,IAAIC,WAAW;IACf,IAAI;MACFD,OAAO,GAAG7B,YAAY,CAACwB,SAAS,CAAC,CAACT,eAAe,CAAC,CAAC;MACnDe,WAAW,GAAGN,SAAS;IACzB,CAAC,CAAC,OAAOO,CAAC,EAAE;MACV,IAAMC,OAAO,GAAGR,SAAS,CAACG,SAAS,CAAC,CAAC,EAAEC,MAAM,CAAC;MAC9CC,OAAO,GAAG7B,YAAY,CAACgC,OAAO,CAAC,CAACjB,eAAe,CAAC,CAAC;MACjDe,WAAW,GAAGE,OAAO;IACvB;IAEA,IAAAC,QAAA,GAAsCJ,OAAO;MAArCK,eAAe,GAAAD,QAAA,CAAfC,eAAe;MAAEC,QAAQ,GAAAF,QAAA,CAARE,QAAQ;IACjC,OAAO,CAACL,WAAW,EAAEI,eAAe,EAAEC,QAAQ,CAAC;EACjD;AACF;AAEA,SAASC,gBAAgBA,CAACZ,SAAS,EAAEU,eAAe,EAAEG,cAAc,EAAE;EACpE,IAAIA,cAAc,IAAIH,eAAe,EAAE;IACrC,IAAI,CAACV,SAAS,CAACc,QAAQ,CAAC,KAAK,CAAC,EAAE;MAC9Bd,SAAS,IAAI,IAAI;IACnB;IAEA,IAAIa,cAAc,EAAE;MAClBb,SAAS,WAAAe,MAAA,CAAWF,cAAc,CAAE;IACtC;IAEA,IAAIH,eAAe,EAAE;MACnBV,SAAS,WAAAe,MAAA,CAAWL,eAAe,CAAE;IACvC;IACA,OAAOV,SAAS;EAClB,CAAC,MAAM;IACL,OAAOA,SAAS;EAClB;AACF;AAEA,SAASgB,SAASA,CAACC,CAAC,EAAE;EACpB,IAAMC,EAAE,GAAG,EAAE;EACb,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,EAAE,EAAEA,CAAC,EAAE,EAAE;IAC5B,IAAMC,EAAE,GAAG5D,QAAQ,CAAC6D,GAAG,CAAC,IAAI,EAAEF,CAAC,EAAE,CAAC,CAAC;IACnCD,EAAE,CAACI,IAAI,CAACL,CAAC,CAACG,EAAE,CAAC,CAAC;EAChB;EACA,OAAOF,EAAE;AACX;AAEA,SAASK,WAAWA,CAACN,CAAC,EAAE;EACtB,IAAMC,EAAE,GAAG,EAAE;EACb,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;IAC3B,IAAMC,EAAE,GAAG5D,QAAQ,CAAC6D,GAAG,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,GAAGF,CAAC,CAAC;IACzCD,EAAE,CAACI,IAAI,CAACL,CAAC,CAACG,EAAE,CAAC,CAAC;EAChB;EACA,OAAOF,EAAE;AACX;AAEA,SAASM,SAASA,CAACC,GAAG,EAAE1D,MAAM,EAAE2D,SAAS,EAAEC,MAAM,EAAE;EACjD,IAAMC,IAAI,GAAGH,GAAG,CAACI,WAAW,CAAC,CAAC;EAE9B,IAAID,IAAI,KAAK,OAAO,EAAE;IACpB,OAAO,IAAI;EACb,CAAC,MAAM,IAAIA,IAAI,KAAK,IAAI,EAAE;IACxB,OAAOF,SAAS,CAAC3D,MAAM,CAAC;EAC1B,CAAC,MAAM;IACL,OAAO4D,MAAM,CAAC5D,MAAM,CAAC;EACvB;AACF;AAEA,SAAS+D,mBAAmBA,CAACL,GAAG,EAAE;EAChC,IAAIA,GAAG,CAACf,eAAe,IAAIe,GAAG,CAACf,eAAe,KAAK,MAAM,EAAE;IACzD,OAAO,KAAK;EACd,CAAC,MAAM;IACL,OACEe,GAAG,CAACf,eAAe,KAAK,MAAM,IAC9B,CAACe,GAAG,CAACjC,MAAM,IACXiC,GAAG,CAACjC,MAAM,CAACuC,UAAU,CAAC,IAAI,CAAC,IAC3B,IAAI1D,IAAI,CAACI,cAAc,CAACgD,GAAG,CAACO,IAAI,CAAC,CAACzC,eAAe,CAAC,CAAC,CAACmB,eAAe,KAAK,MAAM;EAElF;AACF;;AAEA;AACA;AACA;AAFA,IAIMuB,mBAAmB;EACvB,SAAAA,oBAAYD,IAAI,EAAEE,WAAW,EAAErE,IAAI,EAAE;IAAAsE,eAAA,OAAAF,mBAAA;IACnC,IAAI,CAACG,KAAK,GAAGvE,IAAI,CAACuE,KAAK,IAAI,CAAC;IAC5B,IAAI,CAACC,KAAK,GAAGxE,IAAI,CAACwE,KAAK,IAAI,KAAK;IAEhC,IAAQD,KAAK,GAA0BvE,IAAI,CAAnCuE,KAAK;MAAEC,KAAK,GAAmBxE,IAAI,CAA5BwE,KAAK;MAAKC,SAAS,GAAApD,wBAAA,CAAKrB,IAAI,EAAA0E,UAAA;IAE3C,IAAI,CAACL,WAAW,IAAIM,MAAM,CAACC,IAAI,CAACH,SAAS,CAAC,CAACvE,MAAM,GAAG,CAAC,EAAE;MACrD,IAAM2E,QAAQ,GAAAF,MAAA,CAAAG,MAAA;QAAKC,WAAW,EAAE;MAAK,GAAK/E,IAAI,CAAE;MAChD,IAAIA,IAAI,CAACuE,KAAK,GAAG,CAAC,EAAEM,QAAQ,CAACG,oBAAoB,GAAGhF,IAAI,CAACuE,KAAK;MAC9D,IAAI,CAACxD,GAAG,GAAGD,YAAY,CAACqD,IAAI,EAAEU,QAAQ,CAAC;IACzC;EACF;EAACI,YAAA,CAAAb,mBAAA;IAAAhE,GAAA;IAAA8E,KAAA,EAED,SAAAC,OAAO7B,CAAC,EAAE;MACR,IAAI,IAAI,CAACvC,GAAG,EAAE;QACZ,IAAMqE,KAAK,GAAG,IAAI,CAACZ,KAAK,GAAGa,IAAI,CAACb,KAAK,CAAClB,CAAC,CAAC,GAAGA,CAAC;QAC5C,OAAO,IAAI,CAACvC,GAAG,CAACoE,MAAM,CAACC,KAAK,CAAC;MAC/B,CAAC,MAAM;QACL;QACA,IAAMA,MAAK,GAAG,IAAI,CAACZ,KAAK,GAAGa,IAAI,CAACb,KAAK,CAAClB,CAAC,CAAC,GAAG/D,OAAO,CAAC+D,CAAC,EAAE,CAAC,CAAC;QACxD,OAAOhE,QAAQ,CAAC8F,MAAK,EAAE,IAAI,CAACb,KAAK,CAAC;MACpC;IACF;EAAC;EAAA,OAAAH,mBAAA;AAAA;AAGH;AACA;AACA;AAFA,IAIMkB,iBAAiB;EACrB,SAAAA,kBAAY/B,EAAE,EAAEY,IAAI,EAAEnE,IAAI,EAAE;IAAAsE,eAAA,OAAAgB,iBAAA;IAC1B,IAAI,CAACtF,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACuF,YAAY,GAAGpF,SAAS;IAE7B,IAAIqF,CAAC,GAAGrF,SAAS;IACjB,IAAI,IAAI,CAACH,IAAI,CAACyF,QAAQ,EAAE;MACtB;MACA,IAAI,CAAClC,EAAE,GAAGA,EAAE;IACd,CAAC,MAAM,IAAIA,EAAE,CAACmC,IAAI,CAACC,IAAI,KAAK,OAAO,EAAE;MACnC;MACA;MACA;MACA;MACA;MACA;MACA,IAAMC,SAAS,GAAG,CAAC,CAAC,IAAIrC,EAAE,CAACsC,MAAM,GAAG,EAAE,CAAC;MACvC,IAAMC,OAAO,GAAGF,SAAS,IAAI,CAAC,cAAA1C,MAAA,CAAc0C,SAAS,cAAA1C,MAAA,CAAe0C,SAAS,CAAE;MAC/E,IAAIrC,EAAE,CAACsC,MAAM,KAAK,CAAC,IAAIjG,QAAQ,CAACmG,MAAM,CAACD,OAAO,CAAC,CAACE,KAAK,EAAE;QACrDR,CAAC,GAAGM,OAAO;QACX,IAAI,CAACvC,EAAE,GAAGA,EAAE;MACd,CAAC,MAAM;QACL;QACA;QACAiC,CAAC,GAAG,KAAK;QACT,IAAI,CAACjC,EAAE,GAAGA,EAAE,CAACsC,MAAM,KAAK,CAAC,GAAGtC,EAAE,GAAGA,EAAE,CAAC0C,OAAO,CAAC,KAAK,CAAC,CAACC,IAAI,CAAC;UAAEC,OAAO,EAAE5C,EAAE,CAACsC;QAAO,CAAC,CAAC;QAC/E,IAAI,CAACN,YAAY,GAAGhC,EAAE,CAACmC,IAAI;MAC7B;IACF,CAAC,MAAM,IAAInC,EAAE,CAACmC,IAAI,CAACC,IAAI,KAAK,QAAQ,EAAE;MACpC,IAAI,CAACpC,EAAE,GAAGA,EAAE;IACd,CAAC,MAAM,IAAIA,EAAE,CAACmC,IAAI,CAACC,IAAI,KAAK,MAAM,EAAE;MAClC,IAAI,CAACpC,EAAE,GAAGA,EAAE;MACZiC,CAAC,GAAGjC,EAAE,CAACmC,IAAI,CAACU,IAAI;IAClB,CAAC,MAAM;MACL;MACA;MACAZ,CAAC,GAAG,KAAK;MACT,IAAI,CAACjC,EAAE,GAAGA,EAAE,CAAC0C,OAAO,CAAC,KAAK,CAAC,CAACC,IAAI,CAAC;QAAEC,OAAO,EAAE5C,EAAE,CAACsC;MAAO,CAAC,CAAC;MACxD,IAAI,CAACN,YAAY,GAAGhC,EAAE,CAACmC,IAAI;IAC7B;IAEA,IAAMb,QAAQ,GAAAF,MAAA,CAAAG,MAAA,KAAQ,IAAI,CAAC9E,IAAI,CAAE;IACjC6E,QAAQ,CAACY,QAAQ,GAAGZ,QAAQ,CAACY,QAAQ,IAAID,CAAC;IAC1C,IAAI,CAACjF,GAAG,GAAGI,YAAY,CAACwD,IAAI,EAAEU,QAAQ,CAAC;EACzC;EAACI,YAAA,CAAAK,iBAAA;IAAAlF,GAAA;IAAA8E,KAAA,EAED,SAAAC,OAAA,EAAS;MACP,IAAI,IAAI,CAACI,YAAY,EAAE;QACrB;QACA;QACA,OAAO,IAAI,CAACc,aAAa,CAAC,CAAC,CACxBC,GAAG,CAAC,UAAAC,IAAA;UAAA,IAAGrB,KAAK,GAAAqB,IAAA,CAALrB,KAAK;UAAA,OAAOA,KAAK;QAAA,EAAC,CACzBsB,IAAI,CAAC,EAAE,CAAC;MACb;MACA,OAAO,IAAI,CAACjG,GAAG,CAAC4E,MAAM,CAAC,IAAI,CAAC5B,EAAE,CAACkD,QAAQ,CAAC,CAAC,CAAC;IAC5C;EAAC;IAAArG,GAAA;IAAA8E,KAAA,EAED,SAAAmB,cAAA,EAAgB;MAAA,IAAAK,KAAA;MACd,IAAMC,KAAK,GAAG,IAAI,CAACpG,GAAG,CAAC8F,aAAa,CAAC,IAAI,CAAC9C,EAAE,CAACkD,QAAQ,CAAC,CAAC,CAAC;MACxD,IAAI,IAAI,CAAClB,YAAY,EAAE;QACrB,OAAOoB,KAAK,CAACL,GAAG,CAAC,UAACM,IAAI,EAAK;UACzB,IAAIA,IAAI,CAACjB,IAAI,KAAK,cAAc,EAAE;YAChC,IAAMkB,UAAU,GAAGH,KAAI,CAACnB,YAAY,CAACsB,UAAU,CAACH,KAAI,CAACnD,EAAE,CAACuD,EAAE,EAAE;cAC1DnF,MAAM,EAAE+E,KAAI,CAACnD,EAAE,CAAC5B,MAAM;cACtBwD,MAAM,EAAEuB,KAAI,CAAC1G,IAAI,CAAC+G;YACpB,CAAC,CAAC;YACF,OAAApC,MAAA,CAAAG,MAAA,CAAAH,MAAA,CAAAG,MAAA,KACK8B,IAAI;cACP1B,KAAK,EAAE2B;YAAU;UAErB,CAAC,MAAM;YACL,OAAOD,IAAI;UACb;QACF,CAAC,CAAC;MACJ;MACA,OAAOD,KAAK;IACd;EAAC;IAAAvG,GAAA;IAAA8E,KAAA,EAED,SAAAxD,gBAAA,EAAkB;MAChB,OAAO,IAAI,CAACnB,GAAG,CAACmB,eAAe,CAAC,CAAC;IACnC;EAAC;EAAA,OAAA4D,iBAAA;AAAA;AAGH;AACA;AACA;AAFA,IAGM0B,gBAAgB;EACpB,SAAAA,iBAAY7C,IAAI,EAAE8C,SAAS,EAAEjH,IAAI,EAAE;IAAAsE,eAAA,OAAA0C,gBAAA;IACjC,IAAI,CAAChH,IAAI,GAAA2E,MAAA,CAAAG,MAAA;MAAKoC,KAAK,EAAE;IAAM,GAAKlH,IAAI,CAAE;IACtC,IAAI,CAACiH,SAAS,IAAI5H,WAAW,CAAC,CAAC,EAAE;MAC/B,IAAI,CAAC8H,GAAG,GAAGjG,YAAY,CAACiD,IAAI,EAAEnE,IAAI,CAAC;IACrC;EACF;EAACiF,YAAA,CAAA+B,gBAAA;IAAA5G,GAAA;IAAA8E,KAAA,EAED,SAAAC,OAAOiC,KAAK,EAAEC,IAAI,EAAE;MAClB,IAAI,IAAI,CAACF,GAAG,EAAE;QACZ,OAAO,IAAI,CAACA,GAAG,CAAChC,MAAM,CAACiC,KAAK,EAAEC,IAAI,CAAC;MACrC,CAAC,MAAM;QACL,OAAO5H,OAAO,CAAC6H,kBAAkB,CAACD,IAAI,EAAED,KAAK,EAAE,IAAI,CAACpH,IAAI,CAACuH,OAAO,EAAE,IAAI,CAACvH,IAAI,CAACkH,KAAK,KAAK,MAAM,CAAC;MAC/F;IACF;EAAC;IAAA9G,GAAA;IAAA8E,KAAA,EAED,SAAAmB,cAAce,KAAK,EAAEC,IAAI,EAAE;MACzB,IAAI,IAAI,CAACF,GAAG,EAAE;QACZ,OAAO,IAAI,CAACA,GAAG,CAACd,aAAa,CAACe,KAAK,EAAEC,IAAI,CAAC;MAC5C,CAAC,MAAM;QACL,OAAO,EAAE;MACX;IACF;EAAC;EAAA,OAAAL,gBAAA;AAAA;AAGH,IAAMQ,oBAAoB,GAAG;EAC3BC,QAAQ,EAAE,CAAC;EACXC,WAAW,EAAE,CAAC;EACdC,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC;AAChB,CAAC;;AAED;AACA;AACA;AAFA,IAIqB5F,MAAM;EAgCzB,SAAAA,OAAYJ,MAAM,EAAEiG,SAAS,EAAE5E,cAAc,EAAE6E,YAAY,EAAEC,eAAe,EAAE;IAAAxD,eAAA,OAAAvC,MAAA;IAC5E,IAAAgG,kBAAA,GAAoE7F,iBAAiB,CAACP,MAAM,CAAC;MAAAqG,mBAAA,GAAAC,cAAA,CAAAF,kBAAA;MAAtFG,YAAY,GAAAF,mBAAA;MAAEG,qBAAqB,GAAAH,mBAAA;MAAEI,oBAAoB,GAAAJ,mBAAA;IAEhE,IAAI,CAACrG,MAAM,GAAGuG,YAAY;IAC1B,IAAI,CAACrF,eAAe,GAAG+E,SAAS,IAAIO,qBAAqB,IAAI,IAAI;IACjE,IAAI,CAACnF,cAAc,GAAGA,cAAc,IAAIoF,oBAAoB,IAAI,IAAI;IACpE,IAAI,CAACP,YAAY,GAAGA,YAAY;IAChC,IAAI,CAAC1D,IAAI,GAAGpB,gBAAgB,CAAC,IAAI,CAACpB,MAAM,EAAE,IAAI,CAACkB,eAAe,EAAE,IAAI,CAACG,cAAc,CAAC;IAEpF,IAAI,CAACqF,aAAa,GAAG;MAAElD,MAAM,EAAE,CAAC,CAAC;MAAEmD,UAAU,EAAE,CAAC;IAAE,CAAC;IACnD,IAAI,CAACC,WAAW,GAAG;MAAEpD,MAAM,EAAE,CAAC,CAAC;MAAEmD,UAAU,EAAE,CAAC;IAAE,CAAC;IACjD,IAAI,CAACE,aAAa,GAAG,IAAI;IACzB,IAAI,CAACC,QAAQ,GAAG,CAAC,CAAC;IAElB,IAAI,CAACX,eAAe,GAAGA,eAAe;IACtC,IAAI,CAACY,iBAAiB,GAAG,IAAI;EAC/B;EAACzD,YAAA,CAAAlD,MAAA;IAAA3B,GAAA;IAAAuI,GAAA,EAED,SAAAA,IAAA,EAAkB;MAChB,IAAI,IAAI,CAACD,iBAAiB,IAAI,IAAI,EAAE;QAClC,IAAI,CAACA,iBAAiB,GAAGzE,mBAAmB,CAAC,IAAI,CAAC;MACpD;MAEA,OAAO,IAAI,CAACyE,iBAAiB;IAC/B;EAAC;IAAAtI,GAAA;IAAA8E,KAAA,EAED,SAAAlB,YAAA,EAAc;MACZ,IAAM4E,YAAY,GAAG,IAAI,CAAC3B,SAAS,CAAC,CAAC;MACrC,IAAM4B,cAAc,GAClB,CAAC,IAAI,CAAChG,eAAe,KAAK,IAAI,IAAI,IAAI,CAACA,eAAe,KAAK,MAAM,MAChE,IAAI,CAACG,cAAc,KAAK,IAAI,IAAI,IAAI,CAACA,cAAc,KAAK,SAAS,CAAC;MACrE,OAAO4F,YAAY,IAAIC,cAAc,GAAG,IAAI,GAAG,MAAM;IACvD;EAAC;IAAAzI,GAAA;IAAA8E,KAAA,EAED,SAAA4D,MAAMC,IAAI,EAAE;MACV,IAAI,CAACA,IAAI,IAAIpE,MAAM,CAACqE,mBAAmB,CAACD,IAAI,CAAC,CAAC7I,MAAM,KAAK,CAAC,EAAE;QAC1D,OAAO,IAAI;MACb,CAAC,MAAM;QACL,OAAO6B,MAAM,CAACgE,MAAM,CAClBgD,IAAI,CAACpH,MAAM,IAAI,IAAI,CAACmG,eAAe,EACnCiB,IAAI,CAAClG,eAAe,IAAI,IAAI,CAACA,eAAe,EAC5CkG,IAAI,CAAC/F,cAAc,IAAI,IAAI,CAACA,cAAc,EAC1CxD,oBAAoB,CAACuJ,IAAI,CAAClB,YAAY,CAAC,IAAI,IAAI,CAACA,YAAY,EAC5DkB,IAAI,CAACE,WAAW,IAAI,KACtB,CAAC;MACH;IACF;EAAC;IAAA7I,GAAA;IAAA8E,KAAA,EAED,SAAAgE,cAAA,EAAyB;MAAA,IAAXH,IAAI,GAAA9I,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;MACrB,OAAO,IAAI,CAAC6I,KAAK,CAAAnE,MAAA,CAAAG,MAAA,CAAAH,MAAA,CAAAG,MAAA,KAAMiE,IAAI;QAAEE,WAAW,EAAE;MAAI,EAAE,CAAC;IACnD;EAAC;IAAA7I,GAAA;IAAA8E,KAAA,EAED,SAAAiE,kBAAA,EAA6B;MAAA,IAAXJ,IAAI,GAAA9I,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;MACzB,OAAO,IAAI,CAAC6I,KAAK,CAAAnE,MAAA,CAAAG,MAAA,CAAAH,MAAA,CAAAG,MAAA,KAAMiE,IAAI;QAAEE,WAAW,EAAE;MAAK,EAAE,CAAC;IACpD;EAAC;IAAA7I,GAAA;IAAA8E,KAAA,EAED,SAAAkE,OAAOlJ,MAAM,EAAkB;MAAA,IAAAmJ,MAAA;MAAA,IAAhBlE,MAAM,GAAAlF,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,KAAK;MAC3B,OAAO0D,SAAS,CAAC,IAAI,EAAEzD,MAAM,EAAET,OAAO,CAAC2J,MAAM,EAAE,YAAM;QACnD,IAAMjF,IAAI,GAAGgB,MAAM,GAAG;YAAEmE,KAAK,EAAEpJ,MAAM;YAAEqJ,GAAG,EAAE;UAAU,CAAC,GAAG;YAAED,KAAK,EAAEpJ;UAAO,CAAC;UACzEsJ,SAAS,GAAGrE,MAAM,GAAG,QAAQ,GAAG,YAAY;QAC9C,IAAI,CAACkE,MAAI,CAACd,WAAW,CAACiB,SAAS,CAAC,CAACtJ,MAAM,CAAC,EAAE;UACxCmJ,MAAI,CAACd,WAAW,CAACiB,SAAS,CAAC,CAACtJ,MAAM,CAAC,GAAGiD,SAAS,CAAC,UAACI,EAAE;YAAA,OAAK8F,MAAI,CAACI,OAAO,CAAClG,EAAE,EAAEY,IAAI,EAAE,OAAO,CAAC;UAAA,EAAC;QAC1F;QACA,OAAOkF,MAAI,CAACd,WAAW,CAACiB,SAAS,CAAC,CAACtJ,MAAM,CAAC;MAC5C,CAAC,CAAC;IACJ;EAAC;IAAAE,GAAA;IAAA8E,KAAA,EAED,SAAAwE,SAASxJ,MAAM,EAAkB;MAAA,IAAAyJ,MAAA;MAAA,IAAhBxE,MAAM,GAAAlF,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,KAAK;MAC7B,OAAO0D,SAAS,CAAC,IAAI,EAAEzD,MAAM,EAAET,OAAO,CAACiK,QAAQ,EAAE,YAAM;QACrD,IAAMvF,IAAI,GAAGgB,MAAM,GACb;YAAEyE,OAAO,EAAE1J,MAAM;YAAE2J,IAAI,EAAE,SAAS;YAAEP,KAAK,EAAE,MAAM;YAAEC,GAAG,EAAE;UAAU,CAAC,GACnE;YAAEK,OAAO,EAAE1J;UAAO,CAAC;UACvBsJ,SAAS,GAAGrE,MAAM,GAAG,QAAQ,GAAG,YAAY;QAC9C,IAAI,CAACwE,MAAI,CAACtB,aAAa,CAACmB,SAAS,CAAC,CAACtJ,MAAM,CAAC,EAAE;UAC1CyJ,MAAI,CAACtB,aAAa,CAACmB,SAAS,CAAC,CAACtJ,MAAM,CAAC,GAAGwD,WAAW,CAAC,UAACH,EAAE;YAAA,OACrDoG,MAAI,CAACF,OAAO,CAAClG,EAAE,EAAEY,IAAI,EAAE,SAAS,CAAC;UAAA,CACnC,CAAC;QACH;QACA,OAAOwF,MAAI,CAACtB,aAAa,CAACmB,SAAS,CAAC,CAACtJ,MAAM,CAAC;MAC9C,CAAC,CAAC;IACJ;EAAC;IAAAE,GAAA;IAAA8E,KAAA,EAED,SAAA4E,UAAA,EAAY;MAAA,IAAAC,MAAA;MACV,OAAOpG,SAAS,CACd,IAAI,EACJxD,SAAS,EACT;QAAA,OAAMV,OAAO,CAACqK,SAAS;MAAA,GACvB,YAAM;QACJ;QACA;QACA,IAAI,CAACC,MAAI,CAACvB,aAAa,EAAE;UACvB,IAAMrE,IAAI,GAAG;YAAE6F,IAAI,EAAE,SAAS;YAAEC,SAAS,EAAE;UAAM,CAAC;UAClDF,MAAI,CAACvB,aAAa,GAAG,CAAC7I,QAAQ,CAAC6D,GAAG,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE7D,QAAQ,CAAC6D,GAAG,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC8C,GAAG,CACtF,UAAC/C,EAAE;YAAA,OAAKwG,MAAI,CAACN,OAAO,CAAClG,EAAE,EAAEY,IAAI,EAAE,WAAW,CAAC;UAAA,CAC7C,CAAC;QACH;QAEA,OAAO4F,MAAI,CAACvB,aAAa;MAC3B,CACF,CAAC;IACH;EAAC;IAAApI,GAAA;IAAA8E,KAAA,EAED,SAAAgF,KAAKhK,MAAM,EAAE;MAAA,IAAAiK,MAAA;MACX,OAAOxG,SAAS,CAAC,IAAI,EAAEzD,MAAM,EAAET,OAAO,CAACyK,IAAI,EAAE,YAAM;QACjD,IAAM/F,IAAI,GAAG;UAAEiG,GAAG,EAAElK;QAAO,CAAC;;QAE5B;QACA;QACA,IAAI,CAACiK,MAAI,CAAC1B,QAAQ,CAACvI,MAAM,CAAC,EAAE;UAC1BiK,MAAI,CAAC1B,QAAQ,CAACvI,MAAM,CAAC,GAAG,CAACP,QAAQ,CAAC6D,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE7D,QAAQ,CAAC6D,GAAG,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC8C,GAAG,CAAC,UAAC/C,EAAE;YAAA,OACjF4G,MAAI,CAACV,OAAO,CAAClG,EAAE,EAAEY,IAAI,EAAE,KAAK,CAAC;UAAA,CAC/B,CAAC;QACH;QAEA,OAAOgG,MAAI,CAAC1B,QAAQ,CAACvI,MAAM,CAAC;MAC9B,CAAC,CAAC;IACJ;EAAC;IAAAE,GAAA;IAAA8E,KAAA,EAED,SAAAuE,QAAQlG,EAAE,EAAEsB,QAAQ,EAAEwF,KAAK,EAAE;MAC3B,IAAMC,EAAE,GAAG,IAAI,CAACC,WAAW,CAAChH,EAAE,EAAEsB,QAAQ,CAAC;QACvC2F,OAAO,GAAGF,EAAE,CAACjE,aAAa,CAAC,CAAC;QAC5BoE,QAAQ,GAAGD,OAAO,CAACE,IAAI,CAAC,UAACC,CAAC;UAAA,OAAKA,CAAC,CAAChF,IAAI,CAACiF,WAAW,CAAC,CAAC,KAAKP,KAAK;QAAA,EAAC;MAChE,OAAOI,QAAQ,GAAGA,QAAQ,CAACvF,KAAK,GAAG,IAAI;IACzC;EAAC;IAAA9E,GAAA;IAAA8E,KAAA,EAED,SAAA2F,gBAAA,EAA2B;MAAA,IAAX7K,IAAI,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;MACvB;MACA;MACA,OAAO,IAAImE,mBAAmB,CAAC,IAAI,CAACD,IAAI,EAAEnE,IAAI,CAACqE,WAAW,IAAI,IAAI,CAACyG,WAAW,EAAE9K,IAAI,CAAC;IACvF;EAAC;IAAAI,GAAA;IAAA8E,KAAA,EAED,SAAAqF,YAAYhH,EAAE,EAAiB;MAAA,IAAfsB,QAAQ,GAAA5E,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;MAC3B,OAAO,IAAIqF,iBAAiB,CAAC/B,EAAE,EAAE,IAAI,CAACY,IAAI,EAAEU,QAAQ,CAAC;IACvD;EAAC;IAAAzE,GAAA;IAAA8E,KAAA,EAED,SAAA6F,aAAA,EAAwB;MAAA,IAAX/K,IAAI,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;MACpB,OAAO,IAAI+G,gBAAgB,CAAC,IAAI,CAAC7C,IAAI,EAAE,IAAI,CAAC8C,SAAS,CAAC,CAAC,EAAEjH,IAAI,CAAC;IAChE;EAAC;IAAAI,GAAA;IAAA8E,KAAA,EAED,SAAA8F,cAAA,EAAyB;MAAA,IAAXhL,IAAI,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;MACrB,OAAOH,WAAW,CAAC,IAAI,CAACqE,IAAI,EAAEnE,IAAI,CAAC;IACrC;EAAC;IAAAI,GAAA;IAAA8E,KAAA,EAED,SAAA+B,UAAA,EAAY;MACV,OACE,IAAI,CAACtF,MAAM,KAAK,IAAI,IACpB,IAAI,CAACA,MAAM,CAACiJ,WAAW,CAAC,CAAC,KAAK,OAAO,IACrC,IAAIpK,IAAI,CAACI,cAAc,CAAC,IAAI,CAACuD,IAAI,CAAC,CAACzC,eAAe,CAAC,CAAC,CAACC,MAAM,CAACuC,UAAU,CAAC,OAAO,CAAC;IAEnF;EAAC;IAAA9D,GAAA;IAAA8E,KAAA,EAED,SAAA+F,gBAAA,EAAkB;MAChB,IAAI,IAAI,CAACpD,YAAY,EAAE;QACrB,OAAO,IAAI,CAACA,YAAY;MAC1B,CAAC,MAAM,IAAI,CAACzI,iBAAiB,CAAC,CAAC,EAAE;QAC/B,OAAOoI,oBAAoB;MAC7B,CAAC,MAAM;QACL,OAAO3F,iBAAiB,CAAC,IAAI,CAACF,MAAM,CAAC;MACvC;IACF;EAAC;IAAAvB,GAAA;IAAA8E,KAAA,EAED,SAAAgG,eAAA,EAAiB;MACf,OAAO,IAAI,CAACD,eAAe,CAAC,CAAC,CAACxD,QAAQ;IACxC;EAAC;IAAArH,GAAA;IAAA8E,KAAA,EAED,SAAAiG,sBAAA,EAAwB;MACtB,OAAO,IAAI,CAACF,eAAe,CAAC,CAAC,CAACvD,WAAW;IAC3C;EAAC;IAAAtH,GAAA;IAAA8E,KAAA,EAED,SAAAkG,eAAA,EAAiB;MACf,OAAO,IAAI,CAACH,eAAe,CAAC,CAAC,CAACtD,OAAO;IACvC;EAAC;IAAAvH,GAAA;IAAA8E,KAAA,EAED,SAAAmG,OAAOC,KAAK,EAAE;MACZ,OACE,IAAI,CAAC3J,MAAM,KAAK2J,KAAK,CAAC3J,MAAM,IAC5B,IAAI,CAACkB,eAAe,KAAKyI,KAAK,CAACzI,eAAe,IAC9C,IAAI,CAACG,cAAc,KAAKsI,KAAK,CAACtI,cAAc;IAEhD;EAAC;IAAA5C,GAAA;IAAA8E,KAAA,EAlND,SAAAqG,SAAgBvL,IAAI,EAAE;MACpB,OAAO+B,MAAM,CAACgE,MAAM,CAClB/F,IAAI,CAAC2B,MAAM,EACX3B,IAAI,CAAC6C,eAAe,EACpB7C,IAAI,CAACgD,cAAc,EACnBhD,IAAI,CAAC6H,YAAY,EACjB7H,IAAI,CAACiJ,WACP,CAAC;IACH;EAAC;IAAA7I,GAAA;IAAA8E,KAAA,EAED,SAAAa,OAAcpE,MAAM,EAAEkB,eAAe,EAAEG,cAAc,EAAE6E,YAAY,EAAuB;MAAA,IAArBoB,WAAW,GAAAhJ,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,KAAK;MACtF,IAAM6H,eAAe,GAAGnG,MAAM,IAAIjC,QAAQ,CAAC8L,aAAa;MACxD;MACA,IAAMC,OAAO,GAAG3D,eAAe,KAAKmB,WAAW,GAAG,OAAO,GAAGxH,YAAY,CAAC,CAAC,CAAC;MAC3E,IAAMiK,gBAAgB,GAAG7I,eAAe,IAAInD,QAAQ,CAACiM,sBAAsB;MAC3E,IAAMC,eAAe,GAAG5I,cAAc,IAAItD,QAAQ,CAACmM,qBAAqB;MACxE,IAAMC,aAAa,GAAGtM,oBAAoB,CAACqI,YAAY,CAAC,IAAInI,QAAQ,CAACqM,mBAAmB;MACxF,OAAO,IAAIhK,MAAM,CAAC0J,OAAO,EAAEC,gBAAgB,EAAEE,eAAe,EAAEE,aAAa,EAAEhE,eAAe,CAAC;IAC/F;EAAC;IAAA1H,GAAA;IAAA8E,KAAA,EAED,SAAA8G,WAAA,EAAoB;MAClBxK,cAAc,GAAG,IAAI;MACrBd,WAAW,GAAG,CAAC,CAAC;MAChBG,YAAY,GAAG,CAAC,CAAC;MACjBI,YAAY,GAAG,CAAC,CAAC;IACnB;EAAC;IAAAb,GAAA;IAAA8E,KAAA,EAED,SAAA+G,WAAA,EAAkF;MAAA,IAAAC,KAAA,GAAAjM,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAJ,CAAC,CAAC;QAA5D0B,MAAM,GAAAuK,KAAA,CAANvK,MAAM;QAAEkB,eAAe,GAAAqJ,KAAA,CAAfrJ,eAAe;QAAEG,cAAc,GAAAkJ,KAAA,CAAdlJ,cAAc;QAAE6E,YAAY,GAAAqE,KAAA,CAAZrE,YAAY;MACvE,OAAO9F,MAAM,CAACgE,MAAM,CAACpE,MAAM,EAAEkB,eAAe,EAAEG,cAAc,EAAE6E,YAAY,CAAC;IAC7E;EAAC;EAAA,OAAA9F,MAAA;AAAA;AAAA,SA9BkBA,MAAM,IAAAoK,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}