{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport { css, html, LitElement } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { styleMap } from \"lit/directives/style-map\";\nimport { hsv2rgb, rgb2hex, rgb2hsv } from \"../../common/color/convert-color\";\nimport { stateActive } from \"../../common/entity/state_active\";\nimport { stateColorCss } from \"../../common/entity/state_color\";\nimport \"../../components/ha-control-slider\";\nimport { UNAVAILABLE } from \"../../data/entity\";\nexport let HaStateControlLightBrightness = _decorate([customElement(\"ha-state-control-light-brightness\")], function (_initialize, _LitElement) {\n  class HaStateControlLightBrightness extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaStateControlLightBrightness,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"stateObj\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"value\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"updated\",\n      value: function updated(changedProp) {\n        if (changedProp.has(\"stateObj\")) {\n          this.value = this.stateObj.attributes.brightness != null ? Math.max(Math.round(this.stateObj.attributes.brightness * 100 / 255), 1) : undefined;\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_valueChanged\",\n      value: function _valueChanged(ev) {\n        const value = ev.detail.value;\n        if (isNaN(value)) return;\n        this.hass.callService(\"light\", \"turn_on\", {\n          entity_id: this.stateObj.entity_id,\n          brightness_pct: value\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        let color = stateColorCss(this.stateObj);\n        if (this.stateObj.attributes.rgb_color) {\n          const hsvColor = rgb2hsv(this.stateObj.attributes.rgb_color);\n\n          // Modify the real rgb color for better contrast\n          if (hsvColor[1] < 0.4) {\n            // Special case for very light color (e.g: white)\n            if (hsvColor[1] < 0.1) {\n              hsvColor[2] = 225;\n            } else {\n              hsvColor[1] = 0.4;\n            }\n          }\n          color = rgb2hex(hsv2rgb(hsvColor));\n        }\n        return html`\n      <ha-control-slider\n        vertical\n        .value=${this.value}\n        min=\"1\"\n        max=\"100\"\n        .showHandle=${stateActive(this.stateObj)}\n        @value-changed=${this._valueChanged}\n        .ariaLabel=${this.hass.formatEntityAttributeName(this.stateObj, \"brightness\")}\n        style=${styleMap({\n          \"--control-slider-color\": color,\n          \"--control-slider-background\": color\n        })}\n        .disabled=${this.stateObj.state === UNAVAILABLE}\n        unit=\"%\"\n        .locale=${this.hass.locale}\n      >\n      </ha-control-slider>\n    `;\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css`\n      ha-control-slider {\n        height: 45vh;\n        max-height: 320px;\n        min-height: 200px;\n        --control-slider-thickness: 100px;\n        --control-slider-border-radius: 24px;\n        --control-slider-color: var(--primary-color);\n        --control-slider-background: var(--disabled-color);\n        --control-slider-background-opacity: 0.2;\n        --control-slider-tooltip-font-size: 20px;\n      }\n    `;\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","customElement","property","state","styleMap","hsv2rgb","rgb2hex","rgb2hsv","stateActive","stateColorCss","UNAVAILABLE","HaStateControlLightBrightness","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","updated","changedProp","has","stateObj","attributes","brightness","Math","max","round","undefined","_valueChanged","ev","detail","isNaN","hass","callService","entity_id","brightness_pct","render","color","rgb_color","hsvColor","formatEntityAttributeName","locale","static","styles"],"sources":["/workspaces/frontend/src/state-control/light/ha-state-control-light-brightness.ts"],"sourcesContent":["import { css, CSSResultGroup, html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { styleMap } from \"lit/directives/style-map\";\nimport { hsv2rgb, rgb2hex, rgb2hsv } from \"../../common/color/convert-color\";\nimport { stateActive } from \"../../common/entity/state_active\";\nimport { stateColorCss } from \"../../common/entity/state_color\";\nimport \"../../components/ha-control-slider\";\nimport { UNAVAILABLE } from \"../../data/entity\";\nimport { LightEntity } from \"../../data/light\";\nimport { HomeAssistant } from \"../../types\";\n\n@customElement(\"ha-state-control-light-brightness\")\nexport class HaStateControlLightBrightness extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public stateObj!: LightEntity;\n\n  @state() value?: number;\n\n  protected updated(changedProp: Map<string | number | symbol, unknown>): void {\n    if (changedProp.has(\"stateObj\")) {\n      this.value =\n        this.stateObj.attributes.brightness != null\n          ? Math.max(\n              Math.round((this.stateObj.attributes.brightness * 100) / 255),\n              1\n            )\n          : undefined;\n    }\n  }\n\n  private _valueChanged(ev: CustomEvent) {\n    const value = (ev.detail as any).value;\n    if (isNaN(value)) return;\n\n    this.hass.callService(\"light\", \"turn_on\", {\n      entity_id: this.stateObj!.entity_id,\n      brightness_pct: value,\n    });\n  }\n\n  protected render(): TemplateResult {\n    let color = stateColorCss(this.stateObj);\n\n    if (this.stateObj.attributes.rgb_color) {\n      const hsvColor = rgb2hsv(this.stateObj.attributes.rgb_color);\n\n      // Modify the real rgb color for better contrast\n      if (hsvColor[1] < 0.4) {\n        // Special case for very light color (e.g: white)\n        if (hsvColor[1] < 0.1) {\n          hsvColor[2] = 225;\n        } else {\n          hsvColor[1] = 0.4;\n        }\n      }\n      color = rgb2hex(hsv2rgb(hsvColor));\n    }\n\n    return html`\n      <ha-control-slider\n        vertical\n        .value=${this.value}\n        min=\"1\"\n        max=\"100\"\n        .showHandle=${stateActive(this.stateObj)}\n        @value-changed=${this._valueChanged}\n        .ariaLabel=${this.hass.formatEntityAttributeName(\n          this.stateObj,\n          \"brightness\"\n        )}\n        style=${styleMap({\n          \"--control-slider-color\": color,\n          \"--control-slider-background\": color,\n        })}\n        .disabled=${this.stateObj.state === UNAVAILABLE}\n        unit=\"%\"\n        .locale=${this.hass.locale}\n      >\n      </ha-control-slider>\n    `;\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      ha-control-slider {\n        height: 45vh;\n        max-height: 320px;\n        min-height: 200px;\n        --control-slider-thickness: 100px;\n        --control-slider-border-radius: 24px;\n        --control-slider-color: var(--primary-color);\n        --control-slider-background: var(--disabled-color);\n        --control-slider-background-opacity: 0.2;\n        --control-slider-tooltip-font-size: 20px;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-state-control-light-brightness\": HaStateControlLightBrightness;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}