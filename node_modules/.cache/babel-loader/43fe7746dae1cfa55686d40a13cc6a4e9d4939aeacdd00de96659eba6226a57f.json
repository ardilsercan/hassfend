{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/helpers/regeneratorRuntime\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _createForOfIteratorHelper from \"@babel/runtime/helpers/createForOfIteratorHelper\";\nimport \"core-js/modules/es.object.assign.js\";\nimport { getCollection } from \"./collection.js\";\nimport { getStates } from \"./commands.js\";\nimport { atLeastHaVersion } from \"./util.js\";\nfunction processEvent(store, updates) {\n  var state = Object.assign({}, store.state);\n  if (updates.a) {\n    for (var entityId in updates.a) {\n      var newState = updates.a[entityId];\n      var last_changed = new Date(newState.lc * 1000).toISOString();\n      state[entityId] = {\n        entity_id: entityId,\n        state: newState.s,\n        attributes: newState.a,\n        context: typeof newState.c === \"string\" ? {\n          id: newState.c,\n          parent_id: null,\n          user_id: null\n        } : newState.c,\n        last_changed: last_changed,\n        last_updated: newState.lu ? new Date(newState.lu * 1000).toISOString() : last_changed\n      };\n    }\n  }\n  if (updates.r) {\n    var _iterator = _createForOfIteratorHelper(updates.r),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var _entityId = _step.value;\n        delete state[_entityId];\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  if (updates.c) {\n    for (var _entityId2 in updates.c) {\n      var entityState = state[_entityId2];\n      if (!entityState) {\n        console.warn(\"Received state update for unknown entity\", _entityId2);\n        continue;\n      }\n      entityState = Object.assign({}, entityState);\n      var _updates$c$_entityId = updates.c[_entityId2],\n        toAdd = _updates$c$_entityId[\"+\"],\n        toRemove = _updates$c$_entityId[\"-\"];\n      var attributesChanged = (toAdd === null || toAdd === void 0 ? void 0 : toAdd.a) || (toRemove === null || toRemove === void 0 ? void 0 : toRemove.a);\n      var attributes = attributesChanged ? Object.assign({}, entityState.attributes) : entityState.attributes;\n      if (toAdd) {\n        if (toAdd.s !== undefined) {\n          entityState.state = toAdd.s;\n        }\n        if (toAdd.c) {\n          if (typeof toAdd.c === \"string\") {\n            entityState.context = Object.assign(Object.assign({}, entityState.context), {\n              id: toAdd.c\n            });\n          } else {\n            entityState.context = Object.assign(Object.assign({}, entityState.context), toAdd.c);\n          }\n        }\n        if (toAdd.lc) {\n          entityState.last_updated = entityState.last_changed = new Date(toAdd.lc * 1000).toISOString();\n        } else if (toAdd.lu) {\n          entityState.last_updated = new Date(toAdd.lu * 1000).toISOString();\n        }\n        if (toAdd.a) {\n          Object.assign(attributes, toAdd.a);\n        }\n      }\n      if (toRemove === null || toRemove === void 0 ? void 0 : toRemove.a) {\n        var _iterator2 = _createForOfIteratorHelper(toRemove.a),\n          _step2;\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var key = _step2.value;\n            delete attributes[key];\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      }\n      if (attributesChanged) {\n        entityState.attributes = attributes;\n      }\n      state[_entityId2] = entityState;\n    }\n  }\n  store.setState(state, true);\n}\nvar subscribeUpdates = function subscribeUpdates(conn, store) {\n  return conn.subscribeMessage(function (ev) {\n    return processEvent(store, ev);\n  }, {\n    type: \"subscribe_entities\"\n  });\n};\nfunction legacyProcessEvent(store, event) {\n  var state = store.state;\n  if (state === undefined) return;\n  var _event$data = event.data,\n    entity_id = _event$data.entity_id,\n    new_state = _event$data.new_state;\n  if (new_state) {\n    store.setState(_defineProperty({}, new_state.entity_id, new_state));\n  } else {\n    var newEntities = Object.assign({}, state);\n    delete newEntities[entity_id];\n    store.setState(newEntities, true);\n  }\n}\nfunction legacyFetchEntities(_x) {\n  return _legacyFetchEntities.apply(this, arguments);\n}\nfunction _legacyFetchEntities() {\n  _legacyFetchEntities = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(conn) {\n    var states, entities, i, state;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return getStates(conn);\n        case 2:\n          states = _context.sent;\n          entities = {};\n          for (i = 0; i < states.length; i++) {\n            state = states[i];\n            entities[state.entity_id] = state;\n          }\n          return _context.abrupt(\"return\", entities);\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _legacyFetchEntities.apply(this, arguments);\n}\nvar legacySubscribeUpdates = function legacySubscribeUpdates(conn, store) {\n  return conn.subscribeEvents(function (ev) {\n    return legacyProcessEvent(store, ev);\n  }, \"state_changed\");\n};\nexport var entitiesColl = function entitiesColl(conn) {\n  return atLeastHaVersion(conn.haVersion, 2022, 4, 0) ? getCollection(conn, \"_ent\", undefined, subscribeUpdates) : getCollection(conn, \"_ent\", legacyFetchEntities, legacySubscribeUpdates);\n};\nexport var subscribeEntities = function subscribeEntities(conn, onChange) {\n  return entitiesColl(conn).subscribe(onChange);\n};","map":{"version":3,"names":["getCollection","getStates","atLeastHaVersion","processEvent","store","updates","state","Object","assign","a","entityId","newState","last_changed","Date","lc","toISOString","entity_id","s","attributes","context","c","id","parent_id","user_id","last_updated","lu","r","_iterator","_createForOfIteratorHelper","_step","n","done","value","err","e","f","entityState","console","warn","_updates$c$_entityId","toAdd","toRemove","attributesChanged","undefined","_iterator2","_step2","key","setState","subscribeUpdates","conn","subscribeMessage","ev","type","legacyProcessEvent","event","_event$data","data","new_state","_defineProperty","newEntities","legacyFetchEntities","_x","_legacyFetchEntities","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","states","entities","i","wrap","_callee$","_context","prev","next","sent","length","abrupt","stop","legacySubscribeUpdates","subscribeEvents","entitiesColl","haVersion","subscribeEntities","onChange","subscribe"],"sources":["/workspaces/frontend/node_modules/home-assistant-js-websocket/dist/entities.js"],"sourcesContent":["import { getCollection } from \"./collection.js\";\nimport { getStates } from \"./commands.js\";\nimport { atLeastHaVersion } from \"./util.js\";\nfunction processEvent(store, updates) {\n    const state = Object.assign({}, store.state);\n    if (updates.a) {\n        for (const entityId in updates.a) {\n            const newState = updates.a[entityId];\n            let last_changed = new Date(newState.lc * 1000).toISOString();\n            state[entityId] = {\n                entity_id: entityId,\n                state: newState.s,\n                attributes: newState.a,\n                context: typeof newState.c === \"string\"\n                    ? { id: newState.c, parent_id: null, user_id: null }\n                    : newState.c,\n                last_changed: last_changed,\n                last_updated: newState.lu\n                    ? new Date(newState.lu * 1000).toISOString()\n                    : last_changed,\n            };\n        }\n    }\n    if (updates.r) {\n        for (const entityId of updates.r) {\n            delete state[entityId];\n        }\n    }\n    if (updates.c) {\n        for (const entityId in updates.c) {\n            let entityState = state[entityId];\n            if (!entityState) {\n                console.warn(\"Received state update for unknown entity\", entityId);\n                continue;\n            }\n            entityState = Object.assign({}, entityState);\n            const { \"+\": toAdd, \"-\": toRemove } = updates.c[entityId];\n            const attributesChanged = (toAdd === null || toAdd === void 0 ? void 0 : toAdd.a) || (toRemove === null || toRemove === void 0 ? void 0 : toRemove.a);\n            const attributes = attributesChanged\n                ? Object.assign({}, entityState.attributes) : entityState.attributes;\n            if (toAdd) {\n                if (toAdd.s !== undefined) {\n                    entityState.state = toAdd.s;\n                }\n                if (toAdd.c) {\n                    if (typeof toAdd.c === \"string\") {\n                        entityState.context = Object.assign(Object.assign({}, entityState.context), { id: toAdd.c });\n                    }\n                    else {\n                        entityState.context = Object.assign(Object.assign({}, entityState.context), toAdd.c);\n                    }\n                }\n                if (toAdd.lc) {\n                    entityState.last_updated = entityState.last_changed = new Date(toAdd.lc * 1000).toISOString();\n                }\n                else if (toAdd.lu) {\n                    entityState.last_updated = new Date(toAdd.lu * 1000).toISOString();\n                }\n                if (toAdd.a) {\n                    Object.assign(attributes, toAdd.a);\n                }\n            }\n            if (toRemove === null || toRemove === void 0 ? void 0 : toRemove.a) {\n                for (const key of toRemove.a) {\n                    delete attributes[key];\n                }\n            }\n            if (attributesChanged) {\n                entityState.attributes = attributes;\n            }\n            state[entityId] = entityState;\n        }\n    }\n    store.setState(state, true);\n}\nconst subscribeUpdates = (conn, store) => conn.subscribeMessage((ev) => processEvent(store, ev), {\n    type: \"subscribe_entities\",\n});\nfunction legacyProcessEvent(store, event) {\n    const state = store.state;\n    if (state === undefined)\n        return;\n    const { entity_id, new_state } = event.data;\n    if (new_state) {\n        store.setState({ [new_state.entity_id]: new_state });\n    }\n    else {\n        const newEntities = Object.assign({}, state);\n        delete newEntities[entity_id];\n        store.setState(newEntities, true);\n    }\n}\nasync function legacyFetchEntities(conn) {\n    const states = await getStates(conn);\n    const entities = {};\n    for (let i = 0; i < states.length; i++) {\n        const state = states[i];\n        entities[state.entity_id] = state;\n    }\n    return entities;\n}\nconst legacySubscribeUpdates = (conn, store) => conn.subscribeEvents((ev) => legacyProcessEvent(store, ev), \"state_changed\");\nexport const entitiesColl = (conn) => atLeastHaVersion(conn.haVersion, 2022, 4, 0)\n    ? getCollection(conn, \"_ent\", undefined, subscribeUpdates)\n    : getCollection(conn, \"_ent\", legacyFetchEntities, legacySubscribeUpdates);\nexport const subscribeEntities = (conn, onChange) => entitiesColl(conn).subscribe(onChange);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}