{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport { ReactiveElement } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { listenMediaQuery } from \"../../../common/dom/media_query\";\nimport { deepEqual } from \"../../../common/util/deep-equal\";\nimport { checkConditionsMet, validateConditionalConfig } from \"../common/validate-condition\";\nfunction extractMediaQueries(conditions) {\n  return conditions.reduce((array, c) => {\n    if (\"conditions\" in c && c.conditions) {\n      array.push(...extractMediaQueries(c.conditions));\n    }\n    if (\"condition\" in c && c.condition === \"screen\" && c.media_query) {\n      array.push(c.media_query);\n    }\n    return array;\n  }, []);\n}\nexport let HuiConditionalBase = _decorate([customElement(\"hui-conditional-base\")], function (_initialize, _ReactiveElement) {\n  class HuiConditionalBase extends _ReactiveElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HuiConditionalBase,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"editMode\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        reflect: true\n      })],\n      key: \"hidden\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_config\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_element\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_mediaQueriesListeners\",\n      value() {\n        return [];\n      }\n    }, {\n      kind: \"field\",\n      key: \"_mediaQueries\",\n      value() {\n        return [];\n      }\n    }, {\n      kind: \"method\",\n      key: \"createRenderRoot\",\n      value: function createRenderRoot() {\n        return this;\n      }\n    }, {\n      kind: \"method\",\n      key: \"validateConfig\",\n      value: function validateConfig(config) {\n        if (!config.conditions) {\n          throw new Error(\"No conditions configured\");\n        }\n        if (!Array.isArray(config.conditions)) {\n          throw new Error(\"Conditions need to be an array\");\n        }\n        if (!validateConditionalConfig(config.conditions)) {\n          throw new Error(\"Conditions are invalid\");\n        }\n        if (this.lastChild) {\n          this.removeChild(this.lastChild);\n        }\n        this._config = config;\n      }\n    }, {\n      kind: \"method\",\n      key: \"disconnectedCallback\",\n      value: function disconnectedCallback() {\n        _get(_getPrototypeOf(HuiConditionalBase.prototype), \"disconnectedCallback\", this).call(this);\n        this._clearMediaQueries();\n      }\n    }, {\n      kind: \"method\",\n      key: \"connectedCallback\",\n      value: function connectedCallback() {\n        _get(_getPrototypeOf(HuiConditionalBase.prototype), \"connectedCallback\", this).call(this);\n        this._listenMediaQueries();\n        this._updateVisibility();\n      }\n    }, {\n      kind: \"method\",\n      key: \"_clearMediaQueries\",\n      value: function _clearMediaQueries() {\n        this._mediaQueries = [];\n        while (this._mediaQueriesListeners.length) {\n          this._mediaQueriesListeners.pop()();\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_listenMediaQueries\",\n      value: function _listenMediaQueries() {\n        if (!this._config) {\n          return;\n        }\n        const mediaQueries = extractMediaQueries(this._config.conditions);\n        if (deepEqual(mediaQueries, this._mediaQueries)) return;\n        this._mediaQueries = mediaQueries;\n        while (this._mediaQueriesListeners.length) {\n          this._mediaQueriesListeners.pop()();\n        }\n        mediaQueries.forEach(query => {\n          const listener = listenMediaQuery(query, matches => {\n            // For performance, if there is only one condition and it's a screen condition, set the visibility directly\n            if (this._config.conditions.length === 1 && \"condition\" in this._config.conditions[0] && this._config.conditions[0].condition === \"screen\") {\n              this._setVisibility(matches);\n              return;\n            }\n            this._updateVisibility();\n          });\n          this._mediaQueriesListeners.push(listener);\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"update\",\n      value: function update(changed) {\n        _get(_getPrototypeOf(HuiConditionalBase.prototype), \"update\", this).call(this, changed);\n        if (changed.has(\"_element\") || changed.has(\"_config\") || changed.has(\"hass\")) {\n          this._listenMediaQueries();\n          this._updateVisibility();\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_updateVisibility\",\n      value: function _updateVisibility() {\n        if (!this._element || !this.hass || !this._config) {\n          return;\n        }\n        this._element.editMode = this.editMode;\n        const conditionMet = checkConditionsMet(this._config.conditions, this.hass);\n        this._setVisibility(conditionMet);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_setVisibility\",\n      value: function _setVisibility(conditionMet) {\n        if (!this._element || !this.hass) {\n          return;\n        }\n        const visible = this.editMode || conditionMet;\n        this.hidden = !visible;\n        this.style.setProperty(\"display\", visible ? \"\" : \"none\");\n        if (visible) {\n          this._element.hass = this.hass;\n          if (!this._element.parentElement) {\n            this.appendChild(this._element);\n          }\n        } else if (this._element.parentElement) {\n          this.removeChild(this._element);\n        }\n      }\n    }]\n  };\n}, ReactiveElement);","map":{"version":3,"names":["ReactiveElement","customElement","property","state","listenMediaQuery","deepEqual","checkConditionsMet","validateConditionalConfig","extractMediaQueries","conditions","reduce","array","c","push","condition","media_query","HuiConditionalBase","_decorate","_initialize","_ReactiveElement","constructor","args","F","d","kind","decorators","attribute","key","value","type","Boolean","reflect","createRenderRoot","validateConfig","config","Error","Array","isArray","lastChild","removeChild","_config","disconnectedCallback","_get","_getPrototypeOf","prototype","call","_clearMediaQueries","connectedCallback","_listenMediaQueries","_updateVisibility","_mediaQueries","_mediaQueriesListeners","length","pop","mediaQueries","forEach","query","listener","matches","_setVisibility","update","changed","has","_element","hass","editMode","conditionMet","visible","hidden","style","setProperty","parentElement","appendChild"],"sources":["/Users/sercanardil/Desktop/frontend/src/panels/lovelace/components/hui-conditional-base.ts"],"sourcesContent":["import { PropertyValues, ReactiveElement } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { listenMediaQuery } from \"../../../common/dom/media_query\";\nimport { deepEqual } from \"../../../common/util/deep-equal\";\nimport { HomeAssistant } from \"../../../types\";\nimport { ConditionalCardConfig } from \"../cards/types\";\nimport {\n  Condition,\n  LegacyCondition,\n  checkConditionsMet,\n  validateConditionalConfig,\n} from \"../common/validate-condition\";\nimport { ConditionalRowConfig, LovelaceRow } from \"../entity-rows/types\";\nimport { LovelaceCard } from \"../types\";\n\nfunction extractMediaQueries(\n  conditions: (Condition | LegacyCondition)[]\n): string[] {\n  return conditions.reduce<string[]>((array, c) => {\n    if (\"conditions\" in c && c.conditions) {\n      array.push(...extractMediaQueries(c.conditions));\n    }\n    if (\"condition\" in c && c.condition === \"screen\" && c.media_query) {\n      array.push(c.media_query);\n    }\n    return array;\n  }, []);\n}\n\n@customElement(\"hui-conditional-base\")\nexport class HuiConditionalBase extends ReactiveElement {\n  @property({ attribute: false }) public hass?: HomeAssistant;\n\n  @property({ type: Boolean }) public editMode = false;\n\n  @property({ type: Boolean, reflect: true }) public hidden = false;\n\n  @state() protected _config?: ConditionalCardConfig | ConditionalRowConfig;\n\n  protected _element?: LovelaceCard | LovelaceRow;\n\n  private _mediaQueriesListeners: Array<() => void> = [];\n\n  private _mediaQueries: string[] = [];\n\n  protected createRenderRoot() {\n    return this;\n  }\n\n  protected validateConfig(\n    config: ConditionalCardConfig | ConditionalRowConfig\n  ): void {\n    if (!config.conditions) {\n      throw new Error(\"No conditions configured\");\n    }\n\n    if (!Array.isArray(config.conditions)) {\n      throw new Error(\"Conditions need to be an array\");\n    }\n\n    if (!validateConditionalConfig(config.conditions)) {\n      throw new Error(\"Conditions are invalid\");\n    }\n\n    if (this.lastChild) {\n      this.removeChild(this.lastChild);\n    }\n\n    this._config = config;\n  }\n\n  public disconnectedCallback() {\n    super.disconnectedCallback();\n    this._clearMediaQueries();\n  }\n\n  public connectedCallback() {\n    super.connectedCallback();\n    this._listenMediaQueries();\n    this._updateVisibility();\n  }\n\n  private _clearMediaQueries() {\n    this._mediaQueries = [];\n    while (this._mediaQueriesListeners.length) {\n      this._mediaQueriesListeners.pop()!();\n    }\n  }\n\n  private _listenMediaQueries() {\n    if (!this._config) {\n      return;\n    }\n\n    const mediaQueries = extractMediaQueries(this._config.conditions);\n\n    if (deepEqual(mediaQueries, this._mediaQueries)) return;\n\n    this._mediaQueries = mediaQueries;\n    while (this._mediaQueriesListeners.length) {\n      this._mediaQueriesListeners.pop()!();\n    }\n\n    mediaQueries.forEach((query) => {\n      const listener = listenMediaQuery(query, (matches) => {\n        // For performance, if there is only one condition and it's a screen condition, set the visibility directly\n        if (\n          this._config!.conditions.length === 1 &&\n          \"condition\" in this._config!.conditions[0] &&\n          this._config!.conditions[0].condition === \"screen\"\n        ) {\n          this._setVisibility(matches);\n          return;\n        }\n        this._updateVisibility();\n      });\n      this._mediaQueriesListeners.push(listener);\n    });\n  }\n\n  protected update(changed: PropertyValues): void {\n    super.update(changed);\n\n    if (\n      changed.has(\"_element\") ||\n      changed.has(\"_config\") ||\n      changed.has(\"hass\")\n    ) {\n      this._listenMediaQueries();\n      this._updateVisibility();\n    }\n  }\n\n  private _updateVisibility() {\n    if (!this._element || !this.hass || !this._config) {\n      return;\n    }\n\n    this._element.editMode = this.editMode;\n\n    const conditionMet = checkConditionsMet(\n      this._config!.conditions,\n      this.hass!\n    );\n\n    this._setVisibility(conditionMet);\n  }\n\n  private _setVisibility(conditionMet: boolean) {\n    if (!this._element || !this.hass) {\n      return;\n    }\n    const visible = this.editMode || conditionMet;\n    this.hidden = !visible;\n    this.style.setProperty(\"display\", visible ? \"\" : \"none\");\n\n    if (visible) {\n      this._element.hass = this.hass;\n      if (!this._element!.parentElement) {\n        this.appendChild(this._element!);\n      }\n    } else if (this._element.parentElement) {\n      this.removeChild(this._element!);\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-conditional-base\": HuiConditionalBase;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}