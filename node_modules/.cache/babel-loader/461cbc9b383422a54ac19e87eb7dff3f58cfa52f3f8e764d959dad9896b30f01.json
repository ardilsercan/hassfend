{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/helpers/regeneratorRuntime\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10, _templateObject11, _templateObject12, _templateObject13, _templateObject14, _templateObject15, _templateObject16;\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.object.entries.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.object.values.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"@material/mwc-button\";\nvar mdiCheck = \"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\";\nvar mdiContentDuplicate = \"M11,17H4A2,2 0 0,1 2,15V3A2,2 0 0,1 4,1H16V3H4V15H11V13L15,16L11,19V17M19,21V7H8V13H6V7A2,2 0 0,1 8,5H19A2,2 0 0,1 21,7V21A2,2 0 0,1 19,23H8A2,2 0 0,1 6,21V19H8V21H19Z\";\nvar mdiContentSave = \"M15,9H5V5H15M12,19A3,3 0 0,1 9,16A3,3 0 0,1 12,13A3,3 0 0,1 15,16A3,3 0 0,1 12,19M17,3H5C3.89,3 3,3.9 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V7L17,3Z\";\nvar mdiDebugStepOver = \"M12,14A2,2 0 0,1 14,16A2,2 0 0,1 12,18A2,2 0 0,1 10,16A2,2 0 0,1 12,14M23.46,8.86L21.87,15.75L15,14.16L18.8,11.78C17.39,9.5 14.87,8 12,8C8.05,8 4.77,10.86 4.12,14.63L2.15,14.28C2.96,9.58 7.06,6 12,6C15.58,6 18.73,7.89 20.5,10.72L23.46,8.86Z\";\nvar mdiDelete = \"M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z\";\nvar mdiDotsVertical = \"M12,16A2,2 0 0,1 14,18A2,2 0 0,1 12,20A2,2 0 0,1 10,18A2,2 0 0,1 12,16M12,10A2,2 0 0,1 14,12A2,2 0 0,1 12,14A2,2 0 0,1 10,12A2,2 0 0,1 12,10M12,4A2,2 0 0,1 14,6A2,2 0 0,1 12,8A2,2 0 0,1 10,6A2,2 0 0,1 12,4Z\";\nvar mdiInformationOutline = \"M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M11,17H13V11H11V17Z\";\nvar mdiPlay = \"M8,5.14V19.14L19,12.14L8,5.14Z\";\nvar mdiPlayCircleOutline = \"M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M10,16.5L16,12L10,7.5V16.5Z\";\nvar mdiRenameBox = \"M18,17H10.5L12.5,15H18M6,17V14.5L13.88,6.65C14.07,6.45 14.39,6.45 14.59,6.65L16.35,8.41C16.55,8.61 16.55,8.92 16.35,9.12L8.47,17M19,3H5C3.89,3 3,3.89 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5C21,3.89 20.1,3 19,3Z\";\nvar mdiRobotConfused = \"M20 4H18V3H20.5C20.78 3 21 3.22 21 3.5V5.5C21 5.78 20.78 6 20.5 6H20V7H19V5H20V4M19 9H20V8H19V9M17 3H16V7H17V3M23 15V18C23 18.55 22.55 19 22 19H21V20C21 21.11 20.11 22 19 22H5C3.9 22 3 21.11 3 20V19H2C1.45 19 1 18.55 1 18V15C1 14.45 1.45 14 2 14H3C3 10.13 6.13 7 10 7H11V5.73C10.4 5.39 10 4.74 10 4C10 2.9 10.9 2 12 2S14 2.9 14 4C14 4.74 13.6 5.39 13 5.73V7H14C14.34 7 14.67 7.03 15 7.08V10H19.74C20.53 11.13 21 12.5 21 14H22C22.55 14 23 14.45 23 15M10 15.5C10 14.12 8.88 13 7.5 13S5 14.12 5 15.5 6.12 18 7.5 18 10 16.88 10 15.5M19 15.5C19 14.12 17.88 13 16.5 13S14 14.12 14 15.5 15.12 18 16.5 18 19 16.88 19 15.5M17 8H16V9H17V8Z\";\nvar mdiStopCircleOutline = \"M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4M9,9V15H15V9\";\nvar mdiTransitConnection = \"M15,12C15,10.7 14.16,9.6 13,9.18V6.82C14.16,6.4 15,5.3 15,4A3,3 0 0,0 12,1A3,3 0 0,0 9,4C9,5.3 9.84,6.4 11,6.82V9.19C9.84,9.6 9,10.7 9,12C9,13.3 9.84,14.4 11,14.82V17.18C9.84,17.6 9,18.7 9,20A3,3 0 0,0 12,23A3,3 0 0,0 15,20C15,18.7 14.16,17.6 13,17.18V14.82C14.16,14.4 15,13.3 15,12M12,3A1,1 0 0,1 13,4A1,1 0 0,1 12,5A1,1 0 0,1 11,4A1,1 0 0,1 12,3M12,21A1,1 0 0,1 11,20A1,1 0 0,1 12,19A1,1 0 0,1 13,20A1,1 0 0,1 12,21Z\";\nimport { LitElement, css, html, nothing } from \"lit\";\nimport { property, state } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport { navigate } from \"../../../common/navigate\";\nimport { afterNextRender } from \"../../../common/util/render-status\";\nimport \"../../../components/ha-button-menu\";\nimport \"../../../components/ha-fab\";\nimport \"../../../components/ha-icon-button\";\nimport \"../../../components/ha-svg-icon\";\nimport \"../../../components/ha-yaml-editor\";\nimport \"../../../components/ha-list-item\";\nimport { deleteAutomation, fetchAutomationFileConfig, getAutomationEditorInitData, getAutomationStateConfig, saveAutomationConfig, showAutomationEditor, triggerAutomationActions } from \"../../../data/automation\";\nimport { validateConfig } from \"../../../data/config\";\nimport { UNAVAILABLE } from \"../../../data/entity\";\nimport { fetchEntityRegistry } from \"../../../data/entity_registry\";\nimport { showAlertDialog, showConfirmationDialog } from \"../../../dialogs/generic/show-dialog-box\";\nimport \"../../../layouts/hass-subpage\";\nimport { KeyboardShortcutMixin } from \"../../../mixins/keyboard-shortcut-mixin\";\nimport { haStyle } from \"../../../resources/styles\";\nimport { showToast } from \"../../../util/toast\";\nimport \"../ha-config-section\";\nimport { showAutomationModeDialog } from \"./automation-mode-dialog/show-dialog-automation-mode\";\nimport { showAutomationRenameDialog } from \"./automation-rename-dialog/show-dialog-automation-rename\";\nimport \"./blueprint-automation-editor\";\nimport \"./manual-automation-editor\";\nexport var HaAutomationEditor = _decorate(null, function (_initialize, _KeyboardShortcutMixi) {\n  var HaAutomationEditor = /*#__PURE__*/function (_KeyboardShortcutMixi2) {\n    _inherits(HaAutomationEditor, _KeyboardShortcutMixi2);\n    function HaAutomationEditor() {\n      var _this;\n      _classCallCheck(this, HaAutomationEditor);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, HaAutomationEditor, [].concat(args));\n      _initialize(_assertThisInitialized(_this));\n      return _this;\n    }\n    return _createClass(HaAutomationEditor);\n  }(_KeyboardShortcutMixi);\n  return {\n    F: HaAutomationEditor,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"automationId\",\n      value: function value() {\n        return null;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"entityId\",\n      value: function value() {\n        return null;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"automations\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"isWide\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"narrow\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"route\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_config\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_dirty\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_errors\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_entityId\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_mode\",\n      value: function value() {\n        return \"gui\";\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_readOnly\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_validationErrors\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_configSubscriptions\",\n      value: function value() {\n        return {};\n      }\n    }, {\n      kind: \"field\",\n      key: \"_configSubscriptionsId\",\n      value: function value() {\n        return 1;\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var _this$_config;\n        var stateObj = this._entityId ? this.hass.states[this._entityId] : undefined;\n        return html(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      <hass-subpage\\n        .hass=\", \"\\n        .narrow=\", \"\\n        .route=\", \"\\n        .backCallback=\", \"\\n        .header=\", \"\\n      >\\n        \", \"\\n        <ha-button-menu slot=\\\"toolbar-icon\\\">\\n          <ha-icon-button\\n            slot=\\\"trigger\\\"\\n            .label=\", \"\\n            .path=\", \"\\n          ></ha-icon-button>\\n\\n          <ha-list-item\\n            graphic=\\\"icon\\\"\\n            .disabled=\", \"\\n            @click=\", \"\\n          >\\n            \", \"\\n            <ha-svg-icon\\n              slot=\\\"graphic\\\"\\n              .path=\", \"\\n            ></ha-svg-icon>\\n          </ha-list-item>\\n\\n          <ha-list-item\\n            graphic=\\\"icon\\\"\\n            .disabled=\", \"\\n            @click=\", \"\\n          >\\n            \", \"\\n            <ha-svg-icon slot=\\\"graphic\\\" .path=\", \"></ha-svg-icon>\\n          </ha-list-item>\\n\\n          \", \"\\n\\n          <ha-list-item\\n            graphic=\\\"icon\\\"\\n            @click=\", \"\\n            .disabled=\", \"\\n          >\\n            \", \"\\n            <ha-svg-icon slot=\\\"graphic\\\" .path=\", \"></ha-svg-icon>\\n          </ha-list-item>\\n\\n          \", \"\\n\\n          <ha-list-item\\n            .disabled=\", \"\\n            graphic=\\\"icon\\\"\\n            @click=\", \"\\n          >\\n            \", \"\\n            <ha-svg-icon\\n              slot=\\\"graphic\\\"\\n              .path=\", \"\\n            ></ha-svg-icon>\\n          </ha-list-item>\\n\\n          <li divider role=\\\"separator\\\"></li>\\n\\n          <ha-list-item graphic=\\\"icon\\\" @click=\", \">\\n            \", \"\\n            \", \"\\n          </ha-list-item>\\n          <ha-list-item graphic=\\\"icon\\\" @click=\", \">\\n            \", \"\\n            \", \"\\n          </ha-list-item>\\n\\n          <li divider role=\\\"separator\\\"></li>\\n\\n          <ha-list-item\\n            graphic=\\\"icon\\\"\\n            .disabled=\", \"\\n            @click=\", \"\\n          >\\n            \", \"\\n            <ha-svg-icon\\n              slot=\\\"graphic\\\"\\n              .path=\", \"\\n            ></ha-svg-icon>\\n          </ha-list-item>\\n\\n          <ha-list-item\\n            .disabled=\", \"\\n            class=\", \"\\n            graphic=\\\"icon\\\"\\n            @click=\", \"\\n          >\\n            \", \"\\n            <ha-svg-icon\\n              class=\", \"\\n              slot=\\\"graphic\\\"\\n              .path=\", \"\\n            >\\n            </ha-svg-icon>\\n          </ha-list-item>\\n        </ha-button-menu>\\n\\n        \", \"\\n        <ha-fab\\n          slot=\\\"fab\\\"\\n          class=\", \"\\n          .label=\", \"\\n          extended\\n          @click=\", \"\\n        >\\n          <ha-svg-icon slot=\\\"icon\\\" .path=\", \"></ha-svg-icon>\\n        </ha-fab>\\n      </hass-subpage>\\n    \"])), this.hass, this.narrow, this.route, this._backTapped, !this._config ? \"\" : this._config.alias || this.hass.localize(\"ui.panel.config.automation.editor.default_name\"), (_this$_config = this._config) !== null && _this$_config !== void 0 && _this$_config.id && !this.narrow ? html(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n              <mwc-button @click=\", \" slot=\\\"toolbar-icon\\\">\\n                \", \"\\n              </mwc-button>\\n            \"])), this._showTrace, this.hass.localize(\"ui.panel.config.automation.editor.show_trace\")) : \"\", this.hass.localize(\"ui.common.menu\"), mdiDotsVertical, !stateObj, this._showInfo, this.hass.localize(\"ui.panel.config.automation.editor.show_info\"), mdiInformationOutline, !stateObj, this._runActions, this.hass.localize(\"ui.panel.config.automation.editor.run\"), mdiPlay, stateObj && this._config && this.narrow ? html(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"<a href=\\\"/config/automation/trace/\", \"\\\">\\n                <ha-list-item graphic=\\\"icon\\\">\\n                  \", \"\\n                  <ha-svg-icon\\n                    slot=\\\"graphic\\\"\\n                    .path=\", \"\\n                  ></ha-svg-icon>\\n                </ha-list-item>\\n              </a>\"])), this._config.id, this.hass.localize(\"ui.panel.config.automation.editor.show_trace\"), mdiTransitConnection) : \"\", this._promptAutomationAlias, !this.automationId || this._mode === \"yaml\", this.hass.localize(\"ui.panel.config.automation.editor.rename\"), mdiRenameBox, this._config && !(\"use_blueprint\" in this._config) ? html(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n                <ha-list-item\\n                  graphic=\\\"icon\\\"\\n                  @click=\", \"\\n                  .disabled=\", \"\\n                >\\n                  \", \"\\n                  <ha-svg-icon\\n                    slot=\\\"graphic\\\"\\n                    .path=\", \"\\n                  ></ha-svg-icon>\\n                </ha-list-item>\\n              \"])), this._promptAutomationMode, this._readOnly || this._mode === \"yaml\", this.hass.localize(\"ui.panel.config.automation.editor.change_mode\"), mdiDebugStepOver) : \"\", !this._readOnly && !this.automationId, this._duplicate, this.hass.localize(this._readOnly ? \"ui.panel.config.automation.editor.migrate\" : \"ui.panel.config.automation.editor.duplicate\"), mdiContentDuplicate, this._switchUiMode, this.hass.localize(\"ui.panel.config.automation.editor.edit_ui\"), this._mode === \"gui\" ? html(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"<ha-svg-icon\\n                  class=\\\"selected_menu_item\\\"\\n                  slot=\\\"graphic\\\"\\n                  .path=\", \"\\n                ></ha-svg-icon>\"])), mdiCheck) : \"\", this._switchYamlMode, this.hass.localize(\"ui.panel.config.automation.editor.edit_yaml\"), this._mode === \"yaml\" ? html(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"<ha-svg-icon\\n                  class=\\\"selected_menu_item\\\"\\n                  slot=\\\"graphic\\\"\\n                  .path=\", \"\\n                ></ha-svg-icon>\"])), mdiCheck) : \"\", !stateObj, this._toggle, (stateObj === null || stateObj === void 0 ? void 0 : stateObj.state) === \"off\" ? this.hass.localize(\"ui.panel.config.automation.editor.enable\") : this.hass.localize(\"ui.panel.config.automation.editor.disable\"), (stateObj === null || stateObj === void 0 ? void 0 : stateObj.state) === \"off\" ? mdiPlayCircleOutline : mdiStopCircleOutline, !this.automationId, classMap({\n          warning: Boolean(this.automationId)\n        }), this._deleteConfirm, this.hass.localize(\"ui.panel.config.automation.picker.delete\"), classMap({\n          warning: Boolean(this.automationId)\n        }), mdiDelete, this._config ? html(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral([\"\\n              <div\\n                class=\\\"content \", \"\\\"\\n                @subscribe-automation-config=\", \"\\n              >\\n                \", \"\\n                \", \"\\n              </div>\\n            \"])), classMap({\n          \"yaml-mode\": this._mode === \"yaml\"\n        }), this._subscribeAutomationConfig, this._errors || (stateObj === null || stateObj === void 0 ? void 0 : stateObj.state) === UNAVAILABLE ? html(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral([\"<ha-alert\\n                      alert-type=\\\"error\\\"\\n                      .title=\", \"\\n                    >\\n                      \", \"\\n                      \", \"\\n                    </ha-alert>\"])), (stateObj === null || stateObj === void 0 ? void 0 : stateObj.state) === UNAVAILABLE ? this.hass.localize(\"ui.panel.config.automation.editor.unavailable\") : undefined, this._errors || this._validationErrors, (stateObj === null || stateObj === void 0 ? void 0 : stateObj.state) === UNAVAILABLE ? html(_templateObject9 || (_templateObject9 = _taggedTemplateLiteral([\"<ha-svg-icon\\n                            slot=\\\"icon\\\"\\n                            .path=\", \"\\n                          ></ha-svg-icon>\"])), mdiRobotConfused) : nothing) : \"\", this._mode === \"gui\" ? \"use_blueprint\" in this._config ? html(_templateObject10 || (_templateObject10 = _taggedTemplateLiteral([\"\\n                        <blueprint-automation-editor\\n                          .hass=\", \"\\n                          .narrow=\", \"\\n                          .isWide=\", \"\\n                          .stateObj=\", \"\\n                          .config=\", \"\\n                          .disabled=\", \"\\n                          @value-changed=\", \"\\n                          @duplicate=\", \"\\n                        ></blueprint-automation-editor>\\n                      \"])), this.hass, this.narrow, this.isWide, stateObj, this._config, Boolean(this._readOnly), this._valueChanged, this._duplicate) : html(_templateObject11 || (_templateObject11 = _taggedTemplateLiteral([\"\\n                        <manual-automation-editor\\n                          .hass=\", \"\\n                          .narrow=\", \"\\n                          .isWide=\", \"\\n                          .stateObj=\", \"\\n                          .config=\", \"\\n                          .disabled=\", \"\\n                          @value-changed=\", \"\\n                          @duplicate=\", \"\\n                        ></manual-automation-editor>\\n                      \"])), this.hass, this.narrow, this.isWide, stateObj, this._config, Boolean(this._readOnly), this._valueChanged, this._duplicate) : this._mode === \"yaml\" ? html(_templateObject12 || (_templateObject12 = _taggedTemplateLiteral([\" \", \"\\n                        \", \"\\n                        <ha-yaml-editor\\n                          copyClipboard\\n                          .hass=\", \"\\n                          .defaultValue=\", \"\\n                          .readOnly=\", \"\\n                          @value-changed=\", \"\\n                        ></ha-yaml-editor>\"])), this._readOnly ? html(_templateObject13 || (_templateObject13 = _taggedTemplateLiteral([\"<ha-alert alert-type=\\\"warning\\\">\\n                              \", \"\\n                              <mwc-button\\n                                slot=\\\"action\\\"\\n                                @click=\", \"\\n                              >\\n                                \", \"\\n                              </mwc-button>\\n                            </ha-alert>\"])), this.hass.localize(\"ui.panel.config.automation.editor.read_only\"), this._duplicate, this.hass.localize(\"ui.panel.config.automation.editor.migrate\")) : \"\", (stateObj === null || stateObj === void 0 ? void 0 : stateObj.state) === \"off\" ? html(_templateObject14 || (_templateObject14 = _taggedTemplateLiteral([\"\\n                              <ha-alert alert-type=\\\"info\\\">\\n                                \", \"\\n                                <mwc-button\\n                                  slot=\\\"action\\\"\\n                                  @click=\", \"\\n                                >\\n                                  \", \"\\n                                </mwc-button>\\n                              </ha-alert>\\n                            \"])), this.hass.localize(\"ui.panel.config.automation.editor.disabled\"), this._toggle, this.hass.localize(\"ui.panel.config.automation.editor.enable\")) : \"\", this.hass, this._preprocessYaml(), this._readOnly, this._yamlChanged) : nothing) : \"\", classMap({\n          dirty: this._dirty\n        }), this.hass.localize(\"ui.panel.config.automation.editor.save\"), this._saveAutomation, mdiContentSave);\n      }\n    }, {\n      kind: \"method\",\n      key: \"updated\",\n      value: function updated(changedProps) {\n        var _this2 = this;\n        _get(_getPrototypeOf(HaAutomationEditor.prototype), \"updated\", this).call(this, changedProps);\n        var oldAutomationId = changedProps.get(\"automationId\");\n        if (changedProps.has(\"automationId\") && this.automationId && this.hass &&\n        // Only refresh config if we picked a new automation. If same ID, don't fetch it.\n        oldAutomationId !== this.automationId) {\n          this._setEntityId();\n          this._loadConfig();\n        }\n        if (changedProps.has(\"automationId\") && !this.automationId && !this.entityId && this.hass) {\n          var initData = getAutomationEditorInitData();\n          var baseConfig = {\n            description: \"\"\n          };\n          if (!initData || !(\"use_blueprint\" in initData)) {\n            baseConfig = Object.assign(Object.assign({}, baseConfig), {}, {\n              mode: \"single\",\n              trigger: [],\n              condition: [],\n              action: []\n            });\n          }\n          this._config = Object.assign(Object.assign({}, baseConfig), initData);\n          this._entityId = undefined;\n          this._readOnly = false;\n          this._dirty = true;\n        }\n        if (changedProps.has(\"entityId\") && this.entityId) {\n          getAutomationStateConfig(this.hass, this.entityId).then(function (c) {\n            _this2._config = _this2._normalizeConfig(c.config);\n            _this2._checkValidation();\n          });\n          this._entityId = this.entityId;\n          this._dirty = false;\n          this._readOnly = true;\n        }\n        if (changedProps.has(\"automations\") && this.automationId && !this._entityId) {\n          this._setEntityId();\n        }\n        if (changedProps.has(\"_config\")) {\n          Object.values(this._configSubscriptions).forEach(function (sub) {\n            return sub(_this2._config);\n          });\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_setEntityId\",\n      value: function _setEntityId() {\n        var _this3 = this;\n        var automation = this.automations.find(function (entity) {\n          return entity.attributes.id === _this3.automationId;\n        });\n        this._entityId = automation === null || automation === void 0 ? void 0 : automation.entity_id;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_checkValidation\",\n      value: function () {\n        var _checkValidation2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n          var _this4 = this;\n          var stateObj, validation;\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                this._validationErrors = undefined;\n                if (!(!this._entityId || !this._config)) {\n                  _context.next = 3;\n                  break;\n                }\n                return _context.abrupt(\"return\");\n              case 3:\n                stateObj = this.hass.states[this._entityId];\n                if (!((stateObj === null || stateObj === void 0 ? void 0 : stateObj.state) !== UNAVAILABLE)) {\n                  _context.next = 6;\n                  break;\n                }\n                return _context.abrupt(\"return\");\n              case 6:\n                _context.next = 8;\n                return validateConfig(this.hass, {\n                  trigger: this._config.trigger,\n                  condition: this._config.condition,\n                  action: this._config.action\n                });\n              case 8:\n                validation = _context.sent;\n                this._validationErrors = Object.entries(validation).map(function (_ref) {\n                  var _ref2 = _slicedToArray(_ref, 2),\n                    key = _ref2[0],\n                    value = _ref2[1];\n                  return value.valid ? \"\" : html(_templateObject15 || (_templateObject15 = _taggedTemplateLiteral([\"\", \":\\n            \", \"<br />\"])), _this4.hass.localize(\"ui.panel.config.automation.editor.\".concat(key, \"s.name\")), value.error);\n                });\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee, this);\n        }));\n        function _checkValidation() {\n          return _checkValidation2.apply(this, arguments);\n        }\n        return _checkValidation;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"_normalizeConfig\",\n      value: function _normalizeConfig(config) {\n        // Normalize data: ensure trigger, action and condition are lists\n        // Happens when people copy paste their automations into the config\n        for (var _i = 0, _arr = [\"trigger\", \"condition\", \"action\"]; _i < _arr.length; _i++) {\n          var key = _arr[_i];\n          var value = config[key];\n          if (value && !Array.isArray(value)) {\n            config[key] = [value];\n          }\n        }\n        return config;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_loadConfig\",\n      value: function () {\n        var _loadConfig2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n          var _this5 = this;\n          var _config, entityRegistry, entity;\n          return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n            while (1) switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return fetchAutomationFileConfig(this.hass, this.automationId);\n              case 3:\n                _config = _context2.sent;\n                this._dirty = false;\n                this._readOnly = false;\n                this._config = this._normalizeConfig(_config);\n                this._checkValidation();\n                _context2.next = 22;\n                break;\n              case 10:\n                _context2.prev = 10;\n                _context2.t0 = _context2[\"catch\"](0);\n                _context2.next = 14;\n                return fetchEntityRegistry(this.hass.connection);\n              case 14:\n                entityRegistry = _context2.sent;\n                entity = entityRegistry.find(function (ent) {\n                  return ent.platform === \"automation\" && ent.unique_id === _this5.automationId;\n                });\n                if (!entity) {\n                  _context2.next = 19;\n                  break;\n                }\n                navigate(\"/config/automation/show/\".concat(entity.entity_id), {\n                  replace: true\n                });\n                return _context2.abrupt(\"return\");\n              case 19:\n                _context2.next = 21;\n                return showAlertDialog(this, {\n                  text: _context2.t0.status_code === 404 ? this.hass.localize(\"ui.panel.config.automation.editor.load_error_not_editable\") : this.hass.localize(\"ui.panel.config.automation.editor.load_error_unknown\", {\n                    err_no: _context2.t0.status_code\n                  })\n                });\n              case 21:\n                history.back();\n              case 22:\n              case \"end\":\n                return _context2.stop();\n            }\n          }, _callee2, this, [[0, 10]]);\n        }));\n        function _loadConfig() {\n          return _loadConfig2.apply(this, arguments);\n        }\n        return _loadConfig;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"_valueChanged\",\n      value: function _valueChanged(ev) {\n        ev.stopPropagation();\n        this._config = ev.detail.value;\n        if (this._readOnly) {\n          return;\n        }\n        this._dirty = true;\n        this._errors = undefined;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_showInfo\",\n      value: function _showInfo() {\n        if (!this.hass || !this._entityId) {\n          return;\n        }\n        fireEvent(this, \"hass-more-info\", {\n          entityId: this._entityId\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_showTrace\",\n      value: function () {\n        var _showTrace2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n          var _this$_config2;\n          var result;\n          return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n            while (1) switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!((_this$_config2 = this._config) !== null && _this$_config2 !== void 0 && _this$_config2.id)) {\n                  _context3.next = 5;\n                  break;\n                }\n                _context3.next = 3;\n                return this.confirmUnsavedChanged();\n              case 3:\n                result = _context3.sent;\n                if (result) {\n                  navigate(\"/config/automation/trace/\".concat(this._config.id));\n                }\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }, _callee3, this);\n        }));\n        function _showTrace() {\n          return _showTrace2.apply(this, arguments);\n        }\n        return _showTrace;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"_runActions\",\n      value: function _runActions() {\n        if (!this.hass || !this._entityId) {\n          return;\n        }\n        triggerAutomationActions(this.hass, this.hass.states[this._entityId].entity_id);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_toggle\",\n      value: function () {\n        var _toggle2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n          var stateObj, service;\n          return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n            while (1) switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!(!this.hass || !this._entityId)) {\n                  _context4.next = 2;\n                  break;\n                }\n                return _context4.abrupt(\"return\");\n              case 2:\n                stateObj = this.hass.states[this._entityId];\n                service = stateObj.state === \"off\" ? \"turn_on\" : \"turn_off\";\n                _context4.next = 6;\n                return this.hass.callService(\"automation\", service, {\n                  entity_id: stateObj.entity_id\n                });\n              case 6:\n              case \"end\":\n                return _context4.stop();\n            }\n          }, _callee4, this);\n        }));\n        function _toggle() {\n          return _toggle2.apply(this, arguments);\n        }\n        return _toggle;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"_preprocessYaml\",\n      value: function _preprocessYaml() {\n        if (!this._config) {\n          return {};\n        }\n        var cleanConfig = Object.assign({}, this._config);\n        delete cleanConfig.id;\n        return cleanConfig;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_yamlChanged\",\n      value: function _yamlChanged(ev) {\n        var _this$_config3;\n        ev.stopPropagation();\n        if (!ev.detail.isValid) {\n          return;\n        }\n        this._config = Object.assign({\n          id: (_this$_config3 = this._config) === null || _this$_config3 === void 0 ? void 0 : _this$_config3.id\n        }, ev.detail.value);\n        this._errors = undefined;\n        this._dirty = true;\n      }\n    }, {\n      kind: \"method\",\n      key: \"confirmUnsavedChanged\",\n      value: function () {\n        var _confirmUnsavedChanged = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n          return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n            while (1) switch (_context5.prev = _context5.next) {\n              case 0:\n                if (!this._dirty) {\n                  _context5.next = 2;\n                  break;\n                }\n                return _context5.abrupt(\"return\", showConfirmationDialog(this, {\n                  title: this.hass.localize(\"ui.panel.config.automation.editor.unsaved_confirm_title\"),\n                  text: this.hass.localize(\"ui.panel.config.automation.editor.unsaved_confirm_text\"),\n                  confirmText: this.hass.localize(\"ui.common.leave\"),\n                  dismissText: this.hass.localize(\"ui.common.stay\"),\n                  destructive: true\n                }));\n              case 2:\n                return _context5.abrupt(\"return\", true);\n              case 3:\n              case \"end\":\n                return _context5.stop();\n            }\n          }, _callee5, this);\n        }));\n        function confirmUnsavedChanged() {\n          return _confirmUnsavedChanged.apply(this, arguments);\n        }\n        return confirmUnsavedChanged;\n      }()\n    }, {\n      kind: \"field\",\n      key: \"_backTapped\",\n      value: function value() {\n        var _this6 = this;\n        return /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n          var result;\n          return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n            while (1) switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return _this6.confirmUnsavedChanged();\n              case 2:\n                result = _context6.sent;\n                if (result) {\n                  afterNextRender(function () {\n                    return history.back();\n                  });\n                }\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }, _callee6);\n        }));\n      }\n    }, {\n      kind: \"method\",\n      key: \"_duplicate\",\n      value: function () {\n        var _duplicate2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n          var result, _this$_config4;\n          return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n            while (1) switch (_context7.prev = _context7.next) {\n              case 0:\n                if (!this._readOnly) {\n                  _context7.next = 6;\n                  break;\n                }\n                _context7.next = 3;\n                return showConfirmationDialog(this, {\n                  title: \"Migrate automation?\",\n                  text: \"You can migrate this automation, so it can be edited from the UI. After it is migrated and you have saved it, you will have to manually delete your old automation from your configuration. Do you want to migrate this automation?\"\n                });\n              case 3:\n                _context7.t0 = _context7.sent;\n                _context7.next = 9;\n                break;\n              case 6:\n                _context7.next = 8;\n                return this.confirmUnsavedChanged();\n              case 8:\n                _context7.t0 = _context7.sent;\n              case 9:\n                result = _context7.t0;\n                if (result) {\n                  showAutomationEditor(Object.assign(Object.assign({}, this._config), {}, {\n                    id: undefined,\n                    alias: this._readOnly ? (_this$_config4 = this._config) === null || _this$_config4 === void 0 ? void 0 : _this$_config4.alias : undefined\n                  }));\n                }\n              case 11:\n              case \"end\":\n                return _context7.stop();\n            }\n          }, _callee7, this);\n        }));\n        function _duplicate() {\n          return _duplicate2.apply(this, arguments);\n        }\n        return _duplicate;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"_deleteConfirm\",\n      value: function () {\n        var _deleteConfirm2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n          var _this$_config5,\n            _this7 = this;\n          return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n            while (1) switch (_context8.prev = _context8.next) {\n              case 0:\n                showConfirmationDialog(this, {\n                  title: this.hass.localize(\"ui.panel.config.automation.picker.delete_confirm_title\"),\n                  text: this.hass.localize(\"ui.panel.config.automation.picker.delete_confirm_text\", {\n                    name: (_this$_config5 = this._config) === null || _this$_config5 === void 0 ? void 0 : _this$_config5.alias\n                  }),\n                  confirmText: this.hass.localize(\"ui.common.delete\"),\n                  destructive: true,\n                  dismissText: this.hass.localize(\"ui.common.cancel\"),\n                  confirm: function confirm() {\n                    return _this7._delete();\n                  }\n                });\n              case 1:\n              case \"end\":\n                return _context8.stop();\n            }\n          }, _callee8, this);\n        }));\n        function _deleteConfirm() {\n          return _deleteConfirm2.apply(this, arguments);\n        }\n        return _deleteConfirm;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"_delete\",\n      value: function () {\n        var _delete2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n          return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n            while (1) switch (_context9.prev = _context9.next) {\n              case 0:\n                if (!this.automationId) {\n                  _context9.next = 4;\n                  break;\n                }\n                _context9.next = 3;\n                return deleteAutomation(this.hass, this.automationId);\n              case 3:\n                history.back();\n              case 4:\n              case \"end\":\n                return _context9.stop();\n            }\n          }, _callee9, this);\n        }));\n        function _delete() {\n          return _delete2.apply(this, arguments);\n        }\n        return _delete;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"_switchUiMode\",\n      value: function _switchUiMode() {\n        this._mode = \"gui\";\n      }\n    }, {\n      kind: \"method\",\n      key: \"_switchYamlMode\",\n      value: function _switchYamlMode() {\n        this._mode = \"yaml\";\n      }\n    }, {\n      kind: \"method\",\n      key: \"_promptAutomationAlias\",\n      value: function () {\n        var _promptAutomationAlias2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10() {\n          var _this8 = this;\n          return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n            while (1) switch (_context10.prev = _context10.next) {\n              case 0:\n                return _context10.abrupt(\"return\", new Promise(function (resolve) {\n                  showAutomationRenameDialog(_this8, {\n                    config: _this8._config,\n                    updateAutomation: function updateAutomation(config) {\n                      _this8._config = config;\n                      _this8._dirty = true;\n                      _this8.requestUpdate();\n                      resolve(true);\n                    },\n                    onClose: function onClose() {\n                      return resolve(false);\n                    }\n                  });\n                }));\n              case 1:\n              case \"end\":\n                return _context10.stop();\n            }\n          }, _callee10);\n        }));\n        function _promptAutomationAlias() {\n          return _promptAutomationAlias2.apply(this, arguments);\n        }\n        return _promptAutomationAlias;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"_promptAutomationMode\",\n      value: function () {\n        var _promptAutomationMode2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11() {\n          var _this9 = this;\n          return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n            while (1) switch (_context11.prev = _context11.next) {\n              case 0:\n                return _context11.abrupt(\"return\", new Promise(function (resolve) {\n                  showAutomationModeDialog(_this9, {\n                    config: _this9._config,\n                    updateAutomation: function updateAutomation(config) {\n                      _this9._config = config;\n                      _this9._dirty = true;\n                      _this9.requestUpdate();\n                      resolve();\n                    },\n                    onClose: function onClose() {\n                      return resolve();\n                    }\n                  });\n                }));\n              case 1:\n              case \"end\":\n                return _context11.stop();\n            }\n          }, _callee11);\n        }));\n        function _promptAutomationMode() {\n          return _promptAutomationMode2.apply(this, arguments);\n        }\n        return _promptAutomationMode;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"_saveAutomation\",\n      value: function () {\n        var _saveAutomation2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12() {\n          var id, saved;\n          return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n            while (1) switch (_context12.prev = _context12.next) {\n              case 0:\n                id = this.automationId || String(Date.now());\n                if (this.automationId) {\n                  _context12.next = 7;\n                  break;\n                }\n                _context12.next = 4;\n                return this._promptAutomationAlias();\n              case 4:\n                saved = _context12.sent;\n                if (saved) {\n                  _context12.next = 7;\n                  break;\n                }\n                return _context12.abrupt(\"return\");\n              case 7:\n                this._validationErrors = undefined;\n                _context12.prev = 8;\n                _context12.next = 11;\n                return saveAutomationConfig(this.hass, id, this._config);\n              case 11:\n                _context12.next = 18;\n                break;\n              case 13:\n                _context12.prev = 13;\n                _context12.t0 = _context12[\"catch\"](8);\n                this._errors = _context12.t0.body.message || _context12.t0.error || _context12.t0.body;\n                showToast(this, {\n                  message: _context12.t0.body.message || _context12.t0.error || _context12.t0.body\n                });\n                throw _context12.t0;\n              case 18:\n                this._dirty = false;\n                if (!this.automationId) {\n                  navigate(\"/config/automation/edit/\".concat(id), {\n                    replace: true\n                  });\n                }\n              case 20:\n              case \"end\":\n                return _context12.stop();\n            }\n          }, _callee12, this, [[8, 13]]);\n        }));\n        function _saveAutomation() {\n          return _saveAutomation2.apply(this, arguments);\n        }\n        return _saveAutomation;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"_subscribeAutomationConfig\",\n      value: function _subscribeAutomationConfig(ev) {\n        var _this10 = this;\n        var id = this._configSubscriptionsId++;\n        this._configSubscriptions[id] = ev.detail.callback;\n        ev.detail.unsub = function () {\n          delete _this10._configSubscriptions[id];\n        };\n        ev.detail.callback(this._config);\n      }\n    }, {\n      kind: \"method\",\n      key: \"handleKeyboardSave\",\n      value: function handleKeyboardSave() {\n        this._saveAutomation();\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [haStyle, css(_templateObject16 || (_templateObject16 = _taggedTemplateLiteral([\"\\n        .content {\\n          padding-bottom: 20px;\\n        }\\n        .yaml-mode {\\n          height: 100%;\\n          display: flex;\\n          flex-direction: column;\\n          padding-bottom: 0;\\n        }\\n        manual-automation-editor,\\n        blueprint-automation-editor {\\n          margin: 0 auto;\\n          max-width: 1040px;\\n          padding: 28px 20px 0;\\n        }\\n        ha-yaml-editor {\\n          flex-grow: 1;\\n          --actions-border-radius: 0;\\n          --code-mirror-height: 100%;\\n          min-height: 0;\\n          display: flex;\\n          flex-direction: column;\\n        }\\n        p {\\n          margin-bottom: 0;\\n        }\\n        ha-entity-toggle {\\n          margin-right: 8px;\\n          margin-inline-end: 8px;\\n          margin-inline-start: initial;\\n        }\\n        ha-fab {\\n          position: relative;\\n          bottom: calc(-80px - env(safe-area-inset-bottom));\\n          transition: bottom 0.3s;\\n        }\\n        ha-fab.dirty {\\n          bottom: 0;\\n        }\\n        .selected_menu_item {\\n          color: var(--primary-color);\\n        }\\n        li[role=\\\"separator\\\"] {\\n          border-bottom-color: var(--divider-color);\\n        }\\n        ha-button-menu a {\\n          text-decoration: none;\\n          color: var(--primary-color);\\n        }\\n        h1 {\\n          margin: 0;\\n        }\\n        .header-name {\\n          display: flex;\\n          align-items: center;\\n          margin: 0 auto;\\n          max-width: 1040px;\\n          padding: 28px 20px 0;\\n        }\\n      \"])))];\n      }\n    }]\n  };\n}, KeyboardShortcutMixin(LitElement));\ncustomElements.define(\"ha-automation-editor\", HaAutomationEditor);","map":{"version":3,"names":["mdiCheck","mdiContentDuplicate","mdiContentSave","mdiDebugStepOver","mdiDelete","mdiDotsVertical","mdiInformationOutline","mdiPlay","mdiPlayCircleOutline","mdiRenameBox","mdiRobotConfused","mdiStopCircleOutline","mdiTransitConnection","LitElement","css","html","nothing","property","state","classMap","fireEvent","navigate","afterNextRender","deleteAutomation","fetchAutomationFileConfig","getAutomationEditorInitData","getAutomationStateConfig","saveAutomationConfig","showAutomationEditor","triggerAutomationActions","validateConfig","UNAVAILABLE","fetchEntityRegistry","showAlertDialog","showConfirmationDialog","KeyboardShortcutMixin","haStyle","showToast","showAutomationModeDialog","showAutomationRenameDialog","HaAutomationEditor","_decorate","_initialize","_KeyboardShortcutMixi","_KeyboardShortcutMixi2","_inherits","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_assertThisInitialized","_createClass","F","d","kind","decorators","attribute","key","value","type","Boolean","render","_this$_config","stateObj","_entityId","hass","states","undefined","_templateObject","_taggedTemplateLiteral","narrow","route","_backTapped","_config","alias","localize","id","_templateObject2","_showTrace","_showInfo","_runActions","_templateObject3","_promptAutomationAlias","automationId","_mode","_templateObject4","_promptAutomationMode","_readOnly","_duplicate","_switchUiMode","_templateObject5","_switchYamlMode","_templateObject6","_toggle","warning","_deleteConfirm","_templateObject7","_subscribeAutomationConfig","_errors","_templateObject8","_validationErrors","_templateObject9","_templateObject10","isWide","_valueChanged","_templateObject11","_templateObject12","_templateObject13","_templateObject14","_preprocessYaml","_yamlChanged","dirty","_dirty","_saveAutomation","updated","changedProps","_this2","_get","_getPrototypeOf","prototype","call","oldAutomationId","get","has","_setEntityId","_loadConfig","entityId","initData","baseConfig","description","Object","assign","mode","trigger","condition","action","then","c","_normalizeConfig","config","_checkValidation","values","_configSubscriptions","forEach","sub","_this3","automation","automations","find","entity","attributes","entity_id","_checkValidation2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_this4","validation","wrap","_callee$","_context","prev","next","abrupt","sent","entries","map","_ref","_ref2","_slicedToArray","valid","_templateObject15","error","stop","apply","_i","_arr","isArray","_loadConfig2","_callee2","_this5","entityRegistry","_callee2$","_context2","t0","connection","ent","platform","unique_id","replace","text","status_code","err_no","history","back","ev","stopPropagation","detail","_showTrace2","_callee3","_this$_config2","result","_callee3$","_context3","confirmUnsavedChanged","_toggle2","_callee4","service","_callee4$","_context4","callService","cleanConfig","_this$_config3","isValid","_confirmUnsavedChanged","_callee5","_callee5$","_context5","title","confirmText","dismissText","destructive","_this6","_callee6","_callee6$","_context6","_duplicate2","_callee7","_this$_config4","_callee7$","_context7","_deleteConfirm2","_callee8","_this$_config5","_this7","_callee8$","_context8","name","confirm","_delete","_delete2","_callee9","_callee9$","_context9","_promptAutomationAlias2","_callee10","_this8","_callee10$","_context10","Promise","resolve","updateAutomation","requestUpdate","onClose","_promptAutomationMode2","_callee11","_this9","_callee11$","_context11","_saveAutomation2","_callee12","saved","_callee12$","_context12","String","Date","now","body","message","_this10","_configSubscriptionsId","callback","unsub","handleKeyboardSave","static","styles","_templateObject16","customElements","define"],"sources":["/Users/sercanardil/Desktop/frontend/src/panels/config/automation/ha-automation-editor.ts"],"sourcesContent":["import \"@material/mwc-button\";\nimport {\n  mdiCheck,\n  mdiContentDuplicate,\n  mdiContentSave,\n  mdiDebugStepOver,\n  mdiDelete,\n  mdiDotsVertical,\n  mdiInformationOutline,\n  mdiPlay,\n  mdiPlayCircleOutline,\n  mdiRenameBox,\n  mdiRobotConfused,\n  mdiStopCircleOutline,\n  mdiTransitConnection,\n} from \"@mdi/js\";\nimport { UnsubscribeFunc } from \"home-assistant-js-websocket\";\nimport {\n  CSSResultGroup,\n  LitElement,\n  PropertyValues,\n  TemplateResult,\n  css,\n  html,\n  nothing,\n} from \"lit\";\nimport { property, state } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport { navigate } from \"../../../common/navigate\";\nimport { afterNextRender } from \"../../../common/util/render-status\";\nimport \"../../../components/ha-button-menu\";\nimport \"../../../components/ha-fab\";\nimport \"../../../components/ha-icon-button\";\nimport \"../../../components/ha-svg-icon\";\nimport \"../../../components/ha-yaml-editor\";\nimport \"../../../components/ha-list-item\";\nimport {\n  AutomationConfig,\n  AutomationEntity,\n  deleteAutomation,\n  fetchAutomationFileConfig,\n  getAutomationEditorInitData,\n  getAutomationStateConfig,\n  saveAutomationConfig,\n  showAutomationEditor,\n  triggerAutomationActions,\n} from \"../../../data/automation\";\nimport { validateConfig } from \"../../../data/config\";\nimport { UNAVAILABLE } from \"../../../data/entity\";\nimport { fetchEntityRegistry } from \"../../../data/entity_registry\";\nimport {\n  showAlertDialog,\n  showConfirmationDialog,\n} from \"../../../dialogs/generic/show-dialog-box\";\nimport \"../../../layouts/hass-subpage\";\nimport { KeyboardShortcutMixin } from \"../../../mixins/keyboard-shortcut-mixin\";\nimport { haStyle } from \"../../../resources/styles\";\nimport { Entries, HomeAssistant, Route } from \"../../../types\";\nimport { showToast } from \"../../../util/toast\";\nimport \"../ha-config-section\";\nimport { showAutomationModeDialog } from \"./automation-mode-dialog/show-dialog-automation-mode\";\nimport { showAutomationRenameDialog } from \"./automation-rename-dialog/show-dialog-automation-rename\";\nimport \"./blueprint-automation-editor\";\nimport \"./manual-automation-editor\";\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-automation-editor\": HaAutomationEditor;\n  }\n  // for fire event\n  interface HASSDomEvents {\n    \"subscribe-automation-config\": {\n      callback: (config: AutomationConfig) => void;\n      unsub?: UnsubscribeFunc;\n    };\n    \"ui-mode-not-available\": Error;\n    duplicate: undefined;\n    \"move-down\": undefined;\n    \"move-up\": undefined;\n  }\n}\n\nexport class HaAutomationEditor extends KeyboardShortcutMixin(LitElement) {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property() public automationId: string | null = null;\n\n  @property() public entityId: string | null = null;\n\n  @property({ attribute: false }) public automations!: AutomationEntity[];\n\n  @property({ type: Boolean }) public isWide = false;\n\n  @property({ type: Boolean }) public narrow = false;\n\n  @property({ attribute: false }) public route!: Route;\n\n  @state() private _config?: AutomationConfig;\n\n  @state() private _dirty = false;\n\n  @state() private _errors?: string;\n\n  @state() private _entityId?: string;\n\n  @state() private _mode: \"gui\" | \"yaml\" = \"gui\";\n\n  @state() private _readOnly = false;\n\n  @state() private _validationErrors?: (string | TemplateResult)[];\n\n  private _configSubscriptions: Record<\n    string,\n    (config?: AutomationConfig) => void\n  > = {};\n\n  private _configSubscriptionsId = 1;\n\n  protected render(): TemplateResult {\n    const stateObj = this._entityId\n      ? this.hass.states[this._entityId]\n      : undefined;\n    return html`\n      <hass-subpage\n        .hass=${this.hass}\n        .narrow=${this.narrow}\n        .route=${this.route}\n        .backCallback=${this._backTapped}\n        .header=${!this._config\n          ? \"\"\n          : this._config.alias ||\n            this.hass.localize(\n              \"ui.panel.config.automation.editor.default_name\"\n            )}\n      >\n        ${this._config?.id && !this.narrow\n          ? html`\n              <mwc-button @click=${this._showTrace} slot=\"toolbar-icon\">\n                ${this.hass.localize(\n                  \"ui.panel.config.automation.editor.show_trace\"\n                )}\n              </mwc-button>\n            `\n          : \"\"}\n        <ha-button-menu slot=\"toolbar-icon\">\n          <ha-icon-button\n            slot=\"trigger\"\n            .label=${this.hass.localize(\"ui.common.menu\")}\n            .path=${mdiDotsVertical}\n          ></ha-icon-button>\n\n          <ha-list-item\n            graphic=\"icon\"\n            .disabled=${!stateObj}\n            @click=${this._showInfo}\n          >\n            ${this.hass.localize(\"ui.panel.config.automation.editor.show_info\")}\n            <ha-svg-icon\n              slot=\"graphic\"\n              .path=${mdiInformationOutline}\n            ></ha-svg-icon>\n          </ha-list-item>\n\n          <ha-list-item\n            graphic=\"icon\"\n            .disabled=${!stateObj}\n            @click=${this._runActions}\n          >\n            ${this.hass.localize(\"ui.panel.config.automation.editor.run\")}\n            <ha-svg-icon slot=\"graphic\" .path=${mdiPlay}></ha-svg-icon>\n          </ha-list-item>\n\n          ${stateObj && this._config && this.narrow\n            ? html`<a href=\"/config/automation/trace/${this._config.id}\">\n                <ha-list-item graphic=\"icon\">\n                  ${this.hass.localize(\n                    \"ui.panel.config.automation.editor.show_trace\"\n                  )}\n                  <ha-svg-icon\n                    slot=\"graphic\"\n                    .path=${mdiTransitConnection}\n                  ></ha-svg-icon>\n                </ha-list-item>\n              </a>`\n            : \"\"}\n\n          <ha-list-item\n            graphic=\"icon\"\n            @click=${this._promptAutomationAlias}\n            .disabled=${!this.automationId || this._mode === \"yaml\"}\n          >\n            ${this.hass.localize(\"ui.panel.config.automation.editor.rename\")}\n            <ha-svg-icon slot=\"graphic\" .path=${mdiRenameBox}></ha-svg-icon>\n          </ha-list-item>\n\n          ${this._config && !(\"use_blueprint\" in this._config)\n            ? html`\n                <ha-list-item\n                  graphic=\"icon\"\n                  @click=${this._promptAutomationMode}\n                  .disabled=${this._readOnly || this._mode === \"yaml\"}\n                >\n                  ${this.hass.localize(\n                    \"ui.panel.config.automation.editor.change_mode\"\n                  )}\n                  <ha-svg-icon\n                    slot=\"graphic\"\n                    .path=${mdiDebugStepOver}\n                  ></ha-svg-icon>\n                </ha-list-item>\n              `\n            : \"\"}\n\n          <ha-list-item\n            .disabled=${!this._readOnly && !this.automationId}\n            graphic=\"icon\"\n            @click=${this._duplicate}\n          >\n            ${this.hass.localize(\n              this._readOnly\n                ? \"ui.panel.config.automation.editor.migrate\"\n                : \"ui.panel.config.automation.editor.duplicate\"\n            )}\n            <ha-svg-icon\n              slot=\"graphic\"\n              .path=${mdiContentDuplicate}\n            ></ha-svg-icon>\n          </ha-list-item>\n\n          <li divider role=\"separator\"></li>\n\n          <ha-list-item graphic=\"icon\" @click=${this._switchUiMode}>\n            ${this.hass.localize(\"ui.panel.config.automation.editor.edit_ui\")}\n            ${this._mode === \"gui\"\n              ? html`<ha-svg-icon\n                  class=\"selected_menu_item\"\n                  slot=\"graphic\"\n                  .path=${mdiCheck}\n                ></ha-svg-icon>`\n              : ``}\n          </ha-list-item>\n          <ha-list-item graphic=\"icon\" @click=${this._switchYamlMode}>\n            ${this.hass.localize(\"ui.panel.config.automation.editor.edit_yaml\")}\n            ${this._mode === \"yaml\"\n              ? html`<ha-svg-icon\n                  class=\"selected_menu_item\"\n                  slot=\"graphic\"\n                  .path=${mdiCheck}\n                ></ha-svg-icon>`\n              : ``}\n          </ha-list-item>\n\n          <li divider role=\"separator\"></li>\n\n          <ha-list-item\n            graphic=\"icon\"\n            .disabled=${!stateObj}\n            @click=${this._toggle}\n          >\n            ${stateObj?.state === \"off\"\n              ? this.hass.localize(\"ui.panel.config.automation.editor.enable\")\n              : this.hass.localize(\"ui.panel.config.automation.editor.disable\")}\n            <ha-svg-icon\n              slot=\"graphic\"\n              .path=${stateObj?.state === \"off\"\n                ? mdiPlayCircleOutline\n                : mdiStopCircleOutline}\n            ></ha-svg-icon>\n          </ha-list-item>\n\n          <ha-list-item\n            .disabled=${!this.automationId}\n            class=${classMap({ warning: Boolean(this.automationId) })}\n            graphic=\"icon\"\n            @click=${this._deleteConfirm}\n          >\n            ${this.hass.localize(\"ui.panel.config.automation.picker.delete\")}\n            <ha-svg-icon\n              class=${classMap({ warning: Boolean(this.automationId) })}\n              slot=\"graphic\"\n              .path=${mdiDelete}\n            >\n            </ha-svg-icon>\n          </ha-list-item>\n        </ha-button-menu>\n\n        ${this._config\n          ? html`\n              <div\n                class=\"content ${classMap({\n                  \"yaml-mode\": this._mode === \"yaml\",\n                })}\"\n                @subscribe-automation-config=${this._subscribeAutomationConfig}\n              >\n                ${this._errors || stateObj?.state === UNAVAILABLE\n                  ? html`<ha-alert\n                      alert-type=\"error\"\n                      .title=${stateObj?.state === UNAVAILABLE\n                        ? this.hass.localize(\n                            \"ui.panel.config.automation.editor.unavailable\"\n                          )\n                        : undefined}\n                    >\n                      ${this._errors || this._validationErrors}\n                      ${stateObj?.state === UNAVAILABLE\n                        ? html`<ha-svg-icon\n                            slot=\"icon\"\n                            .path=${mdiRobotConfused}\n                          ></ha-svg-icon>`\n                        : nothing}\n                    </ha-alert>`\n                  : \"\"}\n                ${this._mode === \"gui\"\n                  ? \"use_blueprint\" in this._config\n                    ? html`\n                        <blueprint-automation-editor\n                          .hass=${this.hass}\n                          .narrow=${this.narrow}\n                          .isWide=${this.isWide}\n                          .stateObj=${stateObj}\n                          .config=${this._config}\n                          .disabled=${Boolean(this._readOnly)}\n                          @value-changed=${this._valueChanged}\n                          @duplicate=${this._duplicate}\n                        ></blueprint-automation-editor>\n                      `\n                    : html`\n                        <manual-automation-editor\n                          .hass=${this.hass}\n                          .narrow=${this.narrow}\n                          .isWide=${this.isWide}\n                          .stateObj=${stateObj}\n                          .config=${this._config}\n                          .disabled=${Boolean(this._readOnly)}\n                          @value-changed=${this._valueChanged}\n                          @duplicate=${this._duplicate}\n                        ></manual-automation-editor>\n                      `\n                  : this._mode === \"yaml\"\n                    ? html` ${this._readOnly\n                          ? html`<ha-alert alert-type=\"warning\">\n                              ${this.hass.localize(\n                                \"ui.panel.config.automation.editor.read_only\"\n                              )}\n                              <mwc-button\n                                slot=\"action\"\n                                @click=${this._duplicate}\n                              >\n                                ${this.hass.localize(\n                                  \"ui.panel.config.automation.editor.migrate\"\n                                )}\n                              </mwc-button>\n                            </ha-alert>`\n                          : \"\"}\n                        ${stateObj?.state === \"off\"\n                          ? html`\n                              <ha-alert alert-type=\"info\">\n                                ${this.hass.localize(\n                                  \"ui.panel.config.automation.editor.disabled\"\n                                )}\n                                <mwc-button\n                                  slot=\"action\"\n                                  @click=${this._toggle}\n                                >\n                                  ${this.hass.localize(\n                                    \"ui.panel.config.automation.editor.enable\"\n                                  )}\n                                </mwc-button>\n                              </ha-alert>\n                            `\n                          : \"\"}\n                        <ha-yaml-editor\n                          copyClipboard\n                          .hass=${this.hass}\n                          .defaultValue=${this._preprocessYaml()}\n                          .readOnly=${this._readOnly}\n                          @value-changed=${this._yamlChanged}\n                        ></ha-yaml-editor>`\n                    : nothing}\n              </div>\n            `\n          : \"\"}\n        <ha-fab\n          slot=\"fab\"\n          class=${classMap({ dirty: this._dirty })}\n          .label=${this.hass.localize(\"ui.panel.config.automation.editor.save\")}\n          extended\n          @click=${this._saveAutomation}\n        >\n          <ha-svg-icon slot=\"icon\" .path=${mdiContentSave}></ha-svg-icon>\n        </ha-fab>\n      </hass-subpage>\n    `;\n  }\n\n  protected updated(changedProps: PropertyValues): void {\n    super.updated(changedProps);\n\n    const oldAutomationId = changedProps.get(\"automationId\");\n    if (\n      changedProps.has(\"automationId\") &&\n      this.automationId &&\n      this.hass &&\n      // Only refresh config if we picked a new automation. If same ID, don't fetch it.\n      oldAutomationId !== this.automationId\n    ) {\n      this._setEntityId();\n      this._loadConfig();\n    }\n\n    if (\n      changedProps.has(\"automationId\") &&\n      !this.automationId &&\n      !this.entityId &&\n      this.hass\n    ) {\n      const initData = getAutomationEditorInitData();\n      let baseConfig: Partial<AutomationConfig> = { description: \"\" };\n      if (!initData || !(\"use_blueprint\" in initData)) {\n        baseConfig = {\n          ...baseConfig,\n          mode: \"single\",\n          trigger: [],\n          condition: [],\n          action: [],\n        };\n      }\n      this._config = {\n        ...baseConfig,\n        ...initData,\n      } as AutomationConfig;\n      this._entityId = undefined;\n      this._readOnly = false;\n      this._dirty = true;\n    }\n\n    if (changedProps.has(\"entityId\") && this.entityId) {\n      getAutomationStateConfig(this.hass, this.entityId).then((c) => {\n        this._config = this._normalizeConfig(c.config);\n        this._checkValidation();\n      });\n      this._entityId = this.entityId;\n      this._dirty = false;\n      this._readOnly = true;\n    }\n\n    if (\n      changedProps.has(\"automations\") &&\n      this.automationId &&\n      !this._entityId\n    ) {\n      this._setEntityId();\n    }\n\n    if (changedProps.has(\"_config\")) {\n      Object.values(this._configSubscriptions).forEach((sub) =>\n        sub(this._config)\n      );\n    }\n  }\n\n  private _setEntityId() {\n    const automation = this.automations.find(\n      (entity: AutomationEntity) => entity.attributes.id === this.automationId\n    );\n    this._entityId = automation?.entity_id;\n  }\n\n  private async _checkValidation() {\n    this._validationErrors = undefined;\n    if (!this._entityId || !this._config) {\n      return;\n    }\n    const stateObj = this.hass.states[this._entityId];\n    if (stateObj?.state !== UNAVAILABLE) {\n      return;\n    }\n    const validation = await validateConfig(this.hass, {\n      trigger: this._config.trigger,\n      condition: this._config.condition,\n      action: this._config.action,\n    });\n    this._validationErrors = (\n      Object.entries(validation) as Entries<typeof validation>\n    ).map(([key, value]) =>\n      value.valid\n        ? \"\"\n        : html`${this.hass.localize(\n              `ui.panel.config.automation.editor.${key}s.name`\n            )}:\n            ${value.error}<br />`\n    );\n  }\n\n  private _normalizeConfig(config: AutomationConfig): AutomationConfig {\n    // Normalize data: ensure trigger, action and condition are lists\n    // Happens when people copy paste their automations into the config\n    for (const key of [\"trigger\", \"condition\", \"action\"]) {\n      const value = config[key];\n      if (value && !Array.isArray(value)) {\n        config[key] = [value];\n      }\n    }\n    return config;\n  }\n\n  private async _loadConfig() {\n    try {\n      const config = await fetchAutomationFileConfig(\n        this.hass,\n        this.automationId as string\n      );\n      this._dirty = false;\n      this._readOnly = false;\n      this._config = this._normalizeConfig(config);\n      this._checkValidation();\n    } catch (err: any) {\n      const entityRegistry = await fetchEntityRegistry(this.hass.connection);\n      const entity = entityRegistry.find(\n        (ent) =>\n          ent.platform === \"automation\" && ent.unique_id === this.automationId\n      );\n      if (entity) {\n        navigate(`/config/automation/show/${entity.entity_id}`, {\n          replace: true,\n        });\n        return;\n      }\n      await showAlertDialog(this, {\n        text:\n          err.status_code === 404\n            ? this.hass.localize(\n                \"ui.panel.config.automation.editor.load_error_not_editable\"\n              )\n            : this.hass.localize(\n                \"ui.panel.config.automation.editor.load_error_unknown\",\n                { err_no: err.status_code }\n              ),\n      });\n      history.back();\n    }\n  }\n\n  private _valueChanged(ev: CustomEvent<{ value: AutomationConfig }>) {\n    ev.stopPropagation();\n    this._config = ev.detail.value;\n    if (this._readOnly) {\n      return;\n    }\n    this._dirty = true;\n    this._errors = undefined;\n  }\n\n  private _showInfo() {\n    if (!this.hass || !this._entityId) {\n      return;\n    }\n    fireEvent(this, \"hass-more-info\", { entityId: this._entityId });\n  }\n\n  private async _showTrace() {\n    if (this._config?.id) {\n      const result = await this.confirmUnsavedChanged();\n      if (result) {\n        navigate(`/config/automation/trace/${this._config.id}`);\n      }\n    }\n  }\n\n  private _runActions() {\n    if (!this.hass || !this._entityId) {\n      return;\n    }\n    triggerAutomationActions(\n      this.hass,\n      this.hass.states[this._entityId].entity_id\n    );\n  }\n\n  private async _toggle(): Promise<void> {\n    if (!this.hass || !this._entityId) {\n      return;\n    }\n    const stateObj = this.hass.states[this._entityId];\n    const service = stateObj.state === \"off\" ? \"turn_on\" : \"turn_off\";\n    await this.hass.callService(\"automation\", service, {\n      entity_id: stateObj.entity_id,\n    });\n  }\n\n  private _preprocessYaml() {\n    if (!this._config) {\n      return {};\n    }\n    const cleanConfig: AutomationConfig = { ...this._config };\n    delete cleanConfig.id;\n    return cleanConfig;\n  }\n\n  private _yamlChanged(ev: CustomEvent) {\n    ev.stopPropagation();\n    if (!ev.detail.isValid) {\n      return;\n    }\n    this._config = { id: this._config?.id, ...ev.detail.value };\n    this._errors = undefined;\n    this._dirty = true;\n  }\n\n  private async confirmUnsavedChanged(): Promise<boolean> {\n    if (this._dirty) {\n      return showConfirmationDialog(this, {\n        title: this.hass!.localize(\n          \"ui.panel.config.automation.editor.unsaved_confirm_title\"\n        ),\n        text: this.hass!.localize(\n          \"ui.panel.config.automation.editor.unsaved_confirm_text\"\n        ),\n        confirmText: this.hass!.localize(\"ui.common.leave\"),\n        dismissText: this.hass!.localize(\"ui.common.stay\"),\n        destructive: true,\n      });\n    }\n    return true;\n  }\n\n  private _backTapped = async () => {\n    const result = await this.confirmUnsavedChanged();\n    if (result) {\n      afterNextRender(() => history.back());\n    }\n  };\n\n  private async _duplicate() {\n    const result = this._readOnly\n      ? await showConfirmationDialog(this, {\n          title: \"Migrate automation?\",\n          text: \"You can migrate this automation, so it can be edited from the UI. After it is migrated and you have saved it, you will have to manually delete your old automation from your configuration. Do you want to migrate this automation?\",\n        })\n      : await this.confirmUnsavedChanged();\n    if (result) {\n      showAutomationEditor({\n        ...this._config,\n        id: undefined,\n        alias: this._readOnly ? this._config?.alias : undefined,\n      });\n    }\n  }\n\n  private async _deleteConfirm() {\n    showConfirmationDialog(this, {\n      title: this.hass.localize(\n        \"ui.panel.config.automation.picker.delete_confirm_title\"\n      ),\n      text: this.hass.localize(\n        \"ui.panel.config.automation.picker.delete_confirm_text\",\n        { name: this._config?.alias }\n      ),\n      confirmText: this.hass!.localize(\"ui.common.delete\"),\n      destructive: true,\n      dismissText: this.hass!.localize(\"ui.common.cancel\"),\n      confirm: () => this._delete(),\n    });\n  }\n\n  private async _delete() {\n    if (this.automationId) {\n      await deleteAutomation(this.hass, this.automationId);\n      history.back();\n    }\n  }\n\n  private _switchUiMode() {\n    this._mode = \"gui\";\n  }\n\n  private _switchYamlMode() {\n    this._mode = \"yaml\";\n  }\n\n  private async _promptAutomationAlias(): Promise<boolean> {\n    return new Promise((resolve) => {\n      showAutomationRenameDialog(this, {\n        config: this._config!,\n        updateAutomation: (config) => {\n          this._config = config;\n          this._dirty = true;\n          this.requestUpdate();\n          resolve(true);\n        },\n        onClose: () => resolve(false),\n      });\n    });\n  }\n\n  private async _promptAutomationMode(): Promise<void> {\n    return new Promise((resolve) => {\n      showAutomationModeDialog(this, {\n        config: this._config!,\n        updateAutomation: (config) => {\n          this._config = config;\n          this._dirty = true;\n          this.requestUpdate();\n          resolve();\n        },\n        onClose: () => resolve(),\n      });\n    });\n  }\n\n  private async _saveAutomation(): Promise<void> {\n    const id = this.automationId || String(Date.now());\n    if (!this.automationId) {\n      const saved = await this._promptAutomationAlias();\n      if (!saved) {\n        return;\n      }\n    }\n\n    this._validationErrors = undefined;\n    try {\n      await saveAutomationConfig(this.hass, id, this._config!);\n    } catch (errors: any) {\n      this._errors = errors.body.message || errors.error || errors.body;\n      showToast(this, {\n        message: errors.body.message || errors.error || errors.body,\n      });\n      throw errors;\n    }\n\n    this._dirty = false;\n\n    if (!this.automationId) {\n      navigate(`/config/automation/edit/${id}`, { replace: true });\n    }\n  }\n\n  private _subscribeAutomationConfig(ev) {\n    const id = this._configSubscriptionsId++;\n    this._configSubscriptions[id] = ev.detail.callback;\n    ev.detail.unsub = () => {\n      delete this._configSubscriptions[id];\n    };\n    ev.detail.callback(this._config);\n  }\n\n  protected handleKeyboardSave() {\n    this._saveAutomation();\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyle,\n      css`\n        .content {\n          padding-bottom: 20px;\n        }\n        .yaml-mode {\n          height: 100%;\n          display: flex;\n          flex-direction: column;\n          padding-bottom: 0;\n        }\n        manual-automation-editor,\n        blueprint-automation-editor {\n          margin: 0 auto;\n          max-width: 1040px;\n          padding: 28px 20px 0;\n        }\n        ha-yaml-editor {\n          flex-grow: 1;\n          --actions-border-radius: 0;\n          --code-mirror-height: 100%;\n          min-height: 0;\n          display: flex;\n          flex-direction: column;\n        }\n        p {\n          margin-bottom: 0;\n        }\n        ha-entity-toggle {\n          margin-right: 8px;\n          margin-inline-end: 8px;\n          margin-inline-start: initial;\n        }\n        ha-fab {\n          position: relative;\n          bottom: calc(-80px - env(safe-area-inset-bottom));\n          transition: bottom 0.3s;\n        }\n        ha-fab.dirty {\n          bottom: 0;\n        }\n        .selected_menu_item {\n          color: var(--primary-color);\n        }\n        li[role=\"separator\"] {\n          border-bottom-color: var(--divider-color);\n        }\n        ha-button-menu a {\n          text-decoration: none;\n          color: var(--primary-color);\n        }\n        h1 {\n          margin: 0;\n        }\n        .header-name {\n          display: flex;\n          align-items: center;\n          margin: 0 auto;\n          max-width: 1040px;\n          padding: 28px 20px 0;\n        }\n      `,\n    ];\n  }\n}\n\ncustomElements.define(\"ha-automation-editor\", HaAutomationEditor);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}