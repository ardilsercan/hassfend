{"ast":null,"code":"import { fireEvent } from \"../common/dom/fire_event\";\n/** Panel to show when no panel is picked. */\nexport const DEFAULT_PANEL = \"lovelace\";\nexport const getStorageDefaultPanelUrlPath = () => localStorage.defaultPanel ? JSON.parse(localStorage.defaultPanel) : DEFAULT_PANEL;\nexport const setDefaultPanel = (element, urlPath) => {\n  fireEvent(element, \"hass-default-panel\", {\n    defaultPanel: urlPath\n  });\n};\nexport const getDefaultPanel = hass => hass.panels[hass.defaultPanel] ? hass.panels[hass.defaultPanel] : hass.panels[DEFAULT_PANEL];\nexport const getPanelNameTranslationKey = panel => {\n  if (panel.url_path === \"lovelace\") {\n    return \"panel.states\";\n  }\n  if (panel.url_path === \"profile\") {\n    return \"panel.profile\";\n  }\n  return `panel.${panel.title}`;\n};\nexport const getPanelTitle = hass => {\n  if (!hass.panels) {\n    return undefined;\n  }\n  const panel = Object.values(hass.panels).find(p => p.url_path === hass.panelUrl);\n  if (!panel) {\n    return undefined;\n  }\n  const translationKey = getPanelNameTranslationKey(panel);\n  return hass.localize(translationKey) || panel.title || undefined;\n};\nexport const getPanelIcon = panel => {\n  if (!panel.icon) {\n    switch (panel.component_name) {\n      case \"profile\":\n        return \"hass:account\";\n      case \"lovelace\":\n        return \"hass:view-dashboard\";\n    }\n  }\n  return panel.icon;\n};","map":{"version":3,"names":["fireEvent","DEFAULT_PANEL","getStorageDefaultPanelUrlPath","localStorage","defaultPanel","JSON","parse","setDefaultPanel","element","urlPath","getDefaultPanel","hass","panels","getPanelNameTranslationKey","panel","url_path","title","getPanelTitle","undefined","Object","values","find","p","panelUrl","translationKey","localize","getPanelIcon","icon","component_name"],"sources":["/Users/sercanardil/Desktop/frontend/src/data/panel.ts"],"sourcesContent":["import { fireEvent } from \"../common/dom/fire_event\";\nimport { HomeAssistant, PanelInfo } from \"../types\";\n\n/** Panel to show when no panel is picked. */\nexport const DEFAULT_PANEL = \"lovelace\";\n\nexport const getStorageDefaultPanelUrlPath = (): string =>\n  localStorage.defaultPanel\n    ? JSON.parse(localStorage.defaultPanel)\n    : DEFAULT_PANEL;\n\nexport const setDefaultPanel = (\n  element: HTMLElement,\n  urlPath: string\n): void => {\n  fireEvent(element, \"hass-default-panel\", { defaultPanel: urlPath });\n};\n\nexport const getDefaultPanel = (hass: HomeAssistant): PanelInfo =>\n  hass.panels[hass.defaultPanel]\n    ? hass.panels[hass.defaultPanel]\n    : hass.panels[DEFAULT_PANEL];\n\nexport const getPanelNameTranslationKey = (panel: PanelInfo) => {\n  if (panel.url_path === \"lovelace\") {\n    return \"panel.states\" as const;\n  }\n\n  if (panel.url_path === \"profile\") {\n    return \"panel.profile\" as const;\n  }\n\n  return `panel.${panel.title}` as const;\n};\n\nexport const getPanelTitle = (hass: HomeAssistant): string | undefined => {\n  if (!hass.panels) {\n    return undefined;\n  }\n\n  const panel = Object.values(hass.panels).find(\n    (p: PanelInfo): boolean => p.url_path === hass.panelUrl\n  );\n\n  if (!panel) {\n    return undefined;\n  }\n\n  const translationKey = getPanelNameTranslationKey(panel);\n\n  return hass.localize(translationKey) || panel.title || undefined;\n};\n\nexport const getPanelIcon = (panel: PanelInfo): string | null => {\n  if (!panel.icon) {\n    switch (panel.component_name) {\n      case \"profile\":\n        return \"hass:account\";\n      case \"lovelace\":\n        return \"hass:view-dashboard\";\n    }\n  }\n\n  return panel.icon;\n};\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,0BAA0B;AAGpD;AACA,OAAO,MAAMC,aAAa,GAAG,UAAU;AAEvC,OAAO,MAAMC,6BAA6B,GAAGA,CAAA,KAC3CC,YAAY,CAACC,YAAY,GACrBC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,YAAY,CAAC,GACrCH,aAAa;AAEnB,OAAO,MAAMM,eAAe,GAAGA,CAC7BC,OAAoB,EACpBC,OAAe,KACN;EACTT,SAAS,CAACQ,OAAO,EAAE,oBAAoB,EAAE;IAAEJ,YAAY,EAAEK;EAAQ,CAAC,CAAC;AACrE,CAAC;AAED,OAAO,MAAMC,eAAe,GAAIC,IAAmB,IACjDA,IAAI,CAACC,MAAM,CAACD,IAAI,CAACP,YAAY,CAAC,GAC1BO,IAAI,CAACC,MAAM,CAACD,IAAI,CAACP,YAAY,CAAC,GAC9BO,IAAI,CAACC,MAAM,CAACX,aAAa,CAAC;AAEhC,OAAO,MAAMY,0BAA0B,GAAIC,KAAgB,IAAK;EAC9D,IAAIA,KAAK,CAACC,QAAQ,KAAK,UAAU,EAAE;IACjC,OAAO,cAAc;EACvB;EAEA,IAAID,KAAK,CAACC,QAAQ,KAAK,SAAS,EAAE;IAChC,OAAO,eAAe;EACxB;EAEA,OAAQ,SAAQD,KAAK,CAACE,KAAM,EAAC;AAC/B,CAAC;AAED,OAAO,MAAMC,aAAa,GAAIN,IAAmB,IAAyB;EACxE,IAAI,CAACA,IAAI,CAACC,MAAM,EAAE;IAChB,OAAOM,SAAS;EAClB;EAEA,MAAMJ,KAAK,GAAGK,MAAM,CAACC,MAAM,CAACT,IAAI,CAACC,MAAM,CAAC,CAACS,IAAI,CAC1CC,CAAY,IAAcA,CAAC,CAACP,QAAQ,KAAKJ,IAAI,CAACY,QACjD,CAAC;EAED,IAAI,CAACT,KAAK,EAAE;IACV,OAAOI,SAAS;EAClB;EAEA,MAAMM,cAAc,GAAGX,0BAA0B,CAACC,KAAK,CAAC;EAExD,OAAOH,IAAI,CAACc,QAAQ,CAACD,cAAc,CAAC,IAAIV,KAAK,CAACE,KAAK,IAAIE,SAAS;AAClE,CAAC;AAED,OAAO,MAAMQ,YAAY,GAAIZ,KAAgB,IAAoB;EAC/D,IAAI,CAACA,KAAK,CAACa,IAAI,EAAE;IACf,QAAQb,KAAK,CAACc,cAAc;MAC1B,KAAK,SAAS;QACZ,OAAO,cAAc;MACvB,KAAK,UAAU;QACb,OAAO,qBAAqB;IAChC;EACF;EAEA,OAAOd,KAAK,CAACa,IAAI;AACnB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}