{"ast":null,"code":"import _createForOfIteratorHelper from \"@babel/runtime/helpers/createForOfIteratorHelper\";\nimport _regeneratorRuntime from \"@babel/runtime/helpers/regeneratorRuntime\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10, _templateObject11, _templateObject12, _templateObject13, _templateObject14, _templateObject15, _templateObject16, _templateObject17, _templateObject18, _templateObject19, _templateObject20, _templateObject21;\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.object.values.js\";\nimport \"core-js/modules/es.parse-int.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"@material/mwc-button\";\nvar mdiDeleteOutline = \"M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19M8,9H16V19H8V9M15.5,4L14.5,3H9.5L8.5,4H5V6H19V4H15.5Z\";\nvar mdiDevices = \"M3 6H21V4H3C1.9 4 1 4.9 1 6V18C1 19.1 1.9 20 3 20H7V18H3V6M13 12H9V13.78C8.39 14.33 8 15.11 8 16C8 16.89 8.39 17.67 9 18.22V20H13V18.22C13.61 17.67 14 16.88 14 16S13.61 14.33 13 13.78V12M11 17.5C10.17 17.5 9.5 16.83 9.5 16S10.17 14.5 11 14.5 12.5 15.17 12.5 16 11.83 17.5 11 17.5M22 8H16C15.5 8 15 8.5 15 9V19C15 19.5 15.5 20 16 20H22C22.5 20 23 19.5 23 19V9C23 8.5 22.5 8 22 8M21 18H17V10H21V18Z\";\nvar mdiDotsVertical = \"M12,16A2,2 0 0,1 14,18A2,2 0 0,1 12,20A2,2 0 0,1 10,18A2,2 0 0,1 12,16M12,10A2,2 0 0,1 14,12A2,2 0 0,1 12,14A2,2 0 0,1 10,12A2,2 0 0,1 12,10M12,4A2,2 0 0,1 14,6A2,2 0 0,1 12,8A2,2 0 0,1 10,6A2,2 0 0,1 12,4Z\";\nvar mdiInformationOutline = \"M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M11,17H13V11H11V17Z\";\nvar mdiCellphoneKey = \"M7 1C5.9 1 5 1.9 5 3V7H7V4H17V20H7V17H5V21C5 22.1 5.9 23 7 23H17C18.1 23 19 22.1 19 21V3C19 1.9 18.1 1 17 1H7M6 9C4.3 9 3 10.3 3 12S4.3 15 6 15C7.3 15 8.4 14.2 8.8 13H11V15H13V13H15V11H8.8C8.4 9.8 7.3 9 6 9M6 11C6.6 11 7 11.4 7 12S6.6 13 6 13 5 12.6 5 12 5.4 11 6 11Z\";\nimport { LitElement, css, html, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { isComponentLoaded } from \"../../../../../common/config/is_component_loaded\";\nimport { stringCompare } from \"../../../../../common/string/compare\";\nimport { extractSearchParam } from \"../../../../../common/url/search-params\";\nimport \"../../../../../components/ha-button-menu\";\nimport \"../../../../../components/ha-list-item\";\nimport \"../../../../../components/ha-card\";\nimport { getSignedPath } from \"../../../../../data/auth\";\nimport { getConfigEntryDiagnosticsDownloadUrl } from \"../../../../../data/diagnostics\";\nimport { OTBRCreateNetwork, OTBRSetChannel, OTBRSetNetwork, getOTBRInfo } from \"../../../../../data/otbr\";\nimport { addThreadDataSet, listThreadDataSets, removeThreadDataSet, setPreferredBorderAgent, setPreferredThreadDataSet, subscribeDiscoverThreadRouters } from \"../../../../../data/thread\";\nimport { showConfigFlowDialog } from \"../../../../../dialogs/config-flow/show-dialog-config-flow\";\nimport { showAlertDialog, showConfirmationDialog, showPromptDialog } from \"../../../../../dialogs/generic/show-dialog-box\";\nimport \"../../../../../layouts/hass-subpage\";\nimport { SubscribeMixin } from \"../../../../../mixins/subscribe-mixin\";\nimport { haStyle } from \"../../../../../resources/styles\";\nimport { brandsUrl } from \"../../../../../util/brands-url\";\nimport { fileDownload } from \"../../../../../util/file_download\";\nexport var ThreadConfigPanel = _decorate([customElement(\"thread-config-panel\")], function (_initialize, _SubscribeMixin) {\n  var ThreadConfigPanel = /*#__PURE__*/function (_SubscribeMixin2) {\n    _inherits(ThreadConfigPanel, _SubscribeMixin2);\n    function ThreadConfigPanel() {\n      var _this;\n      _classCallCheck(this, ThreadConfigPanel);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, ThreadConfigPanel, [].concat(args));\n      _initialize(_assertThisInitialized(_this));\n      return _this;\n    }\n    return _createClass(ThreadConfigPanel);\n  }(_SubscribeMixin);\n  return {\n    F: ThreadConfigPanel,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"narrow\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_configEntryId\",\n      value: function value() {\n        return null;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_routers\",\n      value: function value() {\n        return [];\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_datasets\",\n      value: function value() {\n        return [];\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_otbrInfo\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var _this2 = this,\n          _this$hass$auth$exter;\n        var networks = this._groupRoutersByNetwork(this._routers, this._datasets);\n        return html(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      <hass-subpage .narrow=\", \" .hass=\", \" header=\\\"Thread\\\">\\n        <ha-button-menu slot=\\\"toolbar-icon\\\">\\n          <ha-icon-button\\n            .path=\", \"\\n            slot=\\\"trigger\\\"\\n          ></ha-icon-button>\\n          <a\\n            href=\", \"\\n            target=\\\"_blank\\\"\\n            @click=\", \"\\n          >\\n            <mwc-list-item>\\n              \", \"\\n            </mwc-list-item>\\n          </a>\\n          <mwc-list-item @click=\", \"\\n            >\", \"</mwc-list-item\\n          >\\n          \", \"\\n        </ha-button-menu>\\n        <div class=\\\"content\\\">\\n          <h1>\", \"</h1>\\n          \", \"\\n          \", \"\\n        </div>\\n        \", \"\\n      </hass-subpage>\\n    \"])), this.narrow, this.hass, mdiDotsVertical, getConfigEntryDiagnosticsDownloadUrl(this._configEntryId || \"\"), this._signUrl, this.hass.localize(\"ui.panel.config.integrations.config_entry.download_diagnostics\"), this._addTLV, this.hass.localize(\"ui.panel.config.thread.add_dataset_from_tlv\"), !this._otbrInfo ? html(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"<mwc-list-item @click=\", \"\\n                >\", \"</mwc-list-item\\n              >\"])), this._addOTBR, this.hass.localize(\"ui.panel.config.thread.add_open_thread_border_router\")) : \"\", this.hass.localize(\"ui.panel.config.thread.my_network\"), networks.preferred ? this._renderNetwork(networks.preferred) : html(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"<ha-card>\\n                <div class=\\\"card-content no-routers\\\">\\n                  <h3>\\n                    \", \"\\n                  </h3>\\n                  <ha-svg-icon .path=\", \"></ha-svg-icon>\\n                  <mwc-button @click=\", \"\\n                    >\", \"</mwc-button\\n                  >\\n                </div>\\n              </ha-card>\"])), this.hass.localize(\"ui.panel.config.thread.no_preferred_network\"), mdiDevices, this._addOTBR, this.hass.localize(\"ui.panel.config.thread.add_open_thread_border_router\")), networks.networks.length ? html(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"<h3>\\n                  \", \"\\n                </h3>\\n                \", \"\"])), this.hass.localize(\"ui.panel.config.thread.other_networks\"), networks.networks.map(function (network) {\n          return _this2._renderNetwork(network);\n        })) : \"\", (_this$hass$auth$exter = this.hass.auth.external) !== null && _this$hass$auth$exter !== void 0 && _this$hass$auth$exter.config.canImportThreadCredentials ? html(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"<ha-fab\\n              slot=\\\"fab\\\"\\n              @click=\", \"\\n              extended\\n              label=\\\"Import credentials\\\"\\n              ><ha-svg-icon slot=\\\"icon\\\" .path=\", \"></ha-svg-icon\\n            ></ha-fab>\"])), this._importExternalThreadCredentials, mdiCellphoneKey) : nothing);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_renderNetwork\",\n      value: function _renderNetwork(network) {\n        var _network$routers,\n          _network$routers2,\n          _this3 = this,\n          _network$dataset2,\n          _this$_otbrInfo;\n        return html(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"<ha-card>\\n      <div class=\\\"card-header\\\">\\n        \", \"\", \"\\n      </div>\\n      \", \"\\n      \", \"\\n    </ha-card>\"])), network.name, network.dataset ? html(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral([\"<div>\\n              <ha-icon-button\\n                .networkDataset=\", \"\\n                .path=\", \"\\n                @click=\", \"\\n              ></ha-icon-button\\n              >\", \"\\n            </div>\"])), network.dataset, mdiInformationOutline, this._showDatasetInfo, !network.dataset.preferred && !((_network$routers = network.routers) !== null && _network$routers !== void 0 && _network$routers.length) ? html(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral([\"<ha-icon-button\\n                    .networkDataset=\", \"\\n                    .path=\", \"\\n                    @click=\", \"\\n                  ></ha-icon-button>\"])), network.dataset, mdiDeleteOutline, this._removeDataset) : \"\") : \"\", (_network$routers2 = network.routers) !== null && _network$routers2 !== void 0 && _network$routers2.length ? html(_templateObject9 || (_templateObject9 = _taggedTemplateLiteral([\"<div class=\\\"card-content routers\\\">\\n              <h4>\\n                \", \"\\n              </h4>\\n            </div>\\n            \", \"\"])), this.hass.localize(\"ui.panel.config.thread.border_routers\", {\n          count: network.routers.length\n        }), network.routers.map(function (router) {\n          var _this3$_otbrInfo, _this3$hass$themes, _router$server, _this3$_otbrInfo2, _network$dataset;\n          var showOverflow = \"dataset\" in network && router.border_agent_id || router.extended_address === ((_this3$_otbrInfo = _this3._otbrInfo) === null || _this3$_otbrInfo === void 0 ? void 0 : _this3$_otbrInfo.extended_address);\n          return html(_templateObject10 || (_templateObject10 = _taggedTemplateLiteral([\"<ha-list-item\\n                class=\\\"router\\\"\\n                twoline\\n                graphic=\\\"avatar\\\"\\n                .hasMeta=\", \"\\n              >\\n                <img\\n                  slot=\\\"graphic\\\"\\n                  .src=\", \"\\n                  alt=\", \"\\n                  crossorigin=\\\"anonymous\\\"\\n                  referrerpolicy=\\\"no-referrer\\\"\\n                  @error=\", \"\\n                  @load=\", \"\\n                />\\n                \", \"\\n                <span slot=\\\"secondary\\\">\", \"</span>\\n                \", \"\\n              </ha-list-item>\"])), showOverflow, brandsUrl({\n            domain: router.brand,\n            brand: true,\n            type: \"icon\",\n            darkOptimized: (_this3$hass$themes = _this3.hass.themes) === null || _this3$hass$themes === void 0 ? void 0 : _this3$hass$themes.darkMode\n          }), router.brand, _this3._onImageError, _this3._onImageLoad, router.model_name || ((_router$server = router.server) === null || _router$server === void 0 ? void 0 : _router$server.replace(\".local.\", \"\")) || \"\", router.server, showOverflow ? html(_templateObject11 || (_templateObject11 = _taggedTemplateLiteral([\"\", \"\\n                      <ha-button-menu\\n                        slot=\\\"meta\\\"\\n                        .network=\", \"\\n                        .router=\", \"\\n                        @action=\", \"\\n                      >\\n                        <ha-icon-button\\n                          .label=\", \"\\n                          .path=\", \"\\n                          slot=\\\"trigger\\\"\\n                        ></ha-icon-button>\\n                        \", \"\\n                        \", \"\\n                      </ha-button-menu>\"])), network.dataset && router.extended_address === network.dataset.preferred_extended_address ? html(_templateObject12 || (_templateObject12 = _taggedTemplateLiteral([\"<ha-svg-icon\\n                            .path=\", \"\\n                            .title=\", \"\\n                          ></ha-svg-icon>\"])), mdiCellphoneKey, _this3.hass.localize(\"ui.panel.config.thread.default_router\")) : \"\", network, router, _this3._handleRouterAction, _this3.hass.localize(\"ui.common.overflow_menu\"), mdiDotsVertical, network.dataset && router.border_agent_id ? html(_templateObject13 || (_templateObject13 = _taggedTemplateLiteral([\"<ha-list-item\\n                              .disabled=\", \"\\n                            >\\n                              \", \"\\n                            </ha-list-item>\"])), router.border_agent_id === network.dataset.preferred_border_agent_id, router.border_agent_id === network.dataset.preferred_border_agent_id ? _this3.hass.localize(\"ui.panel.config.thread.default_router\") : _this3.hass.localize(\"ui.panel.config.thread.set_default_router\")) : \"\", router.extended_address === ((_this3$_otbrInfo2 = _this3._otbrInfo) === null || _this3$_otbrInfo2 === void 0 ? void 0 : _this3$_otbrInfo2.extended_address) ? html(_templateObject14 || (_templateObject14 = _taggedTemplateLiteral([\"<ha-list-item>\\n                                \", \"</ha-list-item\\n                              >\\n                              <ha-list-item>\\n                                \", \"</ha-list-item\\n                              >\\n                              \", \"\"])), _this3.hass.localize(\"ui.panel.config.thread.reset_border_router\"), _this3.hass.localize(\"ui.panel.config.thread.change_channel\"), (_network$dataset = network.dataset) !== null && _network$dataset !== void 0 && _network$dataset.preferred ? \"\" : html(_templateObject15 || (_templateObject15 = _taggedTemplateLiteral([\"<ha-list-item>\\n                                    \", \"\\n                                  </ha-list-item>\"])), _this3.hass.localize(\"ui.panel.config.thread.add_to_my_network\"))) : \"\") : \"\");\n        })) : html(_templateObject16 || (_templateObject16 = _taggedTemplateLiteral([\"<div class=\\\"card-content no-routers\\\">\\n            <ha-svg-icon .path=\", \"></ha-svg-icon>\\n            \", \"\\n          </div> \"])), mdiDevices, (_network$dataset2 = network.dataset) !== null && _network$dataset2 !== void 0 && _network$dataset2.extended_pan_id && (_this$_otbrInfo = this._otbrInfo) !== null && _this$_otbrInfo !== void 0 && (_this$_otbrInfo = _this$_otbrInfo.active_dataset_tlvs) !== null && _this$_otbrInfo !== void 0 && _this$_otbrInfo.includes(network.dataset.extended_pan_id) ? html(_templateObject17 || (_templateObject17 = _taggedTemplateLiteral([\"\", \"\\n                  <mwc-button @click=\", \"\\n                    >\", \"</mwc-button\\n                  >\"])), this.hass.localize(\"ui.panel.config.thread.no_routers_otbr_network\"), this._resetBorderRouter, this.hass.localize(\"ui.panel.config.thread.reset_border_router\")) : this.hass.localize(\"ui.panel.config.thread.no_border_routers\")), network.dataset && !network.dataset.preferred ? html(_templateObject18 || (_templateObject18 = _taggedTemplateLiteral([\"<div class=\\\"card-actions\\\">\\n            <mwc-button\\n              .datasetId=\", \"\\n              @click=\", \"\\n              >Make preferred network</mwc-button\\n            >\\n          </div>\"])), network.dataset.dataset_id, this._setPreferred) : \"\");\n      }\n    }, {\n      kind: \"method\",\n      key: \"_showDatasetInfo\",\n      value: function () {\n        var _showDatasetInfo2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(ev) {\n          var dataset, _this$_otbrInfo$activ;\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                dataset = ev.currentTarget.networkDataset;\n                if (!this._otbrInfo) {\n                  _context.next = 5;\n                  break;\n                }\n                if (!(dataset.extended_pan_id && (_this$_otbrInfo$activ = this._otbrInfo.active_dataset_tlvs) !== null && _this$_otbrInfo$activ !== void 0 && _this$_otbrInfo$activ.includes(dataset.extended_pan_id))) {\n                  _context.next = 5;\n                  break;\n                }\n                showAlertDialog(this, {\n                  title: dataset.network_name,\n                  text: html(_templateObject19 || (_templateObject19 = _taggedTemplateLiteral([\"Network name: \", \"<br />\\n            Channel: \", \"<br />\\n            Dataset id: \", \"<br />\\n            Pan id: \", \"<br />\\n            Extended Pan id: \", \"<br />\\n            OTBR URL: \", \"<br />\\n            Active dataset TLVs: \", \"\"])), dataset.network_name, dataset.channel, dataset.dataset_id, dataset.pan_id, dataset.extended_pan_id, this._otbrInfo.url, this._otbrInfo.active_dataset_tlvs)\n                });\n                return _context.abrupt(\"return\");\n              case 5:\n                showAlertDialog(this, {\n                  title: dataset.network_name,\n                  text: html(_templateObject20 || (_templateObject20 = _taggedTemplateLiteral([\"Network name: \", \"<br />\\n        Channel: \", \"<br />\\n        Dataset id: \", \"<br />\\n        Pan id: \", \"<br />\\n        Extended Pan id: \", \"\"])), dataset.network_name, dataset.channel, dataset.dataset_id, dataset.pan_id, dataset.extended_pan_id)\n                });\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee, this);\n        }));\n        function _showDatasetInfo(_x) {\n          return _showDatasetInfo2.apply(this, arguments);\n        }\n        return _showDatasetInfo;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"_importExternalThreadCredentials\",\n      value: function _importExternalThreadCredentials() {\n        this.hass.auth.external.fireMessage({\n          type: \"thread/import_credentials\"\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_onImageError\",\n      value: function _onImageError(ev) {\n        ev.target.style.display = \"none\";\n      }\n    }, {\n      kind: \"method\",\n      key: \"_onImageLoad\",\n      value: function _onImageLoad(ev) {\n        ev.target.style.display = \"\";\n      }\n    }, {\n      kind: \"method\",\n      key: \"hassSubscribe\",\n      value: function hassSubscribe() {\n        var _this4 = this;\n        return [subscribeDiscoverThreadRouters(this.hass, function (routers) {\n          _this4._routers = routers;\n        })];\n      }\n    }, {\n      kind: \"method\",\n      key: \"firstUpdated\",\n      value: function firstUpdated(changedProps) {\n        _get(_getPrototypeOf(ThreadConfigPanel.prototype), \"firstUpdated\", this).call(this, changedProps);\n        this._refresh();\n        this._configEntryId = extractSearchParam(\"config_entry\");\n      }\n    }, {\n      kind: \"field\",\n      key: \"_groupRoutersByNetwork\",\n      value: function value() {\n        var _this5 = this;\n        return memoizeOne(function (routers, datasets) {\n          var preferred;\n          var networks = {};\n          var _iterator = _createForOfIteratorHelper(routers),\n            _step;\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var router = _step.value;\n              var network = router.extended_pan_id;\n              if (network in networks) {\n                networks[network].routers.push(router);\n              } else {\n                networks[network] = {\n                  name: router.network_name || \"\",\n                  routers: [router]\n                };\n              }\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n          var _iterator2 = _createForOfIteratorHelper(datasets),\n            _step2;\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var dataset = _step2.value;\n              var _network = dataset.extended_pan_id;\n              if (!_network) {\n                continue;\n              }\n              if (dataset.preferred) {\n                var _networks$_network;\n                preferred = {\n                  name: dataset.network_name,\n                  dataset: dataset,\n                  routers: (_networks$_network = networks[_network]) === null || _networks$_network === void 0 ? void 0 : _networks$_network.routers\n                };\n                delete networks[_network];\n                continue;\n              }\n              if (_network in networks) {\n                networks[_network].dataset = dataset;\n              } else {\n                networks[_network] = {\n                  name: dataset.network_name,\n                  dataset: dataset\n                };\n              }\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n          return {\n            preferred: preferred,\n            networks: Object.values(networks).sort(function (a, b) {\n              return stringCompare(a.name, b.name, _this5.hass.locale.language);\n            })\n          };\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_refresh\",\n      value: function () {\n        var _refresh2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n          var _this6 = this;\n          return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n            while (1) switch (_context2.prev = _context2.next) {\n              case 0:\n                listThreadDataSets(this.hass).then(function (datasets) {\n                  _this6._datasets = datasets.datasets;\n                });\n                if (isComponentLoaded(this.hass, \"otbr\")) {\n                  _context2.next = 3;\n                  break;\n                }\n                return _context2.abrupt(\"return\");\n              case 3:\n                _context2.prev = 3;\n                _context2.next = 6;\n                return getOTBRInfo(this.hass);\n              case 6:\n                this._otbrInfo = _context2.sent;\n                _context2.next = 12;\n                break;\n              case 9:\n                _context2.prev = 9;\n                _context2.t0 = _context2[\"catch\"](3);\n                this._otbrInfo = undefined;\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }, _callee2, this, [[3, 9]]);\n        }));\n        function _refresh() {\n          return _refresh2.apply(this, arguments);\n        }\n        return _refresh;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"_signUrl\",\n      value: function () {\n        var _signUrl2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(ev) {\n          var anchor, signedUrl;\n          return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n            while (1) switch (_context3.prev = _context3.next) {\n              case 0:\n                anchor = ev.target.closest(\"a\");\n                ev.preventDefault();\n                _context3.next = 4;\n                return getSignedPath(this.hass, anchor.getAttribute(\"href\"));\n              case 4:\n                signedUrl = _context3.sent;\n                fileDownload(signedUrl.path);\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }, _callee3, this);\n        }));\n        function _signUrl(_x2) {\n          return _signUrl2.apply(this, arguments);\n        }\n        return _signUrl;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"_addOTBR\",\n      value: function _addOTBR() {\n        var _this7 = this,\n          _this$hass$userData;\n        showConfigFlowDialog(this, {\n          dialogClosedCallback: function dialogClosedCallback() {\n            _this7._refresh();\n          },\n          startFlowHandler: \"otbr\",\n          showAdvanced: (_this$hass$userData = this.hass.userData) === null || _this$hass$userData === void 0 ? void 0 : _this$hass$userData.showAdvanced\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleRouterAction\",\n      value: function _handleRouterAction(ev) {\n        var network = ev.currentTarget.network;\n        var router = ev.currentTarget.router;\n        var index = network.dataset && router.border_agent_id ? Number(ev.detail.index) : Number(ev.detail.index) + 1;\n        switch (index) {\n          case 0:\n            this._setPreferredBorderAgent(network.dataset, router);\n            break;\n          case 1:\n            this._resetBorderRouter();\n            break;\n          case 2:\n            this._changeChannel();\n            break;\n          case 3:\n            this._setDataset();\n            break;\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_resetBorderRouter\",\n      value: function () {\n        var _resetBorderRouter2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n          var confirm;\n          return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n            while (1) switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return showConfirmationDialog(this, {\n                  title: this.hass.localize(\"ui.panel.config.thread.confirm_reset_border_router\"),\n                  text: this.hass.localize(\"ui.panel.config.thread.confirm_reset_border_router_text\")\n                });\n              case 2:\n                confirm = _context4.sent;\n                if (confirm) {\n                  _context4.next = 5;\n                  break;\n                }\n                return _context4.abrupt(\"return\");\n              case 5:\n                _context4.prev = 5;\n                _context4.next = 8;\n                return OTBRCreateNetwork(this.hass);\n              case 8:\n                _context4.next = 13;\n                break;\n              case 10:\n                _context4.prev = 10;\n                _context4.t0 = _context4[\"catch\"](5);\n                showAlertDialog(this, {\n                  title: this.hass.localize(\"ui.panel.config.thread.otbr_config_failed\"),\n                  text: _context4.t0.message\n                });\n              case 13:\n                this._refresh();\n              case 14:\n              case \"end\":\n                return _context4.stop();\n            }\n          }, _callee4, this, [[5, 10]]);\n        }));\n        function _resetBorderRouter() {\n          return _resetBorderRouter2.apply(this, arguments);\n        }\n        return _resetBorderRouter;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"_setDataset\",\n      value: function () {\n        var _setDataset2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n          var _networks$preferred;\n          var networks, preferedDatasetId, confirm;\n          return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n            while (1) switch (_context5.prev = _context5.next) {\n              case 0:\n                networks = this._groupRoutersByNetwork(this._routers, this._datasets);\n                preferedDatasetId = (_networks$preferred = networks.preferred) === null || _networks$preferred === void 0 || (_networks$preferred = _networks$preferred.dataset) === null || _networks$preferred === void 0 ? void 0 : _networks$preferred.dataset_id;\n                if (preferedDatasetId) {\n                  _context5.next = 4;\n                  break;\n                }\n                return _context5.abrupt(\"return\");\n              case 4:\n                _context5.next = 6;\n                return showConfirmationDialog(this, {\n                  title: this.hass.localize(\"ui.panel.config.thread.confirm_set_dataset_border_router\"),\n                  text: this.hass.localize(\"ui.panel.config.thread.confirm_set_dataset_border_router_text\")\n                });\n              case 6:\n                confirm = _context5.sent;\n                if (confirm) {\n                  _context5.next = 9;\n                  break;\n                }\n                return _context5.abrupt(\"return\");\n              case 9:\n                _context5.prev = 9;\n                _context5.next = 12;\n                return OTBRSetNetwork(this.hass, preferedDatasetId);\n              case 12:\n                _context5.next = 17;\n                break;\n              case 14:\n                _context5.prev = 14;\n                _context5.t0 = _context5[\"catch\"](9);\n                showAlertDialog(this, {\n                  title: this.hass.localize(\"ui.panel.config.thread.otbr_config_failed\"),\n                  text: _context5.t0.message\n                });\n              case 17:\n                this._refresh();\n              case 18:\n              case \"end\":\n                return _context5.stop();\n            }\n          }, _callee5, this, [[9, 14]]);\n        }));\n        function _setDataset() {\n          return _setDataset2.apply(this, arguments);\n        }\n        return _setDataset;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"_setPreferred\",\n      value: function () {\n        var _setPreferred2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(ev) {\n          var datasetId;\n          return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n            while (1) switch (_context6.prev = _context6.next) {\n              case 0:\n                datasetId = ev.target.datasetId;\n                _context6.next = 3;\n                return setPreferredThreadDataSet(this.hass, datasetId);\n              case 3:\n                this._refresh();\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }, _callee6, this);\n        }));\n        function _setPreferred(_x3) {\n          return _setPreferred2.apply(this, arguments);\n        }\n        return _setPreferred;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"_setPreferredBorderAgent\",\n      value: function () {\n        var _setPreferredBorderAgent2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(dataset, router) {\n          return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n            while (1) switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return setPreferredBorderAgent(this.hass, dataset.dataset_id, router.border_agent_id, router.extended_address);\n              case 2:\n                this._refresh();\n              case 3:\n              case \"end\":\n                return _context7.stop();\n            }\n          }, _callee7, this);\n        }));\n        function _setPreferredBorderAgent(_x4, _x5) {\n          return _setPreferredBorderAgent2.apply(this, arguments);\n        }\n        return _setPreferredBorderAgent;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"_addTLV\",\n      value: function () {\n        var _addTLV2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n          var tlv;\n          return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n            while (1) switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return showPromptDialog(this, {\n                  title: this.hass.localize(\"ui.panel.config.thread.add_dataset\"),\n                  inputLabel: this.hass.localize(\"ui.panel.config.thread.add_dataset_label\"),\n                  confirmText: this.hass.localize(\"ui.panel.config.thread.add_dataset_button\")\n                });\n              case 2:\n                tlv = _context8.sent;\n                if (tlv) {\n                  _context8.next = 5;\n                  break;\n                }\n                return _context8.abrupt(\"return\");\n              case 5:\n                _context8.prev = 5;\n                _context8.next = 8;\n                return addThreadDataSet(this.hass, \"manual\", tlv);\n              case 8:\n                _context8.next = 13;\n                break;\n              case 10:\n                _context8.prev = 10;\n                _context8.t0 = _context8[\"catch\"](5);\n                showAlertDialog(this, {\n                  title: \"Error\",\n                  text: _context8.t0.message || _context8.t0\n                });\n              case 13:\n                this._refresh();\n              case 14:\n              case \"end\":\n                return _context8.stop();\n            }\n          }, _callee8, this, [[5, 10]]);\n        }));\n        function _addTLV() {\n          return _addTLV2.apply(this, arguments);\n        }\n        return _addTLV;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"_removeDataset\",\n      value: function () {\n        var _removeDataset2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(ev) {\n          var dataset, confirm;\n          return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n            while (1) switch (_context9.prev = _context9.next) {\n              case 0:\n                dataset = ev.currentTarget.networkDataset;\n                _context9.next = 3;\n                return showConfirmationDialog(this, {\n                  title: this.hass.localize(\"ui.panel.config.thread.confirm_delete_dataset\", {\n                    name: dataset.network_name\n                  }),\n                  text: this.hass.localize(\"ui.panel.config.thread.confirm_delete_dataset_text\"),\n                  destructive: true,\n                  confirmText: this.hass.localize(\"ui.common.delete\")\n                });\n              case 3:\n                confirm = _context9.sent;\n                if (confirm) {\n                  _context9.next = 6;\n                  break;\n                }\n                return _context9.abrupt(\"return\");\n              case 6:\n                _context9.prev = 6;\n                _context9.next = 9;\n                return removeThreadDataSet(this.hass, dataset.dataset_id);\n              case 9:\n                _context9.next = 14;\n                break;\n              case 11:\n                _context9.prev = 11;\n                _context9.t0 = _context9[\"catch\"](6);\n                showAlertDialog(this, {\n                  title: \"Error\",\n                  text: _context9.t0.message || _context9.t0\n                });\n              case 14:\n                this._refresh();\n              case 15:\n              case \"end\":\n                return _context9.stop();\n            }\n          }, _callee9, this, [[6, 11]]);\n        }));\n        function _removeDataset(_x6) {\n          return _removeDataset2.apply(this, arguments);\n        }\n        return _removeDataset;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"_changeChannel\",\n      value: function () {\n        var _changeChannel2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10() {\n          var _this$_otbrInfo2;\n          var currentChannel, channelStr, channel, result;\n          return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n            while (1) switch (_context10.prev = _context10.next) {\n              case 0:\n                currentChannel = (_this$_otbrInfo2 = this._otbrInfo) === null || _this$_otbrInfo2 === void 0 ? void 0 : _this$_otbrInfo2.channel;\n                _context10.next = 3;\n                return showPromptDialog(this, {\n                  title: this.hass.localize(\"ui.panel.config.thread.change_channel\"),\n                  text: this.hass.localize(\"ui.panel.config.thread.change_channel_text\"),\n                  inputLabel: this.hass.localize(\"ui.panel.config.thread.change_channel_label\"),\n                  confirmText: this.hass.localize(\"ui.panel.config.thread.change_channel\"),\n                  inputType: \"number\",\n                  inputMin: \"11\",\n                  inputMax: \"26\",\n                  defaultValue: currentChannel ? currentChannel.toString() : undefined\n                });\n              case 3:\n                channelStr = _context10.sent;\n                if (channelStr) {\n                  _context10.next = 6;\n                  break;\n                }\n                return _context10.abrupt(\"return\");\n              case 6:\n                channel = parseInt(channelStr);\n                if (!(channel < 11 || channel > 26)) {\n                  _context10.next = 10;\n                  break;\n                }\n                showAlertDialog(this, {\n                  title: this.hass.localize(\"ui.panel.config.thread.change_channel_invalid\"),\n                  text: this.hass.localize(\"ui.panel.config.thread.change_channel_range\")\n                });\n                return _context10.abrupt(\"return\");\n              case 10:\n                _context10.prev = 10;\n                _context10.next = 13;\n                return OTBRSetChannel(this.hass, channel);\n              case 13:\n                result = _context10.sent;\n                showAlertDialog(this, {\n                  title: this.hass.localize(\"ui.panel.config.thread.change_channel_initiated_title\"),\n                  text: this.hass.localize(\"ui.panel.config.thread.change_channel_initiated_text\", {\n                    delay: Math.floor(result.delay / 60)\n                  })\n                });\n                _context10.next = 23;\n                break;\n              case 17:\n                _context10.prev = 17;\n                _context10.t0 = _context10[\"catch\"](10);\n                if (!(_context10.t0.code === \"multiprotocol_enabled\")) {\n                  _context10.next = 22;\n                  break;\n                }\n                showAlertDialog(this, {\n                  title: this.hass.localize(\"ui.panel.config.thread.change_channel_multiprotocol_enabled_title\"),\n                  text: this.hass.localize(\"ui.panel.config.thread.change_channel_multiprotocol_enabled_text\")\n                });\n                return _context10.abrupt(\"return\");\n              case 22:\n                showAlertDialog(this, {\n                  title: \"Error\",\n                  text: _context10.t0.message || _context10.t0\n                });\n              case 23:\n                this._refresh();\n              case 24:\n              case \"end\":\n                return _context10.stop();\n            }\n          }, _callee10, this, [[10, 17]]);\n        }));\n        function _changeChannel() {\n          return _changeChannel2.apply(this, arguments);\n        }\n        return _changeChannel;\n      }()\n    }, {\n      kind: \"field\",\n      static: true,\n      key: \"styles\",\n      value: function value() {\n        return [haStyle, css(_templateObject21 || (_templateObject21 = _taggedTemplateLiteral([\"\\n      .content {\\n        padding: 24px 8px 32px;\\n        max-width: 600px;\\n        margin: 0 auto;\\n        direction: ltr;\\n      }\\n      ha-list-item.router {\\n        --mdc-list-item-meta-size: auto;\\n        --mdc-list-item-meta-display: flex;\\n        --mdc-list-side-padding: 16px;\\n        cursor: default;\\n        overflow: visible;\\n      }\\n      ha-list-item img {\\n        border-radius: 0;\\n      }\\n      ha-svg-icon[slot=\\\"meta\\\"] {\\n        width: 24px;\\n      }\\n      ha-button-menu a {\\n        text-decoration: none;\\n      }\\n      .routers {\\n        padding-bottom: 0;\\n      }\\n      .no-routers {\\n        display: flex;\\n        flex-direction: column;\\n        align-items: center;\\n        text-align: center;\\n      }\\n      .no-routers ha-svg-icon {\\n        background-color: var(--light-primary-color);\\n        color: var(--secondary-text-color);\\n        padding: 16px;\\n        border-radius: 50%;\\n        margin-bottom: 8px;\\n      }\\n      ha-card {\\n        margin-bottom: 16px;\\n      }\\n      h4 {\\n        margin: 0;\\n      }\\n      .card-header {\\n        display: flex;\\n        justify-content: space-between;\\n      }\\n    \"])))];\n      }\n    }]\n  };\n}, SubscribeMixin(LitElement));","map":{"version":3,"names":["mdiDeleteOutline","mdiDevices","mdiDotsVertical","mdiInformationOutline","mdiCellphoneKey","LitElement","css","html","nothing","customElement","property","state","memoizeOne","isComponentLoaded","stringCompare","extractSearchParam","getSignedPath","getConfigEntryDiagnosticsDownloadUrl","OTBRCreateNetwork","OTBRSetChannel","OTBRSetNetwork","getOTBRInfo","addThreadDataSet","listThreadDataSets","removeThreadDataSet","setPreferredBorderAgent","setPreferredThreadDataSet","subscribeDiscoverThreadRouters","showConfigFlowDialog","showAlertDialog","showConfirmationDialog","showPromptDialog","SubscribeMixin","haStyle","brandsUrl","fileDownload","ThreadConfigPanel","_decorate","_initialize","_SubscribeMixin","_SubscribeMixin2","_inherits","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_assertThisInitialized","_createClass","F","d","kind","decorators","attribute","key","value","type","Boolean","render","_this2","_this$hass$auth$exter","networks","_groupRoutersByNetwork","_routers","_datasets","_templateObject","_taggedTemplateLiteral","narrow","hass","_configEntryId","_signUrl","localize","_addTLV","_otbrInfo","_templateObject2","_addOTBR","preferred","_renderNetwork","_templateObject3","_templateObject4","map","network","auth","external","config","canImportThreadCredentials","_templateObject5","_importExternalThreadCredentials","_network$routers","_network$routers2","_this3","_network$dataset2","_this$_otbrInfo","_templateObject6","name","dataset","_templateObject7","_showDatasetInfo","routers","_templateObject8","_removeDataset","_templateObject9","count","router","_this3$_otbrInfo","_this3$hass$themes","_router$server","_this3$_otbrInfo2","_network$dataset","showOverflow","border_agent_id","extended_address","_templateObject10","domain","brand","darkOptimized","themes","darkMode","_onImageError","_onImageLoad","model_name","server","replace","_templateObject11","preferred_extended_address","_templateObject12","_handleRouterAction","_templateObject13","preferred_border_agent_id","_templateObject14","_templateObject15","_templateObject16","extended_pan_id","active_dataset_tlvs","includes","_templateObject17","_resetBorderRouter","_templateObject18","dataset_id","_setPreferred","_showDatasetInfo2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","ev","_this$_otbrInfo$activ","wrap","_callee$","_context","prev","next","currentTarget","networkDataset","title","network_name","text","_templateObject19","channel","pan_id","url","abrupt","_templateObject20","stop","_x","apply","fireMessage","target","style","display","hassSubscribe","_this4","firstUpdated","changedProps","_get","_getPrototypeOf","prototype","call","_refresh","_this5","datasets","_iterator","_createForOfIteratorHelper","_step","s","n","done","push","err","e","f","_iterator2","_step2","_networks$_network","Object","values","sort","a","b","locale","language","_refresh2","_callee2","_this6","_callee2$","_context2","then","sent","t0","undefined","_signUrl2","_callee3","anchor","signedUrl","_callee3$","_context3","closest","preventDefault","getAttribute","path","_x2","_this7","_this$hass$userData","dialogClosedCallback","startFlowHandler","showAdvanced","userData","index","Number","detail","_setPreferredBorderAgent","_changeChannel","_setDataset","_resetBorderRouter2","_callee4","confirm","_callee4$","_context4","message","_setDataset2","_callee5","_networks$preferred","preferedDatasetId","_callee5$","_context5","_setPreferred2","_callee6","datasetId","_callee6$","_context6","_x3","_setPreferredBorderAgent2","_callee7","_callee7$","_context7","_x4","_x5","_addTLV2","_callee8","tlv","_callee8$","_context8","inputLabel","confirmText","_removeDataset2","_callee9","_callee9$","_context9","destructive","_x6","_changeChannel2","_callee10","_this$_otbrInfo2","currentChannel","channelStr","result","_callee10$","_context10","inputType","inputMin","inputMax","defaultValue","toString","parseInt","delay","Math","floor","code","static","_templateObject21"],"sources":["/workspaces/frontend/src/panels/config/integrations/integration-panels/thread/thread-config-panel.ts"],"sourcesContent":["import \"@material/mwc-button\";\nimport { ActionDetail } from \"@material/mwc-list\";\nimport {\n  mdiDeleteOutline,\n  mdiDevices,\n  mdiDotsVertical,\n  mdiInformationOutline,\n  mdiCellphoneKey,\n} from \"@mdi/js\";\nimport {\n  LitElement,\n  PropertyValues,\n  TemplateResult,\n  css,\n  html,\n  nothing,\n} from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { isComponentLoaded } from \"../../../../../common/config/is_component_loaded\";\nimport { stringCompare } from \"../../../../../common/string/compare\";\nimport { extractSearchParam } from \"../../../../../common/url/search-params\";\nimport \"../../../../../components/ha-button-menu\";\nimport \"../../../../../components/ha-list-item\";\nimport \"../../../../../components/ha-card\";\nimport { getSignedPath } from \"../../../../../data/auth\";\nimport { getConfigEntryDiagnosticsDownloadUrl } from \"../../../../../data/diagnostics\";\nimport {\n  OTBRCreateNetwork,\n  OTBRInfo,\n  OTBRSetChannel,\n  OTBRSetNetwork,\n  getOTBRInfo,\n} from \"../../../../../data/otbr\";\nimport {\n  ThreadDataSet,\n  ThreadRouter,\n  addThreadDataSet,\n  listThreadDataSets,\n  removeThreadDataSet,\n  setPreferredBorderAgent,\n  setPreferredThreadDataSet,\n  subscribeDiscoverThreadRouters,\n} from \"../../../../../data/thread\";\nimport { showConfigFlowDialog } from \"../../../../../dialogs/config-flow/show-dialog-config-flow\";\nimport {\n  showAlertDialog,\n  showConfirmationDialog,\n  showPromptDialog,\n} from \"../../../../../dialogs/generic/show-dialog-box\";\nimport \"../../../../../layouts/hass-subpage\";\nimport { SubscribeMixin } from \"../../../../../mixins/subscribe-mixin\";\nimport { haStyle } from \"../../../../../resources/styles\";\nimport { HomeAssistant } from \"../../../../../types\";\nimport { brandsUrl } from \"../../../../../util/brands-url\";\nimport { fileDownload } from \"../../../../../util/file_download\";\n\ninterface ThreadNetwork {\n  name: string;\n  dataset?: ThreadDataSet;\n  routers?: ThreadRouter[];\n}\n\n@customElement(\"thread-config-panel\")\nexport class ThreadConfigPanel extends SubscribeMixin(LitElement) {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ type: Boolean }) public narrow = false;\n\n  @state() private _configEntryId: string | null = null;\n\n  @state() private _routers: ThreadRouter[] = [];\n\n  @state() private _datasets: ThreadDataSet[] = [];\n\n  @state() private _otbrInfo?: OTBRInfo;\n\n  protected render(): TemplateResult {\n    const networks = this._groupRoutersByNetwork(this._routers, this._datasets);\n\n    return html`\n      <hass-subpage .narrow=${this.narrow} .hass=${this.hass} header=\"Thread\">\n        <ha-button-menu slot=\"toolbar-icon\">\n          <ha-icon-button\n            .path=${mdiDotsVertical}\n            slot=\"trigger\"\n          ></ha-icon-button>\n          <a\n            href=${getConfigEntryDiagnosticsDownloadUrl(\n              this._configEntryId || \"\"\n            )}\n            target=\"_blank\"\n            @click=${this._signUrl}\n          >\n            <mwc-list-item>\n              ${this.hass.localize(\n                \"ui.panel.config.integrations.config_entry.download_diagnostics\"\n              )}\n            </mwc-list-item>\n          </a>\n          <mwc-list-item @click=${this._addTLV}\n            >${this.hass.localize(\n              \"ui.panel.config.thread.add_dataset_from_tlv\"\n            )}</mwc-list-item\n          >\n          ${!this._otbrInfo\n            ? html`<mwc-list-item @click=${this._addOTBR}\n                >${this.hass.localize(\n                  \"ui.panel.config.thread.add_open_thread_border_router\"\n                )}</mwc-list-item\n              >`\n            : \"\"}\n        </ha-button-menu>\n        <div class=\"content\">\n          <h1>${this.hass.localize(\"ui.panel.config.thread.my_network\")}</h1>\n          ${networks.preferred\n            ? this._renderNetwork(networks.preferred)\n            : html`<ha-card>\n                <div class=\"card-content no-routers\">\n                  <h3>\n                    ${this.hass.localize(\n                      \"ui.panel.config.thread.no_preferred_network\"\n                    )}\n                  </h3>\n                  <ha-svg-icon .path=${mdiDevices}></ha-svg-icon>\n                  <mwc-button @click=${this._addOTBR}\n                    >${this.hass.localize(\n                      \"ui.panel.config.thread.add_open_thread_border_router\"\n                    )}</mwc-button\n                  >\n                </div>\n              </ha-card>`}\n          ${networks.networks.length\n            ? html`<h3>\n                  ${this.hass.localize(\"ui.panel.config.thread.other_networks\")}\n                </h3>\n                ${networks.networks.map((network) =>\n                  this._renderNetwork(network)\n                )}`\n            : \"\"}\n        </div>\n        ${this.hass.auth.external?.config.canImportThreadCredentials\n          ? html`<ha-fab\n              slot=\"fab\"\n              @click=${this._importExternalThreadCredentials}\n              extended\n              label=\"Import credentials\"\n              ><ha-svg-icon slot=\"icon\" .path=${mdiCellphoneKey}></ha-svg-icon\n            ></ha-fab>`\n          : nothing}\n      </hass-subpage>\n    `;\n  }\n\n  private _renderNetwork(network: ThreadNetwork) {\n    return html`<ha-card>\n      <div class=\"card-header\">\n        ${network.name}${network.dataset\n          ? html`<div>\n              <ha-icon-button\n                .networkDataset=${network.dataset}\n                .path=${mdiInformationOutline}\n                @click=${this._showDatasetInfo}\n              ></ha-icon-button\n              >${!network.dataset.preferred && !network.routers?.length\n                ? html`<ha-icon-button\n                    .networkDataset=${network.dataset}\n                    .path=${mdiDeleteOutline}\n                    @click=${this._removeDataset}\n                  ></ha-icon-button>`\n                : \"\"}\n            </div>`\n          : \"\"}\n      </div>\n      ${network.routers?.length\n        ? html`<div class=\"card-content routers\">\n              <h4>\n                ${this.hass.localize(\"ui.panel.config.thread.border_routers\", {\n                  count: network.routers.length,\n                })}\n              </h4>\n            </div>\n            ${network.routers.map((router) => {\n              const showOverflow =\n                (\"dataset\" in network && router.border_agent_id) ||\n                router.extended_address === this._otbrInfo?.extended_address;\n              return html`<ha-list-item\n                class=\"router\"\n                twoline\n                graphic=\"avatar\"\n                .hasMeta=${showOverflow}\n              >\n                <img\n                  slot=\"graphic\"\n                  .src=${brandsUrl({\n                    domain: router.brand,\n                    brand: true,\n                    type: \"icon\",\n                    darkOptimized: this.hass.themes?.darkMode,\n                  })}\n                  alt=${router.brand}\n                  crossorigin=\"anonymous\"\n                  referrerpolicy=\"no-referrer\"\n                  @error=${this._onImageError}\n                  @load=${this._onImageLoad}\n                />\n                ${router.model_name ||\n                router.server?.replace(\".local.\", \"\") ||\n                \"\"}\n                <span slot=\"secondary\">${router.server}</span>\n                ${showOverflow\n                  ? html`${network.dataset &&\n                      router.extended_address ===\n                        network.dataset.preferred_extended_address\n                        ? html`<ha-svg-icon\n                            .path=${mdiCellphoneKey}\n                            .title=${this.hass.localize(\n                              \"ui.panel.config.thread.default_router\"\n                            )}\n                          ></ha-svg-icon>`\n                        : \"\"}\n                      <ha-button-menu\n                        slot=\"meta\"\n                        .network=${network}\n                        .router=${router}\n                        @action=${this._handleRouterAction}\n                      >\n                        <ha-icon-button\n                          .label=${this.hass.localize(\n                            \"ui.common.overflow_menu\"\n                          )}\n                          .path=${mdiDotsVertical}\n                          slot=\"trigger\"\n                        ></ha-icon-button>\n                        ${network.dataset && router.border_agent_id\n                          ? html`<ha-list-item\n                              .disabled=${router.border_agent_id ===\n                              network.dataset.preferred_border_agent_id}\n                            >\n                              ${router.border_agent_id ===\n                              network.dataset.preferred_border_agent_id\n                                ? this.hass.localize(\n                                    \"ui.panel.config.thread.default_router\"\n                                  )\n                                : this.hass.localize(\n                                    \"ui.panel.config.thread.set_default_router\"\n                                  )}\n                            </ha-list-item>`\n                          : \"\"}\n                        ${router.extended_address ===\n                        this._otbrInfo?.extended_address\n                          ? html`<ha-list-item>\n                                ${this.hass.localize(\n                                  \"ui.panel.config.thread.reset_border_router\"\n                                )}</ha-list-item\n                              >\n                              <ha-list-item>\n                                ${this.hass.localize(\n                                  \"ui.panel.config.thread.change_channel\"\n                                )}</ha-list-item\n                              >\n                              ${network.dataset?.preferred\n                                ? \"\"\n                                : html`<ha-list-item>\n                                    ${this.hass.localize(\n                                      \"ui.panel.config.thread.add_to_my_network\"\n                                    )}\n                                  </ha-list-item>`}`\n                          : \"\"}\n                      </ha-button-menu>`\n                  : \"\"}\n              </ha-list-item>`;\n            })}`\n        : html`<div class=\"card-content no-routers\">\n            <ha-svg-icon .path=${mdiDevices}></ha-svg-icon>\n            ${network.dataset?.extended_pan_id &&\n            this._otbrInfo?.active_dataset_tlvs?.includes(\n              network.dataset.extended_pan_id\n            )\n              ? html`${this.hass.localize(\n                    \"ui.panel.config.thread.no_routers_otbr_network\"\n                  )}\n                  <mwc-button @click=${this._resetBorderRouter}\n                    >${this.hass.localize(\n                      \"ui.panel.config.thread.reset_border_router\"\n                    )}</mwc-button\n                  >`\n              : this.hass.localize(\"ui.panel.config.thread.no_border_routers\")}\n          </div> `}\n      ${network.dataset && !network.dataset.preferred\n        ? html`<div class=\"card-actions\">\n            <mwc-button\n              .datasetId=${network.dataset.dataset_id}\n              @click=${this._setPreferred}\n              >Make preferred network</mwc-button\n            >\n          </div>`\n        : \"\"}\n    </ha-card>`;\n  }\n\n  private async _showDatasetInfo(ev: Event) {\n    const dataset = (ev.currentTarget as any).networkDataset as ThreadDataSet;\n    if (this._otbrInfo) {\n      if (\n        dataset.extended_pan_id &&\n        this._otbrInfo.active_dataset_tlvs?.includes(dataset.extended_pan_id)\n      ) {\n        showAlertDialog(this, {\n          title: dataset.network_name,\n          text: html`Network name: ${dataset.network_name}<br />\n            Channel: ${dataset.channel}<br />\n            Dataset id: ${dataset.dataset_id}<br />\n            Pan id: ${dataset.pan_id}<br />\n            Extended Pan id: ${dataset.extended_pan_id}<br />\n            OTBR URL: ${this._otbrInfo.url}<br />\n            Active dataset TLVs: ${this._otbrInfo.active_dataset_tlvs}`,\n        });\n        return;\n      }\n    }\n    showAlertDialog(this, {\n      title: dataset.network_name,\n      text: html`Network name: ${dataset.network_name}<br />\n        Channel: ${dataset.channel}<br />\n        Dataset id: ${dataset.dataset_id}<br />\n        Pan id: ${dataset.pan_id}<br />\n        Extended Pan id: ${dataset.extended_pan_id}`,\n    });\n  }\n\n  private _importExternalThreadCredentials() {\n    this.hass.auth.external!.fireMessage({\n      type: \"thread/import_credentials\",\n    });\n  }\n\n  private _onImageError(ev) {\n    ev.target.style.display = \"none\";\n  }\n\n  private _onImageLoad(ev) {\n    ev.target.style.display = \"\";\n  }\n\n  hassSubscribe() {\n    return [\n      subscribeDiscoverThreadRouters(this.hass, (routers: ThreadRouter[]) => {\n        this._routers = routers;\n      }),\n    ];\n  }\n\n  protected override firstUpdated(changedProps: PropertyValues) {\n    super.firstUpdated(changedProps);\n\n    this._refresh();\n\n    this._configEntryId = extractSearchParam(\"config_entry\");\n  }\n\n  private _groupRoutersByNetwork = memoizeOne(\n    (\n      routers: ThreadRouter[],\n      datasets: ThreadDataSet[]\n    ): { preferred?: ThreadNetwork; networks: ThreadNetwork[] } => {\n      let preferred: ThreadNetwork | undefined;\n      const networks: { [key: string]: ThreadNetwork } = {};\n      for (const router of routers) {\n        const network = router.extended_pan_id;\n        if (network in networks) {\n          networks[network].routers!.push(router);\n        } else {\n          networks[network] = {\n            name: router.network_name || \"\",\n            routers: [router],\n          };\n        }\n      }\n      for (const dataset of datasets) {\n        const network = dataset.extended_pan_id;\n        if (!network) {\n          continue;\n        }\n        if (dataset.preferred) {\n          preferred = {\n            name: dataset.network_name,\n            dataset: dataset,\n            routers: networks[network]?.routers,\n          };\n          delete networks[network];\n          continue;\n        }\n        if (network in networks) {\n          networks[network].dataset = dataset;\n        } else {\n          networks[network] = { name: dataset.network_name, dataset: dataset };\n        }\n      }\n      return {\n        preferred,\n        networks: Object.values(networks).sort((a, b) =>\n          stringCompare(a.name, b.name, this.hass.locale.language)\n        ),\n      };\n    }\n  );\n\n  private async _refresh() {\n    listThreadDataSets(this.hass).then((datasets) => {\n      this._datasets = datasets.datasets;\n    });\n    if (!isComponentLoaded(this.hass, \"otbr\")) {\n      return;\n    }\n    try {\n      this._otbrInfo = await getOTBRInfo(this.hass);\n    } catch (err) {\n      this._otbrInfo = undefined;\n    }\n  }\n\n  private async _signUrl(ev) {\n    const anchor = ev.target.closest(\"a\");\n    ev.preventDefault();\n    const signedUrl = await getSignedPath(\n      this.hass,\n      anchor.getAttribute(\"href\")\n    );\n    fileDownload(signedUrl.path);\n  }\n\n  private _addOTBR() {\n    showConfigFlowDialog(this, {\n      dialogClosedCallback: () => {\n        this._refresh();\n      },\n      startFlowHandler: \"otbr\",\n      showAdvanced: this.hass.userData?.showAdvanced,\n    });\n  }\n\n  private _handleRouterAction(ev: CustomEvent<ActionDetail>) {\n    const network = (ev.currentTarget as any).network as ThreadNetwork;\n    const router = (ev.currentTarget as any).router as ThreadRouter;\n    const index =\n      network.dataset && router.border_agent_id\n        ? Number(ev.detail.index)\n        : Number(ev.detail.index) + 1;\n    switch (index) {\n      case 0:\n        this._setPreferredBorderAgent(network.dataset!, router);\n        break;\n      case 1:\n        this._resetBorderRouter();\n        break;\n      case 2:\n        this._changeChannel();\n        break;\n      case 3:\n        this._setDataset();\n        break;\n    }\n  }\n\n  private async _resetBorderRouter() {\n    const confirm = await showConfirmationDialog(this, {\n      title: this.hass.localize(\n        \"ui.panel.config.thread.confirm_reset_border_router\"\n      ),\n      text: this.hass.localize(\n        \"ui.panel.config.thread.confirm_reset_border_router_text\"\n      ),\n    });\n    if (!confirm) {\n      return;\n    }\n    try {\n      await OTBRCreateNetwork(this.hass);\n    } catch (err: any) {\n      showAlertDialog(this, {\n        title: this.hass.localize(\"ui.panel.config.thread.otbr_config_failed\"),\n        text: err.message,\n      });\n    }\n    this._refresh();\n  }\n\n  private async _setDataset() {\n    const networks = this._groupRoutersByNetwork(this._routers, this._datasets);\n    const preferedDatasetId = networks.preferred?.dataset?.dataset_id;\n    if (!preferedDatasetId) {\n      return;\n    }\n    const confirm = await showConfirmationDialog(this, {\n      title: this.hass.localize(\n        \"ui.panel.config.thread.confirm_set_dataset_border_router\"\n      ),\n      text: this.hass.localize(\n        \"ui.panel.config.thread.confirm_set_dataset_border_router_text\"\n      ),\n    });\n    if (!confirm) {\n      return;\n    }\n    try {\n      await OTBRSetNetwork(this.hass, preferedDatasetId);\n    } catch (err: any) {\n      showAlertDialog(this, {\n        title: this.hass.localize(\"ui.panel.config.thread.otbr_config_failed\"),\n        text: err.message,\n      });\n    }\n    this._refresh();\n  }\n\n  private async _setPreferred(ev) {\n    const datasetId = ev.target.datasetId;\n    await setPreferredThreadDataSet(this.hass, datasetId);\n    this._refresh();\n  }\n\n  private async _setPreferredBorderAgent(\n    dataset: ThreadDataSet,\n    router: ThreadRouter\n  ) {\n    await setPreferredBorderAgent(\n      this.hass,\n      dataset.dataset_id,\n      router.border_agent_id,\n      router.extended_address\n    );\n    this._refresh();\n  }\n\n  private async _addTLV() {\n    const tlv = await showPromptDialog(this, {\n      title: this.hass.localize(\"ui.panel.config.thread.add_dataset\"),\n      inputLabel: this.hass.localize(\n        \"ui.panel.config.thread.add_dataset_label\"\n      ),\n      confirmText: this.hass.localize(\n        \"ui.panel.config.thread.add_dataset_button\"\n      ),\n    });\n    if (!tlv) {\n      return;\n    }\n    try {\n      await addThreadDataSet(this.hass, \"manual\", tlv);\n    } catch (err: any) {\n      showAlertDialog(this, {\n        title: \"Error\",\n        text: err.message || err,\n      });\n    }\n    this._refresh();\n  }\n\n  private async _removeDataset(ev: Event) {\n    const dataset = (ev.currentTarget as any).networkDataset as ThreadDataSet;\n    const confirm = await showConfirmationDialog(this, {\n      title: this.hass.localize(\n        \"ui.panel.config.thread.confirm_delete_dataset\",\n        { name: dataset.network_name }\n      ),\n      text: this.hass.localize(\n        \"ui.panel.config.thread.confirm_delete_dataset_text\"\n      ),\n      destructive: true,\n      confirmText: this.hass.localize(\"ui.common.delete\"),\n    });\n    if (!confirm) {\n      return;\n    }\n    try {\n      await removeThreadDataSet(this.hass, dataset.dataset_id);\n    } catch (err: any) {\n      showAlertDialog(this, {\n        title: \"Error\",\n        text: err.message || err,\n      });\n    }\n    this._refresh();\n  }\n\n  private async _changeChannel() {\n    const currentChannel = this._otbrInfo?.channel;\n    const channelStr = await showPromptDialog(this, {\n      title: this.hass.localize(\"ui.panel.config.thread.change_channel\"),\n      text: this.hass.localize(\"ui.panel.config.thread.change_channel_text\"),\n      inputLabel: this.hass.localize(\n        \"ui.panel.config.thread.change_channel_label\"\n      ),\n      confirmText: this.hass.localize(\"ui.panel.config.thread.change_channel\"),\n      inputType: \"number\",\n      inputMin: \"11\",\n      inputMax: \"26\",\n      defaultValue: currentChannel ? currentChannel.toString() : undefined,\n    });\n    if (!channelStr) {\n      return;\n    }\n    const channel = parseInt(channelStr);\n    if (channel < 11 || channel > 26) {\n      showAlertDialog(this, {\n        title: this.hass.localize(\n          \"ui.panel.config.thread.change_channel_invalid\"\n        ),\n        text: this.hass.localize(\"ui.panel.config.thread.change_channel_range\"),\n      });\n      return;\n    }\n    try {\n      const result = await OTBRSetChannel(this.hass, channel);\n      showAlertDialog(this, {\n        title: this.hass.localize(\n          \"ui.panel.config.thread.change_channel_initiated_title\"\n        ),\n        text: this.hass.localize(\n          \"ui.panel.config.thread.change_channel_initiated_text\",\n          { delay: Math.floor(result.delay / 60) }\n        ),\n      });\n    } catch (err: any) {\n      if (err.code === \"multiprotocol_enabled\") {\n        showAlertDialog(this, {\n          title: this.hass.localize(\n            \"ui.panel.config.thread.change_channel_multiprotocol_enabled_title\"\n          ),\n          text: this.hass.localize(\n            \"ui.panel.config.thread.change_channel_multiprotocol_enabled_text\"\n          ),\n        });\n        return;\n      }\n      showAlertDialog(this, {\n        title: \"Error\",\n        text: err.message || err,\n      });\n    }\n    this._refresh();\n  }\n\n  static styles = [\n    haStyle,\n    css`\n      .content {\n        padding: 24px 8px 32px;\n        max-width: 600px;\n        margin: 0 auto;\n        direction: ltr;\n      }\n      ha-list-item.router {\n        --mdc-list-item-meta-size: auto;\n        --mdc-list-item-meta-display: flex;\n        --mdc-list-side-padding: 16px;\n        cursor: default;\n        overflow: visible;\n      }\n      ha-list-item img {\n        border-radius: 0;\n      }\n      ha-svg-icon[slot=\"meta\"] {\n        width: 24px;\n      }\n      ha-button-menu a {\n        text-decoration: none;\n      }\n      .routers {\n        padding-bottom: 0;\n      }\n      .no-routers {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        text-align: center;\n      }\n      .no-routers ha-svg-icon {\n        background-color: var(--light-primary-color);\n        color: var(--secondary-text-color);\n        padding: 16px;\n        border-radius: 50%;\n        margin-bottom: 8px;\n      }\n      ha-card {\n        margin-bottom: 16px;\n      }\n      h4 {\n        margin: 0;\n      }\n      .card-header {\n        display: flex;\n        justify-content: space-between;\n      }\n    `,\n  ];\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"thread-config-panel\": ThreadConfigPanel;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}