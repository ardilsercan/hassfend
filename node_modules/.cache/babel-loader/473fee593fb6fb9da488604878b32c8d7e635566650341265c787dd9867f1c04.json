{"ast":null,"code":"import _createForOfIteratorHelper from \"@babel/runtime/helpers/createForOfIteratorHelper\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _decorate from \"@babel/runtime/helpers/decorate\";\nvar _excluded = [\"path\", \"timestamp\", \"result\", \"error\", \"changed_variables\"];\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10, _templateObject11, _templateObject12, _templateObject13, _templateObject14, _templateObject15, _templateObject16, _templateObject17, _templateObject18, _templateObject19;\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.string.trim-end.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport { dump } from \"js-yaml\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport { formatDateTimeWithSeconds } from \"../../common/datetime/format_date_time\";\nimport \"../ha-code-editor\";\nimport \"../ha-icon-button\";\nimport \"./hat-logbook-note\";\nimport { getDataFromPath } from \"../../data/trace\";\nimport \"../../panels/logbook/ha-logbook-renderer\";\nimport { traceTabStyles } from \"./trace-tab-styles\";\nvar TRACE_PATH_TABS = [\"step_config\", \"changed_variables\", \"logbook\"];\nexport var HaTracePathDetails = _decorate([customElement(\"ha-trace-path-details\")], function (_initialize, _LitElement) {\n  var HaTracePathDetails = /*#__PURE__*/function (_LitElement2) {\n    _inherits(HaTracePathDetails, _LitElement2);\n    function HaTracePathDetails() {\n      var _this;\n      _classCallCheck(this, HaTracePathDetails);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, HaTracePathDetails, [].concat(args));\n      _initialize(_assertThisInitialized(_this));\n      return _this;\n    }\n    return _createClass(HaTracePathDetails);\n  }(_LitElement);\n  return {\n    F: HaTracePathDetails,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        reflect: true\n      })],\n      key: \"narrow\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"trace\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"logbookEntries\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"selected\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"renderedNodes\",\n      value: function value() {\n        return {};\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"trackedNodes\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_view\",\n      value: function value() {\n        return \"step_config\";\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var _this2 = this;\n        return html(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      <div class=\\\"padded-box trace-info\\\">\\n        \", \"\\n      </div>\\n\\n      <div class=\\\"tabs top\\\">\\n        \", \"\\n      </div>\\n      \", \"\\n    \"])), this._renderSelectedTraceInfo(), TRACE_PATH_TABS.map(function (view) {\n          return html(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n            <button\\n              .view=\", \"\\n              class=\", \"\\n              @click=\", \"\\n            >\\n              \", \"\\n            </button>\\n          \"])), view, classMap({\n            active: _this2._view === view\n          }), _this2._showTab, _this2.hass.localize(\"ui.panel.config.automation.trace.tabs.\".concat(view)));\n        }), this._view === \"step_config\" ? this._renderSelectedConfig() : this._view === \"changed_variables\" ? this._renderChangedVars() : this._renderLogbook());\n      }\n    }, {\n      kind: \"method\",\n      key: \"_renderSelectedTraceInfo\",\n      value: function _renderSelectedTraceInfo() {\n        var _this$selected,\n          _this3 = this;\n        var paths = this.trace.trace;\n        if (!((_this$selected = this.selected) !== null && _this$selected !== void 0 && _this$selected.path)) {\n          return this.hass.localize(\"ui.panel.config.automation.trace.path.choose\");\n        }\n\n        // HACK: default choice node is not part of paths. We filter them out here by checking parent.\n        var pathParts = this.selected.path.split(\"/\");\n        if (pathParts[pathParts.length - 1] === \"default\") {\n          var _parentTraceInfo$;\n          var parentTraceInfo = paths[pathParts.slice(0, pathParts.length - 1).join(\"/\")];\n          if (parentTraceInfo && ((_parentTraceInfo$ = parentTraceInfo[0]) === null || _parentTraceInfo$ === void 0 || (_parentTraceInfo$ = _parentTraceInfo$.result) === null || _parentTraceInfo$ === void 0 ? void 0 : _parentTraceInfo$.choice) === \"default\") {\n            return this.hass.localize(\"ui.panel.config.automation.trace.path.default_action_executed\");\n          }\n        }\n        if (!(this.selected.path in paths)) {\n          return this.hass.localize(\"ui.panel.config.automation.trace.path.no_further_execution\");\n        }\n        var parts = [];\n        var active = false;\n        var _loop = function _loop() {\n            var curPath = _Object$keys[_i];\n            // Include all trace results until the next rendered node.\n            // Rendered nodes also include non-chosen choose paths.\n            if (active) {\n              if (curPath in _this3.renderedNodes) {\n                return 0; // break\n              }\n            } else if (curPath === _this3.selected.path) {\n              active = true;\n            } else {\n              return 1; // continue\n            }\n            var data = paths[curPath];\n            parts.push(data.map(function (trace, idx) {\n              var _ref = trace,\n                path = _ref.path,\n                timestamp = _ref.timestamp,\n                result = _ref.result,\n                error = _ref.error,\n                changed_variables = _ref.changed_variables,\n                rest = _objectWithoutProperties(_ref, _excluded);\n              if ((result === null || result === void 0 ? void 0 : result.enabled) === false) {\n                return html(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\", \"\"])), _this3.hass.localize(\"ui.panel.config.automation.trace.path.disabled_step\"));\n              }\n              return html(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n            \", \"\\n            \", \"\\n            \", \"\\n            <br />\\n            \", \"\\n            \", \"\\n          \"])), curPath === _this3.selected.path ? \"\" : html(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"<h2>\\n                  \", \"\\n                </h2>\"])), curPath.substring(_this3.selected.path.length + 1)), data.length === 1 ? nothing : html(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"<h3>\\n                  \", \"\\n                </h3>\"])), _this3.hass.localize(\"ui.panel.config.automation.trace.path.iteration\", {\n                number: idx + 1\n              })), _this3.hass.localize(\"ui.panel.config.automation.trace.path.executed\", {\n                time: formatDateTimeWithSeconds(new Date(timestamp), _this3.hass.locale, _this3.hass.config)\n              }), result ? html(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral([\"\", \"\\n                  <pre>\", \"</pre>\"])), _this3.hass.localize(\"ui.panel.config.automation.trace.path.result\"), dump(result)) : error ? html(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral([\"<div class=\\\"error\\\">\\n                    \", \"\\n                  </div>\"])), _this3.hass.localize(\"ui.panel.config.automation.trace.path.error\", {\n                error: error\n              })) : nothing, Object.keys(rest).length === 0 ? nothing : html(_templateObject9 || (_templateObject9 = _taggedTemplateLiteral([\"<pre>\", \"</pre>\"])), dump(rest)));\n            }));\n          },\n          _ret;\n        for (var _i = 0, _Object$keys = Object.keys(this.trace.trace); _i < _Object$keys.length; _i++) {\n          _ret = _loop();\n          if (_ret === 0) break;\n          if (_ret === 1) continue;\n        }\n        return parts;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_renderSelectedConfig\",\n      value: function _renderSelectedConfig() {\n        var _this$selected2;\n        if (!((_this$selected2 = this.selected) !== null && _this$selected2 !== void 0 && _this$selected2.path)) {\n          return nothing;\n        }\n        var config = getDataFromPath(this.trace.config, this.selected.path);\n        return config ? html(_templateObject10 || (_templateObject10 = _taggedTemplateLiteral([\"<ha-code-editor\\n          .value=\", \"\\n          readOnly\\n          dir=\\\"ltr\\\"\\n        ></ha-code-editor>\"])), dump(config).trimEnd()) : this.hass.localize(\"ui.panel.config.automation.trace.path.unable_to_find_config\");\n      }\n    }, {\n      kind: \"method\",\n      key: \"_renderChangedVars\",\n      value: function _renderChangedVars() {\n        var _this4 = this;\n        var paths = this.trace.trace;\n        var data = paths[this.selected.path];\n        if (data === undefined) {\n          return html(_templateObject11 || (_templateObject11 = _taggedTemplateLiteral([\"<div class=\\\"padded-box\\\">\\n        \", \"\\n      </div>\"])), this.hass.localize(\"ui.panel.config.automation.trace.path.step_not_executed\"));\n        }\n        return html(_templateObject12 || (_templateObject12 = _taggedTemplateLiteral([\"\\n      <div class=\\\"padded-box\\\">\\n        \", \"\\n      </div>\\n    \"])), data.map(function (trace, idx) {\n          return html(_templateObject13 || (_templateObject13 = _taggedTemplateLiteral([\"\\n            \", \"\\n            \", \"\\n          \"])), data.length > 1 ? html(_templateObject14 || (_templateObject14 = _taggedTemplateLiteral([\"<p>\\n                  \", \"\\n                </p>\"])), _this4.hass.localize(\"ui.panel.config.automation.trace.path.iteration\", {\n            number: idx + 1\n          })) : \"\", Object.keys(trace.changed_variables || {}).length === 0 ? _this4.hass.localize(\"ui.panel.config.automation.trace.path.no_variables_changed\") : html(_templateObject15 || (_templateObject15 = _taggedTemplateLiteral([\"<pre>\", \"</pre>\"])), dump(trace.changed_variables).trimEnd()));\n        }));\n      }\n    }, {\n      kind: \"method\",\n      key: \"_renderLogbook\",\n      value: function _renderLogbook() {\n        var paths = this.trace.trace;\n        var startTrace = paths[this.selected.path];\n        var trackedPaths = Object.keys(this.trackedNodes);\n        var index = trackedPaths.indexOf(this.selected.path);\n        if (index === -1) {\n          return html(_templateObject16 || (_templateObject16 = _taggedTemplateLiteral([\"<div class=\\\"padded-box\\\">\\n        \", \"\\n      </div>\"])), this.hass.localize(\"ui.panel.config.automation.trace.path.step_not_executed\"));\n        }\n        var entries;\n        if (index === trackedPaths.length - 1) {\n          // it's the last entry. Find all logbook entries after start.\n          var startTime = new Date(startTrace[0].timestamp);\n          var idx = this.logbookEntries.findIndex(function (entry) {\n            return new Date(entry.when * 1000) >= startTime;\n          });\n          if (idx === -1) {\n            entries = [];\n          } else {\n            entries = this.logbookEntries.slice(idx);\n          }\n        } else {\n          var nextTrace = paths[trackedPaths[index + 1]];\n          var _startTime = new Date(startTrace[0].timestamp);\n          var endTime = new Date(nextTrace[0].timestamp);\n          entries = [];\n          var _iterator = _createForOfIteratorHelper(this.logbookEntries || []),\n            _step;\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var entry = _step.value;\n              var entryDate = new Date(entry.when * 1000);\n              if (entryDate >= _startTime) {\n                if (entryDate < endTime) {\n                  entries.push(entry);\n                } else {\n                  // All following entries are no longer valid.\n                  break;\n                }\n              }\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        }\n        return entries.length ? html(_templateObject17 || (_templateObject17 = _taggedTemplateLiteral([\"\\n          <ha-logbook-renderer\\n            relative-time\\n            .hass=\", \"\\n            .entries=\", \"\\n            .narrow=\", \"\\n          ></ha-logbook-renderer>\\n          <hat-logbook-note .domain=\", \"></hat-logbook-note>\\n        \"])), this.hass, entries, this.narrow, this.trace.domain) : html(_templateObject18 || (_templateObject18 = _taggedTemplateLiteral([\"<div class=\\\"padded-box\\\">\\n          \", \"\\n        </div>\"])), this.hass.localize(\"ui.panel.config.automation.trace.path.no_logbook_entries\"));\n      }\n    }, {\n      kind: \"method\",\n      key: \"_showTab\",\n      value: function _showTab(ev) {\n        this._view = ev.target.view;\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [traceTabStyles, css(_templateObject19 || (_templateObject19 = _taggedTemplateLiteral([\"\\n        .padded-box {\\n          margin: 16px;\\n        }\\n\\n        :host(:not([narrow])) .trace-info {\\n          min-height: 250px;\\n        }\\n\\n        pre {\\n          margin: 0;\\n        }\\n\\n        .error {\\n          color: var(--error-color);\\n        }\\n      \"])))];\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["dump","css","html","LitElement","nothing","customElement","property","state","classMap","formatDateTimeWithSeconds","getDataFromPath","traceTabStyles","TRACE_PATH_TABS","HaTracePathDetails","_decorate","_initialize","_LitElement","_LitElement2","_inherits","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_assertThisInitialized","_createClass","F","d","kind","decorators","attribute","key","value","type","Boolean","reflect","render","_this2","_templateObject","_taggedTemplateLiteral","_renderSelectedTraceInfo","map","view","_templateObject2","active","_view","_showTab","hass","localize","_renderSelectedConfig","_renderChangedVars","_renderLogbook","_this$selected","_this3","paths","trace","selected","path","pathParts","split","_parentTraceInfo$","parentTraceInfo","slice","join","result","choice","parts","_loop","curPath","_Object$keys","_i","renderedNodes","data","push","idx","_ref","timestamp","error","changed_variables","rest","_objectWithoutProperties","_excluded","enabled","_templateObject3","_templateObject4","_templateObject5","substring","_templateObject6","number","time","Date","locale","config","_templateObject7","_templateObject8","Object","keys","_templateObject9","_ret","_this$selected2","_templateObject10","trimEnd","_this4","undefined","_templateObject11","_templateObject12","_templateObject13","_templateObject14","_templateObject15","startTrace","trackedPaths","trackedNodes","index","indexOf","_templateObject16","entries","startTime","logbookEntries","findIndex","entry","when","nextTrace","endTime","_iterator","_createForOfIteratorHelper","_step","s","n","done","entryDate","err","e","f","_templateObject17","narrow","domain","_templateObject18","ev","target","static","styles","_templateObject19"],"sources":["/workspaces/frontend/src/components/trace/ha-trace-path-details.ts"],"sourcesContent":["import { dump } from \"js-yaml\";\nimport {\n  css,\n  CSSResultGroup,\n  html,\n  LitElement,\n  nothing,\n  TemplateResult,\n} from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport { formatDateTimeWithSeconds } from \"../../common/datetime/format_date_time\";\nimport \"../ha-code-editor\";\nimport \"../ha-icon-button\";\nimport \"./hat-logbook-note\";\nimport { LogbookEntry } from \"../../data/logbook\";\nimport {\n  ActionTraceStep,\n  ChooseActionTraceStep,\n  getDataFromPath,\n  TraceExtended,\n} from \"../../data/trace\";\nimport \"../../panels/logbook/ha-logbook-renderer\";\nimport { traceTabStyles } from \"./trace-tab-styles\";\nimport { HomeAssistant } from \"../../types\";\nimport type { NodeInfo } from \"./hat-script-graph\";\n\nconst TRACE_PATH_TABS = [\n  \"step_config\",\n  \"changed_variables\",\n  \"logbook\",\n] as const;\n\n@customElement(\"ha-trace-path-details\")\nexport class HaTracePathDetails extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ type: Boolean, reflect: true }) public narrow = false;\n\n  @property({ attribute: false }) public trace!: TraceExtended;\n\n  @property({ attribute: false }) public logbookEntries!: LogbookEntry[];\n\n  @property({ attribute: false }) public selected!: NodeInfo;\n\n  @property({ attribute: false })\n  public renderedNodes: Record<string, any> = {};\n\n  @property({ attribute: false }) public trackedNodes!: Record<string, any>;\n\n  @state() private _view: (typeof TRACE_PATH_TABS)[number] = \"step_config\";\n\n  protected render(): TemplateResult {\n    return html`\n      <div class=\"padded-box trace-info\">\n        ${this._renderSelectedTraceInfo()}\n      </div>\n\n      <div class=\"tabs top\">\n        ${TRACE_PATH_TABS.map(\n          (view) => html`\n            <button\n              .view=${view}\n              class=${classMap({ active: this._view === view })}\n              @click=${this._showTab}\n            >\n              ${this.hass!.localize(\n                `ui.panel.config.automation.trace.tabs.${view}`\n              )}\n            </button>\n          `\n        )}\n      </div>\n      ${this._view === \"step_config\"\n        ? this._renderSelectedConfig()\n        : this._view === \"changed_variables\"\n          ? this._renderChangedVars()\n          : this._renderLogbook()}\n    `;\n  }\n\n  private _renderSelectedTraceInfo() {\n    const paths = this.trace.trace;\n\n    if (!this.selected?.path) {\n      return this.hass!.localize(\n        \"ui.panel.config.automation.trace.path.choose\"\n      );\n    }\n\n    // HACK: default choice node is not part of paths. We filter them out here by checking parent.\n    const pathParts = this.selected.path.split(\"/\");\n    if (pathParts[pathParts.length - 1] === \"default\") {\n      const parentTraceInfo = paths[\n        pathParts.slice(0, pathParts.length - 1).join(\"/\")\n      ] as ChooseActionTraceStep[];\n\n      if (parentTraceInfo && parentTraceInfo[0]?.result?.choice === \"default\") {\n        return this.hass!.localize(\n          \"ui.panel.config.automation.trace.path.default_action_executed\"\n        );\n      }\n    }\n\n    if (!(this.selected.path in paths)) {\n      return this.hass!.localize(\n        \"ui.panel.config.automation.trace.path.no_further_execution\"\n      );\n    }\n\n    const parts: TemplateResult[][] = [];\n\n    let active = false;\n\n    for (const curPath of Object.keys(this.trace.trace)) {\n      // Include all trace results until the next rendered node.\n      // Rendered nodes also include non-chosen choose paths.\n      if (active) {\n        if (curPath in this.renderedNodes) {\n          break;\n        }\n      } else if (curPath === this.selected.path) {\n        active = true;\n      } else {\n        continue;\n      }\n\n      const data: ActionTraceStep[] = paths[curPath];\n\n      parts.push(\n        data.map((trace, idx) => {\n          const { path, timestamp, result, error, changed_variables, ...rest } =\n            trace as any;\n\n          if (result?.enabled === false) {\n            return html`${this.hass!.localize(\n              \"ui.panel.config.automation.trace.path.disabled_step\"\n            )}`;\n          }\n\n          return html`\n            ${curPath === this.selected.path\n              ? \"\"\n              : html`<h2>\n                  ${curPath.substring(this.selected.path.length + 1)}\n                </h2>`}\n            ${data.length === 1\n              ? nothing\n              : html`<h3>\n                  ${this.hass!.localize(\n                    \"ui.panel.config.automation.trace.path.iteration\",\n                    { number: idx + 1 }\n                  )}\n                </h3>`}\n            ${this.hass!.localize(\n              \"ui.panel.config.automation.trace.path.executed\",\n              {\n                time: formatDateTimeWithSeconds(\n                  new Date(timestamp),\n                  this.hass.locale,\n                  this.hass.config\n                ),\n              }\n            )}\n            <br />\n            ${result\n              ? html`${this.hass!.localize(\n                    \"ui.panel.config.automation.trace.path.result\"\n                  )}\n                  <pre>${dump(result)}</pre>`\n              : error\n                ? html`<div class=\"error\">\n                    ${this.hass!.localize(\n                      \"ui.panel.config.automation.trace.path.error\",\n                      {\n                        error: error,\n                      }\n                    )}\n                  </div>`\n                : nothing}\n            ${Object.keys(rest).length === 0\n              ? nothing\n              : html`<pre>${dump(rest)}</pre>`}\n          `;\n        })\n      );\n    }\n\n    return parts;\n  }\n\n  private _renderSelectedConfig() {\n    if (!this.selected?.path) {\n      return nothing;\n    }\n    const config = getDataFromPath(this.trace!.config, this.selected.path);\n    return config\n      ? html`<ha-code-editor\n          .value=${dump(config).trimEnd()}\n          readOnly\n          dir=\"ltr\"\n        ></ha-code-editor>`\n      : this.hass!.localize(\n          \"ui.panel.config.automation.trace.path.unable_to_find_config\"\n        );\n  }\n\n  private _renderChangedVars() {\n    const paths = this.trace.trace;\n    const data: ActionTraceStep[] = paths[this.selected.path];\n\n    if (data === undefined) {\n      return html`<div class=\"padded-box\">\n        ${this.hass!.localize(\n          \"ui.panel.config.automation.trace.path.step_not_executed\"\n        )}\n      </div>`;\n    }\n\n    return html`\n      <div class=\"padded-box\">\n        ${data.map(\n          (trace, idx) => html`\n            ${data.length > 1\n              ? html`<p>\n                  ${this.hass!.localize(\n                    \"ui.panel.config.automation.trace.path.iteration\",\n                    { number: idx + 1 }\n                  )}\n                </p>`\n              : \"\"}\n            ${Object.keys(trace.changed_variables || {}).length === 0\n              ? this.hass!.localize(\n                  \"ui.panel.config.automation.trace.path.no_variables_changed\"\n                )\n              : html`<pre>${dump(trace.changed_variables).trimEnd()}</pre>`}\n          `\n        )}\n      </div>\n    `;\n  }\n\n  private _renderLogbook() {\n    const paths = this.trace.trace;\n    const startTrace = paths[this.selected.path];\n    const trackedPaths = Object.keys(this.trackedNodes);\n    const index = trackedPaths.indexOf(this.selected.path);\n\n    if (index === -1) {\n      return html`<div class=\"padded-box\">\n        ${this.hass!.localize(\n          \"ui.panel.config.automation.trace.path.step_not_executed\"\n        )}\n      </div>`;\n    }\n\n    let entries: LogbookEntry[];\n\n    if (index === trackedPaths.length - 1) {\n      // it's the last entry. Find all logbook entries after start.\n      const startTime = new Date(startTrace[0].timestamp);\n      const idx = this.logbookEntries.findIndex(\n        (entry) => new Date(entry.when * 1000) >= startTime\n      );\n      if (idx === -1) {\n        entries = [];\n      } else {\n        entries = this.logbookEntries.slice(idx);\n      }\n    } else {\n      const nextTrace = paths[trackedPaths[index + 1]];\n\n      const startTime = new Date(startTrace[0].timestamp);\n      const endTime = new Date(nextTrace[0].timestamp);\n\n      entries = [];\n\n      for (const entry of this.logbookEntries || []) {\n        const entryDate = new Date(entry.when * 1000);\n        if (entryDate >= startTime) {\n          if (entryDate < endTime) {\n            entries.push(entry);\n          } else {\n            // All following entries are no longer valid.\n            break;\n          }\n        }\n      }\n    }\n\n    return entries.length\n      ? html`\n          <ha-logbook-renderer\n            relative-time\n            .hass=${this.hass}\n            .entries=${entries}\n            .narrow=${this.narrow}\n          ></ha-logbook-renderer>\n          <hat-logbook-note .domain=${this.trace.domain}></hat-logbook-note>\n        `\n      : html`<div class=\"padded-box\">\n          ${this.hass!.localize(\n            \"ui.panel.config.automation.trace.path.no_logbook_entries\"\n          )}\n        </div>`;\n  }\n\n  private _showTab(ev) {\n    this._view = ev.target.view;\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      traceTabStyles,\n      css`\n        .padded-box {\n          margin: 16px;\n        }\n\n        :host(:not([narrow])) .trace-info {\n          min-height: 250px;\n        }\n\n        pre {\n          margin: 0;\n        }\n\n        .error {\n          color: var(--error-color);\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-trace-path-details\": HaTracePathDetails;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}