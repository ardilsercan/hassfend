{"ast":null,"code":"/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport './iron-overlay-backdrop.js';\nimport { IronA11yKeysBehavior } from '@polymer/iron-a11y-keys-behavior/iron-a11y-keys-behavior.js';\nimport { dom } from '@polymer/polymer/lib/legacy/polymer.dom.js';\nimport * as gestures from '@polymer/polymer/lib/utils/gestures.js';\n\n/**\n * @package\n */\nexport class IronOverlayManagerClass {\n  constructor() {\n    /**\n     * Used to keep track of the opened overlays.\n     * @private {!Array<!Element>}\n     */\n    this._overlays = [];\n\n    /**\n     * iframes have a default z-index of 100,\n     * so this default should be at least that.\n     * @private {number}\n     */\n    this._minimumZ = 101;\n\n    /**\n     * Memoized backdrop element.\n     * @private {Element|null}\n     */\n    this._backdropElement = null;\n\n    // Enable document-wide tap recognizer.\n    // NOTE: Use useCapture=true to avoid accidentally prevention of the closing\n    // of an overlay via event.stopPropagation(). The only way to prevent\n    // closing of an overlay should be through its APIs.\n    // NOTE: enable tap on <html> to workaround Polymer/polymer#4459\n    // Pass no-op function because MSEdge 15 doesn't handle null as 2nd argument\n    // https://github.com/Microsoft/ChakraCore/issues/3863\n    gestures.addListener(document.documentElement, 'tap', function () {});\n    document.addEventListener('tap', this._onCaptureClick.bind(this), true);\n    document.addEventListener('focus', this._onCaptureFocus.bind(this), true);\n    document.addEventListener('keydown', this._onCaptureKeyDown.bind(this), true);\n  }\n\n  /**\n   * The shared backdrop element.\n   * @return {!Element} backdropElement\n   */\n  get backdropElement() {\n    if (!this._backdropElement) {\n      this._backdropElement = document.createElement('iron-overlay-backdrop');\n    }\n    return this._backdropElement;\n  }\n\n  /**\n   * The deepest active element.\n   * @return {!Element} activeElement the active element\n   */\n  get deepActiveElement() {\n    var active = document.activeElement;\n    // document.activeElement can be null\n    // https://developer.mozilla.org/en-US/docs/Web/API/Document/activeElement\n    // In IE 11, it can also be an object when operating in iframes.\n    // In these cases, default it to document.body.\n    if (!active || active instanceof Element === false) {\n      active = document.body;\n    }\n    while (active.root && dom(active.root).activeElement) {\n      active = dom(active.root).activeElement;\n    }\n    return active;\n  }\n\n  /**\n   * Brings the overlay at the specified index to the front.\n   * @param {number} i\n   * @private\n   */\n  _bringOverlayAtIndexToFront(i) {\n    var overlay = this._overlays[i];\n    if (!overlay) {\n      return;\n    }\n    var lastI = this._overlays.length - 1;\n    var currentOverlay = this._overlays[lastI];\n    // Ensure always-on-top overlay stays on top.\n    if (currentOverlay && this._shouldBeBehindOverlay(overlay, currentOverlay)) {\n      lastI--;\n    }\n    // If already the top element, return.\n    if (i >= lastI) {\n      return;\n    }\n    // Update z-index to be on top.\n    var minimumZ = Math.max(this.currentOverlayZ(), this._minimumZ);\n    if (this._getZ(overlay) <= minimumZ) {\n      this._applyOverlayZ(overlay, minimumZ);\n    }\n\n    // Shift other overlays behind the new on top.\n    while (i < lastI) {\n      this._overlays[i] = this._overlays[i + 1];\n      i++;\n    }\n    this._overlays[lastI] = overlay;\n  }\n\n  /**\n   * Adds the overlay and updates its z-index if it's opened, or removes it if\n   * it's closed. Also updates the backdrop z-index.\n   * @param {!Element} overlay\n   */\n  addOrRemoveOverlay(overlay) {\n    if (overlay.opened) {\n      this.addOverlay(overlay);\n    } else {\n      this.removeOverlay(overlay);\n    }\n  }\n\n  /**\n   * Tracks overlays for z-index and focus management.\n   * Ensures the last added overlay with always-on-top remains on top.\n   * @param {!Element} overlay\n   */\n  addOverlay(overlay) {\n    var i = this._overlays.indexOf(overlay);\n    if (i >= 0) {\n      this._bringOverlayAtIndexToFront(i);\n      this.trackBackdrop();\n      return;\n    }\n    var insertionIndex = this._overlays.length;\n    var currentOverlay = this._overlays[insertionIndex - 1];\n    var minimumZ = Math.max(this._getZ(currentOverlay), this._minimumZ);\n    var newZ = this._getZ(overlay);\n\n    // Ensure always-on-top overlay stays on top.\n    if (currentOverlay && this._shouldBeBehindOverlay(overlay, currentOverlay)) {\n      // This bumps the z-index of +2.\n      this._applyOverlayZ(currentOverlay, minimumZ);\n      insertionIndex--;\n      // Update minimumZ to match previous overlay's z-index.\n      var previousOverlay = this._overlays[insertionIndex - 1];\n      minimumZ = Math.max(this._getZ(previousOverlay), this._minimumZ);\n    }\n\n    // Update z-index and insert overlay.\n    if (newZ <= minimumZ) {\n      this._applyOverlayZ(overlay, minimumZ);\n    }\n    this._overlays.splice(insertionIndex, 0, overlay);\n    this.trackBackdrop();\n  }\n\n  /**\n   * @param {!Element} overlay\n   */\n  removeOverlay(overlay) {\n    var i = this._overlays.indexOf(overlay);\n    if (i === -1) {\n      return;\n    }\n    this._overlays.splice(i, 1);\n    this.trackBackdrop();\n  }\n\n  /**\n   * Returns the current overlay.\n   * @return {!Element|undefined}\n   */\n  currentOverlay() {\n    var i = this._overlays.length - 1;\n    return this._overlays[i];\n  }\n\n  /**\n   * Returns the current overlay z-index.\n   * @return {number}\n   */\n  currentOverlayZ() {\n    return this._getZ(this.currentOverlay());\n  }\n\n  /**\n   * Ensures that the minimum z-index of new overlays is at least `minimumZ`.\n   * This does not effect the z-index of any existing overlays.\n   * @param {number} minimumZ\n   */\n  ensureMinimumZ(minimumZ) {\n    this._minimumZ = Math.max(this._minimumZ, minimumZ);\n  }\n  focusOverlay() {\n    var current = /** @type {?} */this.currentOverlay();\n    if (current) {\n      current._applyFocus();\n    }\n  }\n\n  /**\n   * Updates the backdrop z-index.\n   */\n  trackBackdrop() {\n    var overlay = this._overlayWithBackdrop();\n    // Avoid creating the backdrop if there is no overlay with backdrop.\n    if (!overlay && !this._backdropElement) {\n      return;\n    }\n    this.backdropElement.style.zIndex = this._getZ(overlay) - 1;\n    this.backdropElement.opened = !!overlay;\n    // Property observers are not fired until element is attached\n    // in Polymer 2.x, so we ensure element is attached if needed.\n    // https://github.com/Polymer/polymer/issues/4526\n    this.backdropElement.prepare();\n  }\n\n  /**\n   * @return {!Array<!Element>}\n   */\n  getBackdrops() {\n    var backdrops = [];\n    for (var i = 0; i < this._overlays.length; i++) {\n      if (this._overlays[i].withBackdrop) {\n        backdrops.push(this._overlays[i]);\n      }\n    }\n    return backdrops;\n  }\n\n  /**\n   * Returns the z-index for the backdrop.\n   * @return {number}\n   */\n  backdropZ() {\n    return this._getZ(this._overlayWithBackdrop()) - 1;\n  }\n\n  /**\n   * Returns the top opened overlay that has a backdrop.\n   * @return {!Element|undefined}\n   * @private\n   */\n  _overlayWithBackdrop() {\n    for (var i = this._overlays.length - 1; i >= 0; i--) {\n      if (this._overlays[i].withBackdrop) {\n        return this._overlays[i];\n      }\n    }\n  }\n\n  /**\n   * Calculates the minimum z-index for the overlay.\n   * @param {Element=} overlay\n   * @private\n   */\n  _getZ(overlay) {\n    var z = this._minimumZ;\n    if (overlay) {\n      var z1 = Number(overlay.style.zIndex || window.getComputedStyle(overlay).zIndex);\n      // Check if is a number\n      // Number.isNaN not supported in IE 10+\n      if (z1 === z1) {\n        z = z1;\n      }\n    }\n    return z;\n  }\n\n  /**\n   * @param {!Element} element\n   * @param {number|string} z\n   * @private\n   */\n  _setZ(element, z) {\n    element.style.zIndex = z;\n  }\n\n  /**\n   * @param {!Element} overlay\n   * @param {number} aboveZ\n   * @private\n   */\n  _applyOverlayZ(overlay, aboveZ) {\n    this._setZ(overlay, aboveZ + 2);\n  }\n\n  /**\n   * Returns the deepest overlay in the path.\n   * @param {!Array<!Element>=} path\n   * @return {!Element|undefined}\n   * @suppress {missingProperties}\n   * @private\n   */\n  _overlayInPath(path) {\n    path = path || [];\n    for (var i = 0; i < path.length; i++) {\n      if (path[i]._manager === this) {\n        return path[i];\n      }\n    }\n  }\n\n  /**\n   * Ensures the click event is delegated to the right overlay.\n   * @param {!Event} event\n   * @private\n   */\n  _onCaptureClick(event) {\n    var i = this._overlays.length - 1;\n    if (i === -1) return;\n    var path = /** @type {!Array<!EventTarget>} */dom(event).path;\n    var overlay;\n    // Check if clicked outside of overlay.\n    while ((overlay = /** @type {?} */this._overlays[i]) && this._overlayInPath(path) !== overlay) {\n      overlay._onCaptureClick(event);\n      if (overlay.allowClickThrough) {\n        i--;\n      } else {\n        break;\n      }\n    }\n  }\n\n  /**\n   * Ensures the focus event is delegated to the right overlay.\n   * @param {!Event} event\n   * @private\n   */\n  _onCaptureFocus(event) {\n    var overlay = /** @type {?} */this.currentOverlay();\n    if (overlay) {\n      overlay._onCaptureFocus(event);\n    }\n  }\n\n  /**\n   * Ensures TAB and ESC keyboard events are delegated to the right overlay.\n   * @param {!Event} event\n   * @private\n   */\n  _onCaptureKeyDown(event) {\n    var overlay = /** @type {?} */this.currentOverlay();\n    if (overlay) {\n      if (IronA11yKeysBehavior.keyboardEventMatchesKeys(event, 'esc')) {\n        overlay._onCaptureEsc(event);\n      } else if (IronA11yKeysBehavior.keyboardEventMatchesKeys(event, 'tab')) {\n        overlay._onCaptureTab(event);\n      }\n    }\n  }\n\n  /**\n   * Returns if the overlay1 should be behind overlay2.\n   * @param {!Element} overlay1\n   * @param {!Element} overlay2\n   * @return {boolean}\n   * @suppress {missingProperties}\n   * @private\n   */\n  _shouldBeBehindOverlay(overlay1, overlay2) {\n    return !overlay1.alwaysOnTop && overlay2.alwaysOnTop;\n  }\n}\n;\nexport const IronOverlayManager = new IronOverlayManagerClass();","map":{"version":3,"names":["IronA11yKeysBehavior","dom","gestures","IronOverlayManagerClass","constructor","_overlays","_minimumZ","_backdropElement","addListener","document","documentElement","addEventListener","_onCaptureClick","bind","_onCaptureFocus","_onCaptureKeyDown","backdropElement","createElement","deepActiveElement","active","activeElement","Element","body","root","_bringOverlayAtIndexToFront","i","overlay","lastI","length","currentOverlay","_shouldBeBehindOverlay","minimumZ","Math","max","currentOverlayZ","_getZ","_applyOverlayZ","addOrRemoveOverlay","opened","addOverlay","removeOverlay","indexOf","trackBackdrop","insertionIndex","newZ","previousOverlay","splice","ensureMinimumZ","focusOverlay","current","_applyFocus","_overlayWithBackdrop","style","zIndex","prepare","getBackdrops","backdrops","withBackdrop","push","backdropZ","z","z1","Number","window","getComputedStyle","_setZ","element","aboveZ","_overlayInPath","path","_manager","event","allowClickThrough","keyboardEventMatchesKeys","_onCaptureEsc","_onCaptureTab","overlay1","overlay2","alwaysOnTop","IronOverlayManager"],"sources":["/workspaces/frontend/node_modules/@polymer/iron-overlay-behavior/iron-overlay-manager.js"],"sourcesContent":["/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport './iron-overlay-backdrop.js';\n\nimport {IronA11yKeysBehavior} from '@polymer/iron-a11y-keys-behavior/iron-a11y-keys-behavior.js';\nimport {dom} from '@polymer/polymer/lib/legacy/polymer.dom.js';\nimport * as gestures from '@polymer/polymer/lib/utils/gestures.js';\n\n/**\n * @package\n */\nexport class IronOverlayManagerClass {\n  constructor() {\n    /**\n     * Used to keep track of the opened overlays.\n     * @private {!Array<!Element>}\n     */\n    this._overlays = [];\n\n    /**\n     * iframes have a default z-index of 100,\n     * so this default should be at least that.\n     * @private {number}\n     */\n    this._minimumZ = 101;\n\n    /**\n     * Memoized backdrop element.\n     * @private {Element|null}\n     */\n    this._backdropElement = null;\n\n    // Enable document-wide tap recognizer.\n    // NOTE: Use useCapture=true to avoid accidentally prevention of the closing\n    // of an overlay via event.stopPropagation(). The only way to prevent\n    // closing of an overlay should be through its APIs.\n    // NOTE: enable tap on <html> to workaround Polymer/polymer#4459\n    // Pass no-op function because MSEdge 15 doesn't handle null as 2nd argument\n    // https://github.com/Microsoft/ChakraCore/issues/3863\n    gestures.addListener(document.documentElement, 'tap', function() {});\n    document.addEventListener('tap', this._onCaptureClick.bind(this), true);\n    document.addEventListener('focus', this._onCaptureFocus.bind(this), true);\n    document.addEventListener(\n        'keydown', this._onCaptureKeyDown.bind(this), true);\n  }\n\n  /**\n   * The shared backdrop element.\n   * @return {!Element} backdropElement\n   */\n  get backdropElement() {\n    if (!this._backdropElement) {\n      this._backdropElement = document.createElement('iron-overlay-backdrop');\n    }\n    return this._backdropElement;\n  }\n\n  /**\n   * The deepest active element.\n   * @return {!Element} activeElement the active element\n   */\n  get deepActiveElement() {\n    var active = document.activeElement;\n    // document.activeElement can be null\n    // https://developer.mozilla.org/en-US/docs/Web/API/Document/activeElement\n    // In IE 11, it can also be an object when operating in iframes.\n    // In these cases, default it to document.body.\n    if (!active || active instanceof Element === false) {\n      active = document.body;\n    }\n    while (active.root && dom(active.root).activeElement) {\n      active = dom(active.root).activeElement;\n    }\n    return active;\n  }\n\n  /**\n   * Brings the overlay at the specified index to the front.\n   * @param {number} i\n   * @private\n   */\n  _bringOverlayAtIndexToFront(i) {\n    var overlay = this._overlays[i];\n    if (!overlay) {\n      return;\n    }\n    var lastI = this._overlays.length - 1;\n    var currentOverlay = this._overlays[lastI];\n    // Ensure always-on-top overlay stays on top.\n    if (currentOverlay &&\n        this._shouldBeBehindOverlay(overlay, currentOverlay)) {\n      lastI--;\n    }\n    // If already the top element, return.\n    if (i >= lastI) {\n      return;\n    }\n    // Update z-index to be on top.\n    var minimumZ = Math.max(this.currentOverlayZ(), this._minimumZ);\n    if (this._getZ(overlay) <= minimumZ) {\n      this._applyOverlayZ(overlay, minimumZ);\n    }\n\n    // Shift other overlays behind the new on top.\n    while (i < lastI) {\n      this._overlays[i] = this._overlays[i + 1];\n      i++;\n    }\n    this._overlays[lastI] = overlay;\n  }\n\n  /**\n   * Adds the overlay and updates its z-index if it's opened, or removes it if\n   * it's closed. Also updates the backdrop z-index.\n   * @param {!Element} overlay\n   */\n  addOrRemoveOverlay(overlay) {\n    if (overlay.opened) {\n      this.addOverlay(overlay);\n    } else {\n      this.removeOverlay(overlay);\n    }\n  }\n\n  /**\n   * Tracks overlays for z-index and focus management.\n   * Ensures the last added overlay with always-on-top remains on top.\n   * @param {!Element} overlay\n   */\n  addOverlay(overlay) {\n    var i = this._overlays.indexOf(overlay);\n    if (i >= 0) {\n      this._bringOverlayAtIndexToFront(i);\n      this.trackBackdrop();\n      return;\n    }\n    var insertionIndex = this._overlays.length;\n    var currentOverlay = this._overlays[insertionIndex - 1];\n    var minimumZ = Math.max(this._getZ(currentOverlay), this._minimumZ);\n    var newZ = this._getZ(overlay);\n\n    // Ensure always-on-top overlay stays on top.\n    if (currentOverlay &&\n        this._shouldBeBehindOverlay(overlay, currentOverlay)) {\n      // This bumps the z-index of +2.\n      this._applyOverlayZ(currentOverlay, minimumZ);\n      insertionIndex--;\n      // Update minimumZ to match previous overlay's z-index.\n      var previousOverlay = this._overlays[insertionIndex - 1];\n      minimumZ = Math.max(this._getZ(previousOverlay), this._minimumZ);\n    }\n\n    // Update z-index and insert overlay.\n    if (newZ <= minimumZ) {\n      this._applyOverlayZ(overlay, minimumZ);\n    }\n    this._overlays.splice(insertionIndex, 0, overlay);\n\n    this.trackBackdrop();\n  }\n\n  /**\n   * @param {!Element} overlay\n   */\n  removeOverlay(overlay) {\n    var i = this._overlays.indexOf(overlay);\n    if (i === -1) {\n      return;\n    }\n    this._overlays.splice(i, 1);\n\n    this.trackBackdrop();\n  }\n\n  /**\n   * Returns the current overlay.\n   * @return {!Element|undefined}\n   */\n  currentOverlay() {\n    var i = this._overlays.length - 1;\n    return this._overlays[i];\n  }\n\n  /**\n   * Returns the current overlay z-index.\n   * @return {number}\n   */\n  currentOverlayZ() {\n    return this._getZ(this.currentOverlay());\n  }\n\n  /**\n   * Ensures that the minimum z-index of new overlays is at least `minimumZ`.\n   * This does not effect the z-index of any existing overlays.\n   * @param {number} minimumZ\n   */\n  ensureMinimumZ(minimumZ) {\n    this._minimumZ = Math.max(this._minimumZ, minimumZ);\n  }\n\n  focusOverlay() {\n    var current = /** @type {?} */ (this.currentOverlay());\n    if (current) {\n      current._applyFocus();\n    }\n  }\n\n  /**\n   * Updates the backdrop z-index.\n   */\n  trackBackdrop() {\n    var overlay = this._overlayWithBackdrop();\n    // Avoid creating the backdrop if there is no overlay with backdrop.\n    if (!overlay && !this._backdropElement) {\n      return;\n    }\n    this.backdropElement.style.zIndex = this._getZ(overlay) - 1;\n    this.backdropElement.opened = !!overlay;\n    // Property observers are not fired until element is attached\n    // in Polymer 2.x, so we ensure element is attached if needed.\n    // https://github.com/Polymer/polymer/issues/4526\n    this.backdropElement.prepare();\n  }\n\n  /**\n   * @return {!Array<!Element>}\n   */\n  getBackdrops() {\n    var backdrops = [];\n    for (var i = 0; i < this._overlays.length; i++) {\n      if (this._overlays[i].withBackdrop) {\n        backdrops.push(this._overlays[i]);\n      }\n    }\n    return backdrops;\n  }\n\n  /**\n   * Returns the z-index for the backdrop.\n   * @return {number}\n   */\n  backdropZ() {\n    return this._getZ(this._overlayWithBackdrop()) - 1;\n  }\n\n  /**\n   * Returns the top opened overlay that has a backdrop.\n   * @return {!Element|undefined}\n   * @private\n   */\n  _overlayWithBackdrop() {\n    for (var i = this._overlays.length - 1; i >= 0; i--) {\n      if (this._overlays[i].withBackdrop) {\n        return this._overlays[i];\n      }\n    }\n  }\n\n  /**\n   * Calculates the minimum z-index for the overlay.\n   * @param {Element=} overlay\n   * @private\n   */\n  _getZ(overlay) {\n    var z = this._minimumZ;\n    if (overlay) {\n      var z1 = Number(\n          overlay.style.zIndex || window.getComputedStyle(overlay).zIndex);\n      // Check if is a number\n      // Number.isNaN not supported in IE 10+\n      if (z1 === z1) {\n        z = z1;\n      }\n    }\n    return z;\n  }\n\n  /**\n   * @param {!Element} element\n   * @param {number|string} z\n   * @private\n   */\n  _setZ(element, z) {\n    element.style.zIndex = z;\n  }\n\n  /**\n   * @param {!Element} overlay\n   * @param {number} aboveZ\n   * @private\n   */\n  _applyOverlayZ(overlay, aboveZ) {\n    this._setZ(overlay, aboveZ + 2);\n  }\n\n  /**\n   * Returns the deepest overlay in the path.\n   * @param {!Array<!Element>=} path\n   * @return {!Element|undefined}\n   * @suppress {missingProperties}\n   * @private\n   */\n  _overlayInPath(path) {\n    path = path || [];\n    for (var i = 0; i < path.length; i++) {\n      if (path[i]._manager === this) {\n        return path[i];\n      }\n    }\n  }\n\n  /**\n   * Ensures the click event is delegated to the right overlay.\n   * @param {!Event} event\n   * @private\n   */\n  _onCaptureClick(event) {\n    var i = this._overlays.length - 1;\n    if (i === -1)\n      return;\n    var path = /** @type {!Array<!EventTarget>} */ (dom(event).path);\n    var overlay;\n    // Check if clicked outside of overlay.\n    while ((overlay = /** @type {?} */ (this._overlays[i])) &&\n           this._overlayInPath(path) !== overlay) {\n      overlay._onCaptureClick(event);\n      if (overlay.allowClickThrough) {\n        i--;\n      } else {\n        break;\n      }\n    }\n  }\n\n  /**\n   * Ensures the focus event is delegated to the right overlay.\n   * @param {!Event} event\n   * @private\n   */\n  _onCaptureFocus(event) {\n    var overlay = /** @type {?} */ (this.currentOverlay());\n    if (overlay) {\n      overlay._onCaptureFocus(event);\n    }\n  }\n\n  /**\n   * Ensures TAB and ESC keyboard events are delegated to the right overlay.\n   * @param {!Event} event\n   * @private\n   */\n  _onCaptureKeyDown(event) {\n    var overlay = /** @type {?} */ (this.currentOverlay());\n    if (overlay) {\n      if (IronA11yKeysBehavior.keyboardEventMatchesKeys(event, 'esc')) {\n        overlay._onCaptureEsc(event);\n      } else if (IronA11yKeysBehavior.keyboardEventMatchesKeys(event, 'tab')) {\n        overlay._onCaptureTab(event);\n      }\n    }\n  }\n\n  /**\n   * Returns if the overlay1 should be behind overlay2.\n   * @param {!Element} overlay1\n   * @param {!Element} overlay2\n   * @return {boolean}\n   * @suppress {missingProperties}\n   * @private\n   */\n  _shouldBeBehindOverlay(overlay1, overlay2) {\n    return !overlay1.alwaysOnTop && overlay2.alwaysOnTop;\n  }\n};\n\nexport const IronOverlayManager = new IronOverlayManagerClass();\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}