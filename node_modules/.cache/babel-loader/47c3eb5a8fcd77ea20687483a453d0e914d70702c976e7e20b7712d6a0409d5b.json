{"ast":null,"code":"/**\n * @license\n * Copyright (c) 2017 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { directive } from 'lit/directive.js';\nimport { LitRendererDirective } from '@vaadin/lit-renderer';\nexport class ComboBoxRendererDirective extends LitRendererDirective {\n  /**\n   * Adds the renderer callback to the combo-box.\n   */\n  addRenderer() {\n    this.element.renderer = (root, comboBox, model) => {\n      this.renderRenderer(root, model.item, model, comboBox);\n    };\n  }\n\n  /**\n   * Runs the renderer callback on the combo-box.\n   */\n  runRenderer() {\n    this.element.requestContentUpdate();\n  }\n\n  /**\n   * Removes the renderer callback from the combo-box.\n   */\n  removeRenderer() {\n    this.element.renderer = null;\n  }\n}\n\n/**\n * A Lit directive for rendering the content of the `<vaadin-combo-box-item>` elements.\n *\n * The directive accepts a renderer callback returning a Lit template and assigns it to the combo-box\n * via the `renderer` property. The renderer is called for each combo-box item when assigned\n * and whenever a single dependency or an array of dependencies changes.\n * It is not guaranteed that the renderer will be called immediately (synchronously) in both cases.\n *\n * Dependencies can be a single value or an array of values.\n * Values are checked against previous values with strict equality (`===`),\n * so the check won't detect nested property changes inside objects or arrays.\n * When dependencies are provided as an array, each item is checked against the previous value\n * at the same index with strict equality. Nested arrays are also checked only by strict\n * equality.\n *\n * Example of usage:\n * ```js\n * `<vaadin-combo-box\n *   ${comboBoxRenderer((item, model, comboBox) => html`...`)}\n * ></vaadin-combo-box>`\n * ```\n *\n * @param renderer the renderer callback that returns a Lit template.\n * @param dependencies a single dependency or an array of dependencies\n *                     which trigger a re-render when changed.\n */\nexport const comboBoxRenderer = directive(ComboBoxRendererDirective);","map":{"version":3,"names":["directive","LitRendererDirective","ComboBoxRendererDirective","addRenderer","element","renderer","root","comboBox","model","renderRenderer","item","runRenderer","requestContentUpdate","removeRenderer","comboBoxRenderer"],"sources":["/Users/sercanardil/Desktop/frontend/node_modules/@vaadin/combo-box/src/lit/renderer-directives.js"],"sourcesContent":["/**\n * @license\n * Copyright (c) 2017 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { directive } from 'lit/directive.js';\nimport { LitRendererDirective } from '@vaadin/lit-renderer';\n\nexport class ComboBoxRendererDirective extends LitRendererDirective {\n  /**\n   * Adds the renderer callback to the combo-box.\n   */\n  addRenderer() {\n    this.element.renderer = (root, comboBox, model) => {\n      this.renderRenderer(root, model.item, model, comboBox);\n    };\n  }\n\n  /**\n   * Runs the renderer callback on the combo-box.\n   */\n  runRenderer() {\n    this.element.requestContentUpdate();\n  }\n\n  /**\n   * Removes the renderer callback from the combo-box.\n   */\n  removeRenderer() {\n    this.element.renderer = null;\n  }\n}\n\n/**\n * A Lit directive for rendering the content of the `<vaadin-combo-box-item>` elements.\n *\n * The directive accepts a renderer callback returning a Lit template and assigns it to the combo-box\n * via the `renderer` property. The renderer is called for each combo-box item when assigned\n * and whenever a single dependency or an array of dependencies changes.\n * It is not guaranteed that the renderer will be called immediately (synchronously) in both cases.\n *\n * Dependencies can be a single value or an array of values.\n * Values are checked against previous values with strict equality (`===`),\n * so the check won't detect nested property changes inside objects or arrays.\n * When dependencies are provided as an array, each item is checked against the previous value\n * at the same index with strict equality. Nested arrays are also checked only by strict\n * equality.\n *\n * Example of usage:\n * ```js\n * `<vaadin-combo-box\n *   ${comboBoxRenderer((item, model, comboBox) => html`...`)}\n * ></vaadin-combo-box>`\n * ```\n *\n * @param renderer the renderer callback that returns a Lit template.\n * @param dependencies a single dependency or an array of dependencies\n *                     which trigger a re-render when changed.\n */\nexport const comboBoxRenderer = directive(ComboBoxRendererDirective);\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,oBAAoB,QAAQ,sBAAsB;AAE3D,OAAO,MAAMC,yBAAyB,SAASD,oBAAoB,CAAC;EAClE;AACF;AACA;EACEE,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,OAAO,CAACC,QAAQ,GAAG,CAACC,IAAI,EAAEC,QAAQ,EAAEC,KAAK,KAAK;MACjD,IAAI,CAACC,cAAc,CAACH,IAAI,EAAEE,KAAK,CAACE,IAAI,EAAEF,KAAK,EAAED,QAAQ,CAAC;IACxD,CAAC;EACH;;EAEA;AACF;AACA;EACEI,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACP,OAAO,CAACQ,oBAAoB,CAAC,CAAC;EACrC;;EAEA;AACF;AACA;EACEC,cAAcA,CAAA,EAAG;IACf,IAAI,CAACT,OAAO,CAACC,QAAQ,GAAG,IAAI;EAC9B;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMS,gBAAgB,GAAGd,SAAS,CAACE,yBAAyB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}