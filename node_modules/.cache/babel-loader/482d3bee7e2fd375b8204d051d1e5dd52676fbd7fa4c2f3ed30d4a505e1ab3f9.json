{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport \"./ha-form\";\nimport { css, html, LitElement } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nexport let HaFormGrid = _decorate([customElement(\"ha-form-grid\")], function (_initialize, _LitElement) {\n  class HaFormGrid extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaFormGrid,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"data\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"schema\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"disabled\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"computeLabel\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"computeHelper\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"focus\",\n      value: async function focus() {\n        var _this$renderRoot$quer;\n        await this.updateComplete;\n        (_this$renderRoot$quer = this.renderRoot.querySelector(\"ha-form\")) === null || _this$renderRoot$quer === void 0 || _this$renderRoot$quer.focus();\n      }\n    }, {\n      kind: \"method\",\n      key: \"updated\",\n      value: function updated(changedProps) {\n        _get(_getPrototypeOf(HaFormGrid.prototype), \"updated\", this).call(this, changedProps);\n        if (changedProps.has(\"schema\")) {\n          if (this.schema.column_min_width) {\n            this.style.setProperty(\"--form-grid-min-width\", this.schema.column_min_width);\n          } else {\n            this.style.setProperty(\"--form-grid-min-width\", \"\");\n          }\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        return html`\n      ${this.schema.schema.map(item => html`\n          <ha-form\n            .hass=${this.hass}\n            .data=${this.data}\n            .schema=${[item]}\n            .disabled=${this.disabled}\n            .computeLabel=${this.computeLabel}\n            .computeHelper=${this.computeHelper}\n          ></ha-form>\n        `)}\n    `;\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css`\n      :host {\n        display: grid !important;\n        grid-template-columns: repeat(\n          var(--form-grid-column-count, auto-fit),\n          minmax(var(--form-grid-min-width, 200px), 1fr)\n        );\n        grid-column-gap: 8px;\n        grid-row-gap: 24px;\n      }\n      :host > ha-form {\n        display: block;\n      }\n    `;\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","customElement","property","HaFormGrid","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","type","Boolean","focus","_this$renderRoot$quer","updateComplete","renderRoot","querySelector","updated","changedProps","_get","_getPrototypeOf","prototype","call","has","schema","column_min_width","style","setProperty","render","map","item","hass","data","disabled","computeLabel","computeHelper","static","styles"],"sources":["/workspaces/frontend/src/components/ha-form/ha-form-grid.ts"],"sourcesContent":["import \"./ha-form\";\nimport {\n  css,\n  CSSResultGroup,\n  html,\n  LitElement,\n  PropertyValues,\n  TemplateResult,\n} from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport type {\n  HaFormGridSchema,\n  HaFormDataContainer,\n  HaFormElement,\n  HaFormSchema,\n} from \"./types\";\nimport type { HomeAssistant } from \"../../types\";\n\n@customElement(\"ha-form-grid\")\nexport class HaFormGrid extends LitElement implements HaFormElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public data!: HaFormDataContainer;\n\n  @property({ attribute: false }) public schema!: HaFormGridSchema;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @property({ attribute: false }) public computeLabel?: (\n    schema: HaFormSchema,\n    data?: HaFormDataContainer\n  ) => string;\n\n  @property({ attribute: false }) public computeHelper?: (\n    schema: HaFormSchema\n  ) => string;\n\n  public async focus() {\n    await this.updateComplete;\n    this.renderRoot.querySelector(\"ha-form\")?.focus();\n  }\n\n  protected updated(changedProps: PropertyValues): void {\n    super.updated(changedProps);\n    if (changedProps.has(\"schema\")) {\n      if (this.schema.column_min_width) {\n        this.style.setProperty(\n          \"--form-grid-min-width\",\n          this.schema.column_min_width\n        );\n      } else {\n        this.style.setProperty(\"--form-grid-min-width\", \"\");\n      }\n    }\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      ${this.schema.schema.map(\n        (item) => html`\n          <ha-form\n            .hass=${this.hass}\n            .data=${this.data}\n            .schema=${[item]}\n            .disabled=${this.disabled}\n            .computeLabel=${this.computeLabel}\n            .computeHelper=${this.computeHelper}\n          ></ha-form>\n        `\n      )}\n    `;\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      :host {\n        display: grid !important;\n        grid-template-columns: repeat(\n          var(--form-grid-column-count, auto-fit),\n          minmax(var(--form-grid-min-width, 200px), 1fr)\n        );\n        grid-column-gap: 8px;\n        grid-row-gap: 24px;\n      }\n      :host > ha-form {\n        display: block;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-form-grid\": HaFormGrid;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}