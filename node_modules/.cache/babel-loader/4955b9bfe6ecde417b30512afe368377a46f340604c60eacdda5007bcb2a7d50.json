{"ast":null,"code":"// Nessages to be processed inside the Cast Receiver app\n\nimport { CAST_DEV } from \"./const\";\nimport { CAST_DEV_HASS_URL } from \"./dev_const\";\nexport const castSendAuth = (cast, auth) => cast.sendMessage({\n  type: \"connect\",\n  refreshToken: auth.data.refresh_token,\n  clientId: auth.data.clientId,\n  hassUrl: CAST_DEV ? CAST_DEV_HASS_URL : auth.data.hassUrl\n});\nexport const castSendShowLovelaceView = (cast, hassUrl, viewPath, urlPath) => cast.sendMessage({\n  type: \"show_lovelace_view\",\n  viewPath,\n  urlPath: urlPath || null,\n  hassUrl: CAST_DEV ? CAST_DEV_HASS_URL : hassUrl\n});\nexport const castSendShowDemo = cast => cast.sendMessage({\n  type: \"show_demo\"\n});\nexport const ensureConnectedCastSession = (cast, auth) => {\n  if (cast.castConnectedToOurHass) {\n    return undefined;\n  }\n  return new Promise(resolve => {\n    const unsub = cast.addEventListener(\"connection-changed\", () => {\n      if (cast.castConnectedToOurHass) {\n        unsub();\n        resolve();\n      }\n    });\n    castSendAuth(cast, auth);\n  });\n};","map":{"version":3,"names":["CAST_DEV","CAST_DEV_HASS_URL","castSendAuth","cast","auth","sendMessage","type","refreshToken","data","refresh_token","clientId","hassUrl","castSendShowLovelaceView","viewPath","urlPath","castSendShowDemo","ensureConnectedCastSession","castConnectedToOurHass","undefined","Promise","resolve","unsub","addEventListener"],"sources":["/workspaces/frontend/src/cast/receiver_messages.ts"],"sourcesContent":["// Nessages to be processed inside the Cast Receiver app\n\nimport { Auth } from \"home-assistant-js-websocket\";\nimport { CastManager } from \"./cast_manager\";\nimport { CAST_DEV } from \"./const\";\nimport { CAST_DEV_HASS_URL } from \"./dev_const\";\nimport { BaseCastMessage } from \"./types\";\n\nexport interface GetStatusMessage extends BaseCastMessage {\n  type: \"get_status\";\n  hassUrl?: string;\n  hassUUID?: string;\n}\n\nexport interface ConnectMessage extends BaseCastMessage {\n  type: \"connect\";\n  refreshToken: string;\n  clientId: string | null;\n  hassUrl: string;\n  hassUUID?: string;\n}\n\nexport interface ShowLovelaceViewMessage extends BaseCastMessage {\n  type: \"show_lovelace_view\";\n  viewPath: string | number | null;\n  urlPath: string | null;\n  hassUrl: string;\n  hassUUID?: string;\n}\n\nexport interface ShowDemoMessage extends BaseCastMessage {\n  type: \"show_demo\";\n}\n\nexport type HassMessage =\n  | ShowDemoMessage\n  | GetStatusMessage\n  | ConnectMessage\n  | ShowLovelaceViewMessage;\n\nexport const castSendAuth = (cast: CastManager, auth: Auth) =>\n  cast.sendMessage({\n    type: \"connect\",\n    refreshToken: auth.data.refresh_token,\n    clientId: auth.data.clientId,\n    hassUrl: CAST_DEV ? CAST_DEV_HASS_URL : auth.data.hassUrl,\n  });\n\nexport const castSendShowLovelaceView = (\n  cast: CastManager,\n  hassUrl: string,\n  viewPath: ShowLovelaceViewMessage[\"viewPath\"],\n  urlPath?: string | null\n) =>\n  cast.sendMessage({\n    type: \"show_lovelace_view\",\n    viewPath,\n    urlPath: urlPath || null,\n    hassUrl: CAST_DEV ? CAST_DEV_HASS_URL : hassUrl,\n  });\n\nexport const castSendShowDemo = (cast: CastManager) =>\n  cast.sendMessage({\n    type: \"show_demo\",\n  });\n\nexport const ensureConnectedCastSession = (cast: CastManager, auth: Auth) => {\n  if (cast.castConnectedToOurHass) {\n    return undefined;\n  }\n\n  return new Promise<void>((resolve) => {\n    const unsub = cast.addEventListener(\"connection-changed\", () => {\n      if (cast.castConnectedToOurHass) {\n        unsub();\n        resolve();\n      }\n    });\n\n    castSendAuth(cast, auth);\n  });\n};\n"],"mappings":"AAAA;;AAIA,SAASA,QAAQ,QAAQ,SAAS;AAClC,SAASC,iBAAiB,QAAQ,aAAa;AAmC/C,OAAO,MAAMC,YAAY,GAAGA,CAACC,IAAiB,EAAEC,IAAU,KACxDD,IAAI,CAACE,WAAW,CAAC;EACfC,IAAI,EAAE,SAAS;EACfC,YAAY,EAAEH,IAAI,CAACI,IAAI,CAACC,aAAa;EACrCC,QAAQ,EAAEN,IAAI,CAACI,IAAI,CAACE,QAAQ;EAC5BC,OAAO,EAAEX,QAAQ,GAAGC,iBAAiB,GAAGG,IAAI,CAACI,IAAI,CAACG;AACpD,CAAC,CAAC;AAEJ,OAAO,MAAMC,wBAAwB,GAAGA,CACtCT,IAAiB,EACjBQ,OAAe,EACfE,QAA6C,EAC7CC,OAAuB,KAEvBX,IAAI,CAACE,WAAW,CAAC;EACfC,IAAI,EAAE,oBAAoB;EAC1BO,QAAQ;EACRC,OAAO,EAAEA,OAAO,IAAI,IAAI;EACxBH,OAAO,EAAEX,QAAQ,GAAGC,iBAAiB,GAAGU;AAC1C,CAAC,CAAC;AAEJ,OAAO,MAAMI,gBAAgB,GAAIZ,IAAiB,IAChDA,IAAI,CAACE,WAAW,CAAC;EACfC,IAAI,EAAE;AACR,CAAC,CAAC;AAEJ,OAAO,MAAMU,0BAA0B,GAAGA,CAACb,IAAiB,EAAEC,IAAU,KAAK;EAC3E,IAAID,IAAI,CAACc,sBAAsB,EAAE;IAC/B,OAAOC,SAAS;EAClB;EAEA,OAAO,IAAIC,OAAO,CAAQC,OAAO,IAAK;IACpC,MAAMC,KAAK,GAAGlB,IAAI,CAACmB,gBAAgB,CAAC,oBAAoB,EAAE,MAAM;MAC9D,IAAInB,IAAI,CAACc,sBAAsB,EAAE;QAC/BI,KAAK,CAAC,CAAC;QACPD,OAAO,CAAC,CAAC;MACX;IACF,CAAC,CAAC;IAEFlB,YAAY,CAACC,IAAI,EAAEC,IAAI,CAAC;EAC1B,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}