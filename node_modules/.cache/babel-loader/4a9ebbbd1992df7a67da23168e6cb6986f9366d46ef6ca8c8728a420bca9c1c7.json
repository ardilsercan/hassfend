{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"modes\"];\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport { darkStyles, derivedStyles } from \"../../resources/styles-data\";\nimport { hex2rgb, lab2hex, lab2rgb, rgb2hex, rgb2lab } from \"../color/convert-color\";\nimport { hexBlend } from \"../color/hex\";\nimport { labBrighten, labDarken } from \"../color/lab\";\nimport { rgbContrast } from \"../color/rgb\";\nvar PROCESSED_THEMES = {};\n\n/**\n * Apply a theme to an element by setting the CSS variables on it.\n *\n * element: Element to apply theme on.\n * themes: HASS theme information (e.g. active dark mode and globally active theme name).\n * selectedTheme: Selected theme (used to override the globally active theme for this element).\n * themeSettings: Additional settings such as selected colors.\n */\nexport var applyThemesOnElement = function applyThemesOnElement(element, themes, selectedTheme, themeSettings, main) {\n  var _element$__themes2, _element$__themes3;\n  // If there is no explicitly desired theme provided, and the element is the main element we automatically\n  // use the active one from `themes`.\n  var themeToApply = selectedTheme || (main ? themes.theme : undefined);\n\n  // If there is no explicitly desired dark mode provided, we automatically\n  // use the active one from `themes`.\n  var darkMode = (themeSettings === null || themeSettings === void 0 ? void 0 : themeSettings.dark) !== undefined ? themeSettings.dark : (themes === null || themes === void 0 ? void 0 : themes.darkMode) || false;\n  var cacheKey = themeToApply;\n  var themeRules = {};\n  if (themeToApply && darkMode) {\n    cacheKey = \"\".concat(cacheKey, \"__dark\");\n    themeRules = Object.assign({}, darkStyles);\n  }\n  if (themeToApply === \"default\") {\n    var _element$__themes;\n    // Determine the primary and accent colors from the current settings.\n    // Fallbacks are implicitly the HA default blue and orange or the\n    // derived \"darkStyles\" values, depending on the light vs dark mode.\n    var primaryColor = themeSettings === null || themeSettings === void 0 ? void 0 : themeSettings.primaryColor;\n    var accentColor = themeSettings === null || themeSettings === void 0 ? void 0 : themeSettings.accentColor;\n    if (darkMode && primaryColor) {\n      themeRules[\"app-header-background-color\"] = hexBlend(primaryColor, \"#121212\", 8);\n    }\n    if (primaryColor) {\n      cacheKey = \"\".concat(cacheKey, \"__primary_\").concat(primaryColor);\n      var rgbPrimaryColor = hex2rgb(primaryColor);\n      var labPrimaryColor = rgb2lab(rgbPrimaryColor);\n      themeRules[\"primary-color\"] = primaryColor;\n      var rgbLightPrimaryColor = lab2rgb(labBrighten(labPrimaryColor));\n      themeRules[\"light-primary-color\"] = rgb2hex(rgbLightPrimaryColor);\n      themeRules[\"dark-primary-color\"] = lab2hex(labDarken(labPrimaryColor));\n      themeRules[\"text-primary-color\"] = rgbContrast(rgbPrimaryColor, [33, 33, 33]) < 6 ? \"#fff\" : \"#212121\";\n      themeRules[\"text-light-primary-color\"] = rgbContrast(rgbLightPrimaryColor, [33, 33, 33]) < 6 ? \"#fff\" : \"#212121\";\n      themeRules[\"state-icon-color\"] = themeRules[\"dark-primary-color\"];\n    }\n    if (accentColor) {\n      cacheKey = \"\".concat(cacheKey, \"__accent_\").concat(accentColor);\n      themeRules[\"accent-color\"] = accentColor;\n      var rgbAccentColor = hex2rgb(accentColor);\n      themeRules[\"text-accent-color\"] = rgbContrast(rgbAccentColor, [33, 33, 33]) < 6 ? \"#fff\" : \"#212121\";\n    }\n\n    // Nothing was changed\n    if (((_element$__themes = element.__themes) === null || _element$__themes === void 0 ? void 0 : _element$__themes.cacheKey) === cacheKey) {\n      return;\n    }\n  }\n\n  // Custom theme logic (not relevant for default theme, since it would override\n  // the derived calculations from above)\n  if (themeToApply && themeToApply !== \"default\" && themes.themes[themeToApply]) {\n    // Apply theme vars that are relevant for all modes (but extract the \"modes\" section first)\n    var _themes$themes$themeT = themes.themes[themeToApply],\n      modes = _themes$themes$themeT.modes,\n      baseThemeRules = _objectWithoutProperties(_themes$themes$themeT, _excluded);\n    themeRules = Object.assign(Object.assign({}, themeRules), baseThemeRules);\n\n    // Apply theme vars for the specific mode if available\n    if (modes) {\n      if (darkMode) {\n        themeRules = Object.assign(Object.assign({}, themeRules), modes.dark);\n      } else {\n        themeRules = Object.assign(Object.assign({}, themeRules), modes.light);\n      }\n    }\n  }\n  if (!((_element$__themes2 = element.__themes) !== null && _element$__themes2 !== void 0 && _element$__themes2.keys) && !Object.keys(themeRules).length) {\n    // No styles to reset, and no styles to set\n    return;\n  }\n  var newTheme = Object.keys(themeRules).length && cacheKey ? PROCESSED_THEMES[cacheKey] || processTheme(cacheKey, themeRules) : undefined;\n\n  // Add previous set keys to reset them, and new theme\n  var styles = Object.assign(Object.assign({}, (_element$__themes3 = element.__themes) === null || _element$__themes3 === void 0 ? void 0 : _element$__themes3.keys), newTheme === null || newTheme === void 0 ? void 0 : newTheme.styles);\n  element.__themes = {\n    cacheKey: cacheKey,\n    keys: newTheme === null || newTheme === void 0 ? void 0 : newTheme.keys\n  };\n\n  // Set and/or reset styles\n  if (element.updateStyles) {\n    // Use updateStyles() method of Polymer elements\n    element.updateStyles(styles);\n  } else if (window.ShadyCSS) {\n    // Use ShadyCSS if available\n    window.ShadyCSS.styleSubtree( /** @type {!HTMLElement} */element, styles);\n  } else {\n    for (var s in styles) {\n      if (s === null) {\n        element.style.removeProperty(s);\n      } else {\n        element.style.setProperty(s, styles[s]);\n      }\n    }\n  }\n};\nvar processTheme = function processTheme(cacheKey, theme) {\n  if (!theme || !Object.keys(theme).length) {\n    return undefined;\n  }\n  var combinedTheme = Object.assign(Object.assign({}, derivedStyles), theme);\n  var styles = {};\n  var keys = {};\n  for (var _i = 0, _Object$keys = Object.keys(combinedTheme); _i < _Object$keys.length; _i++) {\n    var _key = _Object$keys[_i];\n    var prefixedKey = \"--\".concat(_key);\n    var value = String(combinedTheme[_key]);\n    styles[prefixedKey] = value;\n    keys[prefixedKey] = \"\";\n\n    // Try to create a rgb value for this key if it is not a var\n    if (!value.startsWith(\"#\")) {\n      // Can't convert non hex value\n      continue;\n    }\n    var rgbKey = \"rgb-\".concat(_key);\n    if (combinedTheme[rgbKey] !== undefined) {\n      // Theme has it's own rgb value\n      continue;\n    }\n    try {\n      var rgbValue = hex2rgb(value).join(\",\");\n      var prefixedRgbKey = \"--\".concat(rgbKey);\n      styles[prefixedRgbKey] = rgbValue;\n      keys[prefixedRgbKey] = \"\";\n    } catch (err) {\n      continue;\n    }\n  }\n  PROCESSED_THEMES[cacheKey] = {\n    styles: styles,\n    keys: keys\n  };\n  return {\n    styles: styles,\n    keys: keys\n  };\n};\nexport var invalidateThemeCache = function invalidateThemeCache() {\n  PROCESSED_THEMES = {};\n};","map":{"version":3,"names":["darkStyles","derivedStyles","hex2rgb","lab2hex","lab2rgb","rgb2hex","rgb2lab","hexBlend","labBrighten","labDarken","rgbContrast","PROCESSED_THEMES","applyThemesOnElement","element","themes","selectedTheme","themeSettings","main","_element$__themes2","_element$__themes3","themeToApply","theme","undefined","darkMode","dark","cacheKey","themeRules","concat","Object","assign","_element$__themes","primaryColor","accentColor","rgbPrimaryColor","labPrimaryColor","rgbLightPrimaryColor","rgbAccentColor","__themes","_themes$themes$themeT","modes","baseThemeRules","_objectWithoutProperties","_excluded","light","keys","length","newTheme","processTheme","styles","updateStyles","window","ShadyCSS","styleSubtree","s","style","removeProperty","setProperty","combinedTheme","_i","_Object$keys","key","prefixedKey","value","String","startsWith","rgbKey","rgbValue","join","prefixedRgbKey","err","invalidateThemeCache"],"sources":["/Users/sercanardil/Desktop/frontend/src/common/dom/apply_themes_on_element.ts"],"sourcesContent":["import { ThemeVars } from \"../../data/ws-themes\";\nimport { darkStyles, derivedStyles } from \"../../resources/styles-data\";\nimport type { HomeAssistant } from \"../../types\";\nimport {\n  hex2rgb,\n  lab2hex,\n  lab2rgb,\n  rgb2hex,\n  rgb2lab,\n} from \"../color/convert-color\";\nimport { hexBlend } from \"../color/hex\";\nimport { labBrighten, labDarken } from \"../color/lab\";\nimport { rgbContrast } from \"../color/rgb\";\n\ninterface ProcessedTheme {\n  keys: { [key: string]: \"\" };\n  styles: Record<string, string>;\n}\n\nlet PROCESSED_THEMES: Record<string, ProcessedTheme> = {};\n\n/**\n * Apply a theme to an element by setting the CSS variables on it.\n *\n * element: Element to apply theme on.\n * themes: HASS theme information (e.g. active dark mode and globally active theme name).\n * selectedTheme: Selected theme (used to override the globally active theme for this element).\n * themeSettings: Additional settings such as selected colors.\n */\nexport const applyThemesOnElement = (\n  element,\n  themes: HomeAssistant[\"themes\"],\n  selectedTheme?: string,\n  themeSettings?: Partial<HomeAssistant[\"selectedTheme\"]>,\n  main?: boolean\n) => {\n  // If there is no explicitly desired theme provided, and the element is the main element we automatically\n  // use the active one from `themes`.\n  const themeToApply = selectedTheme || (main ? themes.theme : undefined);\n\n  // If there is no explicitly desired dark mode provided, we automatically\n  // use the active one from `themes`.\n  const darkMode =\n    themeSettings?.dark !== undefined\n      ? themeSettings.dark\n      : themes?.darkMode || false;\n\n  let cacheKey = themeToApply;\n  let themeRules: Partial<ThemeVars> = {};\n\n  if (themeToApply && darkMode) {\n    cacheKey = `${cacheKey}__dark`;\n    themeRules = { ...darkStyles };\n  }\n\n  if (themeToApply === \"default\") {\n    // Determine the primary and accent colors from the current settings.\n    // Fallbacks are implicitly the HA default blue and orange or the\n    // derived \"darkStyles\" values, depending on the light vs dark mode.\n    const primaryColor = themeSettings?.primaryColor;\n    const accentColor = themeSettings?.accentColor;\n\n    if (darkMode && primaryColor) {\n      themeRules[\"app-header-background-color\"] = hexBlend(\n        primaryColor,\n        \"#121212\",\n        8\n      );\n    }\n\n    if (primaryColor) {\n      cacheKey = `${cacheKey}__primary_${primaryColor}`;\n      const rgbPrimaryColor = hex2rgb(primaryColor);\n      const labPrimaryColor = rgb2lab(rgbPrimaryColor);\n      themeRules[\"primary-color\"] = primaryColor;\n      const rgbLightPrimaryColor = lab2rgb(labBrighten(labPrimaryColor));\n      themeRules[\"light-primary-color\"] = rgb2hex(rgbLightPrimaryColor);\n      themeRules[\"dark-primary-color\"] = lab2hex(labDarken(labPrimaryColor));\n      themeRules[\"text-primary-color\"] =\n        rgbContrast(rgbPrimaryColor, [33, 33, 33]) < 6 ? \"#fff\" : \"#212121\";\n      themeRules[\"text-light-primary-color\"] =\n        rgbContrast(rgbLightPrimaryColor, [33, 33, 33]) < 6\n          ? \"#fff\"\n          : \"#212121\";\n      themeRules[\"state-icon-color\"] = themeRules[\"dark-primary-color\"];\n    }\n    if (accentColor) {\n      cacheKey = `${cacheKey}__accent_${accentColor}`;\n      themeRules[\"accent-color\"] = accentColor;\n      const rgbAccentColor = hex2rgb(accentColor);\n      themeRules[\"text-accent-color\"] =\n        rgbContrast(rgbAccentColor, [33, 33, 33]) < 6 ? \"#fff\" : \"#212121\";\n    }\n\n    // Nothing was changed\n    if (element.__themes?.cacheKey === cacheKey) {\n      return;\n    }\n  }\n\n  // Custom theme logic (not relevant for default theme, since it would override\n  // the derived calculations from above)\n  if (\n    themeToApply &&\n    themeToApply !== \"default\" &&\n    themes.themes[themeToApply]\n  ) {\n    // Apply theme vars that are relevant for all modes (but extract the \"modes\" section first)\n    const { modes, ...baseThemeRules } = themes.themes[themeToApply];\n    themeRules = { ...themeRules, ...baseThemeRules };\n\n    // Apply theme vars for the specific mode if available\n    if (modes) {\n      if (darkMode) {\n        themeRules = { ...themeRules, ...modes.dark };\n      } else {\n        themeRules = { ...themeRules, ...modes.light };\n      }\n    }\n  }\n\n  if (!element.__themes?.keys && !Object.keys(themeRules).length) {\n    // No styles to reset, and no styles to set\n    return;\n  }\n\n  const newTheme =\n    Object.keys(themeRules).length && cacheKey\n      ? PROCESSED_THEMES[cacheKey] || processTheme(cacheKey, themeRules)\n      : undefined;\n\n  // Add previous set keys to reset them, and new theme\n  const styles = { ...element.__themes?.keys, ...newTheme?.styles };\n  element.__themes = { cacheKey, keys: newTheme?.keys };\n\n  // Set and/or reset styles\n  if (element.updateStyles) {\n    // Use updateStyles() method of Polymer elements\n    element.updateStyles(styles);\n  } else if (window.ShadyCSS) {\n    // Use ShadyCSS if available\n    window.ShadyCSS.styleSubtree(/** @type {!HTMLElement} */ element, styles);\n  } else {\n    for (const s in styles) {\n      if (s === null) {\n        element.style.removeProperty(s);\n      } else {\n        element.style.setProperty(s, styles[s]);\n      }\n    }\n  }\n};\n\nconst processTheme = (\n  cacheKey: string,\n  theme: Partial<ThemeVars>\n): ProcessedTheme | undefined => {\n  if (!theme || !Object.keys(theme).length) {\n    return undefined;\n  }\n  const combinedTheme: Partial<ThemeVars> = {\n    ...derivedStyles,\n    ...theme,\n  };\n  const styles = {};\n  const keys = {};\n  for (const key of Object.keys(combinedTheme)) {\n    const prefixedKey = `--${key}`;\n    const value = String(combinedTheme[key]);\n    styles[prefixedKey] = value;\n    keys[prefixedKey] = \"\";\n\n    // Try to create a rgb value for this key if it is not a var\n    if (!value.startsWith(\"#\")) {\n      // Can't convert non hex value\n      continue;\n    }\n\n    const rgbKey = `rgb-${key}`;\n    if (combinedTheme[rgbKey] !== undefined) {\n      // Theme has it's own rgb value\n      continue;\n    }\n    try {\n      const rgbValue = hex2rgb(value).join(\",\");\n      const prefixedRgbKey = `--${rgbKey}`;\n      styles[prefixedRgbKey] = rgbValue;\n      keys[prefixedRgbKey] = \"\";\n    } catch (err: any) {\n      continue;\n    }\n  }\n  PROCESSED_THEMES[cacheKey] = { styles, keys };\n  return { styles, keys };\n};\n\nexport const invalidateThemeCache = () => {\n  PROCESSED_THEMES = {};\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}