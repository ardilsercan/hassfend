{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport { html, LitElement } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport \"../../../components/ha-settings-row\";\nimport \"../../../components/ha-switch\";\nimport { storeState } from \"../../../util/ha-pref-storage\";\nlet HaDebugConnectionRow = _decorate([customElement(\"ha-debug-connection-row\")], function (_initialize, _LitElement) {\n  class HaDebugConnectionRow extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaDebugConnectionRow,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"narrow\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        return html`\n      <ha-settings-row .narrow=${this.narrow}>\n        <span slot=\"heading\">\n          ${this.hass.localize(\"ui.panel.developer-tools.tabs.debug.debug_connection.title\")}\n        </span>\n        <span slot=\"description\">\n          ${this.hass.localize(\"ui.panel.developer-tools.tabs.debug.debug_connection.description\")}\n        </span>\n        <ha-switch\n          .checked=${this.hass.debugConnection}\n          @change=${this._checkedChanged}\n        ></ha-switch>\n      </ha-settings-row>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_checkedChanged\",\n      value: async function _checkedChanged(ev) {\n        const debugConnection = ev.target.checked;\n        if (debugConnection === this.hass.debugConnection) {\n          return;\n        }\n        this.hass.debugConnection = debugConnection;\n        storeState(this.hass);\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["html","LitElement","customElement","property","storeState","HaDebugConnectionRow","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","type","Boolean","render","narrow","hass","localize","debugConnection","_checkedChanged","ev","target","checked"],"sources":["/Users/sercanardil/Desktop/frontend/src/panels/developer-tools/debug/ha-debug-connection-row.ts"],"sourcesContent":["import { html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport \"../../../components/ha-settings-row\";\nimport \"../../../components/ha-switch\";\nimport type { HaSwitch } from \"../../../components/ha-switch\";\nimport type { HomeAssistant } from \"../../../types\";\nimport { storeState } from \"../../../util/ha-pref-storage\";\n\n@customElement(\"ha-debug-connection-row\")\nclass HaDebugConnectionRow extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ type: Boolean }) public narrow = false;\n\n  protected render(): TemplateResult {\n    return html`\n      <ha-settings-row .narrow=${this.narrow}>\n        <span slot=\"heading\">\n          ${this.hass.localize(\n            \"ui.panel.developer-tools.tabs.debug.debug_connection.title\"\n          )}\n        </span>\n        <span slot=\"description\">\n          ${this.hass.localize(\n            \"ui.panel.developer-tools.tabs.debug.debug_connection.description\"\n          )}\n        </span>\n        <ha-switch\n          .checked=${this.hass.debugConnection}\n          @change=${this._checkedChanged}\n        ></ha-switch>\n      </ha-settings-row>\n    `;\n  }\n\n  private async _checkedChanged(ev: Event) {\n    const debugConnection = (ev.target as HaSwitch).checked;\n    if (debugConnection === this.hass.debugConnection) {\n      return;\n    }\n    this.hass.debugConnection = debugConnection;\n    storeState(this.hass);\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-debug-connection-row\": HaDebugConnectionRow;\n  }\n}\n"],"mappings":";AAAA,SAASA,IAAI,EAAEC,UAAU,QAAwB,KAAK;AACtD,SAASC,aAAa,EAAEC,QAAQ,QAAQ,gBAAgB;AACxD,OAAO,qCAAqC;AAC5C,OAAO,+BAA+B;AAGtC,SAASC,UAAU,QAAQ,+BAA+B;AAAC,IAGrDC,oBAAoB,GAAAC,SAAA,EADzBJ,aAAa,CAAC,yBAAyB,CAAC,aAAAK,WAAA,EAAAC,WAAA;EAAzC,MACMH,oBAAoB,SAAAG,WAAA,CAAoB;IAAAC,YAAA,GAAAC,IAAA;MAAA,SAAAA,IAAA;MAAAH,WAAA;IAAA;EAkC9C;EAAC;IAAAI,CAAA,EAlCKN,oBAAoB;IAAAO,CAAA;MAAAC,IAAA;MAAAC,UAAA,GACvBX,QAAQ,CAAC;QAAEY,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAC,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAE9BX,QAAQ,CAAC;QAAEe,IAAI,EAAEC;MAAQ,CAAC,CAAC;MAAAH,GAAA;MAAAC,MAAA;QAAA,OAAiB,KAAK;MAAA;IAAA;MAAAJ,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAElD,SAAAG,OAAA,EAAmC;QACjC,OAAOpB,IAAK;AAChB,iCAAiC,IAAI,CAACqB,MAAO;AAC7C;AACA,YAAY,IAAI,CAACC,IAAI,CAACC,QAAQ,CAClB,4DACF,CAAE;AACZ;AACA;AACA,YAAY,IAAI,CAACD,IAAI,CAACC,QAAQ,CAClB,kEACF,CAAE;AACZ;AACA;AACA,qBAAqB,IAAI,CAACD,IAAI,CAACE,eAAgB;AAC/C,oBAAoB,IAAI,CAACC,eAAgB;AACzC;AACA;AACA,KAAK;MACH;IAAC;MAAAZ,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,eAAAQ,gBAA8BC,EAAS,EAAE;QACvC,MAAMF,eAAe,GAAIE,EAAE,CAACC,MAAM,CAAcC,OAAO;QACvD,IAAIJ,eAAe,KAAK,IAAI,CAACF,IAAI,CAACE,eAAe,EAAE;UACjD;QACF;QACA,IAAI,CAACF,IAAI,CAACE,eAAe,GAAGA,eAAe;QAC3CpB,UAAU,CAAC,IAAI,CAACkB,IAAI,CAAC;MACvB;IAAC;EAAA;AAAA,GAjCgCrB,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}