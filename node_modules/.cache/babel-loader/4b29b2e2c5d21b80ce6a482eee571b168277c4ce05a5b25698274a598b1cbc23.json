{"ast":null,"code":"import \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nexport var loadGenericDialog = function loadGenericDialog() {\n  return import(\"./confirm-event-dialog-box\");\n};\nexport var showConfirmEventDialog = function showConfirmEventDialog(element, dialogParams) {\n  return new Promise(function (resolve) {\n    var origConfirm = dialogParams.confirm;\n    var origCancel = dialogParams.cancel;\n    fireEvent(element, \"show-dialog\", {\n      dialogTag: \"confirm-event-dialog-box\",\n      dialogImport: loadGenericDialog,\n      dialogParams: Object.assign(Object.assign({}, dialogParams), {}, {\n        confirm: function confirm(thisAndFuture) {\n          resolve(thisAndFuture);\n          if (origConfirm) {\n            origConfirm(thisAndFuture);\n          }\n        },\n        cancel: function cancel() {\n          resolve(undefined);\n          if (origCancel) {\n            origCancel();\n          }\n        }\n      }),\n      addHistory: false\n    });\n  });\n};","map":{"version":3,"names":["fireEvent","loadGenericDialog","showConfirmEventDialog","element","dialogParams","Promise","resolve","origConfirm","confirm","origCancel","cancel","dialogTag","dialogImport","Object","assign","thisAndFuture","undefined","addHistory"],"sources":["/workspaces/frontend/src/panels/calendar/show-confirm-event-dialog-box.ts"],"sourcesContent":["import { TemplateResult } from \"lit\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { RecurrenceRange } from \"../../data/calendar\";\n\nexport interface ConfirmEventDialogBoxParams {\n  confirmText?: string;\n  confirmFutureText?: string; // Prompt for future recurring events\n  confirm?: (recurrenceRange: RecurrenceRange) => void;\n  cancel?: () => void;\n  text?: string | TemplateResult;\n  title: string;\n}\n\nexport const loadGenericDialog = () => import(\"./confirm-event-dialog-box\");\n\nexport const showConfirmEventDialog = (\n  element: HTMLElement,\n  dialogParams: ConfirmEventDialogBoxParams\n) =>\n  new Promise<RecurrenceRange | undefined>((resolve) => {\n    const origConfirm = dialogParams.confirm;\n    const origCancel = dialogParams.cancel;\n\n    fireEvent(element, \"show-dialog\", {\n      dialogTag: \"confirm-event-dialog-box\",\n      dialogImport: loadGenericDialog,\n      dialogParams: {\n        ...dialogParams,\n        confirm: (thisAndFuture: RecurrenceRange) => {\n          resolve(thisAndFuture);\n          if (origConfirm) {\n            origConfirm(thisAndFuture);\n          }\n        },\n        cancel: () => {\n          resolve(undefined);\n          if (origCancel) {\n            origCancel();\n          }\n        },\n      },\n      addHistory: false,\n    });\n  });\n"],"mappings":";;;;;;AACA,SAASA,SAAS,QAAQ,6BAA6B;AAYvD,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAA;EAAA,OAAS,MAAM,CAAC,4BAA4B,CAAC;AAAA;AAE3E,OAAO,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAsBA,CACjCC,OAAoB,EACpBC,YAAyC;EAAA,OAEzC,IAAIC,OAAO,CAA8B,UAACC,OAAO,EAAK;IACpD,IAAMC,WAAW,GAAGH,YAAY,CAACI,OAAO;IACxC,IAAMC,UAAU,GAAGL,YAAY,CAACM,MAAM;IAEtCV,SAAS,CAACG,OAAO,EAAE,aAAa,EAAE;MAChCQ,SAAS,EAAE,0BAA0B;MACrCC,YAAY,EAAEX,iBAAiB;MAC/BG,YAAY,EAAAS,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACPV,YAAY;QACfI,OAAO,EAAE,SAAAA,QAACO,aAA8B,EAAK;UAC3CT,OAAO,CAACS,aAAa,CAAC;UACtB,IAAIR,WAAW,EAAE;YACfA,WAAW,CAACQ,aAAa,CAAC;UAC5B;QACF,CAAC;QACDL,MAAM,EAAE,SAAAA,OAAA,EAAM;UACZJ,OAAO,CAACU,SAAS,CAAC;UAClB,IAAIP,UAAU,EAAE;YACdA,UAAU,CAAC,CAAC;UACd;QACF;MAAC,EACF;MACDQ,UAAU,EAAE;IACd,CAAC,CAAC;EACJ,CAAC,CAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}