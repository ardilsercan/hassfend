{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _templateObject;\nimport \"core-js/modules/es.number.constructor.js\";\n/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\nimport { BaseElement } from '@material/mwc-base/base-element.js';\nimport { MDCNotchedOutlineFoundation } from '@material/notched-outline/foundation.js';\nimport { html } from 'lit';\nimport { property, query } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nexport var NotchedOutlineBase = /*#__PURE__*/function (_BaseElement) {\n  _inherits(NotchedOutlineBase, _BaseElement);\n  function NotchedOutlineBase() {\n    var _this;\n    _classCallCheck(this, NotchedOutlineBase);\n    _this = _callSuper(this, NotchedOutlineBase, arguments);\n    _this.mdcFoundationClass = MDCNotchedOutlineFoundation;\n    _this.width = 0;\n    _this.open = false;\n    _this.lastOpen = _this.open;\n    return _this;\n  }\n  _createClass(NotchedOutlineBase, [{\n    key: \"createAdapter\",\n    value: function createAdapter() {\n      var _this2 = this;\n      return {\n        addClass: function addClass(className) {\n          return _this2.mdcRoot.classList.add(className);\n        },\n        removeClass: function removeClass(className) {\n          return _this2.mdcRoot.classList.remove(className);\n        },\n        setNotchWidthProperty: function setNotchWidthProperty(width) {\n          return _this2.notchElement.style.setProperty('width', \"\".concat(width, \"px\"));\n        },\n        removeNotchWidthProperty: function removeNotchWidthProperty() {\n          return _this2.notchElement.style.removeProperty('width');\n        }\n      };\n    }\n  }, {\n    key: \"openOrClose\",\n    value: function openOrClose(shouldOpen, width) {\n      if (!this.mdcFoundation) {\n        return;\n      }\n      if (shouldOpen && width !== undefined) {\n        this.mdcFoundation.notch(width);\n      } else {\n        this.mdcFoundation.closeNotch();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      this.openOrClose(this.open, this.width);\n      var classes = classMap({\n        'mdc-notched-outline--notched': this.open\n      });\n      return html(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      <span class=\\\"mdc-notched-outline \", \"\\\">\\n        <span class=\\\"mdc-notched-outline__leading\\\"></span>\\n        <span class=\\\"mdc-notched-outline__notch\\\">\\n          <slot></slot>\\n        </span>\\n        <span class=\\\"mdc-notched-outline__trailing\\\"></span>\\n      </span>\"])), classes);\n    }\n  }]);\n  return NotchedOutlineBase;\n}(BaseElement);\n__decorate([query('.mdc-notched-outline')], NotchedOutlineBase.prototype, \"mdcRoot\", void 0);\n__decorate([property({\n  type: Number\n})], NotchedOutlineBase.prototype, \"width\", void 0);\n__decorate([property({\n  type: Boolean,\n  reflect: true\n})], NotchedOutlineBase.prototype, \"open\", void 0);\n__decorate([query('.mdc-notched-outline__notch')], NotchedOutlineBase.prototype, \"notchElement\", void 0);","map":{"version":3,"names":["BaseElement","MDCNotchedOutlineFoundation","html","property","query","classMap","NotchedOutlineBase","_BaseElement","_inherits","_this","_classCallCheck","mdcFoundationClass","width","open","lastOpen","_createClass","key","value","createAdapter","_this2","addClass","className","mdcRoot","classList","add","removeClass","remove","setNotchWidthProperty","notchElement","style","setProperty","concat","removeNotchWidthProperty","removeProperty","openOrClose","shouldOpen","mdcFoundation","undefined","notch","closeNotch","render","classes","_templateObject","_taggedTemplateLiteral","__decorate","type","Number","Boolean","reflect"],"sources":["mwc-notched-outline-base.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\n\nimport {BaseElement} from '@material/mwc-base/base-element.js';\nimport {MDCNotchedOutlineAdapter} from '@material/notched-outline/adapter.js';\nimport {MDCNotchedOutlineFoundation} from '@material/notched-outline/foundation.js';\nimport {html} from 'lit';\nimport {property, query} from 'lit/decorators.js';\nimport {classMap} from 'lit/directives/class-map.js';\n\nexport class NotchedOutlineBase extends BaseElement {\n  @query('.mdc-notched-outline') protected mdcRoot!: HTMLElement;\n  protected mdcFoundation!: MDCNotchedOutlineFoundation;\n\n  protected readonly mdcFoundationClass = MDCNotchedOutlineFoundation;\n\n  @property({type: Number}) width = 0;\n\n  @property({type: Boolean, reflect: true}) open = false;\n\n  protected lastOpen = this.open;\n\n  @query('.mdc-notched-outline__notch') protected notchElement!: HTMLDivElement;\n\n  protected createAdapter(): MDCNotchedOutlineAdapter {\n    return {\n      addClass: (className) => this.mdcRoot.classList.add(className),\n      removeClass: (className) => this.mdcRoot.classList.remove(className),\n      setNotchWidthProperty: (width) =>\n          this.notchElement.style.setProperty('width', `${width}px`),\n      removeNotchWidthProperty: () =>\n          this.notchElement.style.removeProperty('width'),\n    };\n  }\n\n  protected openOrClose(shouldOpen: boolean, width?: number) {\n    if (!this.mdcFoundation) {\n      return;\n    }\n\n    if (shouldOpen && width !== undefined) {\n      this.mdcFoundation.notch(width);\n    } else {\n      this.mdcFoundation.closeNotch();\n    }\n  }\n\n  override render() {\n    this.openOrClose(this.open, this.width);\n\n    const classes = classMap({\n      'mdc-notched-outline--notched': this.open,\n    });\n\n    return html`\n      <span class=\"mdc-notched-outline ${classes}\">\n        <span class=\"mdc-notched-outline__leading\"></span>\n        <span class=\"mdc-notched-outline__notch\">\n          <slot></slot>\n        </span>\n        <span class=\"mdc-notched-outline__trailing\"></span>\n      </span>`;\n  }\n}\n"],"mappings":";;;;;;;AAAA;;;;;;AAMA;AACA;AAEA,SAAQA,WAAW,QAAO,oCAAoC;AAE9D,SAAQC,2BAA2B,QAAO,yCAAyC;AACnF,SAAQC,IAAI,QAAO,KAAK;AACxB,SAAQC,QAAQ,EAAEC,KAAK,QAAO,mBAAmB;AACjD,SAAQC,QAAQ,QAAO,6BAA6B;AAEpD,WAAaC,kBAAmB,0BAAAC,YAAA;EAAAC,SAAA,CAAAF,kBAAA,EAAAC,YAAA;EAAhC,SAAAD,mBAAA;IAAA,IAAAG,KAAA;IAAAC,eAAA,OAAAJ,kBAAA;;IAIqBG,KAAA,CAAAE,kBAAkB,GAAGV,2BAA2B;IAEzCQ,KAAA,CAAAG,KAAK,GAAG,CAAC;IAEOH,KAAA,CAAAI,IAAI,GAAG,KAAK;IAE5CJ,KAAA,CAAAK,QAAQ,GAAGL,KAAA,CAAKI,IAAI;IAAC,OAAAJ,KAAA;EA2CjC;EAACM,YAAA,CAAAT,kBAAA;IAAAU,GAAA;IAAAC,KAAA,EAvCW,SAAAC,cAAA,EAAa;MAAA,IAAAC,MAAA;MACrB,OAAO;QACLC,QAAQ,EAAE,SAAAA,SAACC,SAAS;UAAA,OAAKF,MAAI,CAACG,OAAO,CAACC,SAAS,CAACC,GAAG,CAACH,SAAS,CAAC;QAAA;QAC9DI,WAAW,EAAE,SAAAA,YAACJ,SAAS;UAAA,OAAKF,MAAI,CAACG,OAAO,CAACC,SAAS,CAACG,MAAM,CAACL,SAAS,CAAC;QAAA;QACpEM,qBAAqB,EAAE,SAAAA,sBAACf,KAAK;UAAA,OACzBO,MAAI,CAACS,YAAY,CAACC,KAAK,CAACC,WAAW,CAAC,OAAO,KAAAC,MAAA,CAAKnB,KAAK,OAAI,CAAC;QAAA;QAC9DoB,wBAAwB,EAAE,SAAAA,yBAAA;UAAA,OACtBb,MAAI,CAACS,YAAY,CAACC,KAAK,CAACI,cAAc,CAAC,OAAO,CAAC;QAAA;OACpD;IACH;EAAC;IAAAjB,GAAA;IAAAC,KAAA,EAES,SAAAiB,YAAYC,UAAmB,EAAEvB,KAAc;MACvD,IAAI,CAAC,IAAI,CAACwB,aAAa,EAAE;QACvB;;MAGF,IAAID,UAAU,IAAIvB,KAAK,KAAKyB,SAAS,EAAE;QACrC,IAAI,CAACD,aAAa,CAACE,KAAK,CAAC1B,KAAK,CAAC;OAChC,MAAM;QACL,IAAI,CAACwB,aAAa,CAACG,UAAU,EAAE;;IAEnC;EAAC;IAAAvB,GAAA;IAAAC,KAAA,EAEQ,SAAAuB,OAAA,EAAM;MACb,IAAI,CAACN,WAAW,CAAC,IAAI,CAACrB,IAAI,EAAE,IAAI,CAACD,KAAK,CAAC;MAEvC,IAAM6B,OAAO,GAAGpC,QAAQ,CAAC;QACvB,8BAA8B,EAAE,IAAI,CAACQ;OACtC,CAAC;MAEF,OAAOX,IAAI,CAAAwC,eAAA,KAAAA,eAAA,GAAAC,sBAAA,qSAC0BF,OAAO;IAO9C;EAAC;EAAA,OAAAnC,kBAAA;AAAA,EApDqCN,WAAW;AAClB4C,UAAA,EAA9BxC,KAAK,CAAC,sBAAsB,CAAC,C,kDAAiC;AAKrCwC,UAAA,EAAzBzC,QAAQ,CAAC;EAAC0C,IAAI,EAAEC;AAAM,CAAC,CAAC,C,gDAAW;AAEMF,UAAA,EAAzCzC,QAAQ,CAAC;EAAC0C,IAAI,EAAEE,OAAO;EAAEC,OAAO,EAAE;AAAI,CAAC,CAAC,C,+CAAc;AAIjBJ,UAAA,EAArCxC,KAAK,CAAC,6BAA6B,CAAC,C,uDAAyC"},"metadata":{},"sourceType":"module","externalDependencies":[]}