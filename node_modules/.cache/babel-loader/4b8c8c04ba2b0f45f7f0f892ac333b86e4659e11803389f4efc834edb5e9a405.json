{"ast":null,"code":"import { computeFormatFunctions } from \"../common/translations/entity-state\";\nexport default (superClass => {\n  class StateDisplayMixin extends superClass {\n    constructor(...args) {\n      super(...args);\n      this._updateStateDisplay = async () => {\n        if (!this.hass) return;\n        const {\n          formatEntityState,\n          formatEntityAttributeName,\n          formatEntityAttributeValue\n        } = await computeFormatFunctions(this.hass.localize, this.hass.locale, this.hass.config, this.hass.entities);\n        this._updateHass({\n          formatEntityState,\n          formatEntityAttributeName,\n          formatEntityAttributeValue\n        });\n      };\n    }\n    hassConnected() {\n      super.hassConnected();\n      this._updateStateDisplay();\n    }\n    willUpdate(changedProps) {\n      super.willUpdate(changedProps);\n      if (!changedProps.has(\"hass\")) {\n        return;\n      }\n      const oldHass = changedProps.get(\"hass\");\n      if (this.hass && (!oldHass || this.hass.localize !== oldHass.localize || this.hass.locale !== oldHass.locale || this.hass.config !== oldHass.config || this.hass.entities !== oldHass.entities)) {\n        this._updateStateDisplay();\n      }\n    }\n  }\n  return StateDisplayMixin;\n});","map":{"version":3,"names":["computeFormatFunctions","superClass","StateDisplayMixin","constructor","args","_updateStateDisplay","hass","formatEntityState","formatEntityAttributeName","formatEntityAttributeValue","localize","locale","config","entities","_updateHass","hassConnected","willUpdate","changedProps","has","oldHass","get"],"sources":["/workspaces/frontend/src/state/state-display-mixin.ts"],"sourcesContent":["import { computeFormatFunctions } from \"../common/translations/entity-state\";\nimport { Constructor, HomeAssistant } from \"../types\";\nimport { HassBaseEl } from \"./hass-base-mixin\";\n\nexport default <T extends Constructor<HassBaseEl>>(superClass: T) => {\n  class StateDisplayMixin extends superClass {\n    protected hassConnected() {\n      super.hassConnected();\n      this._updateStateDisplay();\n    }\n\n    protected willUpdate(changedProps) {\n      super.willUpdate(changedProps);\n\n      if (!changedProps.has(\"hass\")) {\n        return;\n      }\n      const oldHass = changedProps.get(\"hass\") as HomeAssistant | undefined;\n\n      if (\n        this.hass &&\n        (!oldHass ||\n          this.hass.localize !== oldHass.localize ||\n          this.hass.locale !== oldHass.locale ||\n          this.hass.config !== oldHass.config ||\n          this.hass.entities !== oldHass.entities)\n      ) {\n        this._updateStateDisplay();\n      }\n    }\n\n    private _updateStateDisplay = async () => {\n      if (!this.hass) return;\n      const {\n        formatEntityState,\n        formatEntityAttributeName,\n        formatEntityAttributeValue,\n      } = await computeFormatFunctions(\n        this.hass.localize,\n        this.hass.locale,\n        this.hass.config,\n        this.hass.entities\n      );\n      this._updateHass({\n        formatEntityState,\n        formatEntityAttributeName,\n        formatEntityAttributeValue,\n      });\n    };\n  }\n  return StateDisplayMixin;\n};\n"],"mappings":"AAAA,SAASA,sBAAsB,QAAQ,qCAAqC;AAI5E,gBAAmDC,UAAa,IAAK;EACnE,MAAMC,iBAAiB,SAASD,UAAU,CAAC;IAAAE,YAAA,GAAAC,IAAA;MAAA,SAAAA,IAAA;MAAA,KA0BjCC,mBAAmB,GAAG,YAAY;QACxC,IAAI,CAAC,IAAI,CAACC,IAAI,EAAE;QAChB,MAAM;UACJC,iBAAiB;UACjBC,yBAAyB;UACzBC;QACF,CAAC,GAAG,MAAMT,sBAAsB,CAC9B,IAAI,CAACM,IAAI,CAACI,QAAQ,EAClB,IAAI,CAACJ,IAAI,CAACK,MAAM,EAChB,IAAI,CAACL,IAAI,CAACM,MAAM,EAChB,IAAI,CAACN,IAAI,CAACO,QACZ,CAAC;QACD,IAAI,CAACC,WAAW,CAAC;UACfP,iBAAiB;UACjBC,yBAAyB;UACzBC;QACF,CAAC,CAAC;MACJ,CAAC;IAAA;IA1CSM,aAAaA,CAAA,EAAG;MACxB,KAAK,CAACA,aAAa,CAAC,CAAC;MACrB,IAAI,CAACV,mBAAmB,CAAC,CAAC;IAC5B;IAEUW,UAAUA,CAACC,YAAY,EAAE;MACjC,KAAK,CAACD,UAAU,CAACC,YAAY,CAAC;MAE9B,IAAI,CAACA,YAAY,CAACC,GAAG,CAAC,MAAM,CAAC,EAAE;QAC7B;MACF;MACA,MAAMC,OAAO,GAAGF,YAAY,CAACG,GAAG,CAAC,MAAM,CAA8B;MAErE,IACE,IAAI,CAACd,IAAI,KACR,CAACa,OAAO,IACP,IAAI,CAACb,IAAI,CAACI,QAAQ,KAAKS,OAAO,CAACT,QAAQ,IACvC,IAAI,CAACJ,IAAI,CAACK,MAAM,KAAKQ,OAAO,CAACR,MAAM,IACnC,IAAI,CAACL,IAAI,CAACM,MAAM,KAAKO,OAAO,CAACP,MAAM,IACnC,IAAI,CAACN,IAAI,CAACO,QAAQ,KAAKM,OAAO,CAACN,QAAQ,CAAC,EAC1C;QACA,IAAI,CAACR,mBAAmB,CAAC,CAAC;MAC5B;IACF;EAoBF;EACA,OAAOH,iBAAiB;AAC1B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}