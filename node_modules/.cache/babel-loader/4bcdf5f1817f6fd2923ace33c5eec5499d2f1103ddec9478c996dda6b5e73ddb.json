{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.parse-int.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\n/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport { BaseLayout, dim1, dim2 } from './BaseLayout.js';\n// function numberToPixelSize(n: number): PixelSize {\n//     return n === 0 ? '0' : `${n}px`;\n// }\nfunction paddingValueToNumber(v) {\n  if (v === 'match-gap') {\n    return Infinity;\n  }\n  return parseInt(v);\n}\nfunction gapValueToNumber(v) {\n  if (v === 'auto') {\n    return Infinity;\n  }\n  return parseInt(v);\n}\nexport function gap1(direction) {\n  return direction === 'horizontal' ? 'column' : 'row';\n}\nexport function gap2(direction) {\n  return direction === 'horizontal' ? 'row' : 'column';\n}\nexport function padding1(direction) {\n  return direction === 'horizontal' ? ['left', 'right'] : ['top', 'bottom'];\n}\nexport function padding2(direction) {\n  return direction === 'horizontal' ? ['top', 'bottom'] : ['left', 'right'];\n}\nexport var SizeGapPaddingBaseLayout = /*#__PURE__*/function (_BaseLayout) {\n  _inherits(SizeGapPaddingBaseLayout, _BaseLayout);\n  function SizeGapPaddingBaseLayout() {\n    var _this;\n    _classCallCheck(this, SizeGapPaddingBaseLayout);\n    _this = _callSuper(this, SizeGapPaddingBaseLayout, arguments);\n    _this._itemSize = {};\n    _this._gaps = {};\n    _this._padding = {};\n    return _this;\n  }\n  _createClass(SizeGapPaddingBaseLayout, [{\n    key: \"_getDefaultConfig\",\n    value: function _getDefaultConfig() {\n      return Object.assign({}, _get(_getPrototypeOf(SizeGapPaddingBaseLayout.prototype), \"_getDefaultConfig\", this).call(this), {\n        itemSize: {\n          width: '300px',\n          height: '300px'\n        },\n        gap: '8px',\n        padding: 'match-gap'\n      });\n    }\n    // Temp, to support current flexWrap implementation\n  }, {\n    key: \"_gap\",\n    get: function get() {\n      return this._gaps.row;\n    }\n    // Temp, to support current flexWrap implementation\n  }, {\n    key: \"_idealSize\",\n    get: function get() {\n      return this._itemSize[dim1(this.direction)];\n    }\n  }, {\n    key: \"_idealSize1\",\n    get: function get() {\n      return this._itemSize[dim1(this.direction)];\n    }\n  }, {\n    key: \"_idealSize2\",\n    get: function get() {\n      return this._itemSize[dim2(this.direction)];\n    }\n  }, {\n    key: \"_gap1\",\n    get: function get() {\n      return this._gaps[gap1(this.direction)];\n    }\n  }, {\n    key: \"_gap2\",\n    get: function get() {\n      return this._gaps[gap2(this.direction)];\n    }\n  }, {\n    key: \"_padding1\",\n    get: function get() {\n      var padding = this._padding;\n      var _padding = padding1(this.direction),\n        _padding2 = _slicedToArray(_padding, 2),\n        start = _padding2[0],\n        end = _padding2[1];\n      return [padding[start], padding[end]];\n    }\n  }, {\n    key: \"_padding2\",\n    get: function get() {\n      var padding = this._padding;\n      var _padding3 = padding2(this.direction),\n        _padding4 = _slicedToArray(_padding3, 2),\n        start = _padding4[0],\n        end = _padding4[1];\n      return [padding[start], padding[end]];\n    }\n  }, {\n    key: \"itemSize\",\n    set: function set(dims) {\n      var size = this._itemSize;\n      if (typeof dims === 'string') {\n        dims = {\n          width: dims,\n          height: dims\n        };\n      }\n      var width = parseInt(dims.width);\n      var height = parseInt(dims.height);\n      if (width !== size.width) {\n        size.width = width;\n        this._triggerReflow();\n      }\n      if (height !== size.height) {\n        size.height = height;\n        this._triggerReflow();\n      }\n    }\n  }, {\n    key: \"gap\",\n    set: function set(spec) {\n      this._setGap(spec);\n    }\n    // This setter is overridden in specific layouts to narrow the accepted types\n  }, {\n    key: \"_setGap\",\n    value: function _setGap(spec) {\n      var values = spec.split(' ').map(function (v) {\n        return gapValueToNumber(v);\n      });\n      var gaps = this._gaps;\n      if (values[0] !== gaps.row) {\n        gaps.row = values[0];\n        this._triggerReflow();\n      }\n      if (values[1] === undefined) {\n        if (values[0] !== gaps.column) {\n          gaps.column = values[0];\n          this._triggerReflow();\n        }\n      } else {\n        if (values[1] !== gaps.column) {\n          gaps.column = values[1];\n          this._triggerReflow();\n        }\n      }\n    }\n  }, {\n    key: \"padding\",\n    set: function set(spec) {\n      var padding = this._padding;\n      var values = spec.split(' ').map(function (v) {\n        return paddingValueToNumber(v);\n      });\n      if (values.length === 1) {\n        padding.top = padding.right = padding.bottom = padding.left = values[0];\n        this._triggerReflow();\n      } else if (values.length === 2) {\n        padding.top = padding.bottom = values[0];\n        padding.right = padding.left = values[1];\n        this._triggerReflow();\n      } else if (values.length === 3) {\n        padding.top = values[0];\n        padding.right = padding.left = values[1];\n        padding.bottom = values[2];\n        this._triggerReflow();\n      } else if (values.length === 4) {\n        ['top', 'right', 'bottom', 'left'].forEach(function (side, idx) {\n          return padding[side] = values[idx];\n        });\n        this._triggerReflow();\n      }\n    }\n  }]);\n  return SizeGapPaddingBaseLayout;\n}(BaseLayout);","map":{"version":3,"names":["BaseLayout","dim1","dim2","paddingValueToNumber","v","Infinity","parseInt","gapValueToNumber","gap1","direction","gap2","padding1","padding2","SizeGapPaddingBaseLayout","_BaseLayout","_inherits","_this","_classCallCheck","_itemSize","_gaps","_padding","_createClass","key","value","_getDefaultConfig","Object","assign","_get","_getPrototypeOf","prototype","call","itemSize","width","height","gap","padding","get","row","_padding2","_slicedToArray","start","end","_padding3","_padding4","set","dims","size","_triggerReflow","spec","_setGap","values","split","map","gaps","undefined","column","length","top","right","bottom","left","forEach","side","idx"],"sources":["../../src/layouts/shared/SizeGapPaddingBaseLayout.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n// import { dimension } from './Layout.js';\nimport {BaseLayoutConfig} from './Layout.js';\nimport {BaseLayout, dim1, dim2} from './BaseLayout.js';\nimport {ScrollDirection, Size} from './Layout.js';\n\nexport type PixelSize = `${'0' | `${number}px`}`;\n\ntype GapValue = PixelSize;\ntype TwoGapValues = `${GapValue} ${GapValue}`;\n\nexport type GapSpec = GapValue | TwoGapValues;\n\nexport type AutoGapSpec =\n  | PixelSize\n  | `${PixelSize} ${PixelSize}`\n  | `auto ${PixelSize}`\n  | `${PixelSize} auto`;\n\ntype PaddingValue = PixelSize | 'match-gap';\ntype TwoPaddingValues = `${PaddingValue} ${PaddingValue}`;\ntype ThreePaddingValues = `${TwoPaddingValues} ${PaddingValue}`;\ntype FourPaddingValues = `${ThreePaddingValues} ${PaddingValue}`;\ntype PaddingSpec =\n  | PaddingValue\n  | TwoPaddingValues\n  | ThreePaddingValues\n  | FourPaddingValues;\n\ntype PixelDimensions = {width: PixelSize; height: PixelSize};\n\n// function numberToPixelSize(n: number): PixelSize {\n//     return n === 0 ? '0' : `${n}px`;\n// }\n\nfunction paddingValueToNumber(v: PaddingValue): number {\n  if (v === 'match-gap') {\n    return Infinity;\n  }\n  return parseInt(v);\n}\n\nfunction gapValueToNumber(v: GapValue | 'auto'): number {\n  if (v === 'auto') {\n    return Infinity;\n  }\n  return parseInt(v);\n}\n\nexport function gap1(direction: ScrollDirection) {\n  return direction === 'horizontal' ? 'column' : 'row';\n}\n\nexport function gap2(direction: ScrollDirection) {\n  return direction === 'horizontal' ? 'row' : 'column';\n}\n\nexport function padding1(direction: ScrollDirection): [side, side] {\n  return direction === 'horizontal' ? ['left', 'right'] : ['top', 'bottom'];\n}\n\nexport function padding2(direction: ScrollDirection): [side, side] {\n  return direction === 'horizontal' ? ['top', 'bottom'] : ['left', 'right'];\n}\n\nexport interface SizeGapPaddingBaseLayoutConfig extends BaseLayoutConfig {\n  // gap?: GapSpec,\n  padding?: PaddingSpec;\n  itemSize?: PixelDimensions | PixelSize;\n}\n\ntype gap = 'row' | 'column';\ntype side = 'top' | 'right' | 'bottom' | 'left';\ntype Gaps = {[key in gap]: number};\ntype Padding = {[key in side]: number};\n\nexport abstract class SizeGapPaddingBaseLayout<\n  C extends SizeGapPaddingBaseLayoutConfig\n> extends BaseLayout<C> {\n  protected _itemSize: Size | {} = {};\n  protected _gaps: Gaps | {} = {};\n  protected _padding: Padding | {} = {};\n\n  protected _getDefaultConfig(): C {\n    return Object.assign({}, super._getDefaultConfig(), {\n      itemSize: {width: '300px', height: '300px'},\n      gap: '8px',\n      padding: 'match-gap',\n    }) as C;\n  }\n\n  // Temp, to support current flexWrap implementation\n  protected get _gap(): number {\n    return (this._gaps as Gaps).row;\n  }\n\n  // Temp, to support current flexWrap implementation\n  protected get _idealSize(): number {\n    return (this._itemSize as Size)[dim1(this.direction)];\n  }\n\n  protected get _idealSize1(): number {\n    return (this._itemSize as Size)[dim1(this.direction)];\n  }\n\n  protected get _idealSize2(): number {\n    return (this._itemSize as Size)[dim2(this.direction)];\n  }\n\n  protected get _gap1(): number {\n    return (this._gaps as Gaps)[gap1(this.direction)];\n  }\n\n  protected get _gap2(): number {\n    return (this._gaps as Gaps)[gap2(this.direction)];\n  }\n\n  protected get _padding1(): [number, number] {\n    const padding = this._padding as Padding;\n    const [start, end] = padding1(this.direction);\n    return [padding[start], padding[end]];\n  }\n\n  protected get _padding2(): [number, number] {\n    const padding = this._padding as Padding;\n    const [start, end] = padding2(this.direction);\n    return [padding[start], padding[end]];\n  }\n\n  set itemSize(dims: PixelDimensions | PixelSize) {\n    const size = this._itemSize as Size;\n    if (typeof dims === 'string') {\n      dims = {\n        width: dims,\n        height: dims,\n      };\n    }\n    const width = parseInt(dims.width);\n    const height = parseInt(dims.height);\n    if (width !== size.width) {\n      size.width = width;\n      this._triggerReflow();\n    }\n    if (height !== size.height) {\n      size.height = height;\n      this._triggerReflow();\n    }\n  }\n\n  set gap(spec: GapSpec | AutoGapSpec) {\n    this._setGap(spec);\n  }\n\n  // This setter is overridden in specific layouts to narrow the accepted types\n  protected _setGap(spec: GapSpec | AutoGapSpec) {\n    const values = spec.split(' ').map((v) => gapValueToNumber(v as GapValue));\n    const gaps = this._gaps as Gaps;\n    if (values[0] !== gaps.row) {\n      gaps.row = values[0];\n      this._triggerReflow();\n    }\n    if (values[1] === undefined) {\n      if (values[0] !== gaps.column) {\n        gaps.column = values[0];\n        this._triggerReflow();\n      }\n    } else {\n      if (values[1] !== gaps.column) {\n        gaps.column = values[1];\n        this._triggerReflow();\n      }\n    }\n  }\n\n  set padding(spec: PaddingSpec) {\n    const padding = this._padding as Padding;\n    const values = spec\n      .split(' ')\n      .map((v) => paddingValueToNumber(v as PaddingValue));\n    if (values.length === 1) {\n      padding.top = padding.right = padding.bottom = padding.left = values[0];\n      this._triggerReflow();\n    } else if (values.length === 2) {\n      padding.top = padding.bottom = values[0];\n      padding.right = padding.left = values[1];\n      this._triggerReflow();\n    } else if (values.length === 3) {\n      padding.top = values[0];\n      padding.right = padding.left = values[1];\n      padding.bottom = values[2];\n      this._triggerReflow();\n    } else if (values.length === 4) {\n      ['top', 'right', 'bottom', 'left'].forEach(\n        (side, idx) => (padding[side as side] = values[idx])\n      );\n      this._triggerReflow();\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}