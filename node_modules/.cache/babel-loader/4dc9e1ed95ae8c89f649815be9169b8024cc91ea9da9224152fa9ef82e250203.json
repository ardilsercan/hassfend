{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nconst mdiFlash = \"M7,2V13H10V22L17,10H13L17,2H7Z\";\nconst mdiFlashOff = \"M17,10H13L17,2H7V4.18L15.46,12.64M3.27,3L2,4.27L7,9.27V13H10V22L13.58,15.86L17.73,20L19,18.73L3.27,3Z\";\nimport { LitElement, css, html } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport { styleMap } from \"lit/directives/style-map\";\nimport { computeDomain } from \"../common/entity/compute_domain\";\nimport { stateActive } from \"../common/entity/state_active\";\nimport { stateColorCss } from \"../common/entity/state_color\";\nimport \"../components/ha-control-button\";\nimport \"../components/ha-control-switch\";\nimport { UNAVAILABLE, UNKNOWN } from \"../data/entity\";\nimport { forwardHaptic } from \"../data/haptics\";\nexport let HaStateControlToggle = _decorate([customElement(\"ha-state-control-toggle\")], function (_initialize, _LitElement) {\n  class HaStateControlToggle extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaStateControlToggle,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"stateObj\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"iconPathOn\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"iconPathOff\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"_valueChanged\",\n      value: function _valueChanged(ev) {\n        const checked = ev.target.checked;\n        if (checked) {\n          this._turnOn();\n        } else {\n          this._turnOff();\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_turnOn\",\n      value: function _turnOn() {\n        this._callService(true);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_turnOff\",\n      value: function _turnOff() {\n        this._callService(false);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_callService\",\n      value: async function _callService(turnOn) {\n        if (!this.hass || !this.stateObj) {\n          return;\n        }\n        forwardHaptic(\"light\");\n        const stateDomain = computeDomain(this.stateObj.entity_id);\n        let serviceDomain;\n        let service;\n        if (stateDomain === \"group\") {\n          serviceDomain = \"homeassistant\";\n          service = turnOn ? \"turn_on\" : \"turn_off\";\n        } else {\n          serviceDomain = stateDomain;\n          service = turnOn ? \"turn_on\" : \"turn_off\";\n        }\n        await this.hass.callService(serviceDomain, service, {\n          entity_id: this.stateObj.entity_id\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        const onColor = stateColorCss(this.stateObj, \"on\");\n        const offColor = stateColorCss(this.stateObj, \"off\");\n        const isOn = this.stateObj.state === \"on\";\n        const isOff = this.stateObj.state === \"off\";\n        if (this.stateObj.attributes.assumed_state || this.stateObj.state === UNKNOWN) {\n          return html`\n        <div class=\"buttons\">\n          <ha-control-button\n            .label=${this.hass.localize(\"ui.card.common.turn_on\")}\n            @click=${this._turnOn}\n            .disabled=${this.stateObj.state === UNAVAILABLE}\n            class=${classMap({\n            active: isOn\n          })}\n            style=${styleMap({\n            \"--color\": onColor\n          })}\n          >\n            <ha-svg-icon .path=${this.iconPathOn || mdiFlash}></ha-svg-icon>\n          </ha-control-button>\n          <ha-control-button\n            .label=${this.hass.localize(\"ui.card.common.turn_off\")}\n            @click=${this._turnOff}\n            .disabled=${this.stateObj.state === UNAVAILABLE}\n            class=${classMap({\n            active: isOff\n          })}\n            style=${styleMap({\n            \"--color\": offColor\n          })}\n          >\n            <ha-svg-icon .path=${this.iconPathOff || mdiFlashOff}></ha-svg-icon>\n          </ha-control-button>\n        </div>\n      `;\n        }\n        return html`\n      <ha-control-switch\n        .pathOn=${this.iconPathOn || mdiFlash}\n        .pathOff=${this.iconPathOff || mdiFlashOff}\n        vertical\n        reversed\n        .checked=${isOn}\n        .showHandle=${stateActive(this.stateObj)}\n        @change=${this._valueChanged}\n        .ariaLabel=${this.hass.localize(\"ui.card.common.toggle\")}\n        style=${styleMap({\n          \"--control-switch-on-color\": onColor,\n          \"--control-switch-off-color\": offColor\n        })}\n        .disabled=${this.stateObj.state === UNAVAILABLE}\n      >\n      </ha-control-switch>\n    `;\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css`\n      ha-control-switch {\n        height: 45vh;\n        max-height: 320px;\n        min-height: 200px;\n        --control-switch-thickness: 100px;\n        --control-switch-border-radius: 24px;\n        --control-switch-padding: 6px;\n        --mdc-icon-size: 24px;\n      }\n      .buttons {\n        display: flex;\n        flex-direction: column;\n        width: 100px;\n        height: 45vh;\n        max-height: 320px;\n        min-height: 200px;\n        padding: 6px;\n        box-sizing: border-box;\n      }\n      ha-control-button {\n        flex: 1;\n        width: 100%;\n        --control-button-border-radius: 18px;\n        --mdc-icon-size: 24px;\n      }\n      ha-control-button.active {\n        --control-button-icon-color: white;\n        --control-button-background-color: var(--color);\n        --control-button-background-opacity: 1;\n      }\n      ha-control-button:not(:last-child) {\n        margin-bottom: 6px;\n      }\n    `;\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["LitElement","css","html","customElement","property","classMap","styleMap","computeDomain","stateActive","stateColorCss","UNAVAILABLE","UNKNOWN","forwardHaptic","HaStateControlToggle","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","_valueChanged","ev","checked","target","_turnOn","_turnOff","_callService","turnOn","hass","stateObj","stateDomain","entity_id","serviceDomain","service","callService","render","onColor","offColor","isOn","state","isOff","attributes","assumed_state","localize","active","iconPathOn","mdiFlash","iconPathOff","mdiFlashOff","static","styles"],"sources":["/Users/sercanardil/Desktop/frontend/src/state-control/ha-state-control-toggle.ts"],"sourcesContent":["import { mdiFlash, mdiFlashOff } from \"@mdi/js\";\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport { CSSResultGroup, LitElement, TemplateResult, css, html } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport { styleMap } from \"lit/directives/style-map\";\nimport { computeDomain } from \"../common/entity/compute_domain\";\nimport { stateActive } from \"../common/entity/state_active\";\nimport { stateColorCss } from \"../common/entity/state_color\";\nimport \"../components/ha-control-button\";\nimport \"../components/ha-control-switch\";\nimport { UNAVAILABLE, UNKNOWN } from \"../data/entity\";\nimport { forwardHaptic } from \"../data/haptics\";\nimport { HomeAssistant } from \"../types\";\n\n@customElement(\"ha-state-control-toggle\")\nexport class HaStateControlToggle extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public stateObj!: HassEntity;\n\n  @property({ attribute: false }) public iconPathOn?: string;\n\n  @property({ attribute: false }) public iconPathOff?: string;\n\n  private _valueChanged(ev) {\n    const checked = ev.target.checked as boolean;\n\n    if (checked) {\n      this._turnOn();\n    } else {\n      this._turnOff();\n    }\n  }\n\n  private _turnOn() {\n    this._callService(true);\n  }\n\n  private _turnOff() {\n    this._callService(false);\n  }\n\n  private async _callService(turnOn): Promise<void> {\n    if (!this.hass || !this.stateObj) {\n      return;\n    }\n    forwardHaptic(\"light\");\n    const stateDomain = computeDomain(this.stateObj.entity_id);\n    let serviceDomain;\n    let service;\n\n    if (stateDomain === \"group\") {\n      serviceDomain = \"homeassistant\";\n      service = turnOn ? \"turn_on\" : \"turn_off\";\n    } else {\n      serviceDomain = stateDomain;\n      service = turnOn ? \"turn_on\" : \"turn_off\";\n    }\n\n    await this.hass.callService(serviceDomain, service, {\n      entity_id: this.stateObj.entity_id,\n    });\n  }\n\n  protected render(): TemplateResult {\n    const onColor = stateColorCss(this.stateObj, \"on\");\n    const offColor = stateColorCss(this.stateObj, \"off\");\n\n    const isOn = this.stateObj.state === \"on\";\n    const isOff = this.stateObj.state === \"off\";\n\n    if (\n      this.stateObj.attributes.assumed_state ||\n      this.stateObj.state === UNKNOWN\n    ) {\n      return html`\n        <div class=\"buttons\">\n          <ha-control-button\n            .label=${this.hass.localize(\"ui.card.common.turn_on\")}\n            @click=${this._turnOn}\n            .disabled=${this.stateObj.state === UNAVAILABLE}\n            class=${classMap({\n              active: isOn,\n            })}\n            style=${styleMap({\n              \"--color\": onColor,\n            })}\n          >\n            <ha-svg-icon .path=${this.iconPathOn || mdiFlash}></ha-svg-icon>\n          </ha-control-button>\n          <ha-control-button\n            .label=${this.hass.localize(\"ui.card.common.turn_off\")}\n            @click=${this._turnOff}\n            .disabled=${this.stateObj.state === UNAVAILABLE}\n            class=${classMap({\n              active: isOff,\n            })}\n            style=${styleMap({\n              \"--color\": offColor,\n            })}\n          >\n            <ha-svg-icon .path=${this.iconPathOff || mdiFlashOff}></ha-svg-icon>\n          </ha-control-button>\n        </div>\n      `;\n    }\n\n    return html`\n      <ha-control-switch\n        .pathOn=${this.iconPathOn || mdiFlash}\n        .pathOff=${this.iconPathOff || mdiFlashOff}\n        vertical\n        reversed\n        .checked=${isOn}\n        .showHandle=${stateActive(this.stateObj)}\n        @change=${this._valueChanged}\n        .ariaLabel=${this.hass.localize(\"ui.card.common.toggle\")}\n        style=${styleMap({\n          \"--control-switch-on-color\": onColor,\n          \"--control-switch-off-color\": offColor,\n        })}\n        .disabled=${this.stateObj.state === UNAVAILABLE}\n      >\n      </ha-control-switch>\n    `;\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      ha-control-switch {\n        height: 45vh;\n        max-height: 320px;\n        min-height: 200px;\n        --control-switch-thickness: 100px;\n        --control-switch-border-radius: 24px;\n        --control-switch-padding: 6px;\n        --mdc-icon-size: 24px;\n      }\n      .buttons {\n        display: flex;\n        flex-direction: column;\n        width: 100px;\n        height: 45vh;\n        max-height: 320px;\n        min-height: 200px;\n        padding: 6px;\n        box-sizing: border-box;\n      }\n      ha-control-button {\n        flex: 1;\n        width: 100%;\n        --control-button-border-radius: 18px;\n        --mdc-icon-size: 24px;\n      }\n      ha-control-button.active {\n        --control-button-icon-color: white;\n        --control-button-background-color: var(--color);\n        --control-button-background-opacity: 1;\n      }\n      ha-control-button:not(:last-child) {\n        margin-bottom: 6px;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-state-control-toggle\": HaStateControlToggle;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}