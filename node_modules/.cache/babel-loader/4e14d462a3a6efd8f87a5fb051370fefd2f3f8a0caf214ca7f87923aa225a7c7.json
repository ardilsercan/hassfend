{"ast":null,"code":"import { navigate } from \"../common/navigate\";\nexport const SCENE_IGNORED_DOMAINS = [\"binary_sensor\", \"button\", \"configuration\", \"device_tracker\", \"event\", \"image_processing\", \"input_button\", \"persistent_notification\", \"person\", \"scene\", \"schedule\", \"sensor\", \"sun\", \"update\", \"weather\", \"zone\"];\nlet inititialSceneEditorData;\nexport const showSceneEditor = (config, areaId) => {\n  inititialSceneEditorData = {\n    config,\n    areaId\n  };\n  navigate(\"/config/scene/edit/new\");\n};\nexport const getSceneEditorInitData = () => {\n  const data = inititialSceneEditorData;\n  inititialSceneEditorData = undefined;\n  return data;\n};\nexport const activateScene = (hass, entityId) => hass.callService(\"scene\", \"turn_on\", {\n  entity_id: entityId\n});\nexport const applyScene = (hass, entities) => hass.callService(\"scene\", \"apply\", {\n  entities\n});\nexport const getSceneConfig = (hass, sceneId) => hass.callApi(\"GET\", `config/scene/config/${sceneId}`);\nexport const saveScene = (hass, sceneId, config) => hass.callApi(\"POST\", `config/scene/config/${sceneId}`, config);\nexport const deleteScene = (hass, id) => hass.callApi(\"DELETE\", `config/scene/config/${id}`);","map":{"version":3,"names":["navigate","SCENE_IGNORED_DOMAINS","inititialSceneEditorData","showSceneEditor","config","areaId","getSceneEditorInitData","data","undefined","activateScene","hass","entityId","callService","entity_id","applyScene","entities","getSceneConfig","sceneId","callApi","saveScene","deleteScene","id"],"sources":["/workspaces/frontend/src/data/scene.ts"],"sourcesContent":["import {\n  HassEntityAttributeBase,\n  HassEntityBase,\n} from \"home-assistant-js-websocket\";\nimport { navigate } from \"../common/navigate\";\nimport { HomeAssistant, ServiceCallResponse } from \"../types\";\n\nexport const SCENE_IGNORED_DOMAINS = [\n  \"binary_sensor\",\n  \"button\",\n  \"configuration\",\n  \"device_tracker\",\n  \"event\",\n  \"image_processing\",\n  \"input_button\",\n  \"persistent_notification\",\n  \"person\",\n  \"scene\",\n  \"schedule\",\n  \"sensor\",\n  \"sun\",\n  \"update\",\n  \"weather\",\n  \"zone\",\n];\n\nlet inititialSceneEditorData:\n  | { config?: Partial<SceneConfig>; areaId?: string }\n  | undefined;\n\nexport const showSceneEditor = (\n  config?: Partial<SceneConfig>,\n  areaId?: string\n) => {\n  inititialSceneEditorData = { config, areaId };\n  navigate(\"/config/scene/edit/new\");\n};\n\nexport const getSceneEditorInitData = () => {\n  const data = inititialSceneEditorData;\n  inititialSceneEditorData = undefined;\n  return data;\n};\n\nexport interface SceneEntity extends HassEntityBase {\n  attributes: HassEntityAttributeBase & { id?: string };\n}\n\nexport interface SceneConfig {\n  id?: string;\n  name: string;\n  icon?: string;\n  entities: SceneEntities;\n  metadata?: SceneMetaData;\n}\n\nexport interface SceneEntities {\n  [entityId: string]: string | { state: string; [key: string]: any };\n}\n\nexport interface SceneMetaData {\n  [entityId: string]: { entity_only?: boolean | undefined };\n}\n\nexport const activateScene = (\n  hass: HomeAssistant,\n  entityId: string\n): Promise<ServiceCallResponse> =>\n  hass.callService(\"scene\", \"turn_on\", { entity_id: entityId });\n\nexport const applyScene = (\n  hass: HomeAssistant,\n  entities: SceneEntities\n): Promise<ServiceCallResponse> =>\n  hass.callService(\"scene\", \"apply\", { entities });\n\nexport const getSceneConfig = (\n  hass: HomeAssistant,\n  sceneId: string\n): Promise<SceneConfig> =>\n  hass.callApi<SceneConfig>(\"GET\", `config/scene/config/${sceneId}`);\n\nexport const saveScene = (\n  hass: HomeAssistant,\n  sceneId: string,\n  config: SceneConfig\n) => hass.callApi(\"POST\", `config/scene/config/${sceneId}`, config);\n\nexport const deleteScene = (hass: HomeAssistant, id: string) =>\n  hass.callApi(\"DELETE\", `config/scene/config/${id}`);\n"],"mappings":"AAIA,SAASA,QAAQ,QAAQ,oBAAoB;AAG7C,OAAO,MAAMC,qBAAqB,GAAG,CACnC,eAAe,EACf,QAAQ,EACR,eAAe,EACf,gBAAgB,EAChB,OAAO,EACP,kBAAkB,EAClB,cAAc,EACd,yBAAyB,EACzB,QAAQ,EACR,OAAO,EACP,UAAU,EACV,QAAQ,EACR,KAAK,EACL,QAAQ,EACR,SAAS,EACT,MAAM,CACP;AAED,IAAIC,wBAES;AAEb,OAAO,MAAMC,eAAe,GAAGA,CAC7BC,MAA6B,EAC7BC,MAAe,KACZ;EACHH,wBAAwB,GAAG;IAAEE,MAAM;IAAEC;EAAO,CAAC;EAC7CL,QAAQ,CAAC,wBAAwB,CAAC;AACpC,CAAC;AAED,OAAO,MAAMM,sBAAsB,GAAGA,CAAA,KAAM;EAC1C,MAAMC,IAAI,GAAGL,wBAAwB;EACrCA,wBAAwB,GAAGM,SAAS;EACpC,OAAOD,IAAI;AACb,CAAC;AAsBD,OAAO,MAAME,aAAa,GAAGA,CAC3BC,IAAmB,EACnBC,QAAgB,KAEhBD,IAAI,CAACE,WAAW,CAAC,OAAO,EAAE,SAAS,EAAE;EAAEC,SAAS,EAAEF;AAAS,CAAC,CAAC;AAE/D,OAAO,MAAMG,UAAU,GAAGA,CACxBJ,IAAmB,EACnBK,QAAuB,KAEvBL,IAAI,CAACE,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE;EAAEG;AAAS,CAAC,CAAC;AAElD,OAAO,MAAMC,cAAc,GAAGA,CAC5BN,IAAmB,EACnBO,OAAe,KAEfP,IAAI,CAACQ,OAAO,CAAc,KAAK,EAAG,uBAAsBD,OAAQ,EAAC,CAAC;AAEpE,OAAO,MAAME,SAAS,GAAGA,CACvBT,IAAmB,EACnBO,OAAe,EACfb,MAAmB,KAChBM,IAAI,CAACQ,OAAO,CAAC,MAAM,EAAG,uBAAsBD,OAAQ,EAAC,EAAEb,MAAM,CAAC;AAEnE,OAAO,MAAMgB,WAAW,GAAGA,CAACV,IAAmB,EAAEW,EAAU,KACzDX,IAAI,CAACQ,OAAO,CAAC,QAAQ,EAAG,uBAAsBG,EAAG,EAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}