{"ast":null,"code":"/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\nimport '@material/mwc-ripple/mwc-ripple.js';\nimport { ariaProperty } from '@material/mwc-base/aria-property.js';\nimport { addHasRemoveClass, BaseElement } from '@material/mwc-base/base-element.js';\nimport { observer } from '@material/mwc-base/observer.js';\nimport { RippleHandlers } from '@material/mwc-ripple/ripple-handlers.js';\nimport MDCSwitchFoundation from '@material/switch/deprecated/foundation.js';\nimport { html } from 'lit';\nimport { eventOptions, property, query, queryAsync, state } from 'lit/decorators.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nexport class SwitchBase extends BaseElement {\n  constructor() {\n    super(...arguments);\n    this.checked = false;\n    this.disabled = false;\n    this.shouldRenderRipple = false;\n    this.mdcFoundationClass = MDCSwitchFoundation;\n    this.rippleHandlers = new RippleHandlers(() => {\n      this.shouldRenderRipple = true;\n      return this.ripple;\n    });\n  }\n  changeHandler(e) {\n    this.mdcFoundation.handleChange(e);\n    // catch \"click\" event and sync properties\n    this.checked = this.formElement.checked;\n  }\n  createAdapter() {\n    return Object.assign(Object.assign({}, addHasRemoveClass(this.mdcRoot)), {\n      setNativeControlChecked: checked => {\n        this.formElement.checked = checked;\n      },\n      setNativeControlDisabled: disabled => {\n        this.formElement.disabled = disabled;\n      },\n      setNativeControlAttr: (attr, value) => {\n        this.formElement.setAttribute(attr, value);\n      }\n    });\n  }\n  renderRipple() {\n    return this.shouldRenderRipple ? html`\n        <mwc-ripple\n          .accent=\"${this.checked}\"\n          .disabled=\"${this.disabled}\"\n          unbounded>\n        </mwc-ripple>` : '';\n  }\n  focus() {\n    const formElement = this.formElement;\n    if (formElement) {\n      this.rippleHandlers.startFocus();\n      formElement.focus();\n    }\n  }\n  blur() {\n    const formElement = this.formElement;\n    if (formElement) {\n      this.rippleHandlers.endFocus();\n      formElement.blur();\n    }\n  }\n  click() {\n    if (this.formElement && !this.disabled) {\n      this.formElement.focus();\n      this.formElement.click();\n    }\n  }\n  firstUpdated() {\n    super.firstUpdated();\n    if (this.shadowRoot) {\n      this.mdcRoot.addEventListener('change', e => {\n        this.dispatchEvent(new Event('change', e));\n      });\n    }\n  }\n  render() {\n    return html`\n      <div class=\"mdc-switch\">\n        <div class=\"mdc-switch__track\"></div>\n        <div class=\"mdc-switch__thumb-underlay\">\n          ${this.renderRipple()}\n          <div class=\"mdc-switch__thumb\">\n            <input\n              type=\"checkbox\"\n              id=\"basic-switch\"\n              class=\"mdc-switch__native-control\"\n              role=\"switch\"\n              aria-label=\"${ifDefined(this.ariaLabel)}\"\n              aria-labelledby=\"${ifDefined(this.ariaLabelledBy)}\"\n              @change=\"${this.changeHandler}\"\n              @focus=\"${this.handleRippleFocus}\"\n              @blur=\"${this.handleRippleBlur}\"\n              @mousedown=\"${this.handleRippleMouseDown}\"\n              @mouseenter=\"${this.handleRippleMouseEnter}\"\n              @mouseleave=\"${this.handleRippleMouseLeave}\"\n              @touchstart=\"${this.handleRippleTouchStart}\"\n              @touchend=\"${this.handleRippleDeactivate}\"\n              @touchcancel=\"${this.handleRippleDeactivate}\">\n          </div>\n        </div>\n      </div>`;\n  }\n  handleRippleMouseDown(event) {\n    const onUp = () => {\n      window.removeEventListener('mouseup', onUp);\n      this.handleRippleDeactivate();\n    };\n    window.addEventListener('mouseup', onUp);\n    this.rippleHandlers.startPress(event);\n  }\n  handleRippleTouchStart(event) {\n    this.rippleHandlers.startPress(event);\n  }\n  handleRippleDeactivate() {\n    this.rippleHandlers.endPress();\n  }\n  handleRippleMouseEnter() {\n    this.rippleHandlers.startHover();\n  }\n  handleRippleMouseLeave() {\n    this.rippleHandlers.endHover();\n  }\n  handleRippleFocus() {\n    this.rippleHandlers.startFocus();\n  }\n  handleRippleBlur() {\n    this.rippleHandlers.endFocus();\n  }\n}\n__decorate([property({\n  type: Boolean\n}), observer(function (value) {\n  this.mdcFoundation.setChecked(value);\n})], SwitchBase.prototype, \"checked\", void 0);\n__decorate([property({\n  type: Boolean\n}), observer(function (value) {\n  this.mdcFoundation.setDisabled(value);\n})], SwitchBase.prototype, \"disabled\", void 0);\n__decorate([ariaProperty, property({\n  attribute: 'aria-label'\n})], SwitchBase.prototype, \"ariaLabel\", void 0);\n__decorate([ariaProperty, property({\n  attribute: 'aria-labelledby'\n})], SwitchBase.prototype, \"ariaLabelledBy\", void 0);\n__decorate([query('.mdc-switch')], SwitchBase.prototype, \"mdcRoot\", void 0);\n__decorate([query('input')], SwitchBase.prototype, \"formElement\", void 0);\n__decorate([queryAsync('mwc-ripple')], SwitchBase.prototype, \"ripple\", void 0);\n__decorate([state()], SwitchBase.prototype, \"shouldRenderRipple\", void 0);\n__decorate([eventOptions({\n  passive: true\n})], SwitchBase.prototype, \"handleRippleMouseDown\", null);\n__decorate([eventOptions({\n  passive: true\n})], SwitchBase.prototype, \"handleRippleTouchStart\", null);","map":{"version":3,"names":["ariaProperty","addHasRemoveClass","BaseElement","observer","RippleHandlers","MDCSwitchFoundation","html","eventOptions","property","query","queryAsync","state","ifDefined","SwitchBase","constructor","checked","disabled","shouldRenderRipple","mdcFoundationClass","rippleHandlers","ripple","changeHandler","e","mdcFoundation","handleChange","formElement","createAdapter","Object","assign","mdcRoot","setNativeControlChecked","setNativeControlDisabled","setNativeControlAttr","attr","value","setAttribute","renderRipple","focus","startFocus","blur","endFocus","click","firstUpdated","shadowRoot","addEventListener","dispatchEvent","Event","render","ariaLabel","ariaLabelledBy","handleRippleFocus","handleRippleBlur","handleRippleMouseDown","handleRippleMouseEnter","handleRippleMouseLeave","handleRippleTouchStart","handleRippleDeactivate","event","onUp","window","removeEventListener","startPress","endPress","startHover","endHover","__decorate","type","Boolean","setChecked","setDisabled","attribute","passive"],"sources":["mwc-switch-base.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\n\nimport '@material/mwc-ripple/mwc-ripple.js';\n\nimport {ariaProperty} from '@material/mwc-base/aria-property.js';\nimport {addHasRemoveClass, BaseElement} from '@material/mwc-base/base-element.js';\nimport {observer} from '@material/mwc-base/observer.js';\nimport {Ripple} from '@material/mwc-ripple/mwc-ripple.js';\nimport {RippleHandlers} from '@material/mwc-ripple/ripple-handlers.js';\nimport {MDCSwitchAdapter} from '@material/switch/deprecated/adapter.js';\nimport MDCSwitchFoundation from '@material/switch/deprecated/foundation.js';\nimport {html} from 'lit';\nimport {eventOptions, property, query, queryAsync, state} from 'lit/decorators.js';\nimport {ifDefined} from 'lit/directives/if-defined.js';\n\nexport class SwitchBase extends BaseElement {\n  @property({type: Boolean})\n  @observer(function(this: SwitchBase, value: boolean) {\n    this.mdcFoundation.setChecked(value);\n  })\n  checked = false;\n\n  @property({type: Boolean})\n  @observer(function(this: SwitchBase, value: boolean) {\n    this.mdcFoundation.setDisabled(value);\n  })\n  disabled = false;\n\n  /** @soyPrefixAttribute */\n  @ariaProperty\n  @property({attribute: 'aria-label'})\n  override ariaLabel!: string;\n\n  /** @soyPrefixAttribute */\n  @ariaProperty\n  @property({attribute: 'aria-labelledby'})\n  ariaLabelledBy!: string;\n\n  @query('.mdc-switch') protected mdcRoot!: HTMLElement;\n\n  @query('input') protected formElement!: HTMLInputElement;\n\n  @queryAsync('mwc-ripple') ripple!: Promise<Ripple|null>;\n\n  @state() protected shouldRenderRipple = false;\n\n  protected mdcFoundation!: MDCSwitchFoundation;\n\n  protected changeHandler(e: Event) {\n    this.mdcFoundation.handleChange(e);\n    // catch \"click\" event and sync properties\n    this.checked = this.formElement.checked;\n  }\n\n  protected readonly mdcFoundationClass = MDCSwitchFoundation;\n\n  protected createAdapter(): MDCSwitchAdapter {\n    return {\n      ...addHasRemoveClass(this.mdcRoot),\n      setNativeControlChecked: (checked: boolean) => {\n        this.formElement.checked = checked;\n      },\n      setNativeControlDisabled: (disabled: boolean) => {\n        this.formElement.disabled = disabled;\n      },\n      setNativeControlAttr: (attr, value) => {\n        this.formElement.setAttribute(attr, value);\n      },\n    };\n  }\n\n  protected rippleHandlers: RippleHandlers = new RippleHandlers(() => {\n    this.shouldRenderRipple = true;\n    return this.ripple;\n  });\n\n  protected renderRipple() {\n    return this.shouldRenderRipple ? html`\n        <mwc-ripple\n          .accent=\"${this.checked}\"\n          .disabled=\"${this.disabled}\"\n          unbounded>\n        </mwc-ripple>` :\n                                     '';\n  }\n\n  override focus() {\n    const formElement = this.formElement;\n    if (formElement) {\n      this.rippleHandlers.startFocus();\n      formElement.focus();\n    }\n  }\n\n  override blur() {\n    const formElement = this.formElement;\n    if (formElement) {\n      this.rippleHandlers.endFocus();\n      formElement.blur();\n    }\n  }\n\n  override click() {\n    if (this.formElement && !this.disabled) {\n      this.formElement.focus();\n      this.formElement.click();\n    }\n  }\n\n  protected override firstUpdated() {\n    super.firstUpdated();\n    if (this.shadowRoot) {\n      this.mdcRoot.addEventListener('change', (e) => {\n        this.dispatchEvent(new Event('change', e));\n      });\n    }\n  }\n\n  protected override render() {\n    return html`\n      <div class=\"mdc-switch\">\n        <div class=\"mdc-switch__track\"></div>\n        <div class=\"mdc-switch__thumb-underlay\">\n          ${this.renderRipple()}\n          <div class=\"mdc-switch__thumb\">\n            <input\n              type=\"checkbox\"\n              id=\"basic-switch\"\n              class=\"mdc-switch__native-control\"\n              role=\"switch\"\n              aria-label=\"${ifDefined(this.ariaLabel)}\"\n              aria-labelledby=\"${ifDefined(this.ariaLabelledBy)}\"\n              @change=\"${this.changeHandler}\"\n              @focus=\"${this.handleRippleFocus}\"\n              @blur=\"${this.handleRippleBlur}\"\n              @mousedown=\"${this.handleRippleMouseDown}\"\n              @mouseenter=\"${this.handleRippleMouseEnter}\"\n              @mouseleave=\"${this.handleRippleMouseLeave}\"\n              @touchstart=\"${this.handleRippleTouchStart}\"\n              @touchend=\"${this.handleRippleDeactivate}\"\n              @touchcancel=\"${this.handleRippleDeactivate}\">\n          </div>\n        </div>\n      </div>`;\n  }\n\n  @eventOptions({passive: true})\n  protected handleRippleMouseDown(event: Event) {\n    const onUp = () => {\n      window.removeEventListener('mouseup', onUp);\n\n      this.handleRippleDeactivate();\n    };\n\n    window.addEventListener('mouseup', onUp);\n    this.rippleHandlers.startPress(event);\n  }\n\n  @eventOptions({passive: true})\n  protected handleRippleTouchStart(event: Event) {\n    this.rippleHandlers.startPress(event);\n  }\n\n  protected handleRippleDeactivate() {\n    this.rippleHandlers.endPress();\n  }\n\n  protected handleRippleMouseEnter() {\n    this.rippleHandlers.startHover();\n  }\n\n  protected handleRippleMouseLeave() {\n    this.rippleHandlers.endHover();\n  }\n\n  protected handleRippleFocus() {\n    this.rippleHandlers.startFocus();\n  }\n\n  protected handleRippleBlur() {\n    this.rippleHandlers.endFocus();\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}