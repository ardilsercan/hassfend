{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\n// Compat needs to be first import\nimport \"../../src/resources/compatibility\";\nimport { customElement } from \"lit/decorators\";\nimport { isNavigationClick } from \"../../src/common/dom/is-navigation-click\";\nimport { navigate } from \"../../src/common/navigate\";\nimport { provideHass } from \"../../src/fake_data/provide_hass\";\nimport { HomeAssistantAppEl } from \"../../src/layouts/home-assistant\";\nimport { selectedDemoConfig } from \"./configs/demo-configs\";\nimport { mockAuth } from \"./stubs/auth\";\nimport { mockConfigEntries } from \"./stubs/config_entries\";\nimport { mockEnergy } from \"./stubs/energy\";\nimport { energyEntities } from \"./stubs/entities\";\nimport { mockEntityRegistry } from \"./stubs/entity_registry\";\nimport { mockEvents } from \"./stubs/events\";\nimport { mockFrontend } from \"./stubs/frontend\";\nimport { mockHistory } from \"./stubs/history\";\nimport { mockLovelace } from \"./stubs/lovelace\";\nimport { mockMediaPlayer } from \"./stubs/media_player\";\nimport { mockPersistentNotification } from \"./stubs/persistent_notification\";\nimport { mockRecorder } from \"./stubs/recorder\";\nimport { mockTodo } from \"./stubs/todo\";\nimport { mockSystemLog } from \"./stubs/system_log\";\nimport { mockTemplate } from \"./stubs/template\";\nimport { mockTranslations } from \"./stubs/translations\";\nexport let HaDemo = _decorate([customElement(\"ha-demo\")], function (_initialize, _HomeAssistantAppEl) {\n  class HaDemo extends _HomeAssistantAppEl {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaDemo,\n    d: [{\n      kind: \"method\",\n      key: \"_initializeHass\",\n      value: async function _initializeHass() {\n        const initial = {\n          panelUrl: this._panelUrl,\n          // Override updateHass so that the correct hass lifecycle methods are called\n          updateHass: hassUpdate => this._updateHass(hassUpdate)\n        };\n        const hass = this.hass = provideHass(this, initial);\n        const localizePromise =\n        // @ts-ignore\n        this._loadFragmentTranslations(hass.language, \"page-demo\").then(() => this.hass.localize);\n        mockLovelace(hass, localizePromise);\n        mockAuth(hass);\n        mockTranslations(hass);\n        mockHistory(hass);\n        mockRecorder(hass);\n        mockTodo(hass);\n        mockSystemLog(hass);\n        mockTemplate(hass);\n        mockEvents(hass);\n        mockMediaPlayer(hass);\n        mockFrontend(hass);\n        mockEnergy(hass);\n        mockPersistentNotification(hass);\n        mockConfigEntries(hass);\n        mockEntityRegistry(hass, [{\n          config_entry_id: \"co2signal\",\n          device_id: \"co2signal\",\n          area_id: null,\n          disabled_by: null,\n          entity_id: \"sensor.co2_intensity\",\n          id: \"sensor.co2_intensity\",\n          name: null,\n          icon: null,\n          platform: \"co2signal\",\n          hidden_by: null,\n          entity_category: null,\n          has_entity_name: false,\n          unique_id: \"co2_intensity\",\n          options: null\n        }, {\n          config_entry_id: \"co2signal\",\n          device_id: \"co2signal\",\n          area_id: null,\n          disabled_by: null,\n          entity_id: \"sensor.grid_fossil_fuel_percentage\",\n          id: \"sensor.co2_intensity\",\n          name: null,\n          icon: null,\n          platform: \"co2signal\",\n          hidden_by: null,\n          entity_category: null,\n          has_entity_name: false,\n          unique_id: \"grid_fossil_fuel_percentage\",\n          options: null\n        }]);\n        hass.addEntities(energyEntities());\n\n        // Once config is loaded AND localize, set entities and apply theme.\n        Promise.all([selectedDemoConfig, localizePromise]).then(([conf, localize]) => {\n          hass.addEntities(conf.entities(localize));\n          if (conf.theme) {\n            hass.mockTheme(conf.theme());\n          }\n        });\n\n        // Taken from polymer/pwa-helpers. BSD-3 licensed\n        document.body.addEventListener(\"click\", e => {\n          const href = isNavigationClick(e);\n          if (!href) {\n            return;\n          }\n          e.preventDefault();\n          navigate(href);\n        }, {\n          capture: true\n        });\n        this.hassConnected();\n      }\n    }]\n  };\n}, HomeAssistantAppEl);","map":{"version":3,"names":["customElement","isNavigationClick","navigate","provideHass","HomeAssistantAppEl","selectedDemoConfig","mockAuth","mockConfigEntries","mockEnergy","energyEntities","mockEntityRegistry","mockEvents","mockFrontend","mockHistory","mockLovelace","mockMediaPlayer","mockPersistentNotification","mockRecorder","mockTodo","mockSystemLog","mockTemplate","mockTranslations","HaDemo","_decorate","_initialize","_HomeAssistantAppEl","constructor","args","F","d","kind","key","value","_initializeHass","initial","panelUrl","_panelUrl","updateHass","hassUpdate","_updateHass","hass","localizePromise","_loadFragmentTranslations","language","then","localize","config_entry_id","device_id","area_id","disabled_by","entity_id","id","name","icon","platform","hidden_by","entity_category","has_entity_name","unique_id","options","addEntities","Promise","all","conf","entities","theme","mockTheme","document","body","addEventListener","e","href","preventDefault","capture","hassConnected"],"sources":["/Users/sercanardil/Desktop/frontend/demo/src/ha-demo.ts"],"sourcesContent":["// Compat needs to be first import\nimport \"../../src/resources/compatibility\";\nimport { customElement } from \"lit/decorators\";\nimport { isNavigationClick } from \"../../src/common/dom/is-navigation-click\";\nimport { navigate } from \"../../src/common/navigate\";\nimport {\n  MockHomeAssistant,\n  provideHass,\n} from \"../../src/fake_data/provide_hass\";\nimport { HomeAssistantAppEl } from \"../../src/layouts/home-assistant\";\nimport { HomeAssistant } from \"../../src/types\";\nimport { selectedDemoConfig } from \"./configs/demo-configs\";\nimport { mockAuth } from \"./stubs/auth\";\nimport { mockConfigEntries } from \"./stubs/config_entries\";\nimport { mockEnergy } from \"./stubs/energy\";\nimport { energyEntities } from \"./stubs/entities\";\nimport { mockEntityRegistry } from \"./stubs/entity_registry\";\nimport { mockEvents } from \"./stubs/events\";\nimport { mockFrontend } from \"./stubs/frontend\";\nimport { mockHistory } from \"./stubs/history\";\nimport { mockLovelace } from \"./stubs/lovelace\";\nimport { mockMediaPlayer } from \"./stubs/media_player\";\nimport { mockPersistentNotification } from \"./stubs/persistent_notification\";\nimport { mockRecorder } from \"./stubs/recorder\";\nimport { mockTodo } from \"./stubs/todo\";\nimport { mockSystemLog } from \"./stubs/system_log\";\nimport { mockTemplate } from \"./stubs/template\";\nimport { mockTranslations } from \"./stubs/translations\";\n\n@customElement(\"ha-demo\")\nexport class HaDemo extends HomeAssistantAppEl {\n  protected async _initializeHass() {\n    const initial: Partial<MockHomeAssistant> = {\n      panelUrl: (this as any)._panelUrl,\n      // Override updateHass so that the correct hass lifecycle methods are called\n      updateHass: (hassUpdate: Partial<HomeAssistant>) =>\n        this._updateHass(hassUpdate),\n    };\n\n    const hass = (this.hass = provideHass(this, initial));\n    const localizePromise =\n      // @ts-ignore\n      this._loadFragmentTranslations(hass.language, \"page-demo\").then(\n        () => this.hass!.localize\n      );\n\n    mockLovelace(hass, localizePromise);\n    mockAuth(hass);\n    mockTranslations(hass);\n    mockHistory(hass);\n    mockRecorder(hass);\n    mockTodo(hass);\n    mockSystemLog(hass);\n    mockTemplate(hass);\n    mockEvents(hass);\n    mockMediaPlayer(hass);\n    mockFrontend(hass);\n    mockEnergy(hass);\n    mockPersistentNotification(hass);\n    mockConfigEntries(hass);\n    mockEntityRegistry(hass, [\n      {\n        config_entry_id: \"co2signal\",\n        device_id: \"co2signal\",\n        area_id: null,\n        disabled_by: null,\n        entity_id: \"sensor.co2_intensity\",\n        id: \"sensor.co2_intensity\",\n        name: null,\n        icon: null,\n        platform: \"co2signal\",\n        hidden_by: null,\n        entity_category: null,\n        has_entity_name: false,\n        unique_id: \"co2_intensity\",\n        options: null,\n      },\n      {\n        config_entry_id: \"co2signal\",\n        device_id: \"co2signal\",\n        area_id: null,\n        disabled_by: null,\n        entity_id: \"sensor.grid_fossil_fuel_percentage\",\n        id: \"sensor.co2_intensity\",\n        name: null,\n        icon: null,\n        platform: \"co2signal\",\n        hidden_by: null,\n        entity_category: null,\n        has_entity_name: false,\n        unique_id: \"grid_fossil_fuel_percentage\",\n        options: null,\n      },\n    ]);\n\n    hass.addEntities(energyEntities());\n\n    // Once config is loaded AND localize, set entities and apply theme.\n    Promise.all([selectedDemoConfig, localizePromise]).then(\n      ([conf, localize]) => {\n        hass.addEntities(conf.entities(localize));\n        if (conf.theme) {\n          hass.mockTheme(conf.theme());\n        }\n      }\n    );\n\n    // Taken from polymer/pwa-helpers. BSD-3 licensed\n    document.body.addEventListener(\n      \"click\",\n      (e) => {\n        const href = isNavigationClick(e);\n\n        if (!href) {\n          return;\n        }\n\n        e.preventDefault();\n        navigate(href);\n      },\n      { capture: true }\n    );\n\n    (this as any).hassConnected();\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-demo\": HaDemo;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}