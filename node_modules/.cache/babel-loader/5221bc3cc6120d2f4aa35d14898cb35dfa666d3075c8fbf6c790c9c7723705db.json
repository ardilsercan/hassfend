{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport { LitElement, css, html } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport { formatNumber } from \"../common/number/format_number\";\nimport { blankBeforeUnit } from \"../common/translations/blank_before_unit\";\nexport let HaBigNumber = _decorate([customElement(\"ha-big-number\")], function (_initialize, _LitElement) {\n  class HaBigNumber extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaBigNumber,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        type: Number\n      })],\n      key: \"value\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"unit\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: \"unit-position\"\n      })],\n      key: \"unitPosition\",\n      value() {\n        return \"top\";\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"formatOptions\",\n      value() {\n        return {};\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var _this$hass, _this$hass2;\n        const formatted = formatNumber(this.value, (_this$hass = this.hass) === null || _this$hass === void 0 ? void 0 : _this$hass.locale, this.formatOptions);\n        const [integer] = formatted.includes(\".\") ? formatted.split(\".\") : formatted.split(\",\");\n        const temperatureDecimal = formatted.replace(integer, \"\");\n        const formattedValue = `${this.value}${this.unit ? `${blankBeforeUnit(this.unit, (_this$hass2 = this.hass) === null || _this$hass2 === void 0 ? void 0 : _this$hass2.locale)}${this.unit}` : \"\"}`;\n        const unitBottom = this.unitPosition === \"bottom\";\n        return html`\n      <p class=\"value\">\n        <span aria-hidden=\"true\" class=\"displayed-value\">\n          <span>${integer}</span>\n          <span class=\"addon ${classMap({\n          bottom: unitBottom\n        })}\">\n            <span class=\"decimal\">${temperatureDecimal}</span>\n            <span class=\"unit\">${this.unit}</span>\n          </span>\n        </span>\n        <span class=\"visually-hidden\">${formattedValue}</span>\n      </p>\n    `;\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [css`\n        :host {\n          font-size: 57px;\n          line-height: 1.12;\n          letter-spacing: -0.25px;\n        }\n        .value {\n          display: flex;\n          margin: 0;\n          direction: ltr;\n        }\n        .displayed-value {\n          display: inline-flex;\n          flex-direction: row;\n          align-items: flex-end;\n        }\n        .addon {\n          display: flex;\n          flex-direction: column-reverse;\n          padding: 4px 0;\n        }\n        .addon.bottom {\n          flex-direction: row;\n          align-items: baseline;\n        }\n        .addon.bottom .unit {\n          margin-bottom: 4px;\n          margin-left: 2px;\n        }\n        .value .decimal {\n          font-size: 0.42em;\n          line-height: 1.33;\n          min-height: 1.33em;\n        }\n        .value .unit {\n          font-size: 0.33em;\n          line-height: 1.26;\n        }\n        /* Accessibility */\n        .visually-hidden {\n          position: absolute;\n          overflow: hidden;\n          clip: rect(0 0 0 0);\n          height: 1px;\n          width: 1px;\n          margin: -1px;\n          padding: 0;\n          border: 0;\n        }\n      `];\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["LitElement","css","html","customElement","property","classMap","formatNumber","blankBeforeUnit","HaBigNumber","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","type","Number","key","value","attribute","render","_this$hass","_this$hass2","formatted","hass","locale","formatOptions","integer","includes","split","temperatureDecimal","replace","formattedValue","unit","unitBottom","unitPosition","bottom","static","styles"],"sources":["/workspaces/frontend/src/components/ha-big-number.ts"],"sourcesContent":["import { CSSResultGroup, LitElement, css, html } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport { formatNumber } from \"../common/number/format_number\";\nimport { blankBeforeUnit } from \"../common/translations/blank_before_unit\";\nimport { HomeAssistant } from \"../types\";\n\n@customElement(\"ha-big-number\")\nexport class HaBigNumber extends LitElement {\n  @property({ type: Number }) public value!: number;\n\n  @property() public unit?: string;\n\n  @property({ attribute: \"unit-position\" })\n  public unitPosition: \"top\" | \"bottom\" = \"top\";\n\n  @property({ attribute: false }) public hass?: HomeAssistant;\n\n  @property({ attribute: false })\n  public formatOptions: Intl.NumberFormatOptions = {};\n\n  protected render() {\n    const formatted = formatNumber(\n      this.value,\n      this.hass?.locale,\n      this.formatOptions\n    );\n    const [integer] = formatted.includes(\".\")\n      ? formatted.split(\".\")\n      : formatted.split(\",\");\n\n    const temperatureDecimal = formatted.replace(integer, \"\");\n\n    const formattedValue = `${this.value}${\n      this.unit\n        ? `${blankBeforeUnit(this.unit, this.hass?.locale)}${this.unit}`\n        : \"\"\n    }`;\n\n    const unitBottom = this.unitPosition === \"bottom\";\n\n    return html`\n      <p class=\"value\">\n        <span aria-hidden=\"true\" class=\"displayed-value\">\n          <span>${integer}</span>\n          <span class=\"addon ${classMap({ bottom: unitBottom })}\">\n            <span class=\"decimal\">${temperatureDecimal}</span>\n            <span class=\"unit\">${this.unit}</span>\n          </span>\n        </span>\n        <span class=\"visually-hidden\">${formattedValue}</span>\n      </p>\n    `;\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      css`\n        :host {\n          font-size: 57px;\n          line-height: 1.12;\n          letter-spacing: -0.25px;\n        }\n        .value {\n          display: flex;\n          margin: 0;\n          direction: ltr;\n        }\n        .displayed-value {\n          display: inline-flex;\n          flex-direction: row;\n          align-items: flex-end;\n        }\n        .addon {\n          display: flex;\n          flex-direction: column-reverse;\n          padding: 4px 0;\n        }\n        .addon.bottom {\n          flex-direction: row;\n          align-items: baseline;\n        }\n        .addon.bottom .unit {\n          margin-bottom: 4px;\n          margin-left: 2px;\n        }\n        .value .decimal {\n          font-size: 0.42em;\n          line-height: 1.33;\n          min-height: 1.33em;\n        }\n        .value .unit {\n          font-size: 0.33em;\n          line-height: 1.26;\n        }\n        /* Accessibility */\n        .visually-hidden {\n          position: absolute;\n          overflow: hidden;\n          clip: rect(0 0 0 0);\n          height: 1px;\n          width: 1px;\n          margin: -1px;\n          padding: 0;\n          border: 0;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-big-number\": HaBigNumber;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}