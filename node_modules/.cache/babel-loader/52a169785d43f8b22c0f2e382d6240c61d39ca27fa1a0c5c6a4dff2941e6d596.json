{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/helpers/regeneratorRuntime\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4;\nimport \"unfetch/polyfill\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.url.js\";\nimport \"core-js/modules/web.url-search-params.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport { css, html, LitElement } from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { nextRender } from \"../common/util/render-status\";\nimport \"./ha-alert\";\nvar HaHLSPlayer = _decorate([customElement(\"ha-hls-player\")], function (_initialize, _LitElement) {\n  var HaHLSPlayer = /*#__PURE__*/function (_LitElement2) {\n    _inherits(HaHLSPlayer, _LitElement2);\n    function HaHLSPlayer() {\n      var _this;\n      _classCallCheck(this, HaHLSPlayer);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, HaHLSPlayer, [].concat(args));\n      _initialize(_assertThisInitialized(_this));\n      return _this;\n    }\n    return _createClass(HaHLSPlayer);\n  }(_LitElement);\n  return {\n    F: HaHLSPlayer,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"url\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"posterUrl\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        attribute: \"controls\"\n      })],\n      key: \"controls\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        attribute: \"muted\"\n      })],\n      key: \"muted\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        attribute: \"autoplay\"\n      })],\n      key: \"autoPlay\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        attribute: \"playsinline\"\n      })],\n      key: \"playsInline\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        attribute: \"allow-exoplayer\"\n      })],\n      key: \"allowExoPlayer\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [query(\"video\")],\n      key: \"_videoEl\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_error\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_errorIsFatal\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_hlsPolyfillInstance\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_exoPlayer\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      static: true,\n      key: \"streamCount\",\n      value: function value() {\n        return 0;\n      }\n    }, {\n      kind: \"method\",\n      key: \"connectedCallback\",\n      value:\n      // don't cache this, as we remove it on disconnects\n\n      function connectedCallback() {\n        _get(_getPrototypeOf(HaHLSPlayer.prototype), \"connectedCallback\", this).call(this);\n        HaHLSPlayer.streamCount += 1;\n        if (this.hasUpdated) {\n          this._resetError();\n          this._startHls();\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"disconnectedCallback\",\n      value: function disconnectedCallback() {\n        _get(_getPrototypeOf(HaHLSPlayer.prototype), \"disconnectedCallback\", this).call(this);\n        HaHLSPlayer.streamCount -= 1;\n        this._cleanUp();\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        return html(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      \", \"\\n      \", \"\\n    \"])), this._error ? html(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"<ha-alert\\n            alert-type=\\\"error\\\"\\n            class=\", \"\\n          >\\n            \", \"\\n          </ha-alert>\"])), this._errorIsFatal ? \"fatal\" : \"retry\", this._error) : \"\", !this._errorIsFatal ? html(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"<video\\n            .poster=\", \"\\n            ?autoplay=\", \"\\n            .muted=\", \"\\n            ?playsinline=\", \"\\n            ?controls=\", \"\\n            @loadeddata=\", \"\\n          ></video>\"])), this.posterUrl, this.autoPlay, this.muted, this.playsInline, this.controls, this._loadedData) : \"\");\n      }\n    }, {\n      kind: \"method\",\n      key: \"updated\",\n      value: function updated(changedProps) {\n        _get(_getPrototypeOf(HaHLSPlayer.prototype), \"updated\", this).call(this, changedProps);\n        var urlChanged = changedProps.has(\"url\");\n        if (!urlChanged) {\n          return;\n        }\n        this._cleanUp();\n        this._resetError();\n        this._startHls();\n      }\n    }, {\n      kind: \"method\",\n      key: \"_startHls\",\n      value: function () {\n        var _startHls2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n          var _this$hass$auth$exter;\n          var masterPlaylistPromise, Hls, hlsSupported, useExoPlayer, masterPlaylist, playlistRegexp, match, matchTwice, playlist_url;\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                masterPlaylistPromise = fetch(this.url);\n                _context.next = 3;\n                return import(\"hls.js/dist/hls.light.mjs\");\n              case 3:\n                Hls = _context.sent.default;\n                if (this.isConnected) {\n                  _context.next = 6;\n                  break;\n                }\n                return _context.abrupt(\"return\");\n              case 6:\n                hlsSupported = Hls.isSupported();\n                if (!hlsSupported) {\n                  hlsSupported = this._videoEl.canPlayType(\"application/vnd.apple.mpegurl\") !== \"\";\n                }\n                if (hlsSupported) {\n                  _context.next = 11;\n                  break;\n                }\n                this._setFatalError(this.hass.localize(\"ui.components.media-browser.video_not_supported\"));\n                return _context.abrupt(\"return\");\n              case 11:\n                useExoPlayer = this.allowExoPlayer && ((_this$hass$auth$exter = this.hass.auth.external) === null || _this$hass$auth$exter === void 0 ? void 0 : _this$hass$auth$exter.config.hasExoPlayer);\n                _context.next = 14;\n                return masterPlaylistPromise;\n              case 14:\n                _context.next = 16;\n                return _context.sent.text();\n              case 16:\n                masterPlaylist = _context.sent;\n                if (this.isConnected) {\n                  _context.next = 19;\n                  break;\n                }\n                return _context.abrupt(\"return\");\n              case 19:\n                // Parse playlist assuming it is a master playlist. Match group 1 is whether hevc, match group 2 is regular playlist url\n                // See https://tools.ietf.org/html/rfc8216 for HLS spec details\n                playlistRegexp = /#EXT-X-STREAM-INF:.*?(?:CODECS=\".*?(hev1|hvc1)?\\..*?\".*?)?(?:\\n|\\r\\n)(.+)/g;\n                match = playlistRegexp.exec(masterPlaylist);\n                matchTwice = playlistRegexp.exec(masterPlaylist); // Get the regular playlist url from the input (master) playlist, falling back to the input playlist if necessary\n                // This avoids the player having to load and parse the master playlist again before loading the regular playlist\n                if (match !== null && matchTwice === null) {\n                  // Only send the regular playlist url if we match exactly once\n                  playlist_url = new URL(match[2], this.url).href;\n                } else {\n                  playlist_url = this.url;\n                }\n\n                // If codec is HEVC and ExoPlayer is supported, use ExoPlayer.\n                if (useExoPlayer && match !== null && match[1] !== undefined) {\n                  this._renderHLSExoPlayer(playlist_url);\n                } else if (Hls.isSupported()) {\n                  this._renderHLSPolyfill(this._videoEl, Hls, playlist_url);\n                } else {\n                  this._renderHLSNative(this._videoEl, playlist_url);\n                }\n              case 24:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee, this);\n        }));\n        function _startHls() {\n          return _startHls2.apply(this, arguments);\n        }\n        return _startHls;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"_renderHLSExoPlayer\",\n      value: function () {\n        var _renderHLSExoPlayer2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(url) {\n          return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n            while (1) switch (_context2.prev = _context2.next) {\n              case 0:\n                this._exoPlayer = true;\n                window.addEventListener(\"resize\", this._resizeExoPlayer);\n                this.updateComplete.then(function () {\n                  return nextRender();\n                }).then(this._resizeExoPlayer);\n                this._videoEl.style.visibility = \"hidden\";\n                _context2.next = 6;\n                return this.hass.auth.external.fireMessage({\n                  type: \"exoplayer/play_hls\",\n                  payload: {\n                    url: new URL(url, window.location.href).toString(),\n                    muted: this.muted\n                  }\n                });\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }, _callee2, this);\n        }));\n        function _renderHLSExoPlayer(_x) {\n          return _renderHLSExoPlayer2.apply(this, arguments);\n        }\n        return _renderHLSExoPlayer;\n      }()\n    }, {\n      kind: \"field\",\n      key: \"_resizeExoPlayer\",\n      value: function value() {\n        var _this2 = this;\n        return function () {\n          if (!_this2._videoEl) {\n            return;\n          }\n          var rect = _this2._videoEl.getBoundingClientRect();\n          _this2.hass.auth.external.fireMessage({\n            type: \"exoplayer/resize\",\n            payload: {\n              left: rect.left,\n              top: rect.top,\n              right: rect.right,\n              bottom: rect.bottom\n            }\n          });\n        };\n      }\n    }, {\n      kind: \"method\",\n      key: \"_isLLHLSSupported\",\n      value: function _isLLHLSSupported() {\n        // LL-HLS keeps multiple requests in flight, which can run into browser limitations without\n        // an http/2 proxy to pipeline requests. However, a small number of streams active at\n        // once should be OK.\n        // The stream count may be incremented multiple times before this function is called to check\n        // the count e.g. when loading a page with many streams on it. The race can work in our favor\n        // so we now have a better idea on if we'll use too many browser connections later.\n        if (HaHLSPlayer.streamCount <= 2) {\n          return true;\n        }\n        if (!(\"performance\" in window) || performance.getEntriesByType(\"resource\").length === 0) {\n          return false;\n        }\n        var perfEntry = performance.getEntriesByType(\"resource\")[0];\n        return \"nextHopProtocol\" in perfEntry && perfEntry.nextHopProtocol === \"h2\";\n      }\n    }, {\n      kind: \"method\",\n      key: \"_renderHLSPolyfill\",\n      value: function () {\n        var _renderHLSPolyfill2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(videoEl, Hls, url) {\n          var _this3 = this;\n          var hls;\n          return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n            while (1) switch (_context3.prev = _context3.next) {\n              case 0:\n                hls = new Hls({\n                  backBufferLength: 60,\n                  fragLoadingTimeOut: 30000,\n                  manifestLoadingTimeOut: 30000,\n                  levelLoadingTimeOut: 30000,\n                  maxLiveSyncPlaybackRate: 2,\n                  lowLatencyMode: this._isLLHLSSupported()\n                });\n                this._hlsPolyfillInstance = hls;\n                hls.attachMedia(videoEl);\n                hls.on(Hls.Events.MEDIA_ATTACHED, function () {\n                  _this3._resetError();\n                  hls.loadSource(url);\n                });\n                hls.on(Hls.Events.FRAG_LOADED, function (_event, _data) {\n                  _this3._resetError();\n                });\n                hls.on(Hls.Events.ERROR, function (_event, data) {\n                  // Some errors are recovered automatically by the hls player itself, and the others handled\n                  // in this function require special actions to recover. Errors retried in this function\n                  // are done with backoff to not cause unecessary failures.\n                  if (!data.fatal) {\n                    return;\n                  }\n                  if (data.type === Hls.ErrorTypes.NETWORK_ERROR) {\n                    switch (data.details) {\n                      case Hls.ErrorDetails.MANIFEST_LOAD_ERROR:\n                        {\n                          var error = \"Error starting stream, see logs for details\";\n                          if (data.response !== undefined && data.response.code !== undefined) {\n                            if (data.response.code >= 500) {\n                              error += \" (Server failure)\";\n                            } else if (data.response.code >= 400) {\n                              error += \" (Stream never started)\";\n                            } else {\n                              error += \" (\" + data.response.code + \")\";\n                            }\n                          }\n                          _this3._setRetryableError(error);\n                          break;\n                        }\n                      case Hls.ErrorDetails.MANIFEST_LOAD_TIMEOUT:\n                        _this3._setRetryableError(\"Timeout while starting stream\");\n                        break;\n                      default:\n                        _this3._setRetryableError(\"Stream network error\");\n                        break;\n                    }\n                    hls.startLoad();\n                  } else if (data.type === Hls.ErrorTypes.MEDIA_ERROR) {\n                    _this3._setRetryableError(\"Error with media stream contents\");\n                    hls.recoverMediaError();\n                  } else {\n                    _this3._setFatalError(\"Error playing stream\");\n                  }\n                });\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }, _callee3, this);\n        }));\n        function _renderHLSPolyfill(_x2, _x3, _x4) {\n          return _renderHLSPolyfill2.apply(this, arguments);\n        }\n        return _renderHLSPolyfill;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"_renderHLSNative\",\n      value: function () {\n        var _renderHLSNative2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(videoEl, url) {\n          return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n            while (1) switch (_context4.prev = _context4.next) {\n              case 0:\n                videoEl.src = url;\n                videoEl.addEventListener(\"loadedmetadata\", function () {\n                  videoEl.play();\n                });\n              case 2:\n              case \"end\":\n                return _context4.stop();\n            }\n          }, _callee4);\n        }));\n        function _renderHLSNative(_x5, _x6) {\n          return _renderHLSNative2.apply(this, arguments);\n        }\n        return _renderHLSNative;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"_cleanUp\",\n      value: function _cleanUp() {\n        if (this._hlsPolyfillInstance) {\n          this._hlsPolyfillInstance.destroy();\n          this._hlsPolyfillInstance = undefined;\n        }\n        if (this._exoPlayer) {\n          window.removeEventListener(\"resize\", this._resizeExoPlayer);\n          this.hass.auth.external.fireMessage({\n            type: \"exoplayer/stop\"\n          });\n          this._exoPlayer = false;\n        }\n        if (this._videoEl) {\n          this._videoEl.removeAttribute(\"src\");\n          this._videoEl.load();\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_resetError\",\n      value: function _resetError() {\n        this._error = undefined;\n        this._errorIsFatal = false;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_setFatalError\",\n      value: function _setFatalError(errorMessage) {\n        this._error = errorMessage;\n        this._errorIsFatal = true;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_setRetryableError\",\n      value: function _setRetryableError(errorMessage) {\n        this._error = errorMessage;\n        this._errorIsFatal = false;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_loadedData\",\n      value: function _loadedData() {\n        // @ts-ignore\n        fireEvent(this, \"load\");\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n      :host,\\n      video {\\n        display: block;\\n      }\\n\\n      video {\\n        width: 100%;\\n        max-height: var(--video-max-height, calc(100vh - 97px));\\n      }\\n\\n      .fatal {\\n        display: block;\\n        padding: 100px 16px;\\n      }\\n\\n      .retry {\\n        display: block;\\n      }\\n    \"])));\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","customElement","property","query","state","fireEvent","nextRender","HaHLSPlayer","_decorate","_initialize","_LitElement","_LitElement2","_inherits","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_assertThisInitialized","_createClass","F","d","kind","decorators","attribute","key","value","type","Boolean","static","connectedCallback","_get","_getPrototypeOf","prototype","call","streamCount","hasUpdated","_resetError","_startHls","disconnectedCallback","_cleanUp","render","_templateObject","_taggedTemplateLiteral","_error","_templateObject2","_errorIsFatal","_templateObject3","posterUrl","autoPlay","muted","playsInline","controls","_loadedData","updated","changedProps","urlChanged","has","_startHls2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_this$hass$auth$exter","masterPlaylistPromise","Hls","hlsSupported","useExoPlayer","masterPlaylist","playlistRegexp","match","matchTwice","playlist_url","wrap","_callee$","_context","prev","next","fetch","url","sent","default","isConnected","abrupt","isSupported","_videoEl","canPlayType","_setFatalError","hass","localize","allowExoPlayer","auth","external","config","hasExoPlayer","text","exec","URL","href","undefined","_renderHLSExoPlayer","_renderHLSPolyfill","_renderHLSNative","stop","apply","_renderHLSExoPlayer2","_callee2","_callee2$","_context2","_exoPlayer","window","addEventListener","_resizeExoPlayer","updateComplete","then","style","visibility","fireMessage","payload","location","toString","_x","_this2","rect","getBoundingClientRect","left","top","right","bottom","_isLLHLSSupported","performance","getEntriesByType","perfEntry","nextHopProtocol","_renderHLSPolyfill2","_callee3","videoEl","_this3","hls","_callee3$","_context3","backBufferLength","fragLoadingTimeOut","manifestLoadingTimeOut","levelLoadingTimeOut","maxLiveSyncPlaybackRate","lowLatencyMode","_hlsPolyfillInstance","attachMedia","on","Events","MEDIA_ATTACHED","loadSource","FRAG_LOADED","_event","_data","ERROR","data","fatal","ErrorTypes","NETWORK_ERROR","details","ErrorDetails","MANIFEST_LOAD_ERROR","error","response","code","_setRetryableError","MANIFEST_LOAD_TIMEOUT","startLoad","MEDIA_ERROR","recoverMediaError","_x2","_x3","_x4","_renderHLSNative2","_callee4","_callee4$","_context4","src","play","_x5","_x6","destroy","removeEventListener","removeAttribute","load","errorMessage","styles","_templateObject4"],"sources":["/workspaces/frontend/src/components/ha-hls-player.ts"],"sourcesContent":["import type HlsType from \"hls.js\";\nimport {\n  css,\n  CSSResultGroup,\n  html,\n  LitElement,\n  PropertyValues,\n  TemplateResult,\n} from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { nextRender } from \"../common/util/render-status\";\nimport type { HomeAssistant } from \"../types\";\nimport \"./ha-alert\";\n\ntype HlsLite = Omit<\n  HlsType,\n  \"subtitleTrackController\" | \"audioTrackController\" | \"emeController\"\n>;\n\n@customElement(\"ha-hls-player\")\nclass HaHLSPlayer extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property() public url!: string;\n\n  @property() public posterUrl!: string;\n\n  @property({ type: Boolean, attribute: \"controls\" })\n  public controls = false;\n\n  @property({ type: Boolean, attribute: \"muted\" })\n  public muted = false;\n\n  @property({ type: Boolean, attribute: \"autoplay\" })\n  public autoPlay = false;\n\n  @property({ type: Boolean, attribute: \"playsinline\" })\n  public playsInline = false;\n\n  @property({ type: Boolean, attribute: \"allow-exoplayer\" })\n  public allowExoPlayer = false;\n\n  // don't cache this, as we remove it on disconnects\n  @query(\"video\") private _videoEl!: HTMLVideoElement;\n\n  @state() private _error?: string;\n\n  @state() private _errorIsFatal = false;\n\n  private _hlsPolyfillInstance?: HlsLite;\n\n  private _exoPlayer = false;\n\n  private static streamCount = 0;\n\n  public connectedCallback() {\n    super.connectedCallback();\n    HaHLSPlayer.streamCount += 1;\n    if (this.hasUpdated) {\n      this._resetError();\n      this._startHls();\n    }\n  }\n\n  public disconnectedCallback() {\n    super.disconnectedCallback();\n    HaHLSPlayer.streamCount -= 1;\n    this._cleanUp();\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      ${this._error\n        ? html`<ha-alert\n            alert-type=\"error\"\n            class=${this._errorIsFatal ? \"fatal\" : \"retry\"}\n          >\n            ${this._error}\n          </ha-alert>`\n        : \"\"}\n      ${!this._errorIsFatal\n        ? html`<video\n            .poster=${this.posterUrl}\n            ?autoplay=${this.autoPlay}\n            .muted=${this.muted}\n            ?playsinline=${this.playsInline}\n            ?controls=${this.controls}\n            @loadeddata=${this._loadedData}\n          ></video>`\n        : \"\"}\n    `;\n  }\n\n  protected updated(changedProps: PropertyValues) {\n    super.updated(changedProps);\n\n    const urlChanged = changedProps.has(\"url\");\n\n    if (!urlChanged) {\n      return;\n    }\n\n    this._cleanUp();\n    this._resetError();\n    this._startHls();\n  }\n\n  private async _startHls(): Promise<void> {\n    const masterPlaylistPromise = fetch(this.url);\n\n    const Hls: typeof HlsType = (await import(\"hls.js/dist/hls.light.mjs\"))\n      .default;\n\n    if (!this.isConnected) {\n      return;\n    }\n\n    let hlsSupported = Hls.isSupported();\n\n    if (!hlsSupported) {\n      hlsSupported =\n        this._videoEl.canPlayType(\"application/vnd.apple.mpegurl\") !== \"\";\n    }\n\n    if (!hlsSupported) {\n      this._setFatalError(\n        this.hass.localize(\"ui.components.media-browser.video_not_supported\")\n      );\n      return;\n    }\n\n    const useExoPlayer =\n      this.allowExoPlayer && this.hass.auth.external?.config.hasExoPlayer;\n    const masterPlaylist = await (await masterPlaylistPromise).text();\n\n    if (!this.isConnected) {\n      return;\n    }\n\n    // Parse playlist assuming it is a master playlist. Match group 1 is whether hevc, match group 2 is regular playlist url\n    // See https://tools.ietf.org/html/rfc8216 for HLS spec details\n    const playlistRegexp =\n      /#EXT-X-STREAM-INF:.*?(?:CODECS=\".*?(hev1|hvc1)?\\..*?\".*?)?(?:\\n|\\r\\n)(.+)/g;\n    const match = playlistRegexp.exec(masterPlaylist);\n    const matchTwice = playlistRegexp.exec(masterPlaylist);\n\n    // Get the regular playlist url from the input (master) playlist, falling back to the input playlist if necessary\n    // This avoids the player having to load and parse the master playlist again before loading the regular playlist\n    let playlist_url: string;\n    if (match !== null && matchTwice === null) {\n      // Only send the regular playlist url if we match exactly once\n      playlist_url = new URL(match[2], this.url).href;\n    } else {\n      playlist_url = this.url;\n    }\n\n    // If codec is HEVC and ExoPlayer is supported, use ExoPlayer.\n    if (useExoPlayer && match !== null && match[1] !== undefined) {\n      this._renderHLSExoPlayer(playlist_url);\n    } else if (Hls.isSupported()) {\n      this._renderHLSPolyfill(this._videoEl, Hls, playlist_url);\n    } else {\n      this._renderHLSNative(this._videoEl, playlist_url);\n    }\n  }\n\n  private async _renderHLSExoPlayer(url: string) {\n    this._exoPlayer = true;\n    window.addEventListener(\"resize\", this._resizeExoPlayer);\n    this.updateComplete.then(() => nextRender()).then(this._resizeExoPlayer);\n    this._videoEl.style.visibility = \"hidden\";\n    await this.hass!.auth.external!.fireMessage({\n      type: \"exoplayer/play_hls\",\n      payload: {\n        url: new URL(url, window.location.href).toString(),\n        muted: this.muted,\n      },\n    });\n  }\n\n  private _resizeExoPlayer = () => {\n    if (!this._videoEl) {\n      return;\n    }\n    const rect = this._videoEl.getBoundingClientRect();\n    this.hass!.auth.external!.fireMessage({\n      type: \"exoplayer/resize\",\n      payload: {\n        left: rect.left,\n        top: rect.top,\n        right: rect.right,\n        bottom: rect.bottom,\n      },\n    });\n  };\n\n  private _isLLHLSSupported(): boolean {\n    // LL-HLS keeps multiple requests in flight, which can run into browser limitations without\n    // an http/2 proxy to pipeline requests. However, a small number of streams active at\n    // once should be OK.\n    // The stream count may be incremented multiple times before this function is called to check\n    // the count e.g. when loading a page with many streams on it. The race can work in our favor\n    // so we now have a better idea on if we'll use too many browser connections later.\n    if (HaHLSPlayer.streamCount <= 2) {\n      return true;\n    }\n    if (\n      !(\"performance\" in window) ||\n      performance.getEntriesByType(\"resource\").length === 0\n    ) {\n      return false;\n    }\n    const perfEntry = performance.getEntriesByType(\n      \"resource\"\n    )[0] as PerformanceResourceTiming;\n    return \"nextHopProtocol\" in perfEntry && perfEntry.nextHopProtocol === \"h2\";\n  }\n\n  private async _renderHLSPolyfill(\n    videoEl: HTMLVideoElement,\n    Hls: typeof HlsType,\n    url: string\n  ) {\n    const hls = new Hls({\n      backBufferLength: 60,\n      fragLoadingTimeOut: 30000,\n      manifestLoadingTimeOut: 30000,\n      levelLoadingTimeOut: 30000,\n      maxLiveSyncPlaybackRate: 2,\n      lowLatencyMode: this._isLLHLSSupported(),\n    });\n    this._hlsPolyfillInstance = hls;\n    hls.attachMedia(videoEl);\n    hls.on(Hls.Events.MEDIA_ATTACHED, () => {\n      this._resetError();\n      hls.loadSource(url);\n    });\n    hls.on(Hls.Events.FRAG_LOADED, (_event, _data: any) => {\n      this._resetError();\n    });\n    hls.on(Hls.Events.ERROR, (_event, data: any) => {\n      // Some errors are recovered automatically by the hls player itself, and the others handled\n      // in this function require special actions to recover. Errors retried in this function\n      // are done with backoff to not cause unecessary failures.\n      if (!data.fatal) {\n        return;\n      }\n      if (data.type === Hls.ErrorTypes.NETWORK_ERROR) {\n        switch (data.details) {\n          case Hls.ErrorDetails.MANIFEST_LOAD_ERROR: {\n            let error = \"Error starting stream, see logs for details\";\n            if (\n              data.response !== undefined &&\n              data.response.code !== undefined\n            ) {\n              if (data.response.code >= 500) {\n                error += \" (Server failure)\";\n              } else if (data.response.code >= 400) {\n                error += \" (Stream never started)\";\n              } else {\n                error += \" (\" + data.response.code + \")\";\n              }\n            }\n            this._setRetryableError(error);\n            break;\n          }\n          case Hls.ErrorDetails.MANIFEST_LOAD_TIMEOUT:\n            this._setRetryableError(\"Timeout while starting stream\");\n            break;\n          default:\n            this._setRetryableError(\"Stream network error\");\n            break;\n        }\n        hls.startLoad();\n      } else if (data.type === Hls.ErrorTypes.MEDIA_ERROR) {\n        this._setRetryableError(\"Error with media stream contents\");\n        hls.recoverMediaError();\n      } else {\n        this._setFatalError(\"Error playing stream\");\n      }\n    });\n  }\n\n  private async _renderHLSNative(videoEl: HTMLVideoElement, url: string) {\n    videoEl.src = url;\n    videoEl.addEventListener(\"loadedmetadata\", () => {\n      videoEl.play();\n    });\n  }\n\n  private _cleanUp() {\n    if (this._hlsPolyfillInstance) {\n      this._hlsPolyfillInstance.destroy();\n      this._hlsPolyfillInstance = undefined;\n    }\n    if (this._exoPlayer) {\n      window.removeEventListener(\"resize\", this._resizeExoPlayer);\n      this.hass!.auth.external!.fireMessage({ type: \"exoplayer/stop\" });\n      this._exoPlayer = false;\n    }\n    if (this._videoEl) {\n      this._videoEl.removeAttribute(\"src\");\n      this._videoEl.load();\n    }\n  }\n\n  private _resetError() {\n    this._error = undefined;\n    this._errorIsFatal = false;\n  }\n\n  private _setFatalError(errorMessage: string) {\n    this._error = errorMessage;\n    this._errorIsFatal = true;\n  }\n\n  private _setRetryableError(errorMessage: string) {\n    this._error = errorMessage;\n    this._errorIsFatal = false;\n  }\n\n  private _loadedData() {\n    // @ts-ignore\n    fireEvent(this, \"load\");\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      :host,\n      video {\n        display: block;\n      }\n\n      video {\n        width: 100%;\n        max-height: var(--video-max-height, calc(100vh - 97px));\n      }\n\n      .fatal {\n        display: block;\n        padding: 100px 16px;\n      }\n\n      .retry {\n        display: block;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-hls-player\": HaHLSPlayer;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}