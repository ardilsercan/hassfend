{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport \"@material/mwc-button\";\nimport \"@material/mwc-list/mwc-list\";\nimport Fuse from \"fuse.js\";\nimport { LitElement, css, html, nothing } from \"lit\";\nimport { customElement, state } from \"lit/decorators\";\nimport { ifDefined } from \"lit/directives/if-defined\";\nimport { styleMap } from \"lit/directives/style-map\";\nimport memoizeOne from \"memoize-one\";\nimport { isComponentLoaded } from \"../../../common/config/is_component_loaded\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport { PROTOCOL_INTEGRATIONS, protocolIntegrationPicked } from \"../../../common/integrations/protocolIntegrationPicked\";\nimport { navigate } from \"../../../common/navigate\";\nimport { caseInsensitiveStringCompare } from \"../../../common/string/compare\";\nimport { createCloseHeading } from \"../../../components/ha-dialog\";\nimport \"../../../components/ha-icon-button-prev\";\nimport \"../../../components/search-input\";\nimport { fetchConfigFlowInProgress } from \"../../../data/config_flow\";\nimport { domainToName, fetchIntegrationManifest } from \"../../../data/integration\";\nimport { findIntegration, getIntegrationDescriptions } from \"../../../data/integrations\";\nimport { showConfigFlowDialog } from \"../../../dialogs/config-flow/show-dialog-config-flow\";\nimport { showAlertDialog, showConfirmationDialog } from \"../../../dialogs/generic/show-dialog-box\";\nimport { haStyleDialog, haStyleScrollbar } from \"../../../resources/styles\";\nimport { loadVirtualizer } from \"../../../resources/virtualizer\";\nimport \"./ha-domain-integrations\";\nimport \"./ha-integration-list-item\";\nimport { showYamlIntegrationDialog } from \"./show-add-integration-dialog\";\nlet AddIntegrationDialog = _decorate([customElement(\"dialog-add-integration\")], function (_initialize, _LitElement) {\n  class AddIntegrationDialog extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: AddIntegrationDialog,\n    d: [{\n      kind: \"field\",\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_integrations\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_helpers\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_initialFilter\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_filter\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_pickedBrand\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_prevPickedBrand\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_flowsInProgress\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_open\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_narrow\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_width\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_height\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"showDialog\",\n      value: async function showDialog(params) {\n        const loadPromise = this._load();\n        this._open = true;\n        this._pickedBrand = params === null || params === void 0 ? void 0 : params.brand;\n        this._initialFilter = params === null || params === void 0 ? void 0 : params.initialFilter;\n        this._narrow = matchMedia(\"all and (max-width: 450px), all and (max-height: 500px)\").matches;\n        if (params !== null && params !== void 0 && params.domain) {\n          this._createFlow(params.domain);\n        }\n        if (params !== null && params !== void 0 && params.brand) {\n          var _this$_integrations;\n          await loadPromise;\n          const brand = (_this$_integrations = this._integrations) === null || _this$_integrations === void 0 ? void 0 : _this$_integrations[params.brand];\n          if (brand && \"integrations\" in brand && brand.integrations) {\n            this._fetchFlowsInProgress(Object.keys(brand.integrations));\n          }\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"closeDialog\",\n      value: function closeDialog() {\n        this._open = false;\n        this._integrations = undefined;\n        this._helpers = undefined;\n        this._pickedBrand = undefined;\n        this._prevPickedBrand = undefined;\n        this._flowsInProgress = undefined;\n        this._filter = undefined;\n        this._width = undefined;\n        this._height = undefined;\n        fireEvent(this, \"dialog-closed\", {\n          dialog: this.localName\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"willUpdate\",\n      value: function willUpdate(changedProps) {\n        _get(_getPrototypeOf(AddIntegrationDialog.prototype), \"willUpdate\", this).call(this, changedProps);\n        if (!this.hasUpdated) {\n          loadVirtualizer();\n        }\n        if (this._filter === undefined && this._initialFilter !== undefined) {\n          this._filter = this._initialFilter;\n        }\n        if (this._initialFilter !== undefined && this._filter === \"\") {\n          this._initialFilter = undefined;\n          this._filter = undefined;\n          this._width = undefined;\n          this._height = undefined;\n        } else if (this.hasUpdated && changedProps.has(\"_filter\") && !changedProps.has(\"_open\") && (!this._width || !this._height)) {\n          var _querySelector;\n          // Store the width and height so that when we search, box doesn't jump\n          const boundingRect = (_querySelector = this.shadowRoot.querySelector(\"mwc-list\")) === null || _querySelector === void 0 ? void 0 : _querySelector.getBoundingClientRect();\n          this._width = boundingRect === null || boundingRect === void 0 ? void 0 : boundingRect.width;\n          this._height = boundingRect === null || boundingRect === void 0 ? void 0 : boundingRect.height;\n        }\n      }\n    }, {\n      kind: \"field\",\n      key: \"_filterIntegrations\",\n      value() {\n        return memoizeOne((i, h, components, localize, filter) => {\n          const addDeviceRows = PROTOCOL_INTEGRATIONS.filter(domain => components.includes(domain)).map(domain => ({\n            name: localize(`ui.panel.config.integrations.add_${domain}_device`),\n            domain,\n            config_flow: true,\n            is_built_in: true,\n            is_add: true\n          })).sort((a, b) => caseInsensitiveStringCompare(a.name, b.name, this.hass.locale.language));\n          const integrations = [];\n          const yamlIntegrations = [];\n          Object.entries(i).forEach(([domain, integration]) => {\n            if (\"integration_type\" in integration && (integration.config_flow || integration.iot_standards || integration.supported_by)) {\n              var _supportedIntegration;\n              // Integration with a config flow, iot standard, or supported by\n              const supportedIntegration = integration.supported_by ? findIntegration(this._integrations, integration.supported_by) : integration;\n              if (!supportedIntegration) {\n                return;\n              }\n              integrations.push({\n                domain,\n                name: integration.name || domainToName(localize, domain),\n                config_flow: supportedIntegration.config_flow,\n                iot_standards: supportedIntegration.iot_standards,\n                supported_by: integration.supported_by,\n                is_built_in: supportedIntegration.is_built_in !== false,\n                cloud: (_supportedIntegration = supportedIntegration.iot_class) === null || _supportedIntegration === void 0 ? void 0 : _supportedIntegration.startsWith(\"cloud_\")\n              });\n            } else if (!(\"integration_type\" in integration) && (\"iot_standards\" in integration || \"integrations\" in integration)) {\n              // Brand\n              integrations.push({\n                domain,\n                name: integration.name || domainToName(localize, domain),\n                iot_standards: integration.iot_standards,\n                integrations: integration.integrations ? Object.entries(integration.integrations).map(([dom, val]) => val.name || domainToName(localize, dom)) : undefined,\n                domains: integration.integrations ? Object.keys(integration.integrations) : undefined,\n                is_built_in: integration.is_built_in !== false\n              });\n            } else if (filter && \"integration_type\" in integration) {\n              var _integration$iot_clas;\n              // Integration without a config flow\n              yamlIntegrations.push({\n                domain,\n                name: integration.name || domainToName(localize, domain),\n                config_flow: integration.config_flow,\n                is_built_in: integration.is_built_in !== false,\n                cloud: (_integration$iot_clas = integration.iot_class) === null || _integration$iot_clas === void 0 ? void 0 : _integration$iot_clas.startsWith(\"cloud_\")\n              });\n            }\n          });\n          if (filter) {\n            const options = {\n              keys: [{\n                name: \"name\",\n                weight: 5\n              }, {\n                name: \"domain\",\n                weight: 5\n              }, {\n                name: \"integrations\",\n                weight: 2\n              }, \"supported_by\", \"iot_standards\"],\n              isCaseSensitive: false,\n              minMatchCharLength: Math.min(filter.length, 2),\n              threshold: 0.2\n            };\n            const helpers = Object.entries(h).map(([domain, integration]) => {\n              var _integration$iot_clas2;\n              return {\n                domain,\n                name: integration.name || domainToName(localize, domain),\n                config_flow: integration.config_flow,\n                is_helper: true,\n                is_built_in: integration.is_built_in !== false,\n                cloud: (_integration$iot_clas2 = integration.iot_class) === null || _integration$iot_clas2 === void 0 ? void 0 : _integration$iot_clas2.startsWith(\"cloud_\")\n              };\n            });\n            return [...new Fuse(integrations, options).search(filter).map(result => result.item), ...new Fuse(yamlIntegrations, options).search(filter).map(result => result.item), ...new Fuse(helpers, options).search(filter).map(result => result.item)];\n          }\n          return [...addDeviceRows, ...integrations.sort((a, b) => caseInsensitiveStringCompare(a.name || \"\", b.name || \"\", this.hass.locale.language))];\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_getIntegrations\",\n      value: function _getIntegrations() {\n        return this._filterIntegrations(this._integrations, this._helpers, this.hass.config.components, this.hass.localize, this._filter);\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var _this$_integrations2;\n        if (!this._open) {\n          return nothing;\n        }\n        const integrations = this._integrations ? this._getIntegrations() : undefined;\n        const pickedIntegration = this._pickedBrand ? ((_this$_integrations2 = this._integrations) === null || _this$_integrations2 === void 0 ? void 0 : _this$_integrations2[this._pickedBrand]) || findIntegration(this._integrations, this._pickedBrand) : undefined;\n        return html`<ha-dialog\n      open\n      @closed=${this.closeDialog}\n      scrimClickAction\n      escapeKeyAction\n      hideActions\n      .heading=${createCloseHeading(this.hass, this.hass.localize(\"ui.panel.config.integrations.new\"))}\n    >\n      ${this._pickedBrand && (!this._integrations || pickedIntegration) ? html`<div slot=\"heading\">\n              <ha-icon-button-prev\n                @click=${this._prevClicked}\n              ></ha-icon-button-prev>\n              <h2 class=\"mdc-dialog__title\">\n                ${this._calculateBrandHeading(pickedIntegration)}\n              </h2>\n            </div>\n            ${this._renderIntegration(pickedIntegration)}` : this._renderAll(integrations)}\n    </ha-dialog>`;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_calculateBrandHeading\",\n      value: function _calculateBrandHeading(integration) {\n        var _this$_flowsInProgres, _this$_flowsInProgres2;\n        if (integration !== null && integration !== void 0 && integration.iot_standards && !(\"integrations\" in integration) && !((_this$_flowsInProgres = this._flowsInProgress) !== null && _this$_flowsInProgres !== void 0 && _this$_flowsInProgres.length)) {\n          return this.hass.localize(\"ui.panel.config.integrations.what_device_type\");\n        }\n        if (integration && !(integration !== null && integration !== void 0 && integration.iot_standards) && !(\"integrations\" in integration) && (_this$_flowsInProgres2 = this._flowsInProgress) !== null && _this$_flowsInProgres2 !== void 0 && _this$_flowsInProgres2.length) {\n          return this.hass.localize(\"ui.panel.config.integrations.confirm_add_discovered\");\n        }\n        return this.hass.localize(\"ui.panel.config.integrations.what_to_add\");\n      }\n    }, {\n      kind: \"method\",\n      key: \"_renderIntegration\",\n      value: function _renderIntegration(integration) {\n        return html`<ha-domain-integrations\n      .hass=${this.hass}\n      .domain=${this._pickedBrand}\n      .integration=${integration}\n      .flowsInProgress=${this._flowsInProgress}\n      style=${styleMap({\n          minWidth: `${this._width}px`,\n          minHeight: `581px`\n        })}\n      @close-dialog=${this.closeDialog}\n      @supported-by=${this._handleSupportedByEvent}\n      @select-brand=${this._handleSelectBrandEvent}\n    ></ha-domain-integrations>`;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleSelectBrandEvent\",\n      value: function _handleSelectBrandEvent(ev) {\n        this._prevPickedBrand = this._pickedBrand;\n        this._pickedBrand = ev.detail.brand;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleSupportedByEvent\",\n      value: function _handleSupportedByEvent(ev) {\n        this._supportedBy(ev.detail.integration);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_supportedBy\",\n      value: function _supportedBy(integration) {\n        const supportIntegration = findIntegration(this._integrations, integration.supported_by);\n        showConfirmationDialog(this, {\n          text: this.hass.localize(\"ui.panel.config.integrations.config_flow.supported_brand_flow\", {\n            supported_brand: integration.name || domainToName(this.hass.localize, integration.domain),\n            flow_domain_name: (supportIntegration === null || supportIntegration === void 0 ? void 0 : supportIntegration.name) || domainToName(this.hass.localize, integration.supported_by)\n          }),\n          confirm: () => {\n            this.closeDialog();\n            if (PROTOCOL_INTEGRATIONS.includes(integration.supported_by)) {\n              protocolIntegrationPicked(this, this.hass, integration.supported_by);\n              return;\n            }\n            if (supportIntegration) {\n              this._handleIntegrationPicked({\n                domain: integration.supported_by,\n                name: supportIntegration.name || domainToName(this.hass.localize, integration.supported_by),\n                config_flow: supportIntegration.config_flow,\n                iot_standards: supportIntegration.iot_standards\n              });\n            } else {\n              showAlertDialog(this, {\n                text: \"Integration not found\",\n                warning: true\n              });\n            }\n          }\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_renderAll\",\n      value: function _renderAll(integrations) {\n        return html`<search-input\n        .hass=${this.hass}\n        dialogInitialFocus=${ifDefined(this._narrow ? undefined : \"\")}\n        .filter=${this._filter}\n        @value-changed=${this._filterChanged}\n        .label=${this.hass.localize(\"ui.panel.config.integrations.search_brand\")}\n        @keypress=${this._maybeSubmit}\n      ></search-input>\n      ${integrations ? html`<mwc-list\n            dialogInitialFocus=${ifDefined(this._narrow ? \"\" : undefined)}\n          >\n            <lit-virtualizer\n              scroller\n              class=\"ha-scrollbar\"\n              style=${styleMap({\n          width: `${this._width}px`,\n          height: this._narrow ? \"calc(100vh - 184px)\" : \"500px\"\n        })}\n              @click=${this._integrationPicked}\n              .items=${integrations}\n              .keyFunction=${this._keyFunction}\n              .renderItem=${this._renderRow}\n            >\n            </lit-virtualizer>\n          </mwc-list>` : html`<div class=\"flex center\">\n            <ha-circular-progress indeterminate></ha-circular-progress>\n          </div>`} `;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_keyFunction\",\n      value() {\n        return integration => integration.domain;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_renderRow\",\n      value() {\n        return integration => {\n          if (!integration) {\n            return nothing;\n          }\n          return html`\n      <ha-integration-list-item\n        brand\n        .hass=${this.hass}\n        .integration=${integration}\n      >\n      </ha-integration-list-item>\n    `;\n        };\n      }\n    }, {\n      kind: \"method\",\n      key: \"_load\",\n      value: async function _load() {\n        const descriptions = await getIntegrationDescriptions(this.hass);\n        for (const integration in descriptions.custom.integration) {\n          if (!Object.prototype.hasOwnProperty.call(descriptions.custom.integration, integration)) {\n            continue;\n          }\n          descriptions.custom.integration[integration].is_built_in = false;\n        }\n        this._integrations = {\n          ...descriptions.core.integration,\n          ...descriptions.custom.integration\n        };\n        for (const integration in descriptions.custom.helper) {\n          if (!Object.prototype.hasOwnProperty.call(descriptions.custom.helper, integration)) {\n            continue;\n          }\n          descriptions.custom.helper[integration].is_built_in = false;\n        }\n        this._helpers = {\n          ...descriptions.core.helper,\n          ...descriptions.custom.helper\n        };\n        this.hass.loadBackendTranslation(\"title\", descriptions.core.translated_name, true);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_filterChanged\",\n      value: async function _filterChanged(e) {\n        this._filter = e.detail.value;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_integrationPicked\",\n      value: function _integrationPicked(ev) {\n        const listItem = ev.target.closest(\"ha-integration-list-item\");\n        if (!listItem) {\n          return;\n        }\n        this._handleIntegrationPicked(listItem.integration);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleIntegrationPicked\",\n      value: async function _handleIntegrationPicked(integration) {\n        if (integration.supported_by) {\n          this._supportedBy(integration);\n          return;\n        }\n        if (integration.is_add) {\n          protocolIntegrationPicked(this, this.hass, integration.domain);\n          this.closeDialog();\n          return;\n        }\n        if (integration.is_helper) {\n          this.closeDialog();\n          navigate(`/config/helpers/add?domain=${integration.domain}`);\n          return;\n        }\n        if (integration.integrations) {\n          let domains = integration.domains || [];\n          if (integration.domain === \"apple\") {\n            // we show discoverd homekit devices in their own brand section, dont show them at apple\n            domains = domains.filter(domain => domain !== \"homekit_controller\");\n          }\n          this._fetchFlowsInProgress(domains);\n          this._pickedBrand = integration.domain;\n          return;\n        }\n        if (PROTOCOL_INTEGRATIONS.includes(integration.domain) && isComponentLoaded(this.hass, integration.domain)) {\n          this._pickedBrand = integration.domain;\n          return;\n        }\n        if (integration.iot_standards) {\n          this._pickedBrand = integration.domain;\n          return;\n        }\n        if (integration.config_flow) {\n          this._createFlow(integration.domain);\n          return;\n        }\n        if (integration.domain === \"cloud\" && isComponentLoaded(this.hass, \"cloud\")) {\n          this.closeDialog();\n          navigate(\"/config/cloud\");\n          return;\n        }\n        if ([\"google_assistant\", \"alexa\"].includes(integration.domain) && isComponentLoaded(this.hass, \"cloud\")) {\n          this.closeDialog();\n          navigate(\"/config/voice-assistants/assistants\");\n          return;\n        }\n        const manifest = await fetchIntegrationManifest(this.hass, integration.domain);\n        showYamlIntegrationDialog(this, {\n          manifest\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_createFlow\",\n      value: async function _createFlow(domain) {\n        var _this$hass$userData;\n        const flowsInProgress = await this._fetchFlowsInProgress([domain]);\n        if (flowsInProgress !== null && flowsInProgress !== void 0 && flowsInProgress.length) {\n          this._pickedBrand = domain;\n          return;\n        }\n        const manifest = await fetchIntegrationManifest(this.hass, domain);\n        this.closeDialog();\n        showConfigFlowDialog(this, {\n          startFlowHandler: domain,\n          showAdvanced: (_this$hass$userData = this.hass.userData) === null || _this$hass$userData === void 0 ? void 0 : _this$hass$userData.showAdvanced,\n          manifest\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_fetchFlowsInProgress\",\n      value: async function _fetchFlowsInProgress(domains) {\n        const flowsInProgress = (await fetchConfigFlowInProgress(this.hass.connection)).filter(flow =>\n        // filter config flows that are not for the integration we are looking for\n        domains.includes(flow.handler) ||\n        // filter config flows of other domains (like homekit) that are for the domains we are looking for\n        \"alternative_domain\" in flow.context && domains.includes(flow.context.alternative_domain));\n        if (flowsInProgress.length) {\n          this._flowsInProgress = flowsInProgress;\n        }\n        return flowsInProgress;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_maybeSubmit\",\n      value: function _maybeSubmit(ev) {\n        if (ev.key !== \"Enter\") {\n          return;\n        }\n        const integrations = this._getIntegrations();\n        if (integrations.length > 0) {\n          this._handleIntegrationPicked(integrations[0]);\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_prevClicked\",\n      value: function _prevClicked() {\n        this._pickedBrand = this._prevPickedBrand;\n        if (!this._prevPickedBrand) {\n          this._flowsInProgress = undefined;\n        }\n        this._prevPickedBrand = undefined;\n      }\n    }, {\n      kind: \"field\",\n      static: true,\n      key: \"styles\",\n      value() {\n        return [haStyleScrollbar, haStyleDialog, css`\n      @media all and (min-width: 550px) {\n        ha-dialog {\n          --mdc-dialog-min-width: 500px;\n        }\n      }\n      ha-dialog {\n        --dialog-content-padding: 0;\n      }\n      search-input {\n        display: block;\n        margin: 16px 16px 0;\n      }\n      .divider {\n        border-bottom-color: var(--divider-color);\n      }\n      h2 {\n        padding-inline-end: 66px;\n        direction: var(--direction);\n      }\n      p {\n        text-align: center;\n        padding: 16px;\n        margin: 0;\n      }\n      p > a {\n        color: var(--primary-color);\n      }\n      .flex.center {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n      }\n      ha-circular-progress {\n        margin: 24px 0;\n      }\n      mwc-list {\n        position: relative;\n      }\n      lit-virtualizer {\n        contain: size layout !important;\n      }\n      ha-integration-list-item {\n        width: 100%;\n      }\n      ha-icon-button-prev {\n        color: var(--secondary-text-color);\n        position: absolute;\n        left: 16px;\n        top: 14px;\n        inset-inline-end: initial;\n        inset-inline-start: 16px;\n        direction: var(--direction);\n      }\n      .mdc-dialog__title {\n        margin: 0;\n        margin-bottom: 8px;\n        margin-left: 48px;\n        margin-inline-start: 48px;\n        margin-inline-end: initial;\n        padding: 24px 24px 0 24px;\n        color: var(--mdc-dialog-heading-ink-color, rgba(0, 0, 0, 0.87));\n        font-size: var(--mdc-typography-headline6-font-size, 1.25rem);\n        line-height: var(--mdc-typography-headline6-line-height, 2rem);\n        font-weight: var(--mdc-typography-headline6-font-weight, 500);\n        letter-spacing: var(\n          --mdc-typography-headline6-letter-spacing,\n          0.0125em\n        );\n        text-decoration: var(\n          --mdc-typography-headline6-text-decoration,\n          inherit\n        );\n        text-transform: var(--mdc-typography-headline6-text-transform, inherit);\n      }\n    `];\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["Fuse","LitElement","css","html","nothing","customElement","state","ifDefined","styleMap","memoizeOne","isComponentLoaded","fireEvent","PROTOCOL_INTEGRATIONS","protocolIntegrationPicked","navigate","caseInsensitiveStringCompare","createCloseHeading","fetchConfigFlowInProgress","domainToName","fetchIntegrationManifest","findIntegration","getIntegrationDescriptions","showConfigFlowDialog","showAlertDialog","showConfirmationDialog","haStyleDialog","haStyleScrollbar","loadVirtualizer","showYamlIntegrationDialog","AddIntegrationDialog","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","key","value","decorators","showDialog","params","loadPromise","_load","_open","_pickedBrand","brand","_initialFilter","initialFilter","_narrow","matchMedia","matches","domain","_createFlow","_this$_integrations","_integrations","integrations","_fetchFlowsInProgress","Object","keys","closeDialog","undefined","_helpers","_prevPickedBrand","_flowsInProgress","_filter","_width","_height","dialog","localName","willUpdate","changedProps","_get","_getPrototypeOf","prototype","call","hasUpdated","has","_querySelector","boundingRect","shadowRoot","querySelector","getBoundingClientRect","width","height","i","h","components","localize","filter","addDeviceRows","includes","map","name","config_flow","is_built_in","is_add","sort","a","b","hass","locale","language","yamlIntegrations","entries","forEach","integration","iot_standards","supported_by","_supportedIntegration","supportedIntegration","push","cloud","iot_class","startsWith","dom","val","domains","_integration$iot_clas","options","weight","isCaseSensitive","minMatchCharLength","Math","min","length","threshold","helpers","_integration$iot_clas2","is_helper","search","result","item","_getIntegrations","_filterIntegrations","config","render","_this$_integrations2","pickedIntegration","_prevClicked","_calculateBrandHeading","_renderIntegration","_renderAll","_this$_flowsInProgres","_this$_flowsInProgres2","minWidth","minHeight","_handleSupportedByEvent","_handleSelectBrandEvent","ev","detail","_supportedBy","supportIntegration","text","supported_brand","flow_domain_name","confirm","_handleIntegrationPicked","warning","_filterChanged","_maybeSubmit","_integrationPicked","_keyFunction","_renderRow","descriptions","custom","hasOwnProperty","core","helper","loadBackendTranslation","translated_name","e","listItem","target","closest","manifest","_this$hass$userData","flowsInProgress","startFlowHandler","showAdvanced","userData","connection","flow","handler","context","alternative_domain","static"],"sources":["/Users/sercanardil/Desktop/frontend/src/panels/config/integrations/dialog-add-integration.ts"],"sourcesContent":["import \"@material/mwc-button\";\nimport \"@material/mwc-list/mwc-list\";\nimport Fuse, { IFuseOptions } from \"fuse.js\";\nimport { HassConfig } from \"home-assistant-js-websocket\";\nimport {\n  LitElement,\n  PropertyValues,\n  TemplateResult,\n  css,\n  html,\n  nothing,\n} from \"lit\";\nimport { customElement, state } from \"lit/decorators\";\nimport { ifDefined } from \"lit/directives/if-defined\";\nimport { styleMap } from \"lit/directives/style-map\";\nimport memoizeOne from \"memoize-one\";\nimport { isComponentLoaded } from \"../../../common/config/is_component_loaded\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport {\n  PROTOCOL_INTEGRATIONS,\n  protocolIntegrationPicked,\n} from \"../../../common/integrations/protocolIntegrationPicked\";\nimport { navigate } from \"../../../common/navigate\";\nimport { caseInsensitiveStringCompare } from \"../../../common/string/compare\";\nimport { LocalizeFunc } from \"../../../common/translations/localize\";\nimport { createCloseHeading } from \"../../../components/ha-dialog\";\nimport \"../../../components/ha-icon-button-prev\";\nimport \"../../../components/search-input\";\nimport { fetchConfigFlowInProgress } from \"../../../data/config_flow\";\nimport { DataEntryFlowProgress } from \"../../../data/data_entry_flow\";\nimport {\n  domainToName,\n  fetchIntegrationManifest,\n} from \"../../../data/integration\";\nimport {\n  Brand,\n  Brands,\n  Integration,\n  Integrations,\n  findIntegration,\n  getIntegrationDescriptions,\n} from \"../../../data/integrations\";\nimport { showConfigFlowDialog } from \"../../../dialogs/config-flow/show-dialog-config-flow\";\nimport {\n  showAlertDialog,\n  showConfirmationDialog,\n} from \"../../../dialogs/generic/show-dialog-box\";\nimport { haStyleDialog, haStyleScrollbar } from \"../../../resources/styles\";\nimport { loadVirtualizer } from \"../../../resources/virtualizer\";\nimport type { HomeAssistant } from \"../../../types\";\nimport \"./ha-domain-integrations\";\nimport \"./ha-integration-list-item\";\nimport {\n  AddIntegrationDialogParams,\n  showYamlIntegrationDialog,\n} from \"./show-add-integration-dialog\";\n\nexport interface IntegrationListItem {\n  name: string;\n  domain: string;\n  config_flow?: boolean;\n  is_helper?: boolean;\n  integrations?: string[];\n  domains?: string[];\n  iot_standards?: string[];\n  supported_by?: string;\n  cloud?: boolean;\n  is_built_in?: boolean;\n  is_add?: boolean;\n}\n\n@customElement(\"dialog-add-integration\")\nclass AddIntegrationDialog extends LitElement {\n  public hass!: HomeAssistant;\n\n  @state() private _integrations?: Brands;\n\n  @state() private _helpers?: Integrations;\n\n  @state() private _initialFilter?: string;\n\n  @state() private _filter?: string;\n\n  @state() private _pickedBrand?: string;\n\n  @state() private _prevPickedBrand?: string;\n\n  @state() private _flowsInProgress?: DataEntryFlowProgress[];\n\n  @state() private _open = false;\n\n  @state() private _narrow = false;\n\n  private _width?: number;\n\n  private _height?: number;\n\n  public async showDialog(params?: AddIntegrationDialogParams): Promise<void> {\n    const loadPromise = this._load();\n    this._open = true;\n    this._pickedBrand = params?.brand;\n    this._initialFilter = params?.initialFilter;\n    this._narrow = matchMedia(\n      \"all and (max-width: 450px), all and (max-height: 500px)\"\n    ).matches;\n    if (params?.domain) {\n      this._createFlow(params.domain);\n    }\n    if (params?.brand) {\n      await loadPromise;\n      const brand = this._integrations?.[params.brand];\n      if (brand && \"integrations\" in brand && brand.integrations) {\n        this._fetchFlowsInProgress(Object.keys(brand.integrations));\n      }\n    }\n  }\n\n  public closeDialog() {\n    this._open = false;\n    this._integrations = undefined;\n    this._helpers = undefined;\n    this._pickedBrand = undefined;\n    this._prevPickedBrand = undefined;\n    this._flowsInProgress = undefined;\n    this._filter = undefined;\n    this._width = undefined;\n    this._height = undefined;\n    fireEvent(this, \"dialog-closed\", { dialog: this.localName });\n  }\n\n  public willUpdate(changedProps: PropertyValues): void {\n    super.willUpdate(changedProps);\n\n    if (!this.hasUpdated) {\n      loadVirtualizer();\n    }\n\n    if (this._filter === undefined && this._initialFilter !== undefined) {\n      this._filter = this._initialFilter;\n    }\n    if (this._initialFilter !== undefined && this._filter === \"\") {\n      this._initialFilter = undefined;\n      this._filter = undefined;\n      this._width = undefined;\n      this._height = undefined;\n    } else if (\n      this.hasUpdated &&\n      changedProps.has(\"_filter\") &&\n      !changedProps.has(\"_open\") &&\n      (!this._width || !this._height)\n    ) {\n      // Store the width and height so that when we search, box doesn't jump\n      const boundingRect =\n        this.shadowRoot!.querySelector(\"mwc-list\")?.getBoundingClientRect();\n      this._width = boundingRect?.width;\n      this._height = boundingRect?.height;\n    }\n  }\n\n  private _filterIntegrations = memoizeOne(\n    (\n      i: Brands,\n      h: Integrations,\n      components: HassConfig[\"components\"],\n      localize: LocalizeFunc,\n      filter?: string\n    ): IntegrationListItem[] => {\n      const addDeviceRows: IntegrationListItem[] = PROTOCOL_INTEGRATIONS.filter(\n        (domain) => components.includes(domain)\n      )\n        .map((domain) => ({\n          name: localize(`ui.panel.config.integrations.add_${domain}_device`),\n          domain,\n          config_flow: true,\n          is_built_in: true,\n          is_add: true,\n        }))\n        .sort((a, b) =>\n          caseInsensitiveStringCompare(\n            a.name,\n            b.name,\n            this.hass.locale.language\n          )\n        );\n\n      const integrations: IntegrationListItem[] = [];\n      const yamlIntegrations: IntegrationListItem[] = [];\n\n      Object.entries(i).forEach(([domain, integration]) => {\n        if (\n          \"integration_type\" in integration &&\n          (integration.config_flow ||\n            integration.iot_standards ||\n            integration.supported_by)\n        ) {\n          // Integration with a config flow, iot standard, or supported by\n          const supportedIntegration = integration.supported_by\n            ? findIntegration(this._integrations, integration.supported_by)\n            : integration;\n          if (!supportedIntegration) {\n            return;\n          }\n          integrations.push({\n            domain,\n            name: integration.name || domainToName(localize, domain),\n            config_flow: supportedIntegration.config_flow,\n            iot_standards: supportedIntegration.iot_standards,\n            supported_by: integration.supported_by,\n            is_built_in: supportedIntegration.is_built_in !== false,\n            cloud: supportedIntegration.iot_class?.startsWith(\"cloud_\"),\n          });\n        } else if (\n          !(\"integration_type\" in integration) &&\n          (\"iot_standards\" in integration || \"integrations\" in integration)\n        ) {\n          // Brand\n          integrations.push({\n            domain,\n            name: integration.name || domainToName(localize, domain),\n            iot_standards: integration.iot_standards,\n            integrations: integration.integrations\n              ? Object.entries(integration.integrations).map(\n                  ([dom, val]) => val.name || domainToName(localize, dom)\n                )\n              : undefined,\n            domains: integration.integrations\n              ? Object.keys(integration.integrations)\n              : undefined,\n            is_built_in: integration.is_built_in !== false,\n          });\n        } else if (filter && \"integration_type\" in integration) {\n          // Integration without a config flow\n          yamlIntegrations.push({\n            domain,\n            name: integration.name || domainToName(localize, domain),\n            config_flow: integration.config_flow,\n            is_built_in: integration.is_built_in !== false,\n            cloud: integration.iot_class?.startsWith(\"cloud_\"),\n          });\n        }\n      });\n\n      if (filter) {\n        const options: IFuseOptions<IntegrationListItem> = {\n          keys: [\n            { name: \"name\", weight: 5 },\n            { name: \"domain\", weight: 5 },\n            { name: \"integrations\", weight: 2 },\n            \"supported_by\",\n            \"iot_standards\",\n          ],\n          isCaseSensitive: false,\n          minMatchCharLength: Math.min(filter.length, 2),\n          threshold: 0.2,\n        };\n        const helpers = Object.entries(h).map(([domain, integration]) => ({\n          domain,\n          name: integration.name || domainToName(localize, domain),\n          config_flow: integration.config_flow,\n          is_helper: true,\n          is_built_in: integration.is_built_in !== false,\n          cloud: integration.iot_class?.startsWith(\"cloud_\"),\n        }));\n        return [\n          ...new Fuse(integrations, options)\n            .search(filter)\n            .map((result) => result.item),\n          ...new Fuse(yamlIntegrations, options)\n            .search(filter)\n            .map((result) => result.item),\n          ...new Fuse(helpers, options)\n            .search(filter)\n            .map((result) => result.item),\n        ];\n      }\n      return [\n        ...addDeviceRows,\n        ...integrations.sort((a, b) =>\n          caseInsensitiveStringCompare(\n            a.name || \"\",\n            b.name || \"\",\n            this.hass.locale.language\n          )\n        ),\n      ];\n    }\n  );\n\n  private _getIntegrations() {\n    return this._filterIntegrations(\n      this._integrations!,\n      this._helpers!,\n      this.hass.config.components,\n      this.hass.localize,\n      this._filter\n    );\n  }\n\n  protected render() {\n    if (!this._open) {\n      return nothing;\n    }\n    const integrations = this._integrations\n      ? this._getIntegrations()\n      : undefined;\n\n    const pickedIntegration = this._pickedBrand\n      ? this._integrations?.[this._pickedBrand] ||\n        findIntegration(this._integrations, this._pickedBrand)\n      : undefined;\n\n    return html`<ha-dialog\n      open\n      @closed=${this.closeDialog}\n      scrimClickAction\n      escapeKeyAction\n      hideActions\n      .heading=${createCloseHeading(\n        this.hass,\n        this.hass.localize(\"ui.panel.config.integrations.new\")\n      )}\n    >\n      ${this._pickedBrand && (!this._integrations || pickedIntegration)\n        ? html`<div slot=\"heading\">\n              <ha-icon-button-prev\n                @click=${this._prevClicked}\n              ></ha-icon-button-prev>\n              <h2 class=\"mdc-dialog__title\">\n                ${this._calculateBrandHeading(pickedIntegration)}\n              </h2>\n            </div>\n            ${this._renderIntegration(pickedIntegration)}`\n        : this._renderAll(integrations)}\n    </ha-dialog>`;\n  }\n\n  private _calculateBrandHeading(integration: Brand | Integration | undefined) {\n    if (\n      integration?.iot_standards &&\n      !(\"integrations\" in integration) &&\n      !this._flowsInProgress?.length\n    ) {\n      return this.hass.localize(\n        \"ui.panel.config.integrations.what_device_type\"\n      );\n    }\n    if (\n      integration &&\n      !integration?.iot_standards &&\n      !(\"integrations\" in integration) &&\n      this._flowsInProgress?.length\n    ) {\n      return this.hass.localize(\n        \"ui.panel.config.integrations.confirm_add_discovered\"\n      );\n    }\n    return this.hass.localize(\"ui.panel.config.integrations.what_to_add\");\n  }\n\n  private _renderIntegration(\n    integration: Brand | Integration | undefined\n  ): TemplateResult {\n    return html`<ha-domain-integrations\n      .hass=${this.hass}\n      .domain=${this._pickedBrand}\n      .integration=${integration}\n      .flowsInProgress=${this._flowsInProgress}\n      style=${styleMap({\n        minWidth: `${this._width}px`,\n        minHeight: `581px`,\n      })}\n      @close-dialog=${this.closeDialog}\n      @supported-by=${this._handleSupportedByEvent}\n      @select-brand=${this._handleSelectBrandEvent}\n    ></ha-domain-integrations>`;\n  }\n\n  private _handleSelectBrandEvent(ev: CustomEvent) {\n    this._prevPickedBrand = this._pickedBrand;\n    this._pickedBrand = ev.detail.brand;\n  }\n\n  private _handleSupportedByEvent(ev: CustomEvent) {\n    this._supportedBy(ev.detail.integration);\n  }\n\n  private _supportedBy(integration) {\n    const supportIntegration = findIntegration(\n      this._integrations,\n      integration.supported_by\n    );\n    showConfirmationDialog(this, {\n      text: this.hass.localize(\n        \"ui.panel.config.integrations.config_flow.supported_brand_flow\",\n        {\n          supported_brand:\n            integration.name ||\n            domainToName(this.hass.localize, integration.domain),\n          flow_domain_name:\n            supportIntegration?.name ||\n            domainToName(this.hass.localize, integration.supported_by),\n        }\n      ),\n      confirm: () => {\n        this.closeDialog();\n        if (PROTOCOL_INTEGRATIONS.includes(integration.supported_by)) {\n          protocolIntegrationPicked(this, this.hass, integration.supported_by);\n          return;\n        }\n        if (supportIntegration) {\n          this._handleIntegrationPicked({\n            domain: integration.supported_by,\n            name:\n              supportIntegration.name ||\n              domainToName(this.hass.localize, integration.supported_by),\n            config_flow: supportIntegration.config_flow,\n            iot_standards: supportIntegration.iot_standards,\n          });\n        } else {\n          showAlertDialog(this, {\n            text: \"Integration not found\",\n            warning: true,\n          });\n        }\n      },\n    });\n  }\n\n  private _renderAll(integrations?: IntegrationListItem[]): TemplateResult {\n    return html`<search-input\n        .hass=${this.hass}\n        dialogInitialFocus=${ifDefined(this._narrow ? undefined : \"\")}\n        .filter=${this._filter}\n        @value-changed=${this._filterChanged}\n        .label=${this.hass.localize(\n          \"ui.panel.config.integrations.search_brand\"\n        )}\n        @keypress=${this._maybeSubmit}\n      ></search-input>\n      ${integrations\n        ? html`<mwc-list\n            dialogInitialFocus=${ifDefined(this._narrow ? \"\" : undefined)}\n          >\n            <lit-virtualizer\n              scroller\n              class=\"ha-scrollbar\"\n              style=${styleMap({\n                width: `${this._width}px`,\n                height: this._narrow ? \"calc(100vh - 184px)\" : \"500px\",\n              })}\n              @click=${this._integrationPicked}\n              .items=${integrations}\n              .keyFunction=${this._keyFunction}\n              .renderItem=${this._renderRow}\n            >\n            </lit-virtualizer>\n          </mwc-list>`\n        : html`<div class=\"flex center\">\n            <ha-circular-progress indeterminate></ha-circular-progress>\n          </div>`} `;\n  }\n\n  private _keyFunction = (integration: IntegrationListItem) =>\n    integration.domain;\n\n  private _renderRow = (integration: IntegrationListItem) => {\n    if (!integration) {\n      return nothing;\n    }\n    return html`\n      <ha-integration-list-item\n        brand\n        .hass=${this.hass}\n        .integration=${integration}\n      >\n      </ha-integration-list-item>\n    `;\n  };\n\n  private async _load() {\n    const descriptions = await getIntegrationDescriptions(this.hass);\n    for (const integration in descriptions.custom.integration) {\n      if (\n        !Object.prototype.hasOwnProperty.call(\n          descriptions.custom.integration,\n          integration\n        )\n      ) {\n        continue;\n      }\n      descriptions.custom.integration[integration].is_built_in = false;\n    }\n    this._integrations = {\n      ...descriptions.core.integration,\n      ...descriptions.custom.integration,\n    };\n    for (const integration in descriptions.custom.helper) {\n      if (\n        !Object.prototype.hasOwnProperty.call(\n          descriptions.custom.helper,\n          integration\n        )\n      ) {\n        continue;\n      }\n      descriptions.custom.helper[integration].is_built_in = false;\n    }\n    this._helpers = {\n      ...descriptions.core.helper,\n      ...descriptions.custom.helper,\n    };\n    this.hass.loadBackendTranslation(\n      \"title\",\n      descriptions.core.translated_name,\n      true\n    );\n  }\n\n  private async _filterChanged(e) {\n    this._filter = e.detail.value;\n  }\n\n  private _integrationPicked(ev) {\n    const listItem = ev.target.closest(\"ha-integration-list-item\");\n    if (!listItem) {\n      return;\n    }\n    this._handleIntegrationPicked(listItem.integration);\n  }\n\n  private async _handleIntegrationPicked(integration: IntegrationListItem) {\n    if (integration.supported_by) {\n      this._supportedBy(integration);\n      return;\n    }\n\n    if (integration.is_add) {\n      protocolIntegrationPicked(this, this.hass, integration.domain);\n      this.closeDialog();\n      return;\n    }\n\n    if (integration.is_helper) {\n      this.closeDialog();\n      navigate(`/config/helpers/add?domain=${integration.domain}`);\n      return;\n    }\n\n    if (integration.integrations) {\n      let domains = integration.domains || [];\n      if (integration.domain === \"apple\") {\n        // we show discoverd homekit devices in their own brand section, dont show them at apple\n        domains = domains.filter((domain) => domain !== \"homekit_controller\");\n      }\n      this._fetchFlowsInProgress(domains);\n      this._pickedBrand = integration.domain;\n      return;\n    }\n\n    if (\n      (PROTOCOL_INTEGRATIONS as ReadonlyArray<string>).includes(\n        integration.domain\n      ) &&\n      isComponentLoaded(this.hass, integration.domain)\n    ) {\n      this._pickedBrand = integration.domain;\n      return;\n    }\n\n    if (integration.iot_standards) {\n      this._pickedBrand = integration.domain;\n      return;\n    }\n\n    if (integration.config_flow) {\n      this._createFlow(integration.domain);\n      return;\n    }\n\n    if (\n      integration.domain === \"cloud\" &&\n      isComponentLoaded(this.hass, \"cloud\")\n    ) {\n      this.closeDialog();\n      navigate(\"/config/cloud\");\n      return;\n    }\n\n    if (\n      [\"google_assistant\", \"alexa\"].includes(integration.domain) &&\n      isComponentLoaded(this.hass, \"cloud\")\n    ) {\n      this.closeDialog();\n      navigate(\"/config/voice-assistants/assistants\");\n      return;\n    }\n\n    const manifest = await fetchIntegrationManifest(\n      this.hass,\n      integration.domain\n    );\n    showYamlIntegrationDialog(this, { manifest });\n  }\n\n  private async _createFlow(domain: string) {\n    const flowsInProgress = await this._fetchFlowsInProgress([domain]);\n\n    if (flowsInProgress?.length) {\n      this._pickedBrand = domain;\n      return;\n    }\n\n    const manifest = await fetchIntegrationManifest(this.hass, domain);\n\n    this.closeDialog();\n\n    showConfigFlowDialog(this, {\n      startFlowHandler: domain,\n      showAdvanced: this.hass.userData?.showAdvanced,\n      manifest,\n    });\n  }\n\n  private async _fetchFlowsInProgress(domains: string[]) {\n    const flowsInProgress = (\n      await fetchConfigFlowInProgress(this.hass.connection)\n    ).filter(\n      (flow) =>\n        // filter config flows that are not for the integration we are looking for\n        domains.includes(flow.handler) ||\n        // filter config flows of other domains (like homekit) that are for the domains we are looking for\n        (\"alternative_domain\" in flow.context &&\n          domains.includes(flow.context.alternative_domain))\n    );\n\n    if (flowsInProgress.length) {\n      this._flowsInProgress = flowsInProgress;\n    }\n    return flowsInProgress;\n  }\n\n  private _maybeSubmit(ev: KeyboardEvent) {\n    if (ev.key !== \"Enter\") {\n      return;\n    }\n\n    const integrations = this._getIntegrations();\n\n    if (integrations.length > 0) {\n      this._handleIntegrationPicked(integrations[0]);\n    }\n  }\n\n  private _prevClicked() {\n    this._pickedBrand = this._prevPickedBrand;\n    if (!this._prevPickedBrand) {\n      this._flowsInProgress = undefined;\n    }\n    this._prevPickedBrand = undefined;\n  }\n\n  static styles = [\n    haStyleScrollbar,\n    haStyleDialog,\n    css`\n      @media all and (min-width: 550px) {\n        ha-dialog {\n          --mdc-dialog-min-width: 500px;\n        }\n      }\n      ha-dialog {\n        --dialog-content-padding: 0;\n      }\n      search-input {\n        display: block;\n        margin: 16px 16px 0;\n      }\n      .divider {\n        border-bottom-color: var(--divider-color);\n      }\n      h2 {\n        padding-inline-end: 66px;\n        direction: var(--direction);\n      }\n      p {\n        text-align: center;\n        padding: 16px;\n        margin: 0;\n      }\n      p > a {\n        color: var(--primary-color);\n      }\n      .flex.center {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n      }\n      ha-circular-progress {\n        margin: 24px 0;\n      }\n      mwc-list {\n        position: relative;\n      }\n      lit-virtualizer {\n        contain: size layout !important;\n      }\n      ha-integration-list-item {\n        width: 100%;\n      }\n      ha-icon-button-prev {\n        color: var(--secondary-text-color);\n        position: absolute;\n        left: 16px;\n        top: 14px;\n        inset-inline-end: initial;\n        inset-inline-start: 16px;\n        direction: var(--direction);\n      }\n      .mdc-dialog__title {\n        margin: 0;\n        margin-bottom: 8px;\n        margin-left: 48px;\n        margin-inline-start: 48px;\n        margin-inline-end: initial;\n        padding: 24px 24px 0 24px;\n        color: var(--mdc-dialog-heading-ink-color, rgba(0, 0, 0, 0.87));\n        font-size: var(--mdc-typography-headline6-font-size, 1.25rem);\n        line-height: var(--mdc-typography-headline6-line-height, 2rem);\n        font-weight: var(--mdc-typography-headline6-font-weight, 500);\n        letter-spacing: var(\n          --mdc-typography-headline6-letter-spacing,\n          0.0125em\n        );\n        text-decoration: var(\n          --mdc-typography-headline6-text-decoration,\n          inherit\n        );\n        text-transform: var(--mdc-typography-headline6-text-transform, inherit);\n      }\n    `,\n  ];\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"dialog-add-integration\": AddIntegrationDialog;\n  }\n}\n"],"mappings":"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AED,SAAA0H,aAAqBX,EAAiB,EAAE;QACtC,IAAIA,EAAE,CAAChH,GAAG,KAAK,OAAO,EAAE;UACtB;QACF;QAEA,MAAMmB,YAAY,GAAG,IAAI,CAAC6E,gBAAgB,CAAC,CAAC;QAE5C,IAAI7E,YAAY,CAACqE,MAAM,GAAG,CAAC,EAAE;UAC3B,IAAI,CAACgC,wBAAwB,CAACrG,YAAY,CAAC,CAAC,CAAC,CAAC;QAChD;MACF;IAAC;MAAApB,IAAA;MAAAC,GAAA;MAAAC,KAAA,EAED,SAAAqG,aAAA,EAAuB;QACrB,IAAI,CAAC9F,YAAY,GAAG,IAAI,CAACkB,gBAAgB;QACzC,IAAI,CAAC,IAAI,CAACA,gBAAgB,EAAE;UAC1B,IAAI,CAACC,gBAAgB,GAAGH,SAAS;QACnC;QACA,IAAI,CAACE,gBAAgB,GAAGF,SAAS;MACnC;IAAC;MAAAzB,IAAA;MAAAsJ,MAAA;MAAArJ,GAAA;MAAAC,MAAA;QAAA,OAEe,CACdb,gBAAgB,EAChBD,aAAa,EACbvB,GAAI;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,CACF;MAAA;IAAA;EAAA;AAAA,GA5pBgCD,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}