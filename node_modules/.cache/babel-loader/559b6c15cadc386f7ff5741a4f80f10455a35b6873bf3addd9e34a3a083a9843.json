{"ast":null,"code":"import { formatDateTimeWithSeconds } from \"../../../common/datetime/format_date_time\";\nimport { formatTimeWithSeconds } from \"../../../common/datetime/format_time\";\nexport var formatSystemLogTime = function formatSystemLogTime(date, locale, config) {\n  var today = new Date().setHours(0, 0, 0, 0);\n  var dateTime = new Date(date * 1000);\n  var dateTimeDay = new Date(date * 1000).setHours(0, 0, 0, 0);\n  return dateTimeDay < today ? formatDateTimeWithSeconds(dateTime, locale, config) : formatTimeWithSeconds(dateTime, locale, config);\n};","map":{"version":3,"names":["formatDateTimeWithSeconds","formatTimeWithSeconds","formatSystemLogTime","date","locale","config","today","Date","setHours","dateTime","dateTimeDay"],"sources":["/workspaces/frontend/src/panels/config/logs/util.ts"],"sourcesContent":["import { HassConfig } from \"home-assistant-js-websocket\";\nimport { formatDateTimeWithSeconds } from \"../../../common/datetime/format_date_time\";\nimport { formatTimeWithSeconds } from \"../../../common/datetime/format_time\";\nimport { FrontendLocaleData } from \"../../../data/translation\";\n\nexport const formatSystemLogTime = (\n  date,\n  locale: FrontendLocaleData,\n  config: HassConfig\n) => {\n  const today = new Date().setHours(0, 0, 0, 0);\n  const dateTime = new Date(date * 1000);\n  const dateTimeDay = new Date(date * 1000).setHours(0, 0, 0, 0);\n\n  return dateTimeDay < today\n    ? formatDateTimeWithSeconds(dateTime, locale, config)\n    : formatTimeWithSeconds(dateTime, locale, config);\n};\n"],"mappings":"AACA,SAASA,yBAAyB,QAAQ,2CAA2C;AACrF,SAASC,qBAAqB,QAAQ,sCAAsC;AAG5E,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAC9BC,IAAI,EACJC,MAA0B,EAC1BC,MAAkB,EACf;EACH,IAAMC,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAC7C,IAAMC,QAAQ,GAAG,IAAIF,IAAI,CAACJ,IAAI,GAAG,IAAI,CAAC;EACtC,IAAMO,WAAW,GAAG,IAAIH,IAAI,CAACJ,IAAI,GAAG,IAAI,CAAC,CAACK,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAE9D,OAAOE,WAAW,GAAGJ,KAAK,GACtBN,yBAAyB,CAACS,QAAQ,EAAEL,MAAM,EAAEC,MAAM,CAAC,GACnDJ,qBAAqB,CAACQ,QAAQ,EAAEL,MAAM,EAAEC,MAAM,CAAC;AACrD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}