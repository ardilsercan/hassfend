{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/helpers/regeneratorRuntime\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _createForOfIteratorHelper from \"@babel/runtime/helpers/createForOfIteratorHelper\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4;\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nvar mdiPlus = \"M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z\";\nimport { css, html, LitElement } from \"lit\";\nimport { property, state } from \"lit/decorators\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport { nextRender } from \"../../../common/util/render-status\";\nimport \"../../../components/entity/ha-state-label-badge\";\nimport \"../../../components/ha-svg-icon\";\nimport { computeCardSize } from \"../common/compute-card-size\";\n// Find column with < 5 size, else smallest column\nvar getColumnIndex = function getColumnIndex(columnSizes, size) {\n  var minIndex = 0;\n  for (var i = 0; i < columnSizes.length; i++) {\n    if (columnSizes[i] < 5) {\n      minIndex = i;\n      break;\n    }\n    if (columnSizes[i] < columnSizes[minIndex]) {\n      minIndex = i;\n    }\n  }\n  columnSizes[minIndex] += size;\n  return minIndex;\n};\nexport var MasonryView = _decorate(null, function (_initialize, _LitElement) {\n  var MasonryView = /*#__PURE__*/function (_LitElement2) {\n    _inherits(MasonryView, _LitElement2);\n    function MasonryView() {\n      var _this;\n      _classCallCheck(this, MasonryView);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, MasonryView, [].concat(args));\n      _initialize(_assertThisInitialized(_this));\n      return _this;\n    }\n    return _createClass(MasonryView);\n  }(_LitElement);\n  return {\n    F: MasonryView,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"lovelace\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"narrow\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Number\n      })],\n      key: \"index\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"isStrategy\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"cards\",\n      value: function value() {\n        return [];\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"badges\",\n      value: function value() {\n        return [];\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_columns\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_createColumnsIteration\",\n      value: function value() {\n        return 0;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_mqls\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_mqlListenerRef\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"connectedCallback\",\n      value: function connectedCallback() {\n        _get(_getPrototypeOf(MasonryView.prototype), \"connectedCallback\", this).call(this);\n        this._initMqls();\n      }\n    }, {\n      kind: \"method\",\n      key: \"disconnectedCallback\",\n      value: function disconnectedCallback() {\n        var _this$_mqls,\n          _this2 = this;\n        _get(_getPrototypeOf(MasonryView.prototype), \"disconnectedCallback\", this).call(this);\n        (_this$_mqls = this._mqls) === null || _this$_mqls === void 0 || _this$_mqls.forEach(function (mql) {\n          mql.removeListener(_this2._mqlListenerRef);\n        });\n        this._mqlListenerRef = undefined;\n        this._mqls = undefined;\n      }\n    }, {\n      kind: \"method\",\n      key: \"setConfig\",\n      value: function setConfig(_config) {}\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var _this$lovelace, _this$lovelace2;\n        return html(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      \", \"\\n      <div\\n        id=\\\"columns\\\"\\n        class=\", \"\\n      ></div>\\n      \", \"\\n    \"])), this.badges.length > 0 ? html(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"<div class=\\\"badges\\\">\", \"</div>\"])), this.badges) : \"\", (_this$lovelace = this.lovelace) !== null && _this$lovelace !== void 0 && _this$lovelace.editMode ? \"edit-mode\" : \"\", (_this$lovelace2 = this.lovelace) !== null && _this$lovelace2 !== void 0 && _this$lovelace2.editMode ? html(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n            <ha-fab\\n              .label=\", \"\\n              extended\\n              @click=\", \"\\n            >\\n              <ha-svg-icon slot=\\\"icon\\\" .path=\", \"></ha-svg-icon>\\n            </ha-fab>\\n          \"])), this.hass.localize(\"ui.panel.lovelace.editor.edit_card.add\"), this._addCard, mdiPlus) : \"\");\n      }\n    }, {\n      kind: \"method\",\n      key: \"_initMqls\",\n      value: function _initMqls() {\n        var _this3 = this;\n        this._mqls = [300, 600, 900, 1200].map(function (width) {\n          var mql = window.matchMedia(\"(min-width: \".concat(width, \"px)\"));\n          if (!_this3._mqlListenerRef) {\n            _this3._mqlListenerRef = _this3._updateColumns.bind(_this3);\n          }\n          mql.addListener(_this3._mqlListenerRef);\n          return mql;\n        });\n      }\n    }, {\n      kind: \"get\",\n      key: \"mqls\",\n      value: function mqls() {\n        if (!this._mqls) {\n          this._initMqls();\n        }\n        return this._mqls;\n      }\n    }, {\n      kind: \"method\",\n      key: \"willUpdate\",\n      value: function willUpdate(changedProperties) {\n        var _this$lovelace3;\n        _get(_getPrototypeOf(MasonryView.prototype), \"willUpdate\", this).call(this, changedProperties);\n        if ((_this$lovelace3 = this.lovelace) !== null && _this$lovelace3 !== void 0 && _this$lovelace3.editMode) {\n          import(\"./default-view-editable\");\n        }\n        if (changedProperties.has(\"hass\")) {\n          var oldHass = changedProperties.get(\"hass\");\n          if (this.hass.dockedSidebar !== (oldHass === null || oldHass === void 0 ? void 0 : oldHass.dockedSidebar)) {\n            this._updateColumns();\n            return;\n          }\n        }\n        if (changedProperties.has(\"narrow\")) {\n          this._updateColumns();\n          return;\n        }\n        var oldLovelace = changedProperties.get(\"lovelace\");\n        if (changedProperties.has(\"cards\") || changedProperties.has(\"lovelace\") && oldLovelace && (oldLovelace.config !== this.lovelace.config || oldLovelace.editMode !== this.lovelace.editMode)) {\n          this._createColumns();\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_addCard\",\n      value: function _addCard() {\n        fireEvent(this, \"ll-create-card\");\n      }\n    }, {\n      kind: \"method\",\n      key: \"_createRootElement\",\n      value: function _createRootElement(columns) {\n        var root = this.shadowRoot.getElementById(\"columns\");\n\n        // Remove old columns\n        while (root.lastChild) {\n          root.removeChild(root.lastChild);\n        }\n        columns.forEach(function (column) {\n          return root.appendChild(column);\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_createColumns\",\n      value: function () {\n        var _createColumns2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n          var _this4 = this;\n          var iteration, columnSizes, columnElements, i, columnEl, tillNextRender, start, _iterator, _step, _step$value, index, el, waitProm, cardSizeProm, _yield$Promise$all, _yield$Promise$all2, cardSize;\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                if (this._columns) {\n                  _context.next = 2;\n                  break;\n                }\n                return _context.abrupt(\"return\");\n              case 2:\n                this._createColumnsIteration++;\n                iteration = this._createColumnsIteration; // Track the total height of cards in a columns\n                columnSizes = [];\n                columnElements = []; // Add columns to DOM, limit number of columns to the number of cards\n                for (i = 0; i < Math.min(this._columns, this.cards.length); i++) {\n                  columnEl = document.createElement(\"div\");\n                  columnEl.classList.add(\"column\");\n                  columnSizes.push(0);\n                  columnElements.push(columnEl);\n                }\n                if (!this.hasUpdated) {\n                  this.updateComplete.then(function () {\n                    _this4._createRootElement(columnElements);\n                  });\n                } else {\n                  this._createRootElement(columnElements);\n                }\n                // Calculate the size of every card and determine in what column it should go\n                _iterator = _createForOfIteratorHelper(this.cards.entries());\n                _context.prev = 9;\n                _iterator.s();\n              case 11:\n                if ((_step = _iterator.n()).done) {\n                  _context.next = 27;\n                  break;\n                }\n                _step$value = _slicedToArray(_step.value, 2), index = _step$value[0], el = _step$value[1];\n                if (tillNextRender === undefined) {\n                  // eslint-disable-next-line @typescript-eslint/no-loop-func\n                  tillNextRender = nextRender().then(function () {\n                    tillNextRender = undefined;\n                    start = undefined;\n                  });\n                }\n                waitProm = void 0; // We should work for max 16ms (60fps) before allowing a frame to render\n                if (start === undefined) {\n                  // Save the time we start for this frame, no need to wait yet\n                  start = new Date();\n                } else if (new Date().getTime() - start.getTime() > 16) {\n                  // We are working too long, we will prevent a render, wait to allow for a render\n                  waitProm = tillNextRender;\n                }\n                cardSizeProm = computeCardSize(el); // @ts-ignore\n                // eslint-disable-next-line no-await-in-loop\n                _context.next = 19;\n                return Promise.all([cardSizeProm, waitProm]);\n              case 19:\n                _yield$Promise$all = _context.sent;\n                _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 1);\n                cardSize = _yield$Promise$all2[0];\n                if (!(iteration !== this._createColumnsIteration)) {\n                  _context.next = 24;\n                  break;\n                }\n                return _context.abrupt(\"return\");\n              case 24:\n                // Calculate in wich column the card should go based on the size and the cards already in there\n                this._addCardToColumn(columnElements[getColumnIndex(columnSizes, cardSize)], index, this.lovelace.editMode);\n              case 25:\n                _context.next = 11;\n                break;\n              case 27:\n                _context.next = 32;\n                break;\n              case 29:\n                _context.prev = 29;\n                _context.t0 = _context[\"catch\"](9);\n                _iterator.e(_context.t0);\n              case 32:\n                _context.prev = 32;\n                _iterator.f();\n                return _context.finish(32);\n              case 35:\n                // Remove empty columns\n                columnElements.forEach(function (column) {\n                  if (!column.lastChild) {\n                    column.parentElement.removeChild(column);\n                  }\n                });\n              case 36:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee, this, [[9, 29, 32, 35]]);\n        }));\n        function _createColumns() {\n          return _createColumns2.apply(this, arguments);\n        }\n        return _createColumns;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"_addCardToColumn\",\n      value: function _addCardToColumn(columnEl, index, editMode) {\n        var card = this.cards[index];\n        if (!editMode || this.isStrategy) {\n          card.editMode = false;\n          columnEl.appendChild(card);\n        } else {\n          var wrapper = document.createElement(\"hui-card-options\");\n          wrapper.hass = this.hass;\n          wrapper.lovelace = this.lovelace;\n          wrapper.path = [this.index, index];\n          card.editMode = true;\n          wrapper.appendChild(card);\n          columnEl.appendChild(wrapper);\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_updateColumns\",\n      value: function _updateColumns() {\n        var matchColumns = this.mqls.reduce(function (cols, mql) {\n          return cols + Number(mql.matches);\n        }, 0);\n        // Do -1 column if the menu is docked and open\n        var newColumns = Math.max(1, matchColumns - Number(!this.narrow && this.hass.dockedSidebar === \"docked\"));\n        if (newColumns === this._columns) {\n          return;\n        }\n        this._columns = newColumns;\n        this._createColumns();\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n      :host {\\n        display: block;\\n        padding-top: 4px;\\n      }\\n\\n      .badges {\\n        margin: 8px 16px;\\n        font-size: 85%;\\n        text-align: center;\\n      }\\n\\n      #columns {\\n        display: flex;\\n        flex-direction: row;\\n        justify-content: center;\\n        margin-left: 4px;\\n        margin-right: 4px;\\n      }\\n\\n      #columns.edit-mode {\\n        margin-bottom: 72px;\\n      }\\n\\n      .column {\\n        flex: 1 0 0;\\n        max-width: 500px;\\n        min-width: 0;\\n      }\\n\\n      /* Fix for safari */\\n      .column:has(> *) {\\n        flex-grow: 1;\\n      }\\n\\n      .column:not(:has(> *:not([hidden]))) {\\n        flex-grow: 0;\\n      }\\n\\n      .column > *:not([hidden]) {\\n        display: block;\\n        margin: var(--masonry-view-card-margin, 4px 4px 8px);\\n      }\\n\\n      ha-fab {\\n        position: fixed;\\n        right: calc(16px + env(safe-area-inset-right));\\n        bottom: calc(16px + env(safe-area-inset-bottom));\\n        inset-inline-end: calc(16px + env(safe-area-inset-right));\\n        inset-inline-start: initial;\\n        z-index: 1;\\n      }\\n\\n      @media (max-width: 500px) {\\n        .column > * {\\n          margin-left: 0;\\n          margin-right: 0;\\n        }\\n      }\\n\\n      @media (max-width: 599px) {\\n        .column {\\n          max-width: 600px;\\n        }\\n      }\\n    \"])));\n      }\n    }]\n  };\n}, LitElement);\ncustomElements.define(\"hui-masonry-view\", MasonryView);","map":{"version":3,"names":["css","html","LitElement","property","state","fireEvent","nextRender","computeCardSize","getColumnIndex","columnSizes","size","minIndex","i","length","MasonryView","_decorate","_initialize","_LitElement","_LitElement2","_inherits","_this","_classCallCheck","_len","arguments","args","Array","_key","_callSuper","concat","_assertThisInitialized","_createClass","F","d","kind","decorators","attribute","key","value","type","Boolean","Number","connectedCallback","_get","_getPrototypeOf","prototype","call","_initMqls","disconnectedCallback","_this$_mqls","_this2","_mqls","forEach","mql","removeListener","_mqlListenerRef","undefined","setConfig","_config","render","_this$lovelace","_this$lovelace2","_templateObject","_taggedTemplateLiteral","badges","_templateObject2","lovelace","editMode","_templateObject3","hass","localize","_addCard","mdiPlus","_this3","map","width","window","matchMedia","_updateColumns","bind","addListener","mqls","willUpdate","changedProperties","_this$lovelace3","has","oldHass","get","dockedSidebar","oldLovelace","config","_createColumns","_createRootElement","columns","root","shadowRoot","getElementById","lastChild","removeChild","column","appendChild","_createColumns2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_this4","iteration","columnElements","columnEl","tillNextRender","start","_iterator","_step","_step$value","index","el","waitProm","cardSizeProm","_yield$Promise$all","_yield$Promise$all2","cardSize","wrap","_callee$","_context","prev","next","_columns","abrupt","_createColumnsIteration","Math","min","cards","document","createElement","classList","add","push","hasUpdated","updateComplete","then","_createForOfIteratorHelper","entries","s","n","done","_slicedToArray","Date","getTime","Promise","all","sent","_addCardToColumn","t0","e","f","finish","parentElement","stop","apply","card","isStrategy","wrapper","path","matchColumns","reduce","cols","matches","newColumns","max","narrow","static","styles","_templateObject4","customElements","define"],"sources":["/Users/sercanardil/Desktop/frontend/src/panels/lovelace/views/hui-masonry-view.ts"],"sourcesContent":["import { mdiPlus } from \"@mdi/js\";\nimport {\n  css,\n  CSSResultGroup,\n  html,\n  LitElement,\n  PropertyValues,\n  TemplateResult,\n} from \"lit\";\nimport { property, state } from \"lit/decorators\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport { nextRender } from \"../../../common/util/render-status\";\nimport \"../../../components/entity/ha-state-label-badge\";\nimport \"../../../components/ha-svg-icon\";\nimport type { LovelaceViewElement } from \"../../../data/lovelace\";\nimport type { LovelaceViewConfig } from \"../../../data/lovelace/config/view\";\nimport type { HomeAssistant } from \"../../../types\";\nimport type { HuiErrorCard } from \"../cards/hui-error-card\";\nimport { computeCardSize } from \"../common/compute-card-size\";\nimport type { Lovelace, LovelaceBadge, LovelaceCard } from \"../types\";\n\n// Find column with < 5 size, else smallest column\nconst getColumnIndex = (columnSizes: number[], size: number) => {\n  let minIndex = 0;\n  for (let i = 0; i < columnSizes.length; i++) {\n    if (columnSizes[i] < 5) {\n      minIndex = i;\n      break;\n    }\n    if (columnSizes[i] < columnSizes[minIndex]) {\n      minIndex = i;\n    }\n  }\n\n  columnSizes[minIndex] += size;\n\n  return minIndex;\n};\n\nexport class MasonryView extends LitElement implements LovelaceViewElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public lovelace?: Lovelace;\n\n  @property({ type: Boolean }) public narrow = false;\n\n  @property({ type: Number }) public index?: number;\n\n  @property({ type: Boolean }) public isStrategy = false;\n\n  @property({ attribute: false }) public cards: Array<\n    LovelaceCard | HuiErrorCard\n  > = [];\n\n  @property({ attribute: false }) public badges: LovelaceBadge[] = [];\n\n  @state() private _columns?: number;\n\n  private _createColumnsIteration = 0;\n\n  private _mqls?: MediaQueryList[];\n\n  private _mqlListenerRef?: () => void;\n\n  public connectedCallback() {\n    super.connectedCallback();\n    this._initMqls();\n  }\n\n  public disconnectedCallback() {\n    super.disconnectedCallback();\n    this._mqls?.forEach((mql) => {\n      mql.removeListener(this._mqlListenerRef!);\n    });\n    this._mqlListenerRef = undefined;\n    this._mqls = undefined;\n  }\n\n  public setConfig(_config: LovelaceViewConfig): void {}\n\n  protected render(): TemplateResult {\n    return html`\n      ${this.badges.length > 0\n        ? html`<div class=\"badges\">${this.badges}</div>`\n        : \"\"}\n      <div\n        id=\"columns\"\n        class=${this.lovelace?.editMode ? \"edit-mode\" : \"\"}\n      ></div>\n      ${this.lovelace?.editMode\n        ? html`\n            <ha-fab\n              .label=${this.hass!.localize(\n                \"ui.panel.lovelace.editor.edit_card.add\"\n              )}\n              extended\n              @click=${this._addCard}\n            >\n              <ha-svg-icon slot=\"icon\" .path=${mdiPlus}></ha-svg-icon>\n            </ha-fab>\n          `\n        : \"\"}\n    `;\n  }\n\n  private _initMqls() {\n    this._mqls = [300, 600, 900, 1200].map((width) => {\n      const mql = window.matchMedia(`(min-width: ${width}px)`);\n      if (!this._mqlListenerRef) {\n        this._mqlListenerRef = this._updateColumns.bind(this);\n      }\n      mql.addListener(this._mqlListenerRef);\n      return mql;\n    });\n  }\n\n  private get mqls(): MediaQueryList[] {\n    if (!this._mqls) {\n      this._initMqls();\n    }\n    return this._mqls!;\n  }\n\n  public willUpdate(changedProperties: PropertyValues) {\n    super.willUpdate(changedProperties);\n\n    if (this.lovelace?.editMode) {\n      import(\"./default-view-editable\");\n    }\n\n    if (changedProperties.has(\"hass\")) {\n      const oldHass = changedProperties.get(\"hass\") as\n        | HomeAssistant\n        | undefined;\n\n      if (this.hass!.dockedSidebar !== oldHass?.dockedSidebar) {\n        this._updateColumns();\n        return;\n      }\n    }\n\n    if (changedProperties.has(\"narrow\")) {\n      this._updateColumns();\n      return;\n    }\n\n    const oldLovelace = changedProperties.get(\"lovelace\") as\n      | Lovelace\n      | undefined;\n\n    if (\n      changedProperties.has(\"cards\") ||\n      (changedProperties.has(\"lovelace\") &&\n        oldLovelace &&\n        (oldLovelace.config !== this.lovelace!.config ||\n          oldLovelace.editMode !== this.lovelace!.editMode))\n    ) {\n      this._createColumns();\n    }\n  }\n\n  private _addCard(): void {\n    fireEvent(this, \"ll-create-card\");\n  }\n\n  private _createRootElement(columns: HTMLDivElement[]) {\n    const root = this.shadowRoot!.getElementById(\"columns\") as HTMLDivElement;\n\n    // Remove old columns\n    while (root.lastChild) {\n      root.removeChild(root.lastChild);\n    }\n\n    columns.forEach((column) => root.appendChild(column));\n  }\n\n  private async _createColumns() {\n    if (!this._columns) {\n      return;\n    }\n\n    this._createColumnsIteration++;\n    const iteration = this._createColumnsIteration;\n\n    // Track the total height of cards in a columns\n    const columnSizes: number[] = [];\n    const columnElements: HTMLDivElement[] = [];\n    // Add columns to DOM, limit number of columns to the number of cards\n    for (let i = 0; i < Math.min(this._columns, this.cards.length); i++) {\n      const columnEl = document.createElement(\"div\");\n      columnEl.classList.add(\"column\");\n      columnSizes.push(0);\n      columnElements.push(columnEl);\n    }\n\n    if (!this.hasUpdated) {\n      this.updateComplete.then(() => {\n        this._createRootElement(columnElements);\n      });\n    } else {\n      this._createRootElement(columnElements);\n    }\n\n    let tillNextRender: Promise<unknown> | undefined;\n    let start: Date | undefined;\n\n    // Calculate the size of every card and determine in what column it should go\n    for (const [index, el] of this.cards.entries()) {\n      if (tillNextRender === undefined) {\n        // eslint-disable-next-line @typescript-eslint/no-loop-func\n        tillNextRender = nextRender().then(() => {\n          tillNextRender = undefined;\n          start = undefined;\n        });\n      }\n\n      let waitProm: Promise<unknown> | undefined;\n\n      // We should work for max 16ms (60fps) before allowing a frame to render\n      if (start === undefined) {\n        // Save the time we start for this frame, no need to wait yet\n        start = new Date();\n      } else if (new Date().getTime() - start.getTime() > 16) {\n        // We are working too long, we will prevent a render, wait to allow for a render\n        waitProm = tillNextRender;\n      }\n\n      const cardSizeProm = computeCardSize(el);\n      // @ts-ignore\n      // eslint-disable-next-line no-await-in-loop\n      const [cardSize] = await Promise.all([cardSizeProm, waitProm]);\n\n      if (iteration !== this._createColumnsIteration) {\n        // An other create columns is started, abort this one\n        return;\n      }\n      // Calculate in wich column the card should go based on the size and the cards already in there\n      this._addCardToColumn(\n        columnElements[getColumnIndex(columnSizes, cardSize as number)],\n        index,\n        this.lovelace!.editMode\n      );\n    }\n\n    // Remove empty columns\n    columnElements.forEach((column) => {\n      if (!column.lastChild) {\n        column.parentElement!.removeChild(column);\n      }\n    });\n  }\n\n  private _addCardToColumn(columnEl, index, editMode) {\n    const card: LovelaceCard = this.cards[index];\n    if (!editMode || this.isStrategy) {\n      card.editMode = false;\n      columnEl.appendChild(card);\n    } else {\n      const wrapper = document.createElement(\"hui-card-options\");\n      wrapper.hass = this.hass;\n      wrapper.lovelace = this.lovelace;\n      wrapper.path = [this.index!, index];\n      card.editMode = true;\n      wrapper.appendChild(card);\n      columnEl.appendChild(wrapper);\n    }\n  }\n\n  private _updateColumns() {\n    const matchColumns = this.mqls.reduce(\n      (cols, mql) => cols + Number(mql.matches),\n      0\n    );\n    // Do -1 column if the menu is docked and open\n    const newColumns = Math.max(\n      1,\n      matchColumns -\n        Number(!this.narrow && this.hass!.dockedSidebar === \"docked\")\n    );\n    if (newColumns === this._columns) {\n      return;\n    }\n    this._columns = newColumns;\n    this._createColumns();\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      :host {\n        display: block;\n        padding-top: 4px;\n      }\n\n      .badges {\n        margin: 8px 16px;\n        font-size: 85%;\n        text-align: center;\n      }\n\n      #columns {\n        display: flex;\n        flex-direction: row;\n        justify-content: center;\n        margin-left: 4px;\n        margin-right: 4px;\n      }\n\n      #columns.edit-mode {\n        margin-bottom: 72px;\n      }\n\n      .column {\n        flex: 1 0 0;\n        max-width: 500px;\n        min-width: 0;\n      }\n\n      /* Fix for safari */\n      .column:has(> *) {\n        flex-grow: 1;\n      }\n\n      .column:not(:has(> *:not([hidden]))) {\n        flex-grow: 0;\n      }\n\n      .column > *:not([hidden]) {\n        display: block;\n        margin: var(--masonry-view-card-margin, 4px 4px 8px);\n      }\n\n      ha-fab {\n        position: fixed;\n        right: calc(16px + env(safe-area-inset-right));\n        bottom: calc(16px + env(safe-area-inset-bottom));\n        inset-inline-end: calc(16px + env(safe-area-inset-right));\n        inset-inline-start: initial;\n        z-index: 1;\n      }\n\n      @media (max-width: 500px) {\n        .column > * {\n          margin-left: 0;\n          margin-right: 0;\n        }\n      }\n\n      @media (max-width: 599px) {\n        .column {\n          max-width: 600px;\n        }\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-masonry-view\": MasonryView;\n  }\n}\n\ncustomElements.define(\"hui-masonry-view\", MasonryView);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}