{"ast":null,"code":"import { UNAVAILABLE } from \"./entity\";\nimport { stateActive } from \"../common/entity/state_active\";\nexport let ValveEntityFeature = /*#__PURE__*/function (ValveEntityFeature) {\n  ValveEntityFeature[ValveEntityFeature[\"OPEN\"] = 1] = \"OPEN\";\n  ValveEntityFeature[ValveEntityFeature[\"CLOSE\"] = 2] = \"CLOSE\";\n  ValveEntityFeature[ValveEntityFeature[\"SET_POSITION\"] = 4] = \"SET_POSITION\";\n  ValveEntityFeature[ValveEntityFeature[\"STOP\"] = 8] = \"STOP\";\n  return ValveEntityFeature;\n}({});\nexport function isFullyOpen(stateObj) {\n  if (stateObj.attributes.current_position !== undefined && stateObj.attributes.current_position !== null) {\n    return stateObj.attributes.current_position === 100;\n  }\n  return stateObj.state === \"open\";\n}\nexport function isFullyClosed(stateObj) {\n  if (stateObj.attributes.current_position !== undefined && stateObj.attributes.current_position !== null) {\n    return stateObj.attributes.current_position === 0;\n  }\n  return stateObj.state === \"closed\";\n}\nexport function isOpening(stateObj) {\n  return stateObj.state === \"opening\";\n}\nexport function isClosing(stateObj) {\n  return stateObj.state === \"closing\";\n}\nexport function canOpen(stateObj) {\n  if (stateObj.state === UNAVAILABLE) {\n    return false;\n  }\n  const assumedState = stateObj.attributes.assumed_state === true;\n  return assumedState || !isFullyOpen(stateObj) && !isOpening(stateObj);\n}\nexport function canClose(stateObj) {\n  if (stateObj.state === UNAVAILABLE) {\n    return false;\n  }\n  const assumedState = stateObj.attributes.assumed_state === true;\n  return assumedState || !isFullyClosed(stateObj) && !isClosing(stateObj);\n}\nexport function canStop(stateObj) {\n  return stateObj.state !== UNAVAILABLE;\n}\nexport function computeValvePositionStateDisplay(stateObj, hass, position) {\n  const statePosition = stateActive(stateObj) ? stateObj.attributes.current_position : undefined;\n  const currentPosition = position !== null && position !== void 0 ? position : statePosition;\n  return currentPosition && currentPosition !== 100 ? hass.formatEntityAttributeValue(stateObj, \"current_position\", Math.round(currentPosition)) : \"\";\n}","map":{"version":3,"names":["UNAVAILABLE","stateActive","ValveEntityFeature","isFullyOpen","stateObj","attributes","current_position","undefined","state","isFullyClosed","isOpening","isClosing","canOpen","assumedState","assumed_state","canClose","canStop","computeValvePositionStateDisplay","hass","position","statePosition","currentPosition","formatEntityAttributeValue","Math","round"],"sources":["/Users/sercanardil/Desktop/frontend/src/data/valve.ts"],"sourcesContent":["import {\n  HassEntityAttributeBase,\n  HassEntityBase,\n} from \"home-assistant-js-websocket\";\nimport { UNAVAILABLE } from \"./entity\";\nimport { stateActive } from \"../common/entity/state_active\";\nimport { HomeAssistant } from \"../types\";\n\nexport const enum ValveEntityFeature {\n  OPEN = 1,\n  CLOSE = 2,\n  SET_POSITION = 4,\n  STOP = 8,\n}\n\nexport function isFullyOpen(stateObj: ValveEntity) {\n  if (\n    stateObj.attributes.current_position !== undefined &&\n    stateObj.attributes.current_position !== null\n  ) {\n    return stateObj.attributes.current_position === 100;\n  }\n  return stateObj.state === \"open\";\n}\n\nexport function isFullyClosed(stateObj: ValveEntity) {\n  if (\n    stateObj.attributes.current_position !== undefined &&\n    stateObj.attributes.current_position !== null\n  ) {\n    return stateObj.attributes.current_position === 0;\n  }\n  return stateObj.state === \"closed\";\n}\n\nexport function isOpening(stateObj: ValveEntity) {\n  return stateObj.state === \"opening\";\n}\n\nexport function isClosing(stateObj: ValveEntity) {\n  return stateObj.state === \"closing\";\n}\n\nexport function canOpen(stateObj: ValveEntity) {\n  if (stateObj.state === UNAVAILABLE) {\n    return false;\n  }\n  const assumedState = stateObj.attributes.assumed_state === true;\n  return assumedState || (!isFullyOpen(stateObj) && !isOpening(stateObj));\n}\n\nexport function canClose(stateObj: ValveEntity): boolean {\n  if (stateObj.state === UNAVAILABLE) {\n    return false;\n  }\n  const assumedState = stateObj.attributes.assumed_state === true;\n  return assumedState || (!isFullyClosed(stateObj) && !isClosing(stateObj));\n}\n\nexport function canStop(stateObj: ValveEntity): boolean {\n  return stateObj.state !== UNAVAILABLE;\n}\n\ninterface ValveEntityAttributes extends HassEntityAttributeBase {\n  current_position?: number;\n  position?: number;\n}\n\nexport interface ValveEntity extends HassEntityBase {\n  attributes: ValveEntityAttributes;\n}\n\nexport function computeValvePositionStateDisplay(\n  stateObj: ValveEntity,\n  hass: HomeAssistant,\n  position?: number\n) {\n  const statePosition = stateActive(stateObj)\n    ? stateObj.attributes.current_position\n    : undefined;\n\n  const currentPosition = position ?? statePosition;\n\n  return currentPosition && currentPosition !== 100\n    ? hass.formatEntityAttributeValue(\n        stateObj,\n        \"current_position\",\n        Math.round(currentPosition)\n      )\n    : \"\";\n}\n"],"mappings":"AAIA,SAASA,WAAW,QAAQ,UAAU;AACtC,SAASC,WAAW,QAAQ,+BAA+B;AAG3D,WAAkBC,kBAAkB,0BAAlBA,kBAAkB;EAAlBA,kBAAkB,CAAlBA,kBAAkB;EAAlBA,kBAAkB,CAAlBA,kBAAkB;EAAlBA,kBAAkB,CAAlBA,kBAAkB;EAAlBA,kBAAkB,CAAlBA,kBAAkB;EAAA,OAAlBA,kBAAkB;AAAA;AAOpC,OAAO,SAASC,WAAWA,CAACC,QAAqB,EAAE;EACjD,IACEA,QAAQ,CAACC,UAAU,CAACC,gBAAgB,KAAKC,SAAS,IAClDH,QAAQ,CAACC,UAAU,CAACC,gBAAgB,KAAK,IAAI,EAC7C;IACA,OAAOF,QAAQ,CAACC,UAAU,CAACC,gBAAgB,KAAK,GAAG;EACrD;EACA,OAAOF,QAAQ,CAACI,KAAK,KAAK,MAAM;AAClC;AAEA,OAAO,SAASC,aAAaA,CAACL,QAAqB,EAAE;EACnD,IACEA,QAAQ,CAACC,UAAU,CAACC,gBAAgB,KAAKC,SAAS,IAClDH,QAAQ,CAACC,UAAU,CAACC,gBAAgB,KAAK,IAAI,EAC7C;IACA,OAAOF,QAAQ,CAACC,UAAU,CAACC,gBAAgB,KAAK,CAAC;EACnD;EACA,OAAOF,QAAQ,CAACI,KAAK,KAAK,QAAQ;AACpC;AAEA,OAAO,SAASE,SAASA,CAACN,QAAqB,EAAE;EAC/C,OAAOA,QAAQ,CAACI,KAAK,KAAK,SAAS;AACrC;AAEA,OAAO,SAASG,SAASA,CAACP,QAAqB,EAAE;EAC/C,OAAOA,QAAQ,CAACI,KAAK,KAAK,SAAS;AACrC;AAEA,OAAO,SAASI,OAAOA,CAACR,QAAqB,EAAE;EAC7C,IAAIA,QAAQ,CAACI,KAAK,KAAKR,WAAW,EAAE;IAClC,OAAO,KAAK;EACd;EACA,MAAMa,YAAY,GAAGT,QAAQ,CAACC,UAAU,CAACS,aAAa,KAAK,IAAI;EAC/D,OAAOD,YAAY,IAAK,CAACV,WAAW,CAACC,QAAQ,CAAC,IAAI,CAACM,SAAS,CAACN,QAAQ,CAAE;AACzE;AAEA,OAAO,SAASW,QAAQA,CAACX,QAAqB,EAAW;EACvD,IAAIA,QAAQ,CAACI,KAAK,KAAKR,WAAW,EAAE;IAClC,OAAO,KAAK;EACd;EACA,MAAMa,YAAY,GAAGT,QAAQ,CAACC,UAAU,CAACS,aAAa,KAAK,IAAI;EAC/D,OAAOD,YAAY,IAAK,CAACJ,aAAa,CAACL,QAAQ,CAAC,IAAI,CAACO,SAAS,CAACP,QAAQ,CAAE;AAC3E;AAEA,OAAO,SAASY,OAAOA,CAACZ,QAAqB,EAAW;EACtD,OAAOA,QAAQ,CAACI,KAAK,KAAKR,WAAW;AACvC;AAWA,OAAO,SAASiB,gCAAgCA,CAC9Cb,QAAqB,EACrBc,IAAmB,EACnBC,QAAiB,EACjB;EACA,MAAMC,aAAa,GAAGnB,WAAW,CAACG,QAAQ,CAAC,GACvCA,QAAQ,CAACC,UAAU,CAACC,gBAAgB,GACpCC,SAAS;EAEb,MAAMc,eAAe,GAAGF,QAAQ,aAARA,QAAQ,cAARA,QAAQ,GAAIC,aAAa;EAEjD,OAAOC,eAAe,IAAIA,eAAe,KAAK,GAAG,GAC7CH,IAAI,CAACI,0BAA0B,CAC7BlB,QAAQ,EACR,kBAAkB,EAClBmB,IAAI,CAACC,KAAK,CAACH,eAAe,CAC5B,CAAC,GACD,EAAE;AACR"},"metadata":{},"sourceType":"module","externalDependencies":[]}