{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/helpers/regeneratorRuntime\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9;\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport { ResizeController } from \"@lit-labs/observers/resize-controller\";\nimport \"@material/mwc-list\";\nvar mdiChevronDown = \"M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z\";\nvar mdiCommentProcessingOutline = \"M9,22A1,1 0 0,1 8,21V18H4A2,2 0 0,1 2,16V4C2,2.89 2.9,2 4,2H20A2,2 0 0,1 22,4V16A2,2 0 0,1 20,18H13.9L10.2,21.71C10,21.9 9.75,22 9.5,22V22H9M10,16V19.08L13.08,16H20V4H4V16H10M17,11H15V9H17V11M13,11H11V9H13V11M9,11H7V9H9V11Z\";\nvar mdiDelete = \"M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z\";\nvar mdiDotsVertical = \"M12,16A2,2 0 0,1 14,18A2,2 0 0,1 12,20A2,2 0 0,1 10,18A2,2 0 0,1 12,16M12,10A2,2 0 0,1 14,12A2,2 0 0,1 12,14A2,2 0 0,1 10,12A2,2 0 0,1 12,10M12,4A2,2 0 0,1 14,6A2,2 0 0,1 12,8A2,2 0 0,1 10,6A2,2 0 0,1 12,4Z\";\nvar mdiInformationOutline = \"M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M11,17H13V11H11V17Z\";\nvar mdiPlus = \"M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z\";\nimport { LitElement, css, html, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { isComponentLoaded } from \"../../common/config/is_component_loaded\";\nimport { storage } from \"../../common/decorators/storage\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { computeStateName } from \"../../common/entity/compute_state_name\";\nimport { navigate } from \"../../common/navigate\";\nimport { constructUrlCurrentPath } from \"../../common/url/construct-url\";\nimport { createSearchParam, extractSearchParam } from \"../../common/url/search-params\";\nimport \"../../components/ha-button\";\nimport \"../../components/ha-fab\";\nimport \"../../components/ha-icon-button\";\nimport \"../../components/ha-list-item\";\nimport \"../../components/ha-menu-button\";\nimport \"../../components/ha-state-icon\";\nimport \"../../components/ha-svg-icon\";\nimport \"../../components/ha-two-pane-top-app-bar-fixed\";\nimport { deleteConfigEntry } from \"../../data/config_entries\";\nimport { getExtendedEntityRegistryEntry } from \"../../data/entity_registry\";\nimport { fetchIntegrationManifest } from \"../../data/integration\";\nimport { TodoListEntityFeature, getTodoLists } from \"../../data/todo\";\nimport { showConfigFlowDialog } from \"../../dialogs/config-flow/show-dialog-config-flow\";\nimport { showAlertDialog, showConfirmationDialog } from \"../../dialogs/generic/show-dialog-box\";\nimport { showVoiceCommandDialog } from \"../../dialogs/voice-command-dialog/show-ha-voice-command-dialog\";\nimport { haStyle } from \"../../resources/styles\";\nimport { createCardElement } from \"../lovelace/create-element/create-card-element\";\nimport { showTodoItemEditDialog } from \"./show-dialog-todo-item-editor\";\nimport { supportsFeature } from \"../../common/entity/supports-feature\";\nvar PanelTodo = _decorate([customElement(\"ha-panel-todo\")], function (_initialize, _LitElement) {\n  var PanelTodo = /*#__PURE__*/function (_LitElement2) {\n    _inherits(PanelTodo, _LitElement2);\n    function PanelTodo() {\n      var _this;\n      _classCallCheck(this, PanelTodo);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, PanelTodo, [].concat(args));\n      _initialize(_assertThisInitialized(_this));\n      return _this;\n    }\n    return _createClass(PanelTodo);\n  }(_LitElement);\n  return {\n    F: PanelTodo,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        reflect: true\n      })],\n      key: \"narrow\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        reflect: true\n      })],\n      key: \"mobile\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_card\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [storage({\n        key: \"selectedTodoEntity\",\n        state: true\n      })],\n      key: \"_entityId\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_headerHeight\",\n      value: function value() {\n        return 56;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_showPaneController\",\n      value: function value() {\n        return new ResizeController(this, {\n          callback: function callback(entries) {\n            var _entries$;\n            return ((_entries$ = entries[0]) === null || _entries$ === void 0 ? void 0 : _entries$.contentRect.width) > 750;\n          }\n        });\n      }\n    }, {\n      kind: \"field\",\n      key: \"_mql\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_conversation\",\n      value: function value() {\n        var _this2 = this;\n        return memoizeOne(function (_components) {\n          return isComponentLoaded(_this2.hass, \"conversation\");\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"connectedCallback\",\n      value: function connectedCallback() {\n        _get(_getPrototypeOf(PanelTodo.prototype), \"connectedCallback\", this).call(this);\n        this._mql = window.matchMedia(\"(max-width: 450px), all and (max-height: 500px)\");\n        this._mql.addListener(this._setIsMobile);\n        this.mobile = this._mql.matches;\n        var computedStyles = getComputedStyle(this);\n        this._headerHeight = Number(computedStyles.getPropertyValue(\"--header-height\").replace(\"px\", \"\"));\n      }\n    }, {\n      kind: \"method\",\n      key: \"disconnectedCallback\",\n      value: function disconnectedCallback() {\n        var _this$_mql;\n        _get(_getPrototypeOf(PanelTodo.prototype), \"disconnectedCallback\", this).call(this);\n        (_this$_mql = this._mql) === null || _this$_mql === void 0 || _this$_mql.removeListener(this._setIsMobile);\n        this._mql = undefined;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_setIsMobile\",\n      value: function value() {\n        var _this3 = this;\n        return function (ev) {\n          _this3.mobile = ev.matches;\n        };\n      }\n    }, {\n      kind: \"method\",\n      key: \"willUpdate\",\n      value: function willUpdate(changedProperties) {\n        _get(_getPrototypeOf(PanelTodo.prototype), \"willUpdate\", this).call(this, changedProperties);\n        if (!this.hasUpdated) {\n          this.hass.loadFragmentTranslation(\"lovelace\");\n          var urlEntityId = extractSearchParam(\"entity_id\");\n          if (urlEntityId) {\n            this._entityId = urlEntityId;\n          } else {\n            if (this._entityId && !(this._entityId in this.hass.states)) {\n              this._entityId = undefined;\n            }\n            if (!this._entityId) {\n              var _getTodoLists$;\n              this._entityId = (_getTodoLists$ = getTodoLists(this.hass)[0]) === null || _getTodoLists$ === void 0 ? void 0 : _getTodoLists$.entity_id;\n            }\n          }\n        }\n        if (changedProperties.has(\"_entityId\") || !this.hasUpdated) {\n          this._setupTodoElement();\n        }\n        if (changedProperties.has(\"hass\") && this._card) {\n          this._card.hass = this.hass;\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_setupTodoElement\",\n      value: function _setupTodoElement() {\n        if (!this._entityId) {\n          this._card = undefined;\n          navigate(constructUrlCurrentPath(\"\"), {\n            replace: true\n          });\n          return;\n        }\n        navigate(constructUrlCurrentPath(createSearchParam({\n          entity_id: this._entityId\n        })), {\n          replace: true\n        });\n        this._card = createCardElement({\n          type: \"todo-list\",\n          entity: this._entityId\n        });\n        this._card.hass = this.hass;\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var _this$_showPaneContro,\n          _this4 = this,\n          _this$hass$user,\n          _this$hass$user2;\n        var entityRegistryEntry = this._entityId ? this.hass.entities[this._entityId] : undefined;\n        var entityState = this._entityId ? this.hass.states[this._entityId] : undefined;\n        var showPane = (_this$_showPaneContro = this._showPaneController.value) !== null && _this$_showPaneContro !== void 0 ? _this$_showPaneContro : !this.narrow;\n        var listItems = getTodoLists(this.hass).map(function (list) {\n          return html(_templateObject || (_templateObject = _taggedTemplateLiteral([\"<ha-list-item\\n          graphic=\\\"icon\\\"\\n          @click=\", \"\\n          .entityId=\", \"\\n          .activated=\", \"\\n        >\\n          <ha-state-icon\\n            .stateObj=\", \"\\n            .hass=\", \"\\n            slot=\\\"graphic\\\"\\n          ></ha-state-icon\\n          >\", \"\\n        </ha-list-item> \"])), _this4._handleEntityPicked, list.entity_id, list.entity_id === _this4._entityId, list, _this4.hass, list.name);\n        });\n        return html(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n      <ha-two-pane-top-app-bar-fixed .pane=\", \" footer>\\n        <ha-menu-button\\n          slot=\\\"navigationIcon\\\"\\n          .hass=\", \"\\n          .narrow=\", \"\\n        ></ha-menu-button>\\n        <div slot=\\\"title\\\">\\n          \", \"\\n        </div>\\n        <mwc-list slot=\\\"pane\\\" activatable>\", \"</mwc-list>\\n        \", \"\\n        <ha-button-menu slot=\\\"actionItems\\\">\\n          <ha-icon-button\\n            slot=\\\"trigger\\\"\\n            .label=\", \"\\n            .path=\", \"\\n          ></ha-icon-button>\\n          \", \"\\n          <li divider role=\\\"separator\\\"></li>\\n          <ha-list-item graphic=\\\"icon\\\" @click=\", \">\\n            <ha-svg-icon .path=\", \" slot=\\\"graphic\\\">\\n            </ha-svg-icon>\\n            \", \"\\n          </ha-list-item>\\n          \", \"\\n        </ha-button-menu>\\n        <div id=\\\"columns\\\">\\n          <div class=\\\"column\\\">\", \"</div>\\n        </div>\\n        \", \"\\n      </ha-two-pane-top-app-bar-fixed>\\n    \"])), showPane, this.hass, this.narrow, !showPane ? html(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"<ha-button-menu\\n                class=\\\"lists\\\"\\n                activatable\\n                fixed\\n                .noAnchor=\", \"\\n                .y=\", \"\\n                .x=\", \"\\n              >\\n                <ha-button slot=\\\"trigger\\\">\\n                  <div>\\n                    \", \"\\n                  </div>\\n                  <ha-svg-icon\\n                    slot=\\\"trailingIcon\\\"\\n                    .path=\", \"\\n                  ></ha-svg-icon>\\n                </ha-button>\\n                \", \"\\n                \", \"\\n              </ha-button-menu>\"])), this.mobile, this.mobile ? this._headerHeight / 2 : this._headerHeight / 4, this.mobile ? 0 : undefined, this._entityId ? entityState ? computeStateName(entityState) : this._entityId : \"\", mdiChevronDown, listItems, (_this$hass$user = this.hass.user) !== null && _this$hass$user !== void 0 && _this$hass$user.is_admin ? html(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"<li divider role=\\\"separator\\\"></li>\\n                      <ha-list-item graphic=\\\"icon\\\" @click=\", \">\\n                        <ha-svg-icon\\n                          .path=\", \"\\n                          slot=\\\"graphic\\\"\\n                        ></ha-svg-icon>\\n                        \", \"\\n                      </ha-list-item>\"])), this._addList, mdiPlus, this.hass.localize(\"ui.panel.todo.create_list\")) : nothing) : this.hass.localize(\"panel.todo\"), listItems, showPane && (_this$hass$user2 = this.hass.user) !== null && _this$hass$user2 !== void 0 && _this$hass$user2.is_admin ? html(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"<ha-list-item\\n              graphic=\\\"icon\\\"\\n              slot=\\\"pane-footer\\\"\\n              @click=\", \"\\n            >\\n              <ha-svg-icon .path=\", \" slot=\\\"graphic\\\"></ha-svg-icon>\\n              \", \"\\n            </ha-list-item>\"])), this._addList, mdiPlus, this.hass.localize(\"ui.panel.todo.create_list\")) : nothing, \"\", mdiDotsVertical, this._conversation(this.hass.config.components) ? html(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"<ha-list-item\\n                graphic=\\\"icon\\\"\\n                @click=\", \"\\n                .disabled=\", \"\\n              >\\n                <ha-svg-icon .path=\", \" slot=\\\"graphic\\\">\\n                </ha-svg-icon>\\n                \", \"\\n              </ha-list-item>\"])), this._showMoreInfoDialog, !this._entityId, mdiInformationOutline, this.hass.localize(\"ui.panel.todo.information\")) : nothing, this._showVoiceCommandDialog, mdiCommentProcessingOutline, this.hass.localize(\"ui.panel.todo.assist\"), (entityRegistryEntry === null || entityRegistryEntry === void 0 ? void 0 : entityRegistryEntry.platform) === \"local_todo\" ? html(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral([\" <li divider role=\\\"separator\\\"></li>\\n                <ha-list-item\\n                  graphic=\\\"icon\\\"\\n                  @click=\", \"\\n                  class=\\\"warning\\\"\\n                  .disabled=\", \"\\n                >\\n                  <ha-svg-icon\\n                    .path=\", \"\\n                    slot=\\\"graphic\\\"\\n                    class=\\\"warning\\\"\\n                  >\\n                  </ha-svg-icon>\\n                  \", \"\\n                </ha-list-item>\"])), this._deleteList, !this._entityId, mdiDelete, this.hass.localize(\"ui.panel.todo.delete_list\")) : nothing, this._card, entityState && supportsFeature(entityState, TodoListEntityFeature.CREATE_TODO_ITEM) ? html(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral([\"<ha-fab\\n              .label=\", \"\\n              extended\\n              @click=\", \"\\n            >\\n              <ha-svg-icon slot=\\\"icon\\\" .path=\", \"></ha-svg-icon>\\n            </ha-fab>\"])), this.hass.localize(\"ui.panel.todo.add_item\"), this._addItem, mdiPlus) : nothing);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleEntityPicked\",\n      value: function _handleEntityPicked(ev) {\n        this._entityId = ev.currentTarget.entityId;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_addList\",\n      value: function () {\n        var _addList2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n          var _this$hass$userData;\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                _context.t0 = showConfigFlowDialog;\n                _context.t1 = this;\n                _context.t2 = (_this$hass$userData = this.hass.userData) === null || _this$hass$userData === void 0 ? void 0 : _this$hass$userData.showAdvanced;\n                _context.next = 5;\n                return fetchIntegrationManifest(this.hass, \"local_todo\");\n              case 5:\n                _context.t3 = _context.sent;\n                _context.t4 = {\n                  startFlowHandler: \"local_todo\",\n                  showAdvanced: _context.t2,\n                  manifest: _context.t3\n                };\n                (0, _context.t0)(_context.t1, _context.t4);\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee, this);\n        }));\n        function _addList() {\n          return _addList2.apply(this, arguments);\n        }\n        return _addList;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"_showMoreInfoDialog\",\n      value: function _showMoreInfoDialog() {\n        if (!this._entityId) {\n          return;\n        }\n        fireEvent(this, \"hass-more-info\", {\n          entityId: this._entityId\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_deleteList\",\n      value: function () {\n        var _deleteList2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n          var _getTodoLists$2;\n          var entityRegistryEntry, entryId, confirmed, result;\n          return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n            while (1) switch (_context2.prev = _context2.next) {\n              case 0:\n                if (this._entityId) {\n                  _context2.next = 2;\n                  break;\n                }\n                return _context2.abrupt(\"return\");\n              case 2:\n                _context2.next = 4;\n                return getExtendedEntityRegistryEntry(this.hass, this._entityId);\n              case 4:\n                entityRegistryEntry = _context2.sent;\n                if (!(entityRegistryEntry.platform !== \"local_todo\")) {\n                  _context2.next = 7;\n                  break;\n                }\n                return _context2.abrupt(\"return\");\n              case 7:\n                entryId = entityRegistryEntry.config_entry_id;\n                if (entryId) {\n                  _context2.next = 10;\n                  break;\n                }\n                return _context2.abrupt(\"return\");\n              case 10:\n                _context2.next = 12;\n                return showConfirmationDialog(this, {\n                  title: this.hass.localize(\"ui.panel.todo.delete_confirm_title\", {\n                    name: this._entityId in this.hass.states ? computeStateName(this.hass.states[this._entityId]) : this._entityId\n                  }),\n                  text: this.hass.localize(\"ui.panel.todo.delete_confirm_text\"),\n                  confirmText: this.hass.localize(\"ui.common.delete\"),\n                  dismissText: this.hass.localize(\"ui.common.cancel\"),\n                  destructive: true\n                });\n              case 12:\n                confirmed = _context2.sent;\n                if (confirmed) {\n                  _context2.next = 15;\n                  break;\n                }\n                return _context2.abrupt(\"return\");\n              case 15:\n                _context2.next = 17;\n                return deleteConfigEntry(this.hass, entryId);\n              case 17:\n                result = _context2.sent;\n                this._entityId = (_getTodoLists$2 = getTodoLists(this.hass)[0]) === null || _getTodoLists$2 === void 0 ? void 0 : _getTodoLists$2.entity_id;\n                if (result.require_restart) {\n                  showAlertDialog(this, {\n                    text: this.hass.localize(\"ui.panel.todo.restart_confirm\")\n                  });\n                }\n              case 20:\n              case \"end\":\n                return _context2.stop();\n            }\n          }, _callee2, this);\n        }));\n        function _deleteList() {\n          return _deleteList2.apply(this, arguments);\n        }\n        return _deleteList;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"_showVoiceCommandDialog\",\n      value: function _showVoiceCommandDialog() {\n        showVoiceCommandDialog(this, this.hass, {\n          pipeline_id: \"last_used\"\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_addItem\",\n      value: function _addItem() {\n        showTodoItemEditDialog(this, {\n          entity: this._entityId\n        });\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [haStyle, css(_templateObject9 || (_templateObject9 = _taggedTemplateLiteral([\"\\n        :host {\\n          display: block;\\n        }\\n        #columns {\\n          display: flex;\\n          flex-direction: row;\\n          justify-content: center;\\n          margin: 8px;\\n          padding-bottom: 70px;\\n        }\\n        .column {\\n          flex: 1 0 0;\\n          max-width: 500px;\\n          min-width: 0;\\n        }\\n        :host([mobile]) .lists {\\n          --mdc-menu-min-width: 100vw;\\n        }\\n        :host(:not([mobile])) .lists ha-list-item {\\n          max-width: calc(100vw - 120px);\\n        }\\n        :host([mobile]) ha-button-menu {\\n          --mdc-shape-medium: 0 0 var(--mdc-shape-medium)\\n            var(--mdc-shape-medium);\\n        }\\n        ha-button-menu {\\n          max-width: 100%;\\n        }\\n        ha-button-menu ha-button {\\n          --button-slot-container-overflow: hidden;\\n          max-width: 100%;\\n          --mdc-theme-primary: currentColor;\\n          --mdc-typography-button-text-transform: none;\\n          --mdc-typography-button-font-size: var(\\n            --mdc-typography-headline6-font-size,\\n            1.25rem\\n          );\\n          --mdc-typography-button-font-weight: var(\\n            --mdc-typography-headline6-font-weight,\\n            500\\n          );\\n          --mdc-typography-button-letter-spacing: var(\\n            --mdc-typography-headline6-letter-spacing,\\n            0.0125em\\n          );\\n          --mdc-typography-button-line-height: var(\\n            --mdc-typography-headline6-line-height,\\n            2rem\\n          );\\n          --button-height: 40px;\\n        }\\n        ha-button-menu ha-button div {\\n          text-overflow: ellipsis;\\n          width: 100%;\\n          overflow: hidden;\\n          white-space: nowrap;\\n          display: block;\\n        }\\n        ha-fab {\\n          position: fixed;\\n          right: 16px;\\n          bottom: 16px;\\n          inset-inline-end: 16px;\\n          inset-inline-start: initial;\\n        }\\n      \"])))];\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["ResizeController","mdiChevronDown","mdiCommentProcessingOutline","mdiDelete","mdiDotsVertical","mdiInformationOutline","mdiPlus","LitElement","css","html","nothing","customElement","property","state","memoizeOne","isComponentLoaded","storage","fireEvent","computeStateName","navigate","constructUrlCurrentPath","createSearchParam","extractSearchParam","deleteConfigEntry","getExtendedEntityRegistryEntry","fetchIntegrationManifest","TodoListEntityFeature","getTodoLists","showConfigFlowDialog","showAlertDialog","showConfirmationDialog","showVoiceCommandDialog","haStyle","createCardElement","showTodoItemEditDialog","supportsFeature","PanelTodo","_decorate","_initialize","_LitElement","_LitElement2","_inherits","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_assertThisInitialized","_createClass","F","d","kind","decorators","attribute","key","value","type","Boolean","reflect","callback","entries","_entries$","contentRect","width","_this2","_components","hass","connectedCallback","_get","_getPrototypeOf","prototype","call","_mql","window","matchMedia","addListener","_setIsMobile","mobile","matches","computedStyles","getComputedStyle","_headerHeight","Number","getPropertyValue","replace","disconnectedCallback","_this$_mql","removeListener","undefined","_this3","ev","willUpdate","changedProperties","hasUpdated","loadFragmentTranslation","urlEntityId","_entityId","states","_getTodoLists$","entity_id","has","_setupTodoElement","_card","entity","render","_this$_showPaneContro","_this4","_this$hass$user","_this$hass$user2","entityRegistryEntry","entities","entityState","showPane","_showPaneController","narrow","listItems","map","list","_templateObject","_taggedTemplateLiteral","_handleEntityPicked","name","_templateObject2","_templateObject3","user","is_admin","_templateObject4","_addList","localize","_templateObject5","_conversation","config","components","_templateObject6","_showMoreInfoDialog","_showVoiceCommandDialog","platform","_templateObject7","_deleteList","CREATE_TODO_ITEM","_templateObject8","_addItem","currentTarget","entityId","_addList2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_this$hass$userData","wrap","_callee$","_context","prev","next","t0","t1","t2","userData","showAdvanced","t3","sent","t4","startFlowHandler","manifest","stop","apply","_deleteList2","_callee2","_getTodoLists$2","entryId","confirmed","result","_callee2$","_context2","abrupt","config_entry_id","title","text","confirmText","dismissText","destructive","require_restart","pipeline_id","static","styles","_templateObject9"],"sources":["/workspaces/frontend/src/panels/todo/ha-panel-todo.ts"],"sourcesContent":["import { ResizeController } from \"@lit-labs/observers/resize-controller\";\nimport \"@material/mwc-list\";\nimport {\n  mdiChevronDown,\n  mdiCommentProcessingOutline,\n  mdiDelete,\n  mdiDotsVertical,\n  mdiInformationOutline,\n  mdiPlus,\n} from \"@mdi/js\";\nimport {\n  CSSResultGroup,\n  LitElement,\n  PropertyValues,\n  TemplateResult,\n  css,\n  html,\n  nothing,\n} from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { isComponentLoaded } from \"../../common/config/is_component_loaded\";\nimport { storage } from \"../../common/decorators/storage\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { computeStateName } from \"../../common/entity/compute_state_name\";\nimport { navigate } from \"../../common/navigate\";\nimport { constructUrlCurrentPath } from \"../../common/url/construct-url\";\nimport {\n  createSearchParam,\n  extractSearchParam,\n} from \"../../common/url/search-params\";\nimport \"../../components/ha-button\";\nimport \"../../components/ha-fab\";\nimport \"../../components/ha-icon-button\";\nimport \"../../components/ha-list-item\";\nimport \"../../components/ha-menu-button\";\nimport \"../../components/ha-state-icon\";\nimport \"../../components/ha-svg-icon\";\nimport \"../../components/ha-two-pane-top-app-bar-fixed\";\nimport { deleteConfigEntry } from \"../../data/config_entries\";\nimport { getExtendedEntityRegistryEntry } from \"../../data/entity_registry\";\nimport { fetchIntegrationManifest } from \"../../data/integration\";\nimport { TodoListEntityFeature, getTodoLists } from \"../../data/todo\";\nimport { showConfigFlowDialog } from \"../../dialogs/config-flow/show-dialog-config-flow\";\nimport {\n  showAlertDialog,\n  showConfirmationDialog,\n} from \"../../dialogs/generic/show-dialog-box\";\nimport { showVoiceCommandDialog } from \"../../dialogs/voice-command-dialog/show-ha-voice-command-dialog\";\nimport { haStyle } from \"../../resources/styles\";\nimport { HomeAssistant } from \"../../types\";\nimport { HuiErrorCard } from \"../lovelace/cards/hui-error-card\";\nimport { createCardElement } from \"../lovelace/create-element/create-card-element\";\nimport { LovelaceCard } from \"../lovelace/types\";\nimport { showTodoItemEditDialog } from \"./show-dialog-todo-item-editor\";\nimport { supportsFeature } from \"../../common/entity/supports-feature\";\n\n@customElement(\"ha-panel-todo\")\nclass PanelTodo extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ type: Boolean, reflect: true }) public narrow = false;\n\n  @property({ type: Boolean, reflect: true }) public mobile = false;\n\n  @state() private _card?: LovelaceCard | HuiErrorCard;\n\n  @storage({\n    key: \"selectedTodoEntity\",\n    state: true,\n  })\n  private _entityId?: string;\n\n  private _headerHeight = 56;\n\n  private _showPaneController = new ResizeController(this, {\n    callback: (entries) => entries[0]?.contentRect.width > 750,\n  });\n\n  private _mql?: MediaQueryList;\n\n  private _conversation = memoizeOne((_components) =>\n    isComponentLoaded(this.hass, \"conversation\")\n  );\n\n  public connectedCallback() {\n    super.connectedCallback();\n    this._mql = window.matchMedia(\n      \"(max-width: 450px), all and (max-height: 500px)\"\n    );\n    this._mql.addListener(this._setIsMobile);\n    this.mobile = this._mql.matches;\n    const computedStyles = getComputedStyle(this);\n    this._headerHeight = Number(\n      computedStyles.getPropertyValue(\"--header-height\").replace(\"px\", \"\")\n    );\n  }\n\n  public disconnectedCallback() {\n    super.disconnectedCallback();\n    this._mql?.removeListener(this._setIsMobile!);\n    this._mql = undefined;\n  }\n\n  private _setIsMobile = (ev: MediaQueryListEvent) => {\n    this.mobile = ev.matches;\n  };\n\n  protected willUpdate(changedProperties: PropertyValues): void {\n    super.willUpdate(changedProperties);\n\n    if (!this.hasUpdated) {\n      this.hass.loadFragmentTranslation(\"lovelace\");\n\n      const urlEntityId = extractSearchParam(\"entity_id\");\n      if (urlEntityId) {\n        this._entityId = urlEntityId;\n      } else {\n        if (this._entityId && !(this._entityId in this.hass.states)) {\n          this._entityId = undefined;\n        }\n        if (!this._entityId) {\n          this._entityId = getTodoLists(this.hass)[0]?.entity_id;\n        }\n      }\n    }\n\n    if (changedProperties.has(\"_entityId\") || !this.hasUpdated) {\n      this._setupTodoElement();\n    }\n\n    if (changedProperties.has(\"hass\") && this._card) {\n      this._card.hass = this.hass;\n    }\n  }\n\n  private _setupTodoElement(): void {\n    if (!this._entityId) {\n      this._card = undefined;\n      navigate(constructUrlCurrentPath(\"\"), { replace: true });\n      return;\n    }\n    navigate(\n      constructUrlCurrentPath(createSearchParam({ entity_id: this._entityId })),\n      { replace: true }\n    );\n    this._card = createCardElement({\n      type: \"todo-list\",\n      entity: this._entityId,\n    }) as LovelaceCard;\n    this._card.hass = this.hass;\n  }\n\n  protected render(): TemplateResult {\n    const entityRegistryEntry = this._entityId\n      ? this.hass.entities[this._entityId]\n      : undefined;\n    const entityState = this._entityId\n      ? this.hass.states[this._entityId]\n      : undefined;\n    const showPane = this._showPaneController.value ?? !this.narrow;\n    const listItems = getTodoLists(this.hass).map(\n      (list) =>\n        html`<ha-list-item\n          graphic=\"icon\"\n          @click=${this._handleEntityPicked}\n          .entityId=${list.entity_id}\n          .activated=${list.entity_id === this._entityId}\n        >\n          <ha-state-icon\n            .stateObj=${list}\n            .hass=${this.hass}\n            slot=\"graphic\"\n          ></ha-state-icon\n          >${list.name}\n        </ha-list-item> `\n    );\n    return html`\n      <ha-two-pane-top-app-bar-fixed .pane=${showPane} footer>\n        <ha-menu-button\n          slot=\"navigationIcon\"\n          .hass=${this.hass}\n          .narrow=${this.narrow}\n        ></ha-menu-button>\n        <div slot=\"title\">\n          ${!showPane\n            ? html`<ha-button-menu\n                class=\"lists\"\n                activatable\n                fixed\n                .noAnchor=${this.mobile}\n                .y=${this.mobile\n                  ? this._headerHeight / 2\n                  : this._headerHeight / 4}\n                .x=${this.mobile ? 0 : undefined}\n              >\n                <ha-button slot=\"trigger\">\n                  <div>\n                    ${this._entityId\n                      ? entityState\n                        ? computeStateName(entityState)\n                        : this._entityId\n                      : \"\"}\n                  </div>\n                  <ha-svg-icon\n                    slot=\"trailingIcon\"\n                    .path=${mdiChevronDown}\n                  ></ha-svg-icon>\n                </ha-button>\n                ${listItems}\n                ${this.hass.user?.is_admin\n                  ? html`<li divider role=\"separator\"></li>\n                      <ha-list-item graphic=\"icon\" @click=${this._addList}>\n                        <ha-svg-icon\n                          .path=${mdiPlus}\n                          slot=\"graphic\"\n                        ></ha-svg-icon>\n                        ${this.hass.localize(\"ui.panel.todo.create_list\")}\n                      </ha-list-item>`\n                  : nothing}\n              </ha-button-menu>`\n            : this.hass.localize(\"panel.todo\")}\n        </div>\n        <mwc-list slot=\"pane\" activatable>${listItems}</mwc-list>\n        ${showPane && this.hass.user?.is_admin\n          ? html`<ha-list-item\n              graphic=\"icon\"\n              slot=\"pane-footer\"\n              @click=${this._addList}\n            >\n              <ha-svg-icon .path=${mdiPlus} slot=\"graphic\"></ha-svg-icon>\n              ${this.hass.localize(\"ui.panel.todo.create_list\")}\n            </ha-list-item>`\n          : nothing}\n        <ha-button-menu slot=\"actionItems\">\n          <ha-icon-button\n            slot=\"trigger\"\n            .label=${\"\"}\n            .path=${mdiDotsVertical}\n          ></ha-icon-button>\n          ${this._conversation(this.hass.config.components)\n            ? html`<ha-list-item\n                graphic=\"icon\"\n                @click=${this._showMoreInfoDialog}\n                .disabled=${!this._entityId}\n              >\n                <ha-svg-icon .path=${mdiInformationOutline} slot=\"graphic\">\n                </ha-svg-icon>\n                ${this.hass.localize(\"ui.panel.todo.information\")}\n              </ha-list-item>`\n            : nothing}\n          <li divider role=\"separator\"></li>\n          <ha-list-item graphic=\"icon\" @click=${this._showVoiceCommandDialog}>\n            <ha-svg-icon .path=${mdiCommentProcessingOutline} slot=\"graphic\">\n            </ha-svg-icon>\n            ${this.hass.localize(\"ui.panel.todo.assist\")}\n          </ha-list-item>\n          ${entityRegistryEntry?.platform === \"local_todo\"\n            ? html` <li divider role=\"separator\"></li>\n                <ha-list-item\n                  graphic=\"icon\"\n                  @click=${this._deleteList}\n                  class=\"warning\"\n                  .disabled=${!this._entityId}\n                >\n                  <ha-svg-icon\n                    .path=${mdiDelete}\n                    slot=\"graphic\"\n                    class=\"warning\"\n                  >\n                  </ha-svg-icon>\n                  ${this.hass.localize(\"ui.panel.todo.delete_list\")}\n                </ha-list-item>`\n            : nothing}\n        </ha-button-menu>\n        <div id=\"columns\">\n          <div class=\"column\">${this._card}</div>\n        </div>\n        ${entityState &&\n        supportsFeature(entityState, TodoListEntityFeature.CREATE_TODO_ITEM)\n          ? html`<ha-fab\n              .label=${this.hass.localize(\"ui.panel.todo.add_item\")}\n              extended\n              @click=${this._addItem}\n            >\n              <ha-svg-icon slot=\"icon\" .path=${mdiPlus}></ha-svg-icon>\n            </ha-fab>`\n          : nothing}\n      </ha-two-pane-top-app-bar-fixed>\n    `;\n  }\n\n  private _handleEntityPicked(ev) {\n    this._entityId = ev.currentTarget.entityId;\n  }\n\n  private async _addList(): Promise<void> {\n    showConfigFlowDialog(this, {\n      startFlowHandler: \"local_todo\",\n      showAdvanced: this.hass.userData?.showAdvanced,\n      manifest: await fetchIntegrationManifest(this.hass, \"local_todo\"),\n    });\n  }\n\n  private _showMoreInfoDialog(): void {\n    if (!this._entityId) {\n      return;\n    }\n    fireEvent(this, \"hass-more-info\", { entityId: this._entityId });\n  }\n\n  private async _deleteList(): Promise<void> {\n    if (!this._entityId) {\n      return;\n    }\n\n    const entityRegistryEntry = await getExtendedEntityRegistryEntry(\n      this.hass,\n      this._entityId\n    );\n\n    if (entityRegistryEntry.platform !== \"local_todo\") {\n      return;\n    }\n\n    const entryId = entityRegistryEntry.config_entry_id;\n\n    if (!entryId) {\n      return;\n    }\n\n    const confirmed = await showConfirmationDialog(this, {\n      title: this.hass.localize(\"ui.panel.todo.delete_confirm_title\", {\n        name:\n          this._entityId in this.hass.states\n            ? computeStateName(this.hass.states[this._entityId])\n            : this._entityId,\n      }),\n      text: this.hass.localize(\"ui.panel.todo.delete_confirm_text\"),\n      confirmText: this.hass!.localize(\"ui.common.delete\"),\n      dismissText: this.hass!.localize(\"ui.common.cancel\"),\n      destructive: true,\n    });\n\n    if (!confirmed) {\n      return;\n    }\n    const result = await deleteConfigEntry(this.hass, entryId);\n\n    this._entityId = getTodoLists(this.hass)[0]?.entity_id;\n\n    if (result.require_restart) {\n      showAlertDialog(this, {\n        text: this.hass.localize(\"ui.panel.todo.restart_confirm\"),\n      });\n    }\n  }\n\n  private _showVoiceCommandDialog(): void {\n    showVoiceCommandDialog(this, this.hass, { pipeline_id: \"last_used\" });\n  }\n\n  private _addItem() {\n    showTodoItemEditDialog(this, { entity: this._entityId! });\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyle,\n      css`\n        :host {\n          display: block;\n        }\n        #columns {\n          display: flex;\n          flex-direction: row;\n          justify-content: center;\n          margin: 8px;\n          padding-bottom: 70px;\n        }\n        .column {\n          flex: 1 0 0;\n          max-width: 500px;\n          min-width: 0;\n        }\n        :host([mobile]) .lists {\n          --mdc-menu-min-width: 100vw;\n        }\n        :host(:not([mobile])) .lists ha-list-item {\n          max-width: calc(100vw - 120px);\n        }\n        :host([mobile]) ha-button-menu {\n          --mdc-shape-medium: 0 0 var(--mdc-shape-medium)\n            var(--mdc-shape-medium);\n        }\n        ha-button-menu {\n          max-width: 100%;\n        }\n        ha-button-menu ha-button {\n          --button-slot-container-overflow: hidden;\n          max-width: 100%;\n          --mdc-theme-primary: currentColor;\n          --mdc-typography-button-text-transform: none;\n          --mdc-typography-button-font-size: var(\n            --mdc-typography-headline6-font-size,\n            1.25rem\n          );\n          --mdc-typography-button-font-weight: var(\n            --mdc-typography-headline6-font-weight,\n            500\n          );\n          --mdc-typography-button-letter-spacing: var(\n            --mdc-typography-headline6-letter-spacing,\n            0.0125em\n          );\n          --mdc-typography-button-line-height: var(\n            --mdc-typography-headline6-line-height,\n            2rem\n          );\n          --button-height: 40px;\n        }\n        ha-button-menu ha-button div {\n          text-overflow: ellipsis;\n          width: 100%;\n          overflow: hidden;\n          white-space: nowrap;\n          display: block;\n        }\n        ha-fab {\n          position: fixed;\n          right: 16px;\n          bottom: 16px;\n          inset-inline-end: 16px;\n          inset-inline-start: initial;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-panel-todo\": PanelTodo;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}