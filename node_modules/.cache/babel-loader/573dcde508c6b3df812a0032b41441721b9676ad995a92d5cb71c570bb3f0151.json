{"ast":null,"code":"var _createForOfIteratorHelper = require(\"@babel/runtime/helpers/createForOfIteratorHelper\").default;\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\").default;\nvar _createClass = require(\"@babel/runtime/helpers/createClass\").default;\nrequire(\"core-js/modules/es.symbol.js\");\nrequire(\"core-js/modules/es.symbol.description.js\");\nrequire(\"core-js/modules/es.error.cause.js\");\nrequire(\"core-js/modules/es.array.index-of.js\");\nrequire(\"core-js/modules/es.array.iterator.js\");\nrequire(\"core-js/modules/es.array.push.js\");\nrequire(\"core-js/modules/es.array.slice.js\");\nrequire(\"core-js/modules/es.array.splice.js\");\nrequire(\"core-js/modules/es.object.to-string.js\");\nrequire(\"core-js/modules/es.regexp.exec.js\");\nrequire(\"core-js/modules/es.regexp.test.js\");\nrequire(\"core-js/modules/es.set.js\");\nrequire(\"core-js/modules/es.string.iterator.js\");\nrequire(\"core-js/modules/esnext.set.difference.v2.js\");\nrequire(\"core-js/modules/esnext.set.intersection.v2.js\");\nrequire(\"core-js/modules/esnext.set.is-disjoint-from.v2.js\");\nrequire(\"core-js/modules/esnext.set.is-subset-of.v2.js\");\nrequire(\"core-js/modules/esnext.set.is-superset-of.v2.js\");\nrequire(\"core-js/modules/esnext.set.symmetric-difference.v2.js\");\nrequire(\"core-js/modules/esnext.set.union.v2.js\");\nrequire(\"core-js/modules/web.dom-collections.iterator.js\");\n/**\n * @license\n * Copyright 2016 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n(function () {\n  var _a, _b, _c;\n  /* Symbols for private properties */\n  var _blockingElements = Symbol();\n  var _alreadyInertElements = Symbol();\n  var _topElParents = Symbol();\n  var _siblingsToRestore = Symbol();\n  var _parentMO = Symbol();\n  /* Symbols for private static methods */\n  var _topChanged = Symbol();\n  var _swapInertedSibling = Symbol();\n  var _inertSiblings = Symbol();\n  var _restoreInertedSiblings = Symbol();\n  var _getParents = Symbol();\n  var _getDistributedChildren = Symbol();\n  var _isInertable = Symbol();\n  var _handleMutations = Symbol();\n  var BlockingElementsImpl = /*#__PURE__*/function (_ref) {\n    \"use strict\";\n\n    function BlockingElementsImpl() {\n      _classCallCheck(this, BlockingElementsImpl);\n      /**\n       * The blocking elements.\n       */\n      this[_a] = [];\n      /**\n       * Used to keep track of the parents of the top element, from the element\n       * itself up to body. When top changes, the old top might have been removed\n       * from the document, so we need to memoize the inerted parents' siblings\n       * in order to restore their inerteness when top changes.\n       */\n      this[_b] = [];\n      /**\n       * Elements that are already inert before the first blocking element is\n       * pushed.\n       */\n      this[_c] = new Set();\n    }\n    _createClass(BlockingElementsImpl, [{\n      key: \"destructor\",\n      value: function destructor() {\n        // Restore original inertness.\n        this[_restoreInertedSiblings](this[_topElParents]);\n        // Note we don't want to make these properties nullable on the class,\n        // since then we'd need non-null casts in many places. Calling a method on\n        // a BlockingElements instance after calling destructor will result in an\n        // exception.\n        var nullable = this;\n        nullable[_blockingElements] = null;\n        nullable[_topElParents] = null;\n        nullable[_alreadyInertElements] = null;\n      }\n    }, {\n      key: \"top\",\n      get: function get() {\n        var elems = this[_blockingElements];\n        return elems[elems.length - 1] || null;\n      }\n    }, {\n      key: \"push\",\n      value: function push(element) {\n        if (!element || element === this.top) {\n          return;\n        }\n        // Remove it from the stack, we'll bring it to the top.\n        this.remove(element);\n        this[_topChanged](element);\n        this[_blockingElements].push(element);\n      }\n    }, {\n      key: \"remove\",\n      value: function remove(element) {\n        var i = this[_blockingElements].indexOf(element);\n        if (i === -1) {\n          return false;\n        }\n        this[_blockingElements].splice(i, 1);\n        // Top changed only if the removed element was the top element.\n        if (i === this[_blockingElements].length) {\n          this[_topChanged](this.top);\n        }\n        return true;\n      }\n    }, {\n      key: \"pop\",\n      value: function pop() {\n        var top = this.top;\n        top && this.remove(top);\n        return top;\n      }\n    }, {\n      key: \"has\",\n      value: function has(element) {\n        return this[_blockingElements].indexOf(element) !== -1;\n      }\n      /**\n       * Sets `inert` to all document elements except the new top element, its\n       * parents, and its distributed content.\n       */\n    }, {\n      key: _ref,\n      value: function value(newTop) {\n        var toKeepInert = this[_alreadyInertElements];\n        var oldParents = this[_topElParents];\n        // No new top, reset old top if any.\n        if (!newTop) {\n          this[_restoreInertedSiblings](oldParents);\n          toKeepInert.clear();\n          this[_topElParents] = [];\n          return;\n        }\n        var newParents = this[_getParents](newTop);\n        // New top is not contained in the main document!\n        if (newParents[newParents.length - 1].parentNode !== document.body) {\n          throw Error('Non-connected element cannot be a blocking element');\n        }\n        // Cast here because we know we'll call _inertSiblings on newParents\n        // below.\n        this[_topElParents] = newParents;\n        var toSkip = this[_getDistributedChildren](newTop);\n        // No previous top element.\n        if (!oldParents.length) {\n          this[_inertSiblings](newParents, toSkip, toKeepInert);\n          return;\n        }\n        var i = oldParents.length - 1;\n        var j = newParents.length - 1;\n        // Find common parent. Index 0 is the element itself (so stop before it).\n        while (i > 0 && j > 0 && oldParents[i] === newParents[j]) {\n          i--;\n          j--;\n        }\n        // If up the parents tree there are 2 elements that are siblings, swap\n        // the inerted sibling.\n        if (oldParents[i] !== newParents[j]) {\n          this[_swapInertedSibling](oldParents[i], newParents[j]);\n        }\n        // Restore old parents siblings inertness.\n        i > 0 && this[_restoreInertedSiblings](oldParents.slice(0, i));\n        // Make new parents siblings inert.\n        j > 0 && this[_inertSiblings](newParents.slice(0, j), toSkip, null);\n      }\n      /**\n       * Swaps inertness between two sibling elements.\n       * Sets the property `inert` over the attribute since the inert spec\n       * doesn't specify if it should be reflected.\n       * https://html.spec.whatwg.org/multipage/interaction.html#inert\n       */\n    }, {\n      key: _swapInertedSibling,\n      value: function value(oldInert, newInert) {\n        var siblingsToRestore = oldInert[_siblingsToRestore];\n        // oldInert is not contained in siblings to restore, so we have to check\n        // if it's inertable and if already inert.\n        if (this[_isInertable](oldInert) && !oldInert.inert) {\n          oldInert.inert = true;\n          siblingsToRestore.add(oldInert);\n        }\n        // If newInert was already between the siblings to restore, it means it is\n        // inertable and must be restored.\n        if (siblingsToRestore.has(newInert)) {\n          newInert.inert = false;\n          siblingsToRestore.delete(newInert);\n        }\n        newInert[_parentMO] = oldInert[_parentMO];\n        newInert[_siblingsToRestore] = siblingsToRestore;\n        oldInert[_parentMO] = undefined;\n        oldInert[_siblingsToRestore] = undefined;\n      }\n      /**\n       * Restores original inertness to the siblings of the elements.\n       * Sets the property `inert` over the attribute since the inert spec\n       * doesn't specify if it should be reflected.\n       * https://html.spec.whatwg.org/multipage/interaction.html#inert\n       */\n    }, {\n      key: _restoreInertedSiblings,\n      value: function value(elements) {\n        var _iterator = _createForOfIteratorHelper(elements),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var element = _step.value;\n            var mo = element[_parentMO];\n            mo.disconnect();\n            element[_parentMO] = undefined;\n            var siblings = element[_siblingsToRestore];\n            var _iterator2 = _createForOfIteratorHelper(siblings),\n              _step2;\n            try {\n              for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                var sibling = _step2.value;\n                sibling.inert = false;\n              }\n            } catch (err) {\n              _iterator2.e(err);\n            } finally {\n              _iterator2.f();\n            }\n            element[_siblingsToRestore] = undefined;\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n      /**\n       * Inerts the siblings of the elements except the elements to skip. Stores\n       * the inerted siblings into the element's symbol `_siblingsToRestore`.\n       * Pass `toKeepInert` to collect the already inert elements.\n       * Sets the property `inert` over the attribute since the inert spec\n       * doesn't specify if it should be reflected.\n       * https://html.spec.whatwg.org/multipage/interaction.html#inert\n       */\n    }, {\n      key: _inertSiblings,\n      value: function value(elements, toSkip, toKeepInert) {\n        var _iterator3 = _createForOfIteratorHelper(elements),\n          _step3;\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var element = _step3.value;\n            // Assume element is not a Document, so it must have a parentNode.\n            var parent = element.parentNode;\n            var children = parent.children;\n            var inertedSiblings = new Set();\n            for (var j = 0; j < children.length; j++) {\n              var sibling = children[j];\n              // Skip the input element, if not inertable or to be skipped.\n              if (sibling === element || !this[_isInertable](sibling) || toSkip && toSkip.has(sibling)) {\n                continue;\n              }\n              // Should be collected since already inerted.\n              if (toKeepInert && sibling.inert) {\n                toKeepInert.add(sibling);\n              } else {\n                sibling.inert = true;\n                inertedSiblings.add(sibling);\n              }\n            }\n            // Store the siblings that were inerted.\n            element[_siblingsToRestore] = inertedSiblings;\n            // Observe only immediate children mutations on the parent.\n            var mo = new MutationObserver(this[_handleMutations].bind(this));\n            element[_parentMO] = mo;\n            var parentToObserve = parent;\n            // If we're using the ShadyDOM polyfill, then our parent could be a\n            // shady root, which is an object that acts like a ShadowRoot, but isn't\n            // actually a node in the real DOM. Observe the real DOM parent instead.\n            var maybeShadyRoot = parentToObserve;\n            if (maybeShadyRoot.__shady && maybeShadyRoot.host) {\n              parentToObserve = maybeShadyRoot.host;\n            }\n            mo.observe(parentToObserve, {\n              childList: true\n            });\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n      }\n      /**\n       * Handles newly added/removed nodes by toggling their inertness.\n       * It also checks if the current top Blocking Element has been removed,\n       * notifying and removing it.\n       */\n    }, {\n      key: _handleMutations,\n      value: function value(mutations) {\n        var parents = this[_topElParents];\n        var toKeepInert = this[_alreadyInertElements];\n        var _iterator4 = _createForOfIteratorHelper(mutations),\n          _step4;\n        try {\n          for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n            var mutation = _step4.value;\n            // If the target is a shadowRoot, get its host as we skip shadowRoots when\n            // computing _topElParents.\n            var target = mutation.target.host || mutation.target;\n            var idx = target === document.body ? parents.length : parents.indexOf(target);\n            var inertedChild = parents[idx - 1];\n            var inertedSiblings = inertedChild[_siblingsToRestore];\n            // To restore.\n            for (var i = 0; i < mutation.removedNodes.length; i++) {\n              var sibling = mutation.removedNodes[i];\n              if (sibling === inertedChild) {\n                console.info('Detected removal of the top Blocking Element.');\n                this.pop();\n                return;\n              }\n              if (inertedSiblings.has(sibling)) {\n                sibling.inert = false;\n                inertedSiblings.delete(sibling);\n              }\n            }\n            // To inert.\n            for (var _i = 0; _i < mutation.addedNodes.length; _i++) {\n              var _sibling = mutation.addedNodes[_i];\n              if (!this[_isInertable](_sibling)) {\n                continue;\n              }\n              if (toKeepInert && _sibling.inert) {\n                toKeepInert.add(_sibling);\n              } else {\n                _sibling.inert = true;\n                inertedSiblings.add(_sibling);\n              }\n            }\n          }\n        } catch (err) {\n          _iterator4.e(err);\n        } finally {\n          _iterator4.f();\n        }\n      }\n      /**\n       * Returns if the element is inertable.\n       */\n    }, {\n      key: _isInertable,\n      value: function value(element) {\n        return false === /^(style|template|script)$/.test(element.localName);\n      }\n      /**\n       * Returns the list of newParents of an element, starting from element\n       * (included) up to `document.body` (excluded).\n       */\n    }, {\n      key: _getParents,\n      value: function value(element) {\n        var parents = [];\n        var current = element;\n        // Stop to body.\n        while (current && current !== document.body) {\n          // Skip shadow roots.\n          if (current.nodeType === Node.ELEMENT_NODE) {\n            parents.push(current);\n          }\n          // ShadowDom v1\n          if (current.assignedSlot) {\n            // Collect slots from deepest slot to top.\n            while (current = current.assignedSlot) {\n              parents.push(current);\n            }\n            // Continue the search on the top slot.\n            current = parents.pop();\n            continue;\n          }\n          current = current.parentNode || current.host;\n        }\n        return parents;\n      }\n      /**\n       * Returns the distributed children of the element's shadow root.\n       * Returns null if the element doesn't have a shadow root.\n       */\n    }, {\n      key: _getDistributedChildren,\n      value: function value(element) {\n        var shadowRoot = element.shadowRoot;\n        if (!shadowRoot) {\n          return null;\n        }\n        var result = new Set();\n        var i;\n        var j;\n        var nodes;\n        var slots = shadowRoot.querySelectorAll('slot');\n        if (slots.length && slots[0].assignedNodes) {\n          for (i = 0; i < slots.length; i++) {\n            nodes = slots[i].assignedNodes({\n              flatten: true\n            });\n            for (j = 0; j < nodes.length; j++) {\n              if (nodes[j].nodeType === Node.ELEMENT_NODE) {\n                result.add(nodes[j]);\n              }\n            }\n          }\n          // No need to search for <content>.\n        }\n        return result;\n      }\n    }]);\n    return BlockingElementsImpl;\n  }((_a = _blockingElements, _b = _topElParents, _c = _alreadyInertElements, _topChanged));\n  document.$blockingElements = new BlockingElementsImpl();\n})();","map":{"version":3,"names":["_blockingElements","Symbol","_alreadyInertElements","_topElParents","_siblingsToRestore","_parentMO","_topChanged","_swapInertedSibling","_inertSiblings","_restoreInertedSiblings","_getParents","_getDistributedChildren","_isInertable","_handleMutations","BlockingElementsImpl","_ref","_classCallCheck","_a","_b","_c","Set","_createClass","key","value","destructor","nullable","get","elems","length","push","element","top","remove","i","indexOf","splice","pop","has","newTop","toKeepInert","oldParents","clear","newParents","parentNode","document","body","Error","toSkip","j","slice","oldInert","newInert","siblingsToRestore","inert","add","delete","undefined","elements","_iterator","_createForOfIteratorHelper","_step","s","n","done","mo","disconnect","siblings","_iterator2","_step2","sibling","err","e","f","_iterator3","_step3","parent","children","inertedSiblings","MutationObserver","bind","parentToObserve","maybeShadyRoot","__shady","host","observe","childList","mutations","parents","_iterator4","_step4","mutation","target","idx","inertedChild","removedNodes","console","info","addedNodes","test","localName","current","nodeType","Node","ELEMENT_NODE","assignedSlot","shadowRoot","result","nodes","slots","querySelectorAll","assignedNodes","flatten","$blockingElements"],"sources":["../src/blocking-elements.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}