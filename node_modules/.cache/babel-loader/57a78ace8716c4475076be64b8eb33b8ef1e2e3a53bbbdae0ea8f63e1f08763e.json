{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport { html, LitElement } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport \"../entity/ha-entity-attribute-picker\";\nexport let HaSelectorAttribute = _decorate([customElement(\"ha-selector-attribute\")], function (_initialize, _LitElement) {\n  class HaSelectorAttribute extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaSelectorAttribute,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"selector\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"value\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"label\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"helper\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"disabled\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"required\",\n      value() {\n        return true;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"context\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var _this$selector$attrib, _this$context, _this$selector$attrib2;\n        return html`\n      <ha-entity-attribute-picker\n        .hass=${this.hass}\n        .entityId=${((_this$selector$attrib = this.selector.attribute) === null || _this$selector$attrib === void 0 ? void 0 : _this$selector$attrib.entity_id) || ((_this$context = this.context) === null || _this$context === void 0 ? void 0 : _this$context.filter_entity)}\n        .hideAttributes=${(_this$selector$attrib2 = this.selector.attribute) === null || _this$selector$attrib2 === void 0 ? void 0 : _this$selector$attrib2.hide_attributes}\n        .value=${this.value}\n        .label=${this.label}\n        .helper=${this.helper}\n        .disabled=${this.disabled}\n        .required=${this.required}\n        allow-custom-value\n      ></ha-entity-attribute-picker>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"updated\",\n      value: function updated(changedProps) {\n        var _this$selector$attrib3;\n        _get(_getPrototypeOf(HaSelectorAttribute.prototype), \"updated\", this).call(this, changedProps);\n        if (\n        // No need to filter value if no value\n        !this.value || // Only adjust value if we used the context\n        (_this$selector$attrib3 = this.selector.attribute) !== null && _this$selector$attrib3 !== void 0 && _this$selector$attrib3.entity_id ||\n        // Only check if context has changed\n        !changedProps.has(\"context\")) {\n          return;\n        }\n        const oldContext = changedProps.get(\"context\");\n        if (!this.context || !oldContext || oldContext.filter_entity === this.context.filter_entity) {\n          return;\n        }\n\n        // Validate that that the attribute is still valid for this entity, else unselect.\n        let invalid = false;\n        if (this.context.filter_entity) {\n          const stateObj = this.hass.states[this.context.filter_entity];\n          if (!(stateObj && this.value in stateObj.attributes)) {\n            invalid = true;\n          }\n        } else {\n          invalid = this.value !== undefined;\n        }\n        if (invalid) {\n          fireEvent(this, \"value-changed\", {\n            value: undefined\n          });\n        }\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["html","LitElement","customElement","property","fireEvent","HaSelectorAttribute","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","type","Boolean","render","_this$selector$attrib","_this$context","_this$selector$attrib2","hass","selector","entity_id","context","filter_entity","hide_attributes","label","helper","disabled","required","updated","changedProps","_this$selector$attrib3","_get","_getPrototypeOf","prototype","call","has","oldContext","get","invalid","stateObj","states","attributes","undefined"],"sources":["/Users/sercanardil/Desktop/frontend/src/components/ha-selector/ha-selector-attribute.ts"],"sourcesContent":["import { html, LitElement, PropertyValues } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { AttributeSelector } from \"../../data/selector\";\nimport { HomeAssistant } from \"../../types\";\nimport \"../entity/ha-entity-attribute-picker\";\n\n@customElement(\"ha-selector-attribute\")\nexport class HaSelectorAttribute extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public selector!: AttributeSelector;\n\n  @property() public value?: any;\n\n  @property() public label?: string;\n\n  @property() public helper?: string;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @property({ type: Boolean }) public required = true;\n\n  @property({ attribute: false }) public context?: {\n    filter_entity?: string;\n  };\n\n  protected render() {\n    return html`\n      <ha-entity-attribute-picker\n        .hass=${this.hass}\n        .entityId=${this.selector.attribute?.entity_id ||\n        this.context?.filter_entity}\n        .hideAttributes=${this.selector.attribute?.hide_attributes}\n        .value=${this.value}\n        .label=${this.label}\n        .helper=${this.helper}\n        .disabled=${this.disabled}\n        .required=${this.required}\n        allow-custom-value\n      ></ha-entity-attribute-picker>\n    `;\n  }\n\n  protected updated(changedProps: PropertyValues): void {\n    super.updated(changedProps);\n    if (\n      // No need to filter value if no value\n      !this.value ||\n      // Only adjust value if we used the context\n      this.selector.attribute?.entity_id ||\n      // Only check if context has changed\n      !changedProps.has(\"context\")\n    ) {\n      return;\n    }\n\n    const oldContext = changedProps.get(\"context\") as this[\"context\"];\n\n    if (\n      !this.context ||\n      !oldContext ||\n      oldContext.filter_entity === this.context.filter_entity\n    ) {\n      return;\n    }\n\n    // Validate that that the attribute is still valid for this entity, else unselect.\n    let invalid = false;\n    if (this.context.filter_entity) {\n      const stateObj = this.hass.states[this.context.filter_entity];\n\n      if (!(stateObj && this.value in stateObj.attributes)) {\n        invalid = true;\n      }\n    } else {\n      invalid = this.value !== undefined;\n    }\n\n    if (invalid) {\n      fireEvent(this, \"value-changed\", {\n        value: undefined,\n      });\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-selector-attribute\": HaSelectorAttribute;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}