{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nconst mdiDotsVertical = \"M12,16A2,2 0 0,1 14,18A2,2 0 0,1 12,20A2,2 0 0,1 10,18A2,2 0 0,1 12,16M12,10A2,2 0 0,1 14,12A2,2 0 0,1 12,14A2,2 0 0,1 10,12A2,2 0 0,1 12,10M12,4A2,2 0 0,1 14,6A2,2 0 0,1 12,8A2,2 0 0,1 10,6A2,2 0 0,1 12,4Z\";\nconst mdiDownload = \"M5,20H19V18H5M19,9H15V3H9V9H5L12,16L19,9Z\";\nconst mdiInformationOutline = \"M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M11,17H13V11H11V17Z\";\nconst mdiPencil = \"M20.71,7.04C21.1,6.65 21.1,6 20.71,5.63L18.37,3.29C18,2.9 17.35,2.9 16.96,3.29L15.12,5.12L18.87,8.87M3,17.25V21H6.75L17.81,9.93L14.06,6.18L3,17.25Z\";\nconst mdiRayEndArrow = \"M1,12L5,16V13H17.17C17.58,14.17 18.69,15 20,15A3,3 0 0,0 23,12A3,3 0 0,0 20,9C18.69,9 17.58,9.83 17.17,11H5V8L1,12Z\";\nconst mdiRayStartArrow = \"M23,12L19,16V13H6.83C6.42,14.17 5.31,15 4,15A3,3 0 0,1 1,12A3,3 0 0,1 4,9C5.31,9 6.42,9.83 6.83,11H19V8L23,12Z\";\nconst mdiRefresh = \"M17.65,6.35C16.2,4.9 14.21,4 12,4A8,8 0 0,0 4,12A8,8 0 0,0 12,20C15.73,20 18.84,17.45 19.73,14H17.65C16.83,16.33 14.61,18 12,18A6,6 0 0,1 6,12A6,6 0 0,1 12,6C13.66,6 15.14,6.69 16.22,7.78L13,11H20V4L17.65,6.35Z\";\nimport { css, html, LitElement } from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport { repeat } from \"lit/directives/repeat\";\nimport { isComponentLoaded } from \"../../../common/config/is_component_loaded\";\nimport { formatDateTimeWithSeconds } from \"../../../common/datetime/format_date_time\";\nimport \"../../../components/ha-icon-button\";\nimport \"../../../components/trace/ha-trace-blueprint-config\";\nimport \"../../../components/trace/ha-trace-config\";\nimport \"../../../components/trace/ha-trace-logbook\";\nimport \"../../../components/trace/ha-trace-path-details\";\nimport \"../../../components/trace/ha-trace-timeline\";\nimport \"../../../components/trace/hat-script-graph\";\nimport { traceTabStyles } from \"../../../components/trace/trace-tab-styles\";\nimport { getLogbookDataForContext } from \"../../../data/logbook\";\nimport { loadTrace, loadTraces } from \"../../../data/trace\";\nimport { showAlertDialog } from \"../../../dialogs/generic/show-dialog-box\";\nimport { haStyle } from \"../../../resources/styles\";\nimport \"../../../layouts/hass-subpage\";\nimport \"../../../components/ha-button-menu\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nexport let HaScriptTrace = _decorate([customElement(\"ha-script-trace\")], function (_initialize, _LitElement) {\n  class HaScriptTrace extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaScriptTrace,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"scriptId\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"scripts\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"isWide\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        reflect: true\n      })],\n      key: \"narrow\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"route\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"entityRegistry\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_entityId\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_traces\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_runId\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_selected\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_trace\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_logbookEntries\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_view\",\n      value() {\n        return \"details\";\n      }\n    }, {\n      kind: \"field\",\n      decorators: [query(\"hat-script-graph\")],\n      key: \"_graph\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var _this$_selected;\n        const stateObj = this._entityId ? this.hass.states[this._entityId] : undefined;\n        const graph = this._graph;\n        const trackedNodes = graph === null || graph === void 0 ? void 0 : graph.trackedNodes;\n        const renderedNodes = graph === null || graph === void 0 ? void 0 : graph.renderedNodes;\n        const title = (stateObj === null || stateObj === void 0 ? void 0 : stateObj.attributes.friendly_name) || this._entityId;\n        let devButtons = \"\";\n        if (__DEV__) {\n          devButtons = html`<div style=\"position: absolute; right: 0;\">\n        <button @click=${this._importTrace}>Import trace</button>\n        <button @click=${this._loadLocalStorageTrace}>Load stored trace</button>\n      </div>`;\n        }\n        return html`\n      ${devButtons}\n      <hass-subpage .hass=${this.hass} .narrow=${this.narrow} .header=${title}>\n        ${!this.narrow && this.scriptId ? html`\n              <a\n                class=\"trace-link\"\n                href=\"/config/script/edit/${this.scriptId}\"\n                slot=\"toolbar-icon\"\n              >\n                <mwc-button>\n                  ${this.hass.localize(\"ui.panel.config.script.trace.edit_script\")}\n                </mwc-button>\n              </a>\n            ` : \"\"}\n\n        <ha-button-menu slot=\"toolbar-icon\">\n          <ha-icon-button\n            slot=\"trigger\"\n            .label=${this.hass.localize(\"ui.common.menu\")}\n            .path=${mdiDotsVertical}\n          ></ha-icon-button>\n\n          <mwc-list-item\n            graphic=\"icon\"\n            .disabled=${!stateObj}\n            @click=${this._showInfo}\n          >\n            ${this.hass.localize(\"ui.panel.config.script.editor.show_info\")}\n            <ha-svg-icon\n              slot=\"graphic\"\n              .path=${mdiInformationOutline}\n            ></ha-svg-icon>\n          </mwc-list-item>\n\n          ${this.narrow && this.scriptId ? html`\n                <a\n                  class=\"trace-link\"\n                  href=\"/config/script/edit/${this.scriptId}\"\n                >\n                  <mwc-list-item graphic=\"icon\">\n                    ${this.hass.localize(\"ui.panel.config.script.trace.edit_script\")}\n                    <ha-svg-icon\n                      slot=\"graphic\"\n                      .path=${mdiPencil}\n                    ></ha-svg-icon>\n                  </mwc-list-item>\n                </a>\n              ` : \"\"}\n\n          <li divider role=\"separator\"></li>\n\n          <mwc-list-item graphic=\"icon\" @click=${this._refreshTraces}>\n            ${this.hass.localize(\"ui.panel.config.automation.trace.refresh\")}\n            <ha-svg-icon slot=\"graphic\" .path=${mdiRefresh}></ha-svg-icon>\n          </mwc-list-item>\n\n          <mwc-list-item\n            graphic=\"icon\"\n            .disabled=${!this._trace}\n            @click=${this._downloadTrace}\n          >\n            ${this.hass.localize(\"ui.panel.config.automation.trace.download_trace\")}\n            <ha-svg-icon slot=\"graphic\" .path=${mdiDownload}></ha-svg-icon>\n          </mwc-list-item>\n        </ha-button-menu>\n\n        <div class=\"toolbar\">\n          ${this._traces && this._traces.length > 0 ? html`\n                <ha-icon-button\n                  .disabled=${this._traces[this._traces.length - 1].run_id === this._runId}\n                  label=\"Older trace\"\n                  @click=${this._pickOlderTrace}\n                  .path=${mdiRayEndArrow}\n                ></ha-icon-button>\n                <select .value=${this._runId} @change=${this._pickTrace}>\n                  ${repeat(this._traces, trace => trace.run_id, trace => html`<option value=${trace.run_id}>\n                        ${formatDateTimeWithSeconds(new Date(trace.timestamp.start), this.hass.locale, this.hass.config)}\n                      </option>`)}\n                </select>\n                <ha-icon-button\n                  .disabled=${this._traces[0].run_id === this._runId}\n                  label=\"Newer trace\"\n                  @click=${this._pickNewerTrace}\n                  .path=${mdiRayStartArrow}\n                ></ha-icon-button>\n              ` : \"\"}\n        </div>\n\n        ${this._traces === undefined ? html`<div class=\"container\">Loadingâ€¦</div>` : this._traces.length === 0 ? html`<div class=\"container\">No traces found</div>` : this._trace === undefined ? \"\" : html`\n                  <div class=\"main\">\n                    <div class=\"graph\">\n                      <hat-script-graph\n                        .trace=${this._trace}\n                        .selected=${(_this$_selected = this._selected) === null || _this$_selected === void 0 ? void 0 : _this$_selected.path}\n                        @graph-node-selected=${this._pickNode}\n                      ></hat-script-graph>\n                    </div>\n\n                    <div class=\"info\">\n                      <div class=\"tabs top\">\n                        ${[[\"details\", \"Step Details\"], [\"timeline\", \"Trace Timeline\"], [\"logbook\", \"Related logbook entries\"], [\"config\", \"Script Config\"]].map(([view, label]) => html`\n                            <button\n                              tabindex=\"0\"\n                              .view=${view}\n                              class=${classMap({\n          active: this._view === view\n        })}\n                              @click=${this._showTab}\n                            >\n                              ${label}\n                            </button>\n                          `)}\n                        ${this._trace.blueprint_inputs ? html`\n                              <button\n                                tabindex=\"0\"\n                                .view=${\"blueprint\"}\n                                class=${classMap({\n          active: this._view === \"blueprint\"\n        })}\n                                @click=${this._showTab}\n                              >\n                                Blueprint Config\n                              </button>\n                            ` : \"\"}\n                      </div>\n                      ${this._selected === undefined || this._logbookEntries === undefined || trackedNodes === undefined ? \"\" : this._view === \"details\" ? html`\n                              <ha-trace-path-details\n                                .hass=${this.hass}\n                                .narrow=${this.narrow}\n                                .trace=${this._trace}\n                                .selected=${this._selected}\n                                .logbookEntries=${this._logbookEntries}\n                                .trackedNodes=${trackedNodes}\n                                .renderedNodes=${renderedNodes}\n                              ></ha-trace-path-details>\n                            ` : this._view === \"config\" ? html`\n                                <ha-trace-config\n                                  .hass=${this.hass}\n                                  .trace=${this._trace}\n                                ></ha-trace-config>\n                              ` : this._view === \"logbook\" ? html`\n                                  <ha-trace-logbook\n                                    .hass=${this.hass}\n                                    .narrow=${this.narrow}\n                                    .trace=${this._trace}\n                                    .logbookEntries=${this._logbookEntries}\n                                  ></ha-trace-logbook>\n                                ` : this._view === \"blueprint\" ? html`\n                                    <ha-trace-blueprint-config\n                                      .hass=${this.hass}\n                                      .trace=${this._trace}\n                                    ></ha-trace-blueprint-config>\n                                  ` : html`\n                                    <ha-trace-timeline\n                                      .hass=${this.hass}\n                                      .trace=${this._trace}\n                                      .logbookEntries=${this._logbookEntries}\n                                      .selected=${this._selected}\n                                      @value-changed=${this._timelinePathPicked}\n                                    ></ha-trace-timeline>\n                                  `}\n                    </div>\n                  </div>\n                `}\n      </hass-subpage>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"firstUpdated\",\n      value: function firstUpdated(changedProps) {\n        var _this$entityRegistry$;\n        _get(_getPrototypeOf(HaScriptTrace.prototype), \"firstUpdated\", this).call(this, changedProps);\n        if (!this.scriptId) {\n          return;\n        }\n        const params = new URLSearchParams(location.search);\n        this._loadTraces(params.get(\"run_id\") || undefined);\n        this._entityId = (_this$entityRegistry$ = this.entityRegistry.find(entry => entry.unique_id === this.scriptId)) === null || _this$entityRegistry$ === void 0 ? void 0 : _this$entityRegistry$.entity_id;\n      }\n    }, {\n      kind: \"method\",\n      key: \"willUpdate\",\n      value: function willUpdate(changedProps) {\n        _get(_getPrototypeOf(HaScriptTrace.prototype), \"willUpdate\", this).call(this, changedProps);\n\n        // Only reset if scriptId has changed and we had one before.\n        if (changedProps.get(\"scriptId\")) {\n          this._traces = undefined;\n          this._runId = undefined;\n          this._trace = undefined;\n          this._logbookEntries = undefined;\n          if (this.scriptId) {\n            var _this$entityRegistry$2;\n            this._loadTraces();\n            this._entityId = (_this$entityRegistry$2 = this.entityRegistry.find(entry => entry.unique_id === this.scriptId)) === null || _this$entityRegistry$2 === void 0 ? void 0 : _this$entityRegistry$2.entity_id;\n          }\n        }\n        if (changedProps.has(\"_runId\") && this._runId) {\n          this._trace = undefined;\n          this._logbookEntries = undefined;\n          this._loadTrace();\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_pickOlderTrace\",\n      value: function _pickOlderTrace() {\n        const curIndex = this._traces.findIndex(tr => tr.run_id === this._runId);\n        this._runId = this._traces[curIndex + 1].run_id;\n        this._selected = undefined;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_pickNewerTrace\",\n      value: function _pickNewerTrace() {\n        const curIndex = this._traces.findIndex(tr => tr.run_id === this._runId);\n        this._runId = this._traces[curIndex - 1].run_id;\n        this._selected = undefined;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_pickTrace\",\n      value: function _pickTrace(ev) {\n        this._runId = ev.target.value;\n        this._selected = undefined;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_pickNode\",\n      value: function _pickNode(ev) {\n        this._selected = ev.detail;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_refreshTraces\",\n      value: function _refreshTraces() {\n        this._loadTraces();\n      }\n    }, {\n      kind: \"method\",\n      key: \"_loadTraces\",\n      value: async function _loadTraces(runId) {\n        this._traces = await loadTraces(this.hass, \"script\", this.scriptId);\n        // Newest will be on top.\n        this._traces.reverse();\n        if (runId) {\n          this._runId = runId;\n        }\n\n        // Check if current run ID still exists\n        if (this._runId && !this._traces.some(trace => trace.run_id === this._runId)) {\n          this._runId = undefined;\n          this._selected = undefined;\n\n          // If we came here from a trace passed into the url, clear it.\n          if (runId) {\n            const params = new URLSearchParams(location.search);\n            params.delete(\"run_id\");\n            history.replaceState(null, \"\", `${location.pathname}?${params.toString()}`);\n          }\n          await showAlertDialog(this, {\n            text: \"Chosen trace is no longer available\"\n          });\n        }\n\n        // See if we can set a default runID\n        if (!this._runId && this._traces.length > 0) {\n          this._runId = this._traces[0].run_id;\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_loadTrace\",\n      value: async function _loadTrace() {\n        const trace = await loadTrace(this.hass, \"script\", this.scriptId, this._runId);\n        this._logbookEntries = isComponentLoaded(this.hass, \"logbook\") ? await getLogbookDataForContext(this.hass, trace.timestamp.start, trace.context.id) : [];\n        this._trace = trace;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_downloadTrace\",\n      value: function _downloadTrace() {\n        const aEl = document.createElement(\"a\");\n        aEl.download = `trace ${this._entityId} ${this._trace.timestamp.start}.json`;\n        aEl.href = `data:application/json;charset=utf-8,${encodeURI(JSON.stringify({\n          trace: this._trace,\n          logbookEntries: this._logbookEntries\n        }, undefined, 2))}`;\n        aEl.click();\n      }\n    }, {\n      kind: \"method\",\n      key: \"_importTrace\",\n      value: function _importTrace() {\n        const traceText = prompt(\"Enter downloaded trace\");\n        if (!traceText) {\n          return;\n        }\n        localStorage.devTrace = traceText;\n        this._loadLocalTrace(traceText);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_loadLocalStorageTrace\",\n      value: function _loadLocalStorageTrace() {\n        if (localStorage.devTrace) {\n          this._loadLocalTrace(localStorage.devTrace);\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_loadLocalTrace\",\n      value: function _loadLocalTrace(traceText) {\n        const traceInfo = JSON.parse(traceText);\n        this._trace = traceInfo.trace;\n        this._logbookEntries = traceInfo.logbookEntries;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_showTab\",\n      value: function _showTab(ev) {\n        this._view = ev.target.view;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_timelinePathPicked\",\n      value: function _timelinePathPicked(ev) {\n        const path = ev.detail.value;\n        const nodes = this._graph.trackedNodes;\n        if (nodes[path]) {\n          this._selected = nodes[path];\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_showInfo\",\n      value: async function _showInfo() {\n        if (!this._entityId) {\n          return;\n        }\n        fireEvent(this, \"hass-more-info\", {\n          entityId: this._entityId\n        });\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [haStyle, traceTabStyles, css`\n        .toolbar {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          height: var(--header-height);\n          background-color: var(--primary-background-color);\n          color: var(--app-header-text-color, white);\n          border-bottom: var(--app-header-border-bottom, none);\n          box-sizing: border-box;\n        }\n\n        .main {\n          min-height: calc(100% - var(--header-height));\n          display: flex;\n          background-color: var(--card-background-color);\n        }\n\n        :host([narrow]) .main {\n          height: auto;\n          flex-direction: column;\n        }\n\n        .container {\n          padding: 16px;\n        }\n\n        .graph {\n          border-right: 1px solid var(--divider-color);\n          overflow-x: auto;\n          max-width: 50%;\n        }\n        :host([narrow]) .graph {\n          max-width: 100%;\n        }\n        .info {\n          flex: 1;\n          background-color: var(--card-background-color);\n        }\n        .trace-link {\n          text-decoration: none;\n        }\n      `];\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","customElement","property","query","state","classMap","repeat","isComponentLoaded","formatDateTimeWithSeconds","traceTabStyles","getLogbookDataForContext","loadTrace","loadTraces","showAlertDialog","haStyle","fireEvent","HaScriptTrace","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","type","Boolean","reflect","render","_this$_selected","stateObj","_entityId","hass","states","undefined","graph","_graph","trackedNodes","renderedNodes","title","attributes","friendly_name","devButtons","__DEV__","_importTrace","_loadLocalStorageTrace","narrow","scriptId","localize","mdiDotsVertical","_showInfo","mdiInformationOutline","mdiPencil","_refreshTraces","mdiRefresh","_trace","_downloadTrace","mdiDownload","_traces","length","run_id","_runId","_pickOlderTrace","mdiRayEndArrow","_pickTrace","trace","Date","timestamp","start","locale","config","_pickNewerTrace","mdiRayStartArrow","_selected","path","_pickNode","map","view","label","active","_view","_showTab","blueprint_inputs","_logbookEntries","_timelinePathPicked","firstUpdated","changedProps","_this$entityRegistry$","_get","_getPrototypeOf","prototype","call","params","URLSearchParams","location","search","_loadTraces","get","entityRegistry","find","entry","unique_id","entity_id","willUpdate","_this$entityRegistry$2","has","_loadTrace","curIndex","findIndex","tr","ev","target","detail","runId","reverse","some","delete","history","replaceState","pathname","toString","text","context","id","aEl","document","createElement","download","href","encodeURI","JSON","stringify","logbookEntries","click","traceText","prompt","localStorage","devTrace","_loadLocalTrace","traceInfo","parse","nodes","entityId","static","styles"],"sources":["/workspaces/frontend/src/panels/config/script/ha-script-trace.ts"],"sourcesContent":["import {\n  mdiDotsVertical,\n  mdiDownload,\n  mdiInformationOutline,\n  mdiPencil,\n  mdiRayEndArrow,\n  mdiRayStartArrow,\n  mdiRefresh,\n} from \"@mdi/js\";\nimport { css, CSSResultGroup, html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport { repeat } from \"lit/directives/repeat\";\nimport { isComponentLoaded } from \"../../../common/config/is_component_loaded\";\nimport { formatDateTimeWithSeconds } from \"../../../common/datetime/format_date_time\";\nimport \"../../../components/ha-icon-button\";\nimport \"../../../components/trace/ha-trace-blueprint-config\";\nimport \"../../../components/trace/ha-trace-config\";\nimport \"../../../components/trace/ha-trace-logbook\";\nimport \"../../../components/trace/ha-trace-path-details\";\nimport \"../../../components/trace/ha-trace-timeline\";\nimport \"../../../components/trace/hat-script-graph\";\nimport type {\n  HatScriptGraph,\n  NodeInfo,\n} from \"../../../components/trace/hat-script-graph\";\nimport { traceTabStyles } from \"../../../components/trace/trace-tab-styles\";\nimport { getLogbookDataForContext, LogbookEntry } from \"../../../data/logbook\";\nimport { ScriptEntity } from \"../../../data/script\";\nimport {\n  loadTrace,\n  loadTraces,\n  ScriptTrace,\n  ScriptTraceExtended,\n} from \"../../../data/trace\";\nimport { showAlertDialog } from \"../../../dialogs/generic/show-dialog-box\";\nimport { haStyle } from \"../../../resources/styles\";\nimport { HomeAssistant, Route } from \"../../../types\";\nimport \"../../../layouts/hass-subpage\";\nimport \"../../../components/ha-button-menu\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport { EntityRegistryEntry } from \"../../../data/entity_registry\";\n\n@customElement(\"ha-script-trace\")\nexport class HaScriptTrace extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property() public scriptId!: string;\n\n  @property({ attribute: false }) public scripts!: ScriptEntity[];\n\n  @property({ type: Boolean }) public isWide = false;\n\n  @property({ type: Boolean, reflect: true }) public narrow = false;\n\n  @property({ attribute: false }) public route!: Route;\n\n  @property({ attribute: false }) public entityRegistry!: EntityRegistryEntry[];\n\n  @state() private _entityId?: string;\n\n  @state() private _traces?: ScriptTrace[];\n\n  @state() private _runId?: string;\n\n  @state() private _selected?: NodeInfo;\n\n  @state() private _trace?: ScriptTraceExtended;\n\n  @state() private _logbookEntries?: LogbookEntry[];\n\n  @state() private _view:\n    | \"details\"\n    | \"config\"\n    | \"timeline\"\n    | \"logbook\"\n    | \"blueprint\" = \"details\";\n\n  @query(\"hat-script-graph\") private _graph?: HatScriptGraph;\n\n  protected render(): TemplateResult {\n    const stateObj = this._entityId\n      ? this.hass.states[this._entityId]\n      : undefined;\n\n    const graph = this._graph;\n    const trackedNodes = graph?.trackedNodes;\n    const renderedNodes = graph?.renderedNodes;\n\n    const title = stateObj?.attributes.friendly_name || this._entityId;\n\n    let devButtons: TemplateResult | string = \"\";\n    if (__DEV__) {\n      devButtons = html`<div style=\"position: absolute; right: 0;\">\n        <button @click=${this._importTrace}>Import trace</button>\n        <button @click=${this._loadLocalStorageTrace}>Load stored trace</button>\n      </div>`;\n    }\n\n    return html`\n      ${devButtons}\n      <hass-subpage .hass=${this.hass} .narrow=${this.narrow} .header=${title}>\n        ${!this.narrow && this.scriptId\n          ? html`\n              <a\n                class=\"trace-link\"\n                href=\"/config/script/edit/${this.scriptId}\"\n                slot=\"toolbar-icon\"\n              >\n                <mwc-button>\n                  ${this.hass.localize(\n                    \"ui.panel.config.script.trace.edit_script\"\n                  )}\n                </mwc-button>\n              </a>\n            `\n          : \"\"}\n\n        <ha-button-menu slot=\"toolbar-icon\">\n          <ha-icon-button\n            slot=\"trigger\"\n            .label=${this.hass.localize(\"ui.common.menu\")}\n            .path=${mdiDotsVertical}\n          ></ha-icon-button>\n\n          <mwc-list-item\n            graphic=\"icon\"\n            .disabled=${!stateObj}\n            @click=${this._showInfo}\n          >\n            ${this.hass.localize(\"ui.panel.config.script.editor.show_info\")}\n            <ha-svg-icon\n              slot=\"graphic\"\n              .path=${mdiInformationOutline}\n            ></ha-svg-icon>\n          </mwc-list-item>\n\n          ${this.narrow && this.scriptId\n            ? html`\n                <a\n                  class=\"trace-link\"\n                  href=\"/config/script/edit/${this.scriptId}\"\n                >\n                  <mwc-list-item graphic=\"icon\">\n                    ${this.hass.localize(\n                      \"ui.panel.config.script.trace.edit_script\"\n                    )}\n                    <ha-svg-icon\n                      slot=\"graphic\"\n                      .path=${mdiPencil}\n                    ></ha-svg-icon>\n                  </mwc-list-item>\n                </a>\n              `\n            : \"\"}\n\n          <li divider role=\"separator\"></li>\n\n          <mwc-list-item graphic=\"icon\" @click=${this._refreshTraces}>\n            ${this.hass.localize(\"ui.panel.config.automation.trace.refresh\")}\n            <ha-svg-icon slot=\"graphic\" .path=${mdiRefresh}></ha-svg-icon>\n          </mwc-list-item>\n\n          <mwc-list-item\n            graphic=\"icon\"\n            .disabled=${!this._trace}\n            @click=${this._downloadTrace}\n          >\n            ${this.hass.localize(\n              \"ui.panel.config.automation.trace.download_trace\"\n            )}\n            <ha-svg-icon slot=\"graphic\" .path=${mdiDownload}></ha-svg-icon>\n          </mwc-list-item>\n        </ha-button-menu>\n\n        <div class=\"toolbar\">\n          ${this._traces && this._traces.length > 0\n            ? html`\n                <ha-icon-button\n                  .disabled=${this._traces[this._traces.length - 1].run_id ===\n                  this._runId}\n                  label=\"Older trace\"\n                  @click=${this._pickOlderTrace}\n                  .path=${mdiRayEndArrow}\n                ></ha-icon-button>\n                <select .value=${this._runId} @change=${this._pickTrace}>\n                  ${repeat(\n                    this._traces,\n                    (trace) => trace.run_id,\n                    (trace) =>\n                      html`<option value=${trace.run_id}>\n                        ${formatDateTimeWithSeconds(\n                          new Date(trace.timestamp.start),\n                          this.hass.locale,\n                          this.hass.config\n                        )}\n                      </option>`\n                  )}\n                </select>\n                <ha-icon-button\n                  .disabled=${this._traces[0].run_id === this._runId}\n                  label=\"Newer trace\"\n                  @click=${this._pickNewerTrace}\n                  .path=${mdiRayStartArrow}\n                ></ha-icon-button>\n              `\n            : \"\"}\n        </div>\n\n        ${this._traces === undefined\n          ? html`<div class=\"container\">Loadingâ€¦</div>`\n          : this._traces.length === 0\n            ? html`<div class=\"container\">No traces found</div>`\n            : this._trace === undefined\n              ? \"\"\n              : html`\n                  <div class=\"main\">\n                    <div class=\"graph\">\n                      <hat-script-graph\n                        .trace=${this._trace}\n                        .selected=${this._selected?.path}\n                        @graph-node-selected=${this._pickNode}\n                      ></hat-script-graph>\n                    </div>\n\n                    <div class=\"info\">\n                      <div class=\"tabs top\">\n                        ${[\n                          [\"details\", \"Step Details\"],\n                          [\"timeline\", \"Trace Timeline\"],\n                          [\"logbook\", \"Related logbook entries\"],\n                          [\"config\", \"Script Config\"],\n                        ].map(\n                          ([view, label]) => html`\n                            <button\n                              tabindex=\"0\"\n                              .view=${view}\n                              class=${classMap({ active: this._view === view })}\n                              @click=${this._showTab}\n                            >\n                              ${label}\n                            </button>\n                          `\n                        )}\n                        ${this._trace.blueprint_inputs\n                          ? html`\n                              <button\n                                tabindex=\"0\"\n                                .view=${\"blueprint\"}\n                                class=${classMap({\n                                  active: this._view === \"blueprint\",\n                                })}\n                                @click=${this._showTab}\n                              >\n                                Blueprint Config\n                              </button>\n                            `\n                          : \"\"}\n                      </div>\n                      ${this._selected === undefined ||\n                      this._logbookEntries === undefined ||\n                      trackedNodes === undefined\n                        ? \"\"\n                        : this._view === \"details\"\n                          ? html`\n                              <ha-trace-path-details\n                                .hass=${this.hass}\n                                .narrow=${this.narrow}\n                                .trace=${this._trace}\n                                .selected=${this._selected}\n                                .logbookEntries=${this._logbookEntries}\n                                .trackedNodes=${trackedNodes}\n                                .renderedNodes=${renderedNodes!}\n                              ></ha-trace-path-details>\n                            `\n                          : this._view === \"config\"\n                            ? html`\n                                <ha-trace-config\n                                  .hass=${this.hass}\n                                  .trace=${this._trace}\n                                ></ha-trace-config>\n                              `\n                            : this._view === \"logbook\"\n                              ? html`\n                                  <ha-trace-logbook\n                                    .hass=${this.hass}\n                                    .narrow=${this.narrow}\n                                    .trace=${this._trace}\n                                    .logbookEntries=${this._logbookEntries}\n                                  ></ha-trace-logbook>\n                                `\n                              : this._view === \"blueprint\"\n                                ? html`\n                                    <ha-trace-blueprint-config\n                                      .hass=${this.hass}\n                                      .trace=${this._trace}\n                                    ></ha-trace-blueprint-config>\n                                  `\n                                : html`\n                                    <ha-trace-timeline\n                                      .hass=${this.hass}\n                                      .trace=${this._trace}\n                                      .logbookEntries=${this._logbookEntries}\n                                      .selected=${this._selected}\n                                      @value-changed=${this._timelinePathPicked}\n                                    ></ha-trace-timeline>\n                                  `}\n                    </div>\n                  </div>\n                `}\n      </hass-subpage>\n    `;\n  }\n\n  protected firstUpdated(changedProps) {\n    super.firstUpdated(changedProps);\n\n    if (!this.scriptId) {\n      return;\n    }\n\n    const params = new URLSearchParams(location.search);\n    this._loadTraces(params.get(\"run_id\") || undefined);\n\n    this._entityId = this.entityRegistry.find(\n      (entry) => entry.unique_id === this.scriptId\n    )?.entity_id;\n  }\n\n  public willUpdate(changedProps) {\n    super.willUpdate(changedProps);\n\n    // Only reset if scriptId has changed and we had one before.\n    if (changedProps.get(\"scriptId\")) {\n      this._traces = undefined;\n      this._runId = undefined;\n      this._trace = undefined;\n      this._logbookEntries = undefined;\n      if (this.scriptId) {\n        this._loadTraces();\n\n        this._entityId = this.entityRegistry.find(\n          (entry) => entry.unique_id === this.scriptId\n        )?.entity_id;\n      }\n    }\n\n    if (changedProps.has(\"_runId\") && this._runId) {\n      this._trace = undefined;\n      this._logbookEntries = undefined;\n      this._loadTrace();\n    }\n  }\n\n  private _pickOlderTrace() {\n    const curIndex = this._traces!.findIndex((tr) => tr.run_id === this._runId);\n    this._runId = this._traces![curIndex + 1].run_id;\n    this._selected = undefined;\n  }\n\n  private _pickNewerTrace() {\n    const curIndex = this._traces!.findIndex((tr) => tr.run_id === this._runId);\n    this._runId = this._traces![curIndex - 1].run_id;\n    this._selected = undefined;\n  }\n\n  private _pickTrace(ev) {\n    this._runId = ev.target.value;\n    this._selected = undefined;\n  }\n\n  private _pickNode(ev) {\n    this._selected = ev.detail;\n  }\n\n  private _refreshTraces() {\n    this._loadTraces();\n  }\n\n  private async _loadTraces(runId?: string) {\n    this._traces = await loadTraces(this.hass, \"script\", this.scriptId);\n    // Newest will be on top.\n    this._traces.reverse();\n\n    if (runId) {\n      this._runId = runId;\n    }\n\n    // Check if current run ID still exists\n    if (\n      this._runId &&\n      !this._traces.some((trace) => trace.run_id === this._runId)\n    ) {\n      this._runId = undefined;\n      this._selected = undefined;\n\n      // If we came here from a trace passed into the url, clear it.\n      if (runId) {\n        const params = new URLSearchParams(location.search);\n        params.delete(\"run_id\");\n        history.replaceState(\n          null,\n          \"\",\n          `${location.pathname}?${params.toString()}`\n        );\n      }\n\n      await showAlertDialog(this, {\n        text: \"Chosen trace is no longer available\",\n      });\n    }\n\n    // See if we can set a default runID\n    if (!this._runId && this._traces.length > 0) {\n      this._runId = this._traces[0].run_id;\n    }\n  }\n\n  private async _loadTrace() {\n    const trace = await loadTrace(\n      this.hass,\n      \"script\",\n      this.scriptId,\n      this._runId!\n    );\n    this._logbookEntries = isComponentLoaded(this.hass, \"logbook\")\n      ? await getLogbookDataForContext(\n          this.hass,\n          trace.timestamp.start,\n          trace.context.id\n        )\n      : [];\n\n    this._trace = trace;\n  }\n\n  private _downloadTrace() {\n    const aEl = document.createElement(\"a\");\n    aEl.download = `trace ${this._entityId} ${\n      this._trace!.timestamp.start\n    }.json`;\n    aEl.href = `data:application/json;charset=utf-8,${encodeURI(\n      JSON.stringify(\n        {\n          trace: this._trace,\n          logbookEntries: this._logbookEntries,\n        },\n        undefined,\n        2\n      )\n    )}`;\n    aEl.click();\n  }\n\n  private _importTrace() {\n    const traceText = prompt(\"Enter downloaded trace\");\n    if (!traceText) {\n      return;\n    }\n    localStorage.devTrace = traceText;\n    this._loadLocalTrace(traceText);\n  }\n\n  private _loadLocalStorageTrace() {\n    if (localStorage.devTrace) {\n      this._loadLocalTrace(localStorage.devTrace);\n    }\n  }\n\n  private _loadLocalTrace(traceText: string) {\n    const traceInfo = JSON.parse(traceText);\n    this._trace = traceInfo.trace;\n    this._logbookEntries = traceInfo.logbookEntries;\n  }\n\n  private _showTab(ev: Event) {\n    this._view = (ev.target as any).view;\n  }\n\n  private _timelinePathPicked(ev: CustomEvent) {\n    const path = ev.detail.value;\n    const nodes = this._graph!.trackedNodes;\n    if (nodes[path]) {\n      this._selected = nodes[path];\n    }\n  }\n\n  private async _showInfo() {\n    if (!this._entityId) {\n      return;\n    }\n    fireEvent(this, \"hass-more-info\", { entityId: this._entityId });\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyle,\n      traceTabStyles,\n      css`\n        .toolbar {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          height: var(--header-height);\n          background-color: var(--primary-background-color);\n          color: var(--app-header-text-color, white);\n          border-bottom: var(--app-header-border-bottom, none);\n          box-sizing: border-box;\n        }\n\n        .main {\n          min-height: calc(100% - var(--header-height));\n          display: flex;\n          background-color: var(--card-background-color);\n        }\n\n        :host([narrow]) .main {\n          height: auto;\n          flex-direction: column;\n        }\n\n        .container {\n          padding: 16px;\n        }\n\n        .graph {\n          border-right: 1px solid var(--divider-color);\n          overflow-x: auto;\n          max-width: 50%;\n        }\n        :host([narrow]) .graph {\n          max-width: 100%;\n        }\n        .info {\n          flex: 1;\n          background-color: var(--card-background-color);\n        }\n        .trace-link {\n          text-decoration: none;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-script-trace\": HaScriptTrace;\n  }\n}\n"],"mappings":";;;;;;;;;;AASA,SAASA,GAAG,EAAkBC,IAAI,EAAEC,UAAU,QAAwB,KAAK;AAC3E,SAASC,aAAa,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,KAAK,QAAQ,gBAAgB;AACtE,SAASC,QAAQ,QAAQ,0BAA0B;AACnD,SAASC,MAAM,QAAQ,uBAAuB;AAC9C,SAASC,iBAAiB,QAAQ,4CAA4C;AAC9E,SAASC,yBAAyB,QAAQ,2CAA2C;AACrF,OAAO,oCAAoC;AAC3C,OAAO,qDAAqD;AAC5D,OAAO,2CAA2C;AAClD,OAAO,4CAA4C;AACnD,OAAO,iDAAiD;AACxD,OAAO,6CAA6C;AACpD,OAAO,4CAA4C;AAKnD,SAASC,cAAc,QAAQ,4CAA4C;AAC3E,SAASC,wBAAwB,QAAsB,uBAAuB;AAE9E,SACEC,SAAS,EACTC,UAAU,QAGL,qBAAqB;AAC5B,SAASC,eAAe,QAAQ,0CAA0C;AAC1E,SAASC,OAAO,QAAQ,2BAA2B;AAEnD,OAAO,+BAA+B;AACtC,OAAO,oCAAoC;AAC3C,SAASC,SAAS,QAAQ,gCAAgC;AAG1D,WACaC,aAAa,GAAAC,SAAA,EADzBhB,aAAa,CAAC,iBAAiB,CAAC,aAAAiB,WAAA,EAAAC,WAAA;EAAjC,MACaH,aAAa,SAAAG,WAAA,CAAoB;IAAAC,YAAA,GAAAC,IAAA;MAAA,SAAAA,IAAA;MAAAH,WAAA;IAAA;EAmf9C;EAAC;IAAAI,CAAA,EAnfYN,aAAa;IAAAO,CAAA;MAAAC,IAAA;MAAAC,UAAA,GACvBvB,QAAQ,CAAC;QAAEwB,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAC,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAE9BvB,QAAQ,CAAC,CAAC;MAAAyB,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAEVvB,QAAQ,CAAC;QAAEwB,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAC,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAE9BvB,QAAQ,CAAC;QAAE2B,IAAI,EAAEC;MAAQ,CAAC,CAAC;MAAAH,GAAA;MAAAC,MAAA;QAAA,OAAiB,KAAK;MAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAEjDvB,QAAQ,CAAC;QAAE2B,IAAI,EAAEC,OAAO;QAAEC,OAAO,EAAE;MAAK,CAAC,CAAC;MAAAJ,GAAA;MAAAC,MAAA;QAAA,OAAiB,KAAK;MAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAEhEvB,QAAQ,CAAC;QAAEwB,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAC,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAE9BvB,QAAQ,CAAC;QAAEwB,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAC,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAE9BrB,KAAK,CAAC,CAAC;MAAAuB,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAEPrB,KAAK,CAAC,CAAC;MAAAuB,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAEPrB,KAAK,CAAC,CAAC;MAAAuB,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAEPrB,KAAK,CAAC,CAAC;MAAAuB,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAEPrB,KAAK,CAAC,CAAC;MAAAuB,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAEPrB,KAAK,CAAC,CAAC;MAAAuB,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAEPrB,KAAK,CAAC,CAAC;MAAAuB,GAAA;MAAAC,MAAA;QAAA,OAKU,SAAS;MAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAE1BtB,KAAK,CAAC,kBAAkB,CAAC;MAAAwB,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAE1B,SAAAI,OAAA,EAAmC;QAAA,IAAAC,eAAA;QACjC,MAAMC,QAAQ,GAAG,IAAI,CAACC,SAAS,GAC3B,IAAI,CAACC,IAAI,CAACC,MAAM,CAAC,IAAI,CAACF,SAAS,CAAC,GAChCG,SAAS;QAEb,MAAMC,KAAK,GAAG,IAAI,CAACC,MAAM;QACzB,MAAMC,YAAY,GAAGF,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEE,YAAY;QACxC,MAAMC,aAAa,GAAGH,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEG,aAAa;QAE1C,MAAMC,KAAK,GAAG,CAAAT,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEU,UAAU,CAACC,aAAa,KAAI,IAAI,CAACV,SAAS;QAElE,IAAIW,UAAmC,GAAG,EAAE;QAC5C,IAAIC,OAAO,EAAE;UACXD,UAAU,GAAG/C,IAAK;AACxB,yBAAyB,IAAI,CAACiD,YAAa;AAC3C,yBAAyB,IAAI,CAACC,sBAAuB;AACrD,aAAa;QACT;QAEA,OAAOlD,IAAK;AAChB,QAAQ+C,UAAW;AACnB,4BAA4B,IAAI,CAACV,IAAK,YAAW,IAAI,CAACc,MAAO,YAAWP,KAAM;AAC9E,UAAU,CAAC,IAAI,CAACO,MAAM,IAAI,IAAI,CAACC,QAAQ,GAC3BpD,IAAK;AACjB;AACA;AACA,4CAA4C,IAAI,CAACoD,QAAS;AAC1D;AACA;AACA;AACA,oBAAoB,IAAI,CAACf,IAAI,CAACgB,QAAQ,CAClB,0CACF,CAAE;AACpB;AACA;AACA,aAAa,GACD,EAAG;AACf;AACA;AACA;AACA;AACA,qBAAqB,IAAI,CAAChB,IAAI,CAACgB,QAAQ,CAAC,gBAAgB,CAAE;AAC1D,oBAAoBC,eAAgB;AACpC;AACA;AACA;AACA;AACA,wBAAwB,CAACnB,QAAS;AAClC,qBAAqB,IAAI,CAACoB,SAAU;AACpC;AACA,cAAc,IAAI,CAAClB,IAAI,CAACgB,QAAQ,CAAC,yCAAyC,CAAE;AAC5E;AACA;AACA,sBAAsBG,qBAAsB;AAC5C;AACA;AACA;AACA,YAAY,IAAI,CAACL,MAAM,IAAI,IAAI,CAACC,QAAQ,GAC1BpD,IAAK;AACnB;AACA;AACA,8CAA8C,IAAI,CAACoD,QAAS;AAC5D;AACA;AACA,sBAAsB,IAAI,CAACf,IAAI,CAACgB,QAAQ,CAClB,0CACF,CAAE;AACtB;AACA;AACA,8BAA8BI,SAAU;AACxC;AACA;AACA;AACA,eAAe,GACD,EAAG;AACjB;AACA;AACA;AACA,iDAAiD,IAAI,CAACC,cAAe;AACrE,cAAc,IAAI,CAACrB,IAAI,CAACgB,QAAQ,CAAC,0CAA0C,CAAE;AAC7E,gDAAgDM,UAAW;AAC3D;AACA;AACA;AACA;AACA,wBAAwB,CAAC,IAAI,CAACC,MAAO;AACrC,qBAAqB,IAAI,CAACC,cAAe;AACzC;AACA,cAAc,IAAI,CAACxB,IAAI,CAACgB,QAAQ,CAClB,iDACF,CAAE;AACd,gDAAgDS,WAAY;AAC5D;AACA;AACA;AACA;AACA,YAAY,IAAI,CAACC,OAAO,IAAI,IAAI,CAACA,OAAO,CAACC,MAAM,GAAG,CAAC,GACrChE,IAAK;AACnB;AACA,8BAA8B,IAAI,CAAC+D,OAAO,CAAC,IAAI,CAACA,OAAO,CAACC,MAAM,GAAG,CAAC,CAAC,CAACC,MAAM,KACxD,IAAI,CAACC,MAAO;AAC9B;AACA,2BAA2B,IAAI,CAACC,eAAgB;AAChD,0BAA0BC,cAAe;AACzC;AACA,iCAAiC,IAAI,CAACF,MAAO,YAAW,IAAI,CAACG,UAAW;AACxE,oBAAoB9D,MAAM,CACN,IAAI,CAACwD,OAAO,EACXO,KAAK,IAAKA,KAAK,CAACL,MAAM,EACtBK,KAAK,IACJtE,IAAK,iBAAgBsE,KAAK,CAACL,MAAO;AACxD,0BAA0BxD,yBAAyB,CACzB,IAAI8D,IAAI,CAACD,KAAK,CAACE,SAAS,CAACC,KAAK,CAAC,EAC/B,IAAI,CAACpC,IAAI,CAACqC,MAAM,EAChB,IAAI,CAACrC,IAAI,CAACsC,MACZ,CAAE;AAC1B,gCACkB,CAAE;AACpB;AACA;AACA,8BAA8B,IAAI,CAACZ,OAAO,CAAC,CAAC,CAAC,CAACE,MAAM,KAAK,IAAI,CAACC,MAAO;AACrE;AACA,2BAA2B,IAAI,CAACU,eAAgB;AAChD,0BAA0BC,gBAAiB;AAC3C;AACA,eAAe,GACD,EAAG;AACjB;AACA;AACA,UAAU,IAAI,CAACd,OAAO,KAAKxB,SAAS,GACxBvC,IAAK,uCAAsC,GAC3C,IAAI,CAAC+D,OAAO,CAACC,MAAM,KAAK,CAAC,GACvBhE,IAAK,8CAA6C,GAClD,IAAI,CAAC4D,MAAM,KAAKrB,SAAS,GACvB,EAAE,GACFvC,IAAK;AACrB;AACA;AACA;AACA,iCAAiC,IAAI,CAAC4D,MAAO;AAC7C,oCAAkC,CAAA1B,eAAA,GAAE,IAAI,CAAC4C,SAAS,cAAA5C,eAAA,uBAAdA,eAAA,CAAgB6C,IAAK;AACzD,+CAA+C,IAAI,CAACC,SAAU;AAC9D;AACA;AACA;AACA;AACA;AACA,0BAA0B,CACA,CAAC,SAAS,EAAE,cAAc,CAAC,EAC3B,CAAC,UAAU,EAAE,gBAAgB,CAAC,EAC9B,CAAC,SAAS,EAAE,yBAAyB,CAAC,EACtC,CAAC,QAAQ,EAAE,eAAe,CAAC,CAC5B,CAACC,GAAG,CACH,CAAC,CAACC,IAAI,EAAEC,KAAK,CAAC,KAAKnF,IAAK;AAClD;AACA;AACA,sCAAsCkF,IAAK;AAC3C,sCAAsC5E,QAAQ,CAAC;UAAE8E,MAAM,EAAE,IAAI,CAACC,KAAK,KAAKH;QAAK,CAAC,CAAE;AAChF,uCAAuC,IAAI,CAACI,QAAS;AACrD;AACA,gCAAgCH,KAAM;AACtC;AACA,2BACwB,CAAE;AAC1B,0BAA0B,IAAI,CAACvB,MAAM,CAAC2B,gBAAgB,GAC1BvF,IAAK;AACjC;AACA;AACA,wCAAwC,WAAY;AACpD,wCAAwCM,QAAQ,CAAC;UACf8E,MAAM,EAAE,IAAI,CAACC,KAAK,KAAK;QACzB,CAAC,CAAE;AACnC,yCAAyC,IAAI,CAACC,QAAS;AACvD;AACA;AACA;AACA,6BAA6B,GACD,EAAG;AAC/B;AACA,wBAAwB,IAAI,CAACR,SAAS,KAAKvC,SAAS,IAC9B,IAAI,CAACiD,eAAe,KAAKjD,SAAS,IAClCG,YAAY,KAAKH,SAAS,GACtB,EAAE,GACF,IAAI,CAAC8C,KAAK,KAAK,SAAS,GACtBrF,IAAK;AACjC;AACA,wCAAwC,IAAI,CAACqC,IAAK;AAClD,0CAA0C,IAAI,CAACc,MAAO;AACtD,yCAAyC,IAAI,CAACS,MAAO;AACrD,4CAA4C,IAAI,CAACkB,SAAU;AAC3D,kDAAkD,IAAI,CAACU,eAAgB;AACvE,gDAAgD9C,YAAa;AAC7D,iDAAiDC,aAAe;AAChE;AACA,6BAA6B,GACD,IAAI,CAAC0C,KAAK,KAAK,QAAQ,GACrBrF,IAAK;AACnC;AACA,0CAA0C,IAAI,CAACqC,IAAK;AACpD,2CAA2C,IAAI,CAACuB,MAAO;AACvD;AACA,+BAA+B,GACD,IAAI,CAACyB,KAAK,KAAK,SAAS,GACtBrF,IAAK;AACrC;AACA,4CAA4C,IAAI,CAACqC,IAAK;AACtD,8CAA8C,IAAI,CAACc,MAAO;AAC1D,6CAA6C,IAAI,CAACS,MAAO;AACzD,sDAAsD,IAAI,CAAC4B,eAAgB;AAC3E;AACA,iCAAiC,GACD,IAAI,CAACH,KAAK,KAAK,WAAW,GACxBrF,IAAK;AACvC;AACA,8CAA8C,IAAI,CAACqC,IAAK;AACxD,+CAA+C,IAAI,CAACuB,MAAO;AAC3D;AACA,mCAAmC,GACD5D,IAAK;AACvC;AACA,8CAA8C,IAAI,CAACqC,IAAK;AACxD,+CAA+C,IAAI,CAACuB,MAAO;AAC3D,wDAAwD,IAAI,CAAC4B,eAAgB;AAC7E,kDAAkD,IAAI,CAACV,SAAU;AACjE,uDAAuD,IAAI,CAACW,mBAAoB;AAChF;AACA,mCAAoC;AACpC;AACA;AACA,iBAAkB;AAClB;AACA,KAAK;MACH;IAAC;MAAAhE,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAA6D,aAAuBC,YAAY,EAAE;QAAA,IAAAC,qBAAA;QACnCC,IAAA,CAAAC,eAAA,CA/QS7E,aAAa,CAAA8E,SAAA,yBAAAC,IAAA,OA+QHL,YAAY;QAE/B,IAAI,CAAC,IAAI,CAACvC,QAAQ,EAAE;UAClB;QACF;QAEA,MAAM6C,MAAM,GAAG,IAAIC,eAAe,CAACC,QAAQ,CAACC,MAAM,CAAC;QACnD,IAAI,CAACC,WAAW,CAACJ,MAAM,CAACK,GAAG,CAAC,QAAQ,CAAC,IAAI/D,SAAS,CAAC;QAEnD,IAAI,CAACH,SAAS,IAAAwD,qBAAA,GAAG,IAAI,CAACW,cAAc,CAACC,IAAI,CACtCC,KAAK,IAAKA,KAAK,CAACC,SAAS,KAAK,IAAI,CAACtD,QACtC,CAAC,cAAAwC,qBAAA,uBAFgBA,qBAAA,CAEde,SAAS;MACd;IAAC;MAAAlF,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAA+E,WAAkBjB,YAAY,EAAE;QAC9BE,IAAA,CAAAC,eAAA,CA9RS7E,aAAa,CAAA8E,SAAA,uBAAAC,IAAA,OA8RLL,YAAY;;QAE7B;QACA,IAAIA,YAAY,CAACW,GAAG,CAAC,UAAU,CAAC,EAAE;UAChC,IAAI,CAACvC,OAAO,GAAGxB,SAAS;UACxB,IAAI,CAAC2B,MAAM,GAAG3B,SAAS;UACvB,IAAI,CAACqB,MAAM,GAAGrB,SAAS;UACvB,IAAI,CAACiD,eAAe,GAAGjD,SAAS;UAChC,IAAI,IAAI,CAACa,QAAQ,EAAE;YAAA,IAAAyD,sBAAA;YACjB,IAAI,CAACR,WAAW,CAAC,CAAC;YAElB,IAAI,CAACjE,SAAS,IAAAyE,sBAAA,GAAG,IAAI,CAACN,cAAc,CAACC,IAAI,CACtCC,KAAK,IAAKA,KAAK,CAACC,SAAS,KAAK,IAAI,CAACtD,QACtC,CAAC,cAAAyD,sBAAA,uBAFgBA,sBAAA,CAEdF,SAAS;UACd;QACF;QAEA,IAAIhB,YAAY,CAACmB,GAAG,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC5C,MAAM,EAAE;UAC7C,IAAI,CAACN,MAAM,GAAGrB,SAAS;UACvB,IAAI,CAACiD,eAAe,GAAGjD,SAAS;UAChC,IAAI,CAACwE,UAAU,CAAC,CAAC;QACnB;MACF;IAAC;MAAAtF,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAsC,gBAAA,EAA0B;QACxB,MAAM6C,QAAQ,GAAG,IAAI,CAACjD,OAAO,CAAEkD,SAAS,CAAEC,EAAE,IAAKA,EAAE,CAACjD,MAAM,KAAK,IAAI,CAACC,MAAM,CAAC;QAC3E,IAAI,CAACA,MAAM,GAAG,IAAI,CAACH,OAAO,CAAEiD,QAAQ,GAAG,CAAC,CAAC,CAAC/C,MAAM;QAChD,IAAI,CAACa,SAAS,GAAGvC,SAAS;MAC5B;IAAC;MAAAd,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAA+C,gBAAA,EAA0B;QACxB,MAAMoC,QAAQ,GAAG,IAAI,CAACjD,OAAO,CAAEkD,SAAS,CAAEC,EAAE,IAAKA,EAAE,CAACjD,MAAM,KAAK,IAAI,CAACC,MAAM,CAAC;QAC3E,IAAI,CAACA,MAAM,GAAG,IAAI,CAACH,OAAO,CAAEiD,QAAQ,GAAG,CAAC,CAAC,CAAC/C,MAAM;QAChD,IAAI,CAACa,SAAS,GAAGvC,SAAS;MAC5B;IAAC;MAAAd,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAwC,WAAmB8C,EAAE,EAAE;QACrB,IAAI,CAACjD,MAAM,GAAGiD,EAAE,CAACC,MAAM,CAACvF,KAAK;QAC7B,IAAI,CAACiD,SAAS,GAAGvC,SAAS;MAC5B;IAAC;MAAAd,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAmD,UAAkBmC,EAAE,EAAE;QACpB,IAAI,CAACrC,SAAS,GAAGqC,EAAE,CAACE,MAAM;MAC5B;IAAC;MAAA5F,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAA6B,eAAA,EAAyB;QACvB,IAAI,CAAC2C,WAAW,CAAC,CAAC;MACpB;IAAC;MAAA5E,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,eAAAwE,YAA0BiB,KAAc,EAAE;QACxC,IAAI,CAACvD,OAAO,GAAG,MAAMlD,UAAU,CAAC,IAAI,CAACwB,IAAI,EAAE,QAAQ,EAAE,IAAI,CAACe,QAAQ,CAAC;QACnE;QACA,IAAI,CAACW,OAAO,CAACwD,OAAO,CAAC,CAAC;QAEtB,IAAID,KAAK,EAAE;UACT,IAAI,CAACpD,MAAM,GAAGoD,KAAK;QACrB;;QAEA;QACA,IACE,IAAI,CAACpD,MAAM,IACX,CAAC,IAAI,CAACH,OAAO,CAACyD,IAAI,CAAElD,KAAK,IAAKA,KAAK,CAACL,MAAM,KAAK,IAAI,CAACC,MAAM,CAAC,EAC3D;UACA,IAAI,CAACA,MAAM,GAAG3B,SAAS;UACvB,IAAI,CAACuC,SAAS,GAAGvC,SAAS;;UAE1B;UACA,IAAI+E,KAAK,EAAE;YACT,MAAMrB,MAAM,GAAG,IAAIC,eAAe,CAACC,QAAQ,CAACC,MAAM,CAAC;YACnDH,MAAM,CAACwB,MAAM,CAAC,QAAQ,CAAC;YACvBC,OAAO,CAACC,YAAY,CAClB,IAAI,EACJ,EAAE,EACD,GAAExB,QAAQ,CAACyB,QAAS,IAAG3B,MAAM,CAAC4B,QAAQ,CAAC,CAAE,EAC5C,CAAC;UACH;UAEA,MAAM/G,eAAe,CAAC,IAAI,EAAE;YAC1BgH,IAAI,EAAE;UACR,CAAC,CAAC;QACJ;;QAEA;QACA,IAAI,CAAC,IAAI,CAAC5D,MAAM,IAAI,IAAI,CAACH,OAAO,CAACC,MAAM,GAAG,CAAC,EAAE;UAC3C,IAAI,CAACE,MAAM,GAAG,IAAI,CAACH,OAAO,CAAC,CAAC,CAAC,CAACE,MAAM;QACtC;MACF;IAAC;MAAAxC,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,eAAAkF,WAAA,EAA2B;QACzB,MAAMzC,KAAK,GAAG,MAAM1D,SAAS,CAC3B,IAAI,CAACyB,IAAI,EACT,QAAQ,EACR,IAAI,CAACe,QAAQ,EACb,IAAI,CAACc,MACP,CAAC;QACD,IAAI,CAACsB,eAAe,GAAGhF,iBAAiB,CAAC,IAAI,CAAC6B,IAAI,EAAE,SAAS,CAAC,GAC1D,MAAM1B,wBAAwB,CAC5B,IAAI,CAAC0B,IAAI,EACTiC,KAAK,CAACE,SAAS,CAACC,KAAK,EACrBH,KAAK,CAACyD,OAAO,CAACC,EAChB,CAAC,GACD,EAAE;QAEN,IAAI,CAACpE,MAAM,GAAGU,KAAK;MACrB;IAAC;MAAA7C,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAgC,eAAA,EAAyB;QACvB,MAAMoE,GAAG,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;QACvCF,GAAG,CAACG,QAAQ,GAAI,SAAQ,IAAI,CAAChG,SAAU,IACrC,IAAI,CAACwB,MAAM,CAAEY,SAAS,CAACC,KACxB,OAAM;QACPwD,GAAG,CAACI,IAAI,GAAI,uCAAsCC,SAAS,CACzDC,IAAI,CAACC,SAAS,CACZ;UACElE,KAAK,EAAE,IAAI,CAACV,MAAM;UAClB6E,cAAc,EAAE,IAAI,CAACjD;QACvB,CAAC,EACDjD,SAAS,EACT,CACF,CACF,CAAE,EAAC;QACH0F,GAAG,CAACS,KAAK,CAAC,CAAC;MACb;IAAC;MAAAjH,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAoB,aAAA,EAAuB;QACrB,MAAM0F,SAAS,GAAGC,MAAM,CAAC,wBAAwB,CAAC;QAClD,IAAI,CAACD,SAAS,EAAE;UACd;QACF;QACAE,YAAY,CAACC,QAAQ,GAAGH,SAAS;QACjC,IAAI,CAACI,eAAe,CAACJ,SAAS,CAAC;MACjC;IAAC;MAAAlH,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAqB,uBAAA,EAAiC;QAC/B,IAAI2F,YAAY,CAACC,QAAQ,EAAE;UACzB,IAAI,CAACC,eAAe,CAACF,YAAY,CAACC,QAAQ,CAAC;QAC7C;MACF;IAAC;MAAArH,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAkH,gBAAwBJ,SAAiB,EAAE;QACzC,MAAMK,SAAS,GAAGT,IAAI,CAACU,KAAK,CAACN,SAAS,CAAC;QACvC,IAAI,CAAC/E,MAAM,GAAGoF,SAAS,CAAC1E,KAAK;QAC7B,IAAI,CAACkB,eAAe,GAAGwD,SAAS,CAACP,cAAc;MACjD;IAAC;MAAAhH,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAyD,SAAiB6B,EAAS,EAAE;QAC1B,IAAI,CAAC9B,KAAK,GAAI8B,EAAE,CAACC,MAAM,CAASlC,IAAI;MACtC;IAAC;MAAAzD,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAA4D,oBAA4B0B,EAAe,EAAE;QAC3C,MAAMpC,IAAI,GAAGoC,EAAE,CAACE,MAAM,CAACxF,KAAK;QAC5B,MAAMqH,KAAK,GAAG,IAAI,CAACzG,MAAM,CAAEC,YAAY;QACvC,IAAIwG,KAAK,CAACnE,IAAI,CAAC,EAAE;UACf,IAAI,CAACD,SAAS,GAAGoE,KAAK,CAACnE,IAAI,CAAC;QAC9B;MACF;IAAC;MAAAtD,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,eAAA0B,UAAA,EAA0B;QACxB,IAAI,CAAC,IAAI,CAACnB,SAAS,EAAE;UACnB;QACF;QACApB,SAAS,CAAC,IAAI,EAAE,gBAAgB,EAAE;UAAEmI,QAAQ,EAAE,IAAI,CAAC/G;QAAU,CAAC,CAAC;MACjE;IAAC;MAAAX,IAAA;MAAA2H,MAAA;MAAAxH,GAAA;MAAAC,KAAA,EAED,SAAAwH,OAAA,EAAoC;QAClC,OAAO,CACLtI,OAAO,EACPL,cAAc,EACdX,GAAI;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,CACF;MACH;IAAC;EAAA;AAAA,GAlfgCE,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}