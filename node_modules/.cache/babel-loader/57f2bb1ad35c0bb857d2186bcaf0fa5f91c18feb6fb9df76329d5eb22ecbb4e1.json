{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport { html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport \"../../../../components/ha-form/ha-form\";\nexport let HuiNumericInputCardFeatureEditor = _decorate([customElement(\"hui-numeric-input-card-feature-editor\")], function (_initialize, _LitElement) {\n  class HuiNumericInputCardFeatureEditor extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HuiNumericInputCardFeatureEditor,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"context\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_config\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"setConfig\",\n      value: function setConfig(config) {\n        this._config = config;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_schema\",\n      value() {\n        return memoizeOne(localize => [{\n          name: \"style\",\n          selector: {\n            select: {\n              multiple: false,\n              mode: \"list\",\n              options: [\"slider\", \"buttons\"].map(mode => ({\n                value: mode,\n                label: localize(`ui.panel.lovelace.editor.features.types.numeric-input.style_list.${mode}`)\n              }))\n            }\n          }\n        }]);\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this.hass || !this._config) {\n          return nothing;\n        }\n        const data = {\n          style: \"buttons\",\n          ...this._config\n        };\n        const schema = this._schema(this.hass.localize);\n        return html`\n      <ha-form\n        .hass=${this.hass}\n        .data=${data}\n        .schema=${schema}\n        .computeLabel=${this._computeLabelCallback}\n        @value-changed=${this._valueChanged}\n      ></ha-form>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_valueChanged\",\n      value: function _valueChanged(ev) {\n        fireEvent(this, \"config-changed\", {\n          config: ev.detail.value\n        });\n      }\n    }, {\n      kind: \"field\",\n      key: \"_computeLabelCallback\",\n      value() {\n        return schema => this.hass.localize(`ui.panel.lovelace.editor.features.types.numeric-input.${schema.name}`);\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["html","LitElement","nothing","customElement","property","state","memoizeOne","fireEvent","HuiNumericInputCardFeatureEditor","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","setConfig","config","_config","localize","name","selector","select","multiple","mode","options","map","label","render","hass","data","style","schema","_schema","_computeLabelCallback","_valueChanged","ev","detail"],"sources":["/workspaces/frontend/src/panels/lovelace/editor/config-elements/hui-numeric-input-card-feature-editor.ts"],"sourcesContent":["import { html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport \"../../../../components/ha-form/ha-form\";\nimport type { SchemaUnion } from \"../../../../components/ha-form/types\";\nimport type { HomeAssistant } from \"../../../../types\";\nimport {\n  NumericInputCardFeatureConfig,\n  LovelaceCardFeatureContext,\n} from \"../../card-features/types\";\nimport type { LovelaceCardFeatureEditor } from \"../../types\";\nimport { LocalizeFunc } from \"../../../../common/translations/localize\";\n\n@customElement(\"hui-numeric-input-card-feature-editor\")\nexport class HuiNumericInputCardFeatureEditor\n  extends LitElement\n  implements LovelaceCardFeatureEditor\n{\n  @property({ attribute: false }) public hass?: HomeAssistant;\n\n  @property({ attribute: false }) public context?: LovelaceCardFeatureContext;\n\n  @state() private _config?: NumericInputCardFeatureConfig;\n\n  public setConfig(config: NumericInputCardFeatureConfig): void {\n    this._config = config;\n  }\n\n  private _schema = memoizeOne(\n    (localize: LocalizeFunc) =>\n      [\n        {\n          name: \"style\",\n          selector: {\n            select: {\n              multiple: false,\n              mode: \"list\",\n              options: [\"slider\", \"buttons\"].map((mode) => ({\n                value: mode,\n                label: localize(\n                  `ui.panel.lovelace.editor.features.types.numeric-input.style_list.${mode}`\n                ),\n              })),\n            },\n          },\n        },\n      ] as const\n  );\n\n  protected render() {\n    if (!this.hass || !this._config) {\n      return nothing;\n    }\n\n    const data: NumericInputCardFeatureConfig = {\n      style: \"buttons\",\n      ...this._config,\n    };\n\n    const schema = this._schema(this.hass.localize);\n\n    return html`\n      <ha-form\n        .hass=${this.hass}\n        .data=${data}\n        .schema=${schema}\n        .computeLabel=${this._computeLabelCallback}\n        @value-changed=${this._valueChanged}\n      ></ha-form>\n    `;\n  }\n\n  private _valueChanged(ev: CustomEvent): void {\n    fireEvent(this, \"config-changed\", { config: ev.detail.value });\n  }\n\n  private _computeLabelCallback = (\n    schema: SchemaUnion<ReturnType<typeof this._schema>>\n  ) =>\n    this.hass!.localize(\n      `ui.panel.lovelace.editor.features.types.numeric-input.${schema.name}`\n    );\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-numeric-input-card-feature-editor\": HuiNumericInputCardFeatureEditor;\n  }\n}\n"],"mappings":";AAAA,SAASA,IAAI,EAAEC,UAAU,EAAEC,OAAO,QAAQ,KAAK;AAC/C,SAASC,aAAa,EAAEC,QAAQ,EAAEC,KAAK,QAAQ,gBAAgB;AAC/D,OAAOC,UAAU,MAAM,aAAa;AACpC,SAASC,SAAS,QAAQ,mCAAmC;AAC7D,OAAO,wCAAwC;AAU/C,WACaC,gCAAgC,GAAAC,SAAA,EAD5CN,aAAa,CAAC,uCAAuC,CAAC,aAAAO,WAAA,EAAAC,WAAA;EAAvD,MACaH,gCAAgC,SAAAG,WAAA,CAG7C;IAAAC,YAAA,GAAAC,IAAA;MAAA,SAAAA,IAAA;MAAAH,WAAA;IAAA;EAiEA;EAAC;IAAAI,CAAA,EApEYN,gCAAgC;IAAAO,CAAA;MAAAC,IAAA;MAAAC,UAAA,GAI1Cb,QAAQ,CAAC;QAAEc,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAC,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAE9Bb,QAAQ,CAAC;QAAEc,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAC,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAE9BZ,KAAK,CAAC,CAAC;MAAAc,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAER,SAAAC,UAAiBC,MAAqC,EAAQ;QAC5D,IAAI,CAACC,OAAO,GAAGD,MAAM;MACvB;IAAC;MAAAN,IAAA;MAAAG,GAAA;MAAAC,MAAA;QAAA,OAEiBd,UAAU,CACzBkB,QAAsB,IACrB,CACE;UACEC,IAAI,EAAE,OAAO;UACbC,QAAQ,EAAE;YACRC,MAAM,EAAE;cACNC,QAAQ,EAAE,KAAK;cACfC,IAAI,EAAE,MAAM;cACZC,OAAO,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC,CAACC,GAAG,CAAEF,IAAI,KAAM;gBAC5CT,KAAK,EAAES,IAAI;gBACXG,KAAK,EAAER,QAAQ,CACZ,oEAAmEK,IAAK,EAC3E;cACF,CAAC,CAAC;YACJ;UACF;QACF,CAAC,CAEP,CAAC;MAAA;IAAA;MAAAb,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAa,OAAA,EAAmB;QACjB,IAAI,CAAC,IAAI,CAACC,IAAI,IAAI,CAAC,IAAI,CAACX,OAAO,EAAE;UAC/B,OAAOrB,OAAO;QAChB;QAEA,MAAMiC,IAAmC,GAAG;UAC1CC,KAAK,EAAE,SAAS;UAChB,GAAG,IAAI,CAACb;QACV,CAAC;QAED,MAAMc,MAAM,GAAG,IAAI,CAACC,OAAO,CAAC,IAAI,CAACJ,IAAI,CAACV,QAAQ,CAAC;QAE/C,OAAOxB,IAAK;AAChB;AACA,gBAAgB,IAAI,CAACkC,IAAK;AAC1B,gBAAgBC,IAAK;AACrB,kBAAkBE,MAAO;AACzB,wBAAwB,IAAI,CAACE,qBAAsB;AACnD,yBAAyB,IAAI,CAACC,aAAc;AAC5C;AACA,KAAK;MACH;IAAC;MAAAxB,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAoB,cAAsBC,EAAe,EAAQ;QAC3ClC,SAAS,CAAC,IAAI,EAAE,gBAAgB,EAAE;UAAEe,MAAM,EAAEmB,EAAE,CAACC,MAAM,CAACtB;QAAM,CAAC,CAAC;MAChE;IAAC;MAAAJ,IAAA;MAAAG,GAAA;MAAAC,MAAA;QAAA,OAGCiB,MAAoD,IAEpD,IAAI,CAACH,IAAI,CAAEV,QAAQ,CAChB,yDAAwDa,MAAM,CAACZ,IAAK,EACvE,CAAC;MAAA;IAAA;EAAA;AAAA,GAlEKxB,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}