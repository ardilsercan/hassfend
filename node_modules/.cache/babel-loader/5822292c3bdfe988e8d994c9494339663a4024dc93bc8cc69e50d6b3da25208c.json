{"ast":null,"code":"/* eslint-disable max-classes-per-file */\n\nimport { supportsFeature } from \"../common/entity/supports-feature\";\nimport { ClimateEntityFeature } from \"../data/climate\";\nconst now = () => new Date().toISOString();\nconst randomTime = () => new Date(new Date().getTime() - Math.random() * 80 * 60 * 1000).toISOString();\nexport class Entity {\n  constructor(domain, objectId, state, baseAttributes) {\n    this.domain = void 0;\n    this.objectId = void 0;\n    this.entityId = void 0;\n    this.lastChanged = void 0;\n    this.lastUpdated = void 0;\n    this.state = void 0;\n    this.baseAttributes = void 0;\n    this.attributes = void 0;\n    this.hass = void 0;\n    this.domain = domain;\n    this.objectId = objectId;\n    this.entityId = `${domain}.${objectId}`;\n    this.lastChanged = randomTime();\n    this.lastUpdated = randomTime();\n    this.state = String(state);\n    // These are the attributes that we always write to the state machine\n    this.baseAttributes = baseAttributes;\n    this.attributes = baseAttributes;\n  }\n  async handleService(domain, service, data) {\n    // eslint-disable-next-line\n    console.log(`Unmocked service for ${this.entityId}: ${domain}/${service}`, data);\n  }\n  update(state, attributes = {}) {\n    this.state = state;\n    this.lastUpdated = now();\n    this.lastChanged = state === this.state ? this.lastChanged : this.lastUpdated;\n    this.attributes = {\n      ...this.baseAttributes,\n      ...attributes\n    };\n\n    // eslint-disable-next-line\n    console.log(\"update\", this.entityId, this);\n    this.hass.updateStates({\n      [this.entityId]: this.toState()\n    });\n  }\n  toState() {\n    return {\n      entity_id: this.entityId,\n      state: this.state,\n      attributes: this.attributes,\n      last_changed: this.lastChanged,\n      last_updated: this.lastUpdated\n    };\n  }\n}\nclass LightEntity extends Entity {\n  async handleService(domain, service, data) {\n    if (![\"homeassistant\", this.domain].includes(domain)) {\n      return;\n    }\n    if (service === \"turn_on\") {\n      // eslint-disable-next-line\n      let {\n        hs_color,\n        brightness_pct,\n        rgb_color,\n        color_temp\n      } = data;\n      const attrs = {\n        ...this.attributes\n      };\n      if (brightness_pct) {\n        attrs.brightness = 255 * brightness_pct / 100;\n      } else if (!attrs.brightness) {\n        attrs.brightness = 255;\n      }\n      if (hs_color) {\n        attrs.color_mode = \"hs\";\n        attrs.hs_color = hs_color;\n      }\n      if (rgb_color) {\n        attrs.color_mode = \"rgb\";\n        attrs.rgb_color = rgb_color;\n      }\n      if (color_temp) {\n        attrs.color_mode = \"color_temp\";\n        attrs.color_temp = color_temp;\n        delete attrs.rgb_color;\n      }\n      this.update(\"on\", attrs);\n    } else if (service === \"turn_off\") {\n      this.update(\"off\");\n    } else if (service === \"toggle\") {\n      if (this.state === \"on\") {\n        this.handleService(domain, \"turn_off\", data);\n      } else {\n        this.handleService(domain, \"turn_on\", data);\n      }\n    } else {\n      super.handleService(domain, service, data);\n    }\n  }\n}\nclass ToggleEntity extends Entity {\n  async handleService(domain, service, data) {\n    if (![\"homeassistant\", this.domain].includes(domain)) {\n      return;\n    }\n    if (service === \"turn_on\") {\n      this.update(\"on\", this.attributes);\n    } else if (service === \"turn_off\") {\n      this.update(\"off\", this.attributes);\n    } else if (service === \"toggle\") {\n      if (this.state === \"on\") {\n        this.handleService(domain, \"turn_off\", data);\n      } else {\n        this.handleService(domain, \"turn_on\", data);\n      }\n    } else {\n      super.handleService(domain, service, data);\n    }\n  }\n}\nclass LockEntity extends Entity {\n  async handleService(domain, service,\n  // @ts-ignore\n  data) {\n    if (domain !== this.domain) {\n      return;\n    }\n    if (service === \"lock\") {\n      this.update(\"locked\");\n    } else if (service === \"unlock\") {\n      this.update(\"unlocked\");\n    } else {\n      super.handleService(domain, service, data);\n    }\n  }\n}\nclass AlarmControlPanelEntity extends Entity {\n  async handleService(domain, service,\n  // @ts-ignore\n  data) {\n    if (domain !== this.domain) {\n      return;\n    }\n    const serviceStateMap = {\n      alarm_arm_night: \"armed_night\",\n      alarm_arm_home: \"armed_home\",\n      alarm_arm_away: \"armed_away\",\n      alarm_disarm: \"disarmed\"\n    };\n    if (serviceStateMap[service]) {\n      this.update(serviceStateMap[service], this.baseAttributes);\n    } else {\n      super.handleService(domain, service, data);\n    }\n  }\n}\nclass MediaPlayerEntity extends Entity {\n  async handleService(domain, service,\n  // @ts-ignore\n  data) {\n    if (domain !== this.domain) {\n      return;\n    }\n    if (service === \"media_play_pause\") {\n      this.update(this.state === \"playing\" ? \"paused\" : \"playing\", this.attributes);\n    } else {\n      super.handleService(domain, service, data);\n    }\n  }\n}\nclass CoverEntity extends Entity {\n  async handleService(domain, service,\n  // @ts-ignore\n  data) {\n    if (domain !== this.domain) {\n      return;\n    }\n    if (service === \"open_cover\") {\n      this.update(\"open\");\n    } else if (service === \"close_cover\") {\n      this.update(\"closing\");\n    } else {\n      super.handleService(domain, service, data);\n    }\n  }\n}\nclass InputNumberEntity extends Entity {\n  async handleService(domain, service,\n  // @ts-ignore\n  data) {\n    if (domain !== this.domain) {\n      return;\n    }\n    if (service === \"set_value\") {\n      this.update(\"\" + data.value);\n    } else {\n      super.handleService(domain, service, data);\n    }\n  }\n}\nclass InputTextEntity extends Entity {\n  async handleService(domain, service,\n  // @ts-ignore\n  data) {\n    if (domain !== this.domain) {\n      return;\n    }\n    if (service === \"set_value\") {\n      this.update(\"\" + data.value);\n    } else {\n      super.handleService(domain, service, data);\n    }\n  }\n}\nclass InputSelectEntity extends Entity {\n  async handleService(domain, service,\n  // @ts-ignore\n  data) {\n    if (domain !== this.domain) {\n      return;\n    }\n    if (service === \"select_option\") {\n      this.update(\"\" + data.option);\n    } else {\n      super.handleService(domain, service, data);\n    }\n  }\n}\nclass ClimateEntity extends Entity {\n  async handleService(domain, service, data) {\n    if (domain !== this.domain) {\n      return;\n    }\n    if (service === \"set_hvac_mode\") {\n      this.update(data.hvac_mode, this.attributes);\n    } else if ([\"set_temperature\", \"set_humidity\", \"set_hvac_mode\", \"set_fan_mode\", \"set_preset_mode\", \"set_swing_mode\", \"set_aux_heat\"].includes(service)) {\n      const {\n        entity_id,\n        ...toSet\n      } = data;\n      this.update(this.state, {\n        ...this.attributes,\n        ...toSet\n      });\n    } else {\n      super.handleService(domain, service, data);\n    }\n  }\n  toState() {\n    const state = super.toState();\n    state.attributes.hvac_action = undefined;\n    if (supportsFeature(state, ClimateEntityFeature.TARGET_TEMPERATURE)) {\n      const current = state.attributes.current_temperature;\n      const target = state.attributes.temperature;\n      if (state.state === \"heat\") {\n        state.attributes.hvac_action = target >= current ? \"heating\" : \"idle\";\n      }\n      if (state.state === \"cool\") {\n        state.attributes.hvac_action = target <= current ? \"cooling\" : \"idle\";\n      }\n    }\n    if (supportsFeature(state, ClimateEntityFeature.TARGET_TEMPERATURE_RANGE)) {\n      const current = state.attributes.current_temperature;\n      const lowTarget = state.attributes.target_temp_low;\n      const highTarget = state.attributes.target_temp_high;\n      state.attributes.hvac_action = lowTarget >= current ? \"heating\" : highTarget <= current ? \"cooling\" : \"idle\";\n    }\n    return state;\n  }\n}\nclass WaterHeaterEntity extends Entity {\n  async handleService(domain, service, data) {\n    if (domain !== this.domain) {\n      return;\n    }\n    if (service === \"set_operation_mode\") {\n      this.update(data.operation_mode, this.attributes);\n    } else if ([\"set_temperature\"].includes(service)) {\n      const {\n        entity_id,\n        ...toSet\n      } = data;\n      this.update(this.state, {\n        ...this.attributes,\n        ...toSet\n      });\n    } else {\n      super.handleService(domain, service, data);\n    }\n  }\n}\nclass GroupEntity extends Entity {\n  async handleService(domain, service, data) {\n    if (![\"homeassistant\", this.domain].includes(domain)) {\n      return;\n    }\n    await Promise.all(this.attributes.entity_id.map(ent => {\n      const entity = this.hass.mockEntities[ent];\n      return entity.handleService(entity.domain, service, data);\n    }));\n    this.update(service === \"turn_on\" ? \"on\" : \"off\");\n  }\n}\nconst TYPES = {\n  alarm_control_panel: AlarmControlPanelEntity,\n  climate: ClimateEntity,\n  cover: CoverEntity,\n  group: GroupEntity,\n  input_boolean: ToggleEntity,\n  input_number: InputNumberEntity,\n  input_text: InputTextEntity,\n  input_select: InputSelectEntity,\n  light: LightEntity,\n  lock: LockEntity,\n  media_player: MediaPlayerEntity,\n  switch: ToggleEntity,\n  water_heater: WaterHeaterEntity\n};\nexport const getEntity = (domain, objectId, state, baseAttributes = {}) => new (TYPES[domain] || Entity)(domain, objectId, state, baseAttributes);\nexport const convertEntities = states => Object.keys(states).map(entId => {\n  const stateObj = states[entId];\n  const [domain, objectId] = entId.split(\".\", 2);\n  return getEntity(domain, objectId, stateObj.state, stateObj.attributes);\n});","map":{"version":3,"names":["supportsFeature","ClimateEntityFeature","now","Date","toISOString","randomTime","getTime","Math","random","Entity","constructor","domain","objectId","state","baseAttributes","entityId","lastChanged","lastUpdated","attributes","hass","String","handleService","service","data","console","log","update","updateStates","toState","entity_id","last_changed","last_updated","LightEntity","includes","hs_color","brightness_pct","rgb_color","color_temp","attrs","brightness","color_mode","ToggleEntity","LockEntity","AlarmControlPanelEntity","serviceStateMap","alarm_arm_night","alarm_arm_home","alarm_arm_away","alarm_disarm","MediaPlayerEntity","CoverEntity","InputNumberEntity","value","InputTextEntity","InputSelectEntity","option","ClimateEntity","hvac_mode","toSet","hvac_action","undefined","TARGET_TEMPERATURE","current","current_temperature","target","temperature","TARGET_TEMPERATURE_RANGE","lowTarget","target_temp_low","highTarget","target_temp_high","WaterHeaterEntity","operation_mode","GroupEntity","Promise","all","map","ent","entity","mockEntities","TYPES","alarm_control_panel","climate","cover","group","input_boolean","input_number","input_text","input_select","light","lock","media_player","switch","water_heater","getEntity","convertEntities","states","Object","keys","entId","stateObj","split"],"sources":["/workspaces/frontend/src/fake_data/entity.ts"],"sourcesContent":["/* eslint-disable max-classes-per-file */\nimport {\n  HassEntity,\n  HassEntityAttributeBase,\n} from \"home-assistant-js-websocket\";\nimport { supportsFeature } from \"../common/entity/supports-feature\";\nimport { ClimateEntityFeature } from \"../data/climate\";\n\nconst now = () => new Date().toISOString();\nconst randomTime = () =>\n  new Date(new Date().getTime() - Math.random() * 80 * 60 * 1000).toISOString();\n\nexport class Entity {\n  public domain: string;\n\n  public objectId: string;\n\n  public entityId: string;\n\n  public lastChanged: string;\n\n  public lastUpdated: string;\n\n  public state: string;\n\n  public baseAttributes: HassEntityAttributeBase & Record<string, any>;\n\n  public attributes: HassEntityAttributeBase & Record<string, any>;\n\n  public hass?: any;\n\n  constructor(domain, objectId, state, baseAttributes) {\n    this.domain = domain;\n    this.objectId = objectId;\n    this.entityId = `${domain}.${objectId}`;\n    this.lastChanged = randomTime();\n    this.lastUpdated = randomTime();\n    this.state = String(state);\n    // These are the attributes that we always write to the state machine\n    this.baseAttributes = baseAttributes;\n    this.attributes = baseAttributes;\n  }\n\n  public async handleService(domain, service, data: Record<string, any>) {\n    // eslint-disable-next-line\n    console.log(\n      `Unmocked service for ${this.entityId}: ${domain}/${service}`,\n      data\n    );\n  }\n\n  public update(state, attributes = {}) {\n    this.state = state;\n    this.lastUpdated = now();\n    this.lastChanged =\n      state === this.state ? this.lastChanged : this.lastUpdated;\n    this.attributes = { ...this.baseAttributes, ...attributes };\n\n    // eslint-disable-next-line\n    console.log(\"update\", this.entityId, this);\n\n    this.hass.updateStates({\n      [this.entityId]: this.toState(),\n    });\n  }\n\n  public toState() {\n    return {\n      entity_id: this.entityId,\n      state: this.state,\n      attributes: this.attributes,\n      last_changed: this.lastChanged,\n      last_updated: this.lastUpdated,\n    };\n  }\n}\n\nclass LightEntity extends Entity {\n  public async handleService(domain, service, data) {\n    if (![\"homeassistant\", this.domain].includes(domain)) {\n      return;\n    }\n\n    if (service === \"turn_on\") {\n      // eslint-disable-next-line\n      let { hs_color, brightness_pct, rgb_color, color_temp } = data;\n      const attrs = { ...this.attributes };\n      if (brightness_pct) {\n        attrs.brightness = (255 * brightness_pct) / 100;\n      } else if (!attrs.brightness) {\n        attrs.brightness = 255;\n      }\n      if (hs_color) {\n        attrs.color_mode = \"hs\";\n        attrs.hs_color = hs_color;\n      }\n      if (rgb_color) {\n        attrs.color_mode = \"rgb\";\n        attrs.rgb_color = rgb_color;\n      }\n      if (color_temp) {\n        attrs.color_mode = \"color_temp\";\n        attrs.color_temp = color_temp;\n        delete attrs.rgb_color;\n      }\n      this.update(\"on\", attrs);\n    } else if (service === \"turn_off\") {\n      this.update(\"off\");\n    } else if (service === \"toggle\") {\n      if (this.state === \"on\") {\n        this.handleService(domain, \"turn_off\", data);\n      } else {\n        this.handleService(domain, \"turn_on\", data);\n      }\n    } else {\n      super.handleService(domain, service, data);\n    }\n  }\n}\n\nclass ToggleEntity extends Entity {\n  public async handleService(domain, service, data) {\n    if (![\"homeassistant\", this.domain].includes(domain)) {\n      return;\n    }\n\n    if (service === \"turn_on\") {\n      this.update(\"on\", this.attributes);\n    } else if (service === \"turn_off\") {\n      this.update(\"off\", this.attributes);\n    } else if (service === \"toggle\") {\n      if (this.state === \"on\") {\n        this.handleService(domain, \"turn_off\", data);\n      } else {\n        this.handleService(domain, \"turn_on\", data);\n      }\n    } else {\n      super.handleService(domain, service, data);\n    }\n  }\n}\n\nclass LockEntity extends Entity {\n  public async handleService(\n    domain,\n    service,\n    // @ts-ignore\n    data\n  ) {\n    if (domain !== this.domain) {\n      return;\n    }\n\n    if (service === \"lock\") {\n      this.update(\"locked\");\n    } else if (service === \"unlock\") {\n      this.update(\"unlocked\");\n    } else {\n      super.handleService(domain, service, data);\n    }\n  }\n}\n\nclass AlarmControlPanelEntity extends Entity {\n  public async handleService(\n    domain,\n    service,\n    // @ts-ignore\n    data\n  ) {\n    if (domain !== this.domain) {\n      return;\n    }\n\n    const serviceStateMap = {\n      alarm_arm_night: \"armed_night\",\n      alarm_arm_home: \"armed_home\",\n      alarm_arm_away: \"armed_away\",\n      alarm_disarm: \"disarmed\",\n    };\n\n    if (serviceStateMap[service]) {\n      this.update(serviceStateMap[service], this.baseAttributes);\n    } else {\n      super.handleService(domain, service, data);\n    }\n  }\n}\n\nclass MediaPlayerEntity extends Entity {\n  public async handleService(\n    domain,\n    service,\n    // @ts-ignore\n    data\n  ) {\n    if (domain !== this.domain) {\n      return;\n    }\n\n    if (service === \"media_play_pause\") {\n      this.update(\n        this.state === \"playing\" ? \"paused\" : \"playing\",\n        this.attributes\n      );\n    } else {\n      super.handleService(domain, service, data);\n    }\n  }\n}\n\nclass CoverEntity extends Entity {\n  public async handleService(\n    domain,\n    service,\n    // @ts-ignore\n    data\n  ) {\n    if (domain !== this.domain) {\n      return;\n    }\n\n    if (service === \"open_cover\") {\n      this.update(\"open\");\n    } else if (service === \"close_cover\") {\n      this.update(\"closing\");\n    } else {\n      super.handleService(domain, service, data);\n    }\n  }\n}\n\nclass InputNumberEntity extends Entity {\n  public async handleService(\n    domain,\n    service,\n    // @ts-ignore\n    data\n  ) {\n    if (domain !== this.domain) {\n      return;\n    }\n\n    if (service === \"set_value\") {\n      this.update(\"\" + data.value);\n    } else {\n      super.handleService(domain, service, data);\n    }\n  }\n}\n\nclass InputTextEntity extends Entity {\n  public async handleService(\n    domain,\n    service,\n    // @ts-ignore\n    data\n  ) {\n    if (domain !== this.domain) {\n      return;\n    }\n\n    if (service === \"set_value\") {\n      this.update(\"\" + data.value);\n    } else {\n      super.handleService(domain, service, data);\n    }\n  }\n}\n\nclass InputSelectEntity extends Entity {\n  public async handleService(\n    domain,\n    service,\n    // @ts-ignore\n    data\n  ) {\n    if (domain !== this.domain) {\n      return;\n    }\n\n    if (service === \"select_option\") {\n      this.update(\"\" + data.option);\n    } else {\n      super.handleService(domain, service, data);\n    }\n  }\n}\n\nclass ClimateEntity extends Entity {\n  public async handleService(domain, service, data) {\n    if (domain !== this.domain) {\n      return;\n    }\n\n    if (service === \"set_hvac_mode\") {\n      this.update(data.hvac_mode, this.attributes);\n    } else if (\n      [\n        \"set_temperature\",\n        \"set_humidity\",\n        \"set_hvac_mode\",\n        \"set_fan_mode\",\n        \"set_preset_mode\",\n        \"set_swing_mode\",\n        \"set_aux_heat\",\n      ].includes(service)\n    ) {\n      const { entity_id, ...toSet } = data;\n      this.update(this.state, {\n        ...this.attributes,\n        ...toSet,\n      });\n    } else {\n      super.handleService(domain, service, data);\n    }\n  }\n\n  public toState() {\n    const state = super.toState();\n\n    state.attributes.hvac_action = undefined;\n\n    if (\n      supportsFeature(\n        state as HassEntity,\n        ClimateEntityFeature.TARGET_TEMPERATURE\n      )\n    ) {\n      const current = state.attributes.current_temperature;\n      const target = state.attributes.temperature;\n      if (state.state === \"heat\") {\n        state.attributes.hvac_action = target >= current ? \"heating\" : \"idle\";\n      }\n      if (state.state === \"cool\") {\n        state.attributes.hvac_action = target <= current ? \"cooling\" : \"idle\";\n      }\n    }\n    if (\n      supportsFeature(\n        state as HassEntity,\n        ClimateEntityFeature.TARGET_TEMPERATURE_RANGE\n      )\n    ) {\n      const current = state.attributes.current_temperature;\n      const lowTarget = state.attributes.target_temp_low;\n      const highTarget = state.attributes.target_temp_high;\n      state.attributes.hvac_action =\n        lowTarget >= current\n          ? \"heating\"\n          : highTarget <= current\n            ? \"cooling\"\n            : \"idle\";\n    }\n    return state;\n  }\n}\n\nclass WaterHeaterEntity extends Entity {\n  public async handleService(domain, service, data) {\n    if (domain !== this.domain) {\n      return;\n    }\n\n    if (service === \"set_operation_mode\") {\n      this.update(data.operation_mode, this.attributes);\n    } else if ([\"set_temperature\"].includes(service)) {\n      const { entity_id, ...toSet } = data;\n      this.update(this.state, {\n        ...this.attributes,\n        ...toSet,\n      });\n    } else {\n      super.handleService(domain, service, data);\n    }\n  }\n}\n\nclass GroupEntity extends Entity {\n  public async handleService(domain, service, data) {\n    if (![\"homeassistant\", this.domain].includes(domain)) {\n      return;\n    }\n\n    await Promise.all(\n      this.attributes.entity_id.map((ent) => {\n        const entity = this.hass.mockEntities[ent];\n        return entity.handleService(entity.domain, service, data);\n      })\n    );\n\n    this.update(service === \"turn_on\" ? \"on\" : \"off\");\n  }\n}\n\nconst TYPES = {\n  alarm_control_panel: AlarmControlPanelEntity,\n  climate: ClimateEntity,\n  cover: CoverEntity,\n  group: GroupEntity,\n  input_boolean: ToggleEntity,\n  input_number: InputNumberEntity,\n  input_text: InputTextEntity,\n  input_select: InputSelectEntity,\n  light: LightEntity,\n  lock: LockEntity,\n  media_player: MediaPlayerEntity,\n  switch: ToggleEntity,\n  water_heater: WaterHeaterEntity,\n};\n\nexport const getEntity = (\n  domain,\n  objectId,\n  state,\n  baseAttributes = {}\n): Entity =>\n  new (TYPES[domain] || Entity)(domain, objectId, state, baseAttributes);\n\ntype LimitedEntity = Pick<HassEntity, \"state\" | \"attributes\" | \"entity_id\">;\n\nexport const convertEntities = (states: {\n  [entityId: string]: LimitedEntity;\n}): Entity[] =>\n  Object.keys(states).map((entId) => {\n    const stateObj = states[entId];\n    const [domain, objectId] = entId.split(\".\", 2);\n    return getEntity(domain, objectId, stateObj.state, stateObj.attributes);\n  });\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}