{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport \"@material/mwc-list/mwc-list-item\";\nconst mdiClose = \"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\";\nconst mdiDotsVertical = \"M12,16A2,2 0 0,1 14,18A2,2 0 0,1 12,20A2,2 0 0,1 10,18A2,2 0 0,1 12,16M12,10A2,2 0 0,1 14,12A2,2 0 0,1 12,14A2,2 0 0,1 10,12A2,2 0 0,1 12,10M12,4A2,2 0 0,1 14,6A2,2 0 0,1 12,8A2,2 0 0,1 10,6A2,2 0 0,1 12,4Z\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators\";\nimport { atLeastVersion } from \"../../../../src/common/config/version\";\nimport { fireEvent } from \"../../../../src/common/dom/fire_event\";\nimport { stopPropagation } from \"../../../../src/common/dom/stop_propagation\";\nimport { slugify } from \"../../../../src/common/string/slugify\";\nimport \"../../../../src/components/ha-dialog\";\nimport \"../../../../src/components/buttons/ha-progress-button\";\nimport \"../../../../src/components/ha-alert\";\nimport \"../../../../src/components/ha-button-menu\";\nimport \"../../../../src/components/ha-header-bar\";\nimport \"../../../../src/components/ha-icon-button\";\nimport { getSignedPath } from \"../../../../src/data/auth\";\nimport { fetchHassioBackupInfo, removeBackup } from \"../../../../src/data/hassio/backup\";\nimport { extractApiErrorMessage } from \"../../../../src/data/hassio/common\";\nimport { showAlertDialog, showConfirmationDialog } from \"../../../../src/dialogs/generic/show-dialog-box\";\nimport { haStyle, haStyleDialog } from \"../../../../src/resources/styles\";\nimport { fileDownload } from \"../../../../src/util/file_download\";\nimport \"../../components/supervisor-backup-content\";\nlet HassioBackupDialog = _decorate([customElement(\"dialog-hassio-backup\")], function (_initialize, _LitElement) {\n  class HassioBackupDialog extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HassioBackupDialog,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_error\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_backup\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_dialogParams\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_restoringBackup\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [query(\"supervisor-backup-content\")],\n      key: \"_backupContent\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"showDialog\",\n      value: async function showDialog(dialogParams) {\n        this._backup = await fetchHassioBackupInfo(this.hass, dialogParams.slug);\n        this._dialogParams = dialogParams;\n        this._restoringBackup = false;\n      }\n    }, {\n      kind: \"method\",\n      key: \"closeDialog\",\n      value: function closeDialog() {\n        this._backup = undefined;\n        this._dialogParams = undefined;\n        this._restoringBackup = false;\n        this._error = undefined;\n        fireEvent(this, \"dialog-closed\", {\n          dialog: this.localName\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_localize\",\n      value: function _localize(key) {\n        var _supervisor;\n        return ((_supervisor = this._dialogParams.supervisor) === null || _supervisor === void 0 ? void 0 : _supervisor.localize(`backup.${key}`)) || this._dialogParams.localize(`ui.panel.page-onboarding.restore.${key}`);\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this._dialogParams || !this._backup) {\n          return nothing;\n        }\n        return html`\n      <ha-dialog\n        open\n        scrimClickAction\n        @closed=${this.closeDialog}\n        .heading=${this._backup.name}\n      >\n        <div slot=\"heading\">\n          <ha-header-bar>\n            <span slot=\"title\">${this._backup.name}</span>\n            <ha-icon-button\n              .label=${this._localize(\"close\")}\n              .path=${mdiClose}\n              slot=\"actionItems\"\n              dialogAction=\"cancel\"\n            ></ha-icon-button>\n          </ha-header-bar>\n        </div>\n        ${this._restoringBackup ? html`<ha-circular-progress indeterminate></ha-circular-progress>` : html`\n              <supervisor-backup-content\n                .hass=${this.hass}\n                .supervisor=${this._dialogParams.supervisor}\n                .backup=${this._backup}\n                .onboarding=${this._dialogParams.onboarding || false}\n                .localize=${this._dialogParams.localize}\n                dialogInitialFocus\n              >\n              </supervisor-backup-content>\n            `}\n        ${this._error ? html`<ha-alert alert-type=\"error\">${this._error}</ha-alert>` : nothing}\n\n        <mwc-button\n          .disabled=${this._restoringBackup}\n          slot=\"secondaryAction\"\n          @click=${this._restoreClicked}\n        >\n          ${this._localize(\"restore\")}\n        </mwc-button>\n\n        ${!this._dialogParams.onboarding && this._dialogParams.supervisor ? html`<ha-button-menu\n              fixed\n              slot=\"primaryAction\"\n              @action=${this._handleMenuAction}\n              @closed=${stopPropagation}\n            >\n              <ha-icon-button\n                .label=${this._dialogParams.supervisor.localize(\"backup.more_actions\")}\n                .path=${mdiDotsVertical}\n                slot=\"trigger\"\n              ></ha-icon-button>\n              <mwc-list-item\n                >${this._dialogParams.supervisor.localize(\"backup.download_backup\")}</mwc-list-item\n              >\n              <mwc-list-item class=\"error\"\n                >${this._dialogParams.supervisor.localize(\"backup.delete_backup_title\")}</mwc-list-item\n              >\n            </ha-button-menu>` : nothing}\n      </ha-dialog>\n    `;\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [haStyle, haStyleDialog, css`\n        ha-circular-progress {\n          display: block;\n          text-align: center;\n        }\n        ha-header-bar {\n          --mdc-theme-on-primary: var(--primary-text-color);\n          --mdc-theme-primary: var(--mdc-theme-surface);\n          flex-shrink: 0;\n          display: block;\n        }\n        ha-icon-button {\n          color: var(--secondary-text-color);\n        }\n      `];\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleMenuAction\",\n      value: function _handleMenuAction(ev) {\n        switch (ev.detail.index) {\n          case 0:\n            this._downloadClicked();\n            break;\n          case 1:\n            this._deleteClicked();\n            break;\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_restoreClicked\",\n      value: async function _restoreClicked() {\n        var _this$_dialogParams, _this$_dialogParams$o;\n        const backupDetails = this._backupContent.backupDetails();\n        this._restoringBackup = true;\n        (_this$_dialogParams = this._dialogParams) === null || _this$_dialogParams === void 0 || (_this$_dialogParams$o = _this$_dialogParams.onRestoring) === null || _this$_dialogParams$o === void 0 || _this$_dialogParams$o.call(_this$_dialogParams);\n        if (this._backupContent.backupType === \"full\") {\n          await this._fullRestoreClicked(backupDetails);\n        } else {\n          await this._partialRestoreClicked(backupDetails);\n        }\n        this._restoringBackup = false;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_partialRestoreClicked\",\n      value: async function _partialRestoreClicked(backupDetails) {\n        var _this$_dialogParams2, _this$_dialogParams3;\n        const supervisor = (_this$_dialogParams2 = this._dialogParams) === null || _this$_dialogParams2 === void 0 ? void 0 : _this$_dialogParams2.supervisor;\n        if (supervisor !== undefined && supervisor.info.state !== \"running\") {\n          await showAlertDialog(this, {\n            title: supervisor.localize(\"backup.could_not_restore\"),\n            text: supervisor.localize(\"backup.restore_blocked_not_running\", {\n              state: supervisor.info.state\n            })\n          });\n          return;\n        }\n        if (!(await showConfirmationDialog(this, {\n          title: this._localize(\"confirm_restore_partial_backup_title\"),\n          text: this._localize(\"confirm_restore_partial_backup_text\"),\n          confirmText: this._localize(\"restore\"),\n          dismissText: this._localize(\"cancel\")\n        }))) {\n          return;\n        }\n        if (!((_this$_dialogParams3 = this._dialogParams) !== null && _this$_dialogParams3 !== void 0 && _this$_dialogParams3.onboarding)) {\n          try {\n            await this.hass.callApi(\"POST\", `hassio/${atLeastVersion(this.hass.config.version, 2021, 9) ? \"backups\" : \"snapshots\"}/${this._backup.slug}/restore/partial`, backupDetails);\n            this.closeDialog();\n          } catch (error) {\n            this._error = error.body.message;\n          }\n        } else {\n          var _this$_dialogParams4, _this$_dialogParams4$;\n          (_this$_dialogParams4 = this._dialogParams) === null || _this$_dialogParams4 === void 0 || (_this$_dialogParams4$ = _this$_dialogParams4.onRestoring) === null || _this$_dialogParams4$ === void 0 || _this$_dialogParams4$.call(_this$_dialogParams4);\n          await fetch(`/api/hassio/backups/${this._backup.slug}/restore/partial`, {\n            method: \"POST\",\n            body: JSON.stringify(backupDetails)\n          });\n          this.closeDialog();\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_fullRestoreClicked\",\n      value: async function _fullRestoreClicked(backupDetails) {\n        var _this$_dialogParams5, _this$_dialogParams6;\n        const supervisor = (_this$_dialogParams5 = this._dialogParams) === null || _this$_dialogParams5 === void 0 ? void 0 : _this$_dialogParams5.supervisor;\n        if (supervisor !== undefined && supervisor.info.state !== \"running\") {\n          await showAlertDialog(this, {\n            title: supervisor.localize(\"backup.could_not_restore\"),\n            text: supervisor.localize(\"backup.restore_blocked_not_running\", {\n              state: supervisor.info.state\n            })\n          });\n          return;\n        }\n        if (!(await showConfirmationDialog(this, {\n          title: this._localize(\"confirm_restore_full_backup_title\"),\n          text: this._localize(\"confirm_restore_full_backup_text\"),\n          confirmText: this._localize(\"restore\"),\n          dismissText: this._localize(\"cancel\")\n        }))) {\n          return;\n        }\n        if (!((_this$_dialogParams6 = this._dialogParams) !== null && _this$_dialogParams6 !== void 0 && _this$_dialogParams6.onboarding)) {\n          this.hass.callApi(\"POST\", `hassio/${atLeastVersion(this.hass.config.version, 2021, 9) ? \"backups\" : \"snapshots\"}/${this._backup.slug}/restore/full`, backupDetails).then(() => {\n            this.closeDialog();\n          }, error => {\n            this._error = error.body.message;\n          });\n        } else {\n          var _this$_dialogParams7, _this$_dialogParams7$;\n          (_this$_dialogParams7 = this._dialogParams) === null || _this$_dialogParams7 === void 0 || (_this$_dialogParams7$ = _this$_dialogParams7.onRestoring) === null || _this$_dialogParams7$ === void 0 || _this$_dialogParams7$.call(_this$_dialogParams7);\n          fetch(`/api/hassio/backups/${this._backup.slug}/restore/full`, {\n            method: \"POST\",\n            body: JSON.stringify(backupDetails)\n          });\n          this.closeDialog();\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_deleteClicked\",\n      value: async function _deleteClicked() {\n        var _this$_dialogParams8;\n        const supervisor = (_this$_dialogParams8 = this._dialogParams) === null || _this$_dialogParams8 === void 0 ? void 0 : _this$_dialogParams8.supervisor;\n        if (!supervisor) return;\n        if (!(await showConfirmationDialog(this, {\n          title: supervisor.localize(\"backup.confirm_delete_title\"),\n          text: supervisor.localize(\"backup.confirm_delete_text\"),\n          confirmText: supervisor.localize(\"backup.delete\"),\n          dismissText: supervisor.localize(\"backup.cancel\")\n        }))) {\n          return;\n        }\n        try {\n          await removeBackup(this.hass, this._backup.slug);\n          if (this._dialogParams.onDelete) {\n            this._dialogParams.onDelete();\n          }\n          this.closeDialog();\n        } catch (err) {\n          this._error = err.body.message;\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_downloadClicked\",\n      value: async function _downloadClicked() {\n        var _this$_dialogParams9;\n        const supervisor = (_this$_dialogParams9 = this._dialogParams) === null || _this$_dialogParams9 === void 0 ? void 0 : _this$_dialogParams9.supervisor;\n        if (!supervisor) return;\n        let signedPath;\n        try {\n          signedPath = await getSignedPath(this.hass, `/api/hassio/${atLeastVersion(this.hass.config.version, 2021, 9) ? \"backups\" : \"snapshots\"}/${this._backup.slug}/download`);\n        } catch (err) {\n          await showAlertDialog(this, {\n            text: extractApiErrorMessage(err)\n          });\n          return;\n        }\n        if (window.location.href.includes(\"ui.nabu.casa\")) {\n          const confirm = await showConfirmationDialog(this, {\n            title: supervisor.localize(\"backup.remote_download_title\"),\n            text: supervisor.localize(\"backup.remote_download_text\"),\n            confirmText: supervisor.localize(\"backup.download\"),\n            dismissText: this._localize(\"cancel\")\n          });\n          if (!confirm) {\n            return;\n          }\n        }\n        fileDownload(signedPath.path, `home_assistant_backup_${slugify(this._computeName)}.tar`);\n      }\n    }, {\n      kind: \"get\",\n      key: \"_computeName\",\n      value: function _computeName() {\n        return this._backup ? this._backup.name || this._backup.slug : \"Unnamed backup\";\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["mdiClose","mdiDotsVertical","css","html","LitElement","nothing","customElement","property","query","state","atLeastVersion","fireEvent","stopPropagation","slugify","getSignedPath","fetchHassioBackupInfo","removeBackup","extractApiErrorMessage","showAlertDialog","showConfirmationDialog","haStyle","haStyleDialog","fileDownload","HassioBackupDialog","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","showDialog","dialogParams","_backup","hass","slug","_dialogParams","_restoringBackup","closeDialog","undefined","_error","dialog","localName","_localize","_supervisor","supervisor","localize","render","name","onboarding","_restoreClicked","_handleMenuAction","static","styles","ev","detail","index","_downloadClicked","_deleteClicked","_this$_dialogParams","_this$_dialogParams$o","backupDetails","_backupContent","onRestoring","call","backupType","_fullRestoreClicked","_partialRestoreClicked","_this$_dialogParams2","_this$_dialogParams3","info","title","text","confirmText","dismissText","callApi","config","version","error","body","message","_this$_dialogParams4","_this$_dialogParams4$","fetch","method","JSON","stringify","_this$_dialogParams5","_this$_dialogParams6","then","_this$_dialogParams7","_this$_dialogParams7$","_this$_dialogParams8","onDelete","err","_this$_dialogParams9","signedPath","window","location","href","includes","confirm","path","_computeName"],"sources":["/workspaces/frontend/hassio/src/dialogs/backup/dialog-hassio-backup.ts"],"sourcesContent":["import { ActionDetail } from \"@material/mwc-list\";\nimport \"@material/mwc-list/mwc-list-item\";\nimport { mdiClose, mdiDotsVertical } from \"@mdi/js\";\nimport { css, CSSResultGroup, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators\";\nimport { atLeastVersion } from \"../../../../src/common/config/version\";\nimport { fireEvent } from \"../../../../src/common/dom/fire_event\";\nimport { stopPropagation } from \"../../../../src/common/dom/stop_propagation\";\nimport { slugify } from \"../../../../src/common/string/slugify\";\nimport \"../../../../src/components/ha-dialog\";\nimport \"../../../../src/components/buttons/ha-progress-button\";\nimport \"../../../../src/components/ha-alert\";\nimport \"../../../../src/components/ha-button-menu\";\nimport \"../../../../src/components/ha-header-bar\";\nimport \"../../../../src/components/ha-icon-button\";\nimport { getSignedPath } from \"../../../../src/data/auth\";\nimport {\n  fetchHassioBackupInfo,\n  HassioBackupDetail,\n  removeBackup,\n} from \"../../../../src/data/hassio/backup\";\nimport { extractApiErrorMessage } from \"../../../../src/data/hassio/common\";\nimport {\n  showAlertDialog,\n  showConfirmationDialog,\n} from \"../../../../src/dialogs/generic/show-dialog-box\";\nimport { HassDialog } from \"../../../../src/dialogs/make-dialog-manager\";\nimport { haStyle, haStyleDialog } from \"../../../../src/resources/styles\";\nimport { HomeAssistant } from \"../../../../src/types\";\nimport { fileDownload } from \"../../../../src/util/file_download\";\nimport \"../../components/supervisor-backup-content\";\nimport type { SupervisorBackupContent } from \"../../components/supervisor-backup-content\";\nimport { HassioBackupDialogParams } from \"./show-dialog-hassio-backup\";\nimport { BackupOrRestoreKey } from \"../../util/translations\";\n\n@customElement(\"dialog-hassio-backup\")\nclass HassioBackupDialog\n  extends LitElement\n  implements HassDialog<HassioBackupDialogParams>\n{\n  @property({ attribute: false }) public hass?: HomeAssistant;\n\n  @state() private _error?: string;\n\n  @state() private _backup?: HassioBackupDetail;\n\n  @state() private _dialogParams?: HassioBackupDialogParams;\n\n  @state() private _restoringBackup = false;\n\n  @query(\"supervisor-backup-content\")\n  private _backupContent!: SupervisorBackupContent;\n\n  public async showDialog(dialogParams: HassioBackupDialogParams) {\n    this._backup = await fetchHassioBackupInfo(this.hass, dialogParams.slug);\n    this._dialogParams = dialogParams;\n    this._restoringBackup = false;\n  }\n\n  public closeDialog() {\n    this._backup = undefined;\n    this._dialogParams = undefined;\n    this._restoringBackup = false;\n    this._error = undefined;\n    fireEvent(this, \"dialog-closed\", { dialog: this.localName });\n  }\n\n  private _localize(key: BackupOrRestoreKey) {\n    return (\n      this._dialogParams!.supervisor?.localize(`backup.${key}`) ||\n      this._dialogParams!.localize!(`ui.panel.page-onboarding.restore.${key}`)\n    );\n  }\n\n  protected render() {\n    if (!this._dialogParams || !this._backup) {\n      return nothing;\n    }\n    return html`\n      <ha-dialog\n        open\n        scrimClickAction\n        @closed=${this.closeDialog}\n        .heading=${this._backup.name}\n      >\n        <div slot=\"heading\">\n          <ha-header-bar>\n            <span slot=\"title\">${this._backup.name}</span>\n            <ha-icon-button\n              .label=${this._localize(\"close\")}\n              .path=${mdiClose}\n              slot=\"actionItems\"\n              dialogAction=\"cancel\"\n            ></ha-icon-button>\n          </ha-header-bar>\n        </div>\n        ${this._restoringBackup\n          ? html`<ha-circular-progress indeterminate></ha-circular-progress>`\n          : html`\n              <supervisor-backup-content\n                .hass=${this.hass}\n                .supervisor=${this._dialogParams.supervisor}\n                .backup=${this._backup}\n                .onboarding=${this._dialogParams.onboarding || false}\n                .localize=${this._dialogParams.localize}\n                dialogInitialFocus\n              >\n              </supervisor-backup-content>\n            `}\n        ${this._error\n          ? html`<ha-alert alert-type=\"error\">${this._error}</ha-alert>`\n          : nothing}\n\n        <mwc-button\n          .disabled=${this._restoringBackup}\n          slot=\"secondaryAction\"\n          @click=${this._restoreClicked}\n        >\n          ${this._localize(\"restore\")}\n        </mwc-button>\n\n        ${!this._dialogParams.onboarding && this._dialogParams.supervisor\n          ? html`<ha-button-menu\n              fixed\n              slot=\"primaryAction\"\n              @action=${this._handleMenuAction}\n              @closed=${stopPropagation}\n            >\n              <ha-icon-button\n                .label=${this._dialogParams.supervisor.localize(\n                  \"backup.more_actions\"\n                )}\n                .path=${mdiDotsVertical}\n                slot=\"trigger\"\n              ></ha-icon-button>\n              <mwc-list-item\n                >${this._dialogParams.supervisor.localize(\n                  \"backup.download_backup\"\n                )}</mwc-list-item\n              >\n              <mwc-list-item class=\"error\"\n                >${this._dialogParams.supervisor.localize(\n                  \"backup.delete_backup_title\"\n                )}</mwc-list-item\n              >\n            </ha-button-menu>`\n          : nothing}\n      </ha-dialog>\n    `;\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyle,\n      haStyleDialog,\n      css`\n        ha-circular-progress {\n          display: block;\n          text-align: center;\n        }\n        ha-header-bar {\n          --mdc-theme-on-primary: var(--primary-text-color);\n          --mdc-theme-primary: var(--mdc-theme-surface);\n          flex-shrink: 0;\n          display: block;\n        }\n        ha-icon-button {\n          color: var(--secondary-text-color);\n        }\n      `,\n    ];\n  }\n\n  private _handleMenuAction(ev: CustomEvent<ActionDetail>) {\n    switch (ev.detail.index) {\n      case 0:\n        this._downloadClicked();\n        break;\n      case 1:\n        this._deleteClicked();\n        break;\n    }\n  }\n\n  private async _restoreClicked() {\n    const backupDetails = this._backupContent.backupDetails();\n    this._restoringBackup = true;\n    this._dialogParams?.onRestoring?.();\n    if (this._backupContent.backupType === \"full\") {\n      await this._fullRestoreClicked(backupDetails);\n    } else {\n      await this._partialRestoreClicked(backupDetails);\n    }\n    this._restoringBackup = false;\n  }\n\n  private async _partialRestoreClicked(backupDetails) {\n    const supervisor = this._dialogParams?.supervisor;\n    if (supervisor !== undefined && supervisor.info.state !== \"running\") {\n      await showAlertDialog(this, {\n        title: supervisor.localize(\"backup.could_not_restore\"),\n        text: supervisor.localize(\"backup.restore_blocked_not_running\", {\n          state: supervisor.info.state,\n        }),\n      });\n      return;\n    }\n    if (\n      !(await showConfirmationDialog(this, {\n        title: this._localize(\"confirm_restore_partial_backup_title\"),\n        text: this._localize(\"confirm_restore_partial_backup_text\"),\n        confirmText: this._localize(\"restore\"),\n        dismissText: this._localize(\"cancel\"),\n      }))\n    ) {\n      return;\n    }\n\n    if (!this._dialogParams?.onboarding) {\n      try {\n        await this.hass!.callApi(\n          \"POST\",\n\n          `hassio/${\n            atLeastVersion(this.hass!.config.version, 2021, 9)\n              ? \"backups\"\n              : \"snapshots\"\n          }/${this._backup!.slug}/restore/partial`,\n          backupDetails\n        );\n        this.closeDialog();\n      } catch (error: any) {\n        this._error = error.body.message;\n      }\n    } else {\n      this._dialogParams?.onRestoring?.();\n      await fetch(`/api/hassio/backups/${this._backup!.slug}/restore/partial`, {\n        method: \"POST\",\n        body: JSON.stringify(backupDetails),\n      });\n      this.closeDialog();\n    }\n  }\n\n  private async _fullRestoreClicked(backupDetails) {\n    const supervisor = this._dialogParams?.supervisor;\n    if (supervisor !== undefined && supervisor.info.state !== \"running\") {\n      await showAlertDialog(this, {\n        title: supervisor.localize(\"backup.could_not_restore\"),\n        text: supervisor.localize(\"backup.restore_blocked_not_running\", {\n          state: supervisor.info.state,\n        }),\n      });\n      return;\n    }\n    if (\n      !(await showConfirmationDialog(this, {\n        title: this._localize(\"confirm_restore_full_backup_title\"),\n        text: this._localize(\"confirm_restore_full_backup_text\"),\n        confirmText: this._localize(\"restore\"),\n        dismissText: this._localize(\"cancel\"),\n      }))\n    ) {\n      return;\n    }\n\n    if (!this._dialogParams?.onboarding) {\n      this.hass!.callApi(\n        \"POST\",\n        `hassio/${\n          atLeastVersion(this.hass!.config.version, 2021, 9)\n            ? \"backups\"\n            : \"snapshots\"\n        }/${this._backup!.slug}/restore/full`,\n        backupDetails\n      ).then(\n        () => {\n          this.closeDialog();\n        },\n        (error) => {\n          this._error = error.body.message;\n        }\n      );\n    } else {\n      this._dialogParams?.onRestoring?.();\n      fetch(`/api/hassio/backups/${this._backup!.slug}/restore/full`, {\n        method: \"POST\",\n        body: JSON.stringify(backupDetails),\n      });\n      this.closeDialog();\n    }\n  }\n\n  private async _deleteClicked() {\n    const supervisor = this._dialogParams?.supervisor;\n    if (!supervisor) return;\n\n    if (\n      !(await showConfirmationDialog(this, {\n        title: supervisor!.localize(\"backup.confirm_delete_title\"),\n        text: supervisor!.localize(\"backup.confirm_delete_text\"),\n        confirmText: supervisor!.localize(\"backup.delete\"),\n        dismissText: supervisor!.localize(\"backup.cancel\"),\n      }))\n    ) {\n      return;\n    }\n\n    try {\n      await removeBackup(this.hass!, this._backup!.slug);\n      if (this._dialogParams!.onDelete) {\n        this._dialogParams!.onDelete();\n      }\n      this.closeDialog();\n    } catch (err: any) {\n      this._error = err.body.message;\n    }\n  }\n\n  private async _downloadClicked() {\n    const supervisor = this._dialogParams?.supervisor;\n    if (!supervisor) return;\n\n    let signedPath: { path: string };\n    try {\n      signedPath = await getSignedPath(\n        this.hass!,\n        `/api/hassio/${\n          atLeastVersion(this.hass!.config.version, 2021, 9)\n            ? \"backups\"\n            : \"snapshots\"\n        }/${this._backup!.slug}/download`\n      );\n    } catch (err: any) {\n      await showAlertDialog(this, {\n        text: extractApiErrorMessage(err),\n      });\n      return;\n    }\n\n    if (window.location.href.includes(\"ui.nabu.casa\")) {\n      const confirm = await showConfirmationDialog(this, {\n        title: supervisor.localize(\"backup.remote_download_title\"),\n        text: supervisor.localize(\"backup.remote_download_text\"),\n        confirmText: supervisor.localize(\"backup.download\"),\n        dismissText: this._localize(\"cancel\"),\n      });\n      if (!confirm) {\n        return;\n      }\n    }\n\n    fileDownload(\n      signedPath.path,\n      `home_assistant_backup_${slugify(this._computeName)}.tar`\n    );\n  }\n\n  private get _computeName() {\n    return this._backup\n      ? this._backup.name || this._backup.slug\n      : \"Unnamed backup\";\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"dialog-hassio-backup\": HassioBackupDialog;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}