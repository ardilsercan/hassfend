{"ast":null,"code":"import \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.object.values.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.json.parse.js\";\nimport { fireEvent } from \"../common/dom/fire_event\";\n/** Panel to show when no panel is picked. */\nexport var DEFAULT_PANEL = \"lovelace\";\nexport var getStorageDefaultPanelUrlPath = function getStorageDefaultPanelUrlPath() {\n  return localStorage.defaultPanel ? JSON.parse(localStorage.defaultPanel) : DEFAULT_PANEL;\n};\nexport var setDefaultPanel = function setDefaultPanel(element, urlPath) {\n  fireEvent(element, \"hass-default-panel\", {\n    defaultPanel: urlPath\n  });\n};\nexport var getDefaultPanel = function getDefaultPanel(hass) {\n  return hass.panels[hass.defaultPanel] ? hass.panels[hass.defaultPanel] : hass.panels[DEFAULT_PANEL];\n};\nexport var getPanelNameTranslationKey = function getPanelNameTranslationKey(panel) {\n  if (panel.url_path === \"lovelace\") {\n    return \"panel.states\";\n  }\n  if (panel.url_path === \"profile\") {\n    return \"panel.profile\";\n  }\n  return \"panel.\".concat(panel.title);\n};\nexport var getPanelTitle = function getPanelTitle(hass) {\n  if (!hass.panels) {\n    return undefined;\n  }\n  var panel = Object.values(hass.panels).find(function (p) {\n    return p.url_path === hass.panelUrl;\n  });\n  if (!panel) {\n    return undefined;\n  }\n  var translationKey = getPanelNameTranslationKey(panel);\n  return hass.localize(translationKey) || panel.title || undefined;\n};\nexport var getPanelIcon = function getPanelIcon(panel) {\n  if (!panel.icon) {\n    switch (panel.component_name) {\n      case \"profile\":\n        return \"hass:account\";\n      case \"lovelace\":\n        return \"hass:view-dashboard\";\n    }\n  }\n  return panel.icon;\n};","map":{"version":3,"names":["fireEvent","DEFAULT_PANEL","getStorageDefaultPanelUrlPath","localStorage","defaultPanel","JSON","parse","setDefaultPanel","element","urlPath","getDefaultPanel","hass","panels","getPanelNameTranslationKey","panel","url_path","concat","title","getPanelTitle","undefined","Object","values","find","p","panelUrl","translationKey","localize","getPanelIcon","icon","component_name"],"sources":["/Users/sercanardil/Desktop/frontend/src/data/panel.ts"],"sourcesContent":["import { fireEvent } from \"../common/dom/fire_event\";\nimport { HomeAssistant, PanelInfo } from \"../types\";\n\n/** Panel to show when no panel is picked. */\nexport const DEFAULT_PANEL = \"lovelace\";\n\nexport const getStorageDefaultPanelUrlPath = (): string =>\n  localStorage.defaultPanel\n    ? JSON.parse(localStorage.defaultPanel)\n    : DEFAULT_PANEL;\n\nexport const setDefaultPanel = (\n  element: HTMLElement,\n  urlPath: string\n): void => {\n  fireEvent(element, \"hass-default-panel\", { defaultPanel: urlPath });\n};\n\nexport const getDefaultPanel = (hass: HomeAssistant): PanelInfo =>\n  hass.panels[hass.defaultPanel]\n    ? hass.panels[hass.defaultPanel]\n    : hass.panels[DEFAULT_PANEL];\n\nexport const getPanelNameTranslationKey = (panel: PanelInfo) => {\n  if (panel.url_path === \"lovelace\") {\n    return \"panel.states\" as const;\n  }\n\n  if (panel.url_path === \"profile\") {\n    return \"panel.profile\" as const;\n  }\n\n  return `panel.${panel.title}` as const;\n};\n\nexport const getPanelTitle = (hass: HomeAssistant): string | undefined => {\n  if (!hass.panels) {\n    return undefined;\n  }\n\n  const panel = Object.values(hass.panels).find(\n    (p: PanelInfo): boolean => p.url_path === hass.panelUrl\n  );\n\n  if (!panel) {\n    return undefined;\n  }\n\n  const translationKey = getPanelNameTranslationKey(panel);\n\n  return hass.localize(translationKey) || panel.title || undefined;\n};\n\nexport const getPanelIcon = (panel: PanelInfo): string | null => {\n  if (!panel.icon) {\n    switch (panel.component_name) {\n      case \"profile\":\n        return \"hass:account\";\n      case \"lovelace\":\n        return \"hass:view-dashboard\";\n    }\n  }\n\n  return panel.icon;\n};\n"],"mappings":";;;;;;;AAAA,SAASA,SAAS,QAAQ,0BAA0B;AAGpD;AACA,OAAO,IAAMC,aAAa,GAAG,UAAU;AAEvC,OAAO,IAAMC,6BAA6B,GAAG,SAAhCA,6BAA6BA,CAAA;EAAA,OACxCC,YAAY,CAACC,YAAY,GACrBC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,YAAY,CAAC,GACrCH,aAAa;AAAA;AAEnB,OAAO,IAAMM,eAAe,GAAG,SAAlBA,eAAeA,CAC1BC,OAAoB,EACpBC,OAAe,EACN;EACTT,SAAS,CAACQ,OAAO,EAAE,oBAAoB,EAAE;IAAEJ,YAAY,EAAEK;EAAQ,CAAC,CAAC;AACrE,CAAC;AAED,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAIC,IAAmB;EAAA,OACjDA,IAAI,CAACC,MAAM,CAACD,IAAI,CAACP,YAAY,CAAC,GAC1BO,IAAI,CAACC,MAAM,CAACD,IAAI,CAACP,YAAY,CAAC,GAC9BO,IAAI,CAACC,MAAM,CAACX,aAAa,CAAC;AAAA;AAEhC,OAAO,IAAMY,0BAA0B,GAAG,SAA7BA,0BAA0BA,CAAIC,KAAgB,EAAK;EAC9D,IAAIA,KAAK,CAACC,QAAQ,KAAK,UAAU,EAAE;IACjC,OAAO,cAAc;EACvB;EAEA,IAAID,KAAK,CAACC,QAAQ,KAAK,SAAS,EAAE;IAChC,OAAO,eAAe;EACxB;EAEA,gBAAAC,MAAA,CAAgBF,KAAK,CAACG,KAAK;AAC7B,CAAC;AAED,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAIP,IAAmB,EAAyB;EACxE,IAAI,CAACA,IAAI,CAACC,MAAM,EAAE;IAChB,OAAOO,SAAS;EAClB;EAEA,IAAML,KAAK,GAAGM,MAAM,CAACC,MAAM,CAACV,IAAI,CAACC,MAAM,CAAC,CAACU,IAAI,CAC3C,UAACC,CAAY;IAAA,OAAcA,CAAC,CAACR,QAAQ,KAAKJ,IAAI,CAACa,QAAQ;EAAA,CACzD,CAAC;EAED,IAAI,CAACV,KAAK,EAAE;IACV,OAAOK,SAAS;EAClB;EAEA,IAAMM,cAAc,GAAGZ,0BAA0B,CAACC,KAAK,CAAC;EAExD,OAAOH,IAAI,CAACe,QAAQ,CAACD,cAAc,CAAC,IAAIX,KAAK,CAACG,KAAK,IAAIE,SAAS;AAClE,CAAC;AAED,OAAO,IAAMQ,YAAY,GAAG,SAAfA,YAAYA,CAAIb,KAAgB,EAAoB;EAC/D,IAAI,CAACA,KAAK,CAACc,IAAI,EAAE;IACf,QAAQd,KAAK,CAACe,cAAc;MAC1B,KAAK,SAAS;QACZ,OAAO,cAAc;MACvB,KAAK,UAAU;QACb,OAAO,qBAAqB;IAChC;EACF;EAEA,OAAOf,KAAK,CAACc,IAAI;AACnB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}