{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7;\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.set.difference.v2.js\";\nimport \"core-js/modules/esnext.set.intersection.v2.js\";\nimport \"core-js/modules/esnext.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/esnext.set.is-subset-of.v2.js\";\nimport \"core-js/modules/esnext.set.is-superset-of.v2.js\";\nimport \"core-js/modules/esnext.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/esnext.set.union.v2.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport { DIRECTION_ALL, Manager, Pan, Press, Tap, TouchMouseInput } from \"@egjs/hammerjs\";\nimport { LitElement, css, html, nothing, svg } from \"lit\";\nimport { customElement, property, query, queryAll, state } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport { ifDefined } from \"lit/directives/if-defined\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { clamp } from \"../common/number/clamp\";\nimport { svgArc } from \"../resources/svg-arc\";\nimport { isTouch } from \"../util/is_touch\";\nvar MAX_ANGLE = 270;\nvar ROTATE_ANGLE = 360 - MAX_ANGLE / 2 - 90;\nvar RADIUS = 145;\nfunction xy2polar(x, y) {\n  var r = Math.sqrt(x * x + y * y);\n  var phi = Math.atan2(y, x);\n  return [r, phi];\n}\nfunction rad2deg(rad) {\n  return rad / (2 * Math.PI) * 360;\n}\nvar A11Y_KEY_CODES = new Set([\"ArrowRight\", \"ArrowUp\", \"ArrowLeft\", \"ArrowDown\", \"PageUp\", \"PageDown\", \"Home\", \"End\"]);\nexport var HaControlCircularSlider = _decorate([customElement(\"ha-control-circular-slider\")], function (_initialize, _LitElement) {\n  var HaControlCircularSlider = /*#__PURE__*/function (_LitElement2) {\n    _inherits(HaControlCircularSlider, _LitElement2);\n    function HaControlCircularSlider() {\n      var _this;\n      _classCallCheck(this, HaControlCircularSlider);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, HaControlCircularSlider, [].concat(args));\n      _initialize(_assertThisInitialized(_this));\n      return _this;\n    }\n    return _createClass(HaControlCircularSlider);\n  }(_LitElement);\n  return {\n    F: HaControlCircularSlider,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        reflect: true\n      })],\n      key: \"disabled\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        reflect: true\n      })],\n      key: \"readonly\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"dual\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: String\n      })],\n      key: \"mode\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"inactive\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: String\n      })],\n      key: \"label\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: String,\n        attribute: \"low-label\"\n      })],\n      key: \"lowLabel\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: String,\n        attribute: \"high-label\"\n      })],\n      key: \"highLabel\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Number\n      })],\n      key: \"value\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Number\n      })],\n      key: \"low\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Number\n      })],\n      key: \"high\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Number\n      })],\n      key: \"current\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Number\n      })],\n      key: \"step\",\n      value: function value() {\n        return 1;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Number\n      })],\n      key: \"min\",\n      value: function value() {\n        return 0;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Number\n      })],\n      key: \"max\",\n      value: function value() {\n        return 100;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        attribute: \"prevent-interaction-on-scroll\"\n      })],\n      key: \"preventInteractionOnScroll\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_localValue\",\n      value: function value() {\n        return this.value;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_localLow\",\n      value: function value() {\n        return this.low;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_localHigh\",\n      value: function value() {\n        return this.high;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_activeSlider\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_lastSlider\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"_valueToPercentage\",\n      value: function _valueToPercentage(value) {\n        return (clamp(value, this.min, this.max) - this.min) / (this.max - this.min);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_percentageToValue\",\n      value: function _percentageToValue(value) {\n        return (this.max - this.min) * value + this.min;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_steppedValue\",\n      value: function _steppedValue(value) {\n        return Math.round(value / this.step) * this.step;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_boundedValue\",\n      value: function _boundedValue(value) {\n        var _this$_localLow, _this$_localHigh;\n        var min = this._activeSlider === \"high\" ? Math.min((_this$_localLow = this._localLow) !== null && _this$_localLow !== void 0 ? _this$_localLow : this.max) : this.min;\n        var max = this._activeSlider === \"low\" ? Math.max((_this$_localHigh = this._localHigh) !== null && _this$_localHigh !== void 0 ? _this$_localHigh : this.min) : this.max;\n        return Math.min(Math.max(value, min), max);\n      }\n    }, {\n      kind: \"method\",\n      key: \"updated\",\n      value: function updated(changedProps) {\n        _get(_getPrototypeOf(HaControlCircularSlider.prototype), \"updated\", this).call(this, changedProps);\n        if (!this._activeSlider) {\n          if (changedProps.has(\"value\")) {\n            this._localValue = this.value;\n          }\n          if (changedProps.has(\"low\")) {\n            this._localLow = this.low;\n          }\n          if (changedProps.has(\"high\")) {\n            this._localHigh = this.high;\n          }\n        }\n        if (changedProps.has(\"_localValue\") && changedProps.get(\"_localValue\") == null || changedProps.has(\"_localLow\") && changedProps.get(\"_localLow\") == null || changedProps.has(\"_localHigh\") && changedProps.get(\"_localHigh\") == null || changedProps.has(\"preventInteractionOnScroll\")) {\n          this._destroyListeners();\n          this._setupListeners();\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"connectedCallback\",\n      value: function connectedCallback() {\n        _get(_getPrototypeOf(HaControlCircularSlider.prototype), \"connectedCallback\", this).call(this);\n        this._setupListeners();\n      }\n    }, {\n      kind: \"method\",\n      key: \"disconnectedCallback\",\n      value: function disconnectedCallback() {\n        _get(_getPrototypeOf(HaControlCircularSlider.prototype), \"disconnectedCallback\", this).call(this);\n      }\n    }, {\n      kind: \"field\",\n      key: \"_managers\",\n      value: function value() {\n        return [];\n      }\n    }, {\n      kind: \"field\",\n      key: \"_getPercentageFromEvent\",\n      value: function value() {\n        var _this2 = this;\n        return function (e) {\n          var bound = _this2._slider.getBoundingClientRect();\n          var x = 2 * (e.center.x - bound.left - bound.width / 2) / bound.width;\n          var y = 2 * (e.center.y - bound.top - bound.height / 2) / bound.height;\n          var _xy2polar = xy2polar(x, y),\n            _xy2polar2 = _slicedToArray(_xy2polar, 2),\n            phi = _xy2polar2[1];\n          var offset = (360 - MAX_ANGLE) / 2;\n          var angle = (rad2deg(phi) + offset - ROTATE_ANGLE + 360) % 360 - offset;\n          return Math.max(Math.min(angle / MAX_ANGLE, 1), 0);\n        };\n      }\n    }, {\n      kind: \"field\",\n      decorators: [query(\"#slider\")],\n      key: \"_slider\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [queryAll(\"[data-interaction]\")],\n      key: \"_interactions\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"_findActiveSlider\",\n      value: function _findActiveSlider(value) {\n        var _this$_localLow2, _this$_localHigh2;\n        if (!this.dual) return \"value\";\n        var low = Math.max((_this$_localLow2 = this._localLow) !== null && _this$_localLow2 !== void 0 ? _this$_localLow2 : this.min, this.min);\n        var high = Math.min((_this$_localHigh2 = this._localHigh) !== null && _this$_localHigh2 !== void 0 ? _this$_localHigh2 : this.max, this.max);\n        if (low >= value) {\n          return \"low\";\n        }\n        if (high <= value) {\n          return \"high\";\n        }\n        var lowDistance = Math.abs(value - low);\n        var highDistance = Math.abs(value - high);\n        return lowDistance <= highDistance ? \"low\" : \"high\";\n      }\n    }, {\n      kind: \"method\",\n      key: \"_setActiveValue\",\n      value: function _setActiveValue(value) {\n        switch (this._activeSlider) {\n          case \"high\":\n            this._localHigh = value;\n            break;\n          case \"low\":\n            this._localLow = value;\n            break;\n          case \"value\":\n            this._localValue = value;\n            break;\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_getActiveValue\",\n      value: function _getActiveValue() {\n        switch (this._activeSlider) {\n          case \"high\":\n            return this._localHigh;\n          case \"low\":\n            return this._localLow;\n          case \"value\":\n            return this._localValue;\n        }\n        return undefined;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_setupListeners\",\n      value: function _setupListeners() {\n        var _this3 = this;\n        if (this._interactions && this._managers.length === 0) {\n          this._interactions.forEach(function (interaction) {\n            var mc = new Manager(interaction, {\n              inputClass: TouchMouseInput\n            });\n            _this3._managers.push(mc);\n            var pressToActivate = _this3.preventInteractionOnScroll && isTouch;\n\n            // If press to activate is true, a 50ms press is required to activate the slider\n            mc.add(new Press({\n              enable: pressToActivate,\n              pointers: 1,\n              time: 50\n            }));\n            var panRecognizer = new Pan({\n              direction: DIRECTION_ALL,\n              enable: !pressToActivate,\n              threshold: 0\n            });\n            mc.add(panRecognizer);\n            mc.add(new Tap({\n              event: \"singletap\"\n            }));\n            mc.on(\"press\", function (e) {\n              e.srcEvent.stopPropagation();\n              e.srcEvent.preventDefault();\n              if (_this3.disabled || _this3.readonly) return;\n              var percentage = _this3._getPercentageFromEvent(e);\n              var raw = _this3._percentageToValue(percentage);\n              _this3._activeSlider = _this3._findActiveSlider(raw);\n              var bounded = _this3._boundedValue(raw);\n              _this3._setActiveValue(bounded);\n              var stepped = _this3._steppedValue(bounded);\n              if (_this3._activeSlider) {\n                fireEvent(_this3, \"\".concat(_this3._activeSlider, \"-changing\"), {\n                  value: stepped\n                });\n              }\n              panRecognizer.set({\n                enable: true\n              });\n            });\n            mc.on(\"pressup\", function (e) {\n              e.srcEvent.stopPropagation();\n              e.srcEvent.preventDefault();\n              var percentage = _this3._getPercentageFromEvent(e);\n              var raw = _this3._percentageToValue(percentage);\n              var bounded = _this3._boundedValue(raw);\n              var stepped = _this3._steppedValue(bounded);\n              _this3._setActiveValue(stepped);\n              if (_this3._activeSlider) {\n                fireEvent(_this3, \"\".concat(_this3._activeSlider, \"-changing\"), {\n                  value: undefined\n                });\n                fireEvent(_this3, \"\".concat(_this3._activeSlider, \"-changed\"), {\n                  value: stepped\n                });\n              }\n              _this3._activeSlider = undefined;\n            });\n            mc.on(\"pan\", function (e) {\n              e.srcEvent.stopPropagation();\n              e.srcEvent.preventDefault();\n            });\n            mc.on(\"panstart\", function (e) {\n              var _this3$shadowRoot;\n              if (_this3.disabled || _this3.readonly) return;\n              var percentage = _this3._getPercentageFromEvent(e);\n              var raw = _this3._percentageToValue(percentage);\n              _this3._activeSlider = _this3._findActiveSlider(raw);\n              _this3._lastSlider = _this3._activeSlider;\n              (_this3$shadowRoot = _this3.shadowRoot) === null || _this3$shadowRoot === void 0 || (_this3$shadowRoot = _this3$shadowRoot.getElementById(\"#slider\")) === null || _this3$shadowRoot === void 0 || _this3$shadowRoot.focus();\n            });\n            mc.on(\"pancancel\", function () {\n              if (_this3.disabled || _this3.readonly) return;\n              _this3._activeSlider = undefined;\n              if (pressToActivate) {\n                panRecognizer.set({\n                  enable: false\n                });\n              }\n            });\n            mc.on(\"panmove\", function (e) {\n              if (_this3.disabled || _this3.readonly) return;\n              var percentage = _this3._getPercentageFromEvent(e);\n              var raw = _this3._percentageToValue(percentage);\n              var bounded = _this3._boundedValue(raw);\n              _this3._setActiveValue(bounded);\n              var stepped = _this3._steppedValue(bounded);\n              if (_this3._activeSlider) {\n                fireEvent(_this3, \"\".concat(_this3._activeSlider, \"-changing\"), {\n                  value: stepped\n                });\n              }\n            });\n            mc.on(\"panend\", function (e) {\n              if (_this3.disabled || _this3.readonly) return;\n              var percentage = _this3._getPercentageFromEvent(e);\n              var raw = _this3._percentageToValue(percentage);\n              var bounded = _this3._boundedValue(raw);\n              var stepped = _this3._steppedValue(bounded);\n              _this3._setActiveValue(stepped);\n              if (_this3._activeSlider) {\n                fireEvent(_this3, \"\".concat(_this3._activeSlider, \"-changing\"), {\n                  value: undefined\n                });\n                fireEvent(_this3, \"\".concat(_this3._activeSlider, \"-changed\"), {\n                  value: stepped\n                });\n              }\n              _this3._activeSlider = undefined;\n              if (pressToActivate) {\n                panRecognizer.set({\n                  enable: false\n                });\n              }\n            });\n            mc.on(\"singletap\", function (e) {\n              var _this3$shadowRoot2;\n              if (_this3.disabled || _this3.readonly) return;\n              var percentage = _this3._getPercentageFromEvent(e);\n              var raw = _this3._percentageToValue(percentage);\n              _this3._activeSlider = _this3._findActiveSlider(raw);\n              var bounded = _this3._boundedValue(raw);\n              var stepped = _this3._steppedValue(bounded);\n              _this3._setActiveValue(stepped);\n              if (_this3._activeSlider) {\n                fireEvent(_this3, \"\".concat(_this3._activeSlider, \"-changing\"), {\n                  value: undefined\n                });\n                fireEvent(_this3, \"\".concat(_this3._activeSlider, \"-changed\"), {\n                  value: stepped\n                });\n              }\n              _this3._lastSlider = _this3._activeSlider;\n              (_this3$shadowRoot2 = _this3.shadowRoot) === null || _this3$shadowRoot2 === void 0 || (_this3$shadowRoot2 = _this3$shadowRoot2.getElementById(\"#slider\")) === null || _this3$shadowRoot2 === void 0 || _this3$shadowRoot2.focus();\n              _this3._activeSlider = undefined;\n              if (pressToActivate) {\n                panRecognizer.set({\n                  enable: false\n                });\n              }\n            });\n          });\n        }\n      }\n    }, {\n      kind: \"get\",\n      key: \"_tenPercentStep\",\n      value: function _tenPercentStep() {\n        return Math.max(this.step, (this.max - this.min) / 10);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleKeyDown\",\n      value: function _handleKeyDown(e) {\n        var _this$_lastSlider;\n        if (!A11Y_KEY_CODES.has(e.code)) return;\n        e.preventDefault();\n        if (this._lastSlider) {\n          var _this$shadowRoot;\n          (_this$shadowRoot = this.shadowRoot) === null || _this$shadowRoot === void 0 || (_this$shadowRoot = _this$shadowRoot.getElementById(this._lastSlider)) === null || _this$shadowRoot === void 0 || _this$shadowRoot.focus();\n        }\n        this._activeSlider = (_this$_lastSlider = this._lastSlider) !== null && _this$_lastSlider !== void 0 ? _this$_lastSlider : e.currentTarget.id;\n        this._lastSlider = undefined;\n        var value = this._getActiveValue();\n        switch (e.code) {\n          case \"ArrowRight\":\n          case \"ArrowUp\":\n            this._setActiveValue(this._boundedValue((value !== null && value !== void 0 ? value : this.min) + this.step));\n            break;\n          case \"ArrowLeft\":\n          case \"ArrowDown\":\n            this._setActiveValue(this._boundedValue((value !== null && value !== void 0 ? value : this.min) - this.step));\n            break;\n          case \"PageUp\":\n            this._setActiveValue(this._steppedValue(this._boundedValue((value !== null && value !== void 0 ? value : this.min) + this._tenPercentStep)));\n            break;\n          case \"PageDown\":\n            this._setActiveValue(this._steppedValue(this._boundedValue((value !== null && value !== void 0 ? value : this.min) - this._tenPercentStep)));\n            break;\n          case \"Home\":\n            this._setActiveValue(this._boundedValue(this.min));\n            break;\n          case \"End\":\n            this._setActiveValue(this._boundedValue(this.max));\n            break;\n        }\n        fireEvent(this, \"\".concat(this._activeSlider, \"-changing\"), {\n          value: this._getActiveValue()\n        });\n        this._activeSlider = undefined;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleKeyUp\",\n      value: function _handleKeyUp(e) {\n        if (!A11Y_KEY_CODES.has(e.code)) return;\n        this._activeSlider = e.currentTarget.id;\n        e.preventDefault();\n        fireEvent(this, \"\".concat(this._activeSlider, \"-changing\"), {\n          value: undefined\n        });\n        fireEvent(this, \"\".concat(this._activeSlider, \"-changed\"), {\n          value: this._getActiveValue()\n        });\n        this._activeSlider = undefined;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_destroyListeners\",\n      value: function _destroyListeners() {\n        if (this._managers.length > 0) {\n          this._managers.forEach(function (manager) {\n            return manager.destroy();\n          });\n          this._managers = [];\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_strokeCircleDashArc\",\n      value: function _strokeCircleDashArc(value) {\n        return this._strokeDashArc(value, value);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_strokeDashArc\",\n      value: function _strokeDashArc(from, to) {\n        var start = this._valueToPercentage(from);\n        var end = this._valueToPercentage(to);\n        var track = RADIUS * 2 * Math.PI * MAX_ANGLE / 360;\n        var arc = Math.max((end - start) * track, 0);\n        var arcOffset = start * track - 0.5;\n        var strokeDasharray = \"\".concat(arc, \" \").concat(track - arc);\n        var strokeDashOffset = \"-\".concat(arcOffset);\n        return [strokeDasharray, strokeDashOffset];\n      }\n    }, {\n      kind: \"method\",\n      key: \"renderArc\",\n      value: function renderArc(id, value, mode) {\n        var _this$current, _this$lowLabel;\n        if (this.disabled) return nothing;\n        var path = svgArc({\n          x: 0,\n          y: 0,\n          start: 0,\n          end: MAX_ANGLE,\n          r: RADIUS\n        });\n        var angle = value != null ? this._valueToPercentage(value) * MAX_ANGLE : undefined;\n        var limit = mode === \"end\" ? this.max : this.min;\n        var current = (_this$current = this.current) !== null && _this$current !== void 0 ? _this$current : limit;\n        var target = value !== null && value !== void 0 ? value : limit;\n        var showActive = mode === \"end\" ? target <= current : mode === \"start\" ? current <= target : false;\n        var showTarget = value != null;\n        var activeArc = showTarget ? showActive ? mode === \"end\" ? this._strokeDashArc(target, current) : this._strokeDashArc(current, target) : this._strokeCircleDashArc(target) : undefined;\n        var coloredArc = mode === \"full\" ? this._strokeDashArc(this.min, this.max) : mode === \"end\" ? this._strokeDashArc(target, limit) : this._strokeDashArc(limit, target);\n        var targetCircle = showTarget ? this._strokeCircleDashArc(target) : undefined;\n        var currentCircle = this.current != null && this.current <= this.max && this.current >= this.min && (showActive || this.mode === \"full\") ? this._strokeCircleDashArc(this.current) : undefined;\n        var onlyDotInteraction = this.preventInteractionOnScroll && isTouch || false;\n        return svg(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      <g class=\", \">\\n        <path\\n          class=\\\"arc arc-clear\\\"\\n          d=\", \"\\n          stroke-dasharray=\", \"\\n          stroke-dashoffset=\", \"\\n        />\\n        <path\\n          class=\\\"arc arc-colored \", \"\\\"\\n          d=\", \"\\n          stroke-dasharray=\", \"\\n          stroke-dashoffset=\", \"\\n        />\\n        \", \"\\n        \", \"\\n        \", \"\\n      </g>\\n    \"])), classMap({\n          inactive: Boolean(this.inactive)\n        }), path, coloredArc[0], coloredArc[1], classMap(_defineProperty({}, id, true)), path, coloredArc[0], coloredArc[1], activeArc ? svg(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n              <path\\n                .id=\", \"\\n                d=\", \"\\n                class=\\\"arc arc-active \", \"\\\"\\n                stroke-dasharray=\", \"\\n                stroke-dashoffset=\", \"\\n                role=\\\"slider\\\"\\n                tabindex=\\\"0\\\"\\n                aria-valuemin=\", \"\\n                aria-valuemax=\", \"\\n                aria-valuenow=\", \"\\n                aria-disabled=\", \"\\n                aria-readonly=\", \"\\n                aria-label=\", \"\\n                @keydown=\", \"\\n                @keyup=\", \"\\n              />\\n            \"])), id, path, classMap(_defineProperty({}, id, true)), activeArc[0], activeArc[1], this.min, this.max, this._localValue != null ? this._steppedValue(this._localValue) : undefined, this.disabled, this.readonly, ifDefined((_this$lowLabel = this.lowLabel) !== null && _this$lowLabel !== void 0 ? _this$lowLabel : this.label), this._handleKeyDown, this._handleKeyUp) : nothing, currentCircle ? svg(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n              <path\\n                class=\\\"current arc-current\\\"\\n                d=\", \"\\n                stroke-dasharray=\", \"\\n                stroke-dashoffset=\", \"\\n              />\\n          \"])), path, currentCircle[0], currentCircle[1]) : nothing, targetCircle ? svg(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n              <!-- Use circle instead of path for interaction (Safari doesn't support well pointer-events with stroke-dasharray) -->\\n              <circle\\n                transform=\\\"rotate(\", \" 0 0)\\\"\\n                ?data-interaction=\", \"\\n                cx=\", \"\\n                cy=\\\"0\\\"\\n                />\\n              <path\\n                d=\", \"\\n                stroke-dasharray=\", \"\\n                stroke-dashoffset=\", \"\\n              />\\n              <path\\n                class=\\\"target-border \", \"\\\"\\n                d=\", \"\\n                stroke-dasharray=\", \"\\n                stroke-dashoffset=\", \"\\n              />\\n              <path\\n                class=\\\"target\\\"\\n                d=\", \"\\n                stroke-dasharray=\", \"\\n                stroke-dashoffset=\", \"\\n              />\\n          \"])), angle, onlyDotInteraction, RADIUS, path, targetCircle[0], targetCircle[1], classMap(_defineProperty({}, id, true)), path, targetCircle[0], targetCircle[1], path, targetCircle[0], targetCircle[1]) : nothing);\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var trackPath = svgArc({\n          x: 0,\n          y: 0,\n          start: 0,\n          end: MAX_ANGLE,\n          r: RADIUS\n        });\n        var lowValue = this.dual ? this._localLow : this._localValue;\n        var highValue = this._localHigh;\n        var current = this.current;\n        var currentStroke = current ? this._strokeCircleDashArc(current) : undefined;\n        var onlyDotInteraction = this.preventInteractionOnScroll && isTouch || false;\n        return html(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"\\n      <svg\\n        id=\\\"slider\\\"\\n        viewBox=\\\"0 0 320 320\\\"\\n        overflow=\\\"visible\\\"\\n        class=\", \"\\n        @keydown=\", \"\\n        tabindex=\", \"\\n      >\\n        <g\\n          id=\\\"container\\\"\\n          transform=\\\"translate(160 160) rotate(\", \")\\\"\\n        >\\n          <path d=\", \" ?data-interaction=\", \" />\\n          <path class=\\\"background\\\" d=\", \" />\\n          \", \"\\n          \", \"\\n          \", \"\\n        </g>\\n      </svg>\\n    \"])), classMap({\n          pressed: Boolean(this._activeSlider)\n        }), this._handleKeyDown, this._lastSlider ? \"0\" : \"-1\", ROTATE_ANGLE, trackPath, !onlyDotInteraction, trackPath, currentStroke ? svg(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"\\n                  <path\\n                    class=\\\"current\\\"\\n                    d=\", \"\\n                    stroke-dasharray=\", \"\\n                    stroke-dashoffset=\", \"\\n                  />\\n                \"])), trackPath, currentStroke[0], currentStroke[1]) : nothing, lowValue != null || this.mode === \"full\" ? this.renderArc(this.dual ? \"low\" : \"value\", lowValue, !this.dual && this.mode || \"start\") : nothing, this.dual && highValue != null ? this.renderArc(\"high\", highValue, \"end\") : nothing);\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral([\"\\n      :host {\\n        --control-circular-slider-color: var(--primary-color);\\n        --control-circular-slider-background: var(--disabled-color);\\n        --control-circular-slider-background-opacity: 0.3;\\n        --control-circular-slider-low-color: var(\\n          --control-circular-slider-color\\n        );\\n        --control-circular-slider-high-color: var(\\n          --control-circular-slider-color\\n        );\\n        --control-circular-slider-interaction-margin: 12px;\\n        width: 320px;\\n        display: block;\\n      }\\n      svg {\\n        width: 100%;\\n        display: block;\\n        pointer-events: none;\\n      }\\n      g {\\n        fill: none;\\n      }\\n      #slider {\\n        outline: none;\\n      }\\n      path[data-interaction] {\\n        fill: none;\\n        cursor: pointer;\\n        pointer-events: auto;\\n        stroke: transparent;\\n        stroke-linecap: round;\\n        stroke-width: calc(\\n          24px + 2 * var(--control-circular-slider-interaction-margin)\\n        );\\n      }\\n      circle[data-interaction] {\\n        r: calc(12px + var(--control-circular-slider-interaction-margin));\\n        fill: transparent;\\n        cursor: pointer;\\n        pointer-events: auto;\\n      }\\n      :host([disabled]) [data-interaction],\\n      :host([readonly]) [data-interaction] {\\n        cursor: initial;\\n        pointer-events: none;\\n      }\\n\\n      .background {\\n        fill: none;\\n        stroke: var(--control-circular-slider-background);\\n        opacity: var(--control-circular-slider-background-opacity);\\n        transition:\\n          stroke 180ms ease-in-out,\\n          opacity 180ms ease-in-out;\\n        stroke-linecap: round;\\n        stroke-width: 24px;\\n      }\\n\\n      .arc {\\n        fill: none;\\n        stroke-linecap: round;\\n        stroke-width: 24px;\\n        transition:\\n          stroke-width 300ms ease-in-out,\\n          stroke-dasharray 300ms ease-in-out,\\n          stroke-dashoffset 300ms ease-in-out,\\n          stroke 180ms ease-in-out,\\n          opacity 180ms ease-in-out;\\n      }\\n\\n      .target {\\n        fill: none;\\n        stroke-linecap: round;\\n        stroke-width: 18px;\\n        stroke: white;\\n        transition:\\n          stroke-width 300ms ease-in-out,\\n          stroke-dasharray 300ms ease-in-out,\\n          stroke-dashoffset 300ms ease-in-out,\\n          stroke 180ms ease-in-out,\\n          opacity 180ms ease-in-out;\\n      }\\n\\n      .target-border {\\n        fill: none;\\n        stroke-linecap: round;\\n        stroke-width: 24px;\\n        stroke: white;\\n        transition:\\n          stroke-width 300ms ease-in-out,\\n          stroke-dasharray 300ms ease-in-out,\\n          stroke-dashoffset 300ms ease-in-out,\\n          stroke 180ms ease-in-out,\\n          opacity 180ms ease-in-out;\\n      }\\n\\n      .current {\\n        fill: none;\\n        stroke-linecap: round;\\n        stroke-width: 8px;\\n        stroke: var(--primary-text-color);\\n        opacity: 0.5;\\n        transition:\\n          stroke-width 300ms ease-in-out,\\n          stroke-dasharray 300ms ease-in-out,\\n          stroke-dashoffset 300ms ease-in-out,\\n          stroke 180ms ease-in-out,\\n          opacity 180ms ease-in-out;\\n      }\\n\\n      .arc-current {\\n        stroke: var(--clear-background-color);\\n      }\\n\\n      .arc-clear {\\n        stroke: var(--clear-background-color);\\n      }\\n      .arc-colored {\\n        opacity: 0.5;\\n      }\\n      .arc-active {\\n        outline: none;\\n      }\\n      .arc-active:focus-visible {\\n        stroke-width: 28px;\\n      }\\n\\n      .pressed .arc,\\n      .pressed .target,\\n      .pressed .target-border,\\n      .pressed .current {\\n        transition:\\n          stroke-width 300ms ease-in-out,\\n          stroke 180ms ease-in-out,\\n          opacity 180ms ease-in-out;\\n      }\\n\\n      .inactive .arc,\\n      .inactive .arc-current {\\n        opacity: 0;\\n      }\\n\\n      .value {\\n        stroke: var(--control-circular-slider-color);\\n      }\\n\\n      .low {\\n        stroke: var(--control-circular-slider-low-color);\\n      }\\n\\n      .high {\\n        stroke: var(--control-circular-slider-high-color);\\n      }\\n    \"])));\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["DIRECTION_ALL","Manager","Pan","Press","Tap","TouchMouseInput","LitElement","css","html","nothing","svg","customElement","property","query","queryAll","state","classMap","ifDefined","fireEvent","clamp","svgArc","isTouch","MAX_ANGLE","ROTATE_ANGLE","RADIUS","xy2polar","x","y","r","Math","sqrt","phi","atan2","rad2deg","rad","PI","A11Y_KEY_CODES","Set","HaControlCircularSlider","_decorate","_initialize","_LitElement","_LitElement2","_inherits","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_assertThisInitialized","_createClass","F","d","kind","decorators","type","Boolean","reflect","key","value","String","attribute","Number","low","high","_valueToPercentage","min","max","_percentageToValue","_steppedValue","round","step","_boundedValue","_this$_localLow","_this$_localHigh","_activeSlider","_localLow","_localHigh","updated","changedProps","_get","_getPrototypeOf","prototype","call","has","_localValue","get","_destroyListeners","_setupListeners","connectedCallback","disconnectedCallback","_this2","e","bound","_slider","getBoundingClientRect","center","left","width","top","height","_xy2polar","_xy2polar2","_slicedToArray","offset","angle","_findActiveSlider","_this$_localLow2","_this$_localHigh2","dual","lowDistance","abs","highDistance","_setActiveValue","_getActiveValue","undefined","_this3","_interactions","_managers","forEach","interaction","mc","inputClass","push","pressToActivate","preventInteractionOnScroll","add","enable","pointers","time","panRecognizer","direction","threshold","event","on","srcEvent","stopPropagation","preventDefault","disabled","readonly","percentage","_getPercentageFromEvent","raw","bounded","stepped","set","_this3$shadowRoot","_lastSlider","shadowRoot","getElementById","focus","_this3$shadowRoot2","_tenPercentStep","_handleKeyDown","_this$_lastSlider","code","_this$shadowRoot","currentTarget","id","_handleKeyUp","manager","destroy","_strokeCircleDashArc","_strokeDashArc","from","to","start","end","track","arc","arcOffset","strokeDasharray","strokeDashOffset","renderArc","mode","_this$current","_this$lowLabel","path","limit","current","target","showActive","showTarget","activeArc","coloredArc","targetCircle","currentCircle","onlyDotInteraction","_templateObject","_taggedTemplateLiteral","inactive","_defineProperty","_templateObject2","lowLabel","label","_templateObject3","_templateObject4","render","trackPath","lowValue","highValue","currentStroke","_templateObject5","pressed","_templateObject6","static","styles","_templateObject7"],"sources":["/Users/sercanardil/Desktop/frontend/src/components/ha-control-circular-slider.ts"],"sourcesContent":["import {\n  DIRECTION_ALL,\n  Manager,\n  Pan,\n  Press,\n  Tap,\n  TouchMouseInput,\n} from \"@egjs/hammerjs\";\nimport {\n  CSSResultGroup,\n  LitElement,\n  PropertyValues,\n  TemplateResult,\n  css,\n  html,\n  nothing,\n  svg,\n} from \"lit\";\nimport {\n  customElement,\n  property,\n  query,\n  queryAll,\n  state,\n} from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport { ifDefined } from \"lit/directives/if-defined\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { clamp } from \"../common/number/clamp\";\nimport { svgArc } from \"../resources/svg-arc\";\nimport { isTouch } from \"../util/is_touch\";\n\nconst MAX_ANGLE = 270;\nconst ROTATE_ANGLE = 360 - MAX_ANGLE / 2 - 90;\nconst RADIUS = 145;\n\nfunction xy2polar(x: number, y: number) {\n  const r = Math.sqrt(x * x + y * y);\n  const phi = Math.atan2(y, x);\n  return [r, phi];\n}\n\nfunction rad2deg(rad: number) {\n  return (rad / (2 * Math.PI)) * 360;\n}\n\ntype ActiveSlider = \"low\" | \"high\" | \"value\";\n\ndeclare global {\n  interface HASSDomEvents {\n    \"value-changing\": { value: unknown };\n    \"low-changing\": { value: unknown };\n    \"low-changed\": { value: unknown };\n    \"high-changing\": { value: unknown };\n    \"high-changed\": { value: unknown };\n  }\n}\n\nconst A11Y_KEY_CODES = new Set([\n  \"ArrowRight\",\n  \"ArrowUp\",\n  \"ArrowLeft\",\n  \"ArrowDown\",\n  \"PageUp\",\n  \"PageDown\",\n  \"Home\",\n  \"End\",\n]);\n\nexport type ControlCircularSliderMode = \"start\" | \"end\" | \"full\";\n\n@customElement(\"ha-control-circular-slider\")\nexport class HaControlCircularSlider extends LitElement {\n  @property({ type: Boolean, reflect: true }) public disabled = false;\n\n  @property({ type: Boolean, reflect: true }) public readonly = false;\n\n  @property({ type: Boolean }) public dual = false;\n\n  @property({ type: String }) public mode?: ControlCircularSliderMode;\n\n  @property({ type: Boolean }) public inactive = false;\n\n  @property({ type: String }) public label?: string;\n\n  @property({ type: String, attribute: \"low-label\" }) public lowLabel?: string;\n\n  @property({ type: String, attribute: \"high-label\" })\n  public highLabel?: string;\n\n  @property({ type: Number }) public value?: number;\n\n  @property({ type: Number }) public low?: number;\n\n  @property({ type: Number }) public high?: number;\n\n  @property({ type: Number }) public current?: number;\n\n  @property({ type: Number }) public step = 1;\n\n  @property({ type: Number }) public min = 0;\n\n  @property({ type: Number }) public max = 100;\n\n  @property({ type: Boolean, attribute: \"prevent-interaction-on-scroll\" })\n  public preventInteractionOnScroll = false;\n\n  @state() public _localValue?: number = this.value;\n\n  @state() public _localLow?: number = this.low;\n\n  @state() public _localHigh?: number = this.high;\n\n  @state() public _activeSlider?: ActiveSlider;\n\n  @state() public _lastSlider?: ActiveSlider;\n\n  private _valueToPercentage(value: number) {\n    return (\n      (clamp(value, this.min, this.max) - this.min) / (this.max - this.min)\n    );\n  }\n\n  private _percentageToValue(value: number) {\n    return (this.max - this.min) * value + this.min;\n  }\n\n  private _steppedValue(value: number) {\n    return Math.round(value / this.step) * this.step;\n  }\n\n  private _boundedValue(value: number) {\n    const min =\n      this._activeSlider === \"high\"\n        ? Math.min(this._localLow ?? this.max)\n        : this.min;\n    const max =\n      this._activeSlider === \"low\"\n        ? Math.max(this._localHigh ?? this.min)\n        : this.max;\n    return Math.min(Math.max(value, min), max);\n  }\n\n  protected updated(changedProps: PropertyValues): void {\n    super.updated(changedProps);\n    if (!this._activeSlider) {\n      if (changedProps.has(\"value\")) {\n        this._localValue = this.value;\n      }\n      if (changedProps.has(\"low\")) {\n        this._localLow = this.low;\n      }\n      if (changedProps.has(\"high\")) {\n        this._localHigh = this.high;\n      }\n    }\n\n    if (\n      (changedProps.has(\"_localValue\") &&\n        changedProps.get(\"_localValue\") == null) ||\n      (changedProps.has(\"_localLow\") &&\n        changedProps.get(\"_localLow\") == null) ||\n      (changedProps.has(\"_localHigh\") &&\n        changedProps.get(\"_localHigh\") == null) ||\n      changedProps.has(\"preventInteractionOnScroll\")\n    ) {\n      this._destroyListeners();\n      this._setupListeners();\n    }\n  }\n\n  connectedCallback(): void {\n    super.connectedCallback();\n    this._setupListeners();\n  }\n\n  disconnectedCallback(): void {\n    super.disconnectedCallback();\n  }\n\n  private _managers: HammerManager[] = [];\n\n  private _getPercentageFromEvent = (e: HammerInput) => {\n    const bound = this._slider.getBoundingClientRect();\n    const x = (2 * (e.center.x - bound.left - bound.width / 2)) / bound.width;\n    const y = (2 * (e.center.y - bound.top - bound.height / 2)) / bound.height;\n\n    const [, phi] = xy2polar(x, y);\n\n    const offset = (360 - MAX_ANGLE) / 2;\n\n    const angle = ((rad2deg(phi) + offset - ROTATE_ANGLE + 360) % 360) - offset;\n\n    return Math.max(Math.min(angle / MAX_ANGLE, 1), 0);\n  };\n\n  @query(\"#slider\")\n  private _slider;\n\n  @queryAll(\"[data-interaction]\")\n  private _interactions?: HTMLElement[];\n\n  private _findActiveSlider(value: number): ActiveSlider {\n    if (!this.dual) return \"value\";\n    const low = Math.max(this._localLow ?? this.min, this.min);\n    const high = Math.min(this._localHigh ?? this.max, this.max);\n    if (low >= value) {\n      return \"low\";\n    }\n    if (high <= value) {\n      return \"high\";\n    }\n    const lowDistance = Math.abs(value - low);\n    const highDistance = Math.abs(value - high);\n    return lowDistance <= highDistance ? \"low\" : \"high\";\n  }\n\n  private _setActiveValue(value: number) {\n    switch (this._activeSlider) {\n      case \"high\":\n        this._localHigh = value;\n        break;\n      case \"low\":\n        this._localLow = value;\n        break;\n      case \"value\":\n        this._localValue = value;\n        break;\n    }\n  }\n\n  private _getActiveValue(): number | undefined {\n    switch (this._activeSlider) {\n      case \"high\":\n        return this._localHigh;\n      case \"low\":\n        return this._localLow;\n      case \"value\":\n        return this._localValue;\n    }\n    return undefined;\n  }\n\n  private _setupListeners() {\n    if (this._interactions && this._managers.length === 0) {\n      this._interactions.forEach((interaction) => {\n        const mc = new Manager(interaction, {\n          inputClass: TouchMouseInput,\n        });\n\n        this._managers.push(mc);\n\n        const pressToActivate = this.preventInteractionOnScroll && isTouch;\n\n        // If press to activate is true, a 50ms press is required to activate the slider\n        mc.add(\n          new Press({\n            enable: pressToActivate,\n            pointers: 1,\n            time: 50,\n          })\n        );\n\n        const panRecognizer = new Pan({\n          direction: DIRECTION_ALL,\n          enable: !pressToActivate,\n          threshold: 0,\n        });\n\n        mc.add(panRecognizer);\n\n        mc.add(new Tap({ event: \"singletap\" }));\n\n        mc.on(\"press\", (e) => {\n          e.srcEvent.stopPropagation();\n          e.srcEvent.preventDefault();\n          if (this.disabled || this.readonly) return;\n          const percentage = this._getPercentageFromEvent(e);\n          const raw = this._percentageToValue(percentage);\n          this._activeSlider = this._findActiveSlider(raw);\n          const bounded = this._boundedValue(raw);\n          this._setActiveValue(bounded);\n          const stepped = this._steppedValue(bounded);\n          if (this._activeSlider) {\n            fireEvent(this, `${this._activeSlider}-changing`, {\n              value: stepped,\n            });\n          }\n          panRecognizer.set({ enable: true });\n        });\n\n        mc.on(\"pressup\", (e) => {\n          e.srcEvent.stopPropagation();\n          e.srcEvent.preventDefault();\n          const percentage = this._getPercentageFromEvent(e);\n          const raw = this._percentageToValue(percentage);\n          const bounded = this._boundedValue(raw);\n          const stepped = this._steppedValue(bounded);\n          this._setActiveValue(stepped);\n          if (this._activeSlider) {\n            fireEvent(this, `${this._activeSlider}-changing`, {\n              value: undefined,\n            });\n            fireEvent(this, `${this._activeSlider}-changed`, {\n              value: stepped,\n            });\n          }\n          this._activeSlider = undefined;\n        });\n\n        mc.on(\"pan\", (e) => {\n          e.srcEvent.stopPropagation();\n          e.srcEvent.preventDefault();\n        });\n        mc.on(\"panstart\", (e) => {\n          if (this.disabled || this.readonly) return;\n          const percentage = this._getPercentageFromEvent(e);\n          const raw = this._percentageToValue(percentage);\n          this._activeSlider = this._findActiveSlider(raw);\n          this._lastSlider = this._activeSlider;\n          this.shadowRoot?.getElementById(\"#slider\")?.focus();\n        });\n        mc.on(\"pancancel\", () => {\n          if (this.disabled || this.readonly) return;\n          this._activeSlider = undefined;\n          if (pressToActivate) {\n            panRecognizer.set({ enable: false });\n          }\n        });\n        mc.on(\"panmove\", (e) => {\n          if (this.disabled || this.readonly) return;\n          const percentage = this._getPercentageFromEvent(e);\n          const raw = this._percentageToValue(percentage);\n          const bounded = this._boundedValue(raw);\n          this._setActiveValue(bounded);\n          const stepped = this._steppedValue(bounded);\n          if (this._activeSlider) {\n            fireEvent(this, `${this._activeSlider}-changing`, {\n              value: stepped,\n            });\n          }\n        });\n        mc.on(\"panend\", (e) => {\n          if (this.disabled || this.readonly) return;\n          const percentage = this._getPercentageFromEvent(e);\n          const raw = this._percentageToValue(percentage);\n          const bounded = this._boundedValue(raw);\n          const stepped = this._steppedValue(bounded);\n          this._setActiveValue(stepped);\n          if (this._activeSlider) {\n            fireEvent(this, `${this._activeSlider}-changing`, {\n              value: undefined,\n            });\n            fireEvent(this, `${this._activeSlider}-changed`, {\n              value: stepped,\n            });\n          }\n          this._activeSlider = undefined;\n          if (pressToActivate) {\n            panRecognizer.set({ enable: false });\n          }\n        });\n        mc.on(\"singletap\", (e) => {\n          if (this.disabled || this.readonly) return;\n          const percentage = this._getPercentageFromEvent(e);\n          const raw = this._percentageToValue(percentage);\n          this._activeSlider = this._findActiveSlider(raw);\n          const bounded = this._boundedValue(raw);\n          const stepped = this._steppedValue(bounded);\n          this._setActiveValue(stepped);\n          if (this._activeSlider) {\n            fireEvent(this, `${this._activeSlider}-changing`, {\n              value: undefined,\n            });\n            fireEvent(this, `${this._activeSlider}-changed`, {\n              value: stepped,\n            });\n          }\n          this._lastSlider = this._activeSlider;\n          this.shadowRoot?.getElementById(\"#slider\")?.focus();\n          this._activeSlider = undefined;\n          if (pressToActivate) {\n            panRecognizer.set({ enable: false });\n          }\n        });\n      });\n    }\n  }\n\n  private get _tenPercentStep() {\n    return Math.max(this.step, (this.max - this.min) / 10);\n  }\n\n  private _handleKeyDown(e: KeyboardEvent) {\n    if (!A11Y_KEY_CODES.has(e.code)) return;\n    e.preventDefault();\n    if (this._lastSlider) {\n      this.shadowRoot?.getElementById(this._lastSlider)?.focus();\n    }\n    this._activeSlider =\n      this._lastSlider ?? ((e.currentTarget as any).id as ActiveSlider);\n    this._lastSlider = undefined;\n\n    const value = this._getActiveValue();\n\n    switch (e.code) {\n      case \"ArrowRight\":\n      case \"ArrowUp\":\n        this._setActiveValue(\n          this._boundedValue((value ?? this.min) + this.step)\n        );\n        break;\n      case \"ArrowLeft\":\n      case \"ArrowDown\":\n        this._setActiveValue(\n          this._boundedValue((value ?? this.min) - this.step)\n        );\n        break;\n      case \"PageUp\":\n        this._setActiveValue(\n          this._steppedValue(\n            this._boundedValue((value ?? this.min) + this._tenPercentStep)\n          )\n        );\n        break;\n      case \"PageDown\":\n        this._setActiveValue(\n          this._steppedValue(\n            this._boundedValue((value ?? this.min) - this._tenPercentStep)\n          )\n        );\n        break;\n      case \"Home\":\n        this._setActiveValue(this._boundedValue(this.min));\n        break;\n      case \"End\":\n        this._setActiveValue(this._boundedValue(this.max));\n        break;\n    }\n    fireEvent(this, `${this._activeSlider}-changing`, {\n      value: this._getActiveValue(),\n    });\n    this._activeSlider = undefined;\n  }\n\n  _handleKeyUp(e: KeyboardEvent) {\n    if (!A11Y_KEY_CODES.has(e.code)) return;\n    this._activeSlider = (e.currentTarget as any).id as ActiveSlider;\n    e.preventDefault();\n    fireEvent(this, `${this._activeSlider}-changing`, {\n      value: undefined,\n    });\n    fireEvent(this, `${this._activeSlider}-changed`, {\n      value: this._getActiveValue(),\n    });\n    this._activeSlider = undefined;\n  }\n\n  private _destroyListeners() {\n    if (this._managers.length > 0) {\n      this._managers.forEach((manager) => manager.destroy());\n      this._managers = [];\n    }\n  }\n\n  private _strokeCircleDashArc(value: number): [string, string] {\n    return this._strokeDashArc(value, value);\n  }\n\n  private _strokeDashArc(from: number, to: number): [string, string] {\n    const start = this._valueToPercentage(from);\n    const end = this._valueToPercentage(to);\n\n    const track = (RADIUS * 2 * Math.PI * MAX_ANGLE) / 360;\n    const arc = Math.max((end - start) * track, 0);\n    const arcOffset = start * track - 0.5;\n\n    const strokeDasharray = `${arc} ${track - arc}`;\n    const strokeDashOffset = `-${arcOffset}`;\n    return [strokeDasharray, strokeDashOffset];\n  }\n\n  protected renderArc(\n    id: string,\n    value: number | undefined,\n    mode: ControlCircularSliderMode\n  ) {\n    if (this.disabled) return nothing;\n\n    const path = svgArc({\n      x: 0,\n      y: 0,\n      start: 0,\n      end: MAX_ANGLE,\n      r: RADIUS,\n    });\n\n    const angle =\n      value != null ? this._valueToPercentage(value) * MAX_ANGLE : undefined;\n\n    const limit = mode === \"end\" ? this.max : this.min;\n\n    const current = this.current ?? limit;\n    const target = value ?? limit;\n\n    const showActive =\n      mode === \"end\"\n        ? target <= current\n        : mode === \"start\"\n          ? current <= target\n          : false;\n\n    const showTarget = value != null;\n\n    const activeArc = showTarget\n      ? showActive\n        ? mode === \"end\"\n          ? this._strokeDashArc(target, current)\n          : this._strokeDashArc(current, target)\n        : this._strokeCircleDashArc(target)\n      : undefined;\n\n    const coloredArc =\n      mode === \"full\"\n        ? this._strokeDashArc(this.min, this.max)\n        : mode === \"end\"\n          ? this._strokeDashArc(target, limit)\n          : this._strokeDashArc(limit, target);\n\n    const targetCircle = showTarget\n      ? this._strokeCircleDashArc(target)\n      : undefined;\n\n    const currentCircle =\n      this.current != null &&\n      this.current <= this.max &&\n      this.current >= this.min &&\n      (showActive || this.mode === \"full\")\n        ? this._strokeCircleDashArc(this.current)\n        : undefined;\n\n    const onlyDotInteraction =\n      (this.preventInteractionOnScroll && isTouch) || false;\n\n    return svg`\n      <g class=${classMap({ inactive: Boolean(this.inactive) })}>\n        <path\n          class=\"arc arc-clear\"\n          d=${path}\n          stroke-dasharray=${coloredArc[0]}\n          stroke-dashoffset=${coloredArc[1]}\n        />\n        <path\n          class=\"arc arc-colored ${classMap({ [id]: true })}\"\n          d=${path}\n          stroke-dasharray=${coloredArc[0]}\n          stroke-dashoffset=${coloredArc[1]}\n        />\n        ${\n          activeArc\n            ? svg`\n              <path\n                .id=${id}\n                d=${path}\n                class=\"arc arc-active ${classMap({ [id]: true })}\"\n                stroke-dasharray=${activeArc[0]}\n                stroke-dashoffset=${activeArc[1]}\n                role=\"slider\"\n                tabindex=\"0\"\n                aria-valuemin=${this.min}\n                aria-valuemax=${this.max}\n                aria-valuenow=${\n                  this._localValue != null\n                    ? this._steppedValue(this._localValue)\n                    : undefined\n                }\n                aria-disabled=${this.disabled}\n                aria-readonly=${this.readonly}\n                aria-label=${ifDefined(this.lowLabel ?? this.label)}\n                @keydown=${this._handleKeyDown}\n                @keyup=${this._handleKeyUp}\n              />\n            `\n            : nothing\n        }\n        ${\n          currentCircle\n            ? svg`\n              <path\n                class=\"current arc-current\"\n                d=${path}\n                stroke-dasharray=${currentCircle[0]}\n                stroke-dashoffset=${currentCircle[1]}\n              />\n          `\n            : nothing\n        }\n        ${\n          targetCircle\n            ? svg`\n              <!-- Use circle instead of path for interaction (Safari doesn't support well pointer-events with stroke-dasharray) -->\n              <circle\n                transform=\"rotate(${angle} 0 0)\"\n                ?data-interaction=${onlyDotInteraction}\n                cx=${RADIUS}\n                cy=\"0\"\n                />\n              <path\n                d=${path}\n                stroke-dasharray=${targetCircle[0]}\n                stroke-dashoffset=${targetCircle[1]}\n              />\n              <path\n                class=\"target-border ${classMap({ [id]: true })}\"\n                d=${path}\n                stroke-dasharray=${targetCircle[0]}\n                stroke-dashoffset=${targetCircle[1]}\n              />\n              <path\n                class=\"target\"\n                d=${path}\n                stroke-dasharray=${targetCircle[0]}\n                stroke-dashoffset=${targetCircle[1]}\n              />\n          `\n            : nothing\n        }\n      </g>\n    `;\n  }\n\n  protected render(): TemplateResult {\n    const trackPath = svgArc({\n      x: 0,\n      y: 0,\n      start: 0,\n      end: MAX_ANGLE,\n      r: RADIUS,\n    });\n\n    const lowValue = this.dual ? this._localLow : this._localValue;\n    const highValue = this._localHigh;\n    const current = this.current;\n\n    const currentStroke = current\n      ? this._strokeCircleDashArc(current)\n      : undefined;\n\n    const onlyDotInteraction =\n      (this.preventInteractionOnScroll && isTouch) || false;\n\n    return html`\n      <svg\n        id=\"slider\"\n        viewBox=\"0 0 320 320\"\n        overflow=\"visible\"\n        class=${classMap({\n          pressed: Boolean(this._activeSlider),\n        })}\n        @keydown=${this._handleKeyDown}\n        tabindex=${this._lastSlider ? \"0\" : \"-1\"}\n      >\n        <g\n          id=\"container\"\n          transform=\"translate(160 160) rotate(${ROTATE_ANGLE})\"\n        >\n          <path d=${trackPath} ?data-interaction=${!onlyDotInteraction} />\n          <path class=\"background\" d=${trackPath} />\n          ${currentStroke\n            ? svg`\n                  <path\n                    class=\"current\"\n                    d=${trackPath}\n                    stroke-dasharray=${currentStroke[0]}\n                    stroke-dashoffset=${currentStroke[1]}\n                  />\n                `\n            : nothing}\n          ${lowValue != null || this.mode === \"full\"\n            ? this.renderArc(\n                this.dual ? \"low\" : \"value\",\n                lowValue,\n                (!this.dual && this.mode) || \"start\"\n              )\n            : nothing}\n          ${this.dual && highValue != null\n            ? this.renderArc(\"high\", highValue, \"end\")\n            : nothing}\n        </g>\n      </svg>\n    `;\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      :host {\n        --control-circular-slider-color: var(--primary-color);\n        --control-circular-slider-background: var(--disabled-color);\n        --control-circular-slider-background-opacity: 0.3;\n        --control-circular-slider-low-color: var(\n          --control-circular-slider-color\n        );\n        --control-circular-slider-high-color: var(\n          --control-circular-slider-color\n        );\n        --control-circular-slider-interaction-margin: 12px;\n        width: 320px;\n        display: block;\n      }\n      svg {\n        width: 100%;\n        display: block;\n        pointer-events: none;\n      }\n      g {\n        fill: none;\n      }\n      #slider {\n        outline: none;\n      }\n      path[data-interaction] {\n        fill: none;\n        cursor: pointer;\n        pointer-events: auto;\n        stroke: transparent;\n        stroke-linecap: round;\n        stroke-width: calc(\n          24px + 2 * var(--control-circular-slider-interaction-margin)\n        );\n      }\n      circle[data-interaction] {\n        r: calc(12px + var(--control-circular-slider-interaction-margin));\n        fill: transparent;\n        cursor: pointer;\n        pointer-events: auto;\n      }\n      :host([disabled]) [data-interaction],\n      :host([readonly]) [data-interaction] {\n        cursor: initial;\n        pointer-events: none;\n      }\n\n      .background {\n        fill: none;\n        stroke: var(--control-circular-slider-background);\n        opacity: var(--control-circular-slider-background-opacity);\n        transition:\n          stroke 180ms ease-in-out,\n          opacity 180ms ease-in-out;\n        stroke-linecap: round;\n        stroke-width: 24px;\n      }\n\n      .arc {\n        fill: none;\n        stroke-linecap: round;\n        stroke-width: 24px;\n        transition:\n          stroke-width 300ms ease-in-out,\n          stroke-dasharray 300ms ease-in-out,\n          stroke-dashoffset 300ms ease-in-out,\n          stroke 180ms ease-in-out,\n          opacity 180ms ease-in-out;\n      }\n\n      .target {\n        fill: none;\n        stroke-linecap: round;\n        stroke-width: 18px;\n        stroke: white;\n        transition:\n          stroke-width 300ms ease-in-out,\n          stroke-dasharray 300ms ease-in-out,\n          stroke-dashoffset 300ms ease-in-out,\n          stroke 180ms ease-in-out,\n          opacity 180ms ease-in-out;\n      }\n\n      .target-border {\n        fill: none;\n        stroke-linecap: round;\n        stroke-width: 24px;\n        stroke: white;\n        transition:\n          stroke-width 300ms ease-in-out,\n          stroke-dasharray 300ms ease-in-out,\n          stroke-dashoffset 300ms ease-in-out,\n          stroke 180ms ease-in-out,\n          opacity 180ms ease-in-out;\n      }\n\n      .current {\n        fill: none;\n        stroke-linecap: round;\n        stroke-width: 8px;\n        stroke: var(--primary-text-color);\n        opacity: 0.5;\n        transition:\n          stroke-width 300ms ease-in-out,\n          stroke-dasharray 300ms ease-in-out,\n          stroke-dashoffset 300ms ease-in-out,\n          stroke 180ms ease-in-out,\n          opacity 180ms ease-in-out;\n      }\n\n      .arc-current {\n        stroke: var(--clear-background-color);\n      }\n\n      .arc-clear {\n        stroke: var(--clear-background-color);\n      }\n      .arc-colored {\n        opacity: 0.5;\n      }\n      .arc-active {\n        outline: none;\n      }\n      .arc-active:focus-visible {\n        stroke-width: 28px;\n      }\n\n      .pressed .arc,\n      .pressed .target,\n      .pressed .target-border,\n      .pressed .current {\n        transition:\n          stroke-width 300ms ease-in-out,\n          stroke 180ms ease-in-out,\n          opacity 180ms ease-in-out;\n      }\n\n      .inactive .arc,\n      .inactive .arc-current {\n        opacity: 0;\n      }\n\n      .value {\n        stroke: var(--control-circular-slider-color);\n      }\n\n      .low {\n        stroke: var(--control-circular-slider-low-color);\n      }\n\n      .high {\n        stroke: var(--control-circular-slider-high-color);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-control-circular-slider\": HaControlCircularSlider;\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SACEA,aAAa,EACbC,OAAO,EACPC,GAAG,EACHC,KAAK,EACLC,GAAG,EACHC,eAAe,QACV,gBAAgB;AACvB,SAEEC,UAAU,EAGVC,GAAG,EACHC,IAAI,EACJC,OAAO,EACPC,GAAG,QACE,KAAK;AACZ,SACEC,aAAa,EACbC,QAAQ,EACRC,KAAK,EACLC,QAAQ,EACRC,KAAK,QACA,gBAAgB;AACvB,SAASC,QAAQ,QAAQ,0BAA0B;AACnD,SAASC,SAAS,QAAQ,2BAA2B;AACrD,SAASC,SAAS,QAAQ,0BAA0B;AACpD,SAASC,KAAK,QAAQ,wBAAwB;AAC9C,SAASC,MAAM,QAAQ,sBAAsB;AAC7C,SAASC,OAAO,QAAQ,kBAAkB;AAE1C,IAAMC,SAAS,GAAG,GAAG;AACrB,IAAMC,YAAY,GAAG,GAAG,GAAGD,SAAS,GAAG,CAAC,GAAG,EAAE;AAC7C,IAAME,MAAM,GAAG,GAAG;AAElB,SAASC,QAAQA,CAACC,CAAS,EAAEC,CAAS,EAAE;EACtC,IAAMC,CAAC,GAAGC,IAAI,CAACC,IAAI,CAACJ,CAAC,GAAGA,CAAC,GAAGC,CAAC,GAAGA,CAAC,CAAC;EAClC,IAAMI,GAAG,GAAGF,IAAI,CAACG,KAAK,CAACL,CAAC,EAAED,CAAC,CAAC;EAC5B,OAAO,CAACE,CAAC,EAAEG,GAAG,CAAC;AACjB;AAEA,SAASE,OAAOA,CAACC,GAAW,EAAE;EAC5B,OAAQA,GAAG,IAAI,CAAC,GAAGL,IAAI,CAACM,EAAE,CAAC,GAAI,GAAG;AACpC;AAcA,IAAMC,cAAc,GAAG,IAAIC,GAAG,CAAC,CAC7B,YAAY,EACZ,SAAS,EACT,WAAW,EACX,WAAW,EACX,QAAQ,EACR,UAAU,EACV,MAAM,EACN,KAAK,CACN,CAAC;AAIF,WACaC,uBAAuB,GAAAC,SAAA,EADnC5B,aAAa,CAAC,4BAA4B,CAAC,aAAA6B,WAAA,EAAAC,WAAA;EAAA,IAC/BH,uBAAuB,0BAAAI,YAAA;IAAAC,SAAA,CAAAL,uBAAA,EAAAI,YAAA;IAAA,SAAAJ,wBAAA;MAAA,IAAAM,KAAA;MAAAC,eAAA,OAAAP,uBAAA;MAAA,SAAAQ,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAAC,IAAA,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;QAAAF,IAAA,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;MAAA;MAAAP,KAAA,GAAAQ,UAAA,OAAAd,uBAAA,KAAAe,MAAA,CAAAJ,IAAA;MAAAT,WAAA,CAAAc,sBAAA,CAAAV,KAAA;MAAA,OAAAA,KAAA;IAAA;IAAA,OAAAW,YAAA,CAAAjB,uBAAA;EAAA,EAAAG,WAAA;EAAA;IAAAe,CAAA,EAAvBlB,uBAAuB;IAAAmB,CAAA;MAAAC,IAAA;MAAAC,UAAA,GACjC/C,QAAQ,CAAC;QAAEgD,IAAI,EAAEC,OAAO;QAAEC,OAAO,EAAE;MAAK,CAAC,CAAC;MAAAC,GAAA;MAAAC,KAAA,WAAAA,MAAA;QAAA,OAAmB,KAAK;MAAA;IAAA;MAAAN,IAAA;MAAAC,UAAA,GAElE/C,QAAQ,CAAC;QAAEgD,IAAI,EAAEC,OAAO;QAAEC,OAAO,EAAE;MAAK,CAAC,CAAC;MAAAC,GAAA;MAAAC,KAAA,WAAAA,MAAA;QAAA,OAAmB,KAAK;MAAA;IAAA;MAAAN,IAAA;MAAAC,UAAA,GAElE/C,QAAQ,CAAC;QAAEgD,IAAI,EAAEC;MAAQ,CAAC,CAAC;MAAAE,GAAA;MAAAC,KAAA,WAAAA,MAAA;QAAA,OAAe,KAAK;MAAA;IAAA;MAAAN,IAAA;MAAAC,UAAA,GAE/C/C,QAAQ,CAAC;QAAEgD,IAAI,EAAEK;MAAO,CAAC,CAAC;MAAAF,GAAA;MAAAC,KAAA;IAAA;MAAAN,IAAA;MAAAC,UAAA,GAE1B/C,QAAQ,CAAC;QAAEgD,IAAI,EAAEC;MAAQ,CAAC,CAAC;MAAAE,GAAA;MAAAC,KAAA,WAAAA,MAAA;QAAA,OAAmB,KAAK;MAAA;IAAA;MAAAN,IAAA;MAAAC,UAAA,GAEnD/C,QAAQ,CAAC;QAAEgD,IAAI,EAAEK;MAAO,CAAC,CAAC;MAAAF,GAAA;MAAAC,KAAA;IAAA;MAAAN,IAAA;MAAAC,UAAA,GAE1B/C,QAAQ,CAAC;QAAEgD,IAAI,EAAEK,MAAM;QAAEC,SAAS,EAAE;MAAY,CAAC,CAAC;MAAAH,GAAA;MAAAC,KAAA;IAAA;MAAAN,IAAA;MAAAC,UAAA,GAElD/C,QAAQ,CAAC;QAAEgD,IAAI,EAAEK,MAAM;QAAEC,SAAS,EAAE;MAAa,CAAC,CAAC;MAAAH,GAAA;MAAAC,KAAA;IAAA;MAAAN,IAAA;MAAAC,UAAA,GAGnD/C,QAAQ,CAAC;QAAEgD,IAAI,EAAEO;MAAO,CAAC,CAAC;MAAAJ,GAAA;MAAAC,KAAA;IAAA;MAAAN,IAAA;MAAAC,UAAA,GAE1B/C,QAAQ,CAAC;QAAEgD,IAAI,EAAEO;MAAO,CAAC,CAAC;MAAAJ,GAAA;MAAAC,KAAA;IAAA;MAAAN,IAAA;MAAAC,UAAA,GAE1B/C,QAAQ,CAAC;QAAEgD,IAAI,EAAEO;MAAO,CAAC,CAAC;MAAAJ,GAAA;MAAAC,KAAA;IAAA;MAAAN,IAAA;MAAAC,UAAA,GAE1B/C,QAAQ,CAAC;QAAEgD,IAAI,EAAEO;MAAO,CAAC,CAAC;MAAAJ,GAAA;MAAAC,KAAA;IAAA;MAAAN,IAAA;MAAAC,UAAA,GAE1B/C,QAAQ,CAAC;QAAEgD,IAAI,EAAEO;MAAO,CAAC,CAAC;MAAAJ,GAAA;MAAAC,KAAA,WAAAA,MAAA;QAAA,OAAe,CAAC;MAAA;IAAA;MAAAN,IAAA;MAAAC,UAAA,GAE1C/C,QAAQ,CAAC;QAAEgD,IAAI,EAAEO;MAAO,CAAC,CAAC;MAAAJ,GAAA;MAAAC,KAAA,WAAAA,MAAA;QAAA,OAAc,CAAC;MAAA;IAAA;MAAAN,IAAA;MAAAC,UAAA,GAEzC/C,QAAQ,CAAC;QAAEgD,IAAI,EAAEO;MAAO,CAAC,CAAC;MAAAJ,GAAA;MAAAC,KAAA,WAAAA,MAAA;QAAA,OAAc,GAAG;MAAA;IAAA;MAAAN,IAAA;MAAAC,UAAA,GAE3C/C,QAAQ,CAAC;QAAEgD,IAAI,EAAEC,OAAO;QAAEK,SAAS,EAAE;MAAgC,CAAC,CAAC;MAAAH,GAAA;MAAAC,KAAA,WAAAA,MAAA;QAAA,OACpC,KAAK;MAAA;IAAA;MAAAN,IAAA;MAAAC,UAAA,GAExC5C,KAAK,CAAC,CAAC;MAAAgD,GAAA;MAAAC,KAAA,WAAAA,MAAA;QAAA,OAA+B,IAAI,CAACA,KAAK;MAAA;IAAA;MAAAN,IAAA;MAAAC,UAAA,GAEhD5C,KAAK,CAAC,CAAC;MAAAgD,GAAA;MAAAC,KAAA,WAAAA,MAAA;QAAA,OAA6B,IAAI,CAACI,GAAG;MAAA;IAAA;MAAAV,IAAA;MAAAC,UAAA,GAE5C5C,KAAK,CAAC,CAAC;MAAAgD,GAAA;MAAAC,KAAA,WAAAA,MAAA;QAAA,OAA8B,IAAI,CAACK,IAAI;MAAA;IAAA;MAAAX,IAAA;MAAAC,UAAA,GAE9C5C,KAAK,CAAC,CAAC;MAAAgD,GAAA;MAAAC,KAAA;IAAA;MAAAN,IAAA;MAAAC,UAAA,GAEP5C,KAAK,CAAC,CAAC;MAAAgD,GAAA;MAAAC,KAAA;IAAA;MAAAN,IAAA;MAAAK,GAAA;MAAAC,KAAA,EAER,SAAAM,mBAA2BN,KAAa,EAAE;QACxC,OACE,CAAC7C,KAAK,CAAC6C,KAAK,EAAE,IAAI,CAACO,GAAG,EAAE,IAAI,CAACC,GAAG,CAAC,GAAG,IAAI,CAACD,GAAG,KAAK,IAAI,CAACC,GAAG,GAAG,IAAI,CAACD,GAAG,CAAC;MAEzE;IAAC;MAAAb,IAAA;MAAAK,GAAA;MAAAC,KAAA,EAED,SAAAS,mBAA2BT,KAAa,EAAE;QACxC,OAAO,CAAC,IAAI,CAACQ,GAAG,GAAG,IAAI,CAACD,GAAG,IAAIP,KAAK,GAAG,IAAI,CAACO,GAAG;MACjD;IAAC;MAAAb,IAAA;MAAAK,GAAA;MAAAC,KAAA,EAED,SAAAU,cAAsBV,KAAa,EAAE;QACnC,OAAOnC,IAAI,CAAC8C,KAAK,CAACX,KAAK,GAAG,IAAI,CAACY,IAAI,CAAC,GAAG,IAAI,CAACA,IAAI;MAClD;IAAC;MAAAlB,IAAA;MAAAK,GAAA;MAAAC,KAAA,EAED,SAAAa,cAAsBb,KAAa,EAAE;QAAA,IAAAc,eAAA,EAAAC,gBAAA;QACnC,IAAMR,GAAG,GACP,IAAI,CAACS,aAAa,KAAK,MAAM,GACzBnD,IAAI,CAAC0C,GAAG,EAAAO,eAAA,GAAC,IAAI,CAACG,SAAS,cAAAH,eAAA,cAAAA,eAAA,GAAI,IAAI,CAACN,GAAG,CAAC,GACpC,IAAI,CAACD,GAAG;QACd,IAAMC,GAAG,GACP,IAAI,CAACQ,aAAa,KAAK,KAAK,GACxBnD,IAAI,CAAC2C,GAAG,EAAAO,gBAAA,GAAC,IAAI,CAACG,UAAU,cAAAH,gBAAA,cAAAA,gBAAA,GAAI,IAAI,CAACR,GAAG,CAAC,GACrC,IAAI,CAACC,GAAG;QACd,OAAO3C,IAAI,CAAC0C,GAAG,CAAC1C,IAAI,CAAC2C,GAAG,CAACR,KAAK,EAAEO,GAAG,CAAC,EAAEC,GAAG,CAAC;MAC5C;IAAC;MAAAd,IAAA;MAAAK,GAAA;MAAAC,KAAA,EAED,SAAAmB,QAAkBC,YAA4B,EAAQ;QACpDC,IAAA,CAAAC,eAAA,CAxEShD,uBAAuB,CAAAiD,SAAA,oBAAAC,IAAA,OAwElBJ,YAAY;QAC1B,IAAI,CAAC,IAAI,CAACJ,aAAa,EAAE;UACvB,IAAII,YAAY,CAACK,GAAG,CAAC,OAAO,CAAC,EAAE;YAC7B,IAAI,CAACC,WAAW,GAAG,IAAI,CAAC1B,KAAK;UAC/B;UACA,IAAIoB,YAAY,CAACK,GAAG,CAAC,KAAK,CAAC,EAAE;YAC3B,IAAI,CAACR,SAAS,GAAG,IAAI,CAACb,GAAG;UAC3B;UACA,IAAIgB,YAAY,CAACK,GAAG,CAAC,MAAM,CAAC,EAAE;YAC5B,IAAI,CAACP,UAAU,GAAG,IAAI,CAACb,IAAI;UAC7B;QACF;QAEA,IACGe,YAAY,CAACK,GAAG,CAAC,aAAa,CAAC,IAC9BL,YAAY,CAACO,GAAG,CAAC,aAAa,CAAC,IAAI,IAAI,IACxCP,YAAY,CAACK,GAAG,CAAC,WAAW,CAAC,IAC5BL,YAAY,CAACO,GAAG,CAAC,WAAW,CAAC,IAAI,IAAK,IACvCP,YAAY,CAACK,GAAG,CAAC,YAAY,CAAC,IAC7BL,YAAY,CAACO,GAAG,CAAC,YAAY,CAAC,IAAI,IAAK,IACzCP,YAAY,CAACK,GAAG,CAAC,4BAA4B,CAAC,EAC9C;UACA,IAAI,CAACG,iBAAiB,CAAC,CAAC;UACxB,IAAI,CAACC,eAAe,CAAC,CAAC;QACxB;MACF;IAAC;MAAAnC,IAAA;MAAAK,GAAA;MAAAC,KAAA,EAED,SAAA8B,kBAAA,EAA0B;QACxBT,IAAA,CAAAC,eAAA,CApGShD,uBAAuB,CAAAiD,SAAA,8BAAAC,IAAA;QAqGhC,IAAI,CAACK,eAAe,CAAC,CAAC;MACxB;IAAC;MAAAnC,IAAA;MAAAK,GAAA;MAAAC,KAAA,EAED,SAAA+B,qBAAA,EAA6B;QAC3BV,IAAA,CAAAC,eAAA,CAzGShD,uBAAuB,CAAAiD,SAAA,iCAAAC,IAAA;MA0GlC;IAAC;MAAA9B,IAAA;MAAAK,GAAA;MAAAC,KAAA,WAAAA,MAAA;QAAA,OAEoC,EAAE;MAAA;IAAA;MAAAN,IAAA;MAAAK,GAAA;MAAAC,KAAA,WAAAA,MAAA;QAAA,IAAAgC,MAAA;QAAA,OAEL,UAACC,CAAc,EAAK;UACpD,IAAMC,KAAK,GAAGF,MAAI,CAACG,OAAO,CAACC,qBAAqB,CAAC,CAAC;UAClD,IAAM1E,CAAC,GAAI,CAAC,IAAIuE,CAAC,CAACI,MAAM,CAAC3E,CAAC,GAAGwE,KAAK,CAACI,IAAI,GAAGJ,KAAK,CAACK,KAAK,GAAG,CAAC,CAAC,GAAIL,KAAK,CAACK,KAAK;UACzE,IAAM5E,CAAC,GAAI,CAAC,IAAIsE,CAAC,CAACI,MAAM,CAAC1E,CAAC,GAAGuE,KAAK,CAACM,GAAG,GAAGN,KAAK,CAACO,MAAM,GAAG,CAAC,CAAC,GAAIP,KAAK,CAACO,MAAM;UAE1E,IAAAC,SAAA,GAAgBjF,QAAQ,CAACC,CAAC,EAAEC,CAAC,CAAC;YAAAgF,UAAA,GAAAC,cAAA,CAAAF,SAAA;YAArB3E,GAAG,GAAA4E,UAAA;UAEZ,IAAME,MAAM,GAAG,CAAC,GAAG,GAAGvF,SAAS,IAAI,CAAC;UAEpC,IAAMwF,KAAK,GAAI,CAAC7E,OAAO,CAACF,GAAG,CAAC,GAAG8E,MAAM,GAAGtF,YAAY,GAAG,GAAG,IAAI,GAAG,GAAIsF,MAAM;UAE3E,OAAOhF,IAAI,CAAC2C,GAAG,CAAC3C,IAAI,CAAC0C,GAAG,CAACuC,KAAK,GAAGxF,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;QACpD,CAAC;MAAA;IAAA;MAAAoC,IAAA;MAAAC,UAAA,GAEA9C,KAAK,CAAC,SAAS,CAAC;MAAAkD,GAAA;MAAAC,KAAA;IAAA;MAAAN,IAAA;MAAAC,UAAA,GAGhB7C,QAAQ,CAAC,oBAAoB,CAAC;MAAAiD,GAAA;MAAAC,KAAA;IAAA;MAAAN,IAAA;MAAAK,GAAA;MAAAC,KAAA,EAG/B,SAAA+C,kBAA0B/C,KAAa,EAAgB;QAAA,IAAAgD,gBAAA,EAAAC,iBAAA;QACrD,IAAI,CAAC,IAAI,CAACC,IAAI,EAAE,OAAO,OAAO;QAC9B,IAAM9C,GAAG,GAAGvC,IAAI,CAAC2C,GAAG,EAAAwC,gBAAA,GAAC,IAAI,CAAC/B,SAAS,cAAA+B,gBAAA,cAAAA,gBAAA,GAAI,IAAI,CAACzC,GAAG,EAAE,IAAI,CAACA,GAAG,CAAC;QAC1D,IAAMF,IAAI,GAAGxC,IAAI,CAAC0C,GAAG,EAAA0C,iBAAA,GAAC,IAAI,CAAC/B,UAAU,cAAA+B,iBAAA,cAAAA,iBAAA,GAAI,IAAI,CAACzC,GAAG,EAAE,IAAI,CAACA,GAAG,CAAC;QAC5D,IAAIJ,GAAG,IAAIJ,KAAK,EAAE;UAChB,OAAO,KAAK;QACd;QACA,IAAIK,IAAI,IAAIL,KAAK,EAAE;UACjB,OAAO,MAAM;QACf;QACA,IAAMmD,WAAW,GAAGtF,IAAI,CAACuF,GAAG,CAACpD,KAAK,GAAGI,GAAG,CAAC;QACzC,IAAMiD,YAAY,GAAGxF,IAAI,CAACuF,GAAG,CAACpD,KAAK,GAAGK,IAAI,CAAC;QAC3C,OAAO8C,WAAW,IAAIE,YAAY,GAAG,KAAK,GAAG,MAAM;MACrD;IAAC;MAAA3D,IAAA;MAAAK,GAAA;MAAAC,KAAA,EAED,SAAAsD,gBAAwBtD,KAAa,EAAE;QACrC,QAAQ,IAAI,CAACgB,aAAa;UACxB,KAAK,MAAM;YACT,IAAI,CAACE,UAAU,GAAGlB,KAAK;YACvB;UACF,KAAK,KAAK;YACR,IAAI,CAACiB,SAAS,GAAGjB,KAAK;YACtB;UACF,KAAK,OAAO;YACV,IAAI,CAAC0B,WAAW,GAAG1B,KAAK;YACxB;QACJ;MACF;IAAC;MAAAN,IAAA;MAAAK,GAAA;MAAAC,KAAA,EAED,SAAAuD,gBAAA,EAA8C;QAC5C,QAAQ,IAAI,CAACvC,aAAa;UACxB,KAAK,MAAM;YACT,OAAO,IAAI,CAACE,UAAU;UACxB,KAAK,KAAK;YACR,OAAO,IAAI,CAACD,SAAS;UACvB,KAAK,OAAO;YACV,OAAO,IAAI,CAACS,WAAW;QAC3B;QACA,OAAO8B,SAAS;MAClB;IAAC;MAAA9D,IAAA;MAAAK,GAAA;MAAAC,KAAA,EAED,SAAA6B,gBAAA,EAA0B;QAAA,IAAA4B,MAAA;QACxB,IAAI,IAAI,CAACC,aAAa,IAAI,IAAI,CAACC,SAAS,CAAC3E,MAAM,KAAK,CAAC,EAAE;UACrD,IAAI,CAAC0E,aAAa,CAACE,OAAO,CAAC,UAACC,WAAW,EAAK;YAC1C,IAAMC,EAAE,GAAG,IAAI7H,OAAO,CAAC4H,WAAW,EAAE;cAClCE,UAAU,EAAE1H;YACd,CAAC,CAAC;YAEFoH,MAAI,CAACE,SAAS,CAACK,IAAI,CAACF,EAAE,CAAC;YAEvB,IAAMG,eAAe,GAAGR,MAAI,CAACS,0BAA0B,IAAI7G,OAAO;;YAElE;YACAyG,EAAE,CAACK,GAAG,CACJ,IAAIhI,KAAK,CAAC;cACRiI,MAAM,EAAEH,eAAe;cACvBI,QAAQ,EAAE,CAAC;cACXC,IAAI,EAAE;YACR,CAAC,CACH,CAAC;YAED,IAAMC,aAAa,GAAG,IAAIrI,GAAG,CAAC;cAC5BsI,SAAS,EAAExI,aAAa;cACxBoI,MAAM,EAAE,CAACH,eAAe;cACxBQ,SAAS,EAAE;YACb,CAAC,CAAC;YAEFX,EAAE,CAACK,GAAG,CAACI,aAAa,CAAC;YAErBT,EAAE,CAACK,GAAG,CAAC,IAAI/H,GAAG,CAAC;cAAEsI,KAAK,EAAE;YAAY,CAAC,CAAC,CAAC;YAEvCZ,EAAE,CAACa,EAAE,CAAC,OAAO,EAAE,UAAC1C,CAAC,EAAK;cACpBA,CAAC,CAAC2C,QAAQ,CAACC,eAAe,CAAC,CAAC;cAC5B5C,CAAC,CAAC2C,QAAQ,CAACE,cAAc,CAAC,CAAC;cAC3B,IAAIrB,MAAI,CAACsB,QAAQ,IAAItB,MAAI,CAACuB,QAAQ,EAAE;cACpC,IAAMC,UAAU,GAAGxB,MAAI,CAACyB,uBAAuB,CAACjD,CAAC,CAAC;cAClD,IAAMkD,GAAG,GAAG1B,MAAI,CAAChD,kBAAkB,CAACwE,UAAU,CAAC;cAC/CxB,MAAI,CAACzC,aAAa,GAAGyC,MAAI,CAACV,iBAAiB,CAACoC,GAAG,CAAC;cAChD,IAAMC,OAAO,GAAG3B,MAAI,CAAC5C,aAAa,CAACsE,GAAG,CAAC;cACvC1B,MAAI,CAACH,eAAe,CAAC8B,OAAO,CAAC;cAC7B,IAAMC,OAAO,GAAG5B,MAAI,CAAC/C,aAAa,CAAC0E,OAAO,CAAC;cAC3C,IAAI3B,MAAI,CAACzC,aAAa,EAAE;gBACtB9D,SAAS,CAACuG,MAAI,KAAApE,MAAA,CAAKoE,MAAI,CAACzC,aAAa,gBAAa;kBAChDhB,KAAK,EAAEqF;gBACT,CAAC,CAAC;cACJ;cACAd,aAAa,CAACe,GAAG,CAAC;gBAAElB,MAAM,EAAE;cAAK,CAAC,CAAC;YACrC,CAAC,CAAC;YAEFN,EAAE,CAACa,EAAE,CAAC,SAAS,EAAE,UAAC1C,CAAC,EAAK;cACtBA,CAAC,CAAC2C,QAAQ,CAACC,eAAe,CAAC,CAAC;cAC5B5C,CAAC,CAAC2C,QAAQ,CAACE,cAAc,CAAC,CAAC;cAC3B,IAAMG,UAAU,GAAGxB,MAAI,CAACyB,uBAAuB,CAACjD,CAAC,CAAC;cAClD,IAAMkD,GAAG,GAAG1B,MAAI,CAAChD,kBAAkB,CAACwE,UAAU,CAAC;cAC/C,IAAMG,OAAO,GAAG3B,MAAI,CAAC5C,aAAa,CAACsE,GAAG,CAAC;cACvC,IAAME,OAAO,GAAG5B,MAAI,CAAC/C,aAAa,CAAC0E,OAAO,CAAC;cAC3C3B,MAAI,CAACH,eAAe,CAAC+B,OAAO,CAAC;cAC7B,IAAI5B,MAAI,CAACzC,aAAa,EAAE;gBACtB9D,SAAS,CAACuG,MAAI,KAAApE,MAAA,CAAKoE,MAAI,CAACzC,aAAa,gBAAa;kBAChDhB,KAAK,EAAEwD;gBACT,CAAC,CAAC;gBACFtG,SAAS,CAACuG,MAAI,KAAApE,MAAA,CAAKoE,MAAI,CAACzC,aAAa,eAAY;kBAC/ChB,KAAK,EAAEqF;gBACT,CAAC,CAAC;cACJ;cACA5B,MAAI,CAACzC,aAAa,GAAGwC,SAAS;YAChC,CAAC,CAAC;YAEFM,EAAE,CAACa,EAAE,CAAC,KAAK,EAAE,UAAC1C,CAAC,EAAK;cAClBA,CAAC,CAAC2C,QAAQ,CAACC,eAAe,CAAC,CAAC;cAC5B5C,CAAC,CAAC2C,QAAQ,CAACE,cAAc,CAAC,CAAC;YAC7B,CAAC,CAAC;YACFhB,EAAE,CAACa,EAAE,CAAC,UAAU,EAAE,UAAC1C,CAAC,EAAK;cAAA,IAAAsD,iBAAA;cACvB,IAAI9B,MAAI,CAACsB,QAAQ,IAAItB,MAAI,CAACuB,QAAQ,EAAE;cACpC,IAAMC,UAAU,GAAGxB,MAAI,CAACyB,uBAAuB,CAACjD,CAAC,CAAC;cAClD,IAAMkD,GAAG,GAAG1B,MAAI,CAAChD,kBAAkB,CAACwE,UAAU,CAAC;cAC/CxB,MAAI,CAACzC,aAAa,GAAGyC,MAAI,CAACV,iBAAiB,CAACoC,GAAG,CAAC;cAChD1B,MAAI,CAAC+B,WAAW,GAAG/B,MAAI,CAACzC,aAAa;cACrC,CAAAuE,iBAAA,GAAA9B,MAAI,CAACgC,UAAU,cAAAF,iBAAA,gBAAAA,iBAAA,GAAfA,iBAAA,CAAiBG,cAAc,CAAC,SAAS,CAAC,cAAAH,iBAAA,eAA1CA,iBAAA,CAA4CI,KAAK,CAAC,CAAC;YACrD,CAAC,CAAC;YACF7B,EAAE,CAACa,EAAE,CAAC,WAAW,EAAE,YAAM;cACvB,IAAIlB,MAAI,CAACsB,QAAQ,IAAItB,MAAI,CAACuB,QAAQ,EAAE;cACpCvB,MAAI,CAACzC,aAAa,GAAGwC,SAAS;cAC9B,IAAIS,eAAe,EAAE;gBACnBM,aAAa,CAACe,GAAG,CAAC;kBAAElB,MAAM,EAAE;gBAAM,CAAC,CAAC;cACtC;YACF,CAAC,CAAC;YACFN,EAAE,CAACa,EAAE,CAAC,SAAS,EAAE,UAAC1C,CAAC,EAAK;cACtB,IAAIwB,MAAI,CAACsB,QAAQ,IAAItB,MAAI,CAACuB,QAAQ,EAAE;cACpC,IAAMC,UAAU,GAAGxB,MAAI,CAACyB,uBAAuB,CAACjD,CAAC,CAAC;cAClD,IAAMkD,GAAG,GAAG1B,MAAI,CAAChD,kBAAkB,CAACwE,UAAU,CAAC;cAC/C,IAAMG,OAAO,GAAG3B,MAAI,CAAC5C,aAAa,CAACsE,GAAG,CAAC;cACvC1B,MAAI,CAACH,eAAe,CAAC8B,OAAO,CAAC;cAC7B,IAAMC,OAAO,GAAG5B,MAAI,CAAC/C,aAAa,CAAC0E,OAAO,CAAC;cAC3C,IAAI3B,MAAI,CAACzC,aAAa,EAAE;gBACtB9D,SAAS,CAACuG,MAAI,KAAApE,MAAA,CAAKoE,MAAI,CAACzC,aAAa,gBAAa;kBAChDhB,KAAK,EAAEqF;gBACT,CAAC,CAAC;cACJ;YACF,CAAC,CAAC;YACFvB,EAAE,CAACa,EAAE,CAAC,QAAQ,EAAE,UAAC1C,CAAC,EAAK;cACrB,IAAIwB,MAAI,CAACsB,QAAQ,IAAItB,MAAI,CAACuB,QAAQ,EAAE;cACpC,IAAMC,UAAU,GAAGxB,MAAI,CAACyB,uBAAuB,CAACjD,CAAC,CAAC;cAClD,IAAMkD,GAAG,GAAG1B,MAAI,CAAChD,kBAAkB,CAACwE,UAAU,CAAC;cAC/C,IAAMG,OAAO,GAAG3B,MAAI,CAAC5C,aAAa,CAACsE,GAAG,CAAC;cACvC,IAAME,OAAO,GAAG5B,MAAI,CAAC/C,aAAa,CAAC0E,OAAO,CAAC;cAC3C3B,MAAI,CAACH,eAAe,CAAC+B,OAAO,CAAC;cAC7B,IAAI5B,MAAI,CAACzC,aAAa,EAAE;gBACtB9D,SAAS,CAACuG,MAAI,KAAApE,MAAA,CAAKoE,MAAI,CAACzC,aAAa,gBAAa;kBAChDhB,KAAK,EAAEwD;gBACT,CAAC,CAAC;gBACFtG,SAAS,CAACuG,MAAI,KAAApE,MAAA,CAAKoE,MAAI,CAACzC,aAAa,eAAY;kBAC/ChB,KAAK,EAAEqF;gBACT,CAAC,CAAC;cACJ;cACA5B,MAAI,CAACzC,aAAa,GAAGwC,SAAS;cAC9B,IAAIS,eAAe,EAAE;gBACnBM,aAAa,CAACe,GAAG,CAAC;kBAAElB,MAAM,EAAE;gBAAM,CAAC,CAAC;cACtC;YACF,CAAC,CAAC;YACFN,EAAE,CAACa,EAAE,CAAC,WAAW,EAAE,UAAC1C,CAAC,EAAK;cAAA,IAAA2D,kBAAA;cACxB,IAAInC,MAAI,CAACsB,QAAQ,IAAItB,MAAI,CAACuB,QAAQ,EAAE;cACpC,IAAMC,UAAU,GAAGxB,MAAI,CAACyB,uBAAuB,CAACjD,CAAC,CAAC;cAClD,IAAMkD,GAAG,GAAG1B,MAAI,CAAChD,kBAAkB,CAACwE,UAAU,CAAC;cAC/CxB,MAAI,CAACzC,aAAa,GAAGyC,MAAI,CAACV,iBAAiB,CAACoC,GAAG,CAAC;cAChD,IAAMC,OAAO,GAAG3B,MAAI,CAAC5C,aAAa,CAACsE,GAAG,CAAC;cACvC,IAAME,OAAO,GAAG5B,MAAI,CAAC/C,aAAa,CAAC0E,OAAO,CAAC;cAC3C3B,MAAI,CAACH,eAAe,CAAC+B,OAAO,CAAC;cAC7B,IAAI5B,MAAI,CAACzC,aAAa,EAAE;gBACtB9D,SAAS,CAACuG,MAAI,KAAApE,MAAA,CAAKoE,MAAI,CAACzC,aAAa,gBAAa;kBAChDhB,KAAK,EAAEwD;gBACT,CAAC,CAAC;gBACFtG,SAAS,CAACuG,MAAI,KAAApE,MAAA,CAAKoE,MAAI,CAACzC,aAAa,eAAY;kBAC/ChB,KAAK,EAAEqF;gBACT,CAAC,CAAC;cACJ;cACA5B,MAAI,CAAC+B,WAAW,GAAG/B,MAAI,CAACzC,aAAa;cACrC,CAAA4E,kBAAA,GAAAnC,MAAI,CAACgC,UAAU,cAAAG,kBAAA,gBAAAA,kBAAA,GAAfA,kBAAA,CAAiBF,cAAc,CAAC,SAAS,CAAC,cAAAE,kBAAA,eAA1CA,kBAAA,CAA4CD,KAAK,CAAC,CAAC;cACnDlC,MAAI,CAACzC,aAAa,GAAGwC,SAAS;cAC9B,IAAIS,eAAe,EAAE;gBACnBM,aAAa,CAACe,GAAG,CAAC;kBAAElB,MAAM,EAAE;gBAAM,CAAC,CAAC;cACtC;YACF,CAAC,CAAC;UACJ,CAAC,CAAC;QACJ;MACF;IAAC;MAAA1E,IAAA;MAAAK,GAAA;MAAAC,KAAA,EAED,SAAA6F,gBAAA,EAA8B;QAC5B,OAAOhI,IAAI,CAAC2C,GAAG,CAAC,IAAI,CAACI,IAAI,EAAE,CAAC,IAAI,CAACJ,GAAG,GAAG,IAAI,CAACD,GAAG,IAAI,EAAE,CAAC;MACxD;IAAC;MAAAb,IAAA;MAAAK,GAAA;MAAAC,KAAA,EAED,SAAA8F,eAAuB7D,CAAgB,EAAE;QAAA,IAAA8D,iBAAA;QACvC,IAAI,CAAC3H,cAAc,CAACqD,GAAG,CAACQ,CAAC,CAAC+D,IAAI,CAAC,EAAE;QACjC/D,CAAC,CAAC6C,cAAc,CAAC,CAAC;QAClB,IAAI,IAAI,CAACU,WAAW,EAAE;UAAA,IAAAS,gBAAA;UACpB,CAAAA,gBAAA,OAAI,CAACR,UAAU,cAAAQ,gBAAA,gBAAAA,gBAAA,GAAfA,gBAAA,CAAiBP,cAAc,CAAC,IAAI,CAACF,WAAW,CAAC,cAAAS,gBAAA,eAAjDA,gBAAA,CAAmDN,KAAK,CAAC,CAAC;QAC5D;QACA,IAAI,CAAC3E,aAAa,IAAA+E,iBAAA,GAChB,IAAI,CAACP,WAAW,cAAAO,iBAAA,cAAAA,iBAAA,GAAM9D,CAAC,CAACiE,aAAa,CAASC,EAAmB;QACnE,IAAI,CAACX,WAAW,GAAGhC,SAAS;QAE5B,IAAMxD,KAAK,GAAG,IAAI,CAACuD,eAAe,CAAC,CAAC;QAEpC,QAAQtB,CAAC,CAAC+D,IAAI;UACZ,KAAK,YAAY;UACjB,KAAK,SAAS;YACZ,IAAI,CAAC1C,eAAe,CAClB,IAAI,CAACzC,aAAa,CAAC,CAACb,KAAK,aAALA,KAAK,cAALA,KAAK,GAAI,IAAI,CAACO,GAAG,IAAI,IAAI,CAACK,IAAI,CACpD,CAAC;YACD;UACF,KAAK,WAAW;UAChB,KAAK,WAAW;YACd,IAAI,CAAC0C,eAAe,CAClB,IAAI,CAACzC,aAAa,CAAC,CAACb,KAAK,aAALA,KAAK,cAALA,KAAK,GAAI,IAAI,CAACO,GAAG,IAAI,IAAI,CAACK,IAAI,CACpD,CAAC;YACD;UACF,KAAK,QAAQ;YACX,IAAI,CAAC0C,eAAe,CAClB,IAAI,CAAC5C,aAAa,CAChB,IAAI,CAACG,aAAa,CAAC,CAACb,KAAK,aAALA,KAAK,cAALA,KAAK,GAAI,IAAI,CAACO,GAAG,IAAI,IAAI,CAACsF,eAAe,CAC/D,CACF,CAAC;YACD;UACF,KAAK,UAAU;YACb,IAAI,CAACvC,eAAe,CAClB,IAAI,CAAC5C,aAAa,CAChB,IAAI,CAACG,aAAa,CAAC,CAACb,KAAK,aAALA,KAAK,cAALA,KAAK,GAAI,IAAI,CAACO,GAAG,IAAI,IAAI,CAACsF,eAAe,CAC/D,CACF,CAAC;YACD;UACF,KAAK,MAAM;YACT,IAAI,CAACvC,eAAe,CAAC,IAAI,CAACzC,aAAa,CAAC,IAAI,CAACN,GAAG,CAAC,CAAC;YAClD;UACF,KAAK,KAAK;YACR,IAAI,CAAC+C,eAAe,CAAC,IAAI,CAACzC,aAAa,CAAC,IAAI,CAACL,GAAG,CAAC,CAAC;YAClD;QACJ;QACAtD,SAAS,CAAC,IAAI,KAAAmC,MAAA,CAAK,IAAI,CAAC2B,aAAa,gBAAa;UAChDhB,KAAK,EAAE,IAAI,CAACuD,eAAe,CAAC;QAC9B,CAAC,CAAC;QACF,IAAI,CAACvC,aAAa,GAAGwC,SAAS;MAChC;IAAC;MAAA9D,IAAA;MAAAK,GAAA;MAAAC,KAAA,EAED,SAAAoG,aAAanE,CAAgB,EAAE;QAC7B,IAAI,CAAC7D,cAAc,CAACqD,GAAG,CAACQ,CAAC,CAAC+D,IAAI,CAAC,EAAE;QACjC,IAAI,CAAChF,aAAa,GAAIiB,CAAC,CAACiE,aAAa,CAASC,EAAkB;QAChElE,CAAC,CAAC6C,cAAc,CAAC,CAAC;QAClB5H,SAAS,CAAC,IAAI,KAAAmC,MAAA,CAAK,IAAI,CAAC2B,aAAa,gBAAa;UAChDhB,KAAK,EAAEwD;QACT,CAAC,CAAC;QACFtG,SAAS,CAAC,IAAI,KAAAmC,MAAA,CAAK,IAAI,CAAC2B,aAAa,eAAY;UAC/ChB,KAAK,EAAE,IAAI,CAACuD,eAAe,CAAC;QAC9B,CAAC,CAAC;QACF,IAAI,CAACvC,aAAa,GAAGwC,SAAS;MAChC;IAAC;MAAA9D,IAAA;MAAAK,GAAA;MAAAC,KAAA,EAED,SAAA4B,kBAAA,EAA4B;QAC1B,IAAI,IAAI,CAAC+B,SAAS,CAAC3E,MAAM,GAAG,CAAC,EAAE;UAC7B,IAAI,CAAC2E,SAAS,CAACC,OAAO,CAAC,UAACyC,OAAO;YAAA,OAAKA,OAAO,CAACC,OAAO,CAAC,CAAC;UAAA,EAAC;UACtD,IAAI,CAAC3C,SAAS,GAAG,EAAE;QACrB;MACF;IAAC;MAAAjE,IAAA;MAAAK,GAAA;MAAAC,KAAA,EAED,SAAAuG,qBAA6BvG,KAAa,EAAoB;QAC5D,OAAO,IAAI,CAACwG,cAAc,CAACxG,KAAK,EAAEA,KAAK,CAAC;MAC1C;IAAC;MAAAN,IAAA;MAAAK,GAAA;MAAAC,KAAA,EAED,SAAAwG,eAAuBC,IAAY,EAAEC,EAAU,EAAoB;QACjE,IAAMC,KAAK,GAAG,IAAI,CAACrG,kBAAkB,CAACmG,IAAI,CAAC;QAC3C,IAAMG,GAAG,GAAG,IAAI,CAACtG,kBAAkB,CAACoG,EAAE,CAAC;QAEvC,IAAMG,KAAK,GAAIrJ,MAAM,GAAG,CAAC,GAAGK,IAAI,CAACM,EAAE,GAAGb,SAAS,GAAI,GAAG;QACtD,IAAMwJ,GAAG,GAAGjJ,IAAI,CAAC2C,GAAG,CAAC,CAACoG,GAAG,GAAGD,KAAK,IAAIE,KAAK,EAAE,CAAC,CAAC;QAC9C,IAAME,SAAS,GAAGJ,KAAK,GAAGE,KAAK,GAAG,GAAG;QAErC,IAAMG,eAAe,MAAA3H,MAAA,CAAMyH,GAAG,OAAAzH,MAAA,CAAIwH,KAAK,GAAGC,GAAG,CAAE;QAC/C,IAAMG,gBAAgB,OAAA5H,MAAA,CAAO0H,SAAS,CAAE;QACxC,OAAO,CAACC,eAAe,EAAEC,gBAAgB,CAAC;MAC5C;IAAC;MAAAvH,IAAA;MAAAK,GAAA;MAAAC,KAAA,EAED,SAAAkH,UACEf,EAAU,EACVnG,KAAyB,EACzBmH,IAA+B,EAC/B;QAAA,IAAAC,aAAA,EAAAC,cAAA;QACA,IAAI,IAAI,CAACtC,QAAQ,EAAE,OAAOtI,OAAO;QAEjC,IAAM6K,IAAI,GAAGlK,MAAM,CAAC;UAClBM,CAAC,EAAE,CAAC;UACJC,CAAC,EAAE,CAAC;UACJgJ,KAAK,EAAE,CAAC;UACRC,GAAG,EAAEtJ,SAAS;UACdM,CAAC,EAAEJ;QACL,CAAC,CAAC;QAEF,IAAMsF,KAAK,GACT9C,KAAK,IAAI,IAAI,GAAG,IAAI,CAACM,kBAAkB,CAACN,KAAK,CAAC,GAAG1C,SAAS,GAAGkG,SAAS;QAExE,IAAM+D,KAAK,GAAGJ,IAAI,KAAK,KAAK,GAAG,IAAI,CAAC3G,GAAG,GAAG,IAAI,CAACD,GAAG;QAElD,IAAMiH,OAAO,IAAAJ,aAAA,GAAG,IAAI,CAACI,OAAO,cAAAJ,aAAA,cAAAA,aAAA,GAAIG,KAAK;QACrC,IAAME,MAAM,GAAGzH,KAAK,aAALA,KAAK,cAALA,KAAK,GAAIuH,KAAK;QAE7B,IAAMG,UAAU,GACdP,IAAI,KAAK,KAAK,GACVM,MAAM,IAAID,OAAO,GACjBL,IAAI,KAAK,OAAO,GACdK,OAAO,IAAIC,MAAM,GACjB,KAAK;QAEb,IAAME,UAAU,GAAG3H,KAAK,IAAI,IAAI;QAEhC,IAAM4H,SAAS,GAAGD,UAAU,GACxBD,UAAU,GACRP,IAAI,KAAK,KAAK,GACZ,IAAI,CAACX,cAAc,CAACiB,MAAM,EAAED,OAAO,CAAC,GACpC,IAAI,CAAChB,cAAc,CAACgB,OAAO,EAAEC,MAAM,CAAC,GACtC,IAAI,CAAClB,oBAAoB,CAACkB,MAAM,CAAC,GACnCjE,SAAS;QAEb,IAAMqE,UAAU,GACdV,IAAI,KAAK,MAAM,GACX,IAAI,CAACX,cAAc,CAAC,IAAI,CAACjG,GAAG,EAAE,IAAI,CAACC,GAAG,CAAC,GACvC2G,IAAI,KAAK,KAAK,GACZ,IAAI,CAACX,cAAc,CAACiB,MAAM,EAAEF,KAAK,CAAC,GAClC,IAAI,CAACf,cAAc,CAACe,KAAK,EAAEE,MAAM,CAAC;QAE1C,IAAMK,YAAY,GAAGH,UAAU,GAC3B,IAAI,CAACpB,oBAAoB,CAACkB,MAAM,CAAC,GACjCjE,SAAS;QAEb,IAAMuE,aAAa,GACjB,IAAI,CAACP,OAAO,IAAI,IAAI,IACpB,IAAI,CAACA,OAAO,IAAI,IAAI,CAAChH,GAAG,IACxB,IAAI,CAACgH,OAAO,IAAI,IAAI,CAACjH,GAAG,KACvBmH,UAAU,IAAI,IAAI,CAACP,IAAI,KAAK,MAAM,CAAC,GAChC,IAAI,CAACZ,oBAAoB,CAAC,IAAI,CAACiB,OAAO,CAAC,GACvChE,SAAS;QAEf,IAAMwE,kBAAkB,GACrB,IAAI,CAAC9D,0BAA0B,IAAI7G,OAAO,IAAK,KAAK;QAEvD,OAAOX,GAAG,CAAAuL,eAAA,KAAAA,eAAA,GAAAC,sBAAA,wYACGlL,QAAQ,CAAC;UAAEmL,QAAQ,EAAEtI,OAAO,CAAC,IAAI,CAACsI,QAAQ;QAAE,CAAC,CAAC,EAGjDb,IAAI,EACWO,UAAU,CAAC,CAAC,CAAC,EACZA,UAAU,CAAC,CAAC,CAAC,EAGR7K,QAAQ,CAAAoL,eAAA,KAAIjC,EAAE,EAAG,IAAI,CAAE,CAAC,EAC7CmB,IAAI,EACWO,UAAU,CAAC,CAAC,CAAC,EACZA,UAAU,CAAC,CAAC,CAAC,EAGjCD,SAAS,GACLlL,GAAG,CAAA2L,gBAAA,KAAAA,gBAAA,GAAAH,sBAAA,gkBAEK/B,EAAE,EACJmB,IAAI,EACgBtK,QAAQ,CAAAoL,eAAA,KAAIjC,EAAE,EAAG,IAAI,CAAE,CAAC,EAC7ByB,SAAS,CAAC,CAAC,CAAC,EACXA,SAAS,CAAC,CAAC,CAAC,EAGhB,IAAI,CAACrH,GAAG,EACR,IAAI,CAACC,GAAG,EAEtB,IAAI,CAACkB,WAAW,IAAI,IAAI,GACpB,IAAI,CAAChB,aAAa,CAAC,IAAI,CAACgB,WAAW,CAAC,GACpC8B,SAAS,EAEC,IAAI,CAACuB,QAAQ,EACb,IAAI,CAACC,QAAQ,EAChB/H,SAAS,EAAAoK,cAAA,GAAC,IAAI,CAACiB,QAAQ,cAAAjB,cAAA,cAAAA,cAAA,GAAI,IAAI,CAACkB,KAAK,CAAC,EACxC,IAAI,CAACzC,cAAc,EACrB,IAAI,CAACM,YAAY,IAG5B3J,OAAO,EAGXsL,aAAa,GACTrL,GAAG,CAAA8L,gBAAA,KAAAA,gBAAA,GAAAN,sBAAA,kNAGGZ,IAAI,EACWS,aAAa,CAAC,CAAC,CAAC,EACfA,aAAa,CAAC,CAAC,CAAC,IAGtCtL,OAAO,EAGXqL,YAAY,GACRpL,GAAG,CAAA+L,gBAAA,KAAAA,gBAAA,GAAAP,sBAAA,20BAGmBpF,KAAK,EACLkF,kBAAkB,EACjCxK,MAAM,EAIP8J,IAAI,EACWQ,YAAY,CAAC,CAAC,CAAC,EACdA,YAAY,CAAC,CAAC,CAAC,EAGZ9K,QAAQ,CAAAoL,eAAA,KAAIjC,EAAE,EAAG,IAAI,CAAE,CAAC,EAC3CmB,IAAI,EACWQ,YAAY,CAAC,CAAC,CAAC,EACdA,YAAY,CAAC,CAAC,CAAC,EAI/BR,IAAI,EACWQ,YAAY,CAAC,CAAC,CAAC,EACdA,YAAY,CAAC,CAAC,CAAC,IAGrCrL,OAAO;MAInB;IAAC;MAAAiD,IAAA;MAAAK,GAAA;MAAAC,KAAA,EAED,SAAA0I,OAAA,EAAmC;QACjC,IAAMC,SAAS,GAAGvL,MAAM,CAAC;UACvBM,CAAC,EAAE,CAAC;UACJC,CAAC,EAAE,CAAC;UACJgJ,KAAK,EAAE,CAAC;UACRC,GAAG,EAAEtJ,SAAS;UACdM,CAAC,EAAEJ;QACL,CAAC,CAAC;QAEF,IAAMoL,QAAQ,GAAG,IAAI,CAAC1F,IAAI,GAAG,IAAI,CAACjC,SAAS,GAAG,IAAI,CAACS,WAAW;QAC9D,IAAMmH,SAAS,GAAG,IAAI,CAAC3H,UAAU;QACjC,IAAMsG,OAAO,GAAG,IAAI,CAACA,OAAO;QAE5B,IAAMsB,aAAa,GAAGtB,OAAO,GACzB,IAAI,CAACjB,oBAAoB,CAACiB,OAAO,CAAC,GAClChE,SAAS;QAEb,IAAMwE,kBAAkB,GACrB,IAAI,CAAC9D,0BAA0B,IAAI7G,OAAO,IAAK,KAAK;QAEvD,OAAOb,IAAI,CAAAuM,gBAAA,KAAAA,gBAAA,GAAAb,sBAAA,sdAKClL,QAAQ,CAAC;UACfgM,OAAO,EAAEnJ,OAAO,CAAC,IAAI,CAACmB,aAAa;QACrC,CAAC,CAAC,EACS,IAAI,CAAC8E,cAAc,EACnB,IAAI,CAACN,WAAW,GAAG,GAAG,GAAG,IAAI,EAICjI,YAAY,EAEzCoL,SAAS,EAAsB,CAACX,kBAAkB,EAC/BW,SAAS,EACpCG,aAAa,GACXpM,GAAG,CAAAuM,gBAAA,KAAAA,gBAAA,GAAAf,sBAAA,oOAGOS,SAAS,EACMG,aAAa,CAAC,CAAC,CAAC,EACfA,aAAa,CAAC,CAAC,CAAC,IAG1CrM,OAAO,EACTmM,QAAQ,IAAI,IAAI,IAAI,IAAI,CAACzB,IAAI,KAAK,MAAM,GACtC,IAAI,CAACD,SAAS,CACZ,IAAI,CAAChE,IAAI,GAAG,KAAK,GAAG,OAAO,EAC3B0F,QAAQ,EACP,CAAC,IAAI,CAAC1F,IAAI,IAAI,IAAI,CAACiE,IAAI,IAAK,OAC/B,CAAC,GACD1K,OAAO,EACT,IAAI,CAACyG,IAAI,IAAI2F,SAAS,IAAI,IAAI,GAC5B,IAAI,CAAC3B,SAAS,CAAC,MAAM,EAAE2B,SAAS,EAAE,KAAK,CAAC,GACxCpM,OAAO;MAInB;IAAC;MAAAiD,IAAA;MAAAwJ,MAAA;MAAAnJ,GAAA;MAAAC,KAAA,EAED,SAAAmJ,OAAA,EAAoC;QAClC,OAAO5M,GAAG,CAAA6M,gBAAA,KAAAA,gBAAA,GAAAlB,sBAAA;MA2JZ;IAAC;EAAA;AAAA,GAzwB0C5L,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}