{"ast":null,"code":"import \"core-js/modules/es.object.values.js\";\nexport var getIntegrationDescriptions = function getIntegrationDescriptions(hass) {\n  return hass.callWS({\n    type: \"integration/descriptions\"\n  });\n};\nexport var findIntegration = function findIntegration(integrations, domain) {\n  if (!integrations) {\n    return undefined;\n  }\n  if (domain in integrations) {\n    var integration = integrations[domain];\n    if (\"integration_type\" in integration) {\n      return integration;\n    }\n  }\n  for (var _i = 0, _Object$values = Object.values(integrations); _i < _Object$values.length; _i++) {\n    var _integration = _Object$values[_i];\n    if (\"integrations\" in _integration && _integration.integrations && domain in _integration.integrations) {\n      return _integration.integrations[domain];\n    }\n  }\n  return undefined;\n};","map":{"version":3,"names":["getIntegrationDescriptions","hass","callWS","type","findIntegration","integrations","domain","undefined","integration","_i","_Object$values","Object","values","length"],"sources":["/Users/sercanardil/Desktop/frontend/src/data/integrations.ts"],"sourcesContent":["import { HomeAssistant } from \"../types\";\nimport { IntegrationType } from \"./integration\";\n\nexport type IotStandards = \"zwave\" | \"zigbee\" | \"homekit\" | \"matter\";\n\nexport interface Integration {\n  integration_type: IntegrationType;\n  name?: string;\n  config_flow?: boolean;\n  iot_standards?: IotStandards[];\n  iot_class?: string;\n  supported_by?: string;\n  is_built_in?: boolean;\n}\n\nexport interface Integrations {\n  [domain: string]: Integration;\n}\n\nexport interface Brand {\n  name?: string;\n  integrations?: Integrations;\n  iot_standards?: IotStandards[];\n  is_built_in?: boolean;\n}\n\nexport interface Brands {\n  [domain: string]: Integration | Brand;\n}\n\nexport interface IntegrationDescriptions {\n  core: {\n    integration: Brands;\n    helper: Integrations;\n    translated_name: string[];\n  };\n  custom: {\n    integration: Brands;\n    helper: Integrations;\n  };\n}\n\nexport const getIntegrationDescriptions = (\n  hass: HomeAssistant\n): Promise<IntegrationDescriptions> =>\n  hass.callWS<IntegrationDescriptions>({\n    type: \"integration/descriptions\",\n  });\n\nexport const findIntegration = (\n  integrations: Brands | undefined,\n  domain: string\n): Integration | undefined => {\n  if (!integrations) {\n    return undefined;\n  }\n  if (domain in integrations) {\n    const integration = integrations[domain];\n    if (\"integration_type\" in integration) {\n      return integration;\n    }\n  }\n  for (const integration of Object.values(integrations)) {\n    if (\n      \"integrations\" in integration &&\n      integration.integrations &&\n      domain in integration.integrations\n    ) {\n      return integration.integrations[domain];\n    }\n  }\n  return undefined;\n};\n"],"mappings":";AA0CA,OAAO,IAAMA,0BAA0B,GAAG,SAA7BA,0BAA0BA,CACrCC,IAAmB;EAAA,OAEnBA,IAAI,CAACC,MAAM,CAA0B;IACnCC,IAAI,EAAE;EACR,CAAC,CAAC;AAAA;AAEJ,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAC1BC,YAAgC,EAChCC,MAAc,EACc;EAC5B,IAAI,CAACD,YAAY,EAAE;IACjB,OAAOE,SAAS;EAClB;EACA,IAAID,MAAM,IAAID,YAAY,EAAE;IAC1B,IAAMG,WAAW,GAAGH,YAAY,CAACC,MAAM,CAAC;IACxC,IAAI,kBAAkB,IAAIE,WAAW,EAAE;MACrC,OAAOA,WAAW;IACpB;EACF;EACA,SAAAC,EAAA,MAAAC,cAAA,GAA0BC,MAAM,CAACC,MAAM,CAACP,YAAY,CAAC,EAAAI,EAAA,GAAAC,cAAA,CAAAG,MAAA,EAAAJ,EAAA,IAAE;IAAlD,IAAMD,YAAW,GAAAE,cAAA,CAAAD,EAAA;IACpB,IACE,cAAc,IAAID,YAAW,IAC7BA,YAAW,CAACH,YAAY,IACxBC,MAAM,IAAIE,YAAW,CAACH,YAAY,EAClC;MACA,OAAOG,YAAW,CAACH,YAAY,CAACC,MAAM,CAAC;IACzC;EACF;EACA,OAAOC,SAAS;AAClB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}