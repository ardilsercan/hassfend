{"ast":null,"code":"/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport '../../focus/md-focus-ring.js';\nimport '../../ripple/ripple.js';\nimport { html, isServer, LitElement, nothing } from 'lit';\nimport { property, query, queryAssignedElements } from 'lit/decorators.js';\nimport { requestUpdateOnAriaChange } from '../../internal/aria/delegate.js';\nimport { setupFormSubmitter } from '../../internal/controller/form-submitter.js';\nimport { dispatchActivationClick, isActivationClick } from '../../internal/events/form-label-activation.js';\nimport { internals, mixinElementInternals } from '../../labs/behaviors/element-internals.js';\n// Separate variable needed for closure.\nconst buttonBaseClass = mixinElementInternals(LitElement);\n/**\n * A button component.\n */\nexport class Button extends buttonBaseClass {\n  get name() {\n    var _this$getAttribute;\n    return (_this$getAttribute = this.getAttribute('name')) !== null && _this$getAttribute !== void 0 ? _this$getAttribute : '';\n  }\n  set name(name) {\n    this.setAttribute('name', name);\n  }\n  /**\n   * The associated form element with which this element's value will submit.\n   */\n  get form() {\n    return this[internals].form;\n  }\n  constructor() {\n    super();\n    /**\n     * Whether or not the button is disabled.\n     */\n    this.disabled = false;\n    /**\n     * The URL that the link button points to.\n     */\n    this.href = '';\n    /**\n     * Where to display the linked `href` URL for a link button. Common options\n     * include `_blank` to open in a new tab.\n     */\n    this.target = '';\n    /**\n     * Whether to render the icon at the inline end of the label rather than the\n     * inline start.\n     *\n     * _Note:_ Link buttons cannot have trailing icons.\n     */\n    this.trailingIcon = false;\n    /**\n     * Whether to display the icon or not.\n     */\n    this.hasIcon = false;\n    /**\n     * The default behavior of the button. May be \"text\", \"reset\", or \"submit\"\n     * (default).\n     */\n    this.type = 'submit';\n    /**\n     * The value added to a form with the button's name when the button submits a\n     * form.\n     */\n    this.value = '';\n    this.handleActivationClick = event => {\n      if (!isActivationClick(event) || !this.buttonElement) {\n        return;\n      }\n      this.focus();\n      dispatchActivationClick(this.buttonElement);\n    };\n    if (!isServer) {\n      this.addEventListener('click', this.handleActivationClick);\n    }\n  }\n  focus() {\n    var _this$buttonElement;\n    (_this$buttonElement = this.buttonElement) === null || _this$buttonElement === void 0 || _this$buttonElement.focus();\n  }\n  blur() {\n    var _this$buttonElement2;\n    (_this$buttonElement2 = this.buttonElement) === null || _this$buttonElement2 === void 0 || _this$buttonElement2.blur();\n  }\n  render() {\n    var _this$renderElevation;\n    // Link buttons may not be disabled\n    const isDisabled = this.disabled && !this.href;\n    const buttonOrLink = this.href ? this.renderLink() : this.renderButton();\n    // TODO(b/310046938): due to a limitation in focus ring/ripple, we can't use\n    // the same ID for different elements, so we change the ID instead.\n    const buttonId = this.href ? 'link' : 'button';\n    return html`\n      ${(_this$renderElevation = this.renderElevationOrOutline) === null || _this$renderElevation === void 0 ? void 0 : _this$renderElevation.call(this)}\n      <div class=\"background\"></div>\n      <md-focus-ring part=\"focus-ring\" for=${buttonId}></md-focus-ring>\n      <md-ripple for=${buttonId} ?disabled=\"${isDisabled}\"></md-ripple>\n      ${buttonOrLink}\n    `;\n  }\n  renderButton() {\n    // Needed for closure conformance\n    const {\n      ariaLabel,\n      ariaHasPopup,\n      ariaExpanded\n    } = this;\n    return html`<button\n      id=\"button\"\n      class=\"button\"\n      ?disabled=${this.disabled}\n      aria-label=\"${ariaLabel || nothing}\"\n      aria-haspopup=\"${ariaHasPopup || nothing}\"\n      aria-expanded=\"${ariaExpanded || nothing}\">\n      ${this.renderContent()}\n    </button>`;\n  }\n  renderLink() {\n    // Needed for closure conformance\n    const {\n      ariaLabel,\n      ariaHasPopup,\n      ariaExpanded\n    } = this;\n    return html`<a\n      id=\"link\"\n      class=\"button\"\n      aria-label=\"${ariaLabel || nothing}\"\n      aria-haspopup=\"${ariaHasPopup || nothing}\"\n      aria-expanded=\"${ariaExpanded || nothing}\"\n      href=${this.href}\n      target=${this.target || nothing}\n      >${this.renderContent()}\n    </a>`;\n  }\n  renderContent() {\n    const icon = html`<slot\n      name=\"icon\"\n      @slotchange=\"${this.handleSlotChange}\"></slot>`;\n    return html`\n      <span class=\"touch\"></span>\n      ${this.trailingIcon ? nothing : icon}\n      <span class=\"label\"><slot></slot></span>\n      ${this.trailingIcon ? icon : nothing}\n    `;\n  }\n  handleSlotChange() {\n    this.hasIcon = this.assignedIcons.length > 0;\n  }\n}\n(() => {\n  requestUpdateOnAriaChange(Button);\n  setupFormSubmitter(Button);\n})();\n/** @nocollapse */\nButton.formAssociated = true;\n/** @nocollapse */\nButton.shadowRootOptions = {\n  mode: 'open',\n  delegatesFocus: true\n};\n__decorate([property({\n  type: Boolean,\n  reflect: true\n})], Button.prototype, \"disabled\", void 0);\n__decorate([property()], Button.prototype, \"href\", void 0);\n__decorate([property()], Button.prototype, \"target\", void 0);\n__decorate([property({\n  type: Boolean,\n  attribute: 'trailing-icon',\n  reflect: true\n})], Button.prototype, \"trailingIcon\", void 0);\n__decorate([property({\n  type: Boolean,\n  attribute: 'has-icon',\n  reflect: true\n})], Button.prototype, \"hasIcon\", void 0);\n__decorate([property()], Button.prototype, \"type\", void 0);\n__decorate([property({\n  reflect: true\n})], Button.prototype, \"value\", void 0);\n__decorate([query('.button')], Button.prototype, \"buttonElement\", void 0);\n__decorate([queryAssignedElements({\n  slot: 'icon',\n  flatten: true\n})], Button.prototype, \"assignedIcons\", void 0);","map":{"version":3,"names":["html","isServer","LitElement","nothing","property","query","queryAssignedElements","requestUpdateOnAriaChange","setupFormSubmitter","dispatchActivationClick","isActivationClick","internals","mixinElementInternals","buttonBaseClass","Button","name","_this$getAttribute","getAttribute","setAttribute","form","constructor","disabled","href","target","trailingIcon","hasIcon","type","value","handleActivationClick","event","buttonElement","focus","addEventListener","_this$buttonElement","blur","_this$buttonElement2","render","_this$renderElevation","isDisabled","buttonOrLink","renderLink","renderButton","buttonId","renderElevationOrOutline","call","ariaLabel","ariaHasPopup","ariaExpanded","renderContent","icon","handleSlotChange","assignedIcons","length","formAssociated","shadowRootOptions","mode","delegatesFocus","__decorate","Boolean","reflect","attribute","slot","flatten"],"sources":["button.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport '../../focus/md-focus-ring.js';\nimport '../../ripple/ripple.js';\n\nimport {html, isServer, LitElement, nothing} from 'lit';\nimport {property, query, queryAssignedElements} from 'lit/decorators.js';\n\nimport {ARIAMixinStrict} from '../../internal/aria/aria.js';\nimport {requestUpdateOnAriaChange} from '../../internal/aria/delegate.js';\nimport {\n  FormSubmitter,\n  setupFormSubmitter,\n  type FormSubmitterType,\n} from '../../internal/controller/form-submitter.js';\nimport {\n  dispatchActivationClick,\n  isActivationClick,\n} from '../../internal/events/form-label-activation.js';\nimport {\n  internals,\n  mixinElementInternals,\n} from '../../labs/behaviors/element-internals.js';\n\n// Separate variable needed for closure.\nconst buttonBaseClass = mixinElementInternals(LitElement);\n\n/**\n * A button component.\n */\nexport abstract class Button extends buttonBaseClass implements FormSubmitter {\n  static {\n    requestUpdateOnAriaChange(Button);\n    setupFormSubmitter(Button);\n  }\n\n  /** @nocollapse */\n  static readonly formAssociated = true;\n\n  /** @nocollapse */\n  static override shadowRootOptions: ShadowRootInit = {\n    mode: 'open',\n    delegatesFocus: true,\n  };\n\n  /**\n   * Whether or not the button is disabled.\n   */\n  @property({type: Boolean, reflect: true}) disabled = false;\n\n  /**\n   * The URL that the link button points to.\n   */\n  @property() href = '';\n\n  /**\n   * Where to display the linked `href` URL for a link button. Common options\n   * include `_blank` to open in a new tab.\n   */\n  @property() target: '_blank' | '_parent' | '_self' | '_top' | '' = '';\n\n  /**\n   * Whether to render the icon at the inline end of the label rather than the\n   * inline start.\n   *\n   * _Note:_ Link buttons cannot have trailing icons.\n   */\n  @property({type: Boolean, attribute: 'trailing-icon', reflect: true})\n  trailingIcon = false;\n\n  /**\n   * Whether to display the icon or not.\n   */\n  @property({type: Boolean, attribute: 'has-icon', reflect: true}) hasIcon =\n    false;\n\n  /**\n   * The default behavior of the button. May be \"text\", \"reset\", or \"submit\"\n   * (default).\n   */\n  @property() type: FormSubmitterType = 'submit';\n\n  /**\n   * The value added to a form with the button's name when the button submits a\n   * form.\n   */\n  @property({reflect: true}) value = '';\n\n  get name() {\n    return this.getAttribute('name') ?? '';\n  }\n  set name(name: string) {\n    this.setAttribute('name', name);\n  }\n\n  /**\n   * The associated form element with which this element's value will submit.\n   */\n  get form() {\n    return this[internals].form;\n  }\n\n  @query('.button') private readonly buttonElement!: HTMLElement | null;\n\n  @queryAssignedElements({slot: 'icon', flatten: true})\n  private readonly assignedIcons!: HTMLElement[];\n\n  constructor() {\n    super();\n    if (!isServer) {\n      this.addEventListener('click', this.handleActivationClick);\n    }\n  }\n\n  override focus() {\n    this.buttonElement?.focus();\n  }\n\n  override blur() {\n    this.buttonElement?.blur();\n  }\n\n  protected override render() {\n    // Link buttons may not be disabled\n    const isDisabled = this.disabled && !this.href;\n    const buttonOrLink = this.href ? this.renderLink() : this.renderButton();\n    // TODO(b/310046938): due to a limitation in focus ring/ripple, we can't use\n    // the same ID for different elements, so we change the ID instead.\n    const buttonId = this.href ? 'link' : 'button';\n    return html`\n      ${this.renderElevationOrOutline?.()}\n      <div class=\"background\"></div>\n      <md-focus-ring part=\"focus-ring\" for=${buttonId}></md-focus-ring>\n      <md-ripple for=${buttonId} ?disabled=\"${isDisabled}\"></md-ripple>\n      ${buttonOrLink}\n    `;\n  }\n\n  // Buttons can override this to add elevation or an outline. Use this and\n  // return `<md-elevation>` (for elevated, filled, and tonal buttons)\n  // or `<div class=\"outline\">` (for outlined buttons).\n  // Text buttons that have neither do not need to implement this.\n  protected renderElevationOrOutline?(): unknown;\n\n  private renderButton() {\n    // Needed for closure conformance\n    const {ariaLabel, ariaHasPopup, ariaExpanded} = this as ARIAMixinStrict;\n    return html`<button\n      id=\"button\"\n      class=\"button\"\n      ?disabled=${this.disabled}\n      aria-label=\"${ariaLabel || nothing}\"\n      aria-haspopup=\"${ariaHasPopup || nothing}\"\n      aria-expanded=\"${ariaExpanded || nothing}\">\n      ${this.renderContent()}\n    </button>`;\n  }\n\n  private renderLink() {\n    // Needed for closure conformance\n    const {ariaLabel, ariaHasPopup, ariaExpanded} = this as ARIAMixinStrict;\n    return html`<a\n      id=\"link\"\n      class=\"button\"\n      aria-label=\"${ariaLabel || nothing}\"\n      aria-haspopup=\"${ariaHasPopup || nothing}\"\n      aria-expanded=\"${ariaExpanded || nothing}\"\n      href=${this.href}\n      target=${this.target || nothing}\n      >${this.renderContent()}\n    </a>`;\n  }\n\n  private renderContent() {\n    const icon = html`<slot\n      name=\"icon\"\n      @slotchange=\"${this.handleSlotChange}\"></slot>`;\n\n    return html`\n      <span class=\"touch\"></span>\n      ${this.trailingIcon ? nothing : icon}\n      <span class=\"label\"><slot></slot></span>\n      ${this.trailingIcon ? icon : nothing}\n    `;\n  }\n\n  private readonly handleActivationClick = (event: MouseEvent) => {\n    if (!isActivationClick(event) || !this.buttonElement) {\n      return;\n    }\n    this.focus();\n    dispatchActivationClick(this.buttonElement);\n  };\n\n  private handleSlotChange() {\n    this.hasIcon = this.assignedIcons.length > 0;\n  }\n}\n"],"mappings":"AAAA;;;;;;AAMA,OAAO,8BAA8B;AACrC,OAAO,wBAAwB;AAE/B,SAAQA,IAAI,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,OAAO,QAAO,KAAK;AACvD,SAAQC,QAAQ,EAAEC,KAAK,EAAEC,qBAAqB,QAAO,mBAAmB;AAGxE,SAAQC,yBAAyB,QAAO,iCAAiC;AACzE,SAEEC,kBAAkB,QAEb,6CAA6C;AACpD,SACEC,uBAAuB,EACvBC,iBAAiB,QACZ,gDAAgD;AACvD,SACEC,SAAS,EACTC,qBAAqB,QAChB,2CAA2C;AAElD;AACA,MAAMC,eAAe,GAAGD,qBAAqB,CAACV,UAAU,CAAC;AAEzD;;;AAGA,OAAM,MAAgBY,MAAO,SAAQD,eAAe;EA0DlD,IAAIE,IAAIA,CAAA;IAAA,IAAAC,kBAAA;IACN,QAAAA,kBAAA,GAAO,IAAI,CAACC,YAAY,CAAC,MAAM,CAAC,cAAAD,kBAAA,cAAAA,kBAAA,GAAI,EAAE;EACxC;EACA,IAAID,IAAIA,CAACA,IAAY;IACnB,IAAI,CAACG,YAAY,CAAC,MAAM,EAAEH,IAAI,CAAC;EACjC;EAEA;;;EAGA,IAAII,IAAIA,CAAA;IACN,OAAO,IAAI,CAACR,SAAS,CAAC,CAACQ,IAAI;EAC7B;EAOAC,YAAA;IACE,KAAK,EAAE;IA/DT;;;IAG0C,KAAAC,QAAQ,GAAG,KAAK;IAE1D;;;IAGY,KAAAC,IAAI,GAAG,EAAE;IAErB;;;;IAIY,KAAAC,MAAM,GAAiD,EAAE;IAErE;;;;;;IAOA,KAAAC,YAAY,GAAG,KAAK;IAEpB;;;IAGiE,KAAAC,OAAO,GACtE,KAAK;IAEP;;;;IAIY,KAAAC,IAAI,GAAsB,QAAQ;IAE9C;;;;IAI2B,KAAAC,KAAK,GAAG,EAAE;IAoGpB,KAAAC,qBAAqB,GAAIC,KAAiB,IAAI;MAC7D,IAAI,CAACnB,iBAAiB,CAACmB,KAAK,CAAC,IAAI,CAAC,IAAI,CAACC,aAAa,EAAE;QACpD;;MAEF,IAAI,CAACC,KAAK,EAAE;MACZtB,uBAAuB,CAAC,IAAI,CAACqB,aAAa,CAAC;IAC7C,CAAC;IAnFC,IAAI,CAAC7B,QAAQ,EAAE;MACb,IAAI,CAAC+B,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAACJ,qBAAqB,CAAC;;EAE9D;EAESG,KAAKA,CAAA;IAAA,IAAAE,mBAAA;IACZ,CAAAA,mBAAA,OAAI,CAACH,aAAa,cAAAG,mBAAA,eAAlBA,mBAAA,CAAoBF,KAAK,EAAE;EAC7B;EAESG,IAAIA,CAAA;IAAA,IAAAC,oBAAA;IACX,CAAAA,oBAAA,OAAI,CAACL,aAAa,cAAAK,oBAAA,eAAlBA,oBAAA,CAAoBD,IAAI,EAAE;EAC5B;EAEmBE,MAAMA,CAAA;IAAA,IAAAC,qBAAA;IACvB;IACA,MAAMC,UAAU,GAAG,IAAI,CAACjB,QAAQ,IAAI,CAAC,IAAI,CAACC,IAAI;IAC9C,MAAMiB,YAAY,GAAG,IAAI,CAACjB,IAAI,GAAG,IAAI,CAACkB,UAAU,EAAE,GAAG,IAAI,CAACC,YAAY,EAAE;IACxE;IACA;IACA,MAAMC,QAAQ,GAAG,IAAI,CAACpB,IAAI,GAAG,MAAM,GAAG,QAAQ;IAC9C,OAAOtB,IAAI;iCACP,IAAI,CAAC2C,wBAAwB,cAAAN,qBAAA,uBAA7BA,qBAAA,CAAAO,IAAA,KAA+B,CAAE;;6CAEIF,QAAQ;uBAC9BA,QAAQ,eAAeJ,UAAU;QAChDC,YAAY;KACf;EACH;EAQQE,YAAYA,CAAA;IAClB;IACA,MAAM;MAACI,SAAS;MAAEC,YAAY;MAAEC;IAAY,CAAC,GAAG,IAAuB;IACvE,OAAO/C,IAAI;;;kBAGG,IAAI,CAACqB,QAAQ;oBACXwB,SAAS,IAAI1C,OAAO;uBACjB2C,YAAY,IAAI3C,OAAO;uBACvB4C,YAAY,IAAI5C,OAAO;QACtC,IAAI,CAAC6C,aAAa,EAAE;cACd;EACZ;EAEQR,UAAUA,CAAA;IAChB;IACA,MAAM;MAACK,SAAS;MAAEC,YAAY;MAAEC;IAAY,CAAC,GAAG,IAAuB;IACvE,OAAO/C,IAAI;;;oBAGK6C,SAAS,IAAI1C,OAAO;uBACjB2C,YAAY,IAAI3C,OAAO;uBACvB4C,YAAY,IAAI5C,OAAO;aACjC,IAAI,CAACmB,IAAI;eACP,IAAI,CAACC,MAAM,IAAIpB,OAAO;SAC5B,IAAI,CAAC6C,aAAa,EAAE;SACpB;EACP;EAEQA,aAAaA,CAAA;IACnB,MAAMC,IAAI,GAAGjD,IAAI;;qBAEA,IAAI,CAACkD,gBAAgB,WAAW;IAEjD,OAAOlD,IAAI;;QAEP,IAAI,CAACwB,YAAY,GAAGrB,OAAO,GAAG8C,IAAI;;QAElC,IAAI,CAACzB,YAAY,GAAGyB,IAAI,GAAG9C,OAAO;KACrC;EACH;EAUQ+C,gBAAgBA,CAAA;IACtB,IAAI,CAACzB,OAAO,GAAG,IAAI,CAAC0B,aAAa,CAACC,MAAM,GAAG,CAAC;EAC9C;;AArKA;EACE7C,yBAAyB,CAACO,MAAM,CAAC;EACjCN,kBAAkB,CAACM,MAAM,CAAC;AAC5B,CAAC;AAED;AACgBA,MAAA,CAAAuC,cAAc,GAAG,IAAI;AAErC;AACgBvC,MAAA,CAAAwC,iBAAiB,GAAmB;EAClDC,IAAI,EAAE,MAAM;EACZC,cAAc,EAAE;CACjB;AAKyCC,UAAA,EAAzCrD,QAAQ,CAAC;EAACsB,IAAI,EAAEgC,OAAO;EAAEC,OAAO,EAAE;AAAI,CAAC,CAAC,C,uCAAkB;AAK/CF,UAAA,EAAXrD,QAAQ,EAAE,C,mCAAW;AAMVqD,UAAA,EAAXrD,QAAQ,EAAE,C,qCAA2D;AAStEqD,UAAA,EADCrD,QAAQ,CAAC;EAACsB,IAAI,EAAEgC,OAAO;EAAEE,SAAS,EAAE,eAAe;EAAED,OAAO,EAAE;AAAI,CAAC,CAAC,C,2CAChD;AAK4CF,UAAA,EAAhErD,QAAQ,CAAC;EAACsB,IAAI,EAAEgC,OAAO;EAAEE,SAAS,EAAE,UAAU;EAAED,OAAO,EAAE;AAAI,CAAC,CAAC,C,sCACxD;AAMIF,UAAA,EAAXrD,QAAQ,EAAE,C,mCAAoC;AAMpBqD,UAAA,EAA1BrD,QAAQ,CAAC;EAACuD,OAAO,EAAE;AAAI,CAAC,CAAC,C,oCAAY;AAgBHF,UAAA,EAAlCpD,KAAK,CAAC,SAAS,CAAC,C,4CAAqD;AAGrDoD,UAAA,EADhBnD,qBAAqB,CAAC;EAACuD,IAAI,EAAE,MAAM;EAAEC,OAAO,EAAE;AAAI,CAAC,CAAC,C,4CACN"},"metadata":{},"sourceType":"module","externalDependencies":[]}