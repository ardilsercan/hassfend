{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _decorate from \"@babel/runtime/helpers/decorate\";\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6;\nimport \"core-js/modules/es.array.concat.js\";\nimport \"@material/mwc-button\";\nvar mdiAlertOctagram = \"M2.2,16.06L3.88,12L2.2,7.94L6.26,6.26L7.94,2.2L12,3.88L16.06,2.2L17.74,6.26L21.8,7.94L20.12,12L21.8,16.06L17.74,17.74L16.06,21.8L12,20.12L7.94,21.8L6.26,17.74L2.2,16.06M13,17V15H11V17H13M13,13V7H11V13H13Z\";\nvar mdiCheckBold = \"M9,20.42L2.79,14.21L5.62,11.38L9,14.77L18.88,4.88L21.71,7.71L9,20.42Z\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport \"../ha-circular-progress\";\nimport \"../ha-svg-icon\";\nexport var HaProgressButton = _decorate([customElement(\"ha-progress-button\")], function (_initialize, _LitElement) {\n  var HaProgressButton = /*#__PURE__*/function (_LitElement2) {\n    _inherits(HaProgressButton, _LitElement2);\n    function HaProgressButton() {\n      var _this;\n      _classCallCheck(this, HaProgressButton);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, HaProgressButton, [].concat(args));\n      _initialize(_assertThisInitialized(_this));\n      return _this;\n    }\n    return _createClass(HaProgressButton);\n  }(_LitElement);\n  return {\n    F: HaProgressButton,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"disabled\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"progress\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"raised\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_result\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var overlay = this._result || this.progress;\n        return html(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      <mwc-button\\n        ?raised=\", \"\\n        .disabled=\", \"\\n        @click=\", \"\\n        class=\", \"\\n      >\\n        <slot></slot>\\n      </mwc-button>\\n      \", \"\\n    \"])), this.raised, this.disabled || this.progress, this._buttonTapped, this._result || \"\", !overlay ? nothing : html(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n            <div class=\\\"progress\\\">\\n              \", \"\\n            </div>\\n          \"])), this._result === \"success\" ? html(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"<ha-svg-icon .path=\", \"></ha-svg-icon>\"])), mdiCheckBold) : this._result === \"error\" ? html(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"<ha-svg-icon .path=\", \"></ha-svg-icon>\"])), mdiAlertOctagram) : this.progress ? html(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"\\n                        <ha-circular-progress\\n                          size=\\\"small\\\"\\n                          indeterminate\\n                        ></ha-circular-progress>\\n                      \"]))) : \"\"));\n      }\n    }, {\n      kind: \"method\",\n      key: \"actionSuccess\",\n      value: function actionSuccess() {\n        this._setResult(\"success\");\n      }\n    }, {\n      kind: \"method\",\n      key: \"actionError\",\n      value: function actionError() {\n        this._setResult(\"error\");\n      }\n    }, {\n      kind: \"method\",\n      key: \"_setResult\",\n      value: function _setResult(result) {\n        var _this2 = this;\n        this._result = result;\n        setTimeout(function () {\n          _this2._result = undefined;\n        }, 2000);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_buttonTapped\",\n      value: function _buttonTapped(ev) {\n        if (this.progress) {\n          ev.stopPropagation();\n        }\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"\\n      :host {\\n        outline: none;\\n        display: inline-block;\\n        position: relative;\\n      }\\n\\n      mwc-button {\\n        transition: all 1s;\\n      }\\n\\n      mwc-button.success {\\n        --mdc-theme-primary: white;\\n        background-color: var(--success-color);\\n        transition: none;\\n        border-radius: 4px;\\n        pointer-events: none;\\n      }\\n\\n      mwc-button[raised].success {\\n        --mdc-theme-primary: var(--success-color);\\n        --mdc-theme-on-primary: white;\\n      }\\n\\n      mwc-button.error {\\n        --mdc-theme-primary: white;\\n        background-color: var(--error-color);\\n        transition: none;\\n        border-radius: 4px;\\n        pointer-events: none;\\n      }\\n\\n      mwc-button[raised].error {\\n        --mdc-theme-primary: var(--error-color);\\n        --mdc-theme-on-primary: white;\\n      }\\n\\n      .progress {\\n        bottom: 4px;\\n        position: absolute;\\n        text-align: center;\\n        top: 4px;\\n        width: 100%;\\n      }\\n\\n      ha-svg-icon {\\n        color: white;\\n      }\\n\\n      mwc-button.success slot,\\n      mwc-button.error slot {\\n        visibility: hidden;\\n      }\\n    \"])));\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["mdiAlertOctagram","mdiCheckBold","css","html","LitElement","nothing","customElement","property","state","HaProgressButton","_decorate","_initialize","_LitElement","_LitElement2","_inherits","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_assertThisInitialized","_createClass","F","d","kind","decorators","type","Boolean","key","value","render","overlay","_result","progress","_templateObject","_taggedTemplateLiteral","raised","disabled","_buttonTapped","_templateObject2","_templateObject3","_templateObject4","_templateObject5","actionSuccess","_setResult","actionError","result","_this2","setTimeout","undefined","ev","stopPropagation","static","styles","_templateObject6"],"sources":["/workspaces/frontend/src/components/buttons/ha-progress-button.ts"],"sourcesContent":["import \"@material/mwc-button\";\nimport { mdiAlertOctagram, mdiCheckBold } from \"@mdi/js\";\nimport {\n  css,\n  CSSResultGroup,\n  html,\n  LitElement,\n  nothing,\n  TemplateResult,\n} from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport \"../ha-circular-progress\";\nimport \"../ha-svg-icon\";\n\n@customElement(\"ha-progress-button\")\nexport class HaProgressButton extends LitElement {\n  @property({ type: Boolean }) public disabled = false;\n\n  @property({ type: Boolean }) public progress = false;\n\n  @property({ type: Boolean }) public raised = false;\n\n  @state() private _result?: \"success\" | \"error\";\n\n  public render(): TemplateResult {\n    const overlay = this._result || this.progress;\n    return html`\n      <mwc-button\n        ?raised=${this.raised}\n        .disabled=${this.disabled || this.progress}\n        @click=${this._buttonTapped}\n        class=${this._result || \"\"}\n      >\n        <slot></slot>\n      </mwc-button>\n      ${!overlay\n        ? nothing\n        : html`\n            <div class=\"progress\">\n              ${this._result === \"success\"\n                ? html`<ha-svg-icon .path=${mdiCheckBold}></ha-svg-icon>`\n                : this._result === \"error\"\n                  ? html`<ha-svg-icon .path=${mdiAlertOctagram}></ha-svg-icon>`\n                  : this.progress\n                    ? html`\n                        <ha-circular-progress\n                          size=\"small\"\n                          indeterminate\n                        ></ha-circular-progress>\n                      `\n                    : \"\"}\n            </div>\n          `}\n    `;\n  }\n\n  public actionSuccess(): void {\n    this._setResult(\"success\");\n  }\n\n  public actionError(): void {\n    this._setResult(\"error\");\n  }\n\n  private _setResult(result: \"success\" | \"error\"): void {\n    this._result = result;\n    setTimeout(() => {\n      this._result = undefined;\n    }, 2000);\n  }\n\n  private _buttonTapped(ev: Event): void {\n    if (this.progress) {\n      ev.stopPropagation();\n    }\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      :host {\n        outline: none;\n        display: inline-block;\n        position: relative;\n      }\n\n      mwc-button {\n        transition: all 1s;\n      }\n\n      mwc-button.success {\n        --mdc-theme-primary: white;\n        background-color: var(--success-color);\n        transition: none;\n        border-radius: 4px;\n        pointer-events: none;\n      }\n\n      mwc-button[raised].success {\n        --mdc-theme-primary: var(--success-color);\n        --mdc-theme-on-primary: white;\n      }\n\n      mwc-button.error {\n        --mdc-theme-primary: white;\n        background-color: var(--error-color);\n        transition: none;\n        border-radius: 4px;\n        pointer-events: none;\n      }\n\n      mwc-button[raised].error {\n        --mdc-theme-primary: var(--error-color);\n        --mdc-theme-on-primary: white;\n      }\n\n      .progress {\n        bottom: 4px;\n        position: absolute;\n        text-align: center;\n        top: 4px;\n        width: 100%;\n      }\n\n      ha-svg-icon {\n        color: white;\n      }\n\n      mwc-button.success slot,\n      mwc-button.error slot {\n        visibility: hidden;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-progress-button\": HaProgressButton;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}