{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/helpers/regeneratorRuntime\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _typeof from \"@babel/runtime/helpers/typeof\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/esnext.set.difference.v2.js\";\nimport \"core-js/modules/esnext.set.intersection.v2.js\";\nimport \"core-js/modules/esnext.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/esnext.set.is-subset-of.v2.js\";\nimport \"core-js/modules/esnext.set.is-superset-of.v2.js\";\nimport \"core-js/modules/esnext.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/esnext.set.union.v2.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport { atLeastVersion } from \"../../common/config/version\";\nexport var hassioApiResultExtractor = function hassioApiResultExtractor(response) {\n  return response.data;\n};\nexport var extractApiErrorMessage = function extractApiErrorMessage(error) {\n  return _typeof(error) === \"object\" ? _typeof(error.body) === \"object\" ? error.body.message || \"Unknown error, see supervisor logs\" : error.body || error.message || \"Unknown error, see supervisor logs\" : error;\n};\nvar ignoredStatusCodes = new Set([502, 503, 504]);\nexport var ignoreSupervisorError = function ignoreSupervisorError(error) {\n  if (error && error.status_code && ignoredStatusCodes.has(error.status_code)) {\n    return true;\n  }\n  if (error && error.message && (error.message.includes(\"ERR_CONNECTION_CLOSED\") || error.message.includes(\"ERR_CONNECTION_RESET\"))) {\n    return true;\n  }\n  return false;\n};\nexport var fetchHassioStats = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(hass, container) {\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (!atLeastVersion(hass.config.version, 2021, 2, 4)) {\n            _context.next = 2;\n            break;\n          }\n          return _context.abrupt(\"return\", hass.callWS({\n            type: \"supervisor/api\",\n            endpoint: \"/\".concat(container, \"/stats\"),\n            method: \"get\"\n          }));\n        case 2:\n          _context.t0 = hassioApiResultExtractor;\n          _context.next = 5;\n          return hass.callApi(\"GET\", \"hassio/\".concat(container, \"/stats\"));\n        case 5:\n          _context.t1 = _context.sent;\n          return _context.abrupt(\"return\", (0, _context.t0)(_context.t1));\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function fetchHassioStats(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["atLeastVersion","hassioApiResultExtractor","response","data","extractApiErrorMessage","error","_typeof","body","message","ignoredStatusCodes","Set","ignoreSupervisorError","status_code","has","includes","fetchHassioStats","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","hass","container","wrap","_callee$","_context","prev","next","config","version","abrupt","callWS","type","endpoint","concat","method","t0","callApi","t1","sent","stop","_x","_x2","apply","arguments"],"sources":["/workspaces/frontend/src/data/hassio/common.ts"],"sourcesContent":["import { atLeastVersion } from \"../../common/config/version\";\nimport { HomeAssistant } from \"../../types\";\n\nexport interface HassioResponse<T> {\n  data: T;\n  message?: string;\n  result: \"ok\" | \"error\";\n}\n\nexport interface HassioStats {\n  blk_read: number;\n  blk_write: number;\n  cpu_percent: number;\n  memory_limit: number;\n  memory_percent: number;\n  memory_usage: number;\n  network_rx: number;\n  network_tx: number;\n}\n\nexport const hassioApiResultExtractor = <T>(response: HassioResponse<T>) =>\n  response.data;\n\nexport const extractApiErrorMessage = (error: any): string =>\n  typeof error === \"object\"\n    ? typeof error.body === \"object\"\n      ? error.body.message || \"Unknown error, see supervisor logs\"\n      : error.body || error.message || \"Unknown error, see supervisor logs\"\n    : error;\n\nconst ignoredStatusCodes = new Set([502, 503, 504]);\n\nexport const ignoreSupervisorError = (error): boolean => {\n  if (error && error.status_code && ignoredStatusCodes.has(error.status_code)) {\n    return true;\n  }\n  if (\n    error &&\n    error.message &&\n    (error.message.includes(\"ERR_CONNECTION_CLOSED\") ||\n      error.message.includes(\"ERR_CONNECTION_RESET\"))\n  ) {\n    return true;\n  }\n  return false;\n};\n\nexport const fetchHassioStats = async (\n  hass: HomeAssistant,\n  container: string\n): Promise<HassioStats> => {\n  if (atLeastVersion(hass.config.version, 2021, 2, 4)) {\n    return hass.callWS({\n      type: \"supervisor/api\",\n      endpoint: `/${container}/stats`,\n      method: \"get\",\n    });\n  }\n\n  return hassioApiResultExtractor(\n    await hass.callApi<HassioResponse<HassioStats>>(\n      \"GET\",\n      `hassio/${container}/stats`\n    )\n  );\n};\n"],"mappings":";;;;;;;;;;;;;;;;;AAAA,SAASA,cAAc,QAAQ,6BAA6B;AAoB5D,OAAO,IAAMC,wBAAwB,GAAG,SAA3BA,wBAAwBA,CAAOC,QAA2B;EAAA,OACrEA,QAAQ,CAACC,IAAI;AAAA;AAEf,OAAO,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAsBA,CAAIC,KAAU;EAAA,OAC/CC,OAAA,CAAOD,KAAK,MAAK,QAAQ,GACrBC,OAAA,CAAOD,KAAK,CAACE,IAAI,MAAK,QAAQ,GAC5BF,KAAK,CAACE,IAAI,CAACC,OAAO,IAAI,oCAAoC,GAC1DH,KAAK,CAACE,IAAI,IAAIF,KAAK,CAACG,OAAO,IAAI,oCAAoC,GACrEH,KAAK;AAAA;AAEX,IAAMI,kBAAkB,GAAG,IAAIC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AAEnD,OAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAAIN,KAAK,EAAc;EACvD,IAAIA,KAAK,IAAIA,KAAK,CAACO,WAAW,IAAIH,kBAAkB,CAACI,GAAG,CAACR,KAAK,CAACO,WAAW,CAAC,EAAE;IAC3E,OAAO,IAAI;EACb;EACA,IACEP,KAAK,IACLA,KAAK,CAACG,OAAO,KACZH,KAAK,CAACG,OAAO,CAACM,QAAQ,CAAC,uBAAuB,CAAC,IAC9CT,KAAK,CAACG,OAAO,CAACM,QAAQ,CAAC,sBAAsB,CAAC,CAAC,EACjD;IACA,OAAO,IAAI;EACb;EACA,OAAO,KAAK;AACd,CAAC;AAED,OAAO,IAAMC,gBAAgB;EAAA,IAAAC,IAAA,GAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAC9BC,IAAmB,EACnBC,SAAiB;IAAA,OAAAJ,mBAAA,GAAAK,IAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UAAA,KAEb3B,cAAc,CAACqB,IAAI,CAACO,MAAM,CAACC,OAAO,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;YAAAJ,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAA,OAAAF,QAAA,CAAAK,MAAA,WAC1CT,IAAI,CAACU,MAAM,CAAC;YACjBC,IAAI,EAAE,gBAAgB;YACtBC,QAAQ,MAAAC,MAAA,CAAMZ,SAAS,WAAQ;YAC/Ba,MAAM,EAAE;UACV,CAAC,CAAC;QAAA;UAAAV,QAAA,CAAAW,EAAA,GAGGnC,wBAAwB;UAAAwB,QAAA,CAAAE,IAAA;UAAA,OACvBN,IAAI,CAACgB,OAAO,CAChB,KAAK,YAAAH,MAAA,CACKZ,SAAS,WACrB,CAAC;QAAA;UAAAG,QAAA,CAAAa,EAAA,GAAAb,QAAA,CAAAc,IAAA;UAAA,OAAAd,QAAA,CAAAK,MAAA,eAAAL,QAAA,CAAAW,EAAA,EAAAX,QAAA,CAAAa,EAAA;QAAA;QAAA;UAAA,OAAAb,QAAA,CAAAe,IAAA;MAAA;IAAA,GAAApB,OAAA;EAAA,CAEJ;EAAA,gBAlBYL,gBAAgBA,CAAA0B,EAAA,EAAAC,GAAA;IAAA,OAAA1B,IAAA,CAAA2B,KAAA,OAAAC,SAAA;EAAA;AAAA,GAkB5B"},"metadata":{},"sourceType":"module","externalDependencies":[]}