{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport { storeState } from \"../util/ha-pref-storage\";\nvar hapticPatterns = {\n  success: [50, 50, 50],\n  warning: [100, 50, 100],\n  failure: [200, 100, 200],\n  light: [50],\n  medium: [100],\n  heavy: [200],\n  selection: [20]\n};\nvar handleHaptic = function handleHaptic(hapticTypeEvent) {\n  navigator.vibrate(hapticPatterns[hapticTypeEvent.detail]);\n};\nexport var hapticMixin = function hapticMixin(superClass) {\n  return /*#__PURE__*/function (_superClass) {\n    _inherits(_class, _superClass);\n    function _class() {\n      _classCallCheck(this, _class);\n      return _callSuper(this, _class, arguments);\n    }\n    _createClass(_class, [{\n      key: \"firstUpdated\",\n      value: function firstUpdated(changedProps) {\n        var _this = this;\n        _get(_getPrototypeOf(_class.prototype), \"firstUpdated\", this).call(this, changedProps);\n        this.addEventListener(\"hass-vibrate\", function (ev) {\n          var vibrate = ev.detail.vibrate;\n          // @ts-expect-error not all browsers support vibrate\n          if (navigator.vibrate && vibrate) {\n            window.addEventListener(\"haptic\", handleHaptic);\n          } else {\n            window.removeEventListener(\"haptic\", handleHaptic);\n          }\n          _this._updateHass({\n            vibrate: vibrate\n          });\n          storeState(_this.hass);\n        });\n      }\n    }, {\n      key: \"hassConnected\",\n      value: function hassConnected() {\n        _get(_getPrototypeOf(_class.prototype), \"hassConnected\", this).call(this);\n        // @ts-expect-error not all browsers support vibrate\n        if (navigator.vibrate && this.hass.vibrate) {\n          window.addEventListener(\"haptic\", handleHaptic);\n        }\n      }\n    }]);\n    return _class;\n  }(superClass);\n};","map":{"version":3,"names":["storeState","hapticPatterns","success","warning","failure","light","medium","heavy","selection","handleHaptic","hapticTypeEvent","navigator","vibrate","detail","hapticMixin","superClass","_superClass","_inherits","_class","_classCallCheck","_callSuper","arguments","_createClass","key","value","firstUpdated","changedProps","_this","_get","_getPrototypeOf","prototype","call","addEventListener","ev","window","removeEventListener","_updateHass","hass","hassConnected"],"sources":["/workspaces/frontend/src/state/haptic-mixin.ts"],"sourcesContent":["import { PropertyValues } from \"lit\";\nimport { HASSDomEvent } from \"../common/dom/fire_event\";\nimport { HapticType } from \"../data/haptics\";\nimport { Constructor, HomeAssistant } from \"../types\";\nimport { storeState } from \"../util/ha-pref-storage\";\nimport { HassBaseEl } from \"./hass-base-mixin\";\n\ninterface VibrateParams {\n  vibrate: HomeAssistant[\"vibrate\"];\n}\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    \"hass-vibrate\": VibrateParams;\n  }\n  // for add event listener\n  interface HTMLElementEventMap {\n    \"hass-vibrate\": HASSDomEvent<VibrateParams>;\n  }\n}\n\nconst hapticPatterns = {\n  success: [50, 50, 50],\n  warning: [100, 50, 100],\n  failure: [200, 100, 200],\n  light: [50],\n  medium: [100],\n  heavy: [200],\n  selection: [20],\n};\n\nconst handleHaptic = (hapticTypeEvent: HASSDomEvent<HapticType>) => {\n  navigator.vibrate(hapticPatterns[hapticTypeEvent.detail]);\n};\n\nexport const hapticMixin = <T extends Constructor<HassBaseEl>>(superClass: T) =>\n  class extends superClass {\n    protected firstUpdated(changedProps: PropertyValues) {\n      super.firstUpdated(changedProps);\n      this.addEventListener(\"hass-vibrate\", (ev) => {\n        const vibrate = ev.detail.vibrate;\n        // @ts-expect-error not all browsers support vibrate\n        if (navigator.vibrate && vibrate) {\n          window.addEventListener(\"haptic\", handleHaptic);\n        } else {\n          window.removeEventListener(\"haptic\", handleHaptic);\n        }\n        this._updateHass({ vibrate });\n        storeState(this.hass!);\n      });\n    }\n\n    protected hassConnected() {\n      super.hassConnected();\n      // @ts-expect-error not all browsers support vibrate\n      if (navigator.vibrate && this.hass!.vibrate) {\n        window.addEventListener(\"haptic\", handleHaptic);\n      }\n    }\n  };\n"],"mappings":";;;;;;AAIA,SAASA,UAAU,QAAQ,yBAAyB;AAkBpD,IAAMC,cAAc,GAAG;EACrBC,OAAO,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;EACrBC,OAAO,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC;EACvBC,OAAO,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACxBC,KAAK,EAAE,CAAC,EAAE,CAAC;EACXC,MAAM,EAAE,CAAC,GAAG,CAAC;EACbC,KAAK,EAAE,CAAC,GAAG,CAAC;EACZC,SAAS,EAAE,CAAC,EAAE;AAChB,CAAC;AAED,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAIC,eAAyC,EAAK;EAClEC,SAAS,CAACC,OAAO,CAACX,cAAc,CAACS,eAAe,CAACG,MAAM,CAAC,CAAC;AAC3D,CAAC;AAED,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAuCC,UAAa;EAAA,8BAAAC,WAAA;IAAAC,SAAA,CAAAC,MAAA,EAAAF,WAAA;IAAA,SAAAE,OAAA;MAAAC,eAAA,OAAAD,MAAA;MAAA,OAAAE,UAAA,OAAAF,MAAA,EAAAG,SAAA;IAAA;IAAAC,YAAA,CAAAJ,MAAA;MAAAK,GAAA;MAAAC,KAAA,EAExE,SAAAC,aAAuBC,YAA4B,EAAE;QAAA,IAAAC,KAAA;QACnDC,IAAA,CAAAC,eAAA,CAAAX,MAAA,CAAAY,SAAA,yBAAAC,IAAA,OAAmBL,YAAY;QAC/B,IAAI,CAACM,gBAAgB,CAAC,cAAc,EAAE,UAACC,EAAE,EAAK;UAC5C,IAAMrB,OAAO,GAAGqB,EAAE,CAACpB,MAAM,CAACD,OAAO;UACjC;UACA,IAAID,SAAS,CAACC,OAAO,IAAIA,OAAO,EAAE;YAChCsB,MAAM,CAACF,gBAAgB,CAAC,QAAQ,EAAEvB,YAAY,CAAC;UACjD,CAAC,MAAM;YACLyB,MAAM,CAACC,mBAAmB,CAAC,QAAQ,EAAE1B,YAAY,CAAC;UACpD;UACAkB,KAAI,CAACS,WAAW,CAAC;YAAExB,OAAO,EAAPA;UAAQ,CAAC,CAAC;UAC7BZ,UAAU,CAAC2B,KAAI,CAACU,IAAK,CAAC;QACxB,CAAC,CAAC;MACJ;IAAC;MAAAd,GAAA;MAAAC,KAAA,EAED,SAAAc,cAAA,EAA0B;QACxBV,IAAA,CAAAC,eAAA,CAAAX,MAAA,CAAAY,SAAA,0BAAAC,IAAA;QACA;QACA,IAAIpB,SAAS,CAACC,OAAO,IAAI,IAAI,CAACyB,IAAI,CAAEzB,OAAO,EAAE;UAC3CsB,MAAM,CAACF,gBAAgB,CAAC,QAAQ,EAAEvB,YAAY,CAAC;QACjD;MACF;IAAC;IAAA,OAAAS,MAAA;EAAA,EAtBWH,UAAU;AAAA,CAuBvB"},"metadata":{},"sourceType":"module","externalDependencies":[]}