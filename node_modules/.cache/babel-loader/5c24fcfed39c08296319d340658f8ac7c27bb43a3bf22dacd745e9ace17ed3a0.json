{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/helpers/regeneratorRuntime\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _templateObject, _templateObject2;\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.string.search.js\";\nimport { html } from \"lit\";\nimport { customElement, state } from \"lit/decorators\";\nimport { isNavigationClick } from \"../common/dom/is-navigation-click\";\nimport { navigate } from \"../common/navigate\";\nimport { getStorageDefaultPanelUrlPath } from \"../data/panel\";\nimport { getRecorderInfo } from \"../data/recorder\";\nimport \"../resources/custom-card-support\";\nimport { HassElement } from \"../state/hass-element\";\nimport QuickBarMixin from \"../state/quick-bar-mixin\";\nimport { storeState } from \"../util/ha-pref-storage\";\nimport { removeLaunchScreen, renderLaunchScreenInfoBox } from \"../util/launch-screen\";\nimport { registerServiceWorker, supportsServiceWorker } from \"../util/register-service-worker\";\nimport \"./ha-init-page\";\nimport \"./home-assistant-main\";\nvar useHash = __DEMO__;\nvar curPath = function curPath() {\n  return useHash ? location.hash.substring(1) : location.pathname;\n};\nvar panelUrl = function panelUrl(path) {\n  var dividerPos = path.indexOf(\"/\", 1);\n  return dividerPos === -1 ? path.substring(1) : path.substring(1, dividerPos);\n};\nexport var HomeAssistantAppEl = _decorate([customElement(\"home-assistant\")], function (_initialize, _QuickBarMixin) {\n  var HomeAssistantAppEl = /*#__PURE__*/function (_QuickBarMixin2) {\n    _inherits(HomeAssistantAppEl, _QuickBarMixin2);\n    function HomeAssistantAppEl() {\n      var _this;\n      _classCallCheck(this, HomeAssistantAppEl);\n      _this = _callSuper(this, HomeAssistantAppEl);\n      _initialize(_assertThisInitialized(_this));\n      var path = curPath();\n      if ([\"\", \"/\"].includes(path)) {\n        navigate(\"/\".concat(getStorageDefaultPanelUrlPath()).concat(location.search), {\n          replace: true\n        });\n      }\n      _this._route = {\n        prefix: \"\",\n        path: path\n      };\n      _this._panelUrl = panelUrl(path);\n      return _this;\n    }\n    return _createClass(HomeAssistantAppEl);\n  }(_QuickBarMixin);\n  return {\n    F: HomeAssistantAppEl,\n    d: [{\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_route\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_databaseMigration\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_panelUrl\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_haVersion\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_hiddenTimeout\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_visiblePromiseResolve\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"renderHass\",\n      value: function renderHass() {\n        return html(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      <home-assistant-main\\n        .hass=\", \"\\n        .route=\", \"\\n      ></home-assistant-main>\\n    \"])), this.hass, this._route);\n      }\n    }, {\n      kind: \"method\",\n      key: \"willUpdate\",\n      value: function willUpdate(changedProps) {\n        var _this$hass, _changedProps$get, _this$hass2;\n        _get(_getPrototypeOf(HomeAssistantAppEl.prototype), \"willUpdate\", this).call(this, changedProps);\n        if (this._databaseMigration === undefined && changedProps.has(\"hass\") && (_this$hass = this.hass) !== null && _this$hass !== void 0 && _this$hass.config && ((_changedProps$get = changedProps.get(\"hass\")) === null || _changedProps$get === void 0 ? void 0 : _changedProps$get.config) !== ((_this$hass2 = this.hass) === null || _this$hass2 === void 0 ? void 0 : _this$hass2.config)) {\n          this.checkDataBaseMigration();\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"update\",\n      value: function update(changedProps) {\n        var _this$hass3;\n        if ((_this$hass3 = this.hass) !== null && _this$hass3 !== void 0 && _this$hass3.states && this.hass.config && this.hass.services && this._databaseMigration === false) {\n          this.render = this.renderHass;\n          this.update = _get(_getPrototypeOf(HomeAssistantAppEl.prototype), \"update\", this);\n          removeLaunchScreen();\n        }\n        _get(_getPrototypeOf(HomeAssistantAppEl.prototype), \"update\", this).call(this, changedProps);\n      }\n    }, {\n      kind: \"method\",\n      key: \"firstUpdated\",\n      value: function firstUpdated(changedProps) {\n        var _this2 = this;\n        _get(_getPrototypeOf(HomeAssistantAppEl.prototype), \"firstUpdated\", this).call(this, changedProps);\n        this._initializeHass();\n        setTimeout(function () {\n          return registerServiceWorker(_this2);\n        }, 1000);\n        this.addEventListener(\"hass-suspend-when-hidden\", function (ev) {\n          _this2._updateHass({\n            suspendWhenHidden: ev.detail.suspend\n          });\n          storeState(_this2.hass);\n        });\n\n        // Navigation\n        var updateRoute = function updateRoute() {\n          var path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : curPath();\n          if (_this2._route && path === _this2._route.path) {\n            return;\n          }\n          _this2._route = {\n            prefix: \"\",\n            path: path\n          };\n          _this2._panelUrl = panelUrl(path);\n          _this2.panelUrlChanged(_this2._panelUrl);\n          _this2._updateHass({\n            panelUrl: _this2._panelUrl\n          });\n        };\n        window.addEventListener(\"location-changed\", function () {\n          return updateRoute();\n        });\n\n        // Handle history changes\n        if (useHash) {\n          window.addEventListener(\"hashchange\", function () {\n            return updateRoute();\n          });\n        } else {\n          window.addEventListener(\"popstate\", function () {\n            return updateRoute();\n          });\n        }\n\n        // Handle clicking on links\n        window.addEventListener(\"click\", function (ev) {\n          var href = isNavigationClick(ev);\n          if (href) {\n            navigate(href);\n          }\n        });\n\n        // Render launch screen info box (loading data / error message)\n        // if Indexline Technology is not loaded yet.\n        if (this.render !== this.renderHass) {\n          this._renderInitInfo(false);\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"updated\",\n      value: function updated(changedProps) {\n        _get(_getPrototypeOf(HomeAssistantAppEl.prototype), \"updated\", this).call(this, changedProps);\n        if (changedProps.has(\"hass\")) {\n          this.hassChanged(this.hass, changedProps.get(\"hass\"));\n        }\n        if (changedProps.has(\"_databaseMigration\")) {\n          if (this.render !== this.renderHass) {\n            this._renderInitInfo(false);\n          } else if (this._databaseMigration) {\n            // we already removed the launch screen, so we refresh to add it again to show the migration screen\n            location.reload();\n          }\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"hassConnected\",\n      value: function hassConnected() {\n        var _this3 = this;\n        _get(_getPrototypeOf(HomeAssistantAppEl.prototype), \"hassConnected\", this).call(this);\n        // @ts-ignore\n        this._loadHassTranslations(this.hass.language, \"entity_component\");\n        // @ts-ignore\n        this._loadHassTranslations(this.hass.language, \"entity\");\n\n        // Backwards compatibility for custom integrations\n        // @ts-ignore\n        this._loadHassTranslations(this.hass.language, \"state\");\n        document.addEventListener(\"visibilitychange\", function () {\n          return _this3._checkVisibility();\n        }, false);\n        document.addEventListener(\"freeze\", function () {\n          return _this3._suspendApp();\n        });\n        document.addEventListener(\"resume\", function () {\n          return _this3._checkVisibility();\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"hassReconnected\",\n      value: function hassReconnected() {\n        _get(_getPrototypeOf(HomeAssistantAppEl.prototype), \"hassReconnected\", this).call(this);\n\n        // If backend has been upgraded, make sure we update frontend\n        if (this.hass.connection.haVersion !== this._haVersion) {\n          if (supportsServiceWorker()) {\n            navigator.serviceWorker.getRegistration().then(function (registration) {\n              if (registration) {\n                registration.update();\n              } else {\n                // @ts-ignore Firefox supports forceGet\n                location.reload(true);\n              }\n            });\n          } else {\n            // @ts-ignore Firefox supports forceGet\n            location.reload(true);\n          }\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"checkDataBaseMigration\",\n      value: function () {\n        var _checkDataBaseMigration = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n          var _this$hass4,\n            _this4 = this;\n          var recorderInfoProm, preloadWindow, info;\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                if (!((_this$hass4 = this.hass) !== null && _this$hass4 !== void 0 && (_this$hass4 = _this$hass4.config) !== null && _this$hass4 !== void 0 && _this$hass4.components.includes(\"recorder\"))) {\n                  _context.next = 10;\n                  break;\n                }\n                preloadWindow = window; // On first load, we speed up loading page by having recorderInfoProm ready\n                if (preloadWindow.recorderInfoProm) {\n                  recorderInfoProm = preloadWindow.recorderInfoProm;\n                  preloadWindow.recorderInfoProm = undefined;\n                }\n                _context.next = 5;\n                return recorderInfoProm || getRecorderInfo(this.hass.connection);\n              case 5:\n                info = _context.sent;\n                this._databaseMigration = info.migration_in_progress && !info.migration_is_live;\n                if (this._databaseMigration) {\n                  // check every 5 seconds if the migration is done\n                  setTimeout(function () {\n                    return _this4.checkDataBaseMigration();\n                  }, 5000);\n                }\n                _context.next = 11;\n                break;\n              case 10:\n                this._databaseMigration = false;\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee, this);\n        }));\n        function checkDataBaseMigration() {\n          return _checkDataBaseMigration.apply(this, arguments);\n        }\n        return checkDataBaseMigration;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"_initializeHass\",\n      value: function () {\n        var _initializeHass2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n          var result, _result, auth, conn;\n          return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n            while (1) switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                if (!window.hassConnection) {\n                  _context2.next = 7;\n                  break;\n                }\n                _context2.next = 4;\n                return window.hassConnection;\n              case 4:\n                result = _context2.sent;\n                _context2.next = 10;\n                break;\n              case 7:\n                _context2.next = 9;\n                return new Promise(function (resolve) {\n                  window.hassConnectionReady = resolve;\n                });\n              case 9:\n                result = _context2.sent;\n              case 10:\n                _result = result, auth = _result.auth, conn = _result.conn;\n                this._haVersion = conn.haVersion;\n                this.initializeHass(auth, conn);\n                _context2.next = 18;\n                break;\n              case 15:\n                _context2.prev = 15;\n                _context2.t0 = _context2[\"catch\"](0);\n                this._renderInitInfo(true);\n              case 18:\n              case \"end\":\n                return _context2.stop();\n            }\n          }, _callee2, this, [[0, 15]]);\n        }));\n        function _initializeHass() {\n          return _initializeHass2.apply(this, arguments);\n        }\n        return _initializeHass;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"_checkVisibility\",\n      value: function _checkVisibility() {\n        if (document.hidden) {\n          // If the document is hidden, we will prevent reconnects until we are visible again\n          this._onHidden();\n        } else {\n          this._onVisible();\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_onHidden\",\n      value: function _onHidden() {\n        var _this5 = this;\n        if (this._visiblePromiseResolve) {\n          return;\n        }\n        this.hass.connection.suspendReconnectUntil(new Promise(function (resolve) {\n          _this5._visiblePromiseResolve = resolve;\n        }));\n        if (this.hass.suspendWhenHidden !== false) {\n          // We close the connection to Indexline Technology after being hidden for 5 minutes\n          this._hiddenTimeout = window.setTimeout(function () {\n            _this5._hiddenTimeout = undefined;\n            // setTimeout can be delayed in the background and only fire\n            // when we switch to the tab or app again (Hey Android!)\n            if (document.hidden) {\n              _this5._suspendApp();\n            }\n          }, 300000);\n        }\n        window.addEventListener(\"focus\", function () {\n          return _this5._onVisible();\n        }, {\n          once: true\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_suspendApp\",\n      value: function _suspendApp() {\n        if (!this.hass.connection.connected) {\n          return;\n        }\n        window.stop();\n        this.hass.connection.suspend();\n      }\n    }, {\n      kind: \"method\",\n      key: \"_onVisible\",\n      value: function _onVisible() {\n        // Clear timer to close the connection\n        if (this._hiddenTimeout) {\n          clearTimeout(this._hiddenTimeout);\n          this._hiddenTimeout = undefined;\n        }\n        // Unsuspend the reconnect\n        if (this._visiblePromiseResolve) {\n          this._visiblePromiseResolve();\n          this._visiblePromiseResolve = undefined;\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_renderInitInfo\",\n      value: function _renderInitInfo(error) {\n        renderLaunchScreenInfoBox(html(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"<ha-init-page\\n        .error=\", \"\\n        .migration=\", \"\\n      ></ha-init-page>\"])), error, this._databaseMigration));\n      }\n    }]\n  };\n}, QuickBarMixin(HassElement));","map":{"version":3,"names":["html","customElement","state","isNavigationClick","navigate","getStorageDefaultPanelUrlPath","getRecorderInfo","HassElement","QuickBarMixin","storeState","removeLaunchScreen","renderLaunchScreenInfoBox","registerServiceWorker","supportsServiceWorker","useHash","__DEMO__","curPath","location","hash","substring","pathname","panelUrl","path","dividerPos","indexOf","HomeAssistantAppEl","_decorate","_initialize","_QuickBarMixin","_QuickBarMixin2","_inherits","_this","_classCallCheck","_callSuper","_assertThisInitialized","includes","concat","search","replace","_route","prefix","_panelUrl","_createClass","F","d","kind","decorators","key","value","renderHass","_templateObject","_taggedTemplateLiteral","hass","willUpdate","changedProps","_this$hass","_changedProps$get","_this$hass2","_get","_getPrototypeOf","prototype","call","_databaseMigration","undefined","has","config","get","checkDataBaseMigration","update","_this$hass3","states","services","render","firstUpdated","_this2","_initializeHass","setTimeout","addEventListener","ev","_updateHass","suspendWhenHidden","detail","suspend","updateRoute","arguments","length","panelUrlChanged","window","href","_renderInitInfo","updated","hassChanged","reload","hassConnected","_this3","_loadHassTranslations","language","document","_checkVisibility","_suspendApp","hassReconnected","connection","haVersion","_haVersion","navigator","serviceWorker","getRegistration","then","registration","_checkDataBaseMigration","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_this$hass4","_this4","recorderInfoProm","preloadWindow","info","wrap","_callee$","_context","prev","next","components","sent","migration_in_progress","migration_is_live","stop","apply","_initializeHass2","_callee2","result","_result","auth","conn","_callee2$","_context2","hassConnection","Promise","resolve","hassConnectionReady","initializeHass","t0","hidden","_onHidden","_onVisible","_this5","_visiblePromiseResolve","suspendReconnectUntil","_hiddenTimeout","once","connected","clearTimeout","error","_templateObject2"],"sources":["/Users/sercanardil/Desktop/frontend/src/layouts/home-assistant.ts"],"sourcesContent":["import { html, PropertyValues } from \"lit\";\nimport { customElement, state } from \"lit/decorators\";\nimport { isNavigationClick } from \"../common/dom/is-navigation-click\";\nimport { navigate } from \"../common/navigate\";\nimport { getStorageDefaultPanelUrlPath } from \"../data/panel\";\nimport { WindowWithPreloads } from \"../data/preloads\";\nimport { getRecorderInfo, RecorderInfo } from \"../data/recorder\";\nimport \"../resources/custom-card-support\";\nimport { HassElement } from \"../state/hass-element\";\nimport QuickBarMixin from \"../state/quick-bar-mixin\";\nimport { HomeAssistant, Route } from \"../types\";\nimport { storeState } from \"../util/ha-pref-storage\";\nimport {\n  removeLaunchScreen,\n  renderLaunchScreenInfoBox,\n} from \"../util/launch-screen\";\nimport {\n  registerServiceWorker,\n  supportsServiceWorker,\n} from \"../util/register-service-worker\";\nimport \"./ha-init-page\";\nimport \"./home-assistant-main\";\n\nconst useHash = __DEMO__;\nconst curPath = () =>\n  useHash ? location.hash.substring(1) : location.pathname;\n\nconst panelUrl = (path: string) => {\n  const dividerPos = path.indexOf(\"/\", 1);\n  return dividerPos === -1 ? path.substring(1) : path.substring(1, dividerPos);\n};\n\n@customElement(\"home-assistant\")\nexport class HomeAssistantAppEl extends QuickBarMixin(HassElement) {\n  @state() private _route: Route;\n\n  @state() private _databaseMigration?: boolean;\n\n  private _panelUrl: string;\n\n  private _haVersion?: string;\n\n  private _hiddenTimeout?: number;\n\n  private _visiblePromiseResolve?: () => void;\n\n  constructor() {\n    super();\n    const path = curPath();\n\n    if ([\"\", \"/\"].includes(path)) {\n      navigate(`/${getStorageDefaultPanelUrlPath()}${location.search}`, {\n        replace: true,\n      });\n    }\n    this._route = {\n      prefix: \"\",\n      path,\n    };\n    this._panelUrl = panelUrl(path);\n  }\n\n  protected renderHass() {\n    return html`\n      <home-assistant-main\n        .hass=${this.hass}\n        .route=${this._route}\n      ></home-assistant-main>\n    `;\n  }\n\n  protected willUpdate(changedProps: PropertyValues<this>) {\n    super.willUpdate(changedProps);\n    if (\n      this._databaseMigration === undefined &&\n      changedProps.has(\"hass\") &&\n      this.hass?.config &&\n      changedProps.get(\"hass\")?.config !== this.hass?.config\n    ) {\n      this.checkDataBaseMigration();\n    }\n  }\n\n  protected update(changedProps: PropertyValues<this>) {\n    if (\n      this.hass?.states &&\n      this.hass.config &&\n      this.hass.services &&\n      this._databaseMigration === false\n    ) {\n      this.render = this.renderHass;\n      this.update = super.update;\n      removeLaunchScreen();\n    }\n    super.update(changedProps);\n  }\n\n  protected firstUpdated(changedProps: PropertyValues<this>) {\n    super.firstUpdated(changedProps);\n    this._initializeHass();\n    setTimeout(() => registerServiceWorker(this), 1000);\n\n    this.addEventListener(\"hass-suspend-when-hidden\", (ev) => {\n      this._updateHass({ suspendWhenHidden: ev.detail.suspend });\n      storeState(this.hass!);\n    });\n\n    // Navigation\n    const updateRoute = (path = curPath()) => {\n      if (this._route && path === this._route.path) {\n        return;\n      }\n      this._route = {\n        prefix: \"\",\n        path: path,\n      };\n\n      this._panelUrl = panelUrl(path);\n      this.panelUrlChanged(this._panelUrl!);\n      this._updateHass({ panelUrl: this._panelUrl });\n    };\n\n    window.addEventListener(\"location-changed\", () => updateRoute());\n\n    // Handle history changes\n    if (useHash) {\n      window.addEventListener(\"hashchange\", () => updateRoute());\n    } else {\n      window.addEventListener(\"popstate\", () => updateRoute());\n    }\n\n    // Handle clicking on links\n    window.addEventListener(\"click\", (ev) => {\n      const href = isNavigationClick(ev);\n      if (href) {\n        navigate(href);\n      }\n    });\n\n    // Render launch screen info box (loading data / error message)\n    // if Indexline Technology is not loaded yet.\n    if (this.render !== this.renderHass) {\n      this._renderInitInfo(false);\n    }\n  }\n\n  protected updated(changedProps: PropertyValues): void {\n    super.updated(changedProps);\n    if (changedProps.has(\"hass\")) {\n      this.hassChanged(\n        this.hass!,\n        changedProps.get(\"hass\") as HomeAssistant | undefined\n      );\n    }\n    if (changedProps.has(\"_databaseMigration\")) {\n      if (this.render !== this.renderHass) {\n        this._renderInitInfo(false);\n      } else if (this._databaseMigration) {\n        // we already removed the launch screen, so we refresh to add it again to show the migration screen\n        location.reload();\n      }\n    }\n  }\n\n  protected hassConnected() {\n    super.hassConnected();\n    // @ts-ignore\n    this._loadHassTranslations(this.hass!.language, \"entity_component\");\n    // @ts-ignore\n    this._loadHassTranslations(this.hass!.language, \"entity\");\n\n    // Backwards compatibility for custom integrations\n    // @ts-ignore\n    this._loadHassTranslations(this.hass!.language, \"state\");\n\n    document.addEventListener(\n      \"visibilitychange\",\n      () => this._checkVisibility(),\n      false\n    );\n    document.addEventListener(\"freeze\", () => this._suspendApp());\n    document.addEventListener(\"resume\", () => this._checkVisibility());\n  }\n\n  protected hassReconnected() {\n    super.hassReconnected();\n\n    // If backend has been upgraded, make sure we update frontend\n    if (this.hass!.connection.haVersion !== this._haVersion) {\n      if (supportsServiceWorker()) {\n        navigator.serviceWorker.getRegistration().then((registration) => {\n          if (registration) {\n            registration.update();\n          } else {\n            // @ts-ignore Firefox supports forceGet\n            location.reload(true);\n          }\n        });\n      } else {\n        // @ts-ignore Firefox supports forceGet\n        location.reload(true);\n      }\n    }\n  }\n\n  protected async checkDataBaseMigration() {\n    if (this.hass?.config?.components.includes(\"recorder\")) {\n      let recorderInfoProm: Promise<RecorderInfo> | undefined;\n      const preloadWindow = window as WindowWithPreloads;\n      // On first load, we speed up loading page by having recorderInfoProm ready\n      if (preloadWindow.recorderInfoProm) {\n        recorderInfoProm = preloadWindow.recorderInfoProm;\n        preloadWindow.recorderInfoProm = undefined;\n      }\n      const info = await (recorderInfoProm ||\n        getRecorderInfo(this.hass.connection));\n      this._databaseMigration =\n        info.migration_in_progress && !info.migration_is_live;\n      if (this._databaseMigration) {\n        // check every 5 seconds if the migration is done\n        setTimeout(() => this.checkDataBaseMigration(), 5000);\n      }\n    } else {\n      this._databaseMigration = false;\n    }\n  }\n\n  protected async _initializeHass() {\n    try {\n      let result;\n\n      if (window.hassConnection) {\n        result = await window.hassConnection;\n      } else {\n        // In the edge case that core.ts loads before app.ts\n        result = await new Promise((resolve) => {\n          window.hassConnectionReady = resolve;\n        });\n      }\n\n      const { auth, conn } = result;\n      this._haVersion = conn.haVersion;\n      this.initializeHass(auth, conn);\n    } catch (err: any) {\n      this._renderInitInfo(true);\n    }\n  }\n\n  protected _checkVisibility() {\n    if (document.hidden) {\n      // If the document is hidden, we will prevent reconnects until we are visible again\n      this._onHidden();\n    } else {\n      this._onVisible();\n    }\n  }\n\n  private _onHidden() {\n    if (this._visiblePromiseResolve) {\n      return;\n    }\n    this.hass!.connection.suspendReconnectUntil(\n      new Promise((resolve) => {\n        this._visiblePromiseResolve = resolve;\n      })\n    );\n    if (this.hass!.suspendWhenHidden !== false) {\n      // We close the connection to Indexline Technology after being hidden for 5 minutes\n      this._hiddenTimeout = window.setTimeout(() => {\n        this._hiddenTimeout = undefined;\n        // setTimeout can be delayed in the background and only fire\n        // when we switch to the tab or app again (Hey Android!)\n        if (document.hidden) {\n          this._suspendApp();\n        }\n      }, 300000);\n    }\n    window.addEventListener(\"focus\", () => this._onVisible(), { once: true });\n  }\n\n  private _suspendApp() {\n    if (!this.hass!.connection.connected) {\n      return;\n    }\n    window.stop();\n    this.hass!.connection.suspend();\n  }\n\n  private _onVisible() {\n    // Clear timer to close the connection\n    if (this._hiddenTimeout) {\n      clearTimeout(this._hiddenTimeout);\n      this._hiddenTimeout = undefined;\n    }\n    // Unsuspend the reconnect\n    if (this._visiblePromiseResolve) {\n      this._visiblePromiseResolve();\n      this._visiblePromiseResolve = undefined;\n    }\n  }\n\n  private _renderInitInfo(error: boolean) {\n    renderLaunchScreenInfoBox(\n      html`<ha-init-page\n        .error=${error}\n        .migration=${this._databaseMigration}\n      ></ha-init-page>`\n    );\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"home-assistant\": HomeAssistantAppEl;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}