{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { formatTime } from \"../../../common/datetime/format_time\";\nimport \"../../../components/ha-relative-time\";\nlet MoreInfoSun = _decorate([customElement(\"more-info-sun\")], function (_initialize, _LitElement) {\n  class MoreInfoSun extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: MoreInfoSun,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"stateObj\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this.hass || !this.stateObj) {\n          return nothing;\n        }\n        const risingDate = new Date(this.stateObj.attributes.next_rising);\n        const settingDate = new Date(this.stateObj.attributes.next_setting);\n        const order = risingDate > settingDate ? [\"set\", \"ris\"] : [\"ris\", \"set\"];\n        return html`\n      <hr />\n      ${order.map(item => html`\n          <div class=\"row\">\n            <div class=\"key\">\n              <span\n                >${item === \"ris\" ? this.hass.localize(\"ui.dialogs.more_info_control.sun.rising\") : this.hass.localize(\"ui.dialogs.more_info_control.sun.setting\")}</span\n              >\n              <ha-relative-time\n                .hass=${this.hass}\n                .datetime=${item === \"ris\" ? risingDate : settingDate}\n              ></ha-relative-time>\n            </div>\n            <div class=\"value\">\n              ${formatTime(item === \"ris\" ? risingDate : settingDate, this.hass.locale, this.hass.config)}\n            </div>\n          </div>\n        `)}\n      <div class=\"row\">\n        <div class=\"key\">\n          ${this.hass.localize(\"ui.dialogs.more_info_control.sun.elevation\")}\n        </div>\n        <div class=\"value\">\n          ${this.hass.formatEntityAttributeValue(this.stateObj, \"elevation\")}\n        </div>\n      </div>\n    `;\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css`\n      .row {\n        margin: 0;\n        display: flex;\n        flex-direction: row;\n        justify-content: space-between;\n      }\n      ha-relative-time {\n        display: inline-block;\n        white-space: nowrap;\n      }\n      hr {\n        border-color: var(--divider-color);\n        border-bottom: none;\n        margin: 16px 0;\n      }\n    `;\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","nothing","customElement","property","formatTime","MoreInfoSun","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","render","hass","stateObj","risingDate","Date","attributes","next_rising","settingDate","next_setting","order","map","item","localize","locale","config","formatEntityAttributeValue","static","styles"],"sources":["/workspaces/frontend/src/dialogs/more-info/controls/more-info-sun.ts"],"sourcesContent":["import { HassEntity } from \"home-assistant-js-websocket\";\nimport { css, CSSResultGroup, html, LitElement, nothing } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { formatTime } from \"../../../common/datetime/format_time\";\nimport \"../../../components/ha-relative-time\";\nimport { HomeAssistant } from \"../../../types\";\n\n@customElement(\"more-info-sun\")\nclass MoreInfoSun extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public stateObj?: HassEntity;\n\n  protected render() {\n    if (!this.hass || !this.stateObj) {\n      return nothing;\n    }\n\n    const risingDate = new Date(this.stateObj.attributes.next_rising);\n    const settingDate = new Date(this.stateObj.attributes.next_setting);\n    const order = risingDate > settingDate ? [\"set\", \"ris\"] : [\"ris\", \"set\"];\n\n    return html`\n      <hr />\n      ${order.map(\n        (item) => html`\n          <div class=\"row\">\n            <div class=\"key\">\n              <span\n                >${item === \"ris\"\n                  ? this.hass.localize(\n                      \"ui.dialogs.more_info_control.sun.rising\"\n                    )\n                  : this.hass.localize(\n                      \"ui.dialogs.more_info_control.sun.setting\"\n                    )}</span\n              >\n              <ha-relative-time\n                .hass=${this.hass}\n                .datetime=${item === \"ris\" ? risingDate : settingDate}\n              ></ha-relative-time>\n            </div>\n            <div class=\"value\">\n              ${formatTime(\n                item === \"ris\" ? risingDate : settingDate,\n                this.hass.locale,\n                this.hass.config\n              )}\n            </div>\n          </div>\n        `\n      )}\n      <div class=\"row\">\n        <div class=\"key\">\n          ${this.hass.localize(\"ui.dialogs.more_info_control.sun.elevation\")}\n        </div>\n        <div class=\"value\">\n          ${this.hass.formatEntityAttributeValue(this.stateObj, \"elevation\")}\n        </div>\n      </div>\n    `;\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      .row {\n        margin: 0;\n        display: flex;\n        flex-direction: row;\n        justify-content: space-between;\n      }\n      ha-relative-time {\n        display: inline-block;\n        white-space: nowrap;\n      }\n      hr {\n        border-color: var(--divider-color);\n        border-bottom: none;\n        margin: 16px 0;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"more-info-sun\": MoreInfoSun;\n  }\n}\n"],"mappings":";AACA,SAASA,GAAG,EAAkBC,IAAI,EAAEC,UAAU,EAAEC,OAAO,QAAQ,KAAK;AACpE,SAASC,aAAa,EAAEC,QAAQ,QAAQ,gBAAgB;AACxD,SAASC,UAAU,QAAQ,sCAAsC;AACjE,OAAO,sCAAsC;AAAC,IAIxCC,WAAW,GAAAC,SAAA,EADhBJ,aAAa,CAAC,eAAe,CAAC,aAAAK,WAAA,EAAAC,WAAA;EAA/B,MACMH,WAAW,SAAAG,WAAA,CAAoB;IAAAC,YAAA,GAAAC,IAAA;MAAA,SAAAA,IAAA;MAAAH,WAAA;IAAA;EA0ErC;EAAC;IAAAI,CAAA,EA1EKN,WAAW;IAAAO,CAAA;MAAAC,IAAA;MAAAC,UAAA,GACdX,QAAQ,CAAC;QAAEY,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAC,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAE9BX,QAAQ,CAAC;QAAEY,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAC,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAE/B,SAAAC,OAAA,EAAmB;QACjB,IAAI,CAAC,IAAI,CAACC,IAAI,IAAI,CAAC,IAAI,CAACC,QAAQ,EAAE;UAChC,OAAOnB,OAAO;QAChB;QAEA,MAAMoB,UAAU,GAAG,IAAIC,IAAI,CAAC,IAAI,CAACF,QAAQ,CAACG,UAAU,CAACC,WAAW,CAAC;QACjE,MAAMC,WAAW,GAAG,IAAIH,IAAI,CAAC,IAAI,CAACF,QAAQ,CAACG,UAAU,CAACG,YAAY,CAAC;QACnE,MAAMC,KAAK,GAAGN,UAAU,GAAGI,WAAW,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC;QAExE,OAAO1B,IAAK;AAChB;AACA,QAAQ4B,KAAK,CAACC,GAAG,CACRC,IAAI,IAAK9B,IAAK;AACvB;AACA;AACA;AACA,mBAAmB8B,IAAI,KAAK,KAAK,GACb,IAAI,CAACV,IAAI,CAACW,QAAQ,CAChB,yCACF,CAAC,GACD,IAAI,CAACX,IAAI,CAACW,QAAQ,CAChB,0CACF,CAAE;AACtB;AACA;AACA,wBAAwB,IAAI,CAACX,IAAK;AAClC,4BAA4BU,IAAI,KAAK,KAAK,GAAGR,UAAU,GAAGI,WAAY;AACtE;AACA;AACA;AACA,gBAAgBrB,UAAU,CACVyB,IAAI,KAAK,KAAK,GAAGR,UAAU,GAAGI,WAAW,EACzC,IAAI,CAACN,IAAI,CAACY,MAAM,EAChB,IAAI,CAACZ,IAAI,CAACa,MACZ,CAAE;AAChB;AACA;AACA,SACM,CAAE;AACR;AACA;AACA,YAAY,IAAI,CAACb,IAAI,CAACW,QAAQ,CAAC,4CAA4C,CAAE;AAC7E;AACA;AACA,YAAY,IAAI,CAACX,IAAI,CAACc,0BAA0B,CAAC,IAAI,CAACb,QAAQ,EAAE,WAAW,CAAE;AAC7E;AACA;AACA,KAAK;MACH;IAAC;MAAAP,IAAA;MAAAqB,MAAA;MAAAlB,GAAA;MAAAC,KAAA,EAED,SAAAkB,OAAA,EAAoC;QAClC,OAAOrC,GAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;MACH;IAAC;EAAA;AAAA,GAzEuBE,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}