{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { navigate } from \"../../../common/navigate\";\nimport { subscribeConfigEntries } from \"../../../data/config_entries\";\nimport { localizeConfigFlowTitle, subscribeConfigFlowInProgress } from \"../../../data/config_flow\";\nimport { domainToName } from \"../../../data/integration\";\nimport \"../../../layouts/hass-loading-screen\";\nimport { HassRouterPage } from \"../../../layouts/hass-router-page\";\nimport { SubscribeMixin } from \"../../../mixins/subscribe-mixin\";\nimport \"./ha-config-integration-page\";\nimport \"./ha-config-integrations-dashboard\";\nlet HaConfigIntegrations = _decorate([customElement(\"ha-config-integrations\")], function (_initialize, _SubscribeMixin) {\n  class HaConfigIntegrations extends _SubscribeMixin {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaConfigIntegrations,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        reflect: true\n      })],\n      key: \"narrow\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"isWide\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"showAdvanced\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      key: \"routerOptions\",\n      value() {\n        return {\n          defaultPage: \"dashboard\",\n          routes: {\n            dashboard: {\n              tag: \"ha-config-integrations-dashboard\",\n              cache: true\n            },\n            integration: {\n              tag: \"ha-config-integration-page\"\n            }\n          }\n        };\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_configEntries\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_configEntriesInProgress\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_loadTranslationsPromise\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"hassSubscribe\",\n      value: function hassSubscribe() {\n        return [subscribeConfigEntries(this.hass, async messages => {\n          var _this$_loadTranslatio;\n          await ((_this$_loadTranslatio = this._loadTranslationsPromise) === null || _this$_loadTranslatio === void 0 ? void 0 : _this$_loadTranslatio.then(() =>\n          // allow hass to update\n          new Promise(resolve => {\n            window.setTimeout(resolve, 0);\n          })));\n          let fullUpdate = false;\n          const newEntries = [];\n          messages.forEach(message => {\n            if (message.type === null || message.type === \"added\") {\n              newEntries.push({\n                ...message.entry,\n                localized_domain_name: domainToName(this.hass.localize, message.entry.domain)\n              });\n              if (message.type === null) {\n                fullUpdate = true;\n              }\n            } else if (message.type === \"removed\") {\n              this._configEntries = this._configEntries.filter(entry => entry.entry_id !== message.entry.entry_id);\n            } else if (message.type === \"updated\") {\n              const newEntry = message.entry;\n              this._configEntries = this._configEntries.map(entry => entry.entry_id === newEntry.entry_id ? {\n                ...newEntry,\n                localized_domain_name: entry.localized_domain_name\n              } : entry);\n            }\n          });\n          if (!newEntries.length && !fullUpdate) {\n            return;\n          }\n          const existingEntries = fullUpdate ? [] : this._configEntries;\n          this._configEntries = [...existingEntries, ...newEntries];\n        }, {\n          type: [\"device\", \"hub\", \"service\"]\n        }), subscribeConfigFlowInProgress(this.hass, async flowsInProgress => {\n          const integrations = new Set();\n          flowsInProgress.forEach(flow => {\n            // To render title placeholders\n            if (flow.context.title_placeholders) {\n              integrations.add(flow.handler);\n            }\n          });\n          const localize = await this.hass.loadBackendTranslation(\"config\", Array.from(integrations));\n          this._configEntriesInProgress = flowsInProgress.map(flow => ({\n            ...flow,\n            localized_title: localizeConfigFlowTitle(localize, flow)\n          }));\n        })];\n      }\n    }, {\n      kind: \"method\",\n      key: \"willUpdate\",\n      value: function willUpdate(changed) {\n        _get(_getPrototypeOf(HaConfigIntegrations.prototype), \"willUpdate\", this).call(this, changed);\n        if (this.hasUpdated) {\n          return;\n        }\n        this._loadTranslationsPromise = this.hass.loadBackendTranslation(\"title\");\n      }\n    }, {\n      kind: \"method\",\n      key: \"updatePageEl\",\n      value: function updatePageEl(pageEl) {\n        pageEl.hass = this.hass;\n        if (this._currentPage === \"integration\") {\n          if (this.routeTail.path) {\n            pageEl.domain = this.routeTail.path.substring(1);\n          } else if (window.location.search) {\n            const urlParams = new URLSearchParams(window.location.search);\n            if (urlParams.has(\"domain\")) {\n              const domain = urlParams.get(\"domain\");\n              pageEl.domain = domain;\n              navigate(`/config/integrations/integration/${domain}`);\n            }\n          }\n        }\n        pageEl.route = this.routeTail;\n        pageEl.configEntries = this._configEntries;\n        pageEl.configEntriesInProgress = this._configEntriesInProgress;\n        pageEl.narrow = this.narrow;\n        pageEl.isWide = this.isWide;\n        pageEl.showAdvanced = this.showAdvanced;\n      }\n    }]\n  };\n}, SubscribeMixin(HassRouterPage));","map":{"version":3,"names":["customElement","property","state","navigate","subscribeConfigEntries","localizeConfigFlowTitle","subscribeConfigFlowInProgress","domainToName","HassRouterPage","SubscribeMixin","HaConfigIntegrations","_decorate","_initialize","_SubscribeMixin","constructor","args","F","d","kind","decorators","attribute","key","value","type","Boolean","reflect","defaultPage","routes","dashboard","tag","cache","integration","hassSubscribe","hass","messages","_this$_loadTranslatio","_loadTranslationsPromise","then","Promise","resolve","window","setTimeout","fullUpdate","newEntries","forEach","message","push","entry","localized_domain_name","localize","domain","_configEntries","filter","entry_id","newEntry","map","length","existingEntries","flowsInProgress","integrations","Set","flow","context","title_placeholders","add","handler","loadBackendTranslation","Array","from","_configEntriesInProgress","localized_title","willUpdate","changed","_get","_getPrototypeOf","prototype","call","hasUpdated","updatePageEl","pageEl","_currentPage","routeTail","path","substring","location","search","urlParams","URLSearchParams","has","get","route","configEntries","configEntriesInProgress","narrow","isWide","showAdvanced"],"sources":["/Users/sercanardil/Desktop/frontend/src/panels/config/integrations/ha-config-integrations.ts"],"sourcesContent":["import { PropertyValues } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { navigate } from \"../../../common/navigate\";\nimport { LocalizeFunc } from \"../../../common/translations/localize\";\nimport {\n  ConfigEntry,\n  subscribeConfigEntries,\n} from \"../../../data/config_entries\";\nimport {\n  localizeConfigFlowTitle,\n  subscribeConfigFlowInProgress,\n} from \"../../../data/config_flow\";\nimport { DataEntryFlowProgress } from \"../../../data/data_entry_flow\";\nimport { domainToName } from \"../../../data/integration\";\nimport \"../../../layouts/hass-loading-screen\";\nimport {\n  HassRouterPage,\n  RouterOptions,\n} from \"../../../layouts/hass-router-page\";\nimport { SubscribeMixin } from \"../../../mixins/subscribe-mixin\";\nimport type { HomeAssistant } from \"../../../types\";\n\nimport \"./ha-config-integration-page\";\nimport \"./ha-config-integrations-dashboard\";\n\nexport interface ConfigEntryUpdatedEvent {\n  entry: ConfigEntry;\n}\n\nexport interface ConfigEntryRemovedEvent {\n  entryId: string;\n}\n\nexport interface DataEntryFlowProgressExtended extends DataEntryFlowProgress {\n  localized_title?: string;\n}\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    \"entry-updated\": ConfigEntryUpdatedEvent;\n    \"entry-removed\": ConfigEntryRemovedEvent;\n  }\n}\n\nexport interface ConfigEntryExtended extends ConfigEntry {\n  localized_domain_name?: string;\n}\n\n@customElement(\"ha-config-integrations\")\nclass HaConfigIntegrations extends SubscribeMixin(HassRouterPage) {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ type: Boolean, reflect: true }) public narrow = false;\n\n  @property({ type: Boolean }) public isWide = false;\n\n  @property({ type: Boolean }) public showAdvanced = false;\n\n  protected routerOptions: RouterOptions = {\n    defaultPage: \"dashboard\",\n    routes: {\n      dashboard: {\n        tag: \"ha-config-integrations-dashboard\",\n        cache: true,\n      },\n      integration: {\n        tag: \"ha-config-integration-page\",\n      },\n    },\n  };\n\n  @state() private _configEntries?: ConfigEntryExtended[];\n\n  @state() private _configEntriesInProgress?: DataEntryFlowProgressExtended[];\n\n  private _loadTranslationsPromise?: Promise<LocalizeFunc>;\n\n  public hassSubscribe() {\n    return [\n      subscribeConfigEntries(\n        this.hass,\n        async (messages) => {\n          await this._loadTranslationsPromise?.then(\n            () =>\n              // allow hass to update\n              new Promise((resolve) => {\n                window.setTimeout(resolve, 0);\n              })\n          );\n          let fullUpdate = false;\n          const newEntries: ConfigEntryExtended[] = [];\n          messages.forEach((message) => {\n            if (message.type === null || message.type === \"added\") {\n              newEntries.push({\n                ...message.entry,\n                localized_domain_name: domainToName(\n                  this.hass.localize,\n                  message.entry.domain\n                ),\n              });\n              if (message.type === null) {\n                fullUpdate = true;\n              }\n            } else if (message.type === \"removed\") {\n              this._configEntries = this._configEntries!.filter(\n                (entry) => entry.entry_id !== message.entry.entry_id\n              );\n            } else if (message.type === \"updated\") {\n              const newEntry = message.entry;\n              this._configEntries = this._configEntries!.map((entry) =>\n                entry.entry_id === newEntry.entry_id\n                  ? {\n                      ...newEntry,\n                      localized_domain_name: entry.localized_domain_name,\n                    }\n                  : entry\n              );\n            }\n          });\n          if (!newEntries.length && !fullUpdate) {\n            return;\n          }\n          const existingEntries = fullUpdate ? [] : this._configEntries;\n          this._configEntries = [...existingEntries!, ...newEntries];\n        },\n        { type: [\"device\", \"hub\", \"service\"] }\n      ),\n      subscribeConfigFlowInProgress(this.hass, async (flowsInProgress) => {\n        const integrations: Set<string> = new Set();\n        flowsInProgress.forEach((flow) => {\n          // To render title placeholders\n          if (flow.context.title_placeholders) {\n            integrations.add(flow.handler);\n          }\n        });\n        const localize = await this.hass.loadBackendTranslation(\n          \"config\",\n          Array.from(integrations)\n        );\n        this._configEntriesInProgress = flowsInProgress.map((flow) => ({\n          ...flow,\n          localized_title: localizeConfigFlowTitle(localize, flow),\n        }));\n      }),\n    ];\n  }\n\n  protected willUpdate(changed: PropertyValues) {\n    super.willUpdate(changed);\n    if (this.hasUpdated) {\n      return;\n    }\n    this._loadTranslationsPromise = this.hass.loadBackendTranslation(\"title\");\n  }\n\n  protected updatePageEl(pageEl) {\n    pageEl.hass = this.hass;\n\n    if (this._currentPage === \"integration\") {\n      if (this.routeTail.path) {\n        pageEl.domain = this.routeTail.path.substring(1);\n      } else if (window.location.search) {\n        const urlParams = new URLSearchParams(window.location.search);\n        if (urlParams.has(\"domain\")) {\n          const domain = urlParams.get(\"domain\");\n          pageEl.domain = domain;\n          navigate(`/config/integrations/integration/${domain}`);\n        }\n      }\n    }\n    pageEl.route = this.routeTail;\n    pageEl.configEntries = this._configEntries;\n    pageEl.configEntriesInProgress = this._configEntriesInProgress;\n    pageEl.narrow = this.narrow;\n    pageEl.isWide = this.isWide;\n    pageEl.showAdvanced = this.showAdvanced;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-config-integrations\": HaConfigIntegrations;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}