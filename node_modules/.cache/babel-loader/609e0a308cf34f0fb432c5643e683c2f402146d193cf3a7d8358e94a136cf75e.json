{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport { computeDomain } from \"./compute_domain\";\n\n// Split a collection into a list of groups and a 'rest' list of ungrouped\n// entities.\n// Returns { groups: [], ungrouped: {} }\nexport var splitByGroups = function splitByGroups(entities) {\n  var groups = [];\n  var ungrouped = {};\n  Object.keys(entities).forEach(function (entityId) {\n    var entity = entities[entityId];\n    if (computeDomain(entityId) === \"group\") {\n      groups.push(entity);\n    } else {\n      ungrouped[entityId] = entity;\n    }\n  });\n  groups.forEach(function (group) {\n    return group.attributes.entity_id.forEach(function (entityId) {\n      delete ungrouped[entityId];\n    });\n  });\n  return {\n    groups: groups,\n    ungrouped: ungrouped\n  };\n};","map":{"version":3,"names":["computeDomain","splitByGroups","entities","groups","ungrouped","Object","keys","forEach","entityId","entity","push","group","attributes","entity_id"],"sources":["/workspaces/frontend/src/common/entity/split_by_groups.ts"],"sourcesContent":["import { HassEntities } from \"home-assistant-js-websocket\";\nimport { GroupEntity } from \"../../data/group\";\nimport { computeDomain } from \"./compute_domain\";\n\n// Split a collection into a list of groups and a 'rest' list of ungrouped\n// entities.\n// Returns { groups: [], ungrouped: {} }\nexport const splitByGroups = (entities: HassEntities) => {\n  const groups: GroupEntity[] = [];\n  const ungrouped: HassEntities = {};\n\n  Object.keys(entities).forEach((entityId) => {\n    const entity = entities[entityId];\n\n    if (computeDomain(entityId) === \"group\") {\n      groups.push(entity as GroupEntity);\n    } else {\n      ungrouped[entityId] = entity;\n    }\n  });\n\n  groups.forEach((group) =>\n    group.attributes.entity_id.forEach((entityId) => {\n      delete ungrouped[entityId];\n    })\n  );\n\n  return { groups, ungrouped };\n};\n"],"mappings":";;;;;;AAEA,SAASA,aAAa,QAAQ,kBAAkB;;AAEhD;AACA;AACA;AACA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAIC,QAAsB,EAAK;EACvD,IAAMC,MAAqB,GAAG,EAAE;EAChC,IAAMC,SAAuB,GAAG,CAAC,CAAC;EAElCC,MAAM,CAACC,IAAI,CAACJ,QAAQ,CAAC,CAACK,OAAO,CAAC,UAACC,QAAQ,EAAK;IAC1C,IAAMC,MAAM,GAAGP,QAAQ,CAACM,QAAQ,CAAC;IAEjC,IAAIR,aAAa,CAACQ,QAAQ,CAAC,KAAK,OAAO,EAAE;MACvCL,MAAM,CAACO,IAAI,CAACD,MAAqB,CAAC;IACpC,CAAC,MAAM;MACLL,SAAS,CAACI,QAAQ,CAAC,GAAGC,MAAM;IAC9B;EACF,CAAC,CAAC;EAEFN,MAAM,CAACI,OAAO,CAAC,UAACI,KAAK;IAAA,OACnBA,KAAK,CAACC,UAAU,CAACC,SAAS,CAACN,OAAO,CAAC,UAACC,QAAQ,EAAK;MAC/C,OAAOJ,SAAS,CAACI,QAAQ,CAAC;IAC5B,CAAC,CAAC;EAAA,CACJ,CAAC;EAED,OAAO;IAAEL,MAAM,EAANA,MAAM;IAAEC,SAAS,EAATA;EAAU,CAAC;AAC9B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}