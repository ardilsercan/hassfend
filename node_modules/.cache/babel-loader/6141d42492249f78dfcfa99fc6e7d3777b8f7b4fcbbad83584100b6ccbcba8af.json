{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, eventOptions, property } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport { styleMap } from \"lit/directives/style-map\";\nimport { isComponentLoaded } from \"../../common/config/is_component_loaded\";\nimport { formatDate } from \"../../common/datetime/format_date\";\nimport { formatTimeWithSeconds } from \"../../common/datetime/format_time\";\nimport { restoreScroll } from \"../../common/decorators/restore-scroll\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { computeDomain } from \"../../common/entity/compute_domain\";\nimport { navigate } from \"../../common/navigate\";\nimport { computeTimelineColor } from \"../../components/chart/timeline-chart/timeline-color\";\nimport \"../../components/entity/state-badge\";\nimport \"../../components/ha-circular-progress\";\nimport \"../../components/ha-icon-next\";\nimport \"../../components/ha-relative-time\";\nimport { createHistoricState, localizeStateMessage, localizeTriggerSource } from \"../../data/logbook\";\nimport { buttonLinkStyle, haStyle, haStyleScrollbar } from \"../../resources/styles\";\nimport { loadVirtualizer } from \"../../resources/virtualizer\";\nimport { brandsUrl } from \"../../util/brands-url\";\nimport { domainToName } from \"../../data/integration\";\nconst triggerDomains = [\"script\", \"automation\"];\nconst hasContext = item => item.context_event_type || item.context_state || item.context_message;\nconst stripEntityId = (message, entityId) => entityId ? message.replace(entityId, \" \") : message;\nlet HaLogbookRenderer = _decorate([customElement(\"ha-logbook-renderer\")], function (_initialize, _LitElement) {\n  class HaLogbookRenderer extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaLogbookRenderer,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"userIdToName\",\n      value() {\n        return {};\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"traceContexts\",\n      value() {\n        return {};\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"entries\",\n      value() {\n        return [];\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        attribute: \"narrow\"\n      })],\n      key: \"narrow\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        attribute: \"virtualize\",\n        reflect: true\n      })],\n      key: \"virtualize\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        attribute: \"show-indicator\"\n      })],\n      key: \"showIndicator\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        attribute: \"no-icon\"\n      })],\n      key: \"noIcon\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        attribute: \"no-name\"\n      })],\n      key: \"noName\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        attribute: \"relative-time\"\n      })],\n      key: \"relativeTime\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [restoreScroll(\".container\")],\n      key: \"_savedScrollPos\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"willUpdate\",\n      value:\n      // @ts-ignore\n\n      function willUpdate(changedProps) {\n        if (!this.hasUpdated && this.virtualize || changedProps.has(\"virtualize\") && this.virtualize) {\n          this.hass.loadBackendTranslation(\"services\");\n          this.hass.loadBackendTranslation(\"title\");\n          loadVirtualizer();\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"shouldUpdate\",\n      value: function shouldUpdate(changedProps) {\n        const oldHass = changedProps.get(\"hass\");\n        const languageChanged = oldHass === undefined || oldHass.locale !== this.hass.locale;\n        return changedProps.has(\"entries\") || changedProps.has(\"traceContexts\") || languageChanged;\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var _this$entries;\n        if (!((_this$entries = this.entries) !== null && _this$entries !== void 0 && _this$entries.length)) {\n          return html`\n        <div class=\"container no-entries\">\n          ${this.hass.localize(\"ui.components.logbook.entries_not_found\")}\n        </div>\n      `;\n        }\n        return html`\n      <div\n        class=\"container ha-scrollbar ${classMap({\n          narrow: this.narrow,\n          \"no-name\": this.noName,\n          \"no-icon\": this.noIcon\n        })}\"\n        @scroll=${this._saveScrollPos}\n      >\n        ${this.virtualize ? html`<lit-virtualizer\n              @visibilityChanged=${this._visibilityChanged}\n              scroller\n              class=\"ha-scrollbar\"\n              .items=${this.entries}\n              .renderItem=${this._renderLogbookItem}\n            >\n            </lit-virtualizer>` : this.entries.map((item, index) => this._renderLogbookItem(item, index))}\n      </div>\n    `;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_renderLogbookItem\",\n      value() {\n        return (item, index) => {\n          var _this$hass$themes;\n          if (!item || index === undefined) {\n            return nothing;\n          }\n          const previous = this.entries[index - 1];\n          const seenEntityIds = [];\n          const currentStateObj = item.entity_id ? this.hass.states[item.entity_id] : undefined;\n          const historicStateObj = currentStateObj ? createHistoricState(currentStateObj, item.state) : undefined;\n          const domain = item.entity_id ? computeDomain(item.entity_id) :\n          // Domain is there if there is no entity ID.\n          item.domain;\n          const overrideImage = !historicStateObj && !item.icon && !item.state && domain && isComponentLoaded(this.hass, domain) ? brandsUrl({\n            domain: domain,\n            type: \"icon\",\n            useFallback: true,\n            darkOptimized: (_this$hass$themes = this.hass.themes) === null || _this$hass$themes === void 0 ? void 0 : _this$hass$themes.darkMode\n          }) : undefined;\n          const traceContext = triggerDomains.includes(item.domain) && item.context_id in this.traceContexts ? this.traceContexts[item.context_id] : undefined;\n          const hasTrace = traceContext !== undefined;\n          return html`\n      <div\n        class=\"entry-container ${classMap({\n            clickable: hasTrace\n          })}\"\n        .traceLink=${traceContext ? `/config/${traceContext.domain}/trace/${traceContext.item_id}?run_id=${traceContext.run_id}` : undefined}\n        @click=${this._handleClick}\n      >\n        ${index === 0 || item !== null && item !== void 0 && item.when && previous !== null && previous !== void 0 && previous.when && new Date(item.when * 1000).toDateString() !== new Date(previous.when * 1000).toDateString() ? html`\n              <h4 class=\"date\">\n                ${formatDate(new Date(item.when * 1000), this.hass.locale, this.hass.config)}\n              </h4>\n            ` : nothing}\n\n        <div class=\"entry ${classMap({\n            \"no-entity\": !item.entity_id\n          })}\">\n          <div class=\"icon-message\">\n            ${!this.noIcon ? html`\n                  <state-badge\n                    .hass=${this.hass}\n                    .overrideIcon=${item.icon}\n                    .overrideImage=${overrideImage}\n                    .stateObj=${item.icon ? undefined : historicStateObj}\n                    .stateColor=${false}\n                  ></state-badge>\n                ` : \"\"}\n            ${this.showIndicator ? this._renderIndicator(item) : \"\"}\n            <div class=\"message-relative_time\">\n              <div class=\"message\">\n                ${!this.noName // Used for more-info panel (single entity case)\n          ? this._renderEntity(item.entity_id, item.name, hasTrace) : \"\"}\n                ${this._renderMessage(item, seenEntityIds, domain, historicStateObj, hasTrace)}\n                ${this._renderContextMessage(item, seenEntityIds, hasTrace)}\n              </div>\n              <div class=\"secondary\">\n                <span\n                  >${formatTimeWithSeconds(new Date(item.when * 1000), this.hass.locale, this.hass.config)}</span\n                >\n                -\n                <ha-relative-time\n                  .hass=${this.hass}\n                  .datetime=${item.when * 1000}\n                  capitalize\n                ></ha-relative-time>\n                ${item.context_user_id ? html`${this._renderUser(item)}` : \"\"}\n                ${hasTrace ? `- ${this.hass.localize(\"ui.components.logbook.show_trace\")}` : \"\"}\n              </div>\n            </div>\n          </div>\n          ${hasTrace ? html`<ha-icon-next></ha-icon-next>` : \"\"}\n        </div>\n      </div>\n    `;\n        };\n      }\n    }, {\n      kind: \"method\",\n      decorators: [eventOptions({\n        passive: true\n      })],\n      key: \"_saveScrollPos\",\n      value: function _saveScrollPos(e) {\n        this._savedScrollPos = e.target.scrollTop;\n      }\n    }, {\n      kind: \"method\",\n      decorators: [eventOptions({\n        passive: true\n      })],\n      key: \"_visibilityChanged\",\n      value: function _visibilityChanged(e) {\n        fireEvent(this, \"hass-logbook-live\", {\n          enable: e.first === 0\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_renderIndicator\",\n      value: function _renderIndicator(item) {\n        const stateObj = this.hass.states[item.entity_id];\n        const computedStyles = getComputedStyle(this);\n        const color = item.state !== undefined ? computeTimelineColor(item.state, computedStyles, stateObj) : undefined;\n        const style = {\n          backgroundColor: color\n        };\n        return html` <div class=\"indicator\" style=${styleMap(style)}></div> `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_renderMessage\",\n      value: function _renderMessage(item, seenEntityIds, domain, historicStateObj, noLink) {\n        if (item.entity_id) {\n          if (item.state) {\n            return historicStateObj ? localizeStateMessage(this.hass, this.hass.localize, item.state, historicStateObj, domain) : item.state;\n          }\n        }\n        const itemHasContext = hasContext(item);\n        let message = item.message;\n        if (triggerDomains.includes(domain) && item.source) {\n          if (itemHasContext) {\n            // These domains include the trigger source in the message\n            // but if we have the context we want to display that instead\n            // as otherwise we display duplicate triggers\n            return \"\";\n          }\n          message = localizeTriggerSource(this.hass.localize, item.source);\n        }\n        return message ? this._formatMessageWithPossibleEntity(itemHasContext ? stripEntityId(message, item.context_entity_id) : message, seenEntityIds, undefined, noLink) : \"\";\n      }\n    }, {\n      kind: \"method\",\n      key: \"_renderUser\",\n      value: function _renderUser(item) {\n        const item_username = item.context_user_id && this.userIdToName[item.context_user_id];\n        if (item_username) {\n          return `- ${item_username}`;\n        }\n        return \"\";\n      }\n    }, {\n      kind: \"method\",\n      key: \"_renderUnseenContextSourceEntity\",\n      value: function _renderUnseenContextSourceEntity(item, seenEntityIds, noLink) {\n        if (!item.context_entity_id || seenEntityIds.includes(item.context_entity_id)) {\n          return \"\";\n        }\n        // We don't know what caused this entity\n        // to be included since its an integration\n        // described event.\n        return html` (${this._renderEntity(item.context_entity_id, item.context_entity_id_name, noLink)})`;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_renderContextMessage\",\n      value: function _renderContextMessage(item, seenEntityIds, noLink) {\n        // State change\n        if (item.context_state) {\n          const historicStateObj = item.context_entity_id && item.context_entity_id in this.hass.states ? createHistoricState(this.hass.states[item.context_entity_id], item.context_state) : undefined;\n          return html`${this.hass.localize(\"ui.components.logbook.triggered_by_state_of\")}\n      ${this._renderEntity(item.context_entity_id, item.context_entity_id_name, noLink)}\n      ${historicStateObj ? localizeStateMessage(this.hass, this.hass.localize, item.context_state, historicStateObj, computeDomain(item.context_entity_id)) : item.context_state}`;\n        }\n        // Service call\n        if (item.context_event_type === \"call_service\") {\n          var _this$hass$services$i;\n          return html`${this.hass.localize(\"ui.components.logbook.triggered_by_service\")}\n      ${item.context_domain && item.context_service ? `${domainToName(this.hass.localize, item.context_domain)}:\n      ${this.hass.localize(`component.${item.context_domain}.services.${item.context_service}.name`) || ((_this$hass$services$i = this.hass.services[item.context_domain]) === null || _this$hass$services$i === void 0 || (_this$hass$services$i = _this$hass$services$i[item.context_service]) === null || _this$hass$services$i === void 0 ? void 0 : _this$hass$services$i.name) || item.context_service}` : \"\"}`;\n        }\n        if (!item.context_message || seenEntityIds.includes(item.context_entity_id)) {\n          return \"\";\n        }\n        // Automation or script\n        if (item.context_event_type === \"automation_triggered\" || item.context_event_type === \"script_started\") {\n          // context_source is available in 2022.6 and later\n          const triggerMsg = item.context_source ? item.context_source : item.context_message.replace(\"triggered by \", \"\");\n          const contextTriggerSource = localizeTriggerSource(this.hass.localize, triggerMsg);\n          return html`${this.hass.localize(item.context_event_type === \"automation_triggered\" ? \"ui.components.logbook.triggered_by_automation\" : \"ui.components.logbook.triggered_by_script\")}\n      ${this._renderEntity(item.context_entity_id, item.context_entity_id_name, noLink)}\n      ${item.context_message ? this._formatMessageWithPossibleEntity(contextTriggerSource, seenEntityIds, undefined, noLink) : \"\"}`;\n        }\n        // Generic externally described logbook platform\n        // These are not localizable\n        return html` ${this.hass.localize(\"ui.components.logbook.triggered_by\")}\n    ${item.context_name}\n    ${this._formatMessageWithPossibleEntity(item.context_message, seenEntityIds, item.context_entity_id, noLink)}\n    ${this._renderUnseenContextSourceEntity(item, seenEntityIds, noLink)}`;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_renderEntity\",\n      value: function _renderEntity(entityId, entityName, noLink) {\n        const hasState = entityId && entityId in this.hass.states;\n        const displayName = entityName || (hasState ? this.hass.states[entityId].attributes.friendly_name || entityId : entityId);\n        if (!hasState) {\n          return displayName;\n        }\n        return noLink ? displayName : html`<button\n          class=\"link\"\n          @click=${this._entityClicked}\n          .entityId=${entityId}\n        >\n          ${displayName}\n        </button>`;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_formatMessageWithPossibleEntity\",\n      value: function _formatMessageWithPossibleEntity(message, seenEntities, possibleEntity, noLink) {\n        //\n        // As we are looking at a log(book), we are doing entity_id\n        // \"highlighting\"/\"colorizing\". The goal is to make it easy for\n        // the user to access the entity that caused the event.\n        //\n        // If there is an entity_id in the message that is also in the\n        // state machine, we search the message for the entity_id and\n        // replace it with _renderEntity\n        //\n        if (message.indexOf(\".\") !== -1) {\n          const messageParts = message.split(\" \");\n          for (let i = 0, size = messageParts.length; i < size; i++) {\n            if (messageParts[i] in this.hass.states) {\n              const entityId = messageParts[i];\n              if (seenEntities.includes(entityId)) {\n                return \"\";\n              }\n              seenEntities.push(entityId);\n              const messageEnd = messageParts.splice(i);\n              messageEnd.shift(); // remove the entity\n              return html`${messageParts.join(\" \")}\n          ${this._renderEntity(entityId, this.hass.states[entityId].attributes.friendly_name, noLink)}\n          ${messageEnd.join(\" \")}`;\n            }\n          }\n        }\n        //\n        // When we have a message has a specific entity_id attached to\n        // it, and the entity_id is not in the message, we look\n        // for the friendly name of the entity and replace that with\n        // _renderEntity if its there so the user can quickly get to\n        // that entity.\n        //\n        if (possibleEntity && possibleEntity in this.hass.states) {\n          const possibleEntityName = this.hass.states[possibleEntity].attributes.friendly_name;\n          if (possibleEntityName && message.endsWith(possibleEntityName)) {\n            if (seenEntities.includes(possibleEntity)) {\n              return \"\";\n            }\n            seenEntities.push(possibleEntity);\n            message = message.substring(0, message.length - possibleEntityName.length);\n            return html`${message}\n        ${this._renderEntity(possibleEntity, possibleEntityName, noLink)}`;\n          }\n        }\n        return message;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_entityClicked\",\n      value: function _entityClicked(ev) {\n        const entityId = ev.currentTarget.entityId;\n        if (!entityId) {\n          return;\n        }\n        ev.preventDefault();\n        ev.stopPropagation();\n        fireEvent(this, \"hass-more-info\", {\n          entityId: entityId\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleClick\",\n      value: function _handleClick(ev) {\n        if (!ev.currentTarget.traceLink) {\n          return;\n        }\n        navigate(ev.currentTarget.traceLink);\n        fireEvent(this, \"closed\");\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [haStyle, haStyleScrollbar, buttonLinkStyle, css`\n        :host([virtualize]) {\n          display: block;\n          height: 100%;\n        }\n\n        .entry-container {\n          width: 100%;\n        }\n\n        .entry {\n          position: relative;\n          display: flex;\n          width: 100%;\n          line-height: 2em;\n          padding: 8px 16px;\n          box-sizing: border-box;\n          border-top: 1px solid var(--divider-color);\n          justify-content: space-between;\n          align-items: center;\n        }\n\n        .indicator {\n          background-color: var(--disabled-color);\n          height: 8px;\n          width: 8px;\n          border-radius: 4px;\n          flex-shrink: 0;\n          margin-right: 12px;\n          margin-inline-start: initial;\n          margin-inline-end: 12px;\n          direction: var(--direction);\n        }\n\n        ha-icon-next {\n          color: var(--secondary-text-color);\n        }\n\n        .clickable {\n          cursor: pointer;\n        }\n\n        :not(.clickable) .entry.no-entity,\n        :not(.clickable) .no-name .entry {\n          cursor: default;\n        }\n\n        .entry:hover {\n          background-color: rgba(var(--rgb-primary-text-color), 0.04);\n        }\n\n        .narrow:not(.no-icon) .time {\n          margin-left: 32px;\n          margin-inline-start: 32px;\n          margin-inline-end: initial;\n          direction: var(--direction);\n        }\n\n        .message-relative_time {\n          display: flex;\n          flex-direction: column;\n        }\n\n        .secondary {\n          font-size: 12px;\n          line-height: 1.7;\n        }\n\n        .secondary a {\n          color: var(--secondary-text-color);\n        }\n\n        .date {\n          margin: 8px 0;\n          padding: 0 16px;\n        }\n\n        .icon-message {\n          display: flex;\n          align-items: center;\n        }\n\n        .no-entries {\n          text-align: center;\n          color: var(--secondary-text-color);\n        }\n\n        state-badge {\n          margin-right: 16px;\n          margin-inline-start: initial;\n          flex-shrink: 0;\n          color: var(--state-icon-color);\n          margin-inline-end: 16px;\n          direction: var(--direction);\n        }\n\n        .message {\n          color: var(--primary-text-color);\n        }\n\n        .no-name .message:first-letter {\n          text-transform: capitalize;\n        }\n\n        a {\n          color: var(--primary-color);\n          text-decoration: none;\n        }\n\n        button.link {\n          color: var(--paper-item-icon-color);\n          text-decoration: none;\n        }\n\n        .container {\n          max-height: var(--logbook-max-height);\n        }\n\n        .container,\n        lit-virtualizer {\n          height: 100%;\n        }\n\n        lit-virtualizer {\n          contain: size layout !important;\n        }\n\n        .narrow .entry {\n          line-height: 1.5;\n        }\n\n        .narrow .icon-message state-badge {\n          margin-left: 0;\n          margin-inline-start: 0;\n          margin-right: 8px;\n          margin-inline-end: 8px;\n          direction: var(--direction);\n        }\n      `];\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","nothing","customElement","eventOptions","property","classMap","styleMap","isComponentLoaded","formatDate","formatTimeWithSeconds","restoreScroll","fireEvent","computeDomain","navigate","computeTimelineColor","createHistoricState","localizeStateMessage","localizeTriggerSource","buttonLinkStyle","haStyle","haStyleScrollbar","loadVirtualizer","brandsUrl","domainToName","triggerDomains","hasContext","item","context_event_type","context_state","context_message","stripEntityId","message","entityId","replace","HaLogbookRenderer","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","type","Boolean","reflect","willUpdate","changedProps","hasUpdated","virtualize","has","hass","loadBackendTranslation","shouldUpdate","oldHass","get","languageChanged","undefined","locale","render","_this$entries","entries","length","localize","narrow","noName","noIcon","_saveScrollPos","_visibilityChanged","_renderLogbookItem","map","index","_this$hass$themes","previous","seenEntityIds","currentStateObj","entity_id","states","historicStateObj","state","domain","overrideImage","icon","useFallback","darkOptimized","themes","darkMode","traceContext","includes","context_id","traceContexts","hasTrace","clickable","item_id","run_id","_handleClick","when","Date","toDateString","config","showIndicator","_renderIndicator","_renderEntity","name","_renderMessage","_renderContextMessage","context_user_id","_renderUser","passive","e","_savedScrollPos","target","scrollTop","enable","first","stateObj","computedStyles","getComputedStyle","color","style","backgroundColor","noLink","itemHasContext","source","_formatMessageWithPossibleEntity","context_entity_id","item_username","userIdToName","_renderUnseenContextSourceEntity","context_entity_id_name","_this$hass$services$i","context_domain","context_service","services","triggerMsg","context_source","contextTriggerSource","context_name","entityName","hasState","displayName","attributes","friendly_name","_entityClicked","seenEntities","possibleEntity","indexOf","messageParts","split","i","size","push","messageEnd","splice","shift","join","possibleEntityName","endsWith","substring","ev","currentTarget","preventDefault","stopPropagation","traceLink","static","styles"],"sources":["/Users/sercanardil/Desktop/frontend/src/panels/logbook/ha-logbook-renderer.ts"],"sourcesContent":["import { VisibilityChangedEvent } from \"@lit-labs/virtualizer\";\nimport type { HassEntity } from \"home-assistant-js-websocket\";\nimport {\n  css,\n  CSSResultGroup,\n  html,\n  LitElement,\n  nothing,\n  PropertyValues,\n} from \"lit\";\nimport { customElement, eventOptions, property } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport { styleMap } from \"lit/directives/style-map\";\nimport { isComponentLoaded } from \"../../common/config/is_component_loaded\";\nimport { formatDate } from \"../../common/datetime/format_date\";\nimport { formatTimeWithSeconds } from \"../../common/datetime/format_time\";\nimport { restoreScroll } from \"../../common/decorators/restore-scroll\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { computeDomain } from \"../../common/entity/compute_domain\";\nimport { navigate } from \"../../common/navigate\";\nimport { computeTimelineColor } from \"../../components/chart/timeline-chart/timeline-color\";\nimport \"../../components/entity/state-badge\";\nimport \"../../components/ha-circular-progress\";\nimport \"../../components/ha-icon-next\";\nimport \"../../components/ha-relative-time\";\nimport {\n  createHistoricState,\n  localizeStateMessage,\n  localizeTriggerSource,\n  LogbookEntry,\n} from \"../../data/logbook\";\nimport { TraceContexts } from \"../../data/trace\";\nimport {\n  buttonLinkStyle,\n  haStyle,\n  haStyleScrollbar,\n} from \"../../resources/styles\";\nimport { loadVirtualizer } from \"../../resources/virtualizer\";\nimport { HomeAssistant } from \"../../types\";\nimport { brandsUrl } from \"../../util/brands-url\";\nimport { domainToName } from \"../../data/integration\";\n\ndeclare global {\n  interface HASSDomEvents {\n    \"hass-logbook-live\": { enable: boolean };\n  }\n}\n\nconst triggerDomains = [\"script\", \"automation\"];\n\nconst hasContext = (item: LogbookEntry) =>\n  item.context_event_type || item.context_state || item.context_message;\nconst stripEntityId = (message: string, entityId?: string) =>\n  entityId ? message.replace(entityId, \" \") : message;\n\n@customElement(\"ha-logbook-renderer\")\nclass HaLogbookRenderer extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public userIdToName = {};\n\n  @property({ attribute: false })\n  public traceContexts: TraceContexts = {};\n\n  @property({ attribute: false }) public entries: LogbookEntry[] = [];\n\n  @property({ type: Boolean, attribute: \"narrow\" })\n  public narrow = false;\n\n  @property({ type: Boolean, attribute: \"virtualize\", reflect: true })\n  public virtualize = false;\n\n  @property({ type: Boolean, attribute: \"show-indicator\" })\n  public showIndicator = false;\n\n  @property({ type: Boolean, attribute: \"no-icon\" })\n  public noIcon = false;\n\n  @property({ type: Boolean, attribute: \"no-name\" })\n  public noName = false;\n\n  @property({ type: Boolean, attribute: \"relative-time\" })\n  public relativeTime = false;\n\n  // @ts-ignore\n  @restoreScroll(\".container\") private _savedScrollPos?: number;\n\n  protected willUpdate(changedProps: PropertyValues<this>) {\n    if (\n      (!this.hasUpdated && this.virtualize) ||\n      (changedProps.has(\"virtualize\") && this.virtualize)\n    ) {\n      this.hass.loadBackendTranslation(\"services\");\n      this.hass.loadBackendTranslation(\"title\");\n      loadVirtualizer();\n    }\n  }\n\n  protected shouldUpdate(changedProps: PropertyValues<this>) {\n    const oldHass = changedProps.get(\"hass\") as HomeAssistant | undefined;\n    const languageChanged =\n      oldHass === undefined || oldHass.locale !== this.hass.locale;\n\n    return (\n      changedProps.has(\"entries\") ||\n      changedProps.has(\"traceContexts\") ||\n      languageChanged\n    );\n  }\n\n  protected render() {\n    if (!this.entries?.length) {\n      return html`\n        <div class=\"container no-entries\">\n          ${this.hass.localize(\"ui.components.logbook.entries_not_found\")}\n        </div>\n      `;\n    }\n\n    return html`\n      <div\n        class=\"container ha-scrollbar ${classMap({\n          narrow: this.narrow,\n          \"no-name\": this.noName,\n          \"no-icon\": this.noIcon,\n        })}\"\n        @scroll=${this._saveScrollPos}\n      >\n        ${this.virtualize\n          ? html`<lit-virtualizer\n              @visibilityChanged=${this._visibilityChanged}\n              scroller\n              class=\"ha-scrollbar\"\n              .items=${this.entries}\n              .renderItem=${this._renderLogbookItem}\n            >\n            </lit-virtualizer>`\n          : this.entries.map((item, index) =>\n              this._renderLogbookItem(item, index)\n            )}\n      </div>\n    `;\n  }\n\n  private _renderLogbookItem = (item: LogbookEntry, index: number) => {\n    if (!item || index === undefined) {\n      return nothing;\n    }\n    const previous = this.entries[index - 1] as LogbookEntry | undefined;\n    const seenEntityIds: string[] = [];\n    const currentStateObj = item.entity_id\n      ? this.hass.states[item.entity_id]\n      : undefined;\n    const historicStateObj = currentStateObj\n      ? createHistoricState(currentStateObj, item.state!)\n      : undefined;\n    const domain = item.entity_id\n      ? computeDomain(item.entity_id)\n      : // Domain is there if there is no entity ID.\n        item.domain!;\n    const overrideImage =\n      !historicStateObj &&\n      !item.icon &&\n      !item.state &&\n      domain &&\n      isComponentLoaded(this.hass, domain)\n        ? brandsUrl({\n            domain: domain!,\n            type: \"icon\",\n            useFallback: true,\n            darkOptimized: this.hass.themes?.darkMode,\n          })\n        : undefined;\n\n    const traceContext =\n      triggerDomains.includes(item.domain!) &&\n      item.context_id! in this.traceContexts\n        ? this.traceContexts[item.context_id!]\n        : undefined;\n\n    const hasTrace = traceContext !== undefined;\n\n    return html`\n      <div\n        class=\"entry-container ${classMap({ clickable: hasTrace })}\"\n        .traceLink=${traceContext\n          ? `/config/${traceContext.domain}/trace/${traceContext.item_id}?run_id=${traceContext.run_id}`\n          : undefined}\n        @click=${this._handleClick}\n      >\n        ${index === 0 ||\n        (item?.when &&\n          previous?.when &&\n          new Date(item.when * 1000).toDateString() !==\n            new Date(previous.when * 1000).toDateString())\n          ? html`\n              <h4 class=\"date\">\n                ${formatDate(\n                  new Date(item.when * 1000),\n                  this.hass.locale,\n                  this.hass.config\n                )}\n              </h4>\n            `\n          : nothing}\n\n        <div class=\"entry ${classMap({ \"no-entity\": !item.entity_id })}\">\n          <div class=\"icon-message\">\n            ${!this.noIcon\n              ? html`\n                  <state-badge\n                    .hass=${this.hass}\n                    .overrideIcon=${item.icon}\n                    .overrideImage=${overrideImage}\n                    .stateObj=${item.icon ? undefined : historicStateObj}\n                    .stateColor=${false}\n                  ></state-badge>\n                `\n              : \"\"}\n            ${this.showIndicator ? this._renderIndicator(item) : \"\"}\n            <div class=\"message-relative_time\">\n              <div class=\"message\">\n                ${!this.noName // Used for more-info panel (single entity case)\n                  ? this._renderEntity(item.entity_id, item.name, hasTrace)\n                  : \"\"}\n                ${this._renderMessage(\n                  item,\n                  seenEntityIds,\n                  domain,\n                  historicStateObj,\n                  hasTrace\n                )}\n                ${this._renderContextMessage(item, seenEntityIds, hasTrace)}\n              </div>\n              <div class=\"secondary\">\n                <span\n                  >${formatTimeWithSeconds(\n                    new Date(item.when * 1000),\n                    this.hass.locale,\n                    this.hass.config\n                  )}</span\n                >\n                -\n                <ha-relative-time\n                  .hass=${this.hass}\n                  .datetime=${item.when * 1000}\n                  capitalize\n                ></ha-relative-time>\n                ${item.context_user_id ? html`${this._renderUser(item)}` : \"\"}\n                ${hasTrace\n                  ? `- ${this.hass.localize(\n                      \"ui.components.logbook.show_trace\"\n                    )}`\n                  : \"\"}\n              </div>\n            </div>\n          </div>\n          ${hasTrace ? html`<ha-icon-next></ha-icon-next>` : \"\"}\n        </div>\n      </div>\n    `;\n  };\n\n  @eventOptions({ passive: true })\n  private _saveScrollPos(e: Event) {\n    this._savedScrollPos = (e.target as HTMLDivElement).scrollTop;\n  }\n\n  @eventOptions({ passive: true })\n  private _visibilityChanged(e: VisibilityChangedEvent) {\n    fireEvent(this, \"hass-logbook-live\", {\n      enable: e.first === 0,\n    });\n  }\n\n  private _renderIndicator(item: LogbookEntry) {\n    const stateObj = this.hass.states[item.entity_id!] as\n      | HassEntity\n      | undefined;\n    const computedStyles = getComputedStyle(this);\n\n    const color =\n      item.state !== undefined\n        ? computeTimelineColor(item.state, computedStyles, stateObj)\n        : undefined;\n\n    const style = {\n      backgroundColor: color,\n    };\n\n    return html` <div class=\"indicator\" style=${styleMap(style)}></div> `;\n  }\n\n  private _renderMessage(\n    item: LogbookEntry,\n    seenEntityIds: string[],\n    domain?: string,\n    historicStateObj?: HassEntity,\n    noLink?: boolean\n  ) {\n    if (item.entity_id) {\n      if (item.state) {\n        return historicStateObj\n          ? localizeStateMessage(\n              this.hass,\n              this.hass.localize,\n              item.state,\n              historicStateObj,\n              domain!\n            )\n          : item.state;\n      }\n    }\n\n    const itemHasContext = hasContext(item);\n    let message = item.message;\n    if (triggerDomains.includes(domain!) && item.source) {\n      if (itemHasContext) {\n        // These domains include the trigger source in the message\n        // but if we have the context we want to display that instead\n        // as otherwise we display duplicate triggers\n        return \"\";\n      }\n      message = localizeTriggerSource(this.hass.localize, item.source);\n    }\n    return message\n      ? this._formatMessageWithPossibleEntity(\n          itemHasContext\n            ? stripEntityId(message, item.context_entity_id)\n            : message,\n          seenEntityIds,\n          undefined,\n          noLink\n        )\n      : \"\";\n  }\n\n  private _renderUser(item: LogbookEntry) {\n    const item_username =\n      item.context_user_id && this.userIdToName[item.context_user_id];\n    if (item_username) {\n      return `- ${item_username}`;\n    }\n    return \"\";\n  }\n\n  private _renderUnseenContextSourceEntity(\n    item: LogbookEntry,\n    seenEntityIds: string[],\n    noLink: boolean\n  ) {\n    if (\n      !item.context_entity_id ||\n      seenEntityIds.includes(item.context_entity_id!)\n    ) {\n      return \"\";\n    }\n    // We don't know what caused this entity\n    // to be included since its an integration\n    // described event.\n    return html` (${this._renderEntity(\n      item.context_entity_id,\n      item.context_entity_id_name,\n      noLink\n    )})`;\n  }\n\n  private _renderContextMessage(\n    item: LogbookEntry,\n    seenEntityIds: string[],\n    noLink: boolean\n  ) {\n    // State change\n    if (item.context_state) {\n      const historicStateObj =\n        item.context_entity_id && item.context_entity_id in this.hass.states\n          ? createHistoricState(\n              this.hass.states[item.context_entity_id],\n              item.context_state\n            )\n          : undefined;\n      return html`${this.hass.localize(\n        \"ui.components.logbook.triggered_by_state_of\"\n      )}\n      ${this._renderEntity(\n        item.context_entity_id,\n        item.context_entity_id_name,\n        noLink\n      )}\n      ${historicStateObj\n        ? localizeStateMessage(\n            this.hass,\n            this.hass.localize,\n            item.context_state,\n            historicStateObj,\n            computeDomain(item.context_entity_id!)\n          )\n        : item.context_state}`;\n    }\n    // Service call\n    if (item.context_event_type === \"call_service\") {\n      return html`${this.hass.localize(\n        \"ui.components.logbook.triggered_by_service\"\n      )}\n      ${item.context_domain && item.context_service\n        ? `${domainToName(this.hass.localize, item.context_domain)}:\n      ${\n        this.hass.localize(\n          `component.${item.context_domain}.services.${item.context_service}.name`\n        ) ||\n        this.hass.services[item.context_domain]?.[item.context_service]?.name ||\n        item.context_service\n      }`\n        : \"\"}`;\n    }\n    if (\n      !item.context_message ||\n      seenEntityIds.includes(item.context_entity_id!)\n    ) {\n      return \"\";\n    }\n    // Automation or script\n    if (\n      item.context_event_type === \"automation_triggered\" ||\n      item.context_event_type === \"script_started\"\n    ) {\n      // context_source is available in 2022.6 and later\n      const triggerMsg = item.context_source\n        ? item.context_source\n        : item.context_message.replace(\"triggered by \", \"\");\n      const contextTriggerSource = localizeTriggerSource(\n        this.hass.localize,\n        triggerMsg\n      );\n      return html`${this.hass.localize(\n        item.context_event_type === \"automation_triggered\"\n          ? \"ui.components.logbook.triggered_by_automation\"\n          : \"ui.components.logbook.triggered_by_script\"\n      )}\n      ${this._renderEntity(\n        item.context_entity_id,\n        item.context_entity_id_name,\n        noLink\n      )}\n      ${item.context_message\n        ? this._formatMessageWithPossibleEntity(\n            contextTriggerSource,\n            seenEntityIds,\n            undefined,\n            noLink\n          )\n        : \"\"}`;\n    }\n    // Generic externally described logbook platform\n    // These are not localizable\n    return html` ${this.hass.localize(\"ui.components.logbook.triggered_by\")}\n    ${item.context_name}\n    ${this._formatMessageWithPossibleEntity(\n      item.context_message,\n      seenEntityIds,\n      item.context_entity_id,\n      noLink\n    )}\n    ${this._renderUnseenContextSourceEntity(item, seenEntityIds, noLink)}`;\n  }\n\n  private _renderEntity(\n    entityId: string | undefined,\n    entityName: string | undefined,\n    noLink?: boolean\n  ) {\n    const hasState = entityId && entityId in this.hass.states;\n    const displayName =\n      entityName ||\n      (hasState\n        ? this.hass.states[entityId].attributes.friendly_name || entityId\n        : entityId);\n    if (!hasState) {\n      return displayName;\n    }\n    return noLink\n      ? displayName\n      : html`<button\n          class=\"link\"\n          @click=${this._entityClicked}\n          .entityId=${entityId}\n        >\n          ${displayName}\n        </button>`;\n  }\n\n  private _formatMessageWithPossibleEntity(\n    message: string,\n    seenEntities: string[],\n    possibleEntity?: string,\n    noLink?: boolean\n  ) {\n    //\n    // As we are looking at a log(book), we are doing entity_id\n    // \"highlighting\"/\"colorizing\". The goal is to make it easy for\n    // the user to access the entity that caused the event.\n    //\n    // If there is an entity_id in the message that is also in the\n    // state machine, we search the message for the entity_id and\n    // replace it with _renderEntity\n    //\n    if (message.indexOf(\".\") !== -1) {\n      const messageParts = message.split(\" \");\n      for (let i = 0, size = messageParts.length; i < size; i++) {\n        if (messageParts[i] in this.hass.states) {\n          const entityId = messageParts[i];\n          if (seenEntities.includes(entityId)) {\n            return \"\";\n          }\n          seenEntities.push(entityId);\n          const messageEnd = messageParts.splice(i);\n          messageEnd.shift(); // remove the entity\n          return html`${messageParts.join(\" \")}\n          ${this._renderEntity(\n            entityId,\n            this.hass.states[entityId].attributes.friendly_name,\n            noLink\n          )}\n          ${messageEnd.join(\" \")}`;\n        }\n      }\n    }\n    //\n    // When we have a message has a specific entity_id attached to\n    // it, and the entity_id is not in the message, we look\n    // for the friendly name of the entity and replace that with\n    // _renderEntity if its there so the user can quickly get to\n    // that entity.\n    //\n    if (possibleEntity && possibleEntity in this.hass.states) {\n      const possibleEntityName =\n        this.hass.states[possibleEntity].attributes.friendly_name;\n      if (possibleEntityName && message.endsWith(possibleEntityName)) {\n        if (seenEntities.includes(possibleEntity)) {\n          return \"\";\n        }\n        seenEntities.push(possibleEntity);\n        message = message.substring(\n          0,\n          message.length - possibleEntityName.length\n        );\n        return html`${message}\n        ${this._renderEntity(possibleEntity, possibleEntityName, noLink)}`;\n      }\n    }\n    return message;\n  }\n\n  private _entityClicked(ev: Event) {\n    const entityId = (ev.currentTarget as any).entityId;\n    if (!entityId) {\n      return;\n    }\n\n    ev.preventDefault();\n    ev.stopPropagation();\n    fireEvent(this, \"hass-more-info\", {\n      entityId: entityId,\n    });\n  }\n\n  _handleClick(ev) {\n    if (!ev.currentTarget.traceLink) {\n      return;\n    }\n    navigate(ev.currentTarget.traceLink);\n    fireEvent(this, \"closed\");\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyle,\n      haStyleScrollbar,\n      buttonLinkStyle,\n      css`\n        :host([virtualize]) {\n          display: block;\n          height: 100%;\n        }\n\n        .entry-container {\n          width: 100%;\n        }\n\n        .entry {\n          position: relative;\n          display: flex;\n          width: 100%;\n          line-height: 2em;\n          padding: 8px 16px;\n          box-sizing: border-box;\n          border-top: 1px solid var(--divider-color);\n          justify-content: space-between;\n          align-items: center;\n        }\n\n        .indicator {\n          background-color: var(--disabled-color);\n          height: 8px;\n          width: 8px;\n          border-radius: 4px;\n          flex-shrink: 0;\n          margin-right: 12px;\n          margin-inline-start: initial;\n          margin-inline-end: 12px;\n          direction: var(--direction);\n        }\n\n        ha-icon-next {\n          color: var(--secondary-text-color);\n        }\n\n        .clickable {\n          cursor: pointer;\n        }\n\n        :not(.clickable) .entry.no-entity,\n        :not(.clickable) .no-name .entry {\n          cursor: default;\n        }\n\n        .entry:hover {\n          background-color: rgba(var(--rgb-primary-text-color), 0.04);\n        }\n\n        .narrow:not(.no-icon) .time {\n          margin-left: 32px;\n          margin-inline-start: 32px;\n          margin-inline-end: initial;\n          direction: var(--direction);\n        }\n\n        .message-relative_time {\n          display: flex;\n          flex-direction: column;\n        }\n\n        .secondary {\n          font-size: 12px;\n          line-height: 1.7;\n        }\n\n        .secondary a {\n          color: var(--secondary-text-color);\n        }\n\n        .date {\n          margin: 8px 0;\n          padding: 0 16px;\n        }\n\n        .icon-message {\n          display: flex;\n          align-items: center;\n        }\n\n        .no-entries {\n          text-align: center;\n          color: var(--secondary-text-color);\n        }\n\n        state-badge {\n          margin-right: 16px;\n          margin-inline-start: initial;\n          flex-shrink: 0;\n          color: var(--state-icon-color);\n          margin-inline-end: 16px;\n          direction: var(--direction);\n        }\n\n        .message {\n          color: var(--primary-text-color);\n        }\n\n        .no-name .message:first-letter {\n          text-transform: capitalize;\n        }\n\n        a {\n          color: var(--primary-color);\n          text-decoration: none;\n        }\n\n        button.link {\n          color: var(--paper-item-icon-color);\n          text-decoration: none;\n        }\n\n        .container {\n          max-height: var(--logbook-max-height);\n        }\n\n        .container,\n        lit-virtualizer {\n          height: 100%;\n        }\n\n        lit-virtualizer {\n          contain: size layout !important;\n        }\n\n        .narrow .entry {\n          line-height: 1.5;\n        }\n\n        .narrow .icon-message state-badge {\n          margin-left: 0;\n          margin-inline-start: 0;\n          margin-right: 8px;\n          margin-inline-end: 8px;\n          direction: var(--direction);\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-logbook-renderer\": HaLogbookRenderer;\n  }\n}\n"],"mappings":";AAEA,SACEA,GAAG,EAEHC,IAAI,EACJC,UAAU,EACVC,OAAO,QAEF,KAAK;AACZ,SAASC,aAAa,EAAEC,YAAY,EAAEC,QAAQ,QAAQ,gBAAgB;AACtE,SAASC,QAAQ,QAAQ,0BAA0B;AACnD,SAASC,QAAQ,QAAQ,0BAA0B;AACnD,SAASC,iBAAiB,QAAQ,yCAAyC;AAC3E,SAASC,UAAU,QAAQ,mCAAmC;AAC9D,SAASC,qBAAqB,QAAQ,mCAAmC;AACzE,SAASC,aAAa,QAAQ,wCAAwC;AACtE,SAASC,SAAS,QAAQ,6BAA6B;AACvD,SAASC,aAAa,QAAQ,oCAAoC;AAClE,SAASC,QAAQ,QAAQ,uBAAuB;AAChD,SAASC,oBAAoB,QAAQ,sDAAsD;AAC3F,OAAO,qCAAqC;AAC5C,OAAO,uCAAuC;AAC9C,OAAO,+BAA+B;AACtC,OAAO,mCAAmC;AAC1C,SACEC,mBAAmB,EACnBC,oBAAoB,EACpBC,qBAAqB,QAEhB,oBAAoB;AAE3B,SACEC,eAAe,EACfC,OAAO,EACPC,gBAAgB,QACX,wBAAwB;AAC/B,SAASC,eAAe,QAAQ,6BAA6B;AAE7D,SAASC,SAAS,QAAQ,uBAAuB;AACjD,SAASC,YAAY,QAAQ,wBAAwB;AAQrD,MAAMC,cAAc,GAAG,CAAC,QAAQ,EAAE,YAAY,CAAC;AAE/C,MAAMC,UAAU,GAAIC,IAAkB,IACpCA,IAAI,CAACC,kBAAkB,IAAID,IAAI,CAACE,aAAa,IAAIF,IAAI,CAACG,eAAe;AACvE,MAAMC,aAAa,GAAGA,CAACC,OAAe,EAAEC,QAAiB,KACvDA,QAAQ,GAAGD,OAAO,CAACE,OAAO,CAACD,QAAQ,EAAE,GAAG,CAAC,GAAGD,OAAO;AAAC,IAGhDG,iBAAiB,GAAAC,SAAA,EADtBjC,aAAa,CAAC,qBAAqB,CAAC,aAAAkC,WAAA,EAAAC,WAAA;EAArC,MACMH,iBAAiB,SAAAG,WAAA,CAAoB;IAAAC,YAAA,GAAAC,IAAA;MAAA,SAAAA,IAAA;MAAAH,WAAA;IAAA;EAwpB3C;EAAC;IAAAI,CAAA,EAxpBKN,iBAAiB;IAAAO,CAAA;MAAAC,IAAA;MAAAC,UAAA,GACpBvC,QAAQ,CAAC;QAAEwC,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAC,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAE9BvC,QAAQ,CAAC;QAAEwC,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAC,GAAA;MAAAC,MAAA;QAAA,OAAuB,CAAC,CAAC;MAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAEvDvC,QAAQ,CAAC;QAAEwC,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAC,GAAA;MAAAC,MAAA;QAAA,OACO,CAAC,CAAC;MAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAEvCvC,QAAQ,CAAC;QAAEwC,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAC,GAAA;MAAAC,MAAA;QAAA,OAAkC,EAAE;MAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAElEvC,QAAQ,CAAC;QAAE2C,IAAI,EAAEC,OAAO;QAAEJ,SAAS,EAAE;MAAS,CAAC,CAAC;MAAAC,GAAA;MAAAC,MAAA;QAAA,OACjC,KAAK;MAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAEpBvC,QAAQ,CAAC;QAAE2C,IAAI,EAAEC,OAAO;QAAEJ,SAAS,EAAE,YAAY;QAAEK,OAAO,EAAE;MAAK,CAAC,CAAC;MAAAJ,GAAA;MAAAC,MAAA;QAAA,OAChD,KAAK;MAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAExBvC,QAAQ,CAAC;QAAE2C,IAAI,EAAEC,OAAO;QAAEJ,SAAS,EAAE;MAAiB,CAAC,CAAC;MAAAC,GAAA;MAAAC,MAAA;QAAA,OAClC,KAAK;MAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAE3BvC,QAAQ,CAAC;QAAE2C,IAAI,EAAEC,OAAO;QAAEJ,SAAS,EAAE;MAAU,CAAC,CAAC;MAAAC,GAAA;MAAAC,MAAA;QAAA,OAClC,KAAK;MAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAEpBvC,QAAQ,CAAC;QAAE2C,IAAI,EAAEC,OAAO;QAAEJ,SAAS,EAAE;MAAU,CAAC,CAAC;MAAAC,GAAA;MAAAC,MAAA;QAAA,OAClC,KAAK;MAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAEpBvC,QAAQ,CAAC;QAAE2C,IAAI,EAAEC,OAAO;QAAEJ,SAAS,EAAE;MAAgB,CAAC,CAAC;MAAAC,GAAA;MAAAC,MAAA;QAAA,OAClC,KAAK;MAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAG1BjC,aAAa,CAAC,YAAY,CAAC;MAAAmC,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAG,GAAA;MAAAC,KAAA;MAD5B;;MAGA,SAAAI,WAAqBC,YAAkC,EAAE;QACvD,IACG,CAAC,IAAI,CAACC,UAAU,IAAI,IAAI,CAACC,UAAU,IACnCF,YAAY,CAACG,GAAG,CAAC,YAAY,CAAC,IAAI,IAAI,CAACD,UAAW,EACnD;UACA,IAAI,CAACE,IAAI,CAACC,sBAAsB,CAAC,UAAU,CAAC;UAC5C,IAAI,CAACD,IAAI,CAACC,sBAAsB,CAAC,OAAO,CAAC;UACzCnC,eAAe,CAAC,CAAC;QACnB;MACF;IAAC;MAAAqB,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAW,aAAuBN,YAAkC,EAAE;QACzD,MAAMO,OAAO,GAAGP,YAAY,CAACQ,GAAG,CAAC,MAAM,CAA8B;QACrE,MAAMC,eAAe,GACnBF,OAAO,KAAKG,SAAS,IAAIH,OAAO,CAACI,MAAM,KAAK,IAAI,CAACP,IAAI,CAACO,MAAM;QAE9D,OACEX,YAAY,CAACG,GAAG,CAAC,SAAS,CAAC,IAC3BH,YAAY,CAACG,GAAG,CAAC,eAAe,CAAC,IACjCM,eAAe;MAEnB;IAAC;MAAAlB,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAiB,OAAA,EAAmB;QAAA,IAAAC,aAAA;QACjB,IAAI,GAAAA,aAAA,GAAC,IAAI,CAACC,OAAO,cAAAD,aAAA,eAAZA,aAAA,CAAcE,MAAM,GAAE;UACzB,OAAOnE,IAAK;AAClB;AACA,YAAY,IAAI,CAACwD,IAAI,CAACY,QAAQ,CAAC,yCAAyC,CAAE;AAC1E;AACA,OAAO;QACH;QAEA,OAAOpE,IAAK;AAChB;AACA,wCAAwCM,QAAQ,CAAC;UACvC+D,MAAM,EAAE,IAAI,CAACA,MAAM;UACnB,SAAS,EAAE,IAAI,CAACC,MAAM;UACtB,SAAS,EAAE,IAAI,CAACC;QAClB,CAAC,CAAE;AACX,kBAAkB,IAAI,CAACC,cAAe;AACtC;AACA,UAAU,IAAI,CAAClB,UAAU,GACbtD,IAAK;AACjB,mCAAmC,IAAI,CAACyE,kBAAmB;AAC3D;AACA;AACA,uBAAuB,IAAI,CAACP,OAAQ;AACpC,4BAA4B,IAAI,CAACQ,kBAAmB;AACpD;AACA,+BAA+B,GACnB,IAAI,CAACR,OAAO,CAACS,GAAG,CAAC,CAAChD,IAAI,EAAEiD,KAAK,KAC3B,IAAI,CAACF,kBAAkB,CAAC/C,IAAI,EAAEiD,KAAK,CACrC,CAAE;AACd;AACA,KAAK;MACH;IAAC;MAAAjC,IAAA;MAAAG,GAAA;MAAAC,MAAA;QAAA,OAE4B,CAACpB,IAAkB,EAAEiD,KAAa,KAAK;UAAA,IAAAC,iBAAA;UAClE,IAAI,CAAClD,IAAI,IAAIiD,KAAK,KAAKd,SAAS,EAAE;YAChC,OAAO5D,OAAO;UAChB;UACA,MAAM4E,QAAQ,GAAG,IAAI,CAACZ,OAAO,CAACU,KAAK,GAAG,CAAC,CAA6B;UACpE,MAAMG,aAAuB,GAAG,EAAE;UAClC,MAAMC,eAAe,GAAGrD,IAAI,CAACsD,SAAS,GAClC,IAAI,CAACzB,IAAI,CAAC0B,MAAM,CAACvD,IAAI,CAACsD,SAAS,CAAC,GAChCnB,SAAS;UACb,MAAMqB,gBAAgB,GAAGH,eAAe,GACpChE,mBAAmB,CAACgE,eAAe,EAAErD,IAAI,CAACyD,KAAM,CAAC,GACjDtB,SAAS;UACb,MAAMuB,MAAM,GAAG1D,IAAI,CAACsD,SAAS,GACzBpE,aAAa,CAACc,IAAI,CAACsD,SAAS,CAAC;UAC7B;UACAtD,IAAI,CAAC0D,MAAO;UAChB,MAAMC,aAAa,GACjB,CAACH,gBAAgB,IACjB,CAACxD,IAAI,CAAC4D,IAAI,IACV,CAAC5D,IAAI,CAACyD,KAAK,IACXC,MAAM,IACN7E,iBAAiB,CAAC,IAAI,CAACgD,IAAI,EAAE6B,MAAM,CAAC,GAChC9D,SAAS,CAAC;YACR8D,MAAM,EAAEA,MAAO;YACfrC,IAAI,EAAE,MAAM;YACZwC,WAAW,EAAE,IAAI;YACjBC,aAAa,GAAAZ,iBAAA,GAAE,IAAI,CAACrB,IAAI,CAACkC,MAAM,cAAAb,iBAAA,uBAAhBA,iBAAA,CAAkBc;UACnC,CAAC,CAAC,GACF7B,SAAS;UAEf,MAAM8B,YAAY,GAChBnE,cAAc,CAACoE,QAAQ,CAAClE,IAAI,CAAC0D,MAAO,CAAC,IACrC1D,IAAI,CAACmE,UAAU,IAAK,IAAI,CAACC,aAAa,GAClC,IAAI,CAACA,aAAa,CAACpE,IAAI,CAACmE,UAAU,CAAE,GACpChC,SAAS;UAEf,MAAMkC,QAAQ,GAAGJ,YAAY,KAAK9B,SAAS;UAE3C,OAAO9D,IAAK;AAChB;AACA,iCAAiCM,QAAQ,CAAC;YAAE2F,SAAS,EAAED;UAAS,CAAC,CAAE;AACnE,qBAAqBJ,YAAY,GACpB,WAAUA,YAAY,CAACP,MAAO,UAASO,YAAY,CAACM,OAAQ,WAAUN,YAAY,CAACO,MAAO,EAAC,GAC5FrC,SAAU;AACtB,iBAAiB,IAAI,CAACsC,YAAa;AACnC;AACA,UAAUxB,KAAK,KAAK,CAAC,IACZjD,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAE0E,IAAI,IACTvB,QAAQ,aAARA,QAAQ,eAARA,QAAQ,CAAEuB,IAAI,IACd,IAAIC,IAAI,CAAC3E,IAAI,CAAC0E,IAAI,GAAG,IAAI,CAAC,CAACE,YAAY,CAAC,CAAC,KACvC,IAAID,IAAI,CAACxB,QAAQ,CAACuB,IAAI,GAAG,IAAI,CAAC,CAACE,YAAY,CAAC,CAAE,GAC9CvG,IAAK;AACjB;AACA,kBAAkBS,UAAU,CACV,IAAI6F,IAAI,CAAC3E,IAAI,CAAC0E,IAAI,GAAG,IAAI,CAAC,EAC1B,IAAI,CAAC7C,IAAI,CAACO,MAAM,EAChB,IAAI,CAACP,IAAI,CAACgD,MACZ,CAAE;AAClB;AACA,aAAa,GACDtG,OAAQ;AACpB;AACA,4BAA4BI,QAAQ,CAAC;YAAE,WAAW,EAAE,CAACqB,IAAI,CAACsD;UAAU,CAAC,CAAE;AACvE;AACA,cAAc,CAAC,IAAI,CAACV,MAAM,GACVvE,IAAK;AACrB;AACA,4BAA4B,IAAI,CAACwD,IAAK;AACtC,oCAAoC7B,IAAI,CAAC4D,IAAK;AAC9C,qCAAqCD,aAAc;AACnD,gCAAgC3D,IAAI,CAAC4D,IAAI,GAAGzB,SAAS,GAAGqB,gBAAiB;AACzE,kCAAkC,KAAM;AACxC;AACA,iBAAiB,GACD,EAAG;AACnB,cAAc,IAAI,CAACsB,aAAa,GAAG,IAAI,CAACC,gBAAgB,CAAC/E,IAAI,CAAC,GAAG,EAAG;AACpE;AACA;AACA,kBAAkB,CAAC,IAAI,CAAC2C,MAAM,CAAC;UAAA,EACX,IAAI,CAACqC,aAAa,CAAChF,IAAI,CAACsD,SAAS,EAAEtD,IAAI,CAACiF,IAAI,EAAEZ,QAAQ,CAAC,GACvD,EAAG;AACvB,kBAAkB,IAAI,CAACa,cAAc,CACnBlF,IAAI,EACJoD,aAAa,EACbM,MAAM,EACNF,gBAAgB,EAChBa,QACF,CAAE;AAClB,kBAAkB,IAAI,CAACc,qBAAqB,CAACnF,IAAI,EAAEoD,aAAa,EAAEiB,QAAQ,CAAE;AAC5E;AACA;AACA;AACA,qBAAqBtF,qBAAqB,CACtB,IAAI4F,IAAI,CAAC3E,IAAI,CAAC0E,IAAI,GAAG,IAAI,CAAC,EAC1B,IAAI,CAAC7C,IAAI,CAACO,MAAM,EAChB,IAAI,CAACP,IAAI,CAACgD,MACZ,CAAE;AACpB;AACA;AACA;AACA,0BAA0B,IAAI,CAAChD,IAAK;AACpC,8BAA8B7B,IAAI,CAAC0E,IAAI,GAAG,IAAK;AAC/C;AACA;AACA,kBAAkB1E,IAAI,CAACoF,eAAe,GAAG/G,IAAK,GAAE,IAAI,CAACgH,WAAW,CAACrF,IAAI,CAAE,EAAC,GAAG,EAAG;AAC9E,kBAAkBqE,QAAQ,GACL,KAAI,IAAI,CAACxC,IAAI,CAACY,QAAQ,CACrB,kCACF,CAAE,EAAC,GACH,EAAG;AACvB;AACA;AACA;AACA,YAAY4B,QAAQ,GAAGhG,IAAK,+BAA8B,GAAG,EAAG;AAChE;AACA;AACA,KAAK;QACH,CAAC;MAAA;IAAA;MAAA2C,IAAA;MAAAC,UAAA,GAEAxC,YAAY,CAAC;QAAE6G,OAAO,EAAE;MAAK,CAAC,CAAC;MAAAnE,GAAA;MAAAC,KAAA,EAAhC,SAAAyB,eACuB0C,CAAQ,EAAE;QAC/B,IAAI,CAACC,eAAe,GAAID,CAAC,CAACE,MAAM,CAAoBC,SAAS;MAC/D;IAAC;MAAA1E,IAAA;MAAAC,UAAA,GAEAxC,YAAY,CAAC;QAAE6G,OAAO,EAAE;MAAK,CAAC,CAAC;MAAAnE,GAAA;MAAAC,KAAA,EAAhC,SAAA0B,mBAC2ByC,CAAyB,EAAE;QACpDtG,SAAS,CAAC,IAAI,EAAE,mBAAmB,EAAE;UACnC0G,MAAM,EAAEJ,CAAC,CAACK,KAAK,KAAK;QACtB,CAAC,CAAC;MACJ;IAAC;MAAA5E,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAA2D,iBAAyB/E,IAAkB,EAAE;QAC3C,MAAM6F,QAAQ,GAAG,IAAI,CAAChE,IAAI,CAAC0B,MAAM,CAACvD,IAAI,CAACsD,SAAS,CAEnC;QACb,MAAMwC,cAAc,GAAGC,gBAAgB,CAAC,IAAI,CAAC;QAE7C,MAAMC,KAAK,GACThG,IAAI,CAACyD,KAAK,KAAKtB,SAAS,GACpB/C,oBAAoB,CAACY,IAAI,CAACyD,KAAK,EAAEqC,cAAc,EAAED,QAAQ,CAAC,GAC1D1D,SAAS;QAEf,MAAM8D,KAAK,GAAG;UACZC,eAAe,EAAEF;QACnB,CAAC;QAED,OAAO3H,IAAK,iCAAgCO,QAAQ,CAACqH,KAAK,CAAE,UAAS;MACvE;IAAC;MAAAjF,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAA8D,eACElF,IAAkB,EAClBoD,aAAuB,EACvBM,MAAe,EACfF,gBAA6B,EAC7B2C,MAAgB,EAChB;QACA,IAAInG,IAAI,CAACsD,SAAS,EAAE;UAClB,IAAItD,IAAI,CAACyD,KAAK,EAAE;YACd,OAAOD,gBAAgB,GACnBlE,oBAAoB,CAClB,IAAI,CAACuC,IAAI,EACT,IAAI,CAACA,IAAI,CAACY,QAAQ,EAClBzC,IAAI,CAACyD,KAAK,EACVD,gBAAgB,EAChBE,MACF,CAAC,GACD1D,IAAI,CAACyD,KAAK;UAChB;QACF;QAEA,MAAM2C,cAAc,GAAGrG,UAAU,CAACC,IAAI,CAAC;QACvC,IAAIK,OAAO,GAAGL,IAAI,CAACK,OAAO;QAC1B,IAAIP,cAAc,CAACoE,QAAQ,CAACR,MAAO,CAAC,IAAI1D,IAAI,CAACqG,MAAM,EAAE;UACnD,IAAID,cAAc,EAAE;YAClB;YACA;YACA;YACA,OAAO,EAAE;UACX;UACA/F,OAAO,GAAGd,qBAAqB,CAAC,IAAI,CAACsC,IAAI,CAACY,QAAQ,EAAEzC,IAAI,CAACqG,MAAM,CAAC;QAClE;QACA,OAAOhG,OAAO,GACV,IAAI,CAACiG,gCAAgC,CACnCF,cAAc,GACVhG,aAAa,CAACC,OAAO,EAAEL,IAAI,CAACuG,iBAAiB,CAAC,GAC9ClG,OAAO,EACX+C,aAAa,EACbjB,SAAS,EACTgE,MACF,CAAC,GACD,EAAE;MACR;IAAC;MAAAnF,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAiE,YAAoBrF,IAAkB,EAAE;QACtC,MAAMwG,aAAa,GACjBxG,IAAI,CAACoF,eAAe,IAAI,IAAI,CAACqB,YAAY,CAACzG,IAAI,CAACoF,eAAe,CAAC;QACjE,IAAIoB,aAAa,EAAE;UACjB,OAAQ,KAAIA,aAAc,EAAC;QAC7B;QACA,OAAO,EAAE;MACX;IAAC;MAAAxF,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAsF,iCACE1G,IAAkB,EAClBoD,aAAuB,EACvB+C,MAAe,EACf;QACA,IACE,CAACnG,IAAI,CAACuG,iBAAiB,IACvBnD,aAAa,CAACc,QAAQ,CAAClE,IAAI,CAACuG,iBAAkB,CAAC,EAC/C;UACA,OAAO,EAAE;QACX;QACA;QACA;QACA;QACA,OAAOlI,IAAK,KAAI,IAAI,CAAC2G,aAAa,CAChChF,IAAI,CAACuG,iBAAiB,EACtBvG,IAAI,CAAC2G,sBAAsB,EAC3BR,MACF,CAAE,GAAE;MACN;IAAC;MAAAnF,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAA+D,sBACEnF,IAAkB,EAClBoD,aAAuB,EACvB+C,MAAe,EACf;QACA;QACA,IAAInG,IAAI,CAACE,aAAa,EAAE;UACtB,MAAMsD,gBAAgB,GACpBxD,IAAI,CAACuG,iBAAiB,IAAIvG,IAAI,CAACuG,iBAAiB,IAAI,IAAI,CAAC1E,IAAI,CAAC0B,MAAM,GAChElE,mBAAmB,CACjB,IAAI,CAACwC,IAAI,CAAC0B,MAAM,CAACvD,IAAI,CAACuG,iBAAiB,CAAC,EACxCvG,IAAI,CAACE,aACP,CAAC,GACDiC,SAAS;UACf,OAAO9D,IAAK,GAAE,IAAI,CAACwD,IAAI,CAACY,QAAQ,CAC9B,6CACF,CAAE;AACR,QAAQ,IAAI,CAACuC,aAAa,CAClBhF,IAAI,CAACuG,iBAAiB,EACtBvG,IAAI,CAAC2G,sBAAsB,EAC3BR,MACF,CAAE;AACR,QAAQ3C,gBAAgB,GACdlE,oBAAoB,CAClB,IAAI,CAACuC,IAAI,EACT,IAAI,CAACA,IAAI,CAACY,QAAQ,EAClBzC,IAAI,CAACE,aAAa,EAClBsD,gBAAgB,EAChBtE,aAAa,CAACc,IAAI,CAACuG,iBAAkB,CACvC,CAAC,GACDvG,IAAI,CAACE,aAAc,EAAC;QAC1B;QACA;QACA,IAAIF,IAAI,CAACC,kBAAkB,KAAK,cAAc,EAAE;UAAA,IAAA2G,qBAAA;UAC9C,OAAOvI,IAAK,GAAE,IAAI,CAACwD,IAAI,CAACY,QAAQ,CAC9B,4CACF,CAAE;AACR,QAAQzC,IAAI,CAAC6G,cAAc,IAAI7G,IAAI,CAAC8G,eAAe,GACxC,GAAEjH,YAAY,CAAC,IAAI,CAACgC,IAAI,CAACY,QAAQ,EAAEzC,IAAI,CAAC6G,cAAc,CAAE;AACnE,QACQ,IAAI,CAAChF,IAAI,CAACY,QAAQ,CACf,aAAYzC,IAAI,CAAC6G,cAAe,aAAY7G,IAAI,CAAC8G,eAAgB,OACpE,CAAC,MAAAF,qBAAA,GACD,IAAI,CAAC/E,IAAI,CAACkF,QAAQ,CAAC/G,IAAI,CAAC6G,cAAc,CAAC,cAAAD,qBAAA,gBAAAA,qBAAA,GAAvCA,qBAAA,CAA0C5G,IAAI,CAAC8G,eAAe,CAAC,cAAAF,qBAAA,uBAA/DA,qBAAA,CAAiE3B,IAAI,KACrEjF,IAAI,CAAC8G,eACN,EAAC,GACE,EAAG,EAAC;QACV;QACA,IACE,CAAC9G,IAAI,CAACG,eAAe,IACrBiD,aAAa,CAACc,QAAQ,CAAClE,IAAI,CAACuG,iBAAkB,CAAC,EAC/C;UACA,OAAO,EAAE;QACX;QACA;QACA,IACEvG,IAAI,CAACC,kBAAkB,KAAK,sBAAsB,IAClDD,IAAI,CAACC,kBAAkB,KAAK,gBAAgB,EAC5C;UACA;UACA,MAAM+G,UAAU,GAAGhH,IAAI,CAACiH,cAAc,GAClCjH,IAAI,CAACiH,cAAc,GACnBjH,IAAI,CAACG,eAAe,CAACI,OAAO,CAAC,eAAe,EAAE,EAAE,CAAC;UACrD,MAAM2G,oBAAoB,GAAG3H,qBAAqB,CAChD,IAAI,CAACsC,IAAI,CAACY,QAAQ,EAClBuE,UACF,CAAC;UACD,OAAO3I,IAAK,GAAE,IAAI,CAACwD,IAAI,CAACY,QAAQ,CAC9BzC,IAAI,CAACC,kBAAkB,KAAK,sBAAsB,GAC9C,+CAA+C,GAC/C,2CACN,CAAE;AACR,QAAQ,IAAI,CAAC+E,aAAa,CAClBhF,IAAI,CAACuG,iBAAiB,EACtBvG,IAAI,CAAC2G,sBAAsB,EAC3BR,MACF,CAAE;AACR,QAAQnG,IAAI,CAACG,eAAe,GAClB,IAAI,CAACmG,gCAAgC,CACnCY,oBAAoB,EACpB9D,aAAa,EACbjB,SAAS,EACTgE,MACF,CAAC,GACD,EAAG,EAAC;QACV;QACA;QACA;QACA,OAAO9H,IAAK,IAAG,IAAI,CAACwD,IAAI,CAACY,QAAQ,CAAC,oCAAoC,CAAE;AAC5E,MAAMzC,IAAI,CAACmH,YAAa;AACxB,MAAM,IAAI,CAACb,gCAAgC,CACrCtG,IAAI,CAACG,eAAe,EACpBiD,aAAa,EACbpD,IAAI,CAACuG,iBAAiB,EACtBJ,MACF,CAAE;AACN,MAAM,IAAI,CAACO,gCAAgC,CAAC1G,IAAI,EAAEoD,aAAa,EAAE+C,MAAM,CAAE,EAAC;MACxE;IAAC;MAAAnF,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAA4D,cACE1E,QAA4B,EAC5B8G,UAA8B,EAC9BjB,MAAgB,EAChB;QACA,MAAMkB,QAAQ,GAAG/G,QAAQ,IAAIA,QAAQ,IAAI,IAAI,CAACuB,IAAI,CAAC0B,MAAM;QACzD,MAAM+D,WAAW,GACfF,UAAU,KACTC,QAAQ,GACL,IAAI,CAACxF,IAAI,CAAC0B,MAAM,CAACjD,QAAQ,CAAC,CAACiH,UAAU,CAACC,aAAa,IAAIlH,QAAQ,GAC/DA,QAAQ,CAAC;QACf,IAAI,CAAC+G,QAAQ,EAAE;UACb,OAAOC,WAAW;QACpB;QACA,OAAOnB,MAAM,GACTmB,WAAW,GACXjJ,IAAK;AACb;AACA,mBAAmB,IAAI,CAACoJ,cAAe;AACvC,sBAAsBnH,QAAS;AAC/B;AACA,YAAYgH,WAAY;AACxB,kBAAkB;MAChB;IAAC;MAAAtG,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAkF,iCACEjG,OAAe,EACfqH,YAAsB,EACtBC,cAAuB,EACvBxB,MAAgB,EAChB;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,IAAI9F,OAAO,CAACuH,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;UAC/B,MAAMC,YAAY,GAAGxH,OAAO,CAACyH,KAAK,CAAC,GAAG,CAAC;UACvC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEC,IAAI,GAAGH,YAAY,CAACrF,MAAM,EAAEuF,CAAC,GAAGC,IAAI,EAAED,CAAC,EAAE,EAAE;YACzD,IAAIF,YAAY,CAACE,CAAC,CAAC,IAAI,IAAI,CAAClG,IAAI,CAAC0B,MAAM,EAAE;cACvC,MAAMjD,QAAQ,GAAGuH,YAAY,CAACE,CAAC,CAAC;cAChC,IAAIL,YAAY,CAACxD,QAAQ,CAAC5D,QAAQ,CAAC,EAAE;gBACnC,OAAO,EAAE;cACX;cACAoH,YAAY,CAACO,IAAI,CAAC3H,QAAQ,CAAC;cAC3B,MAAM4H,UAAU,GAAGL,YAAY,CAACM,MAAM,CAACJ,CAAC,CAAC;cACzCG,UAAU,CAACE,KAAK,CAAC,CAAC,CAAC,CAAC;cACpB,OAAO/J,IAAK,GAAEwJ,YAAY,CAACQ,IAAI,CAAC,GAAG,CAAE;AAC/C,YAAY,IAAI,CAACrD,aAAa,CAClB1E,QAAQ,EACR,IAAI,CAACuB,IAAI,CAAC0B,MAAM,CAACjD,QAAQ,CAAC,CAACiH,UAAU,CAACC,aAAa,EACnDrB,MACF,CAAE;AACZ,YAAY+B,UAAU,CAACG,IAAI,CAAC,GAAG,CAAE,EAAC;YAC1B;UACF;QACF;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,IAAIV,cAAc,IAAIA,cAAc,IAAI,IAAI,CAAC9F,IAAI,CAAC0B,MAAM,EAAE;UACxD,MAAM+E,kBAAkB,GACtB,IAAI,CAACzG,IAAI,CAAC0B,MAAM,CAACoE,cAAc,CAAC,CAACJ,UAAU,CAACC,aAAa;UAC3D,IAAIc,kBAAkB,IAAIjI,OAAO,CAACkI,QAAQ,CAACD,kBAAkB,CAAC,EAAE;YAC9D,IAAIZ,YAAY,CAACxD,QAAQ,CAACyD,cAAc,CAAC,EAAE;cACzC,OAAO,EAAE;YACX;YACAD,YAAY,CAACO,IAAI,CAACN,cAAc,CAAC;YACjCtH,OAAO,GAAGA,OAAO,CAACmI,SAAS,CACzB,CAAC,EACDnI,OAAO,CAACmC,MAAM,GAAG8F,kBAAkB,CAAC9F,MACtC,CAAC;YACD,OAAOnE,IAAK,GAAEgC,OAAQ;AAC9B,UAAU,IAAI,CAAC2E,aAAa,CAAC2C,cAAc,EAAEW,kBAAkB,EAAEnC,MAAM,CAAE,EAAC;UACpE;QACF;QACA,OAAO9F,OAAO;MAChB;IAAC;MAAAW,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAqG,eAAuBgB,EAAS,EAAE;QAChC,MAAMnI,QAAQ,GAAImI,EAAE,CAACC,aAAa,CAASpI,QAAQ;QACnD,IAAI,CAACA,QAAQ,EAAE;UACb;QACF;QAEAmI,EAAE,CAACE,cAAc,CAAC,CAAC;QACnBF,EAAE,CAACG,eAAe,CAAC,CAAC;QACpB3J,SAAS,CAAC,IAAI,EAAE,gBAAgB,EAAE;UAChCqB,QAAQ,EAAEA;QACZ,CAAC,CAAC;MACJ;IAAC;MAAAU,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAqD,aAAagE,EAAE,EAAE;QACf,IAAI,CAACA,EAAE,CAACC,aAAa,CAACG,SAAS,EAAE;UAC/B;QACF;QACA1J,QAAQ,CAACsJ,EAAE,CAACC,aAAa,CAACG,SAAS,CAAC;QACpC5J,SAAS,CAAC,IAAI,EAAE,QAAQ,CAAC;MAC3B;IAAC;MAAA+B,IAAA;MAAA8H,MAAA;MAAA3H,GAAA;MAAAC,KAAA,EAED,SAAA2H,OAAA,EAAoC;QAClC,OAAO,CACLtJ,OAAO,EACPC,gBAAgB,EAChBF,eAAe,EACfpvpB6BE,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}