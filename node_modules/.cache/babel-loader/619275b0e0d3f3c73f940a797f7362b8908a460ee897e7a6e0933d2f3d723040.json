{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport deepFreeze from \"deep-freeze\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport \"../../../../components/ha-yaml-editor\";\nimport { haStyleDialog } from \"../../../../resources/styles\";\nimport { showSaveSuccessToast } from \"../../../../util/toast-saved-success\";\nimport { addCards } from \"../config-util\";\nimport \"./hui-card-preview\";\nimport { showCreateCardDialog } from \"./show-create-card-dialog\";\nexport let HuiDialogSuggestCard = _decorate([customElement(\"hui-dialog-suggest-card\")], function (_initialize, _LitElement) {\n  class HuiDialogSuggestCard extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HuiDialogSuggestCard,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_params\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_cardConfig\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_saving\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [query(\"ha-yaml-editor\")],\n      key: \"_yamlEditor\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"showDialog\",\n      value: function showDialog(params) {\n        this._params = params;\n        this._cardConfig = params.cardConfig;\n        if (!Object.isFrozen(this._cardConfig)) {\n          this._cardConfig = deepFreeze(this._cardConfig);\n        }\n        if (this._yamlEditor) {\n          this._yamlEditor.setValue(this._cardConfig);\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"closeDialog\",\n      value: function closeDialog() {\n        this._params = undefined;\n        this._cardConfig = undefined;\n        fireEvent(this, \"dialog-closed\", {\n          dialog: this.localName\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this._params) {\n          return nothing;\n        }\n        return html`\n      <ha-dialog\n        open\n        scrimClickAction\n        @closed=${this.closeDialog}\n        .heading=${this.hass.localize(\"ui.panel.lovelace.editor.suggest_card.header\")}\n      >\n        <div>\n          ${this._cardConfig ? html`\n                <div class=\"element-preview\">\n                  ${this._cardConfig.map(cardConfig => html`\n                      <hui-card-preview\n                        .hass=${this.hass}\n                        .config=${cardConfig}\n                      ></hui-card-preview>\n                    `)}\n                </div>\n              ` : \"\"}\n          ${this._params.yaml && this._cardConfig ? html`\n                <div class=\"editor\">\n                  <ha-yaml-editor\n                    .hass=${this.hass}\n                    .defaultValue=${this._cardConfig}\n                  ></ha-yaml-editor>\n                </div>\n              ` : \"\"}\n        </div>\n        <mwc-button\n          slot=\"secondaryAction\"\n          @click=${this.closeDialog}\n          dialogInitialFocus\n        >\n          ${this._params.yaml ? this.hass.localize(\"ui.common.close\") : this.hass.localize(\"ui.common.cancel\")}\n        </mwc-button>\n        ${!this._params.yaml ? html`\n              <mwc-button slot=\"primaryAction\" @click=${this._pickCard}\n                >${this.hass.localize(\"ui.panel.lovelace.editor.suggest_card.create_own\")}</mwc-button\n              >\n              <mwc-button\n                slot=\"primaryAction\"\n                .disabled=${this._saving}\n                @click=${this._save}\n              >\n                ${this._saving ? html`\n                      <ha-circular-progress\n                        indeterminate\n                        aria-label=\"Saving\"\n                        size=\"small\"\n                      ></ha-circular-progress>\n                    ` : this.hass.localize(\"ui.panel.lovelace.editor.suggest_card.add\")}\n              </mwc-button>\n            ` : \"\"}\n      </ha-dialog>\n    `;\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [haStyleDialog, css`\n        @media all and (max-width: 450px), all and (max-height: 500px) {\n          /* overrule the ha-style-dialog max-height on small screens */\n          ha-dialog {\n            max-height: 100%;\n            height: 100%;\n          }\n        }\n        @media all and (min-width: 850px) {\n          ha-dialog {\n            width: 845px;\n          }\n        }\n        ha-dialog {\n          max-width: 845px;\n          --dialog-z-index: 6;\n        }\n        .hidden {\n          display: none;\n        }\n        .element-preview {\n          position: relative;\n        }\n        hui-card-preview {\n          padding-top: 8px;\n          margin: 4px auto;\n          max-width: 390px;\n          display: block;\n          width: 100%;\n        }\n        .editor {\n          padding-top: 16px;\n        }\n      `];\n      }\n    }, {\n      kind: \"method\",\n      key: \"_pickCard\",\n      value: function _pickCard() {\n        var _this$_params, _this$_params2, _this$_params3;\n        if (!((_this$_params = this._params) !== null && _this$_params !== void 0 && _this$_params.lovelaceConfig) || !((_this$_params2 = this._params) !== null && _this$_params2 !== void 0 && _this$_params2.path) || !((_this$_params3 = this._params) !== null && _this$_params3 !== void 0 && _this$_params3.saveConfig)) {\n          return;\n        }\n        showCreateCardDialog(this, {\n          lovelaceConfig: this._params.lovelaceConfig,\n          saveConfig: this._params.saveConfig,\n          path: this._params.path,\n          entities: this._params.entities\n        });\n        this.closeDialog();\n      }\n    }, {\n      kind: \"method\",\n      key: \"_save\",\n      value: async function _save() {\n        var _this$_params4, _this$_params5, _this$_params6;\n        if (!((_this$_params4 = this._params) !== null && _this$_params4 !== void 0 && _this$_params4.lovelaceConfig) || !((_this$_params5 = this._params) !== null && _this$_params5 !== void 0 && _this$_params5.path) || !((_this$_params6 = this._params) !== null && _this$_params6 !== void 0 && _this$_params6.saveConfig) || !this._cardConfig) {\n          return;\n        }\n        this._saving = true;\n        await this._params.saveConfig(addCards(this._params.lovelaceConfig, this._params.path, this._cardConfig));\n        this._saving = false;\n        showSaveSuccessToast(this, this.hass);\n        this.closeDialog();\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["deepFreeze","css","html","LitElement","nothing","customElement","property","query","state","fireEvent","haStyleDialog","showSaveSuccessToast","addCards","showCreateCardDialog","HuiDialogSuggestCard","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","showDialog","params","_params","_cardConfig","cardConfig","Object","isFrozen","_yamlEditor","setValue","closeDialog","undefined","dialog","localName","render","hass","localize","map","yaml","_pickCard","_saving","_save","static","styles","_this$_params","_this$_params2","_this$_params3","lovelaceConfig","path","saveConfig","entities","_this$_params4","_this$_params5","_this$_params6"],"sources":["/Users/sercanardil/Desktop/frontend/src/panels/lovelace/editor/card-editor/hui-dialog-suggest-card.ts"],"sourcesContent":["import deepFreeze from \"deep-freeze\";\nimport { css, CSSResultGroup, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport \"../../../../components/ha-yaml-editor\";\nimport type { HaYamlEditor } from \"../../../../components/ha-yaml-editor\";\nimport { LovelaceCardConfig } from \"../../../../data/lovelace/config/card\";\nimport { haStyleDialog } from \"../../../../resources/styles\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { showSaveSuccessToast } from \"../../../../util/toast-saved-success\";\nimport { addCards } from \"../config-util\";\nimport \"./hui-card-preview\";\nimport { showCreateCardDialog } from \"./show-create-card-dialog\";\nimport { SuggestCardDialogParams } from \"./show-suggest-card-dialog\";\n\n@customElement(\"hui-dialog-suggest-card\")\nexport class HuiDialogSuggestCard extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @state() private _params?: SuggestCardDialogParams;\n\n  @state() private _cardConfig?: LovelaceCardConfig[];\n\n  @state() private _saving = false;\n\n  @query(\"ha-yaml-editor\") private _yamlEditor?: HaYamlEditor;\n\n  public showDialog(params: SuggestCardDialogParams): void {\n    this._params = params;\n    this._cardConfig = params.cardConfig;\n    if (!Object.isFrozen(this._cardConfig)) {\n      this._cardConfig = deepFreeze(this._cardConfig);\n    }\n    if (this._yamlEditor) {\n      this._yamlEditor.setValue(this._cardConfig);\n    }\n  }\n\n  public closeDialog(): void {\n    this._params = undefined;\n    this._cardConfig = undefined;\n    fireEvent(this, \"dialog-closed\", { dialog: this.localName });\n  }\n\n  protected render() {\n    if (!this._params) {\n      return nothing;\n    }\n    return html`\n      <ha-dialog\n        open\n        scrimClickAction\n        @closed=${this.closeDialog}\n        .heading=${this.hass!.localize(\n          \"ui.panel.lovelace.editor.suggest_card.header\"\n        )}\n      >\n        <div>\n          ${this._cardConfig\n            ? html`\n                <div class=\"element-preview\">\n                  ${this._cardConfig.map(\n                    (cardConfig) => html`\n                      <hui-card-preview\n                        .hass=${this.hass}\n                        .config=${cardConfig}\n                      ></hui-card-preview>\n                    `\n                  )}\n                </div>\n              `\n            : \"\"}\n          ${this._params.yaml && this._cardConfig\n            ? html`\n                <div class=\"editor\">\n                  <ha-yaml-editor\n                    .hass=${this.hass}\n                    .defaultValue=${this._cardConfig}\n                  ></ha-yaml-editor>\n                </div>\n              `\n            : \"\"}\n        </div>\n        <mwc-button\n          slot=\"secondaryAction\"\n          @click=${this.closeDialog}\n          dialogInitialFocus\n        >\n          ${this._params.yaml\n            ? this.hass!.localize(\"ui.common.close\")\n            : this.hass!.localize(\"ui.common.cancel\")}\n        </mwc-button>\n        ${!this._params.yaml\n          ? html`\n              <mwc-button slot=\"primaryAction\" @click=${this._pickCard}\n                >${this.hass!.localize(\n                  \"ui.panel.lovelace.editor.suggest_card.create_own\"\n                )}</mwc-button\n              >\n              <mwc-button\n                slot=\"primaryAction\"\n                .disabled=${this._saving}\n                @click=${this._save}\n              >\n                ${this._saving\n                  ? html`\n                      <ha-circular-progress\n                        indeterminate\n                        aria-label=\"Saving\"\n                        size=\"small\"\n                      ></ha-circular-progress>\n                    `\n                  : this.hass!.localize(\n                      \"ui.panel.lovelace.editor.suggest_card.add\"\n                    )}\n              </mwc-button>\n            `\n          : \"\"}\n      </ha-dialog>\n    `;\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyleDialog,\n      css`\n        @media all and (max-width: 450px), all and (max-height: 500px) {\n          /* overrule the ha-style-dialog max-height on small screens */\n          ha-dialog {\n            max-height: 100%;\n            height: 100%;\n          }\n        }\n        @media all and (min-width: 850px) {\n          ha-dialog {\n            width: 845px;\n          }\n        }\n        ha-dialog {\n          max-width: 845px;\n          --dialog-z-index: 6;\n        }\n        .hidden {\n          display: none;\n        }\n        .element-preview {\n          position: relative;\n        }\n        hui-card-preview {\n          padding-top: 8px;\n          margin: 4px auto;\n          max-width: 390px;\n          display: block;\n          width: 100%;\n        }\n        .editor {\n          padding-top: 16px;\n        }\n      `,\n    ];\n  }\n\n  private _pickCard(): void {\n    if (\n      !this._params?.lovelaceConfig ||\n      !this._params?.path ||\n      !this._params?.saveConfig\n    ) {\n      return;\n    }\n\n    showCreateCardDialog(this, {\n      lovelaceConfig: this._params!.lovelaceConfig,\n      saveConfig: this._params!.saveConfig,\n      path: this._params!.path,\n      entities: this._params!.entities,\n    });\n    this.closeDialog();\n  }\n\n  private async _save(): Promise<void> {\n    if (\n      !this._params?.lovelaceConfig ||\n      !this._params?.path ||\n      !this._params?.saveConfig ||\n      !this._cardConfig\n    ) {\n      return;\n    }\n    this._saving = true;\n    await this._params!.saveConfig(\n      addCards(\n        this._params!.lovelaceConfig,\n        this._params!.path as [number],\n        this._cardConfig\n      )\n    );\n    this._saving = false;\n    showSaveSuccessToast(this, this.hass);\n    this.closeDialog();\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-dialog-suggest-card\": HuiDialogSuggestCard;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}