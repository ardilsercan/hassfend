{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.array.concat.js\");\nrequire(\"core-js/modules/es.array.filter.js\");\nrequire(\"core-js/modules/es.object.to-string.js\");\nrequire(\"core-js/modules/esnext.iterator.constructor.js\");\nrequire(\"core-js/modules/esnext.iterator.filter.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSupportedNumberingSystems = void 0;\nvar numbering_systems_generated_1 = require(\"./numbering-systems.generated\");\nfunction isSupportedNumberingSystem(system, locale) {\n  if (locale === void 0) {\n    locale = 'en';\n  }\n  try {\n    var numberFormat = new Intl.NumberFormat(\"\".concat(locale, \"-u-nu-\").concat(system));\n    var options = numberFormat.resolvedOptions().numberingSystem;\n    if (options === system && system === 'latn' || numberFormat.format(123) !== '123') {\n      return true;\n    }\n  } catch (_err) {}\n  return false;\n}\nfunction getSupportedNumberingSystems(locale) {\n  return numbering_systems_generated_1.numberingSystemNames.filter(function (numberingSystemName) {\n    return isSupportedNumberingSystem(numberingSystemName, locale);\n  });\n}\nexports.getSupportedNumberingSystems = getSupportedNumberingSystems;","map":{"version":3,"names":["require","Object","defineProperty","exports","value","getSupportedNumberingSystems","numbering_systems_generated_1","isSupportedNumberingSystem","system","locale","numberFormat","Intl","NumberFormat","concat","options","resolvedOptions","numberingSystem","format","_err","numberingSystemNames","filter","numberingSystemName"],"sources":["/Users/sercanardil/Desktop/frontend/node_modules/@formatjs/intl-enumerator/src/get-supported-numbering-systems.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSupportedNumberingSystems = void 0;\nvar numbering_systems_generated_1 = require(\"./numbering-systems.generated\");\nfunction isSupportedNumberingSystem(system, locale) {\n    if (locale === void 0) { locale = 'en'; }\n    try {\n        var numberFormat = new Intl.NumberFormat(\"\".concat(locale, \"-u-nu-\").concat(system));\n        var options = numberFormat.resolvedOptions().numberingSystem;\n        if ((options === system && system === 'latn') ||\n            numberFormat.format(123) !== '123') {\n            return true;\n        }\n    }\n    catch (_err) { }\n    return false;\n}\nfunction getSupportedNumberingSystems(locale) {\n    return numbering_systems_generated_1.numberingSystemNames.filter(function (numberingSystemName) {\n        return isSupportedNumberingSystem(numberingSystemName, locale);\n    });\n}\nexports.getSupportedNumberingSystems = getSupportedNumberingSystems;\n"],"mappings":"AAAA,YAAY;;AAACA,OAAA;AAAAA,OAAA;AAAAA,OAAA;AAAAA,OAAA;AAAAA,OAAA;AACbC,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,4BAA4B,GAAG,KAAK,CAAC;AAC7C,IAAIC,6BAA6B,GAAGN,OAAO,CAAC,+BAA+B,CAAC;AAC5E,SAASO,0BAA0BA,CAACC,MAAM,EAAEC,MAAM,EAAE;EAChD,IAAIA,MAAM,KAAK,KAAK,CAAC,EAAE;IAAEA,MAAM,GAAG,IAAI;EAAE;EACxC,IAAI;IACA,IAAIC,YAAY,GAAG,IAAIC,IAAI,CAACC,YAAY,CAAC,EAAE,CAACC,MAAM,CAACJ,MAAM,EAAE,QAAQ,CAAC,CAACI,MAAM,CAACL,MAAM,CAAC,CAAC;IACpF,IAAIM,OAAO,GAAGJ,YAAY,CAACK,eAAe,CAAC,CAAC,CAACC,eAAe;IAC5D,IAAKF,OAAO,KAAKN,MAAM,IAAIA,MAAM,KAAK,MAAM,IACxCE,YAAY,CAACO,MAAM,CAAC,GAAG,CAAC,KAAK,KAAK,EAAE;MACpC,OAAO,IAAI;IACf;EACJ,CAAC,CACD,OAAOC,IAAI,EAAE,CAAE;EACf,OAAO,KAAK;AAChB;AACA,SAASb,4BAA4BA,CAACI,MAAM,EAAE;EAC1C,OAAOH,6BAA6B,CAACa,oBAAoB,CAACC,MAAM,CAAC,UAAUC,mBAAmB,EAAE;IAC5F,OAAOd,0BAA0B,CAACc,mBAAmB,EAAEZ,MAAM,CAAC;EAClE,CAAC,CAAC;AACN;AACAN,OAAO,CAACE,4BAA4B,GAAGA,4BAA4B"},"metadata":{},"sourceType":"script","externalDependencies":[]}