{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { array, assert, assign, boolean, number, object, optional, string } from \"superstruct\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport \"../../../../components/ha-form/ha-form\";\nimport \"../../components/hui-entity-editor\";\nimport { processEditorEntities } from \"../process-editor-entities\";\nimport { baseLovelaceCardConfig } from \"../structs/base-card-struct\";\nimport { entitiesConfigStruct } from \"../structs/entities-struct\";\nimport { DEFAULT_HOURS_TO_SHOW } from \"../../cards/hui-history-graph-card\";\nconst cardConfigStruct = assign(baseLovelaceCardConfig, object({\n  entities: array(entitiesConfigStruct),\n  title: optional(string()),\n  hours_to_show: optional(number()),\n  refresh_interval: optional(number()),\n  // deprecated\n  show_names: optional(boolean()),\n  logarithmic_scale: optional(boolean()),\n  min_y_axis: optional(number()),\n  max_y_axis: optional(number()),\n  fit_y_data: optional(boolean())\n}));\nexport let HuiHistoryGraphCardEditor = _decorate([customElement(\"hui-history-graph-card-editor\")], function (_initialize, _LitElement) {\n  class HuiHistoryGraphCardEditor extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HuiHistoryGraphCardEditor,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_config\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_configEntities\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"setConfig\",\n      value: function setConfig(config) {\n        assert(config, cardConfigStruct);\n        this._config = config;\n        this._configEntities = processEditorEntities(config.entities);\n      }\n    }, {\n      kind: \"field\",\n      key: \"_schema\",\n      value() {\n        return memoizeOne(showFitOption => [{\n          name: \"title\",\n          selector: {\n            text: {}\n          }\n        }, {\n          name: \"\",\n          type: \"grid\",\n          schema: [{\n            name: \"hours_to_show\",\n            default: DEFAULT_HOURS_TO_SHOW,\n            selector: {\n              number: {\n                min: 1,\n                mode: \"box\"\n              }\n            }\n          }]\n        }, {\n          name: \"logarithmic_scale\",\n          required: false,\n          selector: {\n            boolean: {}\n          }\n        }, {\n          name: \"\",\n          type: \"grid\",\n          schema: [{\n            name: \"min_y_axis\",\n            required: false,\n            selector: {\n              number: {\n                mode: \"box\",\n                step: \"any\"\n              }\n            }\n          }, {\n            name: \"max_y_axis\",\n            required: false,\n            selector: {\n              number: {\n                mode: \"box\",\n                step: \"any\"\n              }\n            }\n          }]\n        }, ...(showFitOption ? [{\n          name: \"fit_y_data\",\n          required: false,\n          selector: {\n            boolean: {}\n          }\n        }] : [])]);\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this.hass || !this._config) {\n          return nothing;\n        }\n        const schema = this._schema(this._config.min_y_axis !== undefined || this._config.max_y_axis !== undefined);\n        return html`\n      <ha-form\n        .hass=${this.hass}\n        .data=${this._config}\n        .schema=${schema}\n        .computeLabel=${this._computeLabelCallback}\n        @value-changed=${this._valueChanged}\n      ></ha-form>\n      <hui-entity-editor\n        .hass=${this.hass}\n        .entities=${this._configEntities}\n        @entities-changed=${this._entitiesChanged}\n      ></hui-entity-editor>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_valueChanged\",\n      value: function _valueChanged(ev) {\n        fireEvent(this, \"config-changed\", {\n          config: ev.detail.value\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_entitiesChanged\",\n      value: function _entitiesChanged(ev) {\n        let config = this._config;\n        config = {\n          ...config,\n          entities: ev.detail.entities\n        };\n        this._configEntities = processEditorEntities(config.entities);\n        fireEvent(this, \"config-changed\", {\n          config\n        });\n      }\n    }, {\n      kind: \"field\",\n      key: \"_computeLabelCallback\",\n      value() {\n        return schema => {\n          switch (schema.name) {\n            case \"logarithmic_scale\":\n            case \"min_y_axis\":\n            case \"max_y_axis\":\n            case \"fit_y_data\":\n              return this.hass.localize(`ui.panel.lovelace.editor.card.history-graph.${schema.name}`);\n            default:\n              return this.hass.localize(`ui.panel.lovelace.editor.card.generic.${schema.name}`);\n          }\n        };\n      }\n    }, {\n      kind: \"field\",\n      static: true,\n      key: \"styles\",\n      value() {\n        return css`\n    ha-form {\n      margin-bottom: 24px;\n    }\n  `;\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","nothing","customElement","property","state","memoizeOne","array","assert","assign","boolean","number","object","optional","string","fireEvent","processEditorEntities","baseLovelaceCardConfig","entitiesConfigStruct","DEFAULT_HOURS_TO_SHOW","cardConfigStruct","entities","title","hours_to_show","refresh_interval","show_names","logarithmic_scale","min_y_axis","max_y_axis","fit_y_data","HuiHistoryGraphCardEditor","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","setConfig","config","_config","_configEntities","showFitOption","name","selector","text","type","schema","default","min","mode","required","step","render","hass","_schema","undefined","_computeLabelCallback","_valueChanged","_entitiesChanged","ev","detail","localize","static"],"sources":["/workspaces/frontend/src/panels/lovelace/editor/config-elements/hui-history-graph-card-editor.ts"],"sourcesContent":["import { css, CSSResultGroup, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport {\n  array,\n  assert,\n  assign,\n  boolean,\n  number,\n  object,\n  optional,\n  string,\n} from \"superstruct\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport \"../../../../components/ha-form/ha-form\";\nimport type { SchemaUnion } from \"../../../../components/ha-form/types\";\nimport type { HomeAssistant } from \"../../../../types\";\nimport type { HistoryGraphCardConfig } from \"../../cards/types\";\nimport \"../../components/hui-entity-editor\";\nimport type { EntityConfig } from \"../../entity-rows/types\";\nimport type { LovelaceCardEditor } from \"../../types\";\nimport { processEditorEntities } from \"../process-editor-entities\";\nimport { baseLovelaceCardConfig } from \"../structs/base-card-struct\";\nimport { entitiesConfigStruct } from \"../structs/entities-struct\";\nimport { DEFAULT_HOURS_TO_SHOW } from \"../../cards/hui-history-graph-card\";\n\nconst cardConfigStruct = assign(\n  baseLovelaceCardConfig,\n  object({\n    entities: array(entitiesConfigStruct),\n    title: optional(string()),\n    hours_to_show: optional(number()),\n    refresh_interval: optional(number()), // deprecated\n    show_names: optional(boolean()),\n    logarithmic_scale: optional(boolean()),\n    min_y_axis: optional(number()),\n    max_y_axis: optional(number()),\n    fit_y_data: optional(boolean()),\n  })\n);\n\n@customElement(\"hui-history-graph-card-editor\")\nexport class HuiHistoryGraphCardEditor\n  extends LitElement\n  implements LovelaceCardEditor\n{\n  @property({ attribute: false }) public hass?: HomeAssistant;\n\n  @state() private _config?: HistoryGraphCardConfig;\n\n  @state() private _configEntities?: EntityConfig[];\n\n  public setConfig(config: HistoryGraphCardConfig): void {\n    assert(config, cardConfigStruct);\n    this._config = config;\n    this._configEntities = processEditorEntities(config.entities);\n  }\n\n  private _schema = memoizeOne(\n    (showFitOption: boolean) =>\n      [\n        { name: \"title\", selector: { text: {} } },\n        {\n          name: \"\",\n          type: \"grid\",\n          schema: [\n            {\n              name: \"hours_to_show\",\n              default: DEFAULT_HOURS_TO_SHOW,\n              selector: { number: { min: 1, mode: \"box\" } },\n            },\n          ],\n        },\n        {\n          name: \"logarithmic_scale\",\n          required: false,\n          selector: { boolean: {} },\n        },\n        {\n          name: \"\",\n          type: \"grid\",\n          schema: [\n            {\n              name: \"min_y_axis\",\n              required: false,\n              selector: { number: { mode: \"box\", step: \"any\" } },\n            },\n            {\n              name: \"max_y_axis\",\n              required: false,\n              selector: { number: { mode: \"box\", step: \"any\" } },\n            },\n          ],\n        },\n        ...(showFitOption\n          ? [\n              {\n                name: \"fit_y_data\",\n                required: false,\n                selector: { boolean: {} },\n              },\n            ]\n          : []),\n      ] as const\n  );\n\n  protected render() {\n    if (!this.hass || !this._config) {\n      return nothing;\n    }\n\n    const schema = this._schema(\n      this._config!.min_y_axis !== undefined ||\n        this._config!.max_y_axis !== undefined\n    );\n\n    return html`\n      <ha-form\n        .hass=${this.hass}\n        .data=${this._config}\n        .schema=${schema}\n        .computeLabel=${this._computeLabelCallback}\n        @value-changed=${this._valueChanged}\n      ></ha-form>\n      <hui-entity-editor\n        .hass=${this.hass}\n        .entities=${this._configEntities}\n        @entities-changed=${this._entitiesChanged}\n      ></hui-entity-editor>\n    `;\n  }\n\n  private _valueChanged(ev: CustomEvent): void {\n    fireEvent(this, \"config-changed\", { config: ev.detail.value });\n  }\n\n  private _entitiesChanged(ev: CustomEvent): void {\n    let config = this._config!;\n\n    config = { ...config, entities: ev.detail.entities };\n    this._configEntities = processEditorEntities(config.entities);\n\n    fireEvent(this, \"config-changed\", { config });\n  }\n\n  private _computeLabelCallback = (\n    schema: SchemaUnion<ReturnType<typeof this._schema>>\n  ) => {\n    switch (schema.name) {\n      case \"logarithmic_scale\":\n      case \"min_y_axis\":\n      case \"max_y_axis\":\n      case \"fit_y_data\":\n        return this.hass!.localize(\n          `ui.panel.lovelace.editor.card.history-graph.${schema.name}`\n        );\n      default:\n        return this.hass!.localize(\n          `ui.panel.lovelace.editor.card.generic.${schema.name}`\n        );\n    }\n  };\n\n  static styles: CSSResultGroup = css`\n    ha-form {\n      margin-bottom: 24px;\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-history-graph-card-editor\": HuiHistoryGraphCardEditor;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}