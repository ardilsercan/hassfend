{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n/* eslint-disable lit/prefer-static-styles */\nimport { html } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { HaForm } from \"../components/ha-form/ha-form\";\nimport \"./ha-auth-form-string\";\nconst localizeBaseKey = \"ui.panel.page-authorize.form\";\nexport let HaAuthForm = _decorate([customElement(\"ha-auth-form\")], function (_initialize, _HaForm) {\n  class HaAuthForm extends _HaForm {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaAuthForm,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"localize\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"getFormProperties\",\n      value: function getFormProperties() {\n        return {\n          localize: this.localize,\n          localizeBaseKey\n        };\n      }\n    }, {\n      kind: \"method\",\n      key: \"fieldElementName\",\n      value: function fieldElementName(type) {\n        if (type === \"string\") {\n          return `ha-auth-form-${type}`;\n        }\n        return _get(_getPrototypeOf(HaAuthForm.prototype), \"fieldElementName\", this).call(this, type);\n      }\n    }, {\n      kind: \"method\",\n      key: \"createRenderRoot\",\n      value: function createRenderRoot() {\n        // attach it as soon as possible to make sure we fetch all events.\n        this.addValueChangedListener(this);\n        return this;\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        return html`\n      <style>\n        ha-auth-form .root > * {\n          display: block;\n        }\n        ha-auth-form .root > *:not([own-margin]):not(:last-child) {\n          margin-bottom: 24px;\n        }\n        ha-auth-form ha-alert[own-margin] {\n          margin-bottom: 4px;\n        }\n      </style>\n      ${_get(_getPrototypeOf(HaAuthForm.prototype), \"render\", this).call(this)}\n    `;\n      }\n    }]\n  };\n}, HaForm);","map":{"version":3,"names":["html","customElement","property","HaForm","localizeBaseKey","HaAuthForm","_decorate","_initialize","_HaForm","constructor","args","F","d","kind","decorators","attribute","key","value","getFormProperties","localize","fieldElementName","type","_get","_getPrototypeOf","prototype","call","createRenderRoot","addValueChangedListener","render"],"sources":["/workspaces/frontend/src/auth/ha-auth-form.ts"],"sourcesContent":["/* eslint-disable lit/prefer-static-styles */\nimport { html } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { HaForm } from \"../components/ha-form/ha-form\";\nimport \"./ha-auth-form-string\";\nimport { LocalizeFunc } from \"../common/translations/localize\";\n\nconst localizeBaseKey = \"ui.panel.page-authorize.form\";\n\n@customElement(\"ha-auth-form\")\nexport class HaAuthForm extends HaForm {\n  @property({ attribute: false }) public localize?: LocalizeFunc;\n\n  protected getFormProperties(): Record<string, any> {\n    return {\n      localize: this.localize,\n      localizeBaseKey,\n    };\n  }\n\n  protected fieldElementName(type: string): string {\n    if (type === \"string\") {\n      return `ha-auth-form-${type}`;\n    }\n    return super.fieldElementName(type);\n  }\n\n  protected createRenderRoot() {\n    // attach it as soon as possible to make sure we fetch all events.\n    this.addValueChangedListener(this);\n    return this;\n  }\n\n  protected render() {\n    return html`\n      <style>\n        ha-auth-form .root > * {\n          display: block;\n        }\n        ha-auth-form .root > *:not([own-margin]):not(:last-child) {\n          margin-bottom: 24px;\n        }\n        ha-auth-form ha-alert[own-margin] {\n          margin-bottom: 4px;\n        }\n      </style>\n      ${super.render()}\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-auth-form\": HaAuthForm;\n  }\n}\n"],"mappings":";;;AAAA;AACA,SAASA,IAAI,QAAQ,KAAK;AAC1B,SAASC,aAAa,EAAEC,QAAQ,QAAQ,gBAAgB;AACxD,SAASC,MAAM,QAAQ,+BAA+B;AACtD,OAAO,uBAAuB;AAG9B,MAAMC,eAAe,GAAG,8BAA8B;AAEtD,WACaC,UAAU,GAAAC,SAAA,EADtBL,aAAa,CAAC,cAAc,CAAC,aAAAM,WAAA,EAAAC,OAAA;EAA9B,MACaH,UAAU,SAAAG,OAAA,CAAgB;IAAAC,YAAA,GAAAC,IAAA;MAAA,SAAAA,IAAA;MAAAH,WAAA;IAAA;EAuCvC;EAAC;IAAAI,CAAA,EAvCYN,UAAU;IAAAO,CAAA;MAAAC,IAAA;MAAAC,UAAA,GACpBZ,QAAQ,CAAC;QAAEa,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAC,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAE/B,SAAAC,kBAAA,EAAmD;QACjD,OAAO;UACLC,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBf;QACF,CAAC;MACH;IAAC;MAAAS,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAG,iBAA2BC,IAAY,EAAU;QAC/C,IAAIA,IAAI,KAAK,QAAQ,EAAE;UACrB,OAAQ,gBAAeA,IAAK,EAAC;QAC/B;QACA,OAAAC,IAAA,CAAAC,eAAA,CAdSlB,UAAU,CAAAmB,SAAA,6BAAAC,IAAA,OAcWJ,IAAI;MACpC;IAAC;MAAAR,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAS,iBAAA,EAA6B;QAC3B;QACA,IAAI,CAACC,uBAAuB,CAAC,IAAI,CAAC;QAClC,OAAO,IAAI;MACb;IAAC;MAAAd,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAW,OAAA,EAAmB;QACjB,OAAO5B,IAAK;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAMsB,IAAA,CAAAC,eAAA,CApCOlB,UAAU,CAAAmB,SAAA,mBAAAC,IAAA,MAoCA;AACvB,KAAK;MACH;IAAC;EAAA;AAAA,GAtC6BtB,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}