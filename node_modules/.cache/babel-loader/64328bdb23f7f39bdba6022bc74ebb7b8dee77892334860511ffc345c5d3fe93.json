{"ast":null,"code":"import _createForOfIteratorHelper from \"@babel/runtime/helpers/createForOfIteratorHelper\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/helpers/regeneratorRuntime\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5;\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.reverse.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.object.values.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { isComponentLoaded } from \"../../common/config/is_component_loaded\";\nimport { computeStateDomain } from \"../../common/entity/compute_state_domain\";\nimport { throttle } from \"../../common/util/throttle\";\nimport \"../../components/ha-circular-progress\";\nimport { subscribeLogbook } from \"../../data/logbook\";\nimport { loadTraceContexts } from \"../../data/trace\";\nimport { fetchUsers } from \"../../data/user\";\nimport \"./ha-logbook-renderer\";\nvar findStartOfRecentTime = function findStartOfRecentTime(now, recentTime) {\n  return new Date(now.getTime() - recentTime * 1000).getTime() / 1000;\n};\nvar idsChanged = function idsChanged(oldIds, newIds) {\n  if (oldIds === undefined && newIds === undefined) {\n    return false;\n  }\n  return !oldIds || !newIds || oldIds.length !== newIds.length || oldIds.some(function (val) {\n    return !newIds.includes(val);\n  }) || newIds.some(function (val) {\n    return !oldIds.includes(val);\n  });\n};\nexport var HaLogbook = _decorate([customElement(\"ha-logbook\")], function (_initialize, _LitElement) {\n  var HaLogbook = /*#__PURE__*/function (_LitElement2) {\n    _inherits(HaLogbook, _LitElement2);\n    function HaLogbook() {\n      var _this;\n      _classCallCheck(this, HaLogbook);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, HaLogbook, [].concat(args));\n      _initialize(_assertThisInitialized(_this));\n      return _this;\n    }\n    return _createClass(HaLogbook);\n  }(_LitElement);\n  return {\n    F: HaLogbook,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"time\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"entityIds\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"deviceIds\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"narrow\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        reflect: true\n      })],\n      key: \"virtualize\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        attribute: \"no-icon\"\n      })],\n      key: \"noIcon\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        attribute: \"no-name\"\n      })],\n      key: \"noName\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        attribute: \"show-indicator\"\n      })],\n      key: \"showIndicator\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        attribute: \"relative-time\"\n      })],\n      key: \"relativeTime\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"showMoreLink\",\n      value: function value() {\n        return true;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_logbookEntries\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_traceContexts\",\n      value: function value() {\n        return {};\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_userIdToName\",\n      value: function value() {\n        return {};\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_error\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_subscribed\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_liveUpdatesEnabled\",\n      value: function value() {\n        return true;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_pendingStreamMessages\",\n      value: function value() {\n        return [];\n      }\n    }, {\n      kind: \"field\",\n      key: \"_throttleGetLogbookEntries\",\n      value: function value() {\n        var _this2 = this;\n        return throttle(function () {\n          return _this2._getLogBookData();\n        }, 1000);\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!isComponentLoaded(this.hass, \"logbook\")) {\n          return nothing;\n        }\n        if (this._error) {\n          return html(_templateObject || (_templateObject = _taggedTemplateLiteral([\"<div class=\\\"no-entries\\\">\\n        \", \"\\n      </div>\"])), \"\".concat(this.hass.localize(\"ui.components.logbook.retrieval_error\"), \": \").concat(this._error));\n        }\n        if (this._logbookEntries === undefined) {\n          return html(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n        <div class=\\\"progress-wrapper\\\">\\n          <ha-circular-progress indeterminate></ha-circular-progress>\\n        </div>\\n      \"])));\n        }\n        if (this._logbookEntries.length === 0) {\n          return html(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"<div class=\\\"no-entries\\\">\\n        \", \"\\n      </div>\"])), this.hass.localize(\"ui.components.logbook.entries_not_found\"));\n        }\n        return html(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n      <ha-logbook-renderer\\n        .hass=\", \"\\n        .narrow=\", \"\\n        .virtualize=\", \"\\n        .noIcon=\", \"\\n        .noName=\", \"\\n        .showIndicator=\", \"\\n        .relativeTime=\", \"\\n        .entries=\", \"\\n        .traceContexts=\", \"\\n        .userIdToName=\", \"\\n        @hass-logbook-live=\", \"\\n      ></ha-logbook-renderer>\\n    \"])), this.hass, this.narrow, this.virtualize, this.noIcon, this.noName, this.showIndicator, this.relativeTime, this._logbookEntries, this._traceContexts, this._userIdToName, this._handleLogbookLive);\n      }\n    }, {\n      kind: \"method\",\n      key: \"refresh\",\n      value: function () {\n        var _refresh = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n          var force,\n            _args = arguments;\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                force = _args.length > 0 && _args[0] !== undefined ? _args[0] : false;\n                if (!(!force && (this._subscribed || this._logbookEntries === undefined))) {\n                  _context.next = 3;\n                  break;\n                }\n                return _context.abrupt(\"return\");\n              case 3:\n                this._throttleGetLogbookEntries.cancel();\n                this._updateTraceContexts.cancel();\n                this._updateUsers.cancel();\n                _context.next = 8;\n                return this._unsubscribeSetLoading();\n              case 8:\n                if (force) {\n                  this._getLogBookData();\n                } else {\n                  this._throttleGetLogbookEntries();\n                }\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee, this);\n        }));\n        function refresh() {\n          return _refresh.apply(this, arguments);\n        }\n        return refresh;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"shouldUpdate\",\n      value: function shouldUpdate(changedProps) {\n        if (changedProps.size !== 1 || !changedProps.has(\"hass\")) {\n          return true;\n        }\n        // We only respond to hass changes if the translations changed\n        var oldHass = changedProps.get(\"hass\");\n        return !oldHass || oldHass.localize !== this.hass.localize;\n      }\n    }, {\n      kind: \"method\",\n      key: \"willUpdate\",\n      value: function willUpdate(changedProps) {\n        var changed = changedProps.has(\"time\");\n        for (var _i = 0, _arr = [\"entityIds\", \"deviceIds\"]; _i < _arr.length; _i++) {\n          var key = _arr[_i];\n          if (!changedProps.has(key)) {\n            continue;\n          }\n          var oldValue = changedProps.get(key);\n          var curValue = this[key];\n\n          // If they make the filter more specific we want\n          // to change the subscription since it will reduce\n          // the overhead on the backend as the event stream\n          // can be a firehose for all state events.\n          if (idsChanged(oldValue, curValue)) {\n            changed = true;\n            break;\n          }\n        }\n        if (changed) {\n          this.refresh(true);\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleLogbookLive\",\n      value: function _handleLogbookLive(ev) {\n        var _this3 = this;\n        if (ev.detail.enable && !this._liveUpdatesEnabled) {\n          // Process everything we queued up while we were scrolled down\n          this._pendingStreamMessages.forEach(function (msg) {\n            return _this3._processStreamMessage(msg);\n          });\n          this._pendingStreamMessages = [];\n        }\n        this._liveUpdatesEnabled = ev.detail.enable;\n      }\n    }, {\n      kind: \"get\",\n      key: \"_filterAlwaysEmptyResults\",\n      value: function _filterAlwaysEmptyResults() {\n        var entityIds = this.entityIds;\n        var deviceIds = this.deviceIds;\n\n        // If all specified filters are empty lists, we can return an empty list.\n        return Boolean(entityIds || deviceIds) && (!entityIds || entityIds.length === 0) && (!deviceIds || deviceIds.length === 0);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_unsubscribe\",\n      value: function () {\n        var _unsubscribe2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n          var unsub;\n          return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n            while (1) switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!this._subscribed) {\n                  _context2.next = 13;\n                  break;\n                }\n                _context2.next = 3;\n                return this._subscribed;\n              case 3:\n                unsub = _context2.sent;\n                if (!unsub) {\n                  _context2.next = 12;\n                  break;\n                }\n                _context2.prev = 5;\n                _context2.next = 8;\n                return unsub();\n              case 8:\n                _context2.next = 12;\n                break;\n              case 10:\n                _context2.prev = 10;\n                _context2.t0 = _context2[\"catch\"](5);\n              case 12:\n                this._subscribed = undefined;\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }, _callee2, this, [[5, 10]]);\n        }));\n        function _unsubscribe() {\n          return _unsubscribe2.apply(this, arguments);\n        }\n        return _unsubscribe;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"connectedCallback\",\n      value: function connectedCallback() {\n        _get(_getPrototypeOf(HaLogbook.prototype), \"connectedCallback\", this).call(this);\n        if (this.hasUpdated) {\n          this._subscribeLogbookPeriod(this._calculateLogbookPeriod());\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"disconnectedCallback\",\n      value: function disconnectedCallback() {\n        _get(_getPrototypeOf(HaLogbook.prototype), \"disconnectedCallback\", this).call(this);\n        this._unsubscribeSetLoading();\n      }\n\n      /** Unsubscribe because we are unloading\n       * or about to resubscribe.\n       * Setting this._logbookEntries to undefined\n       * will put the page in a loading state.\n       */\n    }, {\n      kind: \"method\",\n      key: \"_unsubscribeSetLoading\",\n      value: (function () {\n        var _unsubscribeSetLoading2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n          return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n            while (1) switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this._unsubscribe();\n              case 2:\n                this._logbookEntries = undefined;\n                this._pendingStreamMessages = [];\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }, _callee3, this);\n        }));\n        function _unsubscribeSetLoading() {\n          return _unsubscribeSetLoading2.apply(this, arguments);\n        }\n        return _unsubscribeSetLoading;\n      }()\n      /** Unsubscribe because there are no results.\n       * Setting this._logbookEntries to an empty\n       * list will show a no results message.\n       */\n      )\n    }, {\n      kind: \"method\",\n      key: \"_unsubscribeNoResults\",\n      value: (function () {\n        var _unsubscribeNoResults2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n          return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n            while (1) switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this._unsubscribe();\n              case 2:\n                this._logbookEntries = [];\n                this._pendingStreamMessages = [];\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }, _callee4, this);\n        }));\n        function _unsubscribeNoResults() {\n          return _unsubscribeNoResults2.apply(this, arguments);\n        }\n        return _unsubscribeNoResults;\n      }())\n    }, {\n      kind: \"method\",\n      key: \"_calculateLogbookPeriod\",\n      value: function _calculateLogbookPeriod() {\n        var now = new Date();\n        if (\"range\" in this.time) {\n          return {\n            now: now,\n            startTime: this.time.range[0],\n            endTime: this.time.range[1],\n            purgeBeforePythonTime: undefined\n          };\n        }\n        if (\"recent\" in this.time) {\n          var purgeBeforePythonTime = findStartOfRecentTime(now, this.time.recent);\n          return {\n            now: now,\n            startTime: new Date(purgeBeforePythonTime * 1000),\n            // end streaming one year from now\n            endTime: new Date(now.getTime() + 86400 * 365 * 1000),\n            purgeBeforePythonTime: findStartOfRecentTime(now, this.time.recent)\n          };\n        }\n        throw new Error(\"Unexpected time specified\");\n      }\n    }, {\n      kind: \"method\",\n      key: \"_subscribeLogbookPeriod\",\n      value: function _subscribeLogbookPeriod(logbookPeriod) {\n        var _this4 = this;\n        if (this._subscribed) {\n          return true;\n        }\n        this._subscribed = subscribeLogbook(this.hass, function (streamMessage) {\n          // \"recent\" means start time is a sliding window\n          // so we need to calculate an expireTime to\n          // purge old events\n          if (!_this4._subscribed) {\n            // Message came in before we had a chance to unload\n            return;\n          }\n          _this4._processOrQueueStreamMessage(streamMessage);\n        }, logbookPeriod.startTime.toISOString(), logbookPeriod.endTime.toISOString(), this.entityIds, this.deviceIds).catch(function (err) {\n          _this4._subscribed = undefined;\n          _this4._error = err;\n        });\n        return true;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_getLogBookData\",\n      value: (function () {\n        var _getLogBookData2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n          var _this$hass$user;\n          var logbookPeriod;\n          return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n            while (1) switch (_context5.prev = _context5.next) {\n              case 0:\n                this._error = undefined;\n                if (!this._filterAlwaysEmptyResults) {\n                  _context5.next = 4;\n                  break;\n                }\n                this._unsubscribeNoResults();\n                return _context5.abrupt(\"return\");\n              case 4:\n                logbookPeriod = this._calculateLogbookPeriod();\n                if (!(logbookPeriod.startTime > logbookPeriod.now)) {\n                  _context5.next = 8;\n                  break;\n                }\n                // Time Travel not yet invented\n                this._unsubscribeNoResults();\n                return _context5.abrupt(\"return\");\n              case 8:\n                this._updateUsers();\n                if ((_this$hass$user = this.hass.user) !== null && _this$hass$user !== void 0 && _this$hass$user.is_admin) {\n                  this._updateTraceContexts();\n                }\n                this._subscribeLogbookPeriod(logbookPeriod);\n              case 11:\n              case \"end\":\n                return _context5.stop();\n            }\n          }, _callee5, this);\n        }));\n        function _getLogBookData() {\n          return _getLogBookData2.apply(this, arguments);\n        }\n        return _getLogBookData;\n      }())\n    }, {\n      kind: \"field\",\n      key: \"_nonExpiredRecords\",\n      value: function value() {\n        var _this5 = this;\n        return function (purgeBeforePythonTime) {\n          return !_this5._logbookEntries ? [] : purgeBeforePythonTime ? _this5._logbookEntries.filter(function (entry) {\n            return entry.when > purgeBeforePythonTime;\n          }) : _this5._logbookEntries;\n        };\n      }\n    }, {\n      kind: \"field\",\n      key: \"_processOrQueueStreamMessage\",\n      value: function value() {\n        var _this6 = this;\n        return function (streamMessage) {\n          if (_this6._liveUpdatesEnabled) {\n            _this6._processStreamMessage(streamMessage);\n            return;\n          }\n          _this6._pendingStreamMessages.push(streamMessage);\n        };\n      }\n    }, {\n      kind: \"field\",\n      key: \"_processStreamMessage\",\n      value: function value() {\n        var _this7 = this;\n        return function (streamMessage) {\n          var purgeBeforePythonTime = \"recent\" in _this7.time ? findStartOfRecentTime(new Date(), _this7.time.recent) : undefined;\n          // Put newest ones on top. Reverse works in-place so\n          // make a copy first.\n          var newEntries = _toConsumableArray(streamMessage.events).reverse();\n          if (!_this7._logbookEntries || !_this7._logbookEntries.length) {\n            _this7._logbookEntries = newEntries;\n            return;\n          }\n          if (!newEntries.length) {\n            // Empty messages are still sent to\n            // indicate no more historical events\n            return;\n          }\n          var nonExpiredRecords = _this7._nonExpiredRecords(purgeBeforePythonTime);\n\n          // Entries are sorted in descending order with newest first.\n          if (!nonExpiredRecords.length) {\n            // We have no records left, so we can just replace the list\n            _this7._logbookEntries = newEntries;\n          } else if (newEntries[newEntries.length - 1].when >\n          // oldest new entry\n          nonExpiredRecords[0].when // newest old entry\n          ) {\n            // The new records are newer than the old records\n            // append the old records to the end of the new records\n            _this7._logbookEntries = newEntries.concat(nonExpiredRecords);\n          } else if (nonExpiredRecords[nonExpiredRecords.length - 1].when >\n          // oldest old entry\n          newEntries[0].when // newest new entry\n          ) {\n            // The new records are older than the old records\n            // append the new records to the end of the old records\n            _this7._logbookEntries = nonExpiredRecords.concat(newEntries);\n          } else {\n            // The new records are in the middle of the old records\n            // so we need to re-sort them\n            _this7._logbookEntries = nonExpiredRecords.concat(newEntries).sort(function (a, b) {\n              return b.when - a.when;\n            });\n          }\n        };\n      }\n    }, {\n      kind: \"field\",\n      key: \"_updateTraceContexts\",\n      value: function value() {\n        var _this8 = this;\n        return throttle( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n          return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n            while (1) switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return loadTraceContexts(_this8.hass);\n              case 2:\n                _this8._traceContexts = _context6.sent;\n              case 3:\n              case \"end\":\n                return _context6.stop();\n            }\n          }, _callee6);\n        })), 60000);\n      }\n    }, {\n      kind: \"field\",\n      key: \"_updateUsers\",\n      value: function value() {\n        var _this9 = this;\n        return throttle( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n          var _this9$hass$user;\n          var userIdToName, userProm, _i2, _Object$values, entity, users, _iterator, _step, user;\n          return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n            while (1) switch (_context7.prev = _context7.next) {\n              case 0:\n                userIdToName = {}; // Start loading users\n                userProm = ((_this9$hass$user = _this9.hass.user) === null || _this9$hass$user === void 0 ? void 0 : _this9$hass$user.is_admin) && fetchUsers(_this9.hass); // Process persons\n                for (_i2 = 0, _Object$values = Object.values(_this9.hass.states); _i2 < _Object$values.length; _i2++) {\n                  entity = _Object$values[_i2];\n                  if (entity.attributes.user_id && computeStateDomain(entity) === \"person\") {\n                    userIdToName[entity.attributes.user_id] = entity.attributes.friendly_name;\n                  }\n                }\n\n                // Process users\n                if (!userProm) {\n                  _context7.next = 9;\n                  break;\n                }\n                _context7.next = 6;\n                return userProm;\n              case 6:\n                users = _context7.sent;\n                _iterator = _createForOfIteratorHelper(users);\n                try {\n                  for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                    user = _step.value;\n                    if (!(user.id in userIdToName)) {\n                      userIdToName[user.id] = user.name;\n                    }\n                  }\n                } catch (err) {\n                  _iterator.e(err);\n                } finally {\n                  _iterator.f();\n                }\n              case 9:\n                _this9._userIdToName = userIdToName;\n              case 10:\n              case \"end\":\n                return _context7.stop();\n            }\n          }, _callee7);\n        })), 60000);\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [css(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"\\n        :host {\\n          display: block;\\n        }\\n\\n        :host([virtualize]) {\\n          height: 100%;\\n        }\\n\\n        .no-entries {\\n          text-align: center;\\n          padding: 16px;\\n          color: var(--secondary-text-color);\\n        }\\n\\n        .progress-wrapper {\\n          display: flex;\\n          justify-content: center;\\n          height: 100%;\\n          align-items: center;\\n        }\\n      \"])))];\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","nothing","customElement","property","state","isComponentLoaded","computeStateDomain","throttle","subscribeLogbook","loadTraceContexts","fetchUsers","findStartOfRecentTime","now","recentTime","Date","getTime","idsChanged","oldIds","newIds","undefined","length","some","val","includes","HaLogbook","_decorate","_initialize","_LitElement","_LitElement2","_inherits","_this","_classCallCheck","_len","arguments","args","Array","_key","_callSuper","concat","_assertThisInitialized","_createClass","F","d","kind","decorators","attribute","key","value","type","Boolean","reflect","_this2","_getLogBookData","render","hass","_error","_templateObject","_taggedTemplateLiteral","localize","_logbookEntries","_templateObject2","_templateObject3","_templateObject4","narrow","virtualize","noIcon","noName","showIndicator","relativeTime","_traceContexts","_userIdToName","_handleLogbookLive","_refresh","_asyncToGenerator","_regeneratorRuntime","mark","_callee","force","_args","wrap","_callee$","_context","prev","next","_subscribed","abrupt","_throttleGetLogbookEntries","cancel","_updateTraceContexts","_updateUsers","_unsubscribeSetLoading","stop","refresh","apply","shouldUpdate","changedProps","size","has","oldHass","get","willUpdate","changed","_i","_arr","oldValue","curValue","ev","_this3","detail","enable","_liveUpdatesEnabled","_pendingStreamMessages","forEach","msg","_processStreamMessage","_filterAlwaysEmptyResults","entityIds","deviceIds","_unsubscribe2","_callee2","unsub","_callee2$","_context2","sent","t0","_unsubscribe","connectedCallback","_get","_getPrototypeOf","prototype","call","hasUpdated","_subscribeLogbookPeriod","_calculateLogbookPeriod","disconnectedCallback","_unsubscribeSetLoading2","_callee3","_callee3$","_context3","_unsubscribeNoResults2","_callee4","_callee4$","_context4","_unsubscribeNoResults","time","startTime","range","endTime","purgeBeforePythonTime","recent","Error","logbookPeriod","_this4","streamMessage","_processOrQueueStreamMessage","toISOString","catch","err","_getLogBookData2","_callee5","_this$hass$user","_callee5$","_context5","user","is_admin","_this5","filter","entry","when","_this6","push","_this7","newEntries","_toConsumableArray","events","reverse","nonExpiredRecords","_nonExpiredRecords","sort","a","b","_this8","_callee6","_callee6$","_context6","_this9","_callee7","_this9$hass$user","userIdToName","userProm","_i2","_Object$values","entity","users","_iterator","_step","_callee7$","_context7","Object","values","states","attributes","user_id","friendly_name","_createForOfIteratorHelper","s","n","done","id","name","e","f","static","styles","_templateObject5"],"sources":["/Users/sercanardil/Desktop/frontend/src/panels/logbook/ha-logbook.ts"],"sourcesContent":["import { css, html, LitElement, PropertyValues, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { isComponentLoaded } from \"../../common/config/is_component_loaded\";\nimport { computeStateDomain } from \"../../common/entity/compute_state_domain\";\nimport { throttle } from \"../../common/util/throttle\";\nimport \"../../components/ha-circular-progress\";\nimport {\n  LogbookEntry,\n  LogbookStreamMessage,\n  subscribeLogbook,\n} from \"../../data/logbook\";\nimport { loadTraceContexts, TraceContexts } from \"../../data/trace\";\nimport { fetchUsers } from \"../../data/user\";\nimport { HomeAssistant } from \"../../types\";\nimport \"./ha-logbook-renderer\";\n\ninterface LogbookTimePeriod {\n  now: Date;\n  startTime: Date;\n  endTime: Date;\n  purgeBeforePythonTime: number | undefined;\n}\n\nconst findStartOfRecentTime = (now: Date, recentTime: number) =>\n  new Date(now.getTime() - recentTime * 1000).getTime() / 1000;\n\nconst idsChanged = (oldIds?: string[], newIds?: string[]) => {\n  if (oldIds === undefined && newIds === undefined) {\n    return false;\n  }\n  return (\n    !oldIds ||\n    !newIds ||\n    oldIds.length !== newIds.length ||\n    oldIds.some((val) => !newIds.includes(val)) ||\n    newIds.some((val) => !oldIds.includes(val))\n  );\n};\n\n@customElement(\"ha-logbook\")\nexport class HaLogbook extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public time!:\n    | { range: [Date, Date] }\n    | {\n        // Seconds\n        recent: number;\n      };\n\n  @property({ attribute: false }) public entityIds?: string[];\n\n  @property({ attribute: false }) public deviceIds?: string[];\n\n  @property({ type: Boolean }) public narrow = false;\n\n  @property({ type: Boolean, reflect: true }) public virtualize = false;\n\n  @property({ type: Boolean, attribute: \"no-icon\" }) public noIcon = false;\n\n  @property({ type: Boolean, attribute: \"no-name\" }) public noName = false;\n\n  @property({ type: Boolean, attribute: \"show-indicator\" })\n  public showIndicator = false;\n\n  @property({ type: Boolean, attribute: \"relative-time\" })\n  public relativeTime = false;\n\n  @property({ type: Boolean }) public showMoreLink = true;\n\n  @state() private _logbookEntries?: LogbookEntry[];\n\n  @state() private _traceContexts: TraceContexts = {};\n\n  @state() private _userIdToName = {};\n\n  @state() private _error?: string;\n\n  private _subscribed?: Promise<(() => Promise<void>) | void>;\n\n  private _liveUpdatesEnabled = true;\n\n  private _pendingStreamMessages: LogbookStreamMessage[] = [];\n\n  private _throttleGetLogbookEntries = throttle(\n    () => this._getLogBookData(),\n    1000\n  );\n\n  protected render() {\n    if (!isComponentLoaded(this.hass, \"logbook\")) {\n      return nothing;\n    }\n\n    if (this._error) {\n      return html`<div class=\"no-entries\">\n        ${`${this.hass.localize(\"ui.components.logbook.retrieval_error\")}: ${\n          this._error\n        }`}\n      </div>`;\n    }\n\n    if (this._logbookEntries === undefined) {\n      return html`\n        <div class=\"progress-wrapper\">\n          <ha-circular-progress indeterminate></ha-circular-progress>\n        </div>\n      `;\n    }\n\n    if (this._logbookEntries.length === 0) {\n      return html`<div class=\"no-entries\">\n        ${this.hass.localize(\"ui.components.logbook.entries_not_found\")}\n      </div>`;\n    }\n\n    return html`\n      <ha-logbook-renderer\n        .hass=${this.hass}\n        .narrow=${this.narrow}\n        .virtualize=${this.virtualize}\n        .noIcon=${this.noIcon}\n        .noName=${this.noName}\n        .showIndicator=${this.showIndicator}\n        .relativeTime=${this.relativeTime}\n        .entries=${this._logbookEntries}\n        .traceContexts=${this._traceContexts}\n        .userIdToName=${this._userIdToName}\n        @hass-logbook-live=${this._handleLogbookLive}\n      ></ha-logbook-renderer>\n    `;\n  }\n\n  public async refresh(force = false) {\n    if (!force && (this._subscribed || this._logbookEntries === undefined)) {\n      return;\n    }\n\n    this._throttleGetLogbookEntries.cancel();\n    this._updateTraceContexts.cancel();\n    this._updateUsers.cancel();\n    await this._unsubscribeSetLoading();\n\n    if (force) {\n      this._getLogBookData();\n    } else {\n      this._throttleGetLogbookEntries();\n    }\n  }\n\n  protected shouldUpdate(changedProps: PropertyValues): boolean {\n    if (changedProps.size !== 1 || !changedProps.has(\"hass\")) {\n      return true;\n    }\n    // We only respond to hass changes if the translations changed\n    const oldHass = changedProps.get(\"hass\") as HomeAssistant | undefined;\n    return !oldHass || oldHass.localize !== this.hass.localize;\n  }\n\n  protected willUpdate(changedProps: PropertyValues): void {\n    let changed = changedProps.has(\"time\");\n\n    for (const key of [\"entityIds\", \"deviceIds\"]) {\n      if (!changedProps.has(key)) {\n        continue;\n      }\n\n      const oldValue = changedProps.get(key) as string[] | undefined;\n      const curValue = this[key] as string[] | undefined;\n\n      // If they make the filter more specific we want\n      // to change the subscription since it will reduce\n      // the overhead on the backend as the event stream\n      // can be a firehose for all state events.\n      if (idsChanged(oldValue, curValue)) {\n        changed = true;\n        break;\n      }\n    }\n\n    if (changed) {\n      this.refresh(true);\n    }\n  }\n\n  private _handleLogbookLive(ev: CustomEvent) {\n    if (ev.detail.enable && !this._liveUpdatesEnabled) {\n      // Process everything we queued up while we were scrolled down\n      this._pendingStreamMessages.forEach((msg) =>\n        this._processStreamMessage(msg)\n      );\n      this._pendingStreamMessages = [];\n    }\n    this._liveUpdatesEnabled = ev.detail.enable;\n  }\n\n  private get _filterAlwaysEmptyResults(): boolean {\n    const entityIds = this.entityIds;\n    const deviceIds = this.deviceIds;\n\n    // If all specified filters are empty lists, we can return an empty list.\n    return (\n      Boolean(entityIds || deviceIds) &&\n      (!entityIds || entityIds.length === 0) &&\n      (!deviceIds || deviceIds.length === 0)\n    );\n  }\n\n  private async _unsubscribe(): Promise<void> {\n    if (this._subscribed) {\n      const unsub = await this._subscribed;\n      if (unsub) {\n        try {\n          await unsub();\n        } catch (e) {\n          // The backend will cancel the subscription if\n          // we subscribe to entities that will all be\n          // filtered away\n        }\n      }\n      this._subscribed = undefined;\n    }\n  }\n\n  public connectedCallback() {\n    super.connectedCallback();\n    if (this.hasUpdated) {\n      this._subscribeLogbookPeriod(this._calculateLogbookPeriod());\n    }\n  }\n\n  public disconnectedCallback() {\n    super.disconnectedCallback();\n    this._unsubscribeSetLoading();\n  }\n\n  /** Unsubscribe because we are unloading\n   * or about to resubscribe.\n   * Setting this._logbookEntries to undefined\n   * will put the page in a loading state.\n   */\n  private async _unsubscribeSetLoading() {\n    await this._unsubscribe();\n    this._logbookEntries = undefined;\n    this._pendingStreamMessages = [];\n  }\n\n  /** Unsubscribe because there are no results.\n   * Setting this._logbookEntries to an empty\n   * list will show a no results message.\n   */\n  private async _unsubscribeNoResults() {\n    await this._unsubscribe();\n    this._logbookEntries = [];\n    this._pendingStreamMessages = [];\n  }\n\n  private _calculateLogbookPeriod() {\n    const now = new Date();\n    if (\"range\" in this.time) {\n      return <LogbookTimePeriod>{\n        now: now,\n        startTime: this.time.range[0],\n        endTime: this.time.range[1],\n        purgeBeforePythonTime: undefined,\n      };\n    }\n    if (\"recent\" in this.time) {\n      const purgeBeforePythonTime = findStartOfRecentTime(\n        now,\n        this.time.recent\n      );\n      return <LogbookTimePeriod>{\n        now: now,\n        startTime: new Date(purgeBeforePythonTime * 1000),\n        // end streaming one year from now\n        endTime: new Date(now.getTime() + 86400 * 365 * 1000),\n        purgeBeforePythonTime: findStartOfRecentTime(now, this.time.recent),\n      };\n    }\n    throw new Error(\"Unexpected time specified\");\n  }\n\n  private _subscribeLogbookPeriod(logbookPeriod: LogbookTimePeriod) {\n    if (this._subscribed) {\n      return true;\n    }\n    this._subscribed = subscribeLogbook(\n      this.hass,\n      (streamMessage) => {\n        // \"recent\" means start time is a sliding window\n        // so we need to calculate an expireTime to\n        // purge old events\n        if (!this._subscribed) {\n          // Message came in before we had a chance to unload\n          return;\n        }\n        this._processOrQueueStreamMessage(streamMessage);\n      },\n      logbookPeriod.startTime.toISOString(),\n      logbookPeriod.endTime.toISOString(),\n      this.entityIds,\n      this.deviceIds\n    ).catch((err) => {\n      this._subscribed = undefined;\n      this._error = err;\n    });\n    return true;\n  }\n\n  private async _getLogBookData() {\n    this._error = undefined;\n\n    if (this._filterAlwaysEmptyResults) {\n      this._unsubscribeNoResults();\n      return;\n    }\n\n    const logbookPeriod = this._calculateLogbookPeriod();\n\n    if (logbookPeriod.startTime > logbookPeriod.now) {\n      // Time Travel not yet invented\n      this._unsubscribeNoResults();\n      return;\n    }\n\n    this._updateUsers();\n    if (this.hass.user?.is_admin) {\n      this._updateTraceContexts();\n    }\n\n    this._subscribeLogbookPeriod(logbookPeriod);\n  }\n\n  private _nonExpiredRecords = (purgeBeforePythonTime: number | undefined) =>\n    !this._logbookEntries\n      ? []\n      : purgeBeforePythonTime\n        ? this._logbookEntries.filter(\n            (entry) => entry.when > purgeBeforePythonTime!\n          )\n        : this._logbookEntries;\n\n  private _processOrQueueStreamMessage = (\n    streamMessage: LogbookStreamMessage\n  ) => {\n    if (this._liveUpdatesEnabled) {\n      this._processStreamMessage(streamMessage);\n      return;\n    }\n    this._pendingStreamMessages.push(streamMessage);\n  };\n\n  private _processStreamMessage = (streamMessage: LogbookStreamMessage) => {\n    const purgeBeforePythonTime =\n      \"recent\" in this.time\n        ? findStartOfRecentTime(new Date(), this.time.recent)\n        : undefined;\n    // Put newest ones on top. Reverse works in-place so\n    // make a copy first.\n    const newEntries = [...streamMessage.events].reverse();\n    if (!this._logbookEntries || !this._logbookEntries.length) {\n      this._logbookEntries = newEntries;\n      return;\n    }\n    if (!newEntries.length) {\n      // Empty messages are still sent to\n      // indicate no more historical events\n      return;\n    }\n    const nonExpiredRecords = this._nonExpiredRecords(purgeBeforePythonTime);\n\n    // Entries are sorted in descending order with newest first.\n    if (!nonExpiredRecords.length) {\n      // We have no records left, so we can just replace the list\n      this._logbookEntries = newEntries;\n    } else if (\n      newEntries[newEntries.length - 1].when > // oldest new entry\n      nonExpiredRecords[0].when // newest old entry\n    ) {\n      // The new records are newer than the old records\n      // append the old records to the end of the new records\n      this._logbookEntries = newEntries.concat(nonExpiredRecords);\n    } else if (\n      nonExpiredRecords[nonExpiredRecords.length - 1].when > // oldest old entry\n      newEntries[0].when // newest new entry\n    ) {\n      // The new records are older than the old records\n      // append the new records to the end of the old records\n      this._logbookEntries = nonExpiredRecords.concat(newEntries);\n    } else {\n      // The new records are in the middle of the old records\n      // so we need to re-sort them\n      this._logbookEntries = nonExpiredRecords\n        .concat(newEntries)\n        .sort((a, b) => b.when - a.when);\n    }\n  };\n\n  private _updateTraceContexts = throttle(async () => {\n    this._traceContexts = await loadTraceContexts(this.hass);\n  }, 60000);\n\n  private _updateUsers = throttle(async () => {\n    const userIdToName = {};\n\n    // Start loading users\n    const userProm = this.hass.user?.is_admin && fetchUsers(this.hass);\n\n    // Process persons\n    for (const entity of Object.values(this.hass.states)) {\n      if (\n        entity.attributes.user_id &&\n        computeStateDomain(entity) === \"person\"\n      ) {\n        userIdToName[entity.attributes.user_id] =\n          entity.attributes.friendly_name;\n      }\n    }\n\n    // Process users\n    if (userProm) {\n      const users = await userProm;\n      for (const user of users) {\n        if (!(user.id in userIdToName)) {\n          userIdToName[user.id] = user.name;\n        }\n      }\n    }\n\n    this._userIdToName = userIdToName;\n  }, 60000);\n\n  static get styles() {\n    return [\n      css`\n        :host {\n          display: block;\n        }\n\n        :host([virtualize]) {\n          height: 100%;\n        }\n\n        .no-entries {\n          text-align: center;\n          padding: 16px;\n          color: var(--secondary-text-color);\n        }\n\n        .progress-wrapper {\n          display: flex;\n          justify-content: center;\n          height: 100%;\n          align-items: center;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-logbook\": HaLogbook;\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,GAAG,EAAEC,IAAI,EAAEC,UAAU,EAAkBC,OAAO,QAAQ,KAAK;AACpE,SAASC,aAAa,EAAEC,QAAQ,EAAEC,KAAK,QAAQ,gBAAgB;AAC/D,SAASC,iBAAiB,QAAQ,yCAAyC;AAC3E,SAASC,kBAAkB,QAAQ,0CAA0C;AAC7E,SAASC,QAAQ,QAAQ,4BAA4B;AACrD,OAAO,uCAAuC;AAC9C,SAGEC,gBAAgB,QACX,oBAAoB;AAC3B,SAASC,iBAAiB,QAAuB,kBAAkB;AACnE,SAASC,UAAU,QAAQ,iBAAiB;AAE5C,OAAO,uBAAuB;AAS9B,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAAIC,GAAS,EAAEC,UAAkB;EAAA,OAC1D,IAAIC,IAAI,CAACF,GAAG,CAACG,OAAO,CAAC,CAAC,GAAGF,UAAU,GAAG,IAAI,CAAC,CAACE,OAAO,CAAC,CAAC,GAAG,IAAI;AAAA;AAE9D,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAIC,MAAiB,EAAEC,MAAiB,EAAK;EAC3D,IAAID,MAAM,KAAKE,SAAS,IAAID,MAAM,KAAKC,SAAS,EAAE;IAChD,OAAO,KAAK;EACd;EACA,OACE,CAACF,MAAM,IACP,CAACC,MAAM,IACPD,MAAM,CAACG,MAAM,KAAKF,MAAM,CAACE,MAAM,IAC/BH,MAAM,CAACI,IAAI,CAAC,UAACC,GAAG;IAAA,OAAK,CAACJ,MAAM,CAACK,QAAQ,CAACD,GAAG,CAAC;EAAA,EAAC,IAC3CJ,MAAM,CAACG,IAAI,CAAC,UAACC,GAAG;IAAA,OAAK,CAACL,MAAM,CAACM,QAAQ,CAACD,GAAG,CAAC;EAAA,EAAC;AAE/C,CAAC;AAED,WACaE,SAAS,GAAAC,SAAA,EADrBvB,aAAa,CAAC,YAAY,CAAC,aAAAwB,WAAA,EAAAC,WAAA;EAAA,IACfH,SAAS,0BAAAI,YAAA;IAAAC,SAAA,CAAAL,SAAA,EAAAI,YAAA;IAAA,SAAAJ,UAAA;MAAA,IAAAM,KAAA;MAAAC,eAAA,OAAAP,SAAA;MAAA,SAAAQ,IAAA,GAAAC,SAAA,CAAAb,MAAA,EAAAc,IAAA,OAAAC,KAAA,CAAAH,IAAA,GAAAI,IAAA,MAAAA,IAAA,GAAAJ,IAAA,EAAAI,IAAA;QAAAF,IAAA,CAAAE,IAAA,IAAAH,SAAA,CAAAG,IAAA;MAAA;MAAAN,KAAA,GAAAO,UAAA,OAAAb,SAAA,KAAAc,MAAA,CAAAJ,IAAA;MAAAR,WAAA,CAAAa,sBAAA,CAAAT,KAAA;MAAA,OAAAA,KAAA;IAAA;IAAA,OAAAU,YAAA,CAAAhB,SAAA;EAAA,EAAAG,WAAA;EAAA;IAAAc,CAAA,EAATjB,SAAS;IAAAkB,CAAA;MAAAC,IAAA;MAAAC,UAAA,GACnBzC,QAAQ,CAAC;QAAE0C,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAC,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAE9BzC,QAAQ,CAAC;QAAE0C,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAC,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAO9BzC,QAAQ,CAAC;QAAE0C,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAC,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAE9BzC,QAAQ,CAAC;QAAE0C,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAC,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAE9BzC,QAAQ,CAAC;QAAE6C,IAAI,EAAEC;MAAQ,CAAC,CAAC;MAAAH,GAAA;MAAAC,KAAA,WAAAA,MAAA;QAAA,OAAiB,KAAK;MAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAEjDzC,QAAQ,CAAC;QAAE6C,IAAI,EAAEC,OAAO;QAAEC,OAAO,EAAE;MAAK,CAAC,CAAC;MAAAJ,GAAA;MAAAC,KAAA,WAAAA,MAAA;QAAA,OAAqB,KAAK;MAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAEpEzC,QAAQ,CAAC;QAAE6C,IAAI,EAAEC,OAAO;QAAEJ,SAAS,EAAE;MAAU,CAAC,CAAC;MAAAC,GAAA;MAAAC,KAAA,WAAAA,MAAA;QAAA,OAAiB,KAAK;MAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAEvEzC,QAAQ,CAAC;QAAE6C,IAAI,EAAEC,OAAO;QAAEJ,SAAS,EAAE;MAAU,CAAC,CAAC;MAAAC,GAAA;MAAAC,KAAA,WAAAA,MAAA;QAAA,OAAiB,KAAK;MAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAEvEzC,QAAQ,CAAC;QAAE6C,IAAI,EAAEC,OAAO;QAAEJ,SAAS,EAAE;MAAiB,CAAC,CAAC;MAAAC,GAAA;MAAAC,KAAA,WAAAA,MAAA;QAAA,OAClC,KAAK;MAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAE3BzC,QAAQ,CAAC;QAAE6C,IAAI,EAAEC,OAAO;QAAEJ,SAAS,EAAE;MAAgB,CAAC,CAAC;MAAAC,GAAA;MAAAC,KAAA,WAAAA,MAAA;QAAA,OAClC,KAAK;MAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAE1BzC,QAAQ,CAAC;QAAE6C,IAAI,EAAEC;MAAQ,CAAC,CAAC;MAAAH,GAAA;MAAAC,KAAA,WAAAA,MAAA;QAAA,OAAuB,IAAI;MAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAEtDxC,KAAK,CAAC,CAAC;MAAA0C,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAEPxC,KAAK,CAAC,CAAC;MAAA0C,GAAA;MAAAC,KAAA,WAAAA,MAAA;QAAA,OAAyC,CAAC,CAAC;MAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAElDxC,KAAK,CAAC,CAAC;MAAA0C,GAAA;MAAAC,KAAA,WAAAA,MAAA;QAAA,OAAyB,CAAC,CAAC;MAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAElCxC,KAAK,CAAC,CAAC;MAAA0C,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAG,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAG,GAAA;MAAAC,KAAA,WAAAA,MAAA;QAAA,OAIsB,IAAI;MAAA;IAAA;MAAAJ,IAAA;MAAAG,GAAA;MAAAC,KAAA,WAAAA,MAAA;QAAA,OAEuB,EAAE;MAAA;IAAA;MAAAJ,IAAA;MAAAG,GAAA;MAAAC,KAAA,WAAAA,MAAA;QAAA,IAAAI,MAAA;QAAA,OAEtB5C,QAAQ,CAC3C;UAAA,OAAM4C,MAAI,CAACC,eAAe,CAAC,CAAC;QAAA,GAC5B,IACF,CAAC;MAAA;IAAA;MAAAT,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAM,OAAA,EAAmB;QACjB,IAAI,CAAChD,iBAAiB,CAAC,IAAI,CAACiD,IAAI,EAAE,SAAS,CAAC,EAAE;UAC5C,OAAOrD,OAAO;QAChB;QAEA,IAAI,IAAI,CAACsD,MAAM,EAAE;UACf,OAAOxD,IAAI,CAAAyD,eAAA,KAAAA,eAAA,GAAAC,sBAAA,kEAAAnB,MAAA,CACJ,IAAI,CAACgB,IAAI,CAACI,QAAQ,CAAC,uCAAuC,CAAC,QAAApB,MAAA,CAC9D,IAAI,CAACiB,MAAM;QAGjB;QAEA,IAAI,IAAI,CAACI,eAAe,KAAKxC,SAAS,EAAE;UACtC,OAAOpB,IAAI,CAAA6D,gBAAA,KAAAA,gBAAA,GAAAH,sBAAA;QAKb;QAEA,IAAI,IAAI,CAACE,eAAe,CAACvC,MAAM,KAAK,CAAC,EAAE;UACrC,OAAOrB,IAAI,CAAA8D,gBAAA,KAAAA,gBAAA,GAAAJ,sBAAA,+DACP,IAAI,CAACH,IAAI,CAACI,QAAQ,CAAC,yCAAyC,CAAC;QAEnE;QAEA,OAAO3D,IAAI,CAAA+D,gBAAA,KAAAA,gBAAA,GAAAL,sBAAA,oWAEC,IAAI,CAACH,IAAI,EACP,IAAI,CAACS,MAAM,EACP,IAAI,CAACC,UAAU,EACnB,IAAI,CAACC,MAAM,EACX,IAAI,CAACC,MAAM,EACJ,IAAI,CAACC,aAAa,EACnB,IAAI,CAACC,YAAY,EACtB,IAAI,CAACT,eAAe,EACd,IAAI,CAACU,cAAc,EACpB,IAAI,CAACC,aAAa,EACb,IAAI,CAACC,kBAAkB;MAGlD;IAAC;MAAA5B,IAAA;MAAAG,GAAA;MAAAC,KAAA;QAAA,IAAAyB,QAAA,GAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAED,SAAAC,QAAA;UAAA,IAAAC,KAAA;YAAAC,KAAA,GAAA7C,SAAA;UAAA,OAAAyC,mBAAA,GAAAK,IAAA,UAAAC,SAAAC,QAAA;YAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;cAAA;gBAAqBN,KAAK,GAAAC,KAAA,CAAA1D,MAAA,QAAA0D,KAAA,QAAA3D,SAAA,GAAA2D,KAAA,MAAG,KAAK;gBAAA,MAC5B,CAACD,KAAK,KAAK,IAAI,CAACO,WAAW,IAAI,IAAI,CAACzB,eAAe,KAAKxC,SAAS,CAAC;kBAAA8D,QAAA,CAAAE,IAAA;kBAAA;gBAAA;gBAAA,OAAAF,QAAA,CAAAI,MAAA;cAAA;gBAItE,IAAI,CAACC,0BAA0B,CAACC,MAAM,CAAC,CAAC;gBACxC,IAAI,CAACC,oBAAoB,CAACD,MAAM,CAAC,CAAC;gBAClC,IAAI,CAACE,YAAY,CAACF,MAAM,CAAC,CAAC;gBAACN,QAAA,CAAAE,IAAA;gBAAA,OACrB,IAAI,CAACO,sBAAsB,CAAC,CAAC;cAAA;gBAEnC,IAAIb,KAAK,EAAE;kBACT,IAAI,CAACzB,eAAe,CAAC,CAAC;gBACxB,CAAC,MAAM;kBACL,IAAI,CAACkC,0BAA0B,CAAC,CAAC;gBACnC;cAAC;cAAA;gBAAA,OAAAL,QAAA,CAAAU,IAAA;YAAA;UAAA,GAAAf,OAAA;QAAA,CACF;QAAA,SAAAgB,QAAA;UAAA,OAAApB,QAAA,CAAAqB,KAAA,OAAA5D,SAAA;QAAA;QAAA,OAAA2D,OAAA;MAAA;IAAA;MAAAjD,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAA+C,aAAuBC,YAA4B,EAAW;QAC5D,IAAIA,YAAY,CAACC,IAAI,KAAK,CAAC,IAAI,CAACD,YAAY,CAACE,GAAG,CAAC,MAAM,CAAC,EAAE;UACxD,OAAO,IAAI;QACb;QACA;QACA,IAAMC,OAAO,GAAGH,YAAY,CAACI,GAAG,CAAC,MAAM,CAA8B;QACrE,OAAO,CAACD,OAAO,IAAIA,OAAO,CAACxC,QAAQ,KAAK,IAAI,CAACJ,IAAI,CAACI,QAAQ;MAC5D;IAAC;MAAAf,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAqD,WAAqBL,YAA4B,EAAQ;QACvD,IAAIM,OAAO,GAAGN,YAAY,CAACE,GAAG,CAAC,MAAM,CAAC;QAEtC,SAAAK,EAAA,MAAAC,IAAA,GAAkB,CAAC,WAAW,EAAE,WAAW,CAAC,EAAAD,EAAA,GAAAC,IAAA,CAAAnF,MAAA,EAAAkF,EAAA,IAAE;UAAzC,IAAMxD,GAAG,GAAAyD,IAAA,CAAAD,EAAA;UACZ,IAAI,CAACP,YAAY,CAACE,GAAG,CAACnD,GAAG,CAAC,EAAE;YAC1B;UACF;UAEA,IAAM0D,QAAQ,GAAGT,YAAY,CAACI,GAAG,CAACrD,GAAG,CAAyB;UAC9D,IAAM2D,QAAQ,GAAG,IAAI,CAAC3D,GAAG,CAAyB;;UAElD;UACA;UACA;UACA;UACA,IAAI9B,UAAU,CAACwF,QAAQ,EAAEC,QAAQ,CAAC,EAAE;YAClCJ,OAAO,GAAG,IAAI;YACd;UACF;QACF;QAEA,IAAIA,OAAO,EAAE;UACX,IAAI,CAACT,OAAO,CAAC,IAAI,CAAC;QACpB;MACF;IAAC;MAAAjD,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAwB,mBAA2BmC,EAAe,EAAE;QAAA,IAAAC,MAAA;QAC1C,IAAID,EAAE,CAACE,MAAM,CAACC,MAAM,IAAI,CAAC,IAAI,CAACC,mBAAmB,EAAE;UACjD;UACA,IAAI,CAACC,sBAAsB,CAACC,OAAO,CAAC,UAACC,GAAG;YAAA,OACtCN,MAAI,CAACO,qBAAqB,CAACD,GAAG,CAAC;UAAA,CACjC,CAAC;UACD,IAAI,CAACF,sBAAsB,GAAG,EAAE;QAClC;QACA,IAAI,CAACD,mBAAmB,GAAGJ,EAAE,CAACE,MAAM,CAACC,MAAM;MAC7C;IAAC;MAAAlE,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAoE,0BAAA,EAAiD;QAC/C,IAAMC,SAAS,GAAG,IAAI,CAACA,SAAS;QAChC,IAAMC,SAAS,GAAG,IAAI,CAACA,SAAS;;QAEhC;QACA,OACEpE,OAAO,CAACmE,SAAS,IAAIC,SAAS,CAAC,KAC9B,CAACD,SAAS,IAAIA,SAAS,CAAChG,MAAM,KAAK,CAAC,CAAC,KACrC,CAACiG,SAAS,IAAIA,SAAS,CAACjG,MAAM,KAAK,CAAC,CAAC;MAE1C;IAAC;MAAAuB,IAAA;MAAAG,GAAA;MAAAC,KAAA;QAAA,IAAAuE,aAAA,GAAA7C,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAED,SAAA4C,SAAA;UAAA,IAAAC,KAAA;UAAA,OAAA9C,mBAAA,GAAAK,IAAA,UAAA0C,UAAAC,SAAA;YAAA,kBAAAA,SAAA,CAAAxC,IAAA,GAAAwC,SAAA,CAAAvC,IAAA;cAAA;gBAAA,KACM,IAAI,CAACC,WAAW;kBAAAsC,SAAA,CAAAvC,IAAA;kBAAA;gBAAA;gBAAAuC,SAAA,CAAAvC,IAAA;gBAAA,OACE,IAAI,CAACC,WAAW;cAAA;gBAA9BoC,KAAK,GAAAE,SAAA,CAAAC,IAAA;gBAAA,KACPH,KAAK;kBAAAE,SAAA,CAAAvC,IAAA;kBAAA;gBAAA;gBAAAuC,SAAA,CAAAxC,IAAA;gBAAAwC,SAAA,CAAAvC,IAAA;gBAAA,OAECqC,KAAK,CAAC,CAAC;cAAA;gBAAAE,SAAA,CAAAvC,IAAA;gBAAA;cAAA;gBAAAuC,SAAA,CAAAxC,IAAA;gBAAAwC,SAAA,CAAAE,EAAA,GAAAF,SAAA;cAAA;gBAOjB,IAAI,CAACtC,WAAW,GAAGjE,SAAS;cAAC;cAAA;gBAAA,OAAAuG,SAAA,CAAA/B,IAAA;YAAA;UAAA,GAAA4B,QAAA;QAAA,CAEhC;QAAA,SAAAM,aAAA;UAAA,OAAAP,aAAA,CAAAzB,KAAA,OAAA5D,SAAA;QAAA;QAAA,OAAA4F,YAAA;MAAA;IAAA;MAAAlF,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAA+E,kBAAA,EAA2B;QACzBC,IAAA,CAAAC,eAAA,CAzLSxG,SAAS,CAAAyG,SAAA,8BAAAC,IAAA;QA0LlB,IAAI,IAAI,CAACC,UAAU,EAAE;UACnB,IAAI,CAACC,uBAAuB,CAAC,IAAI,CAACC,uBAAuB,CAAC,CAAC,CAAC;QAC9D;MACF;IAAC;MAAA1F,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAuF,qBAAA,EAA8B;QAC5BP,IAAA,CAAAC,eAAA,CAhMSxG,SAAS,CAAAyG,SAAA,iCAAAC,IAAA;QAiMlB,IAAI,CAACxC,sBAAsB,CAAC,CAAC;MAC/B;;MAEA;AACF;AACA;AACA;AACA;IAJE;MAAA/C,IAAA;MAAAG,GAAA;MAAAC,KAAA;QAAA,IAAAwF,uBAAA,GAAA9D,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAKA,SAAA6D,SAAA;UAAA,OAAA9D,mBAAA,GAAAK,IAAA,UAAA0D,UAAAC,SAAA;YAAA,kBAAAA,SAAA,CAAAxD,IAAA,GAAAwD,SAAA,CAAAvD,IAAA;cAAA;gBAAAuD,SAAA,CAAAvD,IAAA;gBAAA,OACQ,IAAI,CAAC0C,YAAY,CAAC,CAAC;cAAA;gBACzB,IAAI,CAAClE,eAAe,GAAGxC,SAAS;gBAChC,IAAI,CAAC4F,sBAAsB,GAAG,EAAE;cAAC;cAAA;gBAAA,OAAA2B,SAAA,CAAA/C,IAAA;YAAA;UAAA,GAAA6C,QAAA;QAAA,CAClC;QAAA,SAAA9C,uBAAA;UAAA,OAAA6C,uBAAA,CAAA1C,KAAA,OAAA5D,SAAA;QAAA;QAAA,OAAAyD,sBAAA;MAAA;MAED;AACF;AACA;AACA;MAHE;IAAA;MAAA/C,IAAA;MAAAG,GAAA;MAAAC,KAAA;QAAA,IAAA4F,sBAAA,GAAAlE,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAIA,SAAAiE,SAAA;UAAA,OAAAlE,mBAAA,GAAAK,IAAA,UAAA8D,UAAAC,SAAA;YAAA,kBAAAA,SAAA,CAAA5D,IAAA,GAAA4D,SAAA,CAAA3D,IAAA;cAAA;gBAAA2D,SAAA,CAAA3D,IAAA;gBAAA,OACQ,IAAI,CAAC0C,YAAY,CAAC,CAAC;cAAA;gBACzB,IAAI,CAAClE,eAAe,GAAG,EAAE;gBACzB,IAAI,CAACoD,sBAAsB,GAAG,EAAE;cAAC;cAAA;gBAAA,OAAA+B,SAAA,CAAAnD,IAAA;YAAA;UAAA,GAAAiD,QAAA;QAAA,CAClC;QAAA,SAAAG,sBAAA;UAAA,OAAAJ,sBAAA,CAAA9C,KAAA,OAAA5D,SAAA;QAAA;QAAA,OAAA8G,qBAAA;MAAA;IAAA;MAAApG,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAsF,wBAAA,EAAkC;QAChC,IAAMzH,GAAG,GAAG,IAAIE,IAAI,CAAC,CAAC;QACtB,IAAI,OAAO,IAAI,IAAI,CAACkI,IAAI,EAAE;UACxB,OAA0B;YACxBpI,GAAG,EAAEA,GAAG;YACRqI,SAAS,EAAE,IAAI,CAACD,IAAI,CAACE,KAAK,CAAC,CAAC,CAAC;YAC7BC,OAAO,EAAE,IAAI,CAACH,IAAI,CAACE,KAAK,CAAC,CAAC,CAAC;YAC3BE,qBAAqB,EAAEjI;UACzB,CAAC;QACH;QACA,IAAI,QAAQ,IAAI,IAAI,CAAC6H,IAAI,EAAE;UACzB,IAAMI,qBAAqB,GAAGzI,qBAAqB,CACjDC,GAAG,EACH,IAAI,CAACoI,IAAI,CAACK,MACZ,CAAC;UACD,OAA0B;YACxBzI,GAAG,EAAEA,GAAG;YACRqI,SAAS,EAAE,IAAInI,IAAI,CAACsI,qBAAqB,GAAG,IAAI,CAAC;YACjD;YACAD,OAAO,EAAE,IAAIrI,IAAI,CAACF,GAAG,CAACG,OAAO,CAAC,CAAC,GAAG,KAAK,GAAG,GAAG,GAAG,IAAI,CAAC;YACrDqI,qBAAqB,EAAEzI,qBAAqB,CAACC,GAAG,EAAE,IAAI,CAACoI,IAAI,CAACK,MAAM;UACpE,CAAC;QACH;QACA,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;MAC9C;IAAC;MAAA3G,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAqF,wBAAgCmB,aAAgC,EAAE;QAAA,IAAAC,MAAA;QAChE,IAAI,IAAI,CAACpE,WAAW,EAAE;UACpB,OAAO,IAAI;QACb;QACA,IAAI,CAACA,WAAW,GAAG5E,gBAAgB,CACjC,IAAI,CAAC8C,IAAI,EACT,UAACmG,aAAa,EAAK;UACjB;UACA;UACA;UACA,IAAI,CAACD,MAAI,CAACpE,WAAW,EAAE;YACrB;YACA;UACF;UACAoE,MAAI,CAACE,4BAA4B,CAACD,aAAa,CAAC;QAClD,CAAC,EACDF,aAAa,CAACN,SAAS,CAACU,WAAW,CAAC,CAAC,EACrCJ,aAAa,CAACJ,OAAO,CAACQ,WAAW,CAAC,CAAC,EACnC,IAAI,CAACvC,SAAS,EACd,IAAI,CAACC,SACP,CAAC,CAACuC,KAAK,CAAC,UAACC,GAAG,EAAK;UACfL,MAAI,CAACpE,WAAW,GAAGjE,SAAS;UAC5BqI,MAAI,CAACjG,MAAM,GAAGsG,GAAG;QACnB,CAAC,CAAC;QACF,OAAO,IAAI;MACb;IAAC;MAAAlH,IAAA;MAAAG,GAAA;MAAAC,KAAA;QAAA,IAAA+G,gBAAA,GAAArF,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAED,SAAAoF,SAAA;UAAA,IAAAC,eAAA;UAAA,IAAAT,aAAA;UAAA,OAAA7E,mBAAA,GAAAK,IAAA,UAAAkF,UAAAC,SAAA;YAAA,kBAAAA,SAAA,CAAAhF,IAAA,GAAAgF,SAAA,CAAA/E,IAAA;cAAA;gBACE,IAAI,CAAC5B,MAAM,GAAGpC,SAAS;gBAAC,KAEpB,IAAI,CAACgG,yBAAyB;kBAAA+C,SAAA,CAAA/E,IAAA;kBAAA;gBAAA;gBAChC,IAAI,CAAC4D,qBAAqB,CAAC,CAAC;gBAAC,OAAAmB,SAAA,CAAA7E,MAAA;cAAA;gBAIzBkE,aAAa,GAAG,IAAI,CAAClB,uBAAuB,CAAC,CAAC;gBAAA,MAEhDkB,aAAa,CAACN,SAAS,GAAGM,aAAa,CAAC3I,GAAG;kBAAAsJ,SAAA,CAAA/E,IAAA;kBAAA;gBAAA;gBAC7C;gBACA,IAAI,CAAC4D,qBAAqB,CAAC,CAAC;gBAAC,OAAAmB,SAAA,CAAA7E,MAAA;cAAA;gBAI/B,IAAI,CAACI,YAAY,CAAC,CAAC;gBACnB,KAAAuE,eAAA,GAAI,IAAI,CAAC1G,IAAI,CAAC6G,IAAI,cAAAH,eAAA,eAAdA,eAAA,CAAgBI,QAAQ,EAAE;kBAC5B,IAAI,CAAC5E,oBAAoB,CAAC,CAAC;gBAC7B;gBAEA,IAAI,CAAC4C,uBAAuB,CAACmB,aAAa,CAAC;cAAC;cAAA;gBAAA,OAAAW,SAAA,CAAAvE,IAAA;YAAA;UAAA,GAAAoE,QAAA;QAAA,CAC7C;QAAA,SAAA3G,gBAAA;UAAA,OAAA0G,gBAAA,CAAAjE,KAAA,OAAA5D,SAAA;QAAA;QAAA,OAAAmB,eAAA;MAAA;IAAA;MAAAT,IAAA;MAAAG,GAAA;MAAAC,KAAA,WAAAA,MAAA;QAAA,IAAAsH,MAAA;QAAA,OAE4B,UAACjB,qBAAyC;UAAA,OACrE,CAACiB,MAAI,CAAC1G,eAAe,GACjB,EAAE,GACFyF,qBAAqB,GACnBiB,MAAI,CAAC1G,eAAe,CAAC2G,MAAM,CACzB,UAACC,KAAK;YAAA,OAAKA,KAAK,CAACC,IAAI,GAAGpB,qBAAsB;UAAA,CAChD,CAAC,GACDiB,MAAI,CAAC1G,eAAe;QAAA;MAAA;IAAA;MAAAhB,IAAA;MAAAG,GAAA;MAAAC,KAAA,WAAAA,MAAA;QAAA,IAAA0H,MAAA;QAAA,OAEW,UACrChB,aAAmC,EAChC;UACH,IAAIgB,MAAI,CAAC3D,mBAAmB,EAAE;YAC5B2D,MAAI,CAACvD,qBAAqB,CAACuC,aAAa,CAAC;YACzC;UACF;UACAgB,MAAI,CAAC1D,sBAAsB,CAAC2D,IAAI,CAACjB,aAAa,CAAC;QACjD,CAAC;MAAA;IAAA;MAAA9G,IAAA;MAAAG,GAAA;MAAAC,KAAA,WAAAA,MAAA;QAAA,IAAA4H,MAAA;QAAA,OAE+B,UAAClB,aAAmC,EAAK;UACvE,IAAML,qBAAqB,GACzB,QAAQ,IAAIuB,MAAI,CAAC3B,IAAI,GACjBrI,qBAAqB,CAAC,IAAIG,IAAI,CAAC,CAAC,EAAE6J,MAAI,CAAC3B,IAAI,CAACK,MAAM,CAAC,GACnDlI,SAAS;UACf;UACA;UACA,IAAMyJ,UAAU,GAAGC,kBAAA,CAAIpB,aAAa,CAACqB,MAAM,EAAEC,OAAO,CAAC,CAAC;UACtD,IAAI,CAACJ,MAAI,CAAChH,eAAe,IAAI,CAACgH,MAAI,CAAChH,eAAe,CAACvC,MAAM,EAAE;YACzDuJ,MAAI,CAAChH,eAAe,GAAGiH,UAAU;YACjC;UACF;UACA,IAAI,CAACA,UAAU,CAACxJ,MAAM,EAAE;YACtB;YACA;YACA;UACF;UACA,IAAM4J,iBAAiB,GAAGL,MAAI,CAACM,kBAAkB,CAAC7B,qBAAqB,CAAC;;UAExE;UACA,IAAI,CAAC4B,iBAAiB,CAAC5J,MAAM,EAAE;YAC7B;YACAuJ,MAAI,CAAChH,eAAe,GAAGiH,UAAU;UACnC,CAAC,MAAM,IACLA,UAAU,CAACA,UAAU,CAACxJ,MAAM,GAAG,CAAC,CAAC,CAACoJ,IAAI;UAAG;UACzCQ,iBAAiB,CAAC,CAAC,CAAC,CAACR,IAAI,CAAC;UAAA,EAC1B;YACA;YACA;YACAG,MAAI,CAAChH,eAAe,GAAGiH,UAAU,CAACtI,MAAM,CAAC0I,iBAAiB,CAAC;UAC7D,CAAC,MAAM,IACLA,iBAAiB,CAACA,iBAAiB,CAAC5J,MAAM,GAAG,CAAC,CAAC,CAACoJ,IAAI;UAAG;UACvDI,UAAU,CAAC,CAAC,CAAC,CAACJ,IAAI,CAAC;UAAA,EACnB;YACA;YACA;YACAG,MAAI,CAAChH,eAAe,GAAGqH,iBAAiB,CAAC1I,MAAM,CAACsI,UAAU,CAAC;UAC7D,CAAC,MAAM;YACL;YACA;YACAD,MAAI,CAAChH,eAAe,GAAGqH,iBAAiB,CACrC1I,MAAM,CAACsI,UAAU,CAAC,CAClBM,IAAI,CAAC,UAACC,CAAC,EAAEC,CAAC;cAAA,OAAKA,CAAC,CAACZ,IAAI,GAAGW,CAAC,CAACX,IAAI;YAAA,EAAC;UACpC;QACF,CAAC;MAAA;IAAA;MAAA7H,IAAA;MAAAG,GAAA;MAAAC,KAAA,WAAAA,MAAA;QAAA,IAAAsI,MAAA;QAAA,OAE8B9K,QAAQ,eAAAkE,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAC,SAAA2G,SAAA;UAAA,OAAA5G,mBAAA,GAAAK,IAAA,UAAAwG,UAAAC,SAAA;YAAA,kBAAAA,SAAA,CAAAtG,IAAA,GAAAsG,SAAA,CAAArG,IAAA;cAAA;gBAAAqG,SAAA,CAAArG,IAAA;gBAAA,OACV1E,iBAAiB,CAAC4K,MAAI,CAAC/H,IAAI,CAAC;cAAA;gBAAxD+H,MAAI,CAAChH,cAAc,GAAAmH,SAAA,CAAA7D,IAAA;cAAA;cAAA;gBAAA,OAAA6D,SAAA,CAAA7F,IAAA;YAAA;UAAA,GAAA2F,QAAA;QAAA,CACpB,IAAE,KAAK,CAAC;MAAA;IAAA;MAAA3I,IAAA;MAAAG,GAAA;MAAAC,KAAA,WAAAA,MAAA;QAAA,IAAA0I,MAAA;QAAA,OAEclL,QAAQ,eAAAkE,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAC,SAAA+G,SAAA;UAAA,IAAAC,gBAAA;UAAA,IAAAC,YAAA,EAAAC,QAAA,EAAAC,GAAA,EAAAC,cAAA,EAAAC,MAAA,EAAAC,KAAA,EAAAC,SAAA,EAAAC,KAAA,EAAAhC,IAAA;UAAA,OAAAzF,mBAAA,GAAAK,IAAA,UAAAqH,UAAAC,SAAA;YAAA,kBAAAA,SAAA,CAAAnH,IAAA,GAAAmH,SAAA,CAAAlH,IAAA;cAAA;gBACxByG,YAAY,GAAG,CAAC,CAAC,EAEvB;gBACMC,QAAQ,GAAG,EAAAF,gBAAA,GAAAF,MAAI,CAACnI,IAAI,CAAC6G,IAAI,cAAAwB,gBAAA,uBAAdA,gBAAA,CAAgBvB,QAAQ,KAAI1J,UAAU,CAAC+K,MAAI,CAACnI,IAAI,CAAC,EAElE;gBACA,KAAAwI,GAAA,MAAAC,cAAA,GAAqBO,MAAM,CAACC,MAAM,CAACd,MAAI,CAACnI,IAAI,CAACkJ,MAAM,CAAC,EAAAV,GAAA,GAAAC,cAAA,CAAA3K,MAAA,EAAA0K,GAAA,IAAE;kBAA3CE,MAAM,GAAAD,cAAA,CAAAD,GAAA;kBACf,IACEE,MAAM,CAACS,UAAU,CAACC,OAAO,IACzBpM,kBAAkB,CAAC0L,MAAM,CAAC,KAAK,QAAQ,EACvC;oBACAJ,YAAY,CAACI,MAAM,CAACS,UAAU,CAACC,OAAO,CAAC,GACrCV,MAAM,CAACS,UAAU,CAACE,aAAa;kBACnC;gBACF;;gBAEA;gBAAA,KACId,QAAQ;kBAAAQ,SAAA,CAAAlH,IAAA;kBAAA;gBAAA;gBAAAkH,SAAA,CAAAlH,IAAA;gBAAA,OACU0G,QAAQ;cAAA;gBAAtBI,KAAK,GAAAI,SAAA,CAAA1E,IAAA;gBAAAuE,SAAA,GAAAU,0BAAA,CACQX,KAAK;gBAAA;kBAAxB,KAAAC,SAAA,CAAAW,CAAA,MAAAV,KAAA,GAAAD,SAAA,CAAAY,CAAA,IAAAC,IAAA,GAA0B;oBAAf5C,IAAI,GAAAgC,KAAA,CAAApJ,KAAA;oBACb,IAAI,EAAEoH,IAAI,CAAC6C,EAAE,IAAIpB,YAAY,CAAC,EAAE;sBAC9BA,YAAY,CAACzB,IAAI,CAAC6C,EAAE,CAAC,GAAG7C,IAAI,CAAC8C,IAAI;oBACnC;kBACF;gBAAC,SAAApD,GAAA;kBAAAqC,SAAA,CAAAgB,CAAA,CAAArD,GAAA;gBAAA;kBAAAqC,SAAA,CAAAiB,CAAA;gBAAA;cAAA;gBAGH1B,MAAI,CAACnH,aAAa,GAAGsH,YAAY;cAAC;cAAA;gBAAA,OAAAS,SAAA,CAAA1G,IAAA;YAAA;UAAA,GAAA+F,QAAA;QAAA,CACnC,IAAE,KAAK,CAAC;MAAA;IAAA;MAAA/I,IAAA;MAAAyK,MAAA;MAAAtK,GAAA;MAAAC,KAAA,EAET,SAAAsK,OAAA,EAAoB;QAClB,OAAO,CACLvN,GAAG,CAAAwN,gBAAA,KAAAA,gBAAA,GAAA7J,sBAAA,0bAsBJ;MACH;IAAC;EAAA;AAAA,GAla4BzD,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}