{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport \"@material/mwc-tab\";\nimport \"@material/mwc-tab-bar\";\nconst mdiEye = \"M12,9A3,3 0 0,0 9,12A3,3 0 0,0 12,15A3,3 0 0,0 15,12A3,3 0 0,0 12,9M12,17A5,5 0 0,1 7,12A5,5 0 0,1 12,7A5,5 0 0,1 17,12A5,5 0 0,1 12,17M12,4.5C7,4.5 2.73,7.61 1,12C2.73,16.39 7,19.5 12,19.5C17,19.5 21.27,16.39 23,12C21.27,7.61 17,4.5 12,4.5Z\";\nconst mdiGauge = \"M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M12,4A8,8 0 0,1 20,12C20,14.4 19,16.5 17.3,18C15.9,16.7 14,16 12,16C10,16 8.2,16.7 6.7,18C5,16.5 4,14.4 4,12A8,8 0 0,1 12,4M14,5.89C13.62,5.9 13.26,6.15 13.1,6.54L11.81,9.77L11.71,10C11,10.13 10.41,10.6 10.14,11.26C9.73,12.29 10.23,13.45 11.26,13.86C12.29,14.27 13.45,13.77 13.86,12.74C14.12,12.08 14,11.32 13.57,10.76L13.67,10.5L14.96,7.29L14.97,7.26C15.17,6.75 14.92,6.17 14.41,5.96C14.28,5.91 14.15,5.89 14,5.89M10,6A1,1 0 0,0 9,7A1,1 0 0,0 10,8A1,1 0 0,0 11,7A1,1 0 0,0 10,6M7,9A1,1 0 0,0 6,10A1,1 0 0,0 7,11A1,1 0 0,0 8,10A1,1 0 0,0 7,9M17,9A1,1 0 0,0 16,10A1,1 0 0,0 17,11A1,1 0 0,0 18,10A1,1 0 0,0 17,9Z\";\nconst mdiThermometer = \"M15 13V5A3 3 0 0 0 9 5V13A5 5 0 1 0 15 13M12 4A1 1 0 0 1 13 5V8H11V5A1 1 0 0 1 12 4Z\";\nconst mdiWaterPercent = \"M12,3.25C12,3.25 6,10 6,14C6,17.32 8.69,20 12,20A6,6 0 0,0 18,14C18,10 12,3.25 12,3.25M14.47,9.97L15.53,11.03L9.53,17.03L8.47,15.97M9.75,10A1.25,1.25 0 0,1 11,11.25A1.25,1.25 0 0,1 9.75,12.5A1.25,1.25 0 0,1 8.5,11.25A1.25,1.25 0 0,1 9.75,10M14.25,14.5A1.25,1.25 0 0,1 15.5,15.75A1.25,1.25 0 0,1 14.25,17A1.25,1.25 0 0,1 13,15.75A1.25,1.25 0 0,1 14.25,14.5Z\";\nconst mdiWeatherWindy = \"M4,10A1,1 0 0,1 3,9A1,1 0 0,1 4,8H12A2,2 0 0,0 14,6A2,2 0 0,0 12,4C11.45,4 10.95,4.22 10.59,4.59C10.2,5 9.56,5 9.17,4.59C8.78,4.2 8.78,3.56 9.17,3.17C9.9,2.45 10.9,2 12,2A4,4 0 0,1 16,6A4,4 0 0,1 12,10H4M19,12A1,1 0 0,0 20,11A1,1 0 0,0 19,10C18.72,10 18.47,10.11 18.29,10.29C17.9,10.68 17.27,10.68 16.88,10.29C16.5,9.9 16.5,9.27 16.88,8.88C17.42,8.34 18.17,8 19,8A3,3 0 0,1 22,11A3,3 0 0,1 19,14H5A1,1 0 0,1 4,13A1,1 0 0,1 5,12H19M18,18H4A1,1 0 0,1 3,17A1,1 0 0,1 4,16H18A3,3 0 0,1 21,19A3,3 0 0,1 18,22C17.17,22 16.42,21.66 15.88,21.12C15.5,20.73 15.5,20.1 15.88,19.71C16.27,19.32 16.9,19.32 17.29,19.71C17.47,19.89 17.72,20 18,20A1,1 0 0,0 19,19A1,1 0 0,0 18,18Z\";\nimport { LitElement, css, html, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { formatDateWeekdayDay } from \"../../../common/datetime/format_date\";\nimport { formatTimeWeekday } from \"../../../common/datetime/format_time\";\nimport \"../../../components/ha-svg-icon\";\nimport { getDefaultForecastType, getForecast, getSupportedForecastTypes, getWind, subscribeForecast, weatherIcons } from \"../../../data/weather\";\nlet MoreInfoWeather = _decorate([customElement(\"more-info-weather\")], function (_initialize, _LitElement) {\n  class MoreInfoWeather extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: MoreInfoWeather,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"stateObj\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_forecastEvent\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_forecastType\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_subscribed\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"_unsubscribeForecastEvents\",\n      value: function _unsubscribeForecastEvents() {\n        if (this._subscribed) {\n          this._subscribed.then(unsub => unsub());\n          this._subscribed = undefined;\n        }\n        this._forecastEvent = undefined;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_subscribeForecastEvents\",\n      value: async function _subscribeForecastEvents() {\n        this._unsubscribeForecastEvents();\n        if (!this.isConnected || !this.hass || !this.stateObj || !this._forecastType) {\n          return;\n        }\n        this._subscribed = subscribeForecast(this.hass, this.stateObj.entity_id, this._forecastType, event => {\n          this._forecastEvent = event;\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"connectedCallback\",\n      value: function connectedCallback() {\n        _get(_getPrototypeOf(MoreInfoWeather.prototype), \"connectedCallback\", this).call(this);\n        if (this.hasUpdated) {\n          this._subscribeForecastEvents();\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"disconnectedCallback\",\n      value: function disconnectedCallback() {\n        _get(_getPrototypeOf(MoreInfoWeather.prototype), \"disconnectedCallback\", this).call(this);\n        this._unsubscribeForecastEvents();\n      }\n    }, {\n      kind: \"method\",\n      key: \"shouldUpdate\",\n      value: function shouldUpdate(changedProps) {\n        if (changedProps.has(\"stateObj\")) {\n          return true;\n        }\n        const oldHass = changedProps.get(\"hass\");\n        if (!oldHass || oldHass.locale !== this.hass.locale || oldHass.config.unit_system !== this.hass.config.unit_system) {\n          return true;\n        }\n        return false;\n      }\n    }, {\n      kind: \"method\",\n      key: \"willUpdate\",\n      value: function willUpdate(changedProps) {\n        _get(_getPrototypeOf(MoreInfoWeather.prototype), \"willUpdate\", this).call(this, changedProps);\n        if ((changedProps.has(\"stateObj\") || !this._subscribed) && this.stateObj) {\n          var _this$stateObj;\n          const oldState = changedProps.get(\"stateObj\");\n          if ((oldState === null || oldState === void 0 ? void 0 : oldState.entity_id) !== ((_this$stateObj = this.stateObj) === null || _this$stateObj === void 0 ? void 0 : _this$stateObj.entity_id) || !this._subscribed) {\n            this._forecastType = getDefaultForecastType(this.stateObj);\n            this._subscribeForecastEvents();\n          }\n        } else if (changedProps.has(\"_forecastType\")) {\n          this._subscribeForecastEvents();\n        }\n      }\n    }, {\n      kind: \"field\",\n      key: \"_supportedForecasts\",\n      value() {\n        return memoizeOne(stateObj => getSupportedForecastTypes(stateObj));\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this.hass || !this.stateObj) {\n          return nothing;\n        }\n        const supportedForecasts = this._supportedForecasts(this.stateObj);\n        const forecastData = getForecast(this.stateObj.attributes, this._forecastEvent);\n        const forecast = forecastData === null || forecastData === void 0 ? void 0 : forecastData.forecast;\n        const hourly = (forecastData === null || forecastData === void 0 ? void 0 : forecastData.type) === \"hourly\";\n        const dayNight = (forecastData === null || forecastData === void 0 ? void 0 : forecastData.type) === \"twice_daily\";\n        return html`\n      ${this._showValue(this.stateObj.attributes.temperature) ? html`\n            <div class=\"flex\">\n              <ha-svg-icon .path=${mdiThermometer}></ha-svg-icon>\n              <div class=\"main\">\n                ${this.hass.localize(\"ui.card.weather.attributes.temperature\")}\n              </div>\n              <div>\n                ${this.hass.formatEntityAttributeValue(this.stateObj, \"temperature\")}\n              </div>\n            </div>\n          ` : \"\"}\n      ${this._showValue(this.stateObj.attributes.pressure) ? html`\n            <div class=\"flex\">\n              <ha-svg-icon .path=${mdiGauge}></ha-svg-icon>\n              <div class=\"main\">\n                ${this.hass.localize(\"ui.card.weather.attributes.air_pressure\")}\n              </div>\n              <div>\n                ${this.hass.formatEntityAttributeValue(this.stateObj, \"pressure\")}\n              </div>\n            </div>\n          ` : \"\"}\n      ${this._showValue(this.stateObj.attributes.humidity) ? html`\n            <div class=\"flex\">\n              <ha-svg-icon .path=${mdiWaterPercent}></ha-svg-icon>\n              <div class=\"main\">\n                ${this.hass.localize(\"ui.card.weather.attributes.humidity\")}\n              </div>\n              <div>\n                ${this.hass.formatEntityAttributeValue(this.stateObj, \"humidity\")}\n              </div>\n            </div>\n          ` : \"\"}\n      ${this._showValue(this.stateObj.attributes.wind_speed) ? html`\n            <div class=\"flex\">\n              <ha-svg-icon .path=${mdiWeatherWindy}></ha-svg-icon>\n              <div class=\"main\">\n                ${this.hass.localize(\"ui.card.weather.attributes.wind_speed\")}\n              </div>\n              <div>\n                ${getWind(this.hass, this.stateObj, this.stateObj.attributes.wind_speed, this.stateObj.attributes.wind_bearing)}\n              </div>\n            </div>\n          ` : \"\"}\n      ${this._showValue(this.stateObj.attributes.visibility) ? html`\n            <div class=\"flex\">\n              <ha-svg-icon .path=${mdiEye}></ha-svg-icon>\n              <div class=\"main\">\n                ${this.hass.localize(\"ui.card.weather.attributes.visibility\")}\n              </div>\n              <div>\n                ${this.hass.formatEntityAttributeValue(this.stateObj, \"visibility\")}\n              </div>\n            </div>\n          ` : \"\"}\n      ${forecast ? html`\n            <div class=\"section\">\n              ${this.hass.localize(\"ui.card.weather.forecast\")}:\n            </div>\n            ${supportedForecasts.length > 1 ? html`<mwc-tab-bar\n                  .activeIndex=${supportedForecasts.findIndex(item => item === this._forecastType)}\n                  @MDCTabBar:activated=${this._handleForecastTypeChanged}\n                >\n                  ${supportedForecasts.map(forecastType => html`<mwc-tab\n                        .label=${this.hass.localize(`ui.card.weather.${forecastType}`)}\n                      ></mwc-tab>`)}\n                </mwc-tab-bar>` : nothing}\n            ${forecast.map(item => this._showValue(item.templow) || this._showValue(item.temperature) ? html`<div class=\"flex\">\n                    ${item.condition ? html`\n                          <ha-svg-icon\n                            .path=${weatherIcons[item.condition]}\n                          ></ha-svg-icon>\n                        ` : \"\"}\n                    <div class=\"main\">\n                      ${dayNight ? html`\n                            ${formatDateWeekdayDay(new Date(item.datetime), this.hass.locale, this.hass.config)}\n                            (${item.is_daytime !== false ? this.hass.localize(\"ui.card.weather.day\") : this.hass.localize(\"ui.card.weather.night\")})\n                          ` : hourly ? html`\n                              ${formatTimeWeekday(new Date(item.datetime), this.hass.locale, this.hass.config)}\n                            ` : html`\n                              ${formatDateWeekdayDay(new Date(item.datetime), this.hass.locale, this.hass.config)}\n                            `}\n                    </div>\n                    <div class=\"templow\">\n                      ${this._showValue(item.templow) ? this.hass.formatEntityAttributeValue(this.stateObj, \"templow\", item.templow) : hourly ? \"\" : \"—\"}\n                    </div>\n                    <div class=\"temp\">\n                      ${this._showValue(item.temperature) ? this.hass.formatEntityAttributeValue(this.stateObj, \"temperature\", item.temperature) : \"—\"}\n                    </div>\n                  </div>` : \"\")}\n          ` : \"\"}\n      ${this.stateObj.attributes.attribution ? html`\n            <div class=\"attribution\">\n              ${this.stateObj.attributes.attribution}\n            </div>\n          ` : \"\"}\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleForecastTypeChanged\",\n      value: function _handleForecastTypeChanged(ev) {\n        this._forecastType = this._supportedForecasts(this.stateObj)[ev.detail.index];\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css`\n      ha-svg-icon {\n        color: var(--paper-item-icon-color);\n        margin-left: 8px;\n        margin-inline-start: 8px;\n        margin-inline-end: initial;\n      }\n\n      mwc-tab-bar {\n        margin-bottom: 4px;\n      }\n\n      .section {\n        margin: 16px 0 8px 0;\n        font-size: 1.2em;\n      }\n\n      .flex {\n        display: flex;\n        height: 32px;\n        align-items: center;\n      }\n      .flex > div:last-child {\n        direction: ltr;\n      }\n\n      .main {\n        flex: 1;\n        margin-left: 24px;\n        margin-inline-start: 24px;\n        margin-inline-end: initial;\n      }\n\n      .temp,\n      .templow {\n        min-width: 48px;\n        text-align: right;\n        direction: ltr;\n      }\n\n      .templow {\n        margin: 0 16px;\n        color: var(--secondary-text-color);\n      }\n\n      .attribution {\n        color: var(--secondary-text-color);\n        text-align: center;\n      }\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_showValue\",\n      value: function _showValue(item) {\n        return typeof item !== \"undefined\" && item !== null;\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["mdiEye","mdiGauge","mdiThermometer","mdiWaterPercent","mdiWeatherWindy","LitElement","css","html","nothing","customElement","property","state","memoizeOne","formatDateWeekdayDay","formatTimeWeekday","getDefaultForecastType","getForecast","getSupportedForecastTypes","getWind","subscribeForecast","weatherIcons","MoreInfoWeather","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","_unsubscribeForecastEvents","_subscribed","then","unsub","undefined","_forecastEvent","_subscribeForecastEvents","isConnected","hass","stateObj","_forecastType","entity_id","event","connectedCallback","_get","_getPrototypeOf","prototype","call","hasUpdated","disconnectedCallback","shouldUpdate","changedProps","has","oldHass","get","locale","config","unit_system","willUpdate","_this$stateObj","oldState","render","supportedForecasts","_supportedForecasts","forecastData","attributes","forecast","hourly","type","dayNight","_showValue","temperature","localize","formatEntityAttributeValue","pressure","humidity","wind_speed","wind_bearing","visibility","length","findIndex","item","_handleForecastTypeChanged","map","forecastType","templow","condition","Date","datetime","is_daytime","attribution","ev","detail","index","static","styles"],"sources":["/workspaces/frontend/src/dialogs/more-info/controls/more-info-weather.ts"],"sourcesContent":["import \"@material/mwc-tab\";\nimport \"@material/mwc-tab-bar\";\nimport {\n  mdiEye,\n  mdiGauge,\n  mdiThermometer,\n  mdiWaterPercent,\n  mdiWeatherWindy,\n} from \"@mdi/js\";\nimport {\n  CSSResultGroup,\n  LitElement,\n  PropertyValues,\n  css,\n  html,\n  nothing,\n} from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { formatDateWeekdayDay } from \"../../../common/datetime/format_date\";\nimport { formatTimeWeekday } from \"../../../common/datetime/format_time\";\nimport \"../../../components/ha-svg-icon\";\nimport {\n  ForecastEvent,\n  ModernForecastType,\n  WeatherEntity,\n  getDefaultForecastType,\n  getForecast,\n  getSupportedForecastTypes,\n  getWind,\n  subscribeForecast,\n  weatherIcons,\n} from \"../../../data/weather\";\nimport { HomeAssistant } from \"../../../types\";\n\n@customElement(\"more-info-weather\")\nclass MoreInfoWeather extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public stateObj?: WeatherEntity;\n\n  @state() private _forecastEvent?: ForecastEvent;\n\n  @state() private _forecastType?: ModernForecastType;\n\n  @state() private _subscribed?: Promise<() => void>;\n\n  private _unsubscribeForecastEvents() {\n    if (this._subscribed) {\n      this._subscribed.then((unsub) => unsub());\n      this._subscribed = undefined;\n    }\n    this._forecastEvent = undefined;\n  }\n\n  private async _subscribeForecastEvents() {\n    this._unsubscribeForecastEvents();\n    if (\n      !this.isConnected ||\n      !this.hass ||\n      !this.stateObj ||\n      !this._forecastType\n    ) {\n      return;\n    }\n\n    this._subscribed = subscribeForecast(\n      this.hass!,\n      this.stateObj!.entity_id,\n      this._forecastType,\n      (event) => {\n        this._forecastEvent = event;\n      }\n    );\n  }\n\n  public connectedCallback() {\n    super.connectedCallback();\n    if (this.hasUpdated) {\n      this._subscribeForecastEvents();\n    }\n  }\n\n  public disconnectedCallback(): void {\n    super.disconnectedCallback();\n    this._unsubscribeForecastEvents();\n  }\n\n  protected shouldUpdate(changedProps: PropertyValues): boolean {\n    if (changedProps.has(\"stateObj\")) {\n      return true;\n    }\n\n    const oldHass = changedProps.get(\"hass\") as HomeAssistant | undefined;\n    if (\n      !oldHass ||\n      oldHass.locale !== this.hass.locale ||\n      oldHass.config.unit_system !== this.hass.config.unit_system\n    ) {\n      return true;\n    }\n\n    return false;\n  }\n\n  protected willUpdate(changedProps: PropertyValues): void {\n    super.willUpdate(changedProps);\n\n    if ((changedProps.has(\"stateObj\") || !this._subscribed) && this.stateObj) {\n      const oldState = changedProps.get(\"stateObj\") as\n        | WeatherEntity\n        | undefined;\n      if (\n        oldState?.entity_id !== this.stateObj?.entity_id ||\n        !this._subscribed\n      ) {\n        this._forecastType = getDefaultForecastType(this.stateObj);\n        this._subscribeForecastEvents();\n      }\n    } else if (changedProps.has(\"_forecastType\")) {\n      this._subscribeForecastEvents();\n    }\n  }\n\n  private _supportedForecasts = memoizeOne((stateObj: WeatherEntity) =>\n    getSupportedForecastTypes(stateObj)\n  );\n\n  protected render() {\n    if (!this.hass || !this.stateObj) {\n      return nothing;\n    }\n\n    const supportedForecasts = this._supportedForecasts(this.stateObj);\n\n    const forecastData = getForecast(\n      this.stateObj.attributes,\n      this._forecastEvent\n    );\n    const forecast = forecastData?.forecast;\n    const hourly = forecastData?.type === \"hourly\";\n    const dayNight = forecastData?.type === \"twice_daily\";\n\n    return html`\n      ${this._showValue(this.stateObj.attributes.temperature)\n        ? html`\n            <div class=\"flex\">\n              <ha-svg-icon .path=${mdiThermometer}></ha-svg-icon>\n              <div class=\"main\">\n                ${this.hass.localize(\"ui.card.weather.attributes.temperature\")}\n              </div>\n              <div>\n                ${this.hass.formatEntityAttributeValue(\n                  this.stateObj,\n                  \"temperature\"\n                )}\n              </div>\n            </div>\n          `\n        : \"\"}\n      ${this._showValue(this.stateObj.attributes.pressure)\n        ? html`\n            <div class=\"flex\">\n              <ha-svg-icon .path=${mdiGauge}></ha-svg-icon>\n              <div class=\"main\">\n                ${this.hass.localize(\"ui.card.weather.attributes.air_pressure\")}\n              </div>\n              <div>\n                ${this.hass.formatEntityAttributeValue(\n                  this.stateObj,\n                  \"pressure\"\n                )}\n              </div>\n            </div>\n          `\n        : \"\"}\n      ${this._showValue(this.stateObj.attributes.humidity)\n        ? html`\n            <div class=\"flex\">\n              <ha-svg-icon .path=${mdiWaterPercent}></ha-svg-icon>\n              <div class=\"main\">\n                ${this.hass.localize(\"ui.card.weather.attributes.humidity\")}\n              </div>\n              <div>\n                ${this.hass.formatEntityAttributeValue(\n                  this.stateObj,\n                  \"humidity\"\n                )}\n              </div>\n            </div>\n          `\n        : \"\"}\n      ${this._showValue(this.stateObj.attributes.wind_speed)\n        ? html`\n            <div class=\"flex\">\n              <ha-svg-icon .path=${mdiWeatherWindy}></ha-svg-icon>\n              <div class=\"main\">\n                ${this.hass.localize(\"ui.card.weather.attributes.wind_speed\")}\n              </div>\n              <div>\n                ${getWind(\n                  this.hass,\n                  this.stateObj,\n                  this.stateObj.attributes.wind_speed!,\n                  this.stateObj.attributes.wind_bearing\n                )}\n              </div>\n            </div>\n          `\n        : \"\"}\n      ${this._showValue(this.stateObj.attributes.visibility)\n        ? html`\n            <div class=\"flex\">\n              <ha-svg-icon .path=${mdiEye}></ha-svg-icon>\n              <div class=\"main\">\n                ${this.hass.localize(\"ui.card.weather.attributes.visibility\")}\n              </div>\n              <div>\n                ${this.hass.formatEntityAttributeValue(\n                  this.stateObj,\n                  \"visibility\"\n                )}\n              </div>\n            </div>\n          `\n        : \"\"}\n      ${forecast\n        ? html`\n            <div class=\"section\">\n              ${this.hass.localize(\"ui.card.weather.forecast\")}:\n            </div>\n            ${supportedForecasts.length > 1\n              ? html`<mwc-tab-bar\n                  .activeIndex=${supportedForecasts.findIndex(\n                    (item) => item === this._forecastType\n                  )}\n                  @MDCTabBar:activated=${this._handleForecastTypeChanged}\n                >\n                  ${supportedForecasts.map(\n                    (forecastType) =>\n                      html`<mwc-tab\n                        .label=${this.hass!.localize(\n                          `ui.card.weather.${forecastType}`\n                        )}\n                      ></mwc-tab>`\n                  )}\n                </mwc-tab-bar>`\n              : nothing}\n            ${forecast.map((item) =>\n              this._showValue(item.templow) || this._showValue(item.temperature)\n                ? html`<div class=\"flex\">\n                    ${item.condition\n                      ? html`\n                          <ha-svg-icon\n                            .path=${weatherIcons[item.condition]}\n                          ></ha-svg-icon>\n                        `\n                      : \"\"}\n                    <div class=\"main\">\n                      ${dayNight\n                        ? html`\n                            ${formatDateWeekdayDay(\n                              new Date(item.datetime),\n                              this.hass!.locale,\n                              this.hass!.config\n                            )}\n                            (${item.is_daytime !== false\n                              ? this.hass!.localize(\"ui.card.weather.day\")\n                              : this.hass!.localize(\"ui.card.weather.night\")})\n                          `\n                        : hourly\n                          ? html`\n                              ${formatTimeWeekday(\n                                new Date(item.datetime),\n                                this.hass!.locale,\n                                this.hass!.config\n                              )}\n                            `\n                          : html`\n                              ${formatDateWeekdayDay(\n                                new Date(item.datetime),\n                                this.hass!.locale,\n                                this.hass!.config\n                              )}\n                            `}\n                    </div>\n                    <div class=\"templow\">\n                      ${this._showValue(item.templow)\n                        ? this.hass.formatEntityAttributeValue(\n                            this.stateObj!,\n                            \"templow\",\n                            item.templow\n                          )\n                        : hourly\n                          ? \"\"\n                          : \"—\"}\n                    </div>\n                    <div class=\"temp\">\n                      ${this._showValue(item.temperature)\n                        ? this.hass.formatEntityAttributeValue(\n                            this.stateObj!,\n                            \"temperature\",\n                            item.temperature\n                          )\n                        : \"—\"}\n                    </div>\n                  </div>`\n                : \"\"\n            )}\n          `\n        : \"\"}\n      ${this.stateObj.attributes.attribution\n        ? html`\n            <div class=\"attribution\">\n              ${this.stateObj.attributes.attribution}\n            </div>\n          `\n        : \"\"}\n    `;\n  }\n\n  private _handleForecastTypeChanged(ev: CustomEvent): void {\n    this._forecastType = this._supportedForecasts(this.stateObj!)[\n      ev.detail.index\n    ];\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      ha-svg-icon {\n        color: var(--paper-item-icon-color);\n        margin-left: 8px;\n        margin-inline-start: 8px;\n        margin-inline-end: initial;\n      }\n\n      mwc-tab-bar {\n        margin-bottom: 4px;\n      }\n\n      .section {\n        margin: 16px 0 8px 0;\n        font-size: 1.2em;\n      }\n\n      .flex {\n        display: flex;\n        height: 32px;\n        align-items: center;\n      }\n      .flex > div:last-child {\n        direction: ltr;\n      }\n\n      .main {\n        flex: 1;\n        margin-left: 24px;\n        margin-inline-start: 24px;\n        margin-inline-end: initial;\n      }\n\n      .temp,\n      .templow {\n        min-width: 48px;\n        text-align: right;\n        direction: ltr;\n      }\n\n      .templow {\n        margin: 0 16px;\n        color: var(--secondary-text-color);\n      }\n\n      .attribution {\n        color: var(--secondary-text-color);\n        text-align: center;\n      }\n    `;\n  }\n\n  private _showValue(item: number | string | undefined): boolean {\n    return typeof item !== \"undefined\" && item !== null;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"more-info-weather\": MoreInfoWeather;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}