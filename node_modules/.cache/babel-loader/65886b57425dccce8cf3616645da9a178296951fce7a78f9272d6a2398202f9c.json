{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport \"element-internals-polyfill\";\nimport { MdCircularProgress } from \"@material/web/progress/circular-progress\";\nimport { css } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nexport let HaCircularProgress = _decorate([customElement(\"ha-circular-progress\")], function (_initialize, _MdCircularProgress) {\n  class HaCircularProgress extends _MdCircularProgress {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaCircularProgress,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: \"aria-label\",\n        type: String\n      })],\n      key: \"ariaLabel\",\n      value() {\n        return \"Loading\";\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"size\",\n      value() {\n        return \"medium\";\n      }\n    }, {\n      kind: \"method\",\n      key: \"updated\",\n      value: function updated(changedProps) {\n        _get(_getPrototypeOf(HaCircularProgress.prototype), \"updated\", this).call(this, changedProps);\n        if (changedProps.has(\"size\")) {\n          switch (this.size) {\n            case \"tiny\":\n              this.style.setProperty(\"--md-circular-progress-size\", \"16px\");\n              break;\n            case \"small\":\n              this.style.setProperty(\"--md-circular-progress-size\", \"28px\");\n              break;\n            // medium is default size\n            case \"medium\":\n              this.style.setProperty(\"--md-circular-progress-size\", \"48px\");\n              break;\n            case \"large\":\n              this.style.setProperty(\"--md-circular-progress-size\", \"68px\");\n              break;\n          }\n        }\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [..._get(_getPrototypeOf(HaCircularProgress), \"styles\", this), css`\n        :host {\n          --md-sys-color-primary: var(--primary-color);\n          --md-circular-progress-size: 48px;\n        }\n      `];\n      }\n    }]\n  };\n}, MdCircularProgress);","map":{"version":3,"names":["MdCircularProgress","css","customElement","property","HaCircularProgress","_decorate","_initialize","_MdCircularProgress","constructor","args","F","d","kind","decorators","attribute","type","String","key","value","updated","changedProps","_get","_getPrototypeOf","prototype","call","has","size","style","setProperty","static","styles"],"sources":["/Users/sercanardil/Desktop/frontend/src/components/ha-circular-progress.ts"],"sourcesContent":["import \"element-internals-polyfill\";\nimport { MdCircularProgress } from \"@material/web/progress/circular-progress\";\nimport { CSSResult, PropertyValues, css } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\n\n@customElement(\"ha-circular-progress\")\nexport class HaCircularProgress extends MdCircularProgress {\n  @property({ attribute: \"aria-label\", type: String }) public ariaLabel =\n    \"Loading\";\n\n  @property() public size: \"tiny\" | \"small\" | \"medium\" | \"large\" = \"medium\";\n\n  protected updated(changedProps: PropertyValues) {\n    super.updated(changedProps);\n\n    if (changedProps.has(\"size\")) {\n      switch (this.size) {\n        case \"tiny\":\n          this.style.setProperty(\"--md-circular-progress-size\", \"16px\");\n          break;\n        case \"small\":\n          this.style.setProperty(\"--md-circular-progress-size\", \"28px\");\n          break;\n        // medium is default size\n        case \"medium\":\n          this.style.setProperty(\"--md-circular-progress-size\", \"48px\");\n          break;\n        case \"large\":\n          this.style.setProperty(\"--md-circular-progress-size\", \"68px\");\n          break;\n      }\n    }\n  }\n\n  static get styles(): CSSResult[] {\n    return [\n      ...super.styles,\n      css`\n        :host {\n          --md-sys-color-primary: var(--primary-color);\n          --md-circular-progress-size: 48px;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-circular-progress\": HaCircularProgress;\n  }\n}\n"],"mappings":";;;AAAA,OAAO,4BAA4B;AACnC,SAASA,kBAAkB,QAAQ,0CAA0C;AAC7E,SAAoCC,GAAG,QAAQ,KAAK;AACpD,SAASC,aAAa,EAAEC,QAAQ,QAAQ,gBAAgB;AAExD,WACaC,kBAAkB,GAAAC,SAAA,EAD9BH,aAAa,CAAC,sBAAsB,CAAC,aAAAI,WAAA,EAAAC,mBAAA;EAAtC,MACaH,kBAAkB,SAAAG,mBAAA,CAA4B;IAAAC,YAAA,GAAAC,IAAA;MAAA,SAAAA,IAAA;MAAAH,WAAA;IAAA;EAuC3D;EAAC;IAAAI,CAAA,EAvCYN,kBAAkB;IAAAO,CAAA;MAAAC,IAAA;MAAAC,UAAA,GAC5BV,QAAQ,CAAC;QAAEW,SAAS,EAAE,YAAY;QAAEC,IAAI,EAAEC;MAAO,CAAC,CAAC;MAAAC,GAAA;MAAAC,MAAA;QAAA,OAClD,SAAS;MAAA;IAAA;MAAAN,IAAA;MAAAC,UAAA,GAEVV,QAAQ,CAAC,CAAC;MAAAc,GAAA;MAAAC,MAAA;QAAA,OAAsD,QAAQ;MAAA;IAAA;MAAAN,IAAA;MAAAK,GAAA;MAAAC,KAAA,EAEzE,SAAAC,QAAkBC,YAA4B,EAAE;QAC9CC,IAAA,CAAAC,eAAA,CAPSlB,kBAAkB,CAAAmB,SAAA,oBAAAC,IAAA,OAObJ,YAAY;QAE1B,IAAIA,YAAY,CAACK,GAAG,CAAC,MAAM,CAAC,EAAE;UAC5B,QAAQ,IAAI,CAACC,IAAI;YACf,KAAK,MAAM;cACT,IAAI,CAACC,KAAK,CAACC,WAAW,CAAC,6BAA6B,EAAE,MAAM,CAAC;cAC7D;YACF,KAAK,OAAO;cACV,IAAI,CAACD,KAAK,CAACC,WAAW,CAAC,6BAA6B,EAAE,MAAM,CAAC;cAC7D;YACF;YACA,KAAK,QAAQ;cACX,IAAI,CAACD,KAAK,CAACC,WAAW,CAAC,6BAA6B,EAAE,MAAM,CAAC;cAC7D;YACF,KAAK,OAAO;cACV,IAAI,CAACD,KAAK,CAACC,WAAW,CAAC,6BAA6B,EAAE,MAAM,CAAC;cAC7D;UACJ;QACF;MACF;IAAC;MAAAhB,IAAA;MAAAiB,MAAA;MAAAZ,GAAA;MAAAC,KAAA,EAED,SAAAY,OAAA,EAAiC;QAC/B,OAAO,CACL,GAAAT,IAAA,CAAAC,eAAA,CA9BOlB,kBAAkB,kBA8BV,EACfH,GAAI;AACV;AACA;AACA;AACA;AACA,OAAO,CACF;MACH;IAAC;EAAA;AAAA,GAtCqCD,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}