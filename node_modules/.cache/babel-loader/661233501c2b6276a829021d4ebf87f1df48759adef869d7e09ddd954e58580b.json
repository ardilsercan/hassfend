{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport { LitElement, css, html, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { debounce } from \"../../../common/util/debounce\";\nimport \"../../../components/ha-slider\";\nimport \"../../../components/ha-textfield\";\nimport { isUnavailableState } from \"../../../data/entity\";\nimport { setValue } from \"../../../data/input_text\";\nimport { loadPolyfillIfNeeded } from \"../../../resources/resize-observer.polyfill\";\nimport { hasConfigOrEntityChanged } from \"../common/has-changed\";\nimport \"../components/hui-generic-entity-row\";\nimport { createEntityNotFoundWarning } from \"../components/hui-warning\";\nlet HuiInputNumberEntityRow = _decorate([customElement(\"hui-input-number-entity-row\")], function (_initialize, _LitElement) {\n  class HuiInputNumberEntityRow extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HuiInputNumberEntityRow,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_config\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_loaded\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_updated\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_resizeObserver\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"setConfig\",\n      value: function setConfig(config) {\n        if (!config) {\n          throw new Error(\"Invalid configuration\");\n        }\n        this._config = config;\n      }\n    }, {\n      kind: \"method\",\n      key: \"connectedCallback\",\n      value: function connectedCallback() {\n        _get(_getPrototypeOf(HuiInputNumberEntityRow.prototype), \"connectedCallback\", this).call(this);\n        if (this._updated && !this._loaded) {\n          this._initialLoad();\n        }\n        this._attachObserver();\n      }\n    }, {\n      kind: \"method\",\n      key: \"disconnectedCallback\",\n      value: function disconnectedCallback() {\n        var _this$_resizeObserver;\n        _get(_getPrototypeOf(HuiInputNumberEntityRow.prototype), \"disconnectedCallback\", this).call(this);\n        (_this$_resizeObserver = this._resizeObserver) === null || _this$_resizeObserver === void 0 || _this$_resizeObserver.disconnect();\n      }\n    }, {\n      kind: \"method\",\n      key: \"firstUpdated\",\n      value: function firstUpdated() {\n        this._updated = true;\n        if (this.isConnected && !this._loaded) {\n          this._initialLoad();\n        }\n        this._attachObserver();\n      }\n    }, {\n      kind: \"method\",\n      key: \"shouldUpdate\",\n      value: function shouldUpdate(changedProps) {\n        return hasConfigOrEntityChanged(this, changedProps);\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this._config || !this.hass) {\n          return nothing;\n        }\n        const stateObj = this.hass.states[this._config.entity];\n        if (!stateObj) {\n          return html`\n        <hui-warning>\n          ${createEntityNotFoundWarning(this.hass, this._config.entity)}\n        </hui-warning>\n      `;\n        }\n        return html`\n      <hui-generic-entity-row .hass=${this.hass} .config=${this._config}>\n        ${stateObj.attributes.mode === \"slider\" ? html`\n              <div class=\"flex\">\n                <ha-slider\n                  labeled\n                  .disabled=${isUnavailableState(stateObj.state)}\n                  .step=${Number(stateObj.attributes.step)}\n                  .min=${Number(stateObj.attributes.min)}\n                  .max=${Number(stateObj.attributes.max)}\n                  .value=${stateObj.state}\n                  @change=${this._selectedValueChanged}\n                ></ha-slider>\n                <span class=\"state\">\n                  ${this.hass.formatEntityState(stateObj)}\n                </span>\n              </div>\n            ` : html`\n              <div class=\"flex state\">\n                <ha-textfield\n                  .disabled=${isUnavailableState(stateObj.state)}\n                  pattern=\"[0-9]+([\\\\.][0-9]+)?\"\n                  .step=${Number(stateObj.attributes.step)}\n                  .min=${Number(stateObj.attributes.min)}\n                  .max=${Number(stateObj.attributes.max)}\n                  .value=${Number(stateObj.state).toString()}\n                  .suffix=${stateObj.attributes.unit_of_measurement || \"\"}\n                  type=\"number\"\n                  @change=${this._selectedValueChanged}\n                >\n                </ha-textfield>\n              </div>\n            `}\n      </hui-generic-entity-row>\n    `;\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css`\n      :host {\n        display: block;\n      }\n      .flex {\n        display: flex;\n        align-items: center;\n        justify-content: flex-end;\n        flex-grow: 2;\n      }\n      .state {\n        min-width: 45px;\n        text-align: end;\n      }\n      ha-textfield {\n        text-align: end;\n      }\n      ha-slider {\n        width: 100%;\n        max-width: 200px;\n      }\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_initialLoad\",\n      value: async function _initialLoad() {\n        this._loaded = true;\n        await this.updateComplete;\n        this._measureCard();\n      }\n    }, {\n      kind: \"method\",\n      key: \"_measureCard\",\n      value: function _measureCard() {\n        if (!this.isConnected) {\n          return;\n        }\n        const element = this.shadowRoot.querySelector(\".state\");\n        if (!element) {\n          return;\n        }\n        element.hidden = this.clientWidth <= 300;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_attachObserver\",\n      value: async function _attachObserver() {\n        if (!this._resizeObserver) {\n          await loadPolyfillIfNeeded();\n          this._resizeObserver = new ResizeObserver(debounce(() => this._measureCard(), 250, false));\n        }\n        if (this.isConnected) {\n          this._resizeObserver.observe(this);\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_selectedValueChanged\",\n      value: function _selectedValueChanged(ev) {\n        const stateObj = this.hass.states[this._config.entity];\n        if (ev.target.value !== stateObj.state) {\n          setValue(this.hass, stateObj.entity_id, ev.target.value);\n        }\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["LitElement","css","html","nothing","customElement","property","state","debounce","isUnavailableState","setValue","loadPolyfillIfNeeded","hasConfigOrEntityChanged","createEntityNotFoundWarning","HuiInputNumberEntityRow","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","setConfig","config","Error","_config","connectedCallback","_get","_getPrototypeOf","prototype","call","_updated","_loaded","_initialLoad","_attachObserver","disconnectedCallback","_this$_resizeObserver","_resizeObserver","disconnect","firstUpdated","isConnected","shouldUpdate","changedProps","render","hass","stateObj","states","entity","attributes","mode","Number","step","min","max","_selectedValueChanged","formatEntityState","toString","unit_of_measurement","static","styles","updateComplete","_measureCard","element","shadowRoot","querySelector","hidden","clientWidth","ResizeObserver","observe","ev","target","entity_id"],"sources":["/Users/sercanardil/Desktop/frontend/src/panels/lovelace/entity-rows/hui-input-number-entity-row.ts"],"sourcesContent":["import {\n  CSSResultGroup,\n  LitElement,\n  PropertyValues,\n  css,\n  html,\n  nothing,\n} from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { debounce } from \"../../../common/util/debounce\";\nimport \"../../../components/ha-slider\";\nimport \"../../../components/ha-textfield\";\nimport { isUnavailableState } from \"../../../data/entity\";\nimport { setValue } from \"../../../data/input_text\";\nimport { loadPolyfillIfNeeded } from \"../../../resources/resize-observer.polyfill\";\nimport { HomeAssistant } from \"../../../types\";\nimport { hasConfigOrEntityChanged } from \"../common/has-changed\";\nimport \"../components/hui-generic-entity-row\";\nimport { createEntityNotFoundWarning } from \"../components/hui-warning\";\nimport { EntityConfig, LovelaceRow } from \"./types\";\n\n@customElement(\"hui-input-number-entity-row\")\nclass HuiInputNumberEntityRow extends LitElement implements LovelaceRow {\n  @property({ attribute: false }) public hass?: HomeAssistant;\n\n  @state() private _config?: EntityConfig;\n\n  private _loaded?: boolean;\n\n  private _updated?: boolean;\n\n  private _resizeObserver?: ResizeObserver;\n\n  public setConfig(config: EntityConfig): void {\n    if (!config) {\n      throw new Error(\"Invalid configuration\");\n    }\n    this._config = config;\n  }\n\n  public connectedCallback(): void {\n    super.connectedCallback();\n    if (this._updated && !this._loaded) {\n      this._initialLoad();\n    }\n    this._attachObserver();\n  }\n\n  public disconnectedCallback(): void {\n    super.disconnectedCallback();\n    this._resizeObserver?.disconnect();\n  }\n\n  protected firstUpdated(): void {\n    this._updated = true;\n    if (this.isConnected && !this._loaded) {\n      this._initialLoad();\n    }\n    this._attachObserver();\n  }\n\n  protected shouldUpdate(changedProps: PropertyValues): boolean {\n    return hasConfigOrEntityChanged(this, changedProps);\n  }\n\n  protected render() {\n    if (!this._config || !this.hass) {\n      return nothing;\n    }\n\n    const stateObj = this.hass.states[this._config.entity];\n\n    if (!stateObj) {\n      return html`\n        <hui-warning>\n          ${createEntityNotFoundWarning(this.hass, this._config.entity)}\n        </hui-warning>\n      `;\n    }\n\n    return html`\n      <hui-generic-entity-row .hass=${this.hass} .config=${this._config}>\n        ${stateObj.attributes.mode === \"slider\"\n          ? html`\n              <div class=\"flex\">\n                <ha-slider\n                  labeled\n                  .disabled=${isUnavailableState(stateObj.state)}\n                  .step=${Number(stateObj.attributes.step)}\n                  .min=${Number(stateObj.attributes.min)}\n                  .max=${Number(stateObj.attributes.max)}\n                  .value=${stateObj.state}\n                  @change=${this._selectedValueChanged}\n                ></ha-slider>\n                <span class=\"state\">\n                  ${this.hass.formatEntityState(stateObj)}\n                </span>\n              </div>\n            `\n          : html`\n              <div class=\"flex state\">\n                <ha-textfield\n                  .disabled=${isUnavailableState(stateObj.state)}\n                  pattern=\"[0-9]+([\\\\.][0-9]+)?\"\n                  .step=${Number(stateObj.attributes.step)}\n                  .min=${Number(stateObj.attributes.min)}\n                  .max=${Number(stateObj.attributes.max)}\n                  .value=${Number(stateObj.state).toString()}\n                  .suffix=${stateObj.attributes.unit_of_measurement || \"\"}\n                  type=\"number\"\n                  @change=${this._selectedValueChanged}\n                >\n                </ha-textfield>\n              </div>\n            `}\n      </hui-generic-entity-row>\n    `;\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      :host {\n        display: block;\n      }\n      .flex {\n        display: flex;\n        align-items: center;\n        justify-content: flex-end;\n        flex-grow: 2;\n      }\n      .state {\n        min-width: 45px;\n        text-align: end;\n      }\n      ha-textfield {\n        text-align: end;\n      }\n      ha-slider {\n        width: 100%;\n        max-width: 200px;\n      }\n    `;\n  }\n\n  private async _initialLoad(): Promise<void> {\n    this._loaded = true;\n    await this.updateComplete;\n    this._measureCard();\n  }\n\n  private _measureCard() {\n    if (!this.isConnected) {\n      return;\n    }\n    const element = this.shadowRoot!.querySelector(\".state\") as HTMLElement;\n    if (!element) {\n      return;\n    }\n    element.hidden = this.clientWidth <= 300;\n  }\n\n  private async _attachObserver(): Promise<void> {\n    if (!this._resizeObserver) {\n      await loadPolyfillIfNeeded();\n      this._resizeObserver = new ResizeObserver(\n        debounce(() => this._measureCard(), 250, false)\n      );\n    }\n    if (this.isConnected) {\n      this._resizeObserver.observe(this);\n    }\n  }\n\n  private _selectedValueChanged(ev: Event): void {\n    const stateObj = this.hass!.states[this._config!.entity];\n\n    if ((ev.target as HTMLInputElement).value !== stateObj.state) {\n      setValue(\n        this.hass!,\n        stateObj.entity_id,\n        (ev.target as HTMLInputElement).value\n      );\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-input-number-entity-row\": HuiInputNumberEntityRow;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}