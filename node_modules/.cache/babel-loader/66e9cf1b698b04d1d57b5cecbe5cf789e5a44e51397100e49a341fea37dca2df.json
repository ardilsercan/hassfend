{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/helpers/regeneratorRuntime\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _createForOfIteratorHelper from \"@babel/runtime/helpers/createForOfIteratorHelper\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _decorate from \"@babel/runtime/helpers/decorate\";\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4;\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.object.entries.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport { differenceInDays, endOfToday, isToday, startOfToday } from \"date-fns/esm\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport memoizeOne from \"memoize-one\";\nimport { hex2rgb, lab2rgb, rgb2hex, rgb2lab } from \"../../../../common/color/convert-color\";\nimport { labBrighten, labDarken } from \"../../../../common/color/lab\";\nimport { formatNumber } from \"../../../../common/number/format_number\";\nimport \"../../../../components/chart/ha-chart-base\";\nimport \"../../../../components/ha-card\";\nimport { getEnergyDataCollection, getEnergySolarForecasts } from \"../../../../data/energy\";\nimport { getStatisticLabel } from \"../../../../data/recorder\";\nimport { SubscribeMixin } from \"../../../../mixins/subscribe-mixin\";\nimport { hasConfigChanged } from \"../../common/has-changed\";\nimport { getCommonOptions } from \"./common/energy-chart-options\";\nexport var HuiEnergySolarGraphCard = _decorate([customElement(\"hui-energy-solar-graph-card\")], function (_initialize, _SubscribeMixin) {\n  var HuiEnergySolarGraphCard = /*#__PURE__*/function (_SubscribeMixin2) {\n    _inherits(HuiEnergySolarGraphCard, _SubscribeMixin2);\n    function HuiEnergySolarGraphCard() {\n      var _this;\n      _classCallCheck(this, HuiEnergySolarGraphCard);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, HuiEnergySolarGraphCard, [].concat(args));\n      _initialize(_assertThisInitialized(_this));\n      return _this;\n    }\n    return _createClass(HuiEnergySolarGraphCard);\n  }(_SubscribeMixin);\n  return {\n    F: HuiEnergySolarGraphCard,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_config\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_chartData\",\n      value: function value() {\n        return {\n          datasets: []\n        };\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_start\",\n      value: function value() {\n        return startOfToday();\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_end\",\n      value: function value() {\n        return endOfToday();\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_compareStart\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_compareEnd\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"hassSubscribeRequiredHostProps\",\n      value: function value() {\n        return [\"_config\"];\n      }\n    }, {\n      kind: \"method\",\n      key: \"hassSubscribe\",\n      value: function hassSubscribe() {\n        var _this$_config,\n          _this2 = this;\n        return [getEnergyDataCollection(this.hass, {\n          key: (_this$_config = this._config) === null || _this$_config === void 0 ? void 0 : _this$_config.collection_key\n        }).subscribe(function (data) {\n          return _this2._getStatistics(data);\n        })];\n      }\n    }, {\n      kind: \"method\",\n      key: \"getCardSize\",\n      value: function getCardSize() {\n        return 3;\n      }\n    }, {\n      kind: \"method\",\n      key: \"setConfig\",\n      value: function setConfig(config) {\n        this._config = config;\n      }\n    }, {\n      kind: \"method\",\n      key: \"shouldUpdate\",\n      value: function shouldUpdate(changedProps) {\n        return hasConfigChanged(this, changedProps) || changedProps.size > 1 || !changedProps.has(\"hass\");\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this.hass || !this._config) {\n          return nothing;\n        }\n        return html(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      <ha-card>\\n        \", \"\\n        <div\\n          class=\\\"content \", \"\\\"\\n        >\\n          <ha-chart-base\\n            .hass=\", \"\\n            .data=\", \"\\n            .options=\", \"\\n            chart-type=\\\"bar\\\"\\n          ></ha-chart-base>\\n          \", \"\\n        </div>\\n      </ha-card>\\n    \"])), this._config.title ? html(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"<h1 class=\\\"card-header\\\">\", \"</h1>\"])), this._config.title) : \"\", classMap({\n          \"has-header\": !!this._config.title\n        }), this.hass, this._chartData, this._createOptions(this._start, this._end, this.hass.locale, this.hass.config, this._compareStart, this._compareEnd), !this._chartData.datasets.length ? html(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"<div class=\\\"no-data\\\">\\n                \", \"\\n              </div>\"])), isToday(this._start) ? this.hass.localize(\"ui.panel.lovelace.cards.energy.no_data\") : this.hass.localize(\"ui.panel.lovelace.cards.energy.no_data_period\")) : \"\");\n      }\n    }, {\n      kind: \"field\",\n      key: \"_createOptions\",\n      value: function value() {\n        var _this3 = this;\n        return memoizeOne(function (start, end, locale, config, compareStart, compareEnd) {\n          var commonOptions = getCommonOptions(start, end, locale, config, \"kWh\", compareStart, compareEnd);\n          var options = Object.assign(Object.assign({}, commonOptions), {}, {\n            plugins: Object.assign(Object.assign({}, commonOptions.plugins), {}, {\n              tooltip: Object.assign(Object.assign({}, commonOptions.plugins.tooltip), {}, {\n                callbacks: Object.assign(Object.assign({}, commonOptions.plugins.tooltip.callbacks), {}, {\n                  footer: function footer(contexts) {\n                    var production_contexts = contexts.filter(function (c) {\n                      var _c$dataset;\n                      return ((_c$dataset = c.dataset) === null || _c$dataset === void 0 ? void 0 : _c$dataset.stack) === \"solar\";\n                    });\n                    if (production_contexts.length < 2) {\n                      return [];\n                    }\n                    var total = 0;\n                    var _iterator = _createForOfIteratorHelper(production_contexts),\n                      _step;\n                    try {\n                      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                        var context = _step.value;\n                        total += context.dataset.data[context.dataIndex].y;\n                      }\n                    } catch (err) {\n                      _iterator.e(err);\n                    } finally {\n                      _iterator.f();\n                    }\n                    if (total === 0) {\n                      return [];\n                    }\n                    return [_this3.hass.localize(\"ui.panel.lovelace.cards.energy.energy_solar_graph.total_produced\", {\n                      num: formatNumber(total, locale)\n                    })];\n                  }\n                })\n              })\n            }),\n            elements: {\n              line: {\n                tension: 0.3,\n                borderWidth: 1.5\n              },\n              bar: {\n                borderWidth: 1.5,\n                borderRadius: 4\n              },\n              point: {\n                hitRadius: 5\n              }\n            }\n          });\n          return options;\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_getStatistics\",\n      value: function () {\n        var _getStatistics2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(energyData) {\n          var solarSources, forecasts, datasets, computedStyles, solarColor;\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                solarSources = energyData.prefs.energy_sources.filter(function (source) {\n                  return source.type === \"solar\";\n                });\n                if (!solarSources.some(function (source) {\n                  var _source$config_entry_;\n                  return (_source$config_entry_ = source.config_entry_solar_forecast) === null || _source$config_entry_ === void 0 ? void 0 : _source$config_entry_.length;\n                })) {\n                  _context.next = 10;\n                  break;\n                }\n                _context.prev = 2;\n                _context.next = 5;\n                return getEnergySolarForecasts(this.hass);\n              case 5:\n                forecasts = _context.sent;\n                _context.next = 10;\n                break;\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](2);\n              case 10:\n                datasets = [];\n                computedStyles = getComputedStyle(this);\n                solarColor = computedStyles.getPropertyValue(\"--energy-solar-color\").trim();\n                datasets.push.apply(datasets, _toConsumableArray(this._processDataSet(energyData.stats, energyData.statsMetadata, solarSources, solarColor, computedStyles)));\n                if (energyData.statsCompare) {\n                  // Add empty dataset to align the bars\n                  datasets.push({\n                    order: 0,\n                    data: []\n                  });\n                  datasets.push({\n                    order: 999,\n                    data: [],\n                    xAxisID: \"xAxisCompare\"\n                  });\n                  datasets.push.apply(datasets, _toConsumableArray(this._processDataSet(energyData.statsCompare, energyData.statsMetadata, solarSources, solarColor, computedStyles, true)));\n                }\n                if (forecasts) {\n                  datasets.push.apply(datasets, _toConsumableArray(this._processForecast(energyData.statsMetadata, forecasts, solarSources, computedStyles.getPropertyValue(\"--primary-text-color\"), energyData.start, energyData.end)));\n                }\n                this._start = energyData.start;\n                this._end = energyData.end || endOfToday();\n                this._compareStart = energyData.startCompare;\n                this._compareEnd = energyData.endCompare;\n                this._chartData = {\n                  datasets: datasets\n                };\n              case 21:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee, this, [[2, 8]]);\n        }));\n        function _getStatistics(_x) {\n          return _getStatistics2.apply(this, arguments);\n        }\n        return _getStatistics;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"_processDataSet\",\n      value: function _processDataSet(statistics, statisticsMetaData, solarSources, solarColor, computedStyles) {\n        var _this4 = this;\n        var compare = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n        var data = [];\n        solarSources.forEach(function (source, idx) {\n          var borderColor = computedStyles.getPropertyValue(\"--energy-solar-color-\" + idx).trim();\n          if (borderColor.length === 0) {\n            var modifiedColor = idx > 0 ? _this4.hass.themes.darkMode ? labBrighten(rgb2lab(hex2rgb(solarColor)), idx) : labDarken(rgb2lab(hex2rgb(solarColor)), idx) : undefined;\n            borderColor = modifiedColor ? rgb2hex(lab2rgb(modifiedColor)) : solarColor;\n          }\n          var prevStart = null;\n          var solarProductionData = [];\n\n          // Process solar production data.\n          if (source.stat_energy_from in statistics) {\n            var stats = statistics[source.stat_energy_from];\n            var end;\n            var _iterator2 = _createForOfIteratorHelper(stats),\n              _step2;\n            try {\n              for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                var point = _step2.value;\n                if (point.change === null || point.change === undefined) {\n                  continue;\n                }\n                if (prevStart === point.start) {\n                  continue;\n                }\n                var date = new Date(point.start);\n                solarProductionData.push({\n                  x: date.getTime(),\n                  y: point.change\n                });\n                prevStart = point.start;\n                end = point.end;\n              }\n            } catch (err) {\n              _iterator2.e(err);\n            } finally {\n              _iterator2.f();\n            }\n            if (solarProductionData.length === 1) {\n              solarProductionData.push({\n                x: end,\n                y: 0\n              });\n            }\n          }\n          data.push({\n            label: _this4.hass.localize(\"ui.panel.lovelace.cards.energy.energy_solar_graph.production\", {\n              name: getStatisticLabel(_this4.hass, source.stat_energy_from, statisticsMetaData[source.stat_energy_from])\n            }),\n            borderColor: compare ? borderColor + \"7F\" : borderColor,\n            backgroundColor: compare ? borderColor + \"32\" : borderColor + \"7F\",\n            data: solarProductionData,\n            order: 1,\n            stack: \"solar\",\n            xAxisID: compare ? \"xAxisCompare\" : undefined\n          });\n        });\n        return data;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_processForecast\",\n      value: function _processForecast(statisticsMetaData, forecasts, solarSources, borderColor, start, end) {\n        var _this5 = this;\n        var data = [];\n        var dayDifference = differenceInDays(end || new Date(), start);\n\n        // Process solar forecast data.\n        solarSources.forEach(function (source) {\n          if (source.config_entry_solar_forecast) {\n            var forecastsData = {};\n            source.config_entry_solar_forecast.forEach(function (configEntryId) {\n              if (!forecasts[configEntryId]) {\n                return;\n              }\n              Object.entries(forecasts[configEntryId].wh_hours).forEach(function (_ref) {\n                var _ref2 = _slicedToArray(_ref, 2),\n                  date = _ref2[0],\n                  value = _ref2[1];\n                var dateObj = new Date(date);\n                if (dateObj < start || end && dateObj > end) {\n                  return;\n                }\n                if (dayDifference > 35) {\n                  dateObj.setDate(1);\n                }\n                if (dayDifference > 2) {\n                  dateObj.setHours(0, 0, 0, 0);\n                } else {\n                  dateObj.setMinutes(0, 0, 0);\n                }\n                var time = dateObj.getTime();\n                if (time in forecastsData) {\n                  forecastsData[time] += value;\n                } else {\n                  forecastsData[time] = value;\n                }\n              });\n            });\n            if (forecastsData) {\n              var solarForecastData = [];\n              for (var _i = 0, _Object$entries = Object.entries(forecastsData); _i < _Object$entries.length; _i++) {\n                var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n                  time = _Object$entries$_i[0],\n                  value = _Object$entries$_i[1];\n                solarForecastData.push({\n                  x: Number(time),\n                  y: value / 1000\n                });\n              }\n              if (solarForecastData.length) {\n                data.push({\n                  type: \"line\",\n                  label: _this5.hass.localize(\"ui.panel.lovelace.cards.energy.energy_solar_graph.forecast\", {\n                    name: getStatisticLabel(_this5.hass, source.stat_energy_from, statisticsMetaData[source.stat_energy_from])\n                  }),\n                  fill: false,\n                  stepped: false,\n                  borderColor: borderColor,\n                  borderDash: [7, 5],\n                  pointRadius: 0,\n                  data: solarForecastData\n                });\n              }\n            }\n          }\n        });\n        return data;\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n      ha-card {\\n        height: 100%;\\n      }\\n      .card-header {\\n        padding-bottom: 0;\\n      }\\n      .content {\\n        padding: 16px;\\n      }\\n      .has-header {\\n        padding-top: 0;\\n      }\\n      .no-data {\\n        position: absolute;\\n        height: 100%;\\n        top: 0;\\n        left: 0;\\n        right: 0;\\n        display: flex;\\n        justify-content: center;\\n        align-items: center;\\n        padding: 20%;\\n        margin-left: 32px;\\n        margin-inline-start: 32px;\\n        margin-inline-end: initial;\\n        box-sizing: border-box;\\n      }\\n    \"])));\n      }\n    }]\n  };\n}, SubscribeMixin(LitElement));","map":{"version":3,"names":["differenceInDays","endOfToday","isToday","startOfToday","css","html","LitElement","nothing","customElement","property","state","classMap","memoizeOne","hex2rgb","lab2rgb","rgb2hex","rgb2lab","labBrighten","labDarken","formatNumber","getEnergyDataCollection","getEnergySolarForecasts","getStatisticLabel","SubscribeMixin","hasConfigChanged","getCommonOptions","HuiEnergySolarGraphCard","_decorate","_initialize","_SubscribeMixin","_SubscribeMixin2","_inherits","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_assertThisInitialized","_createClass","F","d","kind","decorators","attribute","key","value","datasets","hassSubscribe","_this$_config","_this2","hass","_config","collection_key","subscribe","data","_getStatistics","getCardSize","setConfig","config","shouldUpdate","changedProps","size","has","render","_templateObject","_taggedTemplateLiteral","title","_templateObject2","_chartData","_createOptions","_start","_end","locale","_compareStart","_compareEnd","_templateObject3","localize","_this3","start","end","compareStart","compareEnd","commonOptions","options","Object","assign","plugins","tooltip","callbacks","footer","contexts","production_contexts","filter","c","_c$dataset","dataset","stack","total","_iterator","_createForOfIteratorHelper","_step","s","n","done","context","dataIndex","y","err","e","f","num","elements","line","tension","borderWidth","bar","borderRadius","point","hitRadius","_getStatistics2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","energyData","solarSources","forecasts","computedStyles","solarColor","wrap","_callee$","_context","prev","next","prefs","energy_sources","source","type","some","_source$config_entry_","config_entry_solar_forecast","sent","t0","getComputedStyle","getPropertyValue","trim","push","apply","_toConsumableArray","_processDataSet","stats","statsMetadata","statsCompare","order","xAxisID","_processForecast","startCompare","endCompare","stop","_x","statistics","statisticsMetaData","_this4","compare","undefined","forEach","idx","borderColor","modifiedColor","themes","darkMode","prevStart","solarProductionData","stat_energy_from","_iterator2","_step2","change","date","Date","x","getTime","label","name","backgroundColor","_this5","dayDifference","forecastsData","configEntryId","entries","wh_hours","_ref","_ref2","_slicedToArray","dateObj","setDate","setHours","setMinutes","time","solarForecastData","_i","_Object$entries","_Object$entries$_i","Number","fill","stepped","borderDash","pointRadius","static","styles","_templateObject4"],"sources":["/workspaces/frontend/src/panels/lovelace/cards/energy/hui-energy-solar-graph-card.ts"],"sourcesContent":["import {\n  ChartData,\n  ChartDataset,\n  ChartOptions,\n  ScatterDataPoint,\n} from \"chart.js\";\nimport {\n  differenceInDays,\n  endOfToday,\n  isToday,\n  startOfToday,\n} from \"date-fns/esm\";\nimport { HassConfig, UnsubscribeFunc } from \"home-assistant-js-websocket\";\nimport {\n  css,\n  CSSResultGroup,\n  html,\n  LitElement,\n  nothing,\n  PropertyValues,\n} from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport memoizeOne from \"memoize-one\";\nimport {\n  hex2rgb,\n  lab2rgb,\n  rgb2hex,\n  rgb2lab,\n} from \"../../../../common/color/convert-color\";\nimport { labBrighten, labDarken } from \"../../../../common/color/lab\";\nimport { formatNumber } from \"../../../../common/number/format_number\";\nimport \"../../../../components/chart/ha-chart-base\";\nimport \"../../../../components/ha-card\";\nimport {\n  EnergyData,\n  EnergySolarForecasts,\n  getEnergyDataCollection,\n  getEnergySolarForecasts,\n  SolarSourceTypeEnergyPreference,\n} from \"../../../../data/energy\";\nimport {\n  getStatisticLabel,\n  Statistics,\n  StatisticsMetaData,\n} from \"../../../../data/recorder\";\nimport { FrontendLocaleData } from \"../../../../data/translation\";\nimport { SubscribeMixin } from \"../../../../mixins/subscribe-mixin\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { LovelaceCard } from \"../../types\";\nimport { EnergySolarGraphCardConfig } from \"../types\";\nimport { hasConfigChanged } from \"../../common/has-changed\";\nimport { getCommonOptions } from \"./common/energy-chart-options\";\n\n@customElement(\"hui-energy-solar-graph-card\")\nexport class HuiEnergySolarGraphCard\n  extends SubscribeMixin(LitElement)\n  implements LovelaceCard\n{\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @state() private _config?: EnergySolarGraphCardConfig;\n\n  @state() private _chartData: ChartData = {\n    datasets: [],\n  };\n\n  @state() private _start = startOfToday();\n\n  @state() private _end = endOfToday();\n\n  @state() private _compareStart?: Date;\n\n  @state() private _compareEnd?: Date;\n\n  protected hassSubscribeRequiredHostProps = [\"_config\"];\n\n  public hassSubscribe(): UnsubscribeFunc[] {\n    return [\n      getEnergyDataCollection(this.hass, {\n        key: this._config?.collection_key,\n      }).subscribe((data) => this._getStatistics(data)),\n    ];\n  }\n\n  public getCardSize(): Promise<number> | number {\n    return 3;\n  }\n\n  public setConfig(config: EnergySolarGraphCardConfig): void {\n    this._config = config;\n  }\n\n  protected shouldUpdate(changedProps: PropertyValues): boolean {\n    return (\n      hasConfigChanged(this, changedProps) ||\n      changedProps.size > 1 ||\n      !changedProps.has(\"hass\")\n    );\n  }\n\n  protected render() {\n    if (!this.hass || !this._config) {\n      return nothing;\n    }\n\n    return html`\n      <ha-card>\n        ${this._config.title\n          ? html`<h1 class=\"card-header\">${this._config.title}</h1>`\n          : \"\"}\n        <div\n          class=\"content ${classMap({\n            \"has-header\": !!this._config.title,\n          })}\"\n        >\n          <ha-chart-base\n            .hass=${this.hass}\n            .data=${this._chartData}\n            .options=${this._createOptions(\n              this._start,\n              this._end,\n              this.hass.locale,\n              this.hass.config,\n              this._compareStart,\n              this._compareEnd\n            )}\n            chart-type=\"bar\"\n          ></ha-chart-base>\n          ${!this._chartData.datasets.length\n            ? html`<div class=\"no-data\">\n                ${isToday(this._start)\n                  ? this.hass.localize(\"ui.panel.lovelace.cards.energy.no_data\")\n                  : this.hass.localize(\n                      \"ui.panel.lovelace.cards.energy.no_data_period\"\n                    )}\n              </div>`\n            : \"\"}\n        </div>\n      </ha-card>\n    `;\n  }\n\n  private _createOptions = memoizeOne(\n    (\n      start: Date,\n      end: Date,\n      locale: FrontendLocaleData,\n      config: HassConfig,\n      compareStart?: Date,\n      compareEnd?: Date\n    ): ChartOptions => {\n      const commonOptions = getCommonOptions(\n        start,\n        end,\n        locale,\n        config,\n        \"kWh\",\n        compareStart,\n        compareEnd\n      );\n      const options: ChartOptions = {\n        ...commonOptions,\n        plugins: {\n          ...commonOptions.plugins,\n          tooltip: {\n            ...commonOptions.plugins!.tooltip,\n            callbacks: {\n              ...commonOptions.plugins!.tooltip!.callbacks,\n              footer: (contexts) => {\n                const production_contexts = contexts.filter(\n                  (c) => c.dataset?.stack === \"solar\"\n                );\n                if (production_contexts.length < 2) {\n                  return [];\n                }\n                let total = 0;\n                for (const context of production_contexts) {\n                  total += (context.dataset.data[context.dataIndex] as any).y;\n                }\n                if (total === 0) {\n                  return [];\n                }\n                return [\n                  this.hass.localize(\n                    \"ui.panel.lovelace.cards.energy.energy_solar_graph.total_produced\",\n                    { num: formatNumber(total, locale) }\n                  ),\n                ];\n              },\n            },\n          },\n        },\n        elements: {\n          line: {\n            tension: 0.3,\n            borderWidth: 1.5,\n          },\n          bar: { borderWidth: 1.5, borderRadius: 4 },\n          point: {\n            hitRadius: 5,\n          },\n        },\n      };\n      return options;\n    }\n  );\n\n  private async _getStatistics(energyData: EnergyData): Promise<void> {\n    const solarSources: SolarSourceTypeEnergyPreference[] =\n      energyData.prefs.energy_sources.filter(\n        (source) => source.type === \"solar\"\n      ) as SolarSourceTypeEnergyPreference[];\n\n    let forecasts: EnergySolarForecasts | undefined;\n    if (\n      solarSources.some((source) => source.config_entry_solar_forecast?.length)\n    ) {\n      try {\n        forecasts = await getEnergySolarForecasts(this.hass);\n      } catch (_e) {\n        // ignore\n      }\n    }\n\n    const datasets: ChartDataset<\"bar\" | \"line\">[] = [];\n\n    const computedStyles = getComputedStyle(this);\n    const solarColor = computedStyles\n      .getPropertyValue(\"--energy-solar-color\")\n      .trim();\n\n    datasets.push(\n      ...this._processDataSet(\n        energyData.stats,\n        energyData.statsMetadata,\n        solarSources,\n        solarColor,\n        computedStyles\n      )\n    );\n\n    if (energyData.statsCompare) {\n      // Add empty dataset to align the bars\n      datasets.push({\n        order: 0,\n        data: [],\n      });\n      datasets.push({\n        order: 999,\n        data: [],\n        xAxisID: \"xAxisCompare\",\n      });\n\n      datasets.push(\n        ...this._processDataSet(\n          energyData.statsCompare,\n          energyData.statsMetadata,\n          solarSources,\n          solarColor,\n          computedStyles,\n          true\n        )\n      );\n    }\n\n    if (forecasts) {\n      datasets.push(\n        ...this._processForecast(\n          energyData.statsMetadata,\n          forecasts,\n          solarSources,\n          computedStyles.getPropertyValue(\"--primary-text-color\"),\n          energyData.start,\n          energyData.end\n        )\n      );\n    }\n\n    this._start = energyData.start;\n    this._end = energyData.end || endOfToday();\n\n    this._compareStart = energyData.startCompare;\n    this._compareEnd = energyData.endCompare;\n\n    this._chartData = {\n      datasets,\n    };\n  }\n\n  private _processDataSet(\n    statistics: Statistics,\n    statisticsMetaData: Record<string, StatisticsMetaData>,\n    solarSources: SolarSourceTypeEnergyPreference[],\n    solarColor: string,\n    computedStyles: CSSStyleDeclaration,\n    compare = false\n  ) {\n    const data: ChartDataset<\"bar\", ScatterDataPoint[]>[] = [];\n\n    solarSources.forEach((source, idx) => {\n      let borderColor = computedStyles\n        .getPropertyValue(\"--energy-solar-color-\" + idx)\n        .trim();\n      if (borderColor.length === 0) {\n        const modifiedColor =\n          idx > 0\n            ? this.hass.themes.darkMode\n              ? labBrighten(rgb2lab(hex2rgb(solarColor)), idx)\n              : labDarken(rgb2lab(hex2rgb(solarColor)), idx)\n            : undefined;\n        borderColor = modifiedColor\n          ? rgb2hex(lab2rgb(modifiedColor))\n          : solarColor;\n      }\n\n      let prevStart: number | null = null;\n\n      const solarProductionData: ScatterDataPoint[] = [];\n\n      // Process solar production data.\n      if (source.stat_energy_from in statistics) {\n        const stats = statistics[source.stat_energy_from];\n        let end;\n\n        for (const point of stats) {\n          if (point.change === null || point.change === undefined) {\n            continue;\n          }\n          if (prevStart === point.start) {\n            continue;\n          }\n          const date = new Date(point.start);\n          solarProductionData.push({\n            x: date.getTime(),\n            y: point.change,\n          });\n          prevStart = point.start;\n          end = point.end;\n        }\n        if (solarProductionData.length === 1) {\n          solarProductionData.push({\n            x: end,\n            y: 0,\n          });\n        }\n      }\n\n      data.push({\n        label: this.hass.localize(\n          \"ui.panel.lovelace.cards.energy.energy_solar_graph.production\",\n          {\n            name: getStatisticLabel(\n              this.hass,\n              source.stat_energy_from,\n              statisticsMetaData[source.stat_energy_from]\n            ),\n          }\n        ),\n        borderColor: compare ? borderColor + \"7F\" : borderColor,\n        backgroundColor: compare ? borderColor + \"32\" : borderColor + \"7F\",\n        data: solarProductionData,\n        order: 1,\n        stack: \"solar\",\n        xAxisID: compare ? \"xAxisCompare\" : undefined,\n      });\n    });\n\n    return data;\n  }\n\n  private _processForecast(\n    statisticsMetaData: Record<string, StatisticsMetaData>,\n    forecasts: EnergySolarForecasts,\n    solarSources: SolarSourceTypeEnergyPreference[],\n    borderColor: string,\n    start: Date,\n    end?: Date\n  ) {\n    const data: ChartDataset<\"line\">[] = [];\n\n    const dayDifference = differenceInDays(end || new Date(), start);\n\n    // Process solar forecast data.\n    solarSources.forEach((source) => {\n      if (source.config_entry_solar_forecast) {\n        const forecastsData: Record<string, number> | undefined = {};\n        source.config_entry_solar_forecast.forEach((configEntryId) => {\n          if (!forecasts![configEntryId]) {\n            return;\n          }\n          Object.entries(forecasts![configEntryId].wh_hours).forEach(\n            ([date, value]) => {\n              const dateObj = new Date(date);\n              if (dateObj < start || (end && dateObj > end)) {\n                return;\n              }\n              if (dayDifference > 35) {\n                dateObj.setDate(1);\n              }\n              if (dayDifference > 2) {\n                dateObj.setHours(0, 0, 0, 0);\n              } else {\n                dateObj.setMinutes(0, 0, 0);\n              }\n              const time = dateObj.getTime();\n              if (time in forecastsData) {\n                forecastsData[time] += value;\n              } else {\n                forecastsData[time] = value;\n              }\n            }\n          );\n        });\n\n        if (forecastsData) {\n          const solarForecastData: ScatterDataPoint[] = [];\n          for (const [time, value] of Object.entries(forecastsData)) {\n            solarForecastData.push({\n              x: Number(time),\n              y: value / 1000,\n            });\n          }\n\n          if (solarForecastData.length) {\n            data.push({\n              type: \"line\",\n              label: this.hass.localize(\n                \"ui.panel.lovelace.cards.energy.energy_solar_graph.forecast\",\n                {\n                  name: getStatisticLabel(\n                    this.hass,\n                    source.stat_energy_from,\n                    statisticsMetaData[source.stat_energy_from]\n                  ),\n                }\n              ),\n              fill: false,\n              stepped: false,\n              borderColor,\n              borderDash: [7, 5],\n              pointRadius: 0,\n              data: solarForecastData,\n            });\n          }\n        }\n      }\n    });\n\n    return data;\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      ha-card {\n        height: 100%;\n      }\n      .card-header {\n        padding-bottom: 0;\n      }\n      .content {\n        padding: 16px;\n      }\n      .has-header {\n        padding-top: 0;\n      }\n      .no-data {\n        position: absolute;\n        height: 100%;\n        top: 0;\n        left: 0;\n        right: 0;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        padding: 20%;\n        margin-left: 32px;\n        margin-inline-start: 32px;\n        margin-inline-end: initial;\n        box-sizing: border-box;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-energy-solar-graph-card\": HuiEnergySolarGraphCard;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}