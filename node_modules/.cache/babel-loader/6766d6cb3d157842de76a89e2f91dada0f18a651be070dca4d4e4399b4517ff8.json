{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\n/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { dedupingMixin } from '@polymer/polymer/lib/utils/mixin.js';\n\n/**\n * A mixin to provide disabled property for field components.\n *\n * @polymerMixin\n */\nexport var DisabledMixin = dedupingMixin(function (superclass) {\n  return /*#__PURE__*/function (_superclass) {\n    _inherits(DisabledMixinClass, _superclass);\n    function DisabledMixinClass() {\n      _classCallCheck(this, DisabledMixinClass);\n      return _callSuper(this, DisabledMixinClass, arguments);\n    }\n    _createClass(DisabledMixinClass, [{\n      key: \"_disabledChanged\",\n      value:\n      /**\n       * @param {boolean} disabled\n       * @protected\n       */\n      function _disabledChanged(disabled) {\n        this._setAriaDisabled(disabled);\n      }\n\n      /**\n       * @param {boolean} disabled\n       * @protected\n       */\n    }, {\n      key: \"_setAriaDisabled\",\n      value: function _setAriaDisabled(disabled) {\n        if (disabled) {\n          this.setAttribute('aria-disabled', 'true');\n        } else {\n          this.removeAttribute('aria-disabled');\n        }\n      }\n\n      /**\n       * Overrides the default element `click` method in order to prevent\n       * firing the `click` event when the element is disabled.\n       * @protected\n       * @override\n       */\n    }, {\n      key: \"click\",\n      value: function click() {\n        if (!this.disabled) {\n          _get(_getPrototypeOf(DisabledMixinClass.prototype), \"click\", this).call(this);\n        }\n      }\n    }], [{\n      key: \"properties\",\n      get: function get() {\n        return {\n          /**\n           * If true, the user cannot interact with this element.\n           */\n          disabled: {\n            type: Boolean,\n            value: false,\n            observer: '_disabledChanged',\n            reflectToAttribute: true\n          }\n        };\n      }\n    }]);\n    return DisabledMixinClass;\n  }(superclass);\n});","map":{"version":3,"names":["dedupingMixin","DisabledMixin","superclass","_superclass","_inherits","DisabledMixinClass","_classCallCheck","_callSuper","arguments","_createClass","key","value","_disabledChanged","disabled","_setAriaDisabled","setAttribute","removeAttribute","click","_get","_getPrototypeOf","prototype","call","get","type","Boolean","observer","reflectToAttribute"],"sources":["/Users/sercanardil/Desktop/frontend/node_modules/@vaadin/a11y-base/src/disabled-mixin.js"],"sourcesContent":["/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { dedupingMixin } from '@polymer/polymer/lib/utils/mixin.js';\n\n/**\n * A mixin to provide disabled property for field components.\n *\n * @polymerMixin\n */\nexport const DisabledMixin = dedupingMixin(\n  (superclass) =>\n    class DisabledMixinClass extends superclass {\n      static get properties() {\n        return {\n          /**\n           * If true, the user cannot interact with this element.\n           */\n          disabled: {\n            type: Boolean,\n            value: false,\n            observer: '_disabledChanged',\n            reflectToAttribute: true,\n          },\n        };\n      }\n\n      /**\n       * @param {boolean} disabled\n       * @protected\n       */\n      _disabledChanged(disabled) {\n        this._setAriaDisabled(disabled);\n      }\n\n      /**\n       * @param {boolean} disabled\n       * @protected\n       */\n      _setAriaDisabled(disabled) {\n        if (disabled) {\n          this.setAttribute('aria-disabled', 'true');\n        } else {\n          this.removeAttribute('aria-disabled');\n        }\n      }\n\n      /**\n       * Overrides the default element `click` method in order to prevent\n       * firing the `click` event when the element is disabled.\n       * @protected\n       * @override\n       */\n      click() {\n        if (!this.disabled) {\n          super.click();\n        }\n      }\n    },\n);\n"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA,SAASA,aAAa,QAAQ,qCAAqC;;AAEnE;AACA;AACA;AACA;AACA;AACA,OAAO,IAAMC,aAAa,GAAGD,aAAa,CACxC,UAACE,UAAU;EAAA,8BAAAC,WAAA;IAAAC,SAAA,CAAAC,kBAAA,EAAAF,WAAA;IAAA,SAAAE,mBAAA;MAAAC,eAAA,OAAAD,kBAAA;MAAA,OAAAE,UAAA,OAAAF,kBAAA,EAAAG,SAAA;IAAA;IAAAC,YAAA,CAAAJ,kBAAA;MAAAK,GAAA;MAAAC,KAAA;MAgBP;AACN;AACA;AACA;MACM,SAAAC,iBAAiBC,QAAQ,EAAE;QACzB,IAAI,CAACC,gBAAgB,CAACD,QAAQ,CAAC;MACjC;;MAEA;AACN;AACA;AACA;IAHM;MAAAH,GAAA;MAAAC,KAAA,EAIA,SAAAG,iBAAiBD,QAAQ,EAAE;QACzB,IAAIA,QAAQ,EAAE;UACZ,IAAI,CAACE,YAAY,CAAC,eAAe,EAAE,MAAM,CAAC;QAC5C,CAAC,MAAM;UACL,IAAI,CAACC,eAAe,CAAC,eAAe,CAAC;QACvC;MACF;;MAEA;AACN;AACA;AACA;AACA;AACA;IALM;MAAAN,GAAA;MAAAC,KAAA,EAMA,SAAAM,MAAA,EAAQ;QACN,IAAI,CAAC,IAAI,CAACJ,QAAQ,EAAE;UAClBK,IAAA,CAAAC,eAAA,CAAAd,kBAAA,CAAAe,SAAA,kBAAAC,IAAA;QACF;MACF;IAAC;MAAAX,GAAA;MAAAY,GAAA,EA5CD,SAAAA,IAAA,EAAwB;QACtB,OAAO;UACL;AACV;AACA;UACUT,QAAQ,EAAE;YACRU,IAAI,EAAEC,OAAO;YACbb,KAAK,EAAE,KAAK;YACZc,QAAQ,EAAE,kBAAkB;YAC5BC,kBAAkB,EAAE;UACtB;QACF,CAAC;MACH;IAAC;IAAA,OAAArB,kBAAA;EAAA,EAb8BH,UAAU;AAAA,CA+C/C,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}