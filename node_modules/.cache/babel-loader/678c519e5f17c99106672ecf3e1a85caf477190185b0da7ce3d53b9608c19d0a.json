{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\n/* eslint-disable lit/prefer-static-styles */\nimport { html } from \"lit\";\nimport { customElement } from \"lit/decorators\";\nimport { HaFormString } from \"../components/ha-form/ha-form-string\";\nimport \"../components/ha-icon-button\";\nimport \"./ha-auth-textfield\";\nexport let HaAuthFormString = _decorate([customElement(\"ha-auth-form-string\")], function (_initialize, _HaFormString) {\n  class HaAuthFormString extends _HaFormString {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaAuthFormString,\n    d: [{\n      kind: \"method\",\n      key: \"createRenderRoot\",\n      value: function createRenderRoot() {\n        return this;\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var _this$schema$descript, _this$localize;\n        return html`\n      <style>\n        ha-auth-form-string {\n          display: block;\n          position: relative;\n        }\n        ha-auth-form-string[own-margin] {\n          margin-bottom: 5px;\n        }\n        ha-auth-form-string ha-auth-textfield {\n          display: block !important;\n        }\n        ha-auth-form-string ha-icon-button {\n          position: absolute;\n          top: 8px;\n          right: 8px;\n          inset-inline-start: initial;\n          inset-inline-end: 8px;\n          --mdc-icon-button-size: 40px;\n          --mdc-icon-size: 20px;\n          color: var(--secondary-text-color);\n          direction: var(--direction);\n        }\n      </style>\n      <ha-auth-textfield\n      .type=${!this.isPassword ? this.stringType : this.unmaskedPassword ? \"text\" : \"password\"}\n        .label=${this.label}\n        .value=${this.data || \"\"}\n        .helper=${this.helper}\n        helperPersistent\n        .disabled=${this.disabled}\n        .required=${this.schema.required}\n        .autoValidate=${this.schema.required}\n        .name=${this.schema.name}\n        .autocomplete=${this.schema.autocomplete}\n        .suffix=${this.isPassword ?\n        // reserve some space for the icon.\n        html`<div style=\"width: 24px\"></div>` : (_this$schema$descript = this.schema.description) === null || _this$schema$descript === void 0 ? void 0 : _this$schema$descript.suffix}\n        .validationMessage=${this.schema.required ? (_this$localize = this.localize) === null || _this$localize === void 0 ? void 0 : _this$localize.call(this, \"ui.panel.page-authorize.form.error_required\") : undefined}\n        @input=${this._valueChanged}\n        @change=${this._valueChanged}\n        ></ha-auth-textfield>\n        ${this.renderIcon()}\n      </ha-auth-textfield>\n    `;\n      }\n    }]\n  };\n}, HaFormString);","map":{"version":3,"names":["html","customElement","HaFormString","HaAuthFormString","_decorate","_initialize","_HaFormString","constructor","args","F","d","kind","key","value","createRenderRoot","render","_this$schema$descript","_this$localize","isPassword","stringType","unmaskedPassword","label","data","helper","disabled","schema","required","name","autocomplete","description","suffix","localize","call","undefined","_valueChanged","renderIcon"],"sources":["/workspaces/frontend/src/auth/ha-auth-form-string.ts"],"sourcesContent":["/* eslint-disable lit/prefer-static-styles */\nimport { TemplateResult, html } from \"lit\";\nimport { customElement } from \"lit/decorators\";\nimport { HaFormString } from \"../components/ha-form/ha-form-string\";\nimport \"../components/ha-icon-button\";\nimport \"./ha-auth-textfield\";\n\n@customElement(\"ha-auth-form-string\")\nexport class HaAuthFormString extends HaFormString {\n  protected createRenderRoot() {\n    return this;\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      <style>\n        ha-auth-form-string {\n          display: block;\n          position: relative;\n        }\n        ha-auth-form-string[own-margin] {\n          margin-bottom: 5px;\n        }\n        ha-auth-form-string ha-auth-textfield {\n          display: block !important;\n        }\n        ha-auth-form-string ha-icon-button {\n          position: absolute;\n          top: 8px;\n          right: 8px;\n          inset-inline-start: initial;\n          inset-inline-end: 8px;\n          --mdc-icon-button-size: 40px;\n          --mdc-icon-size: 20px;\n          color: var(--secondary-text-color);\n          direction: var(--direction);\n        }\n      </style>\n      <ha-auth-textfield\n      .type=${\n        !this.isPassword\n          ? this.stringType\n          : this.unmaskedPassword\n            ? \"text\"\n            : \"password\"\n      }\n        .label=${this.label}\n        .value=${this.data || \"\"}\n        .helper=${this.helper}\n        helperPersistent\n        .disabled=${this.disabled}\n        .required=${this.schema.required}\n        .autoValidate=${this.schema.required}\n        .name=${this.schema.name}\n        .autocomplete=${this.schema.autocomplete}\n        .suffix=${\n          this.isPassword\n            ? // reserve some space for the icon.\n              html`<div style=\"width: 24px\"></div>`\n            : this.schema.description?.suffix\n        }\n        .validationMessage=${this.schema.required ? this.localize?.(\"ui.panel.page-authorize.form.error_required\") : undefined}\n        @input=${this._valueChanged}\n        @change=${this._valueChanged}\n        ></ha-auth-textfield>\n        ${this.renderIcon()}\n      </ha-auth-textfield>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-auth-form-string\": HaAuthFormString;\n  }\n}\n"],"mappings":";AAAA;AACA,SAAyBA,IAAI,QAAQ,KAAK;AAC1C,SAASC,aAAa,QAAQ,gBAAgB;AAC9C,SAASC,YAAY,QAAQ,sCAAsC;AACnE,OAAO,8BAA8B;AACrC,OAAO,qBAAqB;AAE5B,WACaC,gBAAgB,GAAAC,SAAA,EAD5BH,aAAa,CAAC,qBAAqB,CAAC,aAAAI,WAAA,EAAAC,aAAA;EAArC,MACaH,gBAAgB,SAAAG,aAAA,CAAsB;IAAAC,YAAA,GAAAC,IAAA;MAAA,SAAAA,IAAA;MAAAH,WAAA;IAAA;EA6DnD;EAAC;IAAAI,CAAA,EA7DYN,gBAAgB;IAAAO,CAAA;MAAAC,IAAA;MAAAC,GAAA;MAAAC,KAAA,EAC3B,SAAAC,iBAAA,EAA6B;QAC3B,OAAO,IAAI;MACb;IAAC;MAAAH,IAAA;MAAAC,GAAA;MAAAC,KAAA,EAED,SAAAE,OAAA,EAAmC;QAAA,IAAAC,qBAAA,EAAAC,cAAA;QACjC,OAAOjB,IAAK;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cACQ,CAAC,IAAI,CAACkB,UAAU,GACZ,IAAI,CAACC,UAAU,GACf,IAAI,CAACC,gBAAgB,GACnB,MAAM,GACN,UACP;AACP,iBAAiB,IAAI,CAACC,KAAM;AAC5B,iBAAiB,IAAI,CAACC,IAAI,IAAI,EAAG;AACjC,kBAAkB,IAAI,CAACC,MAAO;AAC9B;AACA,oBAAoB,IAAI,CAACC,QAAS;AAClC,oBAAoB,IAAI,CAACC,MAAM,CAACC,QAAS;AACzC,wBAAwB,IAAI,CAACD,MAAM,CAACC,QAAS;AAC7C,gBAAgB,IAAI,CAACD,MAAM,CAACE,IAAK;AACjC,wBAAwB,IAAI,CAACF,MAAM,CAACG,YAAa;AACjD,kBACU,IAAI,CAACV,UAAU;QACX;QACAlB,IAAK,iCAAgC,IAAAgB,qBAAA,GACrC,IAAI,CAACS,MAAM,CAACI,WAAW,cAAAb,qBAAA,uBAAvBA,qBAAA,CAAyBc,MAC9B;AACT,6BAA6B,IAAI,CAACL,MAAM,CAACC,QAAQ,IAAAT,cAAA,GAAG,IAAI,CAACc,QAAQ,cAAAd,cAAA,uBAAbA,cAAA,CAAAe,IAAA,KAAI,EAAY,6CAA6C,CAAC,GAAGC,SAAU;AAC/H,iBAAiB,IAAI,CAACC,aAAc;AACpC,kBAAkB,IAAI,CAACA,aAAc;AACrC;AACA,UAAU,IAAI,CAACC,UAAU,CAAC,CAAE;AAC5B;AACA,KAAK;MACH;IAAC;EAAA;AAAA,GA5DmCjC,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}