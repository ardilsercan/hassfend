{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport { applyThemesOnElement, invalidateThemeCache } from \"../common/dom/apply_themes_on_element\";\nimport { subscribeThemes } from \"../data/ws-themes\";\nimport { storeState } from \"../util/ha-pref-storage\";\nvar mql = matchMedia(\"(prefers-color-scheme: dark)\");\nexport default (function (superClass) {\n  return /*#__PURE__*/function (_superClass) {\n    _inherits(_class, _superClass);\n    function _class() {\n      var _this;\n      _classCallCheck(this, _class);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, _class, [].concat(args));\n      _this._themeApplied = false;\n      return _this;\n    }\n    _createClass(_class, [{\n      key: \"firstUpdated\",\n      value: function firstUpdated(changedProps) {\n        var _this2 = this;\n        _get(_getPrototypeOf(_class.prototype), \"firstUpdated\", this).call(this, changedProps);\n        this.addEventListener(\"settheme\", function (ev) {\n          _this2._updateHass({\n            selectedTheme: Object.assign(Object.assign({}, _this2.hass.selectedTheme), ev.detail)\n          });\n          _this2._applyTheme(mql.matches);\n          storeState(_this2.hass);\n        });\n        mql.addListener(function (ev) {\n          return _this2._applyTheme(ev.matches);\n        });\n        if (!this._themeApplied && mql.matches) {\n          applyThemesOnElement(document.documentElement, {\n            default_theme: \"default\",\n            default_dark_theme: null,\n            themes: {},\n            darkMode: true,\n            theme: \"default\"\n          }, undefined, undefined, true);\n        }\n      }\n    }, {\n      key: \"hassConnected\",\n      value: function hassConnected() {\n        var _this3 = this;\n        _get(_getPrototypeOf(_class.prototype), \"hassConnected\", this).call(this);\n        subscribeThemes(this.hass.connection, function (themes) {\n          _this3._themeApplied = true;\n          _this3._updateHass({\n            themes: themes\n          });\n          invalidateThemeCache();\n          _this3._applyTheme(mql.matches);\n        });\n      }\n    }, {\n      key: \"_applyTheme\",\n      value: function _applyTheme(darkPreferred) {\n        var _themeSettings, _themeSettings2, _auth$external;\n        if (!this.hass) {\n          return;\n        }\n        var themeSettings = this.hass.config.recovery_mode || this.hass.config.safe_mode ? Object.assign(Object.assign({}, this.hass.selectedTheme), {}, {\n          theme: \"default\",\n          primaryColor: this.hass.config.recovery_mode ? \"#db4437\" : \"#e48629\",\n          accentColor: this.hass.config.recovery_mode ? \"#ffca28\" : \"#db4437\"\n        }) : this.hass.selectedTheme;\n        var themeName = ((_themeSettings = themeSettings) === null || _themeSettings === void 0 ? void 0 : _themeSettings.theme) || (darkPreferred && this.hass.themes.default_dark_theme ? this.hass.themes.default_dark_theme : this.hass.themes.default_theme);\n        var darkMode = ((_themeSettings2 = themeSettings) === null || _themeSettings2 === void 0 ? void 0 : _themeSettings2.dark) === undefined ? darkPreferred : themeSettings.dark;\n        var selectedTheme = themeName ? this.hass.themes.themes[themeName] : undefined;\n        if (selectedTheme && darkMode && !selectedTheme.modes) {\n          darkMode = false;\n        }\n        themeSettings = Object.assign(Object.assign({}, themeSettings), {}, {\n          dark: darkMode\n        });\n        this._updateHass({\n          themes: Object.assign(Object.assign({}, this.hass.themes), {}, {\n            theme: themeName\n          })\n        });\n        applyThemesOnElement(document.documentElement, this.hass.themes, themeName, themeSettings, true);\n        if (darkMode !== this.hass.themes.darkMode) {\n          this._updateHass({\n            themes: Object.assign(Object.assign({}, this.hass.themes), {}, {\n              darkMode: darkMode\n            })\n          });\n          var schemeMeta = document.querySelector(\"meta[name=color-scheme]\");\n          if (schemeMeta) {\n            schemeMeta.setAttribute(\"content\", darkMode ? \"dark\" : themeName === \"default\" ? \"light\" : \"dark light\");\n          }\n        }\n        var themeMeta = document.querySelector(\"meta[name=theme-color]\");\n        var computedStyles = getComputedStyle(document.documentElement);\n        var headerColor = computedStyles.getPropertyValue(\"--app-header-background-color\");\n        document.documentElement.style.backgroundColor = computedStyles.getPropertyValue(\"--primary-background-color\");\n        if (themeMeta) {\n          if (!themeMeta.hasAttribute(\"default-content\")) {\n            themeMeta.setAttribute(\"default-content\", themeMeta.getAttribute(\"content\"));\n          }\n          var themeColor = (headerColor === null || headerColor === void 0 ? void 0 : headerColor.trim()) || themeMeta.getAttribute(\"default-content\");\n          themeMeta.setAttribute(\"content\", themeColor);\n        }\n        (_auth$external = this.hass.auth.external) === null || _auth$external === void 0 || _auth$external.fireMessage({\n          type: \"theme-update\"\n        });\n      }\n    }]);\n    return _class;\n  }(superClass);\n});","map":{"version":3,"names":["applyThemesOnElement","invalidateThemeCache","subscribeThemes","storeState","mql","matchMedia","superClass","_superClass","_inherits","_class","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_themeApplied","_createClass","key","value","firstUpdated","changedProps","_this2","_get","_getPrototypeOf","prototype","call","addEventListener","ev","_updateHass","selectedTheme","Object","assign","hass","detail","_applyTheme","matches","addListener","document","documentElement","default_theme","default_dark_theme","themes","darkMode","theme","undefined","hassConnected","_this3","connection","darkPreferred","_themeSettings","_themeSettings2","_auth$external","themeSettings","config","recovery_mode","safe_mode","primaryColor","accentColor","themeName","dark","modes","schemeMeta","querySelector","setAttribute","themeMeta","computedStyles","getComputedStyle","headerColor","getPropertyValue","style","backgroundColor","hasAttribute","getAttribute","themeColor","trim","auth","external","fireMessage","type"],"sources":["/workspaces/frontend/src/state/themes-mixin.ts"],"sourcesContent":["import {\n  applyThemesOnElement,\n  invalidateThemeCache,\n} from \"../common/dom/apply_themes_on_element\";\nimport { HASSDomEvent } from \"../common/dom/fire_event\";\nimport { subscribeThemes } from \"../data/ws-themes\";\nimport { Constructor, HomeAssistant } from \"../types\";\nimport { storeState } from \"../util/ha-pref-storage\";\nimport { HassBaseEl } from \"./hass-base-mixin\";\n\ndeclare global {\n  // for add event listener\n  interface HTMLElementEventMap {\n    settheme: HASSDomEvent<Partial<HomeAssistant[\"selectedTheme\"]>>;\n  }\n  interface HASSDomEvents {\n    settheme: Partial<HomeAssistant[\"selectedTheme\"]>;\n  }\n}\n\nconst mql = matchMedia(\"(prefers-color-scheme: dark)\");\n\nexport default <T extends Constructor<HassBaseEl>>(superClass: T) =>\n  class extends superClass {\n    private _themeApplied = false;\n\n    protected firstUpdated(changedProps) {\n      super.firstUpdated(changedProps);\n      this.addEventListener(\"settheme\", (ev) => {\n        this._updateHass({\n          selectedTheme: {\n            ...this.hass!.selectedTheme!,\n            ...ev.detail,\n          },\n        });\n        this._applyTheme(mql.matches);\n        storeState(this.hass!);\n      });\n      mql.addListener((ev) => this._applyTheme(ev.matches));\n      if (!this._themeApplied && mql.matches) {\n        applyThemesOnElement(\n          document.documentElement,\n          {\n            default_theme: \"default\",\n            default_dark_theme: null,\n            themes: {},\n            darkMode: true,\n            theme: \"default\",\n          },\n          undefined,\n          undefined,\n          true\n        );\n      }\n    }\n\n    protected hassConnected() {\n      super.hassConnected();\n\n      subscribeThemes(this.hass!.connection, (themes) => {\n        this._themeApplied = true;\n        this._updateHass({ themes });\n        invalidateThemeCache();\n        this._applyTheme(mql.matches);\n      });\n    }\n\n    private _applyTheme(darkPreferred: boolean) {\n      if (!this.hass) {\n        return;\n      }\n\n      let themeSettings: Partial<HomeAssistant[\"selectedTheme\"]> =\n        this.hass.config.recovery_mode || this.hass.config.safe_mode\n          ? {\n              ...this.hass.selectedTheme,\n              theme: \"default\",\n              primaryColor: this.hass.config.recovery_mode\n                ? \"#db4437\"\n                : \"#e48629\",\n              accentColor: this.hass.config.recovery_mode\n                ? \"#ffca28\"\n                : \"#db4437\",\n            }\n          : this.hass.selectedTheme;\n\n      const themeName =\n        themeSettings?.theme ||\n        (darkPreferred && this.hass.themes.default_dark_theme\n          ? this.hass.themes.default_dark_theme\n          : this.hass.themes.default_theme);\n\n      let darkMode =\n        themeSettings?.dark === undefined ? darkPreferred : themeSettings.dark;\n\n      const selectedTheme = themeName\n        ? this.hass.themes.themes[themeName]\n        : undefined;\n\n      if (selectedTheme && darkMode && !selectedTheme.modes) {\n        darkMode = false;\n      }\n\n      themeSettings = { ...themeSettings, dark: darkMode };\n      this._updateHass({\n        themes: { ...this.hass.themes!, theme: themeName },\n      });\n\n      applyThemesOnElement(\n        document.documentElement,\n        this.hass.themes,\n        themeName,\n        themeSettings,\n        true\n      );\n\n      if (darkMode !== this.hass.themes.darkMode) {\n        this._updateHass({\n          themes: { ...this.hass.themes!, darkMode },\n        });\n\n        const schemeMeta = document.querySelector(\"meta[name=color-scheme]\");\n        if (schemeMeta) {\n          schemeMeta.setAttribute(\n            \"content\",\n            darkMode ? \"dark\" : themeName === \"default\" ? \"light\" : \"dark light\"\n          );\n        }\n      }\n\n      const themeMeta = document.querySelector(\"meta[name=theme-color]\");\n      const computedStyles = getComputedStyle(document.documentElement);\n      const headerColor = computedStyles.getPropertyValue(\n        \"--app-header-background-color\"\n      );\n\n      document.documentElement.style.backgroundColor =\n        computedStyles.getPropertyValue(\"--primary-background-color\");\n\n      if (themeMeta) {\n        if (!themeMeta.hasAttribute(\"default-content\")) {\n          themeMeta.setAttribute(\n            \"default-content\",\n            themeMeta.getAttribute(\"content\")!\n          );\n        }\n        const themeColor =\n          headerColor?.trim() ||\n          (themeMeta.getAttribute(\"default-content\") as string);\n        themeMeta.setAttribute(\"content\", themeColor);\n      }\n\n      this.hass!.auth.external?.fireMessage({ type: \"theme-update\" });\n    }\n  };\n"],"mappings":";;;;;;;;;AAAA,SACEA,oBAAoB,EACpBC,oBAAoB,QACf,uCAAuC;AAE9C,SAASC,eAAe,QAAQ,mBAAmB;AAEnD,SAASC,UAAU,QAAQ,yBAAyB;AAapD,IAAMC,GAAG,GAAGC,UAAU,CAAC,8BAA8B,CAAC;AAEtD,gBAAe,UAAoCC,UAAa;EAAA,8BAAAC,WAAA;IAAAC,SAAA,CAAAC,MAAA,EAAAF,WAAA;IAAA,SAAAE,OAAA;MAAA,IAAAC,KAAA;MAAAC,eAAA,OAAAF,MAAA;MAAA,SAAAG,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAAC,IAAA,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;QAAAF,IAAA,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;MAAA;MAAAP,KAAA,GAAAQ,UAAA,OAAAT,MAAA,KAAAU,MAAA,CAAAJ,IAAA;MAAAL,KAAA,CAEpDU,aAAa,GAAG,KAAK;MAAA,OAAAV,KAAA;IAAA;IAAAW,YAAA,CAAAZ,MAAA;MAAAa,GAAA;MAAAC,KAAA,EAE7B,SAAAC,aAAuBC,YAAY,EAAE;QAAA,IAAAC,MAAA;QACnCC,IAAA,CAAAC,eAAA,CAAAnB,MAAA,CAAAoB,SAAA,yBAAAC,IAAA,OAAmBL,YAAY;QAC/B,IAAI,CAACM,gBAAgB,CAAC,UAAU,EAAE,UAACC,EAAE,EAAK;UACxCN,MAAI,CAACO,WAAW,CAAC;YACfC,aAAa,EAAAC,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACRV,MAAI,CAACW,IAAI,CAAEH,aAAa,GACxBF,EAAE,CAACM,MAAM;UAEhB,CAAC,CAAC;UACFZ,MAAI,CAACa,WAAW,CAACnC,GAAG,CAACoC,OAAO,CAAC;UAC7BrC,UAAU,CAACuB,MAAI,CAACW,IAAK,CAAC;QACxB,CAAC,CAAC;QACFjC,GAAG,CAACqC,WAAW,CAAC,UAACT,EAAE;UAAA,OAAKN,MAAI,CAACa,WAAW,CAACP,EAAE,CAACQ,OAAO,CAAC;QAAA,EAAC;QACrD,IAAI,CAAC,IAAI,CAACpB,aAAa,IAAIhB,GAAG,CAACoC,OAAO,EAAE;UACtCxC,oBAAoB,CAClB0C,QAAQ,CAACC,eAAe,EACxB;YACEC,aAAa,EAAE,SAAS;YACxBC,kBAAkB,EAAE,IAAI;YACxBC,MAAM,EAAE,CAAC,CAAC;YACVC,QAAQ,EAAE,IAAI;YACdC,KAAK,EAAE;UACT,CAAC,EACDC,SAAS,EACTA,SAAS,EACT,IACF,CAAC;QACH;MACF;IAAC;MAAA3B,GAAA;MAAAC,KAAA,EAED,SAAA2B,cAAA,EAA0B;QAAA,IAAAC,MAAA;QACxBxB,IAAA,CAAAC,eAAA,CAAAnB,MAAA,CAAAoB,SAAA,0BAAAC,IAAA;QAEA5B,eAAe,CAAC,IAAI,CAACmC,IAAI,CAAEe,UAAU,EAAE,UAACN,MAAM,EAAK;UACjDK,MAAI,CAAC/B,aAAa,GAAG,IAAI;UACzB+B,MAAI,CAAClB,WAAW,CAAC;YAAEa,MAAM,EAANA;UAAO,CAAC,CAAC;UAC5B7C,oBAAoB,CAAC,CAAC;UACtBkD,MAAI,CAACZ,WAAW,CAACnC,GAAG,CAACoC,OAAO,CAAC;QAC/B,CAAC,CAAC;MACJ;IAAC;MAAAlB,GAAA;MAAAC,KAAA,EAED,SAAAgB,YAAoBc,aAAsB,EAAE;QAAA,IAAAC,cAAA,EAAAC,eAAA,EAAAC,cAAA;QAC1C,IAAI,CAAC,IAAI,CAACnB,IAAI,EAAE;UACd;QACF;QAEA,IAAIoB,aAAsD,GACxD,IAAI,CAACpB,IAAI,CAACqB,MAAM,CAACC,aAAa,IAAI,IAAI,CAACtB,IAAI,CAACqB,MAAM,CAACE,SAAS,GAAAzB,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAEnD,IAAI,CAACC,IAAI,CAACH,aAAa;UAC1Bc,KAAK,EAAE,SAAS;UAChBa,YAAY,EAAE,IAAI,CAACxB,IAAI,CAACqB,MAAM,CAACC,aAAa,GACxC,SAAS,GACT,SAAS;UACbG,WAAW,EAAE,IAAI,CAACzB,IAAI,CAACqB,MAAM,CAACC,aAAa,GACvC,SAAS,GACT;QAAS,KAEf,IAAI,CAACtB,IAAI,CAACH,aAAa;QAE7B,IAAM6B,SAAS,GACb,EAAAT,cAAA,GAAAG,aAAa,cAAAH,cAAA,uBAAbA,cAAA,CAAeN,KAAK,MACnBK,aAAa,IAAI,IAAI,CAAChB,IAAI,CAACS,MAAM,CAACD,kBAAkB,GACjD,IAAI,CAACR,IAAI,CAACS,MAAM,CAACD,kBAAkB,GACnC,IAAI,CAACR,IAAI,CAACS,MAAM,CAACF,aAAa,CAAC;QAErC,IAAIG,QAAQ,GACV,EAAAQ,eAAA,GAAAE,aAAa,cAAAF,eAAA,uBAAbA,eAAA,CAAeS,IAAI,MAAKf,SAAS,GAAGI,aAAa,GAAGI,aAAa,CAACO,IAAI;QAExE,IAAM9B,aAAa,GAAG6B,SAAS,GAC3B,IAAI,CAAC1B,IAAI,CAACS,MAAM,CAACA,MAAM,CAACiB,SAAS,CAAC,GAClCd,SAAS;QAEb,IAAIf,aAAa,IAAIa,QAAQ,IAAI,CAACb,aAAa,CAAC+B,KAAK,EAAE;UACrDlB,QAAQ,GAAG,KAAK;QAClB;QAEAU,aAAa,GAAAtB,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAAQqB,aAAa;UAAEO,IAAI,EAAEjB;QAAQ,EAAE;QACpD,IAAI,CAACd,WAAW,CAAC;UACfa,MAAM,EAAAX,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAAO,IAAI,CAACC,IAAI,CAACS,MAAM;YAAGE,KAAK,EAAEe;UAAS;QAClD,CAAC,CAAC;QAEF/D,oBAAoB,CAClB0C,QAAQ,CAACC,eAAe,EACxB,IAAI,CAACN,IAAI,CAACS,MAAM,EAChBiB,SAAS,EACTN,aAAa,EACb,IACF,CAAC;QAED,IAAIV,QAAQ,KAAK,IAAI,CAACV,IAAI,CAACS,MAAM,CAACC,QAAQ,EAAE;UAC1C,IAAI,CAACd,WAAW,CAAC;YACfa,MAAM,EAAAX,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAAO,IAAI,CAACC,IAAI,CAACS,MAAM;cAAGC,QAAQ,EAARA;YAAQ;UAC1C,CAAC,CAAC;UAEF,IAAMmB,UAAU,GAAGxB,QAAQ,CAACyB,aAAa,CAAC,yBAAyB,CAAC;UACpE,IAAID,UAAU,EAAE;YACdA,UAAU,CAACE,YAAY,CACrB,SAAS,EACTrB,QAAQ,GAAG,MAAM,GAAGgB,SAAS,KAAK,SAAS,GAAG,OAAO,GAAG,YAC1D,CAAC;UACH;QACF;QAEA,IAAMM,SAAS,GAAG3B,QAAQ,CAACyB,aAAa,CAAC,wBAAwB,CAAC;QAClE,IAAMG,cAAc,GAAGC,gBAAgB,CAAC7B,QAAQ,CAACC,eAAe,CAAC;QACjE,IAAM6B,WAAW,GAAGF,cAAc,CAACG,gBAAgB,CACjD,+BACF,CAAC;QAED/B,QAAQ,CAACC,eAAe,CAAC+B,KAAK,CAACC,eAAe,GAC5CL,cAAc,CAACG,gBAAgB,CAAC,4BAA4B,CAAC;QAE/D,IAAIJ,SAAS,EAAE;UACb,IAAI,CAACA,SAAS,CAACO,YAAY,CAAC,iBAAiB,CAAC,EAAE;YAC9CP,SAAS,CAACD,YAAY,CACpB,iBAAiB,EACjBC,SAAS,CAACQ,YAAY,CAAC,SAAS,CAClC,CAAC;UACH;UACA,IAAMC,UAAU,GACd,CAAAN,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEO,IAAI,CAAC,CAAC,KAClBV,SAAS,CAACQ,YAAY,CAAC,iBAAiB,CAAY;UACvDR,SAAS,CAACD,YAAY,CAAC,SAAS,EAAEU,UAAU,CAAC;QAC/C;QAEA,CAAAtB,cAAA,OAAI,CAACnB,IAAI,CAAE2C,IAAI,CAACC,QAAQ,cAAAzB,cAAA,eAAxBA,cAAA,CAA0B0B,WAAW,CAAC;UAAEC,IAAI,EAAE;QAAe,CAAC,CAAC;MACjE;IAAC;IAAA,OAAA1E,MAAA;EAAA,EAlIWH,UAAU;AAAA,CAmIvB"},"metadata":{},"sourceType":"module","externalDependencies":[]}