{"ast":null,"code":"import { fireEvent } from \"../../common/dom/fire_event\";\nconst loadVoiceCommandDialog = () => import(\"./ha-voice-command-dialog\");\nexport const showVoiceCommandDialog = (element, hass, dialogParams) => {\n  var _hass$auth$external, _dialogParams$start_l2;\n  if ((_hass$auth$external = hass.auth.external) !== null && _hass$auth$external !== void 0 && _hass$auth$external.config.hasAssist) {\n    var _dialogParams$start_l;\n    hass.auth.external.fireMessage({\n      type: \"assist/show\",\n      payload: {\n        pipeline_id: dialogParams.pipeline_id,\n        // Start listening by default for app\n        start_listening: (_dialogParams$start_l = dialogParams.start_listening) !== null && _dialogParams$start_l !== void 0 ? _dialogParams$start_l : true\n      }\n    });\n    return;\n  }\n  fireEvent(element, \"show-dialog\", {\n    dialogTag: \"ha-voice-command-dialog\",\n    dialogImport: loadVoiceCommandDialog,\n    dialogParams: {\n      pipeline_id: dialogParams.pipeline_id,\n      // Don't start listening by default for web\n      start_listening: (_dialogParams$start_l2 = dialogParams.start_listening) !== null && _dialogParams$start_l2 !== void 0 ? _dialogParams$start_l2 : false\n    }\n  });\n};","map":{"version":3,"names":["fireEvent","loadVoiceCommandDialog","showVoiceCommandDialog","element","hass","dialogParams","_hass$auth$external","_dialogParams$start_l2","auth","external","config","hasAssist","_dialogParams$start_l","fireMessage","type","payload","pipeline_id","start_listening","dialogTag","dialogImport"],"sources":["/Users/sercanardil/Desktop/frontend/src/dialogs/voice-command-dialog/show-ha-voice-command-dialog.ts"],"sourcesContent":["import { fireEvent } from \"../../common/dom/fire_event\";\nimport { HomeAssistant } from \"../../types\";\n\nconst loadVoiceCommandDialog = () => import(\"./ha-voice-command-dialog\");\n\nexport interface VoiceCommandDialogParams {\n  pipeline_id: \"last_used\" | \"preferred\" | string;\n  start_listening?: boolean;\n}\n\nexport const showVoiceCommandDialog = (\n  element: HTMLElement,\n  hass: HomeAssistant,\n  dialogParams: VoiceCommandDialogParams\n): void => {\n  if (hass.auth.external?.config.hasAssist) {\n    hass.auth.external!.fireMessage({\n      type: \"assist/show\",\n      payload: {\n        pipeline_id: dialogParams.pipeline_id,\n        // Start listening by default for app\n        start_listening: dialogParams.start_listening ?? true,\n      },\n    });\n    return;\n  }\n  fireEvent(element, \"show-dialog\", {\n    dialogTag: \"ha-voice-command-dialog\",\n    dialogImport: loadVoiceCommandDialog,\n    dialogParams: {\n      pipeline_id: dialogParams.pipeline_id,\n      // Don't start listening by default for web\n      start_listening: dialogParams.start_listening ?? false,\n    },\n  });\n};\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,6BAA6B;AAGvD,MAAMC,sBAAsB,GAAGA,CAAA,KAAM,MAAM,CAAC,2BAA2B,CAAC;AAOxE,OAAO,MAAMC,sBAAsB,GAAGA,CACpCC,OAAoB,EACpBC,IAAmB,EACnBC,YAAsC,KAC7B;EAAA,IAAAC,mBAAA,EAAAC,sBAAA;EACT,KAAAD,mBAAA,GAAIF,IAAI,CAACI,IAAI,CAACC,QAAQ,cAAAH,mBAAA,eAAlBA,mBAAA,CAAoBI,MAAM,CAACC,SAAS,EAAE;IAAA,IAAAC,qBAAA;IACxCR,IAAI,CAACI,IAAI,CAACC,QAAQ,CAAEI,WAAW,CAAC;MAC9BC,IAAI,EAAE,aAAa;MACnBC,OAAO,EAAE;QACPC,WAAW,EAAEX,YAAY,CAACW,WAAW;QACrC;QACAC,eAAe,GAAAL,qBAAA,GAAEP,YAAY,CAACY,eAAe,cAAAL,qBAAA,cAAAA,qBAAA,GAAI;MACnD;IACF,CAAC,CAAC;IACF;EACF;EACAZ,SAAS,CAACG,OAAO,EAAE,aAAa,EAAE;IAChCe,SAAS,EAAE,yBAAyB;IACpCC,YAAY,EAAElB,sBAAsB;IACpCI,YAAY,EAAE;MACZW,WAAW,EAAEX,YAAY,CAACW,WAAW;MACrC;MACAC,eAAe,GAAAV,sBAAA,GAAEF,YAAY,CAACY,eAAe,cAAAV,sBAAA,cAAAA,sBAAA,GAAI;IACnD;EACF,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}