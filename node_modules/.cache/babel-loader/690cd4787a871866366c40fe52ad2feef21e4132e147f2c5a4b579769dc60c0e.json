{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport { LitElement, html } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { navigate } from \"../../../../common/navigate\";\nimport \"../../../../components/data-table/ha-data-table\";\nimport { listAssistDevices, listAssistPipelines } from \"../../../../data/assist_pipeline\";\nimport { computeDeviceName } from \"../../../../data/device_registry\";\nimport \"../../../../layouts/hass-subpage\";\nlet AssistDevicesPage = _decorate([customElement(\"ha-config-voice-assistants-assist-devices\")], function (_initialize, _LitElement) {\n  class AssistDevicesPage extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: AssistDevicesPage,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"narrow\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_pipelines\",\n      value() {\n        return {};\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_preferred\",\n      value() {\n        return null;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_devices\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_columns\",\n      value() {\n        return memoizeOne(localize => {\n          const columns = {\n            name: {\n              title: localize(\"ui.panel.config.voice_assistants.assistants.pipeline.devices.device\"),\n              filterable: true,\n              sortable: true,\n              grows: true\n            },\n            pipeline: {\n              title: localize(\"ui.panel.config.voice_assistants.assistants.pipeline.devices.pipeline\"),\n              width: \"30%\",\n              filterable: true,\n              sortable: true\n            },\n            area: {\n              title: localize(\"ui.panel.config.voice_assistants.assistants.pipeline.devices.area\"),\n              filterable: true,\n              sortable: true,\n              width: \"30%\"\n            }\n          };\n          return columns;\n        });\n      }\n    }, {\n      kind: \"field\",\n      key: \"_data\",\n      value() {\n        return memoizeOne((localize, deviceReg, areaReg, states, pipelines, preferred, assistDevices) => assistDevices.map(assistDevice => {\n          var _states$assistDevice$, _pipelines$pipeline, _areaReg$device$area_;\n          const device = deviceReg[assistDevice.device_id];\n          const selected = (_states$assistDevice$ = states[assistDevice.pipeline_entity]) === null || _states$assistDevice$ === void 0 ? void 0 : _states$assistDevice$.state;\n          const isPreferred = selected === \"preferred\";\n          const pipeline = isPreferred ? preferred : selected;\n          const pipelineName = pipeline && ((_pipelines$pipeline = pipelines[pipeline]) === null || _pipelines$pipeline === void 0 ? void 0 : _pipelines$pipeline.name) || pipeline;\n          return {\n            ...assistDevice,\n            name: device ? computeDeviceName(device, this.hass) : \"\",\n            pipeline: isPreferred ? localize(\"ui.components.pipeline-picker.preferred\", {\n              preferred: pipelineName\n            }) : pipelineName || \"\",\n            area: device && device.area_id && ((_areaReg$device$area_ = areaReg[device.area_id]) === null || _areaReg$device$area_ === void 0 ? void 0 : _areaReg$device$area_.name) || \"\"\n          };\n        }));\n      }\n    }, {\n      kind: \"method\",\n      key: \"firstUpdated\",\n      value: function firstUpdated(changedProps) {\n        _get(_getPrototypeOf(AssistDevicesPage.prototype), \"firstUpdated\", this).call(this, changedProps);\n        listAssistPipelines(this.hass).then(pipelines => {\n          const lookup = {};\n          for (const pipeline of pipelines.pipelines) {\n            lookup[pipeline.id] = pipeline;\n          }\n          this._pipelines = lookup;\n          this._preferred = pipelines.preferred_pipeline;\n        });\n        listAssistDevices(this.hass).then(devices => {\n          this._devices = devices;\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        return html`\n      <hass-subpage\n        .hass=${this.hass}\n        .narrow=${this.narrow}\n        .header=${this.hass.localize(\"ui.panel.config.voice_assistants.assistants.pipeline.devices.title\")}\n      >\n        <ha-data-table\n          clickable\n          id=\"device_id\"\n          .hass=${this.hass}\n          .columns=${this._columns(this.hass.localize)}\n          .data=${this._data(this.hass.localize, this.hass.devices, this.hass.areas, this.hass.states, this._pipelines, this._preferred, this._devices || [])}\n          auto-height\n          @row-click=${this._handleRowClicked}\n        ></ha-data-table>\n      </hass-subpage>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleRowClicked\",\n      value: function _handleRowClicked(ev) {\n        const device = ev.detail.id;\n        navigate(`/config/devices/device/${device}`);\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["LitElement","html","customElement","property","state","memoizeOne","navigate","listAssistDevices","listAssistPipelines","computeDeviceName","AssistDevicesPage","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","type","Boolean","localize","columns","name","title","filterable","sortable","grows","pipeline","width","area","deviceReg","areaReg","states","pipelines","preferred","assistDevices","map","assistDevice","_states$assistDevice$","_pipelines$pipeline","_areaReg$device$area_","device","device_id","selected","pipeline_entity","isPreferred","pipelineName","hass","area_id","firstUpdated","changedProps","_get","_getPrototypeOf","prototype","call","then","lookup","id","_pipelines","_preferred","preferred_pipeline","devices","_devices","render","narrow","_columns","_data","areas","_handleRowClicked","ev","detail"],"sources":["/workspaces/frontend/src/panels/config/voice-assistants/assist/ha-config-voice-assistants-assist-devices.ts"],"sourcesContent":["import { LitElement, PropertyValues, html } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { navigate } from \"../../../../common/navigate\";\nimport { LocalizeFunc } from \"../../../../common/translations/localize\";\nimport \"../../../../components/data-table/ha-data-table\";\nimport type { DataTableColumnContainer } from \"../../../../components/data-table/ha-data-table\";\nimport {\n  AssistDevice,\n  AssistPipeline,\n  listAssistDevices,\n  listAssistPipelines,\n} from \"../../../../data/assist_pipeline\";\nimport { computeDeviceName } from \"../../../../data/device_registry\";\nimport \"../../../../layouts/hass-subpage\";\nimport { HomeAssistant } from \"../../../../types\";\n\ninterface AssistDeviceExtra extends AssistDevice {\n  name: string;\n  pipeline: string;\n  area: string;\n}\n\n@customElement(\"ha-config-voice-assistants-assist-devices\")\nclass AssistDevicesPage extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ type: Boolean }) public narrow = false;\n\n  @state() private _pipelines: Record<string, AssistPipeline> = {};\n\n  @state() private _preferred: string | null = null;\n\n  @state() private _devices?: AssistDevice[];\n\n  private _columns = memoizeOne(\n    (localize: LocalizeFunc): DataTableColumnContainer => {\n      const columns: DataTableColumnContainer<AssistDeviceExtra> = {\n        name: {\n          title: localize(\n            \"ui.panel.config.voice_assistants.assistants.pipeline.devices.device\"\n          ),\n          filterable: true,\n          sortable: true,\n          grows: true,\n        },\n        pipeline: {\n          title: localize(\n            \"ui.panel.config.voice_assistants.assistants.pipeline.devices.pipeline\"\n          ),\n          width: \"30%\",\n          filterable: true,\n          sortable: true,\n        },\n        area: {\n          title: localize(\n            \"ui.panel.config.voice_assistants.assistants.pipeline.devices.area\"\n          ),\n          filterable: true,\n          sortable: true,\n          width: \"30%\",\n        },\n      };\n\n      return columns;\n    }\n  );\n\n  private _data = memoizeOne(\n    (\n      localize: LocalizeFunc,\n      deviceReg: HomeAssistant[\"devices\"],\n      areaReg: HomeAssistant[\"areas\"],\n      states: HomeAssistant[\"states\"],\n      pipelines: Record<string, AssistPipeline>,\n      preferred: string | null,\n      assistDevices: AssistDevice[]\n    ): AssistDeviceExtra[] =>\n      assistDevices.map((assistDevice) => {\n        const device = deviceReg[assistDevice.device_id];\n        const selected = states[assistDevice.pipeline_entity]?.state;\n        const isPreferred = selected === \"preferred\";\n        const pipeline = isPreferred ? preferred : selected;\n        const pipelineName =\n          (pipeline && pipelines[pipeline]?.name) || pipeline;\n\n        return {\n          ...assistDevice,\n          name: device ? computeDeviceName(device, this.hass) : \"\",\n          pipeline: isPreferred\n            ? localize(\"ui.components.pipeline-picker.preferred\", {\n                preferred: pipelineName,\n              })\n            : pipelineName || \"\",\n          area:\n            (device && device.area_id && areaReg[device.area_id]?.name) || \"\",\n        };\n      })\n  );\n\n  protected firstUpdated(changedProps: PropertyValues) {\n    super.firstUpdated(changedProps);\n\n    listAssistPipelines(this.hass).then((pipelines) => {\n      const lookup: Record<string, AssistPipeline> = {};\n      for (const pipeline of pipelines.pipelines) {\n        lookup[pipeline.id] = pipeline;\n      }\n\n      this._pipelines = lookup;\n      this._preferred = pipelines.preferred_pipeline;\n    });\n\n    listAssistDevices(this.hass).then((devices) => {\n      this._devices = devices;\n    });\n  }\n\n  render() {\n    return html`\n      <hass-subpage\n        .hass=${this.hass}\n        .narrow=${this.narrow}\n        .header=${this.hass.localize(\n          \"ui.panel.config.voice_assistants.assistants.pipeline.devices.title\"\n        )}\n      >\n        <ha-data-table\n          clickable\n          id=\"device_id\"\n          .hass=${this.hass}\n          .columns=${this._columns(this.hass.localize)}\n          .data=${this._data(\n            this.hass.localize,\n            this.hass.devices,\n            this.hass.areas,\n            this.hass.states,\n            this._pipelines,\n            this._preferred,\n            this._devices || []\n          )}\n          auto-height\n          @row-click=${this._handleRowClicked}\n        ></ha-data-table>\n      </hass-subpage>\n    `;\n  }\n\n  private _handleRowClicked(ev: CustomEvent) {\n    const device: AssistDevice = ev.detail.id;\n    navigate(`/config/devices/device/${device}`);\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-config-voice-assistants-assist-devices\": AssistDevicesPage;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}