{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport \"../../../../../components/ha-form/ha-form\";\nimport { css, html, LitElement } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { fireEvent } from \"../../../../../common/dom/fire_event\";\nexport let HaHassTrigger = _decorate([customElement(\"ha-automation-trigger-homeassistant\")], function (_initialize, _LitElement) {\n  class HaHassTrigger extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaHassTrigger,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"trigger\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"disabled\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_schema\",\n      value() {\n        return memoizeOne(localize => [{\n          name: \"event\",\n          type: \"select\",\n          required: true,\n          options: [[\"start\", localize(\"ui.panel.config.automation.editor.triggers.type.homeassistant.start\")], [\"shutdown\", localize(\"ui.panel.config.automation.editor.triggers.type.homeassistant.shutdown\")]]\n        }]);\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"defaultConfig\",\n      value: function defaultConfig() {\n        return {\n          event: \"start\"\n        };\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        return html`\n      <ha-form\n        .schema=${this._schema(this.hass.localize)}\n        .data=${this.trigger}\n        .hass=${this.hass}\n        .disabled=${this.disabled}\n        .computeLabel=${this._computeLabelCallback}\n        @value-changed=${this._valueChanged}\n      ></ha-form>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_valueChanged\",\n      value: function _valueChanged(ev) {\n        ev.stopPropagation();\n        const newTrigger = ev.detail.value;\n        fireEvent(this, \"value-changed\", {\n          value: newTrigger\n        });\n      }\n    }, {\n      kind: \"field\",\n      key: \"_computeLabelCallback\",\n      value() {\n        return schema => this.hass.localize(`ui.panel.config.automation.editor.triggers.type.homeassistant.${schema.name}`);\n      }\n    }, {\n      kind: \"field\",\n      static: true,\n      key: \"styles\",\n      value() {\n        return css`\n    label {\n      display: flex;\n      align-items: center;\n    }\n  `;\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","customElement","property","memoizeOne","fireEvent","HaHassTrigger","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","type","Boolean","localize","name","required","options","static","defaultConfig","event","render","_schema","hass","trigger","disabled","_computeLabelCallback","_valueChanged","ev","stopPropagation","newTrigger","detail","schema"],"sources":["/workspaces/frontend/src/panels/config/automation/trigger/types/ha-automation-trigger-homeassistant.ts"],"sourcesContent":["import \"../../../../../components/ha-form/ha-form\";\nimport { css, html, LitElement } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { fireEvent } from \"../../../../../common/dom/fire_event\";\nimport type { HassTrigger } from \"../../../../../data/automation\";\nimport type { HomeAssistant } from \"../../../../../types\";\nimport type { LocalizeFunc } from \"../../../../../common/translations/localize\";\nimport type { SchemaUnion } from \"../../../../../components/ha-form/types\";\n\n@customElement(\"ha-automation-trigger-homeassistant\")\nexport class HaHassTrigger extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public trigger!: HassTrigger;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  private _schema = memoizeOne(\n    (localize: LocalizeFunc) =>\n      [\n        {\n          name: \"event\",\n          type: \"select\",\n          required: true,\n          options: [\n            [\n              \"start\",\n              localize(\n                \"ui.panel.config.automation.editor.triggers.type.homeassistant.start\"\n              ),\n            ],\n            [\n              \"shutdown\",\n              localize(\n                \"ui.panel.config.automation.editor.triggers.type.homeassistant.shutdown\"\n              ),\n            ],\n          ],\n        },\n      ] as const\n  );\n\n  public static get defaultConfig() {\n    return {\n      event: \"start\" as HassTrigger[\"event\"],\n    };\n  }\n\n  protected render() {\n    return html`\n      <ha-form\n        .schema=${this._schema(this.hass.localize)}\n        .data=${this.trigger}\n        .hass=${this.hass}\n        .disabled=${this.disabled}\n        .computeLabel=${this._computeLabelCallback}\n        @value-changed=${this._valueChanged}\n      ></ha-form>\n    `;\n  }\n\n  private _valueChanged(ev: CustomEvent): void {\n    ev.stopPropagation();\n    const newTrigger = ev.detail.value;\n    fireEvent(this, \"value-changed\", { value: newTrigger });\n  }\n\n  private _computeLabelCallback = (\n    schema: SchemaUnion<ReturnType<typeof this._schema>>\n  ): string =>\n    this.hass.localize(\n      `ui.panel.config.automation.editor.triggers.type.homeassistant.${schema.name}`\n    );\n\n  static styles = css`\n    label {\n      display: flex;\n      align-items: center;\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-automation-trigger-homeassistant\": HaHassTrigger;\n  }\n}\n"],"mappings":";AAAA,OAAO,2CAA2C;AAClD,SAASA,GAAG,EAAEC,IAAI,EAAEC,UAAU,QAAQ,KAAK;AAC3C,SAASC,aAAa,EAAEC,QAAQ,QAAQ,gBAAgB;AACxD,OAAOC,UAAU,MAAM,aAAa;AACpC,SAASC,SAAS,QAAQ,sCAAsC;AAMhE,WACaC,aAAa,GAAAC,SAAA,EADzBL,aAAa,CAAC,qCAAqC,CAAC,aAAAM,WAAA,EAAAC,WAAA;EAArD,MACaH,aAAa,SAAAG,WAAA,CAAoB;IAAAC,YAAA,GAAAC,IAAA;MAAA,SAAAA,IAAA;MAAAH,WAAA;IAAA;EAsE9C;EAAC;IAAAI,CAAA,EAtEYN,aAAa;IAAAO,CAAA;MAAAC,IAAA;MAAAC,UAAA,GACvBZ,QAAQ,CAAC;QAAEa,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAC,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAE9BZ,QAAQ,CAAC;QAAEa,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAC,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAE9BZ,QAAQ,CAAC;QAAEgB,IAAI,EAAEC;MAAQ,CAAC,CAAC;MAAAH,GAAA;MAAAC,MAAA;QAAA,OAAmB,KAAK;MAAA;IAAA;MAAAJ,IAAA;MAAAG,GAAA;MAAAC,MAAA;QAAA,OAElCd,UAAU,CACzBiB,QAAsB,IACrB,CACE;UACEC,IAAI,EAAE,OAAO;UACbH,IAAI,EAAE,QAAQ;UACdI,QAAQ,EAAE,IAAI;UACdC,OAAO,EAAE,CACP,CACE,OAAO,EACPH,QAAQ,CACN,qEACF,CAAC,CACF,EACD,CACE,UAAU,EACVA,QAAQ,CACN,wEACF,CAAC,CACF;QAEL,CAAC,CAEP,CAAC;MAAA;IAAA;MAAAP,IAAA;MAAAW,MAAA;MAAAR,GAAA;MAAAC,KAAA,EAED,SAAAQ,cAAA,EAAkC;QAChC,OAAO;UACLC,KAAK,EAAE;QACT,CAAC;MACH;IAAC;MAAAb,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAU,OAAA,EAAmB;QACjB,OAAO5B,IAAK;AAChB;AACA,kBAAkB,IAAI,CAAC6B,OAAO,CAAC,IAAI,CAACC,IAAI,CAACT,QAAQ,CAAE;AACnD,gBAAgB,IAAI,CAACU,OAAQ;AAC7B,gBAAgB,IAAI,CAACD,IAAK;AAC1B,oBAAoB,IAAI,CAACE,QAAS;AAClC,wBAAwB,IAAI,CAACC,qBAAsB;AACnD,yBAAyB,IAAI,CAACC,aAAc;AAC5C;AACA,KAAK;MACH;IAAC;MAAApB,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAgB,cAAsBC,EAAe,EAAQ;QAC3CA,EAAE,CAACC,eAAe,CAAC,CAAC;QACpB,MAAMC,UAAU,GAAGF,EAAE,CAACG,MAAM,CAACpB,KAAK;QAClCb,SAAS,CAAC,IAAI,EAAE,eAAe,EAAE;UAAEa,KAAK,EAAEmB;QAAW,CAAC,CAAC;MACzD;IAAC;MAAAvB,IAAA;MAAAG,GAAA;MAAAC,MAAA;QAAA,OAGCqB,MAAoD,IAEpD,IAAI,CAACT,IAAI,CAACT,QAAQ,CACf,iEAAgEkB,MAAM,CAACjB,IAAK,EAC/E,CAAC;MAAA;IAAA;MAAAR,IAAA;MAAAW,MAAA;MAAAR,GAAA;MAAAC,MAAA;QAAA,OAEanB,GAAI;AACtB;AACA;AACA;AACA;AACA,GAAG;MAAA;IAAA;EAAA;AAAA,GArEgCE,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}