{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _regeneratorRuntime from \"@babel/runtime/helpers/regeneratorRuntime\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _decorate from \"@babel/runtime/helpers/decorate\";\nvar _templateObject, _templateObject2, _templateObject3;\nimport \"core-js/modules/es.array.concat.js\";\nimport \"@material/mwc-button/mwc-button\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport \"../../components/ha-dialog\";\nimport \"../../components/ha-svg-icon\";\nimport \"../../components/ha-switch\";\nimport { RecurrenceRange } from \"../../data/calendar\";\nvar ConfirmEventDialogBox = _decorate([customElement(\"confirm-event-dialog-box\")], function (_initialize, _LitElement) {\n  var ConfirmEventDialogBox = /*#__PURE__*/function (_LitElement2) {\n    _inherits(ConfirmEventDialogBox, _LitElement2);\n    function ConfirmEventDialogBox() {\n      var _this;\n      _classCallCheck(this, ConfirmEventDialogBox);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, ConfirmEventDialogBox, [].concat(args));\n      _initialize(_assertThisInitialized(_this));\n      return _this;\n    }\n    return _createClass(ConfirmEventDialogBox);\n  }(_LitElement);\n  return {\n    F: ConfirmEventDialogBox,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_params\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"showDialog\",\n      value: function () {\n        var _showDialog = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(params) {\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                this._params = params;\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee, this);\n        }));\n        function showDialog(_x) {\n          return _showDialog.apply(this, arguments);\n        }\n        return showDialog;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"closeDialog\",\n      value: function closeDialog() {\n        return true;\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this._params) {\n          return nothing;\n        }\n        return html(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      <ha-dialog\\n        open\\n        scrimClickAction\\n        escapeKeyAction\\n        @closed=\", \"\\n        defaultAction=\\\"ignore\\\"\\n        .heading=\", \"\\n      >\\n        <div>\\n          <p>\", \"</p>\\n        </div>\\n        <mwc-button @click=\", \" slot=\\\"secondaryAction\\\">\\n          \", \"\\n        </mwc-button>\\n        <mwc-button\\n          slot=\\\"primaryAction\\\"\\n          @click=\", \"\\n          dialogInitialFocus\\n          class=\\\"destructive\\\"\\n        >\\n          \", \"\\n        </mwc-button>\\n        \", \"\\n      </ha-dialog>\\n    \"])), this._dialogClosed, this._params.title, this._params.text, this._dismiss, this.hass.localize(\"ui.dialogs.generic.cancel\"), this._confirm, this._params.confirmText, this._params.confirmFutureText ? html(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n              <mwc-button\\n                @click=\", \"\\n                class=\\\"destructive\\\"\\n                slot=\\\"primaryAction\\\"\\n              >\\n                \", \"\\n              </mwc-button>\\n            \"])), this._confirmFuture, this._params.confirmFutureText) : \"\");\n      }\n    }, {\n      kind: \"method\",\n      key: \"_dismiss\",\n      value: function _dismiss() {\n        if (this._params.cancel) {\n          this._params.cancel();\n        }\n        this._close();\n      }\n    }, {\n      kind: \"method\",\n      key: \"_confirm\",\n      value: function _confirm() {\n        if (this._params.confirm) {\n          this._params.confirm(RecurrenceRange.THISEVENT);\n        }\n        this._close();\n      }\n    }, {\n      kind: \"method\",\n      key: \"_confirmFuture\",\n      value: function _confirmFuture() {\n        if (this._params.confirm) {\n          this._params.confirm(RecurrenceRange.THISANDFUTURE);\n        }\n        this._close();\n      }\n    }, {\n      kind: \"method\",\n      key: \"_dialogClosed\",\n      value: function _dialogClosed(ev) {\n        if (ev.detail.action === \"ignore\") {\n          return;\n        }\n        this._dismiss();\n      }\n    }, {\n      kind: \"method\",\n      key: \"_close\",\n      value: function _close() {\n        if (!this._params) {\n          return;\n        }\n        this._params = undefined;\n        fireEvent(this, \"dialog-closed\", {\n          dialog: this.localName\n        });\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n      :host([inert]) {\\n        pointer-events: initial !important;\\n        cursor: initial !important;\\n      }\\n      a {\\n        color: var(--primary-color);\\n      }\\n      p {\\n        margin: 0;\\n        color: var(--primary-text-color);\\n      }\\n      .no-bottom-padding {\\n        padding-bottom: 0;\\n      }\\n      .secondary {\\n        color: var(--secondary-text-color);\\n      }\\n      .destructive {\\n        --mdc-theme-primary: var(--error-color);\\n      }\\n      ha-dialog {\\n        /* Place above other dialogs */\\n        --dialog-z-index: 104;\\n      }\\n      @media all and (min-width: 600px) {\\n        ha-dialog {\\n          --mdc-dialog-min-width: 400px;\\n        }\\n      }\\n      ha-textfield {\\n        width: 100%;\\n      }\\n    \"])));\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","nothing","customElement","property","state","fireEvent","RecurrenceRange","ConfirmEventDialogBox","_decorate","_initialize","_LitElement","_LitElement2","_inherits","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_assertThisInitialized","_createClass","F","d","kind","decorators","attribute","key","value","_showDialog","_asyncToGenerator","_regeneratorRuntime","mark","_callee","params","wrap","_callee$","_context","prev","next","_params","stop","showDialog","_x","apply","closeDialog","render","_templateObject","_taggedTemplateLiteral","_dialogClosed","title","text","_dismiss","hass","localize","_confirm","confirmText","confirmFutureText","_templateObject2","_confirmFuture","cancel","_close","confirm","THISEVENT","THISANDFUTURE","ev","detail","action","undefined","dialog","localName","static","styles","_templateObject3"],"sources":["/workspaces/frontend/src/panels/calendar/confirm-event-dialog-box.ts"],"sourcesContent":["import \"@material/mwc-button/mwc-button\";\nimport { css, CSSResultGroup, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport \"../../components/ha-dialog\";\nimport \"../../components/ha-svg-icon\";\nimport \"../../components/ha-switch\";\nimport { RecurrenceRange } from \"../../data/calendar\";\nimport { HomeAssistant } from \"../../types\";\nimport { ConfirmEventDialogBoxParams } from \"./show-confirm-event-dialog-box\";\n\n@customElement(\"confirm-event-dialog-box\")\nclass ConfirmEventDialogBox extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @state() private _params?: ConfirmEventDialogBoxParams;\n\n  public async showDialog(params: ConfirmEventDialogBoxParams): Promise<void> {\n    this._params = params;\n  }\n\n  public closeDialog(): boolean {\n    return true;\n  }\n\n  protected render() {\n    if (!this._params) {\n      return nothing;\n    }\n\n    return html`\n      <ha-dialog\n        open\n        scrimClickAction\n        escapeKeyAction\n        @closed=${this._dialogClosed}\n        defaultAction=\"ignore\"\n        .heading=${this._params.title}\n      >\n        <div>\n          <p>${this._params.text}</p>\n        </div>\n        <mwc-button @click=${this._dismiss} slot=\"secondaryAction\">\n          ${this.hass.localize(\"ui.dialogs.generic.cancel\")}\n        </mwc-button>\n        <mwc-button\n          slot=\"primaryAction\"\n          @click=${this._confirm}\n          dialogInitialFocus\n          class=\"destructive\"\n        >\n          ${this._params.confirmText}\n        </mwc-button>\n        ${this._params.confirmFutureText\n          ? html`\n              <mwc-button\n                @click=${this._confirmFuture}\n                class=\"destructive\"\n                slot=\"primaryAction\"\n              >\n                ${this._params.confirmFutureText}\n              </mwc-button>\n            `\n          : \"\"}\n      </ha-dialog>\n    `;\n  }\n\n  private _dismiss(): void {\n    if (this._params!.cancel) {\n      this._params!.cancel();\n    }\n    this._close();\n  }\n\n  private _confirm(): void {\n    if (this._params!.confirm) {\n      this._params!.confirm(RecurrenceRange.THISEVENT);\n    }\n    this._close();\n  }\n\n  private _confirmFuture(): void {\n    if (this._params!.confirm) {\n      this._params!.confirm(RecurrenceRange.THISANDFUTURE);\n    }\n    this._close();\n  }\n\n  private _dialogClosed(ev) {\n    if (ev.detail.action === \"ignore\") {\n      return;\n    }\n    this._dismiss();\n  }\n\n  private _close(): void {\n    if (!this._params) {\n      return;\n    }\n    this._params = undefined;\n    fireEvent(this, \"dialog-closed\", { dialog: this.localName });\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      :host([inert]) {\n        pointer-events: initial !important;\n        cursor: initial !important;\n      }\n      a {\n        color: var(--primary-color);\n      }\n      p {\n        margin: 0;\n        color: var(--primary-text-color);\n      }\n      .no-bottom-padding {\n        padding-bottom: 0;\n      }\n      .secondary {\n        color: var(--secondary-text-color);\n      }\n      .destructive {\n        --mdc-theme-primary: var(--error-color);\n      }\n      ha-dialog {\n        /* Place above other dialogs */\n        --dialog-z-index: 104;\n      }\n      @media all and (min-width: 600px) {\n        ha-dialog {\n          --mdc-dialog-min-width: 400px;\n        }\n      }\n      ha-textfield {\n        width: 100%;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"confirm-event-dialog-box\": ConfirmEventDialogBox;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}