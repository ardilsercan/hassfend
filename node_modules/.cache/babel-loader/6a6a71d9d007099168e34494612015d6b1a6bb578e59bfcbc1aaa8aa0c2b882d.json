{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/helpers/regeneratorRuntime\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _decorate from \"@babel/runtime/helpers/decorate\";\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8;\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"@material/mwc-button\";\nimport { css, html, LitElement } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport \"../../components/ha-area-picker\";\nimport { computeDeviceName, updateDeviceRegistryEntry } from \"../../data/device_registry\";\nimport { showAlertDialog } from \"../generic/show-dialog-box\";\nimport { configFlowContentStyles } from \"./styles\";\nvar StepFlowCreateEntry = _decorate([customElement(\"step-flow-create-entry\")], function (_initialize, _LitElement) {\n  var StepFlowCreateEntry = /*#__PURE__*/function (_LitElement2) {\n    _inherits(StepFlowCreateEntry, _LitElement2);\n    function StepFlowCreateEntry() {\n      var _this;\n      _classCallCheck(this, StepFlowCreateEntry);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, StepFlowCreateEntry, [].concat(args));\n      _initialize(_assertThisInitialized(_this));\n      return _this;\n    }\n    return _createClass(StepFlowCreateEntry);\n  }(_LitElement);\n  return {\n    F: StepFlowCreateEntry,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"flowConfig\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"step\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"devices\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var _this$step$result,\n          _this2 = this;\n        var localize = this.hass.localize;\n        return html(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      <h2>\", \"!</h2>\\n      <div class=\\\"content\\\">\\n        \", \"\\n        \", \"\\n        \", \"\\n      </div>\\n      <div class=\\\"buttons\\\">\\n        <mwc-button @click=\", \"\\n          >\", \"</mwc-button\\n        >\\n      </div>\\n    \"])), localize(\"ui.panel.config.integrations.config_flow.success\"), this.flowConfig.renderCreateEntryDescription(this.hass, this.step), ((_this$step$result = this.step.result) === null || _this$step$result === void 0 ? void 0 : _this$step$result.state) === \"not_loaded\" ? html(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"<span class=\\\"error\\\"\\n              >\", \"</span\\n            >\"])), localize(\"ui.panel.config.integrations.config_flow.not_loaded\")) : \"\", this.devices.length === 0 ? \"\" : html(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n              <p>\\n                \", \":\\n              </p>\\n              <div class=\\\"devices\\\">\\n                \", \"\\n              </div>\\n            \"])), localize(\"ui.panel.config.integrations.config_flow.found_following_devices\"), this.devices.map(function (device) {\n          var _device$area_id;\n          return html(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n                    <div class=\\\"device\\\">\\n                      <div>\\n                        <b>\", \"</b><br />\\n                        \", \"\\n                      </div>\\n                      <ha-area-picker\\n                        .hass=\", \"\\n                        .device=\", \"\\n                        .value=\", \"\\n                        @value-changed=\", \"\\n                      ></ha-area-picker>\\n                    </div>\\n                  \"])), computeDeviceName(device, _this2.hass), !device.model && !device.manufacturer ? html(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"&nbsp;\"]))) : html(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"\", \"\\n                            \", \"\"])), device.model, device.manufacturer ? html(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral([\"(\", \")\"])), device.manufacturer) : \"\"), _this2.hass, device.id, (_device$area_id = device.area_id) !== null && _device$area_id !== void 0 ? _device$area_id : undefined, _this2._areaPicked);\n        })), this._flowDone, localize(\"ui.panel.config.integrations.config_flow.finish\"));\n      }\n    }, {\n      kind: \"method\",\n      key: \"_flowDone\",\n      value: function _flowDone() {\n        fireEvent(this, \"flow-update\", {\n          step: undefined\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_areaPicked\",\n      value: function () {\n        var _areaPicked2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(ev) {\n          var picker, device, area;\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                picker = ev.currentTarget;\n                device = picker.device;\n                area = ev.detail.value;\n                _context.prev = 3;\n                _context.next = 6;\n                return updateDeviceRegistryEntry(this.hass, device, {\n                  area_id: area\n                });\n              case 6:\n                _context.next = 12;\n                break;\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](3);\n                showAlertDialog(this, {\n                  text: this.hass.localize(\"ui.panel.config.integrations.config_flow.error_saving_area\", {\n                    error: _context.t0.message\n                  })\n                });\n                picker.value = null;\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee, this, [[3, 8]]);\n        }));\n        function _areaPicked(_x) {\n          return _areaPicked2.apply(this, arguments);\n        }\n        return _areaPicked;\n      }()\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [configFlowContentStyles, css(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral([\"\\n        .devices {\\n          display: flex;\\n          flex-wrap: wrap;\\n          margin: -4px;\\n          max-height: 600px;\\n          overflow-y: auto;\\n        }\\n        .device {\\n          border: 1px solid var(--divider-color);\\n          padding: 5px;\\n          border-radius: 4px;\\n          margin: 4px;\\n          display: inline-block;\\n          width: 250px;\\n        }\\n        .buttons > *:last-child {\\n          margin-left: auto;\\n          margin-inline-start: auto;\\n          margin-inline-end: initial;\\n        }\\n        @media all and (max-width: 450px), all and (max-height: 500px) {\\n          .device {\\n            width: 100%;\\n          }\\n        }\\n        .error {\\n          color: var(--error-color);\\n        }\\n      \"])))];\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","customElement","property","fireEvent","computeDeviceName","updateDeviceRegistryEntry","showAlertDialog","configFlowContentStyles","StepFlowCreateEntry","_decorate","_initialize","_LitElement","_LitElement2","_inherits","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_assertThisInitialized","_createClass","F","d","kind","decorators","attribute","key","value","render","_this$step$result","_this2","localize","hass","_templateObject","_taggedTemplateLiteral","flowConfig","renderCreateEntryDescription","step","result","state","_templateObject2","devices","_templateObject3","map","device","_device$area_id","_templateObject4","model","manufacturer","_templateObject5","_templateObject6","_templateObject7","id","area_id","undefined","_areaPicked","_flowDone","_areaPicked2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","ev","picker","area","wrap","_callee$","_context","prev","next","currentTarget","detail","t0","text","error","message","stop","_x","apply","static","styles","_templateObject8"],"sources":["/workspaces/frontend/src/dialogs/config-flow/step-flow-create-entry.ts"],"sourcesContent":["import \"@material/mwc-button\";\nimport { css, CSSResultGroup, html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport \"../../components/ha-area-picker\";\nimport { DataEntryFlowStepCreateEntry } from \"../../data/data_entry_flow\";\nimport {\n  computeDeviceName,\n  DeviceRegistryEntry,\n  updateDeviceRegistryEntry,\n} from \"../../data/device_registry\";\nimport { HomeAssistant } from \"../../types\";\nimport { showAlertDialog } from \"../generic/show-dialog-box\";\nimport { FlowConfig } from \"./show-dialog-data-entry-flow\";\nimport { configFlowContentStyles } from \"./styles\";\n\n@customElement(\"step-flow-create-entry\")\nclass StepFlowCreateEntry extends LitElement {\n  @property({ attribute: false }) public flowConfig!: FlowConfig;\n\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public step!: DataEntryFlowStepCreateEntry;\n\n  @property({ attribute: false }) public devices!: DeviceRegistryEntry[];\n\n  protected render(): TemplateResult {\n    const localize = this.hass.localize;\n\n    return html`\n      <h2>${localize(\"ui.panel.config.integrations.config_flow.success\")}!</h2>\n      <div class=\"content\">\n        ${this.flowConfig.renderCreateEntryDescription(this.hass, this.step)}\n        ${this.step.result?.state === \"not_loaded\"\n          ? html`<span class=\"error\"\n              >${localize(\n                \"ui.panel.config.integrations.config_flow.not_loaded\"\n              )}</span\n            >`\n          : \"\"}\n        ${this.devices.length === 0\n          ? \"\"\n          : html`\n              <p>\n                ${localize(\n                  \"ui.panel.config.integrations.config_flow.found_following_devices\"\n                )}:\n              </p>\n              <div class=\"devices\">\n                ${this.devices.map(\n                  (device) => html`\n                    <div class=\"device\">\n                      <div>\n                        <b>${computeDeviceName(device, this.hass)}</b><br />\n                        ${!device.model && !device.manufacturer\n                          ? html`&nbsp;`\n                          : html`${device.model}\n                            ${device.manufacturer\n                              ? html`(${device.manufacturer})`\n                              : \"\"}`}\n                      </div>\n                      <ha-area-picker\n                        .hass=${this.hass}\n                        .device=${device.id}\n                        .value=${device.area_id ?? undefined}\n                        @value-changed=${this._areaPicked}\n                      ></ha-area-picker>\n                    </div>\n                  `\n                )}\n              </div>\n            `}\n      </div>\n      <div class=\"buttons\">\n        <mwc-button @click=${this._flowDone}\n          >${localize(\n            \"ui.panel.config.integrations.config_flow.finish\"\n          )}</mwc-button\n        >\n      </div>\n    `;\n  }\n\n  private _flowDone(): void {\n    fireEvent(this, \"flow-update\", { step: undefined });\n  }\n\n  private async _areaPicked(ev: CustomEvent) {\n    const picker = ev.currentTarget as any;\n    const device = picker.device;\n\n    const area = ev.detail.value;\n    try {\n      await updateDeviceRegistryEntry(this.hass, device, {\n        area_id: area,\n      });\n    } catch (err: any) {\n      showAlertDialog(this, {\n        text: this.hass.localize(\n          \"ui.panel.config.integrations.config_flow.error_saving_area\",\n          { error: err.message }\n        ),\n      });\n      picker.value = null;\n    }\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      configFlowContentStyles,\n      css`\n        .devices {\n          display: flex;\n          flex-wrap: wrap;\n          margin: -4px;\n          max-height: 600px;\n          overflow-y: auto;\n        }\n        .device {\n          border: 1px solid var(--divider-color);\n          padding: 5px;\n          border-radius: 4px;\n          margin: 4px;\n          display: inline-block;\n          width: 250px;\n        }\n        .buttons > *:last-child {\n          margin-left: auto;\n          margin-inline-start: auto;\n          margin-inline-end: initial;\n        }\n        @media all and (max-width: 450px), all and (max-height: 500px) {\n          .device {\n            width: 100%;\n          }\n        }\n        .error {\n          color: var(--error-color);\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"step-flow-create-entry\": StepFlowCreateEntry;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}