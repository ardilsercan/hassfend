{"ast":null,"code":"import { isUnavailableState, OFF, UNAVAILABLE } from \"../../data/entity\";\nimport { computeDomain } from \"./compute_domain\";\nexport function stateActive(stateObj, state) {\n  const domain = computeDomain(stateObj.entity_id);\n  const compareState = state !== undefined ? state : stateObj === null || stateObj === void 0 ? void 0 : stateObj.state;\n  if ([\"button\", \"event\", \"input_button\", \"scene\"].includes(domain)) {\n    return compareState !== UNAVAILABLE;\n  }\n  if (isUnavailableState(compareState)) {\n    return false;\n  }\n\n  // The \"off\" check is relevant for most domains, but there are exceptions\n  // such as \"alert\" where \"off\" is still a somewhat active state and\n  // therefore gets a custom color and \"idle\" is instead the state that\n  // matches what most other domains consider inactive.\n  if (compareState === OFF && domain !== \"alert\") {\n    return false;\n  }\n\n  // Custom cases\n  switch (domain) {\n    case \"alarm_control_panel\":\n      return compareState !== \"disarmed\";\n    case \"alert\":\n      // \"on\" and \"off\" are active, as \"off\" just means alert was acknowledged but is still active\n      return compareState !== \"idle\";\n    case \"cover\":\n      return compareState !== \"closed\";\n    case \"device_tracker\":\n    case \"person\":\n      return compareState !== \"not_home\";\n    case \"lawn_mower\":\n      return [\"mowing\", \"error\"].includes(compareState);\n    case \"lock\":\n      return compareState !== \"locked\";\n    case \"media_player\":\n      return compareState !== \"standby\";\n    case \"vacuum\":\n      return ![\"idle\", \"docked\", \"paused\"].includes(compareState);\n    case \"valve\":\n      return compareState !== \"closed\";\n    case \"plant\":\n      return compareState === \"problem\";\n    case \"group\":\n      return [\"on\", \"home\", \"open\", \"locked\", \"problem\"].includes(compareState);\n    case \"timer\":\n      return compareState === \"active\";\n    case \"camera\":\n      return compareState === \"streaming\";\n  }\n  return true;\n}","map":{"version":3,"names":["isUnavailableState","OFF","UNAVAILABLE","computeDomain","stateActive","stateObj","state","domain","entity_id","compareState","undefined","includes"],"sources":["/workspaces/frontend/src/common/entity/state_active.ts"],"sourcesContent":["import { HassEntity } from \"home-assistant-js-websocket\";\nimport { isUnavailableState, OFF, UNAVAILABLE } from \"../../data/entity\";\nimport { computeDomain } from \"./compute_domain\";\n\nexport function stateActive(stateObj: HassEntity, state?: string): boolean {\n  const domain = computeDomain(stateObj.entity_id);\n  const compareState = state !== undefined ? state : stateObj?.state;\n\n  if ([\"button\", \"event\", \"input_button\", \"scene\"].includes(domain)) {\n    return compareState !== UNAVAILABLE;\n  }\n\n  if (isUnavailableState(compareState)) {\n    return false;\n  }\n\n  // The \"off\" check is relevant for most domains, but there are exceptions\n  // such as \"alert\" where \"off\" is still a somewhat active state and\n  // therefore gets a custom color and \"idle\" is instead the state that\n  // matches what most other domains consider inactive.\n  if (compareState === OFF && domain !== \"alert\") {\n    return false;\n  }\n\n  // Custom cases\n  switch (domain) {\n    case \"alarm_control_panel\":\n      return compareState !== \"disarmed\";\n    case \"alert\":\n      // \"on\" and \"off\" are active, as \"off\" just means alert was acknowledged but is still active\n      return compareState !== \"idle\";\n    case \"cover\":\n      return compareState !== \"closed\";\n    case \"device_tracker\":\n    case \"person\":\n      return compareState !== \"not_home\";\n    case \"lawn_mower\":\n      return [\"mowing\", \"error\"].includes(compareState);\n    case \"lock\":\n      return compareState !== \"locked\";\n    case \"media_player\":\n      return compareState !== \"standby\";\n    case \"vacuum\":\n      return ![\"idle\", \"docked\", \"paused\"].includes(compareState);\n    case \"valve\":\n      return compareState !== \"closed\";\n    case \"plant\":\n      return compareState === \"problem\";\n    case \"group\":\n      return [\"on\", \"home\", \"open\", \"locked\", \"problem\"].includes(compareState);\n    case \"timer\":\n      return compareState === \"active\";\n    case \"camera\":\n      return compareState === \"streaming\";\n  }\n\n  return true;\n}\n"],"mappings":"AACA,SAASA,kBAAkB,EAAEC,GAAG,EAAEC,WAAW,QAAQ,mBAAmB;AACxE,SAASC,aAAa,QAAQ,kBAAkB;AAEhD,OAAO,SAASC,WAAWA,CAACC,QAAoB,EAAEC,KAAc,EAAW;EACzE,MAAMC,MAAM,GAAGJ,aAAa,CAACE,QAAQ,CAACG,SAAS,CAAC;EAChD,MAAMC,YAAY,GAAGH,KAAK,KAAKI,SAAS,GAAGJ,KAAK,GAAGD,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEC,KAAK;EAElE,IAAI,CAAC,QAAQ,EAAE,OAAO,EAAE,cAAc,EAAE,OAAO,CAAC,CAACK,QAAQ,CAACJ,MAAM,CAAC,EAAE;IACjE,OAAOE,YAAY,KAAKP,WAAW;EACrC;EAEA,IAAIF,kBAAkB,CAACS,YAAY,CAAC,EAAE;IACpC,OAAO,KAAK;EACd;;EAEA;EACA;EACA;EACA;EACA,IAAIA,YAAY,KAAKR,GAAG,IAAIM,MAAM,KAAK,OAAO,EAAE;IAC9C,OAAO,KAAK;EACd;;EAEA;EACA,QAAQA,MAAM;IACZ,KAAK,qBAAqB;MACxB,OAAOE,YAAY,KAAK,UAAU;IACpC,KAAK,OAAO;MACV;MACA,OAAOA,YAAY,KAAK,MAAM;IAChC,KAAK,OAAO;MACV,OAAOA,YAAY,KAAK,QAAQ;IAClC,KAAK,gBAAgB;IACrB,KAAK,QAAQ;MACX,OAAOA,YAAY,KAAK,UAAU;IACpC,KAAK,YAAY;MACf,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,CAACE,QAAQ,CAACF,YAAY,CAAC;IACnD,KAAK,MAAM;MACT,OAAOA,YAAY,KAAK,QAAQ;IAClC,KAAK,cAAc;MACjB,OAAOA,YAAY,KAAK,SAAS;IACnC,KAAK,QAAQ;MACX,OAAO,CAAC,CAAC,MAAM,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAACE,QAAQ,CAACF,YAAY,CAAC;IAC7D,KAAK,OAAO;MACV,OAAOA,YAAY,KAAK,QAAQ;IAClC,KAAK,OAAO;MACV,OAAOA,YAAY,KAAK,SAAS;IACnC,KAAK,OAAO;MACV,OAAO,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,SAAS,CAAC,CAACE,QAAQ,CAACF,YAAY,CAAC;IAC3E,KAAK,OAAO;MACV,OAAOA,YAAY,KAAK,QAAQ;IAClC,KAAK,QAAQ;MACX,OAAOA,YAAY,KAAK,WAAW;EACvC;EAEA,OAAO,IAAI;AACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}