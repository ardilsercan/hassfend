{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nconst mdiImagePlus = \"M18 15V18H15V20H18V23H20V20H23V18H20V15H18M13.3 21H5C3.9 21 3 20.1 3 19V5C3 3.9 3.9 3 5 3H19C20.1 3 21 3.9 21 5V13.3C20.4 13.1 19.7 13 19 13C17.9 13 16.8 13.3 15.9 13.9L14.5 12L11 16.5L8.5 13.5L5 18H13.1C13 18.3 13 18.7 13 19C13 19.7 13.1 20.4 13.3 21Z\";\nimport { LitElement, css, html } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { createImage, generateImageThumbnailUrl } from \"../data/image_upload\";\nimport { showAlertDialog } from \"../dialogs/generic/show-dialog-box\";\nimport { showImageCropperDialog } from \"../dialogs/image-cropper-dialog/show-image-cropper-dialog\";\nimport \"./ha-button\";\nimport \"./ha-circular-progress\";\nimport \"./ha-file-upload\";\nexport let HaPictureUpload = _decorate([customElement(\"ha-picture-upload\")], function (_initialize, _LitElement) {\n  class HaPictureUpload extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaPictureUpload,\n    d: [{\n      kind: \"field\",\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"value\",\n      value() {\n        return null;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"label\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"secondary\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"supports\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"currentImageAltText\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"crop\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"cropOptions\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Number\n      })],\n      key: \"size\",\n      value() {\n        return 512;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_uploading\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this.value) {\n          return html`\n        <ha-file-upload\n          .hass=${this.hass}\n          .icon=${mdiImagePlus}\n          .label=${this.label || this.hass.localize(\"ui.components.picture-upload.label\")}\n          .secondary=${this.secondary}\n          .supports=${this.supports || this.hass.localize(\"ui.components.picture-upload.supported_formats\")}\n          .uploading=${this._uploading}\n          @file-picked=${this._handleFilePicked}\n          @change=${this._handleFileCleared}\n          accept=\"image/png, image/jpeg, image/gif\"\n        ></ha-file-upload>\n      `;\n        }\n        return html`<div class=\"center-vertical\">\n      <div class=\"value\">\n        <img\n          .src=${this.value}\n          alt=${this.currentImageAltText || this.hass.localize(\"ui.components.picture-upload.current_image_alt\")}\n        />\n        <ha-button\n          @click=${this._handleChangeClick}\n          .label=${this.hass.localize(\"ui.components.picture-upload.change_picture\")}\n        >\n        </ha-button>\n      </div>\n    </div>`;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleChangeClick\",\n      value: function _handleChangeClick() {\n        this.value = null;\n        fireEvent(this, \"change\");\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleFilePicked\",\n      value: async function _handleFilePicked(ev) {\n        const file = ev.detail.files[0];\n        if (this.crop) {\n          this._cropFile(file);\n        } else {\n          this._uploadFile(file);\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleFileCleared\",\n      value: async function _handleFileCleared() {\n        this.value = null;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_cropFile\",\n      value: async function _cropFile(file) {\n        if (![\"image/png\", \"image/jpeg\", \"image/gif\"].includes(file.type)) {\n          showAlertDialog(this, {\n            text: this.hass.localize(\"ui.components.picture-upload.unsupported_format\")\n          });\n          return;\n        }\n        showImageCropperDialog(this, {\n          file,\n          options: this.cropOptions || {\n            round: false,\n            aspectRatio: NaN\n          },\n          croppedCallback: croppedFile => {\n            this._uploadFile(croppedFile);\n          }\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_uploadFile\",\n      value: async function _uploadFile(file) {\n        if (![\"image/png\", \"image/jpeg\", \"image/gif\"].includes(file.type)) {\n          showAlertDialog(this, {\n            text: this.hass.localize(\"ui.components.picture-upload.unsupported_format\")\n          });\n          return;\n        }\n        this._uploading = true;\n        try {\n          const media = await createImage(this.hass, file);\n          this.value = generateImageThumbnailUrl(media.id, this.size);\n          fireEvent(this, \"change\");\n        } catch (err) {\n          showAlertDialog(this, {\n            text: err.toString()\n          });\n        } finally {\n          this._uploading = false;\n        }\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css`\n      :host {\n        display: block;\n        height: 240px;\n      }\n      ha-file-upload {\n        height: 100%;\n      }\n      .center-vertical {\n        display: flex;\n        align-items: center;\n        height: 100%;\n      }\n      .value {\n        width: 100%;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n      }\n      img {\n        max-width: 100%;\n        max-height: 200px;\n        margin-bottom: 4px;\n        border-radius: var(--file-upload-image-border-radius);\n      }\n    `;\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["LitElement","css","html","customElement","property","state","fireEvent","createImage","generateImageThumbnailUrl","showAlertDialog","showImageCropperDialog","HaPictureUpload","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","key","value","decorators","type","Boolean","attribute","Number","render","hass","mdiImagePlus","label","localize","secondary","supports","_uploading","_handleFilePicked","_handleFileCleared","currentImageAltText","_handleChangeClick","ev","file","detail","files","crop","_cropFile","_uploadFile","includes","text","options","cropOptions","round","aspectRatio","NaN","croppedCallback","croppedFile","media","id","size","err","toString","static","styles"],"sources":["/Users/sercanardil/Desktop/frontend/src/components/ha-picture-upload.ts"],"sourcesContent":["import { mdiImagePlus } from \"@mdi/js\";\nimport { LitElement, TemplateResult, css, html } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { createImage, generateImageThumbnailUrl } from \"../data/image_upload\";\nimport { showAlertDialog } from \"../dialogs/generic/show-dialog-box\";\nimport {\n  CropOptions,\n  showImageCropperDialog,\n} from \"../dialogs/image-cropper-dialog/show-image-cropper-dialog\";\nimport { HomeAssistant } from \"../types\";\nimport \"./ha-button\";\nimport \"./ha-circular-progress\";\nimport \"./ha-file-upload\";\n\n@customElement(\"ha-picture-upload\")\nexport class HaPictureUpload extends LitElement {\n  public hass!: HomeAssistant;\n\n  @property() public value: string | null = null;\n\n  @property() public label?: string;\n\n  @property() public secondary?: string;\n\n  @property() public supports?: string;\n\n  @property() public currentImageAltText?: string;\n\n  @property({ type: Boolean }) public crop = false;\n\n  @property({ attribute: false }) public cropOptions?: CropOptions;\n\n  @property({ type: Number }) public size = 512;\n\n  @state() private _uploading = false;\n\n  public render(): TemplateResult {\n    if (!this.value) {\n      return html`\n        <ha-file-upload\n          .hass=${this.hass}\n          .icon=${mdiImagePlus}\n          .label=${this.label ||\n          this.hass.localize(\"ui.components.picture-upload.label\")}\n          .secondary=${this.secondary}\n          .supports=${this.supports ||\n          this.hass.localize(\"ui.components.picture-upload.supported_formats\")}\n          .uploading=${this._uploading}\n          @file-picked=${this._handleFilePicked}\n          @change=${this._handleFileCleared}\n          accept=\"image/png, image/jpeg, image/gif\"\n        ></ha-file-upload>\n      `;\n    }\n    return html`<div class=\"center-vertical\">\n      <div class=\"value\">\n        <img\n          .src=${this.value}\n          alt=${this.currentImageAltText ||\n          this.hass.localize(\"ui.components.picture-upload.current_image_alt\")}\n        />\n        <ha-button\n          @click=${this._handleChangeClick}\n          .label=${this.hass.localize(\n            \"ui.components.picture-upload.change_picture\"\n          )}\n        >\n        </ha-button>\n      </div>\n    </div>`;\n  }\n\n  private _handleChangeClick() {\n    this.value = null;\n    fireEvent(this, \"change\");\n  }\n\n  private async _handleFilePicked(ev) {\n    const file = ev.detail.files[0];\n    if (this.crop) {\n      this._cropFile(file);\n    } else {\n      this._uploadFile(file);\n    }\n  }\n\n  private async _handleFileCleared() {\n    this.value = null;\n  }\n\n  private async _cropFile(file: File) {\n    if (![\"image/png\", \"image/jpeg\", \"image/gif\"].includes(file.type)) {\n      showAlertDialog(this, {\n        text: this.hass.localize(\n          \"ui.components.picture-upload.unsupported_format\"\n        ),\n      });\n      return;\n    }\n    showImageCropperDialog(this, {\n      file,\n      options: this.cropOptions || {\n        round: false,\n        aspectRatio: NaN,\n      },\n      croppedCallback: (croppedFile) => {\n        this._uploadFile(croppedFile);\n      },\n    });\n  }\n\n  private async _uploadFile(file: File) {\n    if (![\"image/png\", \"image/jpeg\", \"image/gif\"].includes(file.type)) {\n      showAlertDialog(this, {\n        text: this.hass.localize(\n          \"ui.components.picture-upload.unsupported_format\"\n        ),\n      });\n      return;\n    }\n    this._uploading = true;\n    try {\n      const media = await createImage(this.hass, file);\n      this.value = generateImageThumbnailUrl(media.id, this.size);\n      fireEvent(this, \"change\");\n    } catch (err: any) {\n      showAlertDialog(this, {\n        text: err.toString(),\n      });\n    } finally {\n      this._uploading = false;\n    }\n  }\n\n  static get styles() {\n    return css`\n      :host {\n        display: block;\n        height: 240px;\n      }\n      ha-file-upload {\n        height: 100%;\n      }\n      .center-vertical {\n        display: flex;\n        align-items: center;\n        height: 100%;\n      }\n      .value {\n        width: 100%;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n      }\n      img {\n        max-width: 100%;\n        max-height: 200px;\n        margin-bottom: 4px;\n        border-radius: var(--file-upload-image-border-radius);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-picture-upload\": HaPictureUpload;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}