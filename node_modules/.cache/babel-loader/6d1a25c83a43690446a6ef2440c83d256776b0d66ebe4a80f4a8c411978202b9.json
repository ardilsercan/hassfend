{"ast":null,"code":"// From: underscore.js https://github.com/jashkenas/underscore/blob/master/underscore.js\n\n// Returns a function, that, when invoked, will only be triggered at most once\n// during a given window of time. Normally, the throttled function will run\n// as much as it can, without ever going more than once per `wait` duration;\n// but if you'd like to disable the execution on the leading edge, pass\n// `false for leading`. To disable execution on the trailing edge, ditto.\nexport var throttle = function throttle(func, wait) {\n  var leading = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  var trailing = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  var timeout;\n  var previous = 0;\n  var throttledFunc = function throttledFunc() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    var later = function later() {\n      previous = leading === false ? 0 : Date.now();\n      timeout = undefined;\n      func.apply(void 0, args);\n    };\n    var now = Date.now();\n    if (!previous && leading === false) {\n      previous = now;\n    }\n    var remaining = wait - (now - previous);\n    if (remaining <= 0 || remaining > wait) {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = undefined;\n      }\n      previous = now;\n      func.apply(void 0, args);\n    } else if (!timeout && trailing !== false) {\n      timeout = window.setTimeout(later, remaining);\n    }\n  };\n  throttledFunc.cancel = function () {\n    clearTimeout(timeout);\n    timeout = undefined;\n    previous = 0;\n  };\n  return throttledFunc;\n};","map":{"version":3,"names":["throttle","func","wait","leading","arguments","length","undefined","trailing","timeout","previous","throttledFunc","_len","args","Array","_key","later","Date","now","apply","remaining","clearTimeout","window","setTimeout","cancel"],"sources":["/workspaces/frontend/src/common/util/throttle.ts"],"sourcesContent":["// From: underscore.js https://github.com/jashkenas/underscore/blob/master/underscore.js\n\n// Returns a function, that, when invoked, will only be triggered at most once\n// during a given window of time. Normally, the throttled function will run\n// as much as it can, without ever going more than once per `wait` duration;\n// but if you'd like to disable the execution on the leading edge, pass\n// `false for leading`. To disable execution on the trailing edge, ditto.\nexport const throttle = <T extends any[]>(\n  func: (...args: T) => void,\n  wait: number,\n  leading = true,\n  trailing = true\n) => {\n  let timeout: number | undefined;\n  let previous = 0;\n  const throttledFunc = (...args: T): void => {\n    const later = () => {\n      previous = leading === false ? 0 : Date.now();\n      timeout = undefined;\n      func(...args);\n    };\n    const now = Date.now();\n    if (!previous && leading === false) {\n      previous = now;\n    }\n    const remaining = wait - (now - previous);\n    if (remaining <= 0 || remaining > wait) {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = undefined;\n      }\n      previous = now;\n      func(...args);\n    } else if (!timeout && trailing !== false) {\n      timeout = window.setTimeout(later, remaining);\n    }\n  };\n  throttledFunc.cancel = () => {\n    clearTimeout(timeout);\n    timeout = undefined;\n    previous = 0;\n  };\n  return throttledFunc;\n};\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAMA,QAAQ,GAAG,SAAXA,QAAQA,CACnBC,IAA0B,EAC1BC,IAAY,EAGT;EAAA,IAFHC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;EAAA,IACdG,QAAQ,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;EAEf,IAAII,OAA2B;EAC/B,IAAIC,QAAQ,GAAG,CAAC;EAChB,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAAyB;IAAA,SAAAC,IAAA,GAAAP,SAAA,CAAAC,MAAA,EAAlBO,IAAI,OAAAC,KAAA,CAAAF,IAAA,GAAAG,IAAA,MAAAA,IAAA,GAAAH,IAAA,EAAAG,IAAA;MAAJF,IAAI,CAAAE,IAAA,IAAAV,SAAA,CAAAU,IAAA;IAAA;IAC5B,IAAMC,KAAK,GAAG,SAARA,KAAKA,CAAA,EAAS;MAClBN,QAAQ,GAAGN,OAAO,KAAK,KAAK,GAAG,CAAC,GAAGa,IAAI,CAACC,GAAG,CAAC,CAAC;MAC7CT,OAAO,GAAGF,SAAS;MACnBL,IAAI,CAAAiB,KAAA,SAAIN,IAAI,CAAC;IACf,CAAC;IACD,IAAMK,GAAG,GAAGD,IAAI,CAACC,GAAG,CAAC,CAAC;IACtB,IAAI,CAACR,QAAQ,IAAIN,OAAO,KAAK,KAAK,EAAE;MAClCM,QAAQ,GAAGQ,GAAG;IAChB;IACA,IAAME,SAAS,GAAGjB,IAAI,IAAIe,GAAG,GAAGR,QAAQ,CAAC;IACzC,IAAIU,SAAS,IAAI,CAAC,IAAIA,SAAS,GAAGjB,IAAI,EAAE;MACtC,IAAIM,OAAO,EAAE;QACXY,YAAY,CAACZ,OAAO,CAAC;QACrBA,OAAO,GAAGF,SAAS;MACrB;MACAG,QAAQ,GAAGQ,GAAG;MACdhB,IAAI,CAAAiB,KAAA,SAAIN,IAAI,CAAC;IACf,CAAC,MAAM,IAAI,CAACJ,OAAO,IAAID,QAAQ,KAAK,KAAK,EAAE;MACzCC,OAAO,GAAGa,MAAM,CAACC,UAAU,CAACP,KAAK,EAAEI,SAAS,CAAC;IAC/C;EACF,CAAC;EACDT,aAAa,CAACa,MAAM,GAAG,YAAM;IAC3BH,YAAY,CAACZ,OAAO,CAAC;IACrBA,OAAO,GAAGF,SAAS;IACnBG,QAAQ,GAAG,CAAC;EACd,CAAC;EACD,OAAOC,aAAa;AACtB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}