{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport { css, html, LitElement } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { debounce } from \"../common/util/debounce\";\nimport \"../components/entity/state-info\";\nimport \"../components/ha-slider\";\nimport \"../components/ha-textfield\";\nimport { isUnavailableState } from \"../data/entity\";\nimport { setValue } from \"../data/input_text\";\nimport { loadPolyfillIfNeeded } from \"../resources/resize-observer.polyfill\";\nlet StateCardInputNumber = _decorate([customElement(\"state-card-input_number\")], function (_initialize, _LitElement) {\n  class StateCardInputNumber extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: StateCardInputNumber,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"stateObj\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"inDialog\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_loaded\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_updated\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_resizeObserver\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"connectedCallback\",\n      value: function connectedCallback() {\n        _get(_getPrototypeOf(StateCardInputNumber.prototype), \"connectedCallback\", this).call(this);\n        if (this._updated && !this._loaded) {\n          this._initialLoad();\n        }\n        this._attachObserver();\n      }\n    }, {\n      kind: \"method\",\n      key: \"disconnectedCallback\",\n      value: function disconnectedCallback() {\n        var _this$_resizeObserver;\n        _get(_getPrototypeOf(StateCardInputNumber.prototype), \"disconnectedCallback\", this).call(this);\n        (_this$_resizeObserver = this._resizeObserver) === null || _this$_resizeObserver === void 0 || _this$_resizeObserver.disconnect();\n      }\n    }, {\n      kind: \"method\",\n      key: \"firstUpdated\",\n      value: function firstUpdated() {\n        this._updated = true;\n        if (this.isConnected && !this._loaded) {\n          this._initialLoad();\n        }\n        this._attachObserver();\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        return html`\n      <state-info\n        .hass=${this.hass}\n        .stateObj=${this.stateObj}\n        .inDialog=${this.inDialog}\n      ></state-info>\n      ${this.stateObj.attributes.mode === \"slider\" ? html`\n            <div class=\"flex\">\n              <ha-slider\n                labeled\n                .disabled=${isUnavailableState(this.stateObj.state)}\n                .step=${Number(this.stateObj.attributes.step)}\n                .min=${Number(this.stateObj.attributes.min)}\n                .max=${Number(this.stateObj.attributes.max)}\n                .value=${this.stateObj.state}\n                @change=${this._selectedValueChanged}\n              ></ha-slider>\n              <span class=\"state\">\n                ${this.hass.formatEntityState(this.stateObj)}\n              </span>\n            </div>\n          ` : html`\n            <div class=\"flex state\">\n              <ha-textfield\n                .disabled=${isUnavailableState(this.stateObj.state)}\n                pattern=\"[0-9]+([\\\\.][0-9]+)?\"\n                .step=${Number(this.stateObj.attributes.step)}\n                .min=${Number(this.stateObj.attributes.min)}\n                .max=${Number(this.stateObj.attributes.max)}\n                .value=${Number(this.stateObj.state).toString()}\n                .suffix=${this.stateObj.attributes.unit_of_measurement || \"\"}\n                type=\"number\"\n                @change=${this._selectedValueChanged}\n              >\n              </ha-textfield>\n            </div>\n          `}\n    `;\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css`\n      :host {\n        display: flex;\n      }\n      .flex {\n        display: flex;\n        align-items: center;\n        justify-content: flex-end;\n        flex-grow: 2;\n      }\n      .state {\n        min-width: 45px;\n        text-align: end;\n      }\n      ha-textfield {\n        text-align: end;\n      }\n      ha-slider {\n        width: 100%;\n        max-width: 200px;\n      }\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_initialLoad\",\n      value: async function _initialLoad() {\n        this._loaded = true;\n        await this.updateComplete;\n        this._measureCard();\n      }\n    }, {\n      kind: \"method\",\n      key: \"_measureCard\",\n      value: function _measureCard() {\n        if (!this.isConnected) {\n          return;\n        }\n        const element = this.shadowRoot.querySelector(\".state\");\n        if (!element) {\n          return;\n        }\n        element.hidden = this.clientWidth <= 300;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_attachObserver\",\n      value: async function _attachObserver() {\n        if (!this._resizeObserver) {\n          await loadPolyfillIfNeeded();\n          this._resizeObserver = new ResizeObserver(debounce(() => this._measureCard(), 250, false));\n        }\n        if (this.isConnected) {\n          this._resizeObserver.observe(this);\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_selectedValueChanged\",\n      value: function _selectedValueChanged(ev) {\n        if (ev.target.value !== this.stateObj.state) {\n          setValue(this.hass, this.stateObj.entity_id, ev.target.value);\n        }\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","customElement","property","debounce","isUnavailableState","setValue","loadPolyfillIfNeeded","StateCardInputNumber","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","type","Boolean","connectedCallback","_get","_getPrototypeOf","prototype","call","_updated","_loaded","_initialLoad","_attachObserver","disconnectedCallback","_this$_resizeObserver","_resizeObserver","disconnect","firstUpdated","isConnected","render","hass","stateObj","inDialog","attributes","mode","state","Number","step","min","max","_selectedValueChanged","formatEntityState","toString","unit_of_measurement","static","styles","updateComplete","_measureCard","element","shadowRoot","querySelector","hidden","clientWidth","ResizeObserver","observe","ev","target","entity_id"],"sources":["/workspaces/frontend/src/state-summary/state-card-input_number.ts"],"sourcesContent":["import { HassEntity } from \"home-assistant-js-websocket\";\nimport { css, CSSResultGroup, html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { debounce } from \"../common/util/debounce\";\nimport \"../components/entity/state-info\";\nimport \"../components/ha-slider\";\nimport \"../components/ha-textfield\";\nimport { isUnavailableState } from \"../data/entity\";\nimport { setValue } from \"../data/input_text\";\nimport { loadPolyfillIfNeeded } from \"../resources/resize-observer.polyfill\";\nimport { HomeAssistant } from \"../types\";\n\n@customElement(\"state-card-input_number\")\nclass StateCardInputNumber extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public stateObj!: HassEntity;\n\n  @property({ type: Boolean }) public inDialog = false;\n\n  private _loaded?: boolean;\n\n  private _updated?: boolean;\n\n  private _resizeObserver?: ResizeObserver;\n\n  public connectedCallback(): void {\n    super.connectedCallback();\n    if (this._updated && !this._loaded) {\n      this._initialLoad();\n    }\n    this._attachObserver();\n  }\n\n  public disconnectedCallback(): void {\n    super.disconnectedCallback();\n    this._resizeObserver?.disconnect();\n  }\n\n  protected firstUpdated(): void {\n    this._updated = true;\n    if (this.isConnected && !this._loaded) {\n      this._initialLoad();\n    }\n    this._attachObserver();\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      <state-info\n        .hass=${this.hass}\n        .stateObj=${this.stateObj}\n        .inDialog=${this.inDialog}\n      ></state-info>\n      ${this.stateObj.attributes.mode === \"slider\"\n        ? html`\n            <div class=\"flex\">\n              <ha-slider\n                labeled\n                .disabled=${isUnavailableState(this.stateObj.state)}\n                .step=${Number(this.stateObj.attributes.step)}\n                .min=${Number(this.stateObj.attributes.min)}\n                .max=${Number(this.stateObj.attributes.max)}\n                .value=${this.stateObj.state}\n                @change=${this._selectedValueChanged}\n              ></ha-slider>\n              <span class=\"state\">\n                ${this.hass.formatEntityState(this.stateObj)}\n              </span>\n            </div>\n          `\n        : html`\n            <div class=\"flex state\">\n              <ha-textfield\n                .disabled=${isUnavailableState(this.stateObj.state)}\n                pattern=\"[0-9]+([\\\\.][0-9]+)?\"\n                .step=${Number(this.stateObj.attributes.step)}\n                .min=${Number(this.stateObj.attributes.min)}\n                .max=${Number(this.stateObj.attributes.max)}\n                .value=${Number(this.stateObj.state).toString()}\n                .suffix=${this.stateObj.attributes.unit_of_measurement || \"\"}\n                type=\"number\"\n                @change=${this._selectedValueChanged}\n              >\n              </ha-textfield>\n            </div>\n          `}\n    `;\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      :host {\n        display: flex;\n      }\n      .flex {\n        display: flex;\n        align-items: center;\n        justify-content: flex-end;\n        flex-grow: 2;\n      }\n      .state {\n        min-width: 45px;\n        text-align: end;\n      }\n      ha-textfield {\n        text-align: end;\n      }\n      ha-slider {\n        width: 100%;\n        max-width: 200px;\n      }\n    `;\n  }\n\n  private async _initialLoad(): Promise<void> {\n    this._loaded = true;\n    await this.updateComplete;\n    this._measureCard();\n  }\n\n  private _measureCard() {\n    if (!this.isConnected) {\n      return;\n    }\n    const element = this.shadowRoot!.querySelector(\".state\") as HTMLElement;\n    if (!element) {\n      return;\n    }\n    element.hidden = this.clientWidth <= 300;\n  }\n\n  private async _attachObserver(): Promise<void> {\n    if (!this._resizeObserver) {\n      await loadPolyfillIfNeeded();\n      this._resizeObserver = new ResizeObserver(\n        debounce(() => this._measureCard(), 250, false)\n      );\n    }\n    if (this.isConnected) {\n      this._resizeObserver.observe(this);\n    }\n  }\n\n  private _selectedValueChanged(ev: Event): void {\n    if ((ev.target as HTMLInputElement).value !== this.stateObj.state) {\n      setValue(\n        this.hass!,\n        this.stateObj.entity_id,\n        (ev.target as HTMLInputElement).value\n      );\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"state-card-input_number\": StateCardInputNumber;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}