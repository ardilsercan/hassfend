{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport { html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport \"../../../../components/ha-form/ha-form\";\nimport { HVAC_MODES } from \"../../../../data/climate\";\nexport let HuiClimateHvacModesCardFeatureEditor = _decorate([customElement(\"hui-climate-hvac-modes-card-feature-editor\")], function (_initialize, _LitElement) {\n  class HuiClimateHvacModesCardFeatureEditor extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HuiClimateHvacModesCardFeatureEditor,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"context\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_config\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"setConfig\",\n      value: function setConfig(config) {\n        this._config = config;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_schema\",\n      value() {\n        return memoizeOne((localize, formatEntityState, stateObj) => [{\n          name: \"style\",\n          selector: {\n            select: {\n              multiple: false,\n              mode: \"list\",\n              options: [\"dropdown\", \"icons\"].map(mode => ({\n                value: mode,\n                label: localize(`ui.panel.lovelace.editor.features.types.climate-preset-modes.style_list.${mode}`)\n              }))\n            }\n          }\n        }, {\n          name: \"hvac_modes\",\n          selector: {\n            select: {\n              multiple: true,\n              mode: \"list\",\n              options: HVAC_MODES.filter(mode => {\n                var _stateObj$attributes$;\n                return stateObj === null || stateObj === void 0 || (_stateObj$attributes$ = stateObj.attributes.hvac_modes) === null || _stateObj$attributes$ === void 0 ? void 0 : _stateObj$attributes$.includes(mode);\n              }).map(mode => ({\n                value: mode,\n                label: stateObj ? formatEntityState(stateObj, mode) : mode\n              }))\n            }\n          }\n        }]);\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var _this$context, _this$context2;\n        if (!this.hass || !this._config) {\n          return nothing;\n        }\n        const stateObj = (_this$context = this.context) !== null && _this$context !== void 0 && _this$context.entity_id ? this.hass.states[(_this$context2 = this.context) === null || _this$context2 === void 0 ? void 0 : _this$context2.entity_id] : undefined;\n        const data = {\n          style: \"icons\",\n          hvac_modes: [],\n          ...this._config\n        };\n        const schema = this._schema(this.hass.localize, this.hass.formatEntityState, stateObj);\n        return html`\n      <ha-form\n        .hass=${this.hass}\n        .data=${data}\n        .schema=${schema}\n        .computeLabel=${this._computeLabelCallback}\n        @value-changed=${this._valueChanged}\n      ></ha-form>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_valueChanged\",\n      value: function _valueChanged(ev) {\n        fireEvent(this, \"config-changed\", {\n          config: ev.detail.value\n        });\n      }\n    }, {\n      kind: \"field\",\n      key: \"_computeLabelCallback\",\n      value() {\n        return schema => {\n          switch (schema.name) {\n            case \"hvac_modes\":\n            case \"style\":\n              return this.hass.localize(`ui.panel.lovelace.editor.features.types.climate-hvac-modes.${schema.name}`);\n            default:\n              return \"\";\n          }\n        };\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["html","LitElement","nothing","customElement","property","state","memoizeOne","fireEvent","HVAC_MODES","HuiClimateHvacModesCardFeatureEditor","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","setConfig","config","_config","localize","formatEntityState","stateObj","name","selector","select","multiple","mode","options","map","label","filter","_stateObj$attributes$","attributes","hvac_modes","includes","render","_this$context","_this$context2","hass","context","entity_id","states","undefined","data","style","schema","_schema","_computeLabelCallback","_valueChanged","ev","detail"],"sources":["/workspaces/frontend/src/panels/lovelace/editor/config-elements/hui-climate-hvac-modes-card-feature-editor.ts"],"sourcesContent":["import { HassEntity } from \"home-assistant-js-websocket\";\nimport { html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport type { FormatEntityStateFunc } from \"../../../../common/translations/entity-state\";\nimport type { LocalizeFunc } from \"../../../../common/translations/localize\";\nimport \"../../../../components/ha-form/ha-form\";\nimport type { SchemaUnion } from \"../../../../components/ha-form/types\";\nimport { HVAC_MODES } from \"../../../../data/climate\";\nimport type { HomeAssistant } from \"../../../../types\";\nimport {\n  ClimateHvacModesCardFeatureConfig,\n  LovelaceCardFeatureContext,\n} from \"../../card-features/types\";\nimport type { LovelaceCardFeatureEditor } from \"../../types\";\n\n@customElement(\"hui-climate-hvac-modes-card-feature-editor\")\nexport class HuiClimateHvacModesCardFeatureEditor\n  extends LitElement\n  implements LovelaceCardFeatureEditor\n{\n  @property({ attribute: false }) public hass?: HomeAssistant;\n\n  @property({ attribute: false }) public context?: LovelaceCardFeatureContext;\n\n  @state() private _config?: ClimateHvacModesCardFeatureConfig;\n\n  public setConfig(config: ClimateHvacModesCardFeatureConfig): void {\n    this._config = config;\n  }\n\n  private _schema = memoizeOne(\n    (\n      localize: LocalizeFunc,\n      formatEntityState: FormatEntityStateFunc,\n      stateObj?: HassEntity\n    ) =>\n      [\n        {\n          name: \"style\",\n          selector: {\n            select: {\n              multiple: false,\n              mode: \"list\",\n              options: [\"dropdown\", \"icons\"].map((mode) => ({\n                value: mode,\n                label: localize(\n                  `ui.panel.lovelace.editor.features.types.climate-preset-modes.style_list.${mode}`\n                ),\n              })),\n            },\n          },\n        },\n        {\n          name: \"hvac_modes\",\n          selector: {\n            select: {\n              multiple: true,\n              mode: \"list\",\n              options: HVAC_MODES.filter((mode) =>\n                stateObj?.attributes.hvac_modes?.includes(mode)\n              ).map((mode) => ({\n                value: mode,\n                label: stateObj ? formatEntityState(stateObj, mode) : mode,\n              })),\n            },\n          },\n        },\n      ] as const\n  );\n\n  protected render() {\n    if (!this.hass || !this._config) {\n      return nothing;\n    }\n\n    const stateObj = this.context?.entity_id\n      ? this.hass.states[this.context?.entity_id]\n      : undefined;\n\n    const data: ClimateHvacModesCardFeatureConfig = {\n      style: \"icons\",\n      hvac_modes: [],\n      ...this._config,\n    };\n\n    const schema = this._schema(\n      this.hass.localize,\n      this.hass.formatEntityState,\n      stateObj\n    );\n\n    return html`\n      <ha-form\n        .hass=${this.hass}\n        .data=${data}\n        .schema=${schema}\n        .computeLabel=${this._computeLabelCallback}\n        @value-changed=${this._valueChanged}\n      ></ha-form>\n    `;\n  }\n\n  private _valueChanged(ev: CustomEvent): void {\n    fireEvent(this, \"config-changed\", { config: ev.detail.value });\n  }\n\n  private _computeLabelCallback = (\n    schema: SchemaUnion<ReturnType<typeof this._schema>>\n  ) => {\n    switch (schema.name) {\n      case \"hvac_modes\":\n      case \"style\":\n        return this.hass!.localize(\n          `ui.panel.lovelace.editor.features.types.climate-hvac-modes.${schema.name}`\n        );\n      default:\n        return \"\";\n    }\n  };\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-climate-hvac-modes-card-feature-editor\": HuiClimateHvacModesCardFeatureEditor;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}