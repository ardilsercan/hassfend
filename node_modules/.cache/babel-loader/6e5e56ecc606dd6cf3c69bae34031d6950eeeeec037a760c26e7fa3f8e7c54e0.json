{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nconst mdiPlus = \"M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport { computeDomain } from \"../../../../common/entity/compute_domain\";\nimport { computeStateName } from \"../../../../common/entity/compute_state_name\";\nimport \"../../../../components/ha-fab\";\nimport \"../../../../components/ha-svg-icon\";\nimport { computeUnusedEntities } from \"../../common/compute-unused-entities\";\nimport \"../card-editor/hui-entity-picker-table\";\nimport { showSuggestCardDialog } from \"../card-editor/show-suggest-card-dialog\";\nimport { showSelectViewDialog } from \"../select-view/show-select-view-dialog\";\nexport let HuiUnusedEntities = _decorate([customElement(\"hui-unused-entities\")], function (_initialize, _LitElement) {\n  class HuiUnusedEntities extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HuiUnusedEntities,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"lovelace\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"narrow\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_unusedEntities\",\n      value() {\n        return [];\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_selectedEntities\",\n      value() {\n        return [];\n      }\n    }, {\n      kind: \"get\",\n      key: \"_config\",\n      value: function _config() {\n        return this.lovelace.config;\n      }\n    }, {\n      kind: \"method\",\n      key: \"updated\",\n      value: function updated(changedProperties) {\n        _get(_getPrototypeOf(HuiUnusedEntities.prototype), \"updated\", this).call(this, changedProperties);\n        if (changedProperties.has(\"lovelace\")) {\n          this._getUnusedEntities();\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this.hass || !this.lovelace) {\n          return nothing;\n        }\n        if (this.lovelace.mode === \"storage\" && this.lovelace.editMode === false) {\n          return nothing;\n        }\n        return html`\n      <div class=\"container\">\n        ${!this.narrow ? html`\n              <ha-card\n                header=${this.hass.localize(\"ui.panel.lovelace.unused_entities.title\")}\n              >\n                <div class=\"card-content\">\n                  ${this.hass.localize(\"ui.panel.lovelace.unused_entities.available_entities\")}\n                  ${this.lovelace.mode === \"storage\" ? html`\n                        <br />${this.hass.localize(\"ui.panel.lovelace.unused_entities.select_to_add\")}\n                      ` : \"\"}\n                </div>\n              </ha-card>\n            ` : \"\"}\n        <hui-entity-picker-table\n          .hass=${this.hass}\n          .narrow=${this.narrow}\n          .entities=${this._unusedEntities.map(entity => {\n          const stateObj = this.hass.states[entity];\n          return {\n            icon: \"\",\n            entity_id: entity,\n            stateObj,\n            name: stateObj ? computeStateName(stateObj) : \"Unavailable\",\n            domain: computeDomain(entity),\n            last_changed: stateObj === null || stateObj === void 0 ? void 0 : stateObj.last_changed\n          };\n        })}\n          @selected-changed=${this._handleSelectedChanged}\n        ></hui-entity-picker-table>\n      </div>\n      <div\n        class=\"fab ${classMap({\n          selected: this._selectedEntities.length\n        })}\"\n      >\n        <ha-fab\n          .label=${this.hass.localize(\"ui.panel.lovelace.editor.edit_card.add\")}\n          extended\n          @click=${this._addToLovelaceView}\n        >\n          <ha-svg-icon slot=\"icon\" .path=${mdiPlus}></ha-svg-icon>\n        </ha-fab>\n      </div>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_getUnusedEntities\",\n      value: function _getUnusedEntities() {\n        if (!this.hass || !this.lovelace) {\n          return;\n        }\n        this._selectedEntities = [];\n        const unusedEntities = computeUnusedEntities(this.hass, this._config);\n        this._unusedEntities = [...unusedEntities].sort();\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleSelectedChanged\",\n      value: function _handleSelectedChanged(ev) {\n        this._selectedEntities = ev.detail.selectedEntities;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_addToLovelaceView\",\n      value: function _addToLovelaceView() {\n        if (this.lovelace.config.views.length === 1) {\n          showSuggestCardDialog(this, {\n            lovelaceConfig: this.lovelace.config,\n            saveConfig: this.lovelace.saveConfig,\n            path: [0],\n            entities: this._selectedEntities\n          });\n          return;\n        }\n        showSelectViewDialog(this, {\n          lovelaceConfig: this.lovelace.config,\n          allowDashboardChange: false,\n          viewSelectedCallback: (_urlPath, _selectedDashConfig, viewIndex) => {\n            showSuggestCardDialog(this, {\n              lovelaceConfig: this.lovelace.config,\n              saveConfig: this.lovelace.saveConfig,\n              path: [viewIndex],\n              entities: this._selectedEntities\n            });\n          }\n        });\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css`\n      :host {\n        background: var(--lovelace-background);\n        overflow: hidden;\n      }\n      .container {\n        display: flex;\n        flex-direction: column;\n        height: 100%;\n      }\n      ha-card {\n        --ha-card-box-shadow: none;\n        --ha-card-border-radius: 0;\n      }\n      hui-entity-picker-table {\n        flex-grow: 1;\n      }\n      .fab {\n        position: sticky;\n        float: var(--float-end);\n        right: calc(16px + env(safe-area-inset-right));\n        bottom: calc(16px + env(safe-area-inset-bottom));\n        inset-inline-end: calc(16px + env(safe-area-inset-right));\n        inset-inline-start: initial;\n        z-index: 1;\n      }\n      ha-fab {\n        position: relative;\n        bottom: calc(-80px - env(safe-area-inset-bottom));\n        transition: bottom 0.3s;\n      }\n      .fab.selected ha-fab {\n        bottom: 0;\n      }\n    `;\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","nothing","customElement","property","state","classMap","computeDomain","computeStateName","computeUnusedEntities","showSuggestCardDialog","showSelectViewDialog","HuiUnusedEntities","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","type","Boolean","_config","lovelace","config","updated","changedProperties","_get","_getPrototypeOf","prototype","call","has","_getUnusedEntities","render","hass","mode","editMode","narrow","localize","_unusedEntities","map","entity","stateObj","states","icon","entity_id","name","domain","last_changed","_handleSelectedChanged","selected","_selectedEntities","length","_addToLovelaceView","mdiPlus","unusedEntities","sort","ev","detail","selectedEntities","views","lovelaceConfig","saveConfig","path","entities","allowDashboardChange","viewSelectedCallback","_urlPath","_selectedDashConfig","viewIndex","static","styles"],"sources":["/Users/sercanardil/Desktop/frontend/src/panels/lovelace/editor/unused-entities/hui-unused-entities.ts"],"sourcesContent":["import { mdiPlus } from \"@mdi/js\";\nimport {\n  css,\n  CSSResultGroup,\n  html,\n  LitElement,\n  PropertyValues,\n  nothing,\n} from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport { computeDomain } from \"../../../../common/entity/compute_domain\";\nimport { computeStateName } from \"../../../../common/entity/compute_state_name\";\nimport type { DataTableRowData } from \"../../../../components/data-table/ha-data-table\";\nimport \"../../../../components/ha-fab\";\nimport \"../../../../components/ha-svg-icon\";\nimport type { HomeAssistant } from \"../../../../types\";\nimport { computeUnusedEntities } from \"../../common/compute-unused-entities\";\nimport type { Lovelace } from \"../../types\";\nimport \"../card-editor/hui-entity-picker-table\";\nimport { showSuggestCardDialog } from \"../card-editor/show-suggest-card-dialog\";\nimport { showSelectViewDialog } from \"../select-view/show-select-view-dialog\";\nimport { LovelaceConfig } from \"../../../../data/lovelace/config/types\";\n\n@customElement(\"hui-unused-entities\")\nexport class HuiUnusedEntities extends LitElement {\n  @property({ attribute: false }) public lovelace!: Lovelace;\n\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ type: Boolean }) public narrow = false;\n\n  @state() private _unusedEntities: string[] = [];\n\n  @state() private _selectedEntities: string[] = [];\n\n  private get _config(): LovelaceConfig {\n    return this.lovelace.config;\n  }\n\n  protected updated(changedProperties: PropertyValues): void {\n    super.updated(changedProperties);\n\n    if (changedProperties.has(\"lovelace\")) {\n      this._getUnusedEntities();\n    }\n  }\n\n  protected render() {\n    if (!this.hass || !this.lovelace) {\n      return nothing;\n    }\n\n    if (this.lovelace.mode === \"storage\" && this.lovelace.editMode === false) {\n      return nothing;\n    }\n\n    return html`\n      <div class=\"container\">\n        ${!this.narrow\n          ? html`\n              <ha-card\n                header=${this.hass.localize(\n                  \"ui.panel.lovelace.unused_entities.title\"\n                )}\n              >\n                <div class=\"card-content\">\n                  ${this.hass.localize(\n                    \"ui.panel.lovelace.unused_entities.available_entities\"\n                  )}\n                  ${this.lovelace.mode === \"storage\"\n                    ? html`\n                        <br />${this.hass.localize(\n                          \"ui.panel.lovelace.unused_entities.select_to_add\"\n                        )}\n                      `\n                    : \"\"}\n                </div>\n              </ha-card>\n            `\n          : \"\"}\n        <hui-entity-picker-table\n          .hass=${this.hass}\n          .narrow=${this.narrow}\n          .entities=${this._unusedEntities.map((entity) => {\n            const stateObj = this.hass!.states[entity];\n            return {\n              icon: \"\",\n              entity_id: entity,\n              stateObj,\n              name: stateObj ? computeStateName(stateObj) : \"Unavailable\",\n              domain: computeDomain(entity),\n              last_changed: stateObj?.last_changed,\n            };\n          }) as DataTableRowData[]}\n          @selected-changed=${this._handleSelectedChanged}\n        ></hui-entity-picker-table>\n      </div>\n      <div\n        class=\"fab ${classMap({\n          selected: this._selectedEntities.length,\n        })}\"\n      >\n        <ha-fab\n          .label=${this.hass.localize(\"ui.panel.lovelace.editor.edit_card.add\")}\n          extended\n          @click=${this._addToLovelaceView}\n        >\n          <ha-svg-icon slot=\"icon\" .path=${mdiPlus}></ha-svg-icon>\n        </ha-fab>\n      </div>\n    `;\n  }\n\n  private _getUnusedEntities(): void {\n    if (!this.hass || !this.lovelace) {\n      return;\n    }\n    this._selectedEntities = [];\n    const unusedEntities = computeUnusedEntities(this.hass, this._config!);\n    this._unusedEntities = [...unusedEntities].sort();\n  }\n\n  private _handleSelectedChanged(ev: CustomEvent): void {\n    this._selectedEntities = ev.detail.selectedEntities;\n  }\n\n  private _addToLovelaceView(): void {\n    if (this.lovelace.config.views.length === 1) {\n      showSuggestCardDialog(this, {\n        lovelaceConfig: this.lovelace.config!,\n        saveConfig: this.lovelace.saveConfig,\n        path: [0],\n        entities: this._selectedEntities,\n      });\n      return;\n    }\n    showSelectViewDialog(this, {\n      lovelaceConfig: this.lovelace.config,\n      allowDashboardChange: false,\n      viewSelectedCallback: (_urlPath, _selectedDashConfig, viewIndex) => {\n        showSuggestCardDialog(this, {\n          lovelaceConfig: this.lovelace.config!,\n          saveConfig: this.lovelace.saveConfig,\n          path: [viewIndex],\n          entities: this._selectedEntities,\n        });\n      },\n    });\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      :host {\n        background: var(--lovelace-background);\n        overflow: hidden;\n      }\n      .container {\n        display: flex;\n        flex-direction: column;\n        height: 100%;\n      }\n      ha-card {\n        --ha-card-box-shadow: none;\n        --ha-card-border-radius: 0;\n      }\n      hui-entity-picker-table {\n        flex-grow: 1;\n      }\n      .fab {\n        position: sticky;\n        float: var(--float-end);\n        right: calc(16px + env(safe-area-inset-right));\n        bottom: calc(16px + env(safe-area-inset-bottom));\n        inset-inline-end: calc(16px + env(safe-area-inset-right));\n        inset-inline-start: initial;\n        z-index: 1;\n      }\n      ha-fab {\n        position: relative;\n        bottom: calc(-80px - env(safe-area-inset-bottom));\n        transition: bottom 0.3s;\n      }\n      .fab.selected ha-fab {\n        bottom: 0;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-unused-entities\": HuiUnusedEntities;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}