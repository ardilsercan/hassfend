{"ast":null,"code":"export var demoServices = {\n  homeassistant: {\n    turn_off: {\n      description: \"Generic service to turn devices off under any domain. Same usage as the light.turn_on, switch.turn_on, etc. services.\",\n      fields: {\n        entity_id: {\n          description: \"The entity_id of the device to turn off.\",\n          example: \"light.living_room\"\n        }\n      }\n    },\n    turn_on: {\n      description: \"Generic service to turn devices on under any domain. Same usage as the light.turn_on, switch.turn_on, etc. services.\",\n      fields: {\n        entity_id: {\n          description: \"The entity_id of the device to turn on.\",\n          example: \"light.living_room\"\n        }\n      }\n    },\n    toggle: {\n      description: \"Generic service to toggle devices on/off under any domain. Same usage as the light.turn_on, switch.turn_on, etc. services.\",\n      fields: {\n        entity_id: {\n          description: \"The entity_id of the device to toggle on/off.\",\n          example: \"light.living_room\"\n        }\n      }\n    },\n    stop: {\n      description: \"Stop the Indexline Technology service.\",\n      fields: {}\n    },\n    restart: {\n      description: \"Restart the Indexline Technology service.\",\n      fields: {}\n    },\n    check_config: {\n      description: \"Check the Indexline Technology configuration files for errors. Errors will be displayed in the Indexline Technology log.\",\n      fields: {}\n    },\n    update_entity: {\n      description: \"Force one or more entities to update its data\",\n      fields: {\n        entity_id: {\n          description: \"One or multiple entity_ids to update. Can be a list.\",\n          example: \"light.living_room\"\n        }\n      }\n    },\n    reload_core_config: {\n      description: \"Reload the core configuration.\",\n      fields: {}\n    }\n  },\n  persistent_notification: {\n    create: {\n      description: \"Show a notification in the frontend.\",\n      fields: {\n        message: {\n          description: \"Message body of the notification. [Templates accepted]\",\n          example: \"Please check your configuration.yaml.\"\n        },\n        title: {\n          description: \"Optional title for your notification. [Optional, Templates accepted]\",\n          example: \"Test notification\"\n        },\n        notification_id: {\n          description: \"Target ID of the notification, will replace a notification with the same Id. [Optional]\",\n          example: \"1234\"\n        }\n      }\n    },\n    dismiss: {\n      description: \"Remove a notification from the frontend.\",\n      fields: {\n        notification_id: {\n          description: \"Target ID of the notification, which should be removed. [Required]\",\n          example: \"1234\"\n        }\n      }\n    },\n    mark_read: {\n      description: \"\",\n      fields: {}\n    }\n  },\n  logger: {\n    set_default_level: {\n      description: \"Set the default log level for components.\",\n      fields: {\n        level: {\n          description: \"Default severity level. Possible values are notset, debug, info, warn, warning, error, fatal, critical\",\n          example: \"debug\"\n        }\n      }\n    },\n    set_level: {\n      description: \"Set log level for components.\",\n      fields: {}\n    }\n  },\n  recorder: {\n    purge: {\n      description: \"Start purge task - delete events and states older than x days, according to keep_days service data.\",\n      fields: {\n        keep_days: {\n          description: \"Number of history days to keep in database after purge. Value >= 0.\",\n          example: \"2\"\n        },\n        repack: {\n          description: \"Attempt to save disk space by rewriting the entire database file.\",\n          example: \"true\"\n        }\n      }\n    }\n  },\n  system_log: {\n    clear: {\n      description: \"\",\n      fields: {}\n    },\n    write: {\n      description: \"\",\n      fields: {}\n    }\n  },\n  frontend: {\n    set_theme: {\n      description: \"Set a theme unless the client selected per-device theme.\",\n      fields: {\n        name: {\n          description: \"Name of a predefined theme or 'default'.\",\n          example: \"light\"\n        }\n      }\n    },\n    reload_themes: {\n      description: \"Reload themes from yaml configuration.\",\n      fields: {}\n    }\n  },\n  input_select: {\n    select_option: {\n      description: \"Select an option of an input select entity.\",\n      fields: {\n        entity_id: {\n          description: \"Entity id of the input select to select the value.\",\n          example: \"input_select.my_select\"\n        },\n        option: {\n          description: \"Option to be selected.\",\n          example: '\"Item A\"'\n        }\n      }\n    },\n    select_next: {\n      description: \"Select the next options of an input select entity.\",\n      fields: {\n        entity_id: {\n          description: \"Entity id of the input select to select the next value for.\",\n          example: \"input_select.my_select\"\n        }\n      }\n    },\n    select_previous: {\n      description: \"Select the previous options of an input select entity.\",\n      fields: {\n        entity_id: {\n          description: \"Entity id of the input select to select the previous value for.\",\n          example: \"input_select.my_select\"\n        }\n      }\n    },\n    set_options: {\n      description: \"Set the options of an input select entity.\",\n      fields: {\n        entity_id: {\n          description: \"Entity id of the input select to set the new options for.\",\n          example: \"input_select.my_select\"\n        },\n        options: {\n          description: \"Options for the input select entity.\",\n          example: '[\"Item A\", \"Item B\", \"Item C\"]'\n        }\n      }\n    }\n  },\n  input_number: {\n    set_value: {\n      description: \"Set the value of an input number entity.\",\n      fields: {\n        entity_id: {\n          description: \"Entity id of the input number to set the new value.\",\n          example: \"input_number.threshold\"\n        },\n        value: {\n          description: \"The target value the entity should be set to.\",\n          example: \"42\"\n        }\n      }\n    },\n    increment: {\n      description: \"Increment the value of an input number entity by its stepping.\",\n      fields: {\n        entity_id: {\n          description: \"Entity id of the input number the should be incremented.\",\n          example: \"input_number.threshold\"\n        }\n      }\n    },\n    decrement: {\n      description: \"Decrement the value of an input number entity by its stepping.\",\n      fields: {\n        entity_id: {\n          description: \"Entity id of the input number the should be decremented.\",\n          example: \"input_number.threshold\"\n        }\n      }\n    }\n  },\n  scene: {\n    turn_on: {\n      description: \"Activate a scene.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of scenes to turn on\",\n          example: \"scene.romantic\"\n        }\n      }\n    }\n  },\n  shell_command: {\n    borrel: {\n      description: \"\",\n      fields: {}\n    },\n    party_mode: {\n      description: \"\",\n      fields: {}\n    }\n  },\n  camera: {\n    enable_motion_detection: {\n      description: \"Enable the motion detection in a camera.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to enable motion detection.\",\n          example: \"camera.living_room_camera\"\n        }\n      }\n    },\n    disable_motion_detection: {\n      description: \"Disable the motion detection in a camera.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to disable motion detection.\",\n          example: \"camera.living_room_camera\"\n        }\n      }\n    },\n    turn_off: {\n      description: \"Turn off camera.\",\n      fields: {\n        entity_id: {\n          description: \"Entity id.\",\n          example: \"camera.living_room\"\n        }\n      }\n    },\n    turn_on: {\n      description: \"Turn on camera.\",\n      fields: {\n        entity_id: {\n          description: \"Entity id.\",\n          example: \"camera.living_room\"\n        }\n      }\n    },\n    snapshot: {\n      description: \"Take a snapshot from a camera.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to create snapshots from.\",\n          example: \"camera.living_room_camera\"\n        },\n        filename: {\n          description: \"Template of a Filename. Variable is entity_id.\",\n          example: \"/tmp/snapshot_{{ entity_id }}\"\n        }\n      }\n    }\n  },\n  media_player: {\n    turn_on: {\n      description: \"Turn a media player power on.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to turn on.\",\n          example: \"media_player.living_room_chromecast\"\n        }\n      }\n    },\n    turn_off: {\n      description: \"Turn a media player power off.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to turn off.\",\n          example: \"media_player.living_room_chromecast\"\n        }\n      }\n    },\n    toggle: {\n      description: \"Toggles a media player power state.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to toggle.\",\n          example: \"media_player.living_room_chromecast\"\n        }\n      }\n    },\n    volume_up: {\n      description: \"Turn a media player volume up.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to turn volume up on.\",\n          example: \"media_player.living_room_sonos\"\n        }\n      }\n    },\n    volume_down: {\n      description: \"Turn a media player volume down.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to turn volume down on.\",\n          example: \"media_player.living_room_sonos\"\n        }\n      }\n    },\n    media_play_pause: {\n      description: \"Toggle media player play/pause state.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to toggle play/pause state on.\",\n          example: \"media_player.living_room_sonos\"\n        }\n      }\n    },\n    media_play: {\n      description: \"Send the media player the command for play.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to play on.\",\n          example: \"media_player.living_room_sonos\"\n        }\n      }\n    },\n    media_pause: {\n      description: \"Send the media player the command for pause.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to pause on.\",\n          example: \"media_player.living_room_sonos\"\n        }\n      }\n    },\n    media_stop: {\n      description: \"Send the media player the stop command.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to stop on.\",\n          example: \"media_player.living_room_sonos\"\n        }\n      }\n    },\n    media_next_track: {\n      description: \"Send the media player the command for next track.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to send next track command to.\",\n          example: \"media_player.living_room_sonos\"\n        }\n      }\n    },\n    media_previous_track: {\n      description: \"Send the media player the command for previous track.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to send previous track command to.\",\n          example: \"media_player.living_room_sonos\"\n        }\n      }\n    },\n    clear_playlist: {\n      description: \"Send the media player the command to clear players playlist.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to change source on.\",\n          example: \"media_player.living_room_chromecast\"\n        }\n      }\n    },\n    volume_set: {\n      description: \"Set a media player's volume level.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to set volume level on.\",\n          example: \"media_player.living_room_sonos\"\n        },\n        volume_level: {\n          description: \"Volume level to set as float.\",\n          example: \"0.6\"\n        }\n      }\n    },\n    volume_mute: {\n      description: \"Mute a media player's volume.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to mute.\",\n          example: \"media_player.living_room_sonos\"\n        },\n        is_volume_muted: {\n          description: \"True/false for mute/unmute.\",\n          example: \"true\"\n        }\n      }\n    },\n    media_seek: {\n      description: \"Send the media player the command to seek in current playing media.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to seek media on.\",\n          example: \"media_player.living_room_chromecast\"\n        },\n        seek_position: {\n          description: \"Position to seek to. The format is platform dependent.\",\n          example: \"100\"\n        }\n      }\n    },\n    select_source: {\n      description: \"Send the media player the command to change input source.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to change source on.\",\n          example: \"media_player.media_player.txnr535_0009b0d81f82\"\n        },\n        source: {\n          description: \"Name of the source to switch to. Platform dependent.\",\n          example: \"video1\"\n        }\n      }\n    },\n    select_sound_mode: {\n      description: \"Send the media player the command to change sound mode.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to change sound mode on.\",\n          example: \"media_player.marantz\"\n        },\n        sound_mode: {\n          description: \"Name of the sound mode to switch to.\",\n          example: \"Music\"\n        }\n      }\n    },\n    play_media: {\n      description: \"Send the media player the command for playing media.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to seek media on\",\n          example: \"media_player.living_room_chromecast\"\n        },\n        media_content_id: {\n          description: \"The ID of the content to play. Platform dependent.\",\n          example: \"https://home-assistant.io/images/cast/splash.png\"\n        },\n        media_content_type: {\n          description: \"The type of the content to play. Must be one of music, tvshow, video, episode, channel or playlist\",\n          example: \"music\"\n        }\n      }\n    },\n    shuffle_set: {\n      description: \"Set shuffling state.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to set.\",\n          example: \"media_player.spotify\"\n        },\n        shuffle: {\n          description: \"True/false for enabling/disabling shuffle.\",\n          example: \"true\"\n        }\n      }\n    }\n  },\n  conversation: {\n    process: {\n      description: \"Launch a conversation from a transcribed text.\",\n      fields: {\n        text: {\n          description: \"Transcribed text\",\n          example: \"Turn all lights on\"\n        }\n      }\n    }\n  },\n  input_boolean: {\n    turn_on: {\n      description: \"Turns on an input boolean.\",\n      fields: {\n        entity_id: {\n          description: \"Entity id of the input boolean to turn on.\",\n          example: \"input_boolean.notify_alerts\"\n        }\n      }\n    },\n    turn_off: {\n      description: \"Turns off an input boolean\",\n      fields: {\n        entity_id: {\n          description: \"Entity id of the input boolean to turn off.\",\n          example: \"input_boolean.notify_alerts\"\n        }\n      }\n    },\n    toggle: {\n      description: \"Toggles an input boolean.\",\n      fields: {\n        entity_id: {\n          description: \"Entity id of the input boolean to toggle.\",\n          example: \"input_boolean.notify_alerts\"\n        }\n      }\n    }\n  },\n  notify: {\n    demo_test_target_name: {\n      description: \"\",\n      fields: {}\n    },\n    notify: {\n      description: \"Send a notification.\",\n      fields: {\n        message: {\n          description: \"Message body of the notification.\",\n          example: \"The garage door has been open for 10 minutes.\"\n        },\n        title: {\n          description: \"Optional title for your notification.\",\n          example: \"Your Garage Door Friend\"\n        },\n        target: {\n          description: \"An array of targets to send the notification to. Optional depending on the platform.\",\n          example: \"platform specific\"\n        },\n        data: {\n          description: \"Extended information for notification. Optional depending on the platform.\",\n          example: \"platform specific\"\n        }\n      }\n    }\n  },\n  group: {\n    reload: {\n      description: \"Reload group configuration.\",\n      fields: {}\n    },\n    set: {\n      description: \"Create/Update a user group.\",\n      fields: {\n        object_id: {\n          description: \"Group id and part of entity id.\",\n          example: \"test_group\"\n        },\n        name: {\n          description: \"Name of group\",\n          example: \"My test group\"\n        },\n        view: {\n          description: \"Boolean for if the group is a view.\",\n          example: \"true\"\n        },\n        icon: {\n          description: \"Name of icon for the group.\",\n          example: \"mdi:camera\"\n        },\n        control: {\n          description: \"Value for control the group control.\",\n          example: \"hidden\"\n        },\n        visible: {\n          description: \"If the group is visible on UI.\",\n          example: \"true\"\n        },\n        entities: {\n          description: \"List of all members in the group. Not compatible with 'delta'.\",\n          example: \"domain.entity_id1, domain.entity_id2\"\n        },\n        add_entities: {\n          description: \"List of members they will change on group listening.\",\n          example: \"domain.entity_id1, domain.entity_id2\"\n        },\n        all: {\n          description: \"Enable this option if the group should only turn on when all entities are on.\",\n          example: \"true\"\n        }\n      }\n    },\n    remove: {\n      description: \"Remove a user group.\",\n      fields: {\n        object_id: {\n          description: \"Group id and part of entity id.\",\n          example: \"test_group\"\n        }\n      }\n    },\n    set_visibility: {\n      description: \"Hide or show a group.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to set value.\",\n          example: \"group.travel\"\n        },\n        visible: {\n          description: \"True if group should be shown or False if it should be hidden.\",\n          example: \"true\"\n        }\n      }\n    }\n  },\n  climate: {\n    set_aux_heat: {\n      description: \"Turn auxiliary heater on/off for climate device.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to change.\",\n          example: \"climate.kitchen\"\n        },\n        aux_heat: {\n          description: \"New value of axillary heater.\",\n          example: \"true\"\n        }\n      }\n    },\n    set_temperature: {\n      description: \"Set target temperature of climate device.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to change.\",\n          example: \"climate.kitchen\"\n        },\n        temperature: {\n          description: \"New target temperature for HVAC.\",\n          example: \"25\"\n        },\n        target_temp_high: {\n          description: \"New target high tempereature for HVAC.\",\n          example: \"26\"\n        },\n        target_temp_low: {\n          description: \"New target low temperature for HVAC.\",\n          example: \"20\"\n        },\n        operation_mode: {\n          description: \"Operation mode to set temperature to. This defaults to current_operation mode if not set, or set incorrectly.\",\n          example: \"Heat\"\n        }\n      }\n    },\n    set_humidity: {\n      description: \"Set target humidity of climate device.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to change.\",\n          example: \"climate.kitchen\"\n        },\n        humidity: {\n          description: \"New target humidity for climate device.\",\n          example: \"60\"\n        }\n      }\n    },\n    set_fan_mode: {\n      description: \"Set fan operation for climate device.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to change.\",\n          example: \"climate.nest\"\n        },\n        fan_mode: {\n          description: \"New value of fan mode.\",\n          example: \"On Low\"\n        }\n      }\n    },\n    set_hvac_mode: {\n      description: \"Set operation mode for climate device.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to change.\",\n          example: \"climate.nest\"\n        },\n        hvac_mode: {\n          description: \"New value of operation mode.\",\n          example: \"heat\"\n        }\n      }\n    },\n    set_swing_mode: {\n      description: \"Set swing operation for climate device.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to change.\",\n          example: \"climate.nest\"\n        },\n        swing_mode: {\n          description: \"New value of swing mode.\",\n          example: \"\"\n        }\n      }\n    }\n  },\n  image_processing: {\n    scan: {\n      description: \"Process an image immediately.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to scan immediately.\",\n          example: \"image_processing.alpr_garage\"\n        }\n      }\n    }\n  },\n  script: {\n    \"1541701097153\": {\n      description: \"\",\n      fields: {}\n    },\n    \"1541702006725\": {\n      description: \"\",\n      fields: {}\n    },\n    reload: {\n      description: \"\",\n      fields: {}\n    },\n    turn_on: {\n      description: \"\",\n      fields: {}\n    },\n    turn_off: {\n      description: \"\",\n      fields: {}\n    },\n    toggle: {\n      description: \"\",\n      fields: {}\n    }\n  },\n  device_tracker: {\n    see: {\n      description: \"Control tracked device.\",\n      fields: {\n        mac: {\n          description: \"MAC address of device\",\n          example: \"FF:FF:FF:FF:FF:FF\"\n        },\n        dev_id: {\n          description: \"Id of device (find id in known_devices.yaml).\",\n          example: \"phonedave\"\n        },\n        host_name: {\n          description: \"Hostname of device\",\n          example: \"Dave\"\n        },\n        location_name: {\n          description: \"Name of location where device is located (not_home is away).\",\n          example: \"home\"\n        },\n        gps: {\n          description: \"GPS coordinates where device is located (latitude, longitude).\",\n          example: \"[51.509802, -0.086692]\"\n        },\n        gps_accuracy: {\n          description: \"Accuracy of GPS coordinates.\",\n          example: \"80\"\n        },\n        battery: {\n          description: \"Battery level of device.\",\n          example: \"100\"\n        }\n      }\n    }\n  },\n  automation: {\n    trigger: {\n      description: \"Trigger the action of an automation.\",\n      fields: {\n        entity_id: {\n          description: \"Name of the automation to trigger.\",\n          example: \"automation.notify_home\"\n        }\n      }\n    },\n    reload: {\n      description: \"Reload the automation configuration.\",\n      fields: {}\n    },\n    toggle: {\n      description: \"Toggle an automation.\",\n      fields: {\n        entity_id: {\n          description: \"Name of the automation to toggle on/off.\",\n          example: \"automation.notify_home\"\n        }\n      }\n    },\n    turn_on: {\n      description: \"Enable an automation.\",\n      fields: {\n        entity_id: {\n          description: \"Name of the automation to turn on.\",\n          example: \"automation.notify_home\"\n        }\n      }\n    },\n    turn_off: {\n      description: \"Disable an automation.\",\n      fields: {\n        entity_id: {\n          description: \"Name of the automation to turn off.\",\n          example: \"automation.notify_home\"\n        }\n      }\n    }\n  },\n  alarm_control_panel: {\n    alarm_disarm: {\n      description: \"Send the alarm the command for disarm.\",\n      fields: {\n        entity_id: {\n          description: \"Name of alarm control panel to disarm.\",\n          example: \"alarm_control_panel.downstairs\"\n        },\n        code: {\n          description: \"An optional code to disarm the alarm control panel with.\",\n          example: \"1234\"\n        }\n      }\n    },\n    alarm_arm_home: {\n      description: \"Send the alarm the command for arm home.\",\n      fields: {\n        entity_id: {\n          description: \"Name of alarm control panel to arm home.\",\n          example: \"alarm_control_panel.downstairs\"\n        },\n        code: {\n          description: \"An optional code to arm home the alarm control panel with.\",\n          example: \"1234\"\n        }\n      }\n    },\n    alarm_arm_away: {\n      description: \"Send the alarm the command for arm away.\",\n      fields: {\n        entity_id: {\n          description: \"Name of alarm control panel to arm away.\",\n          example: \"alarm_control_panel.downstairs\"\n        },\n        code: {\n          description: \"An optional code to arm away the alarm control panel with.\",\n          example: \"1234\"\n        }\n      }\n    },\n    alarm_arm_night: {\n      description: \"Send the alarm the command for arm night.\",\n      fields: {\n        entity_id: {\n          description: \"Name of alarm control panel to arm night.\",\n          example: \"alarm_control_panel.downstairs\"\n        },\n        code: {\n          description: \"An optional code to arm night the alarm control panel with.\",\n          example: \"1234\"\n        }\n      }\n    },\n    alarm_arm_custom_bypass: {\n      description: \"\",\n      fields: {}\n    },\n    alarm_trigger: {\n      description: \"Send the alarm the command for trigger.\",\n      fields: {\n        entity_id: {\n          description: \"Name of alarm control panel to trigger.\",\n          example: \"alarm_control_panel.downstairs\"\n        },\n        code: {\n          description: \"An optional code to trigger the alarm control panel with.\",\n          example: \"1234\"\n        }\n      }\n    }\n  },\n  fan: {\n    turn_on: {\n      description: \"Turns fan on.\",\n      fields: {\n        entity_id: {\n          description: \"Names(s) of the entities to turn on\",\n          example: \"fan.living_room\"\n        },\n        speed: {\n          description: \"Speed setting\",\n          example: \"high\"\n        }\n      }\n    },\n    turn_off: {\n      description: \"Turns fan off.\",\n      fields: {\n        entity_id: {\n          description: \"Names(s) of the entities to turn off\",\n          example: \"fan.living_room\"\n        }\n      }\n    },\n    toggle: {\n      description: \"Toggle the fan on/off.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of the entities to toggle\",\n          example: \"fan.living_room\"\n        }\n      }\n    },\n    set_speed: {\n      description: \"Sets fan speed.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of the entities to set\",\n          example: \"fan.living_room\"\n        },\n        speed: {\n          description: \"Speed setting\",\n          example: \"low\"\n        }\n      }\n    },\n    oscillate: {\n      description: \"Oscillates the fan.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of the entities to oscillate\",\n          example: \"fan.desk_fan\"\n        },\n        oscillating: {\n          description: \"Flag to turn on/off oscillation\",\n          example: \"true\"\n        }\n      }\n    },\n    set_direction: {\n      description: \"Set the fan rotation.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of the entities to toggle\",\n          example: \"fan.living_room\"\n        },\n        direction: {\n          description: \"The direction to rotate. Either 'forward' or 'reverse'\",\n          example: \"forward\"\n        }\n      }\n    }\n  },\n  lock: {\n    unlock: {\n      description: \"Unlock all or specified locks.\",\n      fields: {\n        entity_id: {\n          description: \"Name of lock to unlock.\",\n          example: \"lock.front_door\"\n        },\n        code: {\n          description: \"An optional code to unlock the lock with.\",\n          example: \"1234\"\n        }\n      }\n    },\n    lock: {\n      description: \"Lock all or specified locks.\",\n      fields: {\n        entity_id: {\n          description: \"Name of lock to lock.\",\n          example: \"lock.front_door\"\n        },\n        code: {\n          description: \"An optional code to lock the lock with.\",\n          example: \"1234\"\n        }\n      }\n    },\n    open: {\n      description: \"\",\n      fields: {}\n    }\n  },\n  cover: {\n    open_cover: {\n      description: \"Open all or specified cover.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of cover(s) to open.\",\n          example: \"cover.living_room\"\n        }\n      }\n    },\n    close_cover: {\n      description: \"Close all or specified cover.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of cover(s) to close.\",\n          example: \"cover.living_room\"\n        }\n      }\n    },\n    set_cover_position: {\n      description: \"Move to specific position all or specified cover.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of cover(s) to set cover position.\",\n          example: \"cover.living_room\"\n        },\n        position: {\n          description: \"Position of the cover (0 to 100).\",\n          example: \"30\"\n        }\n      }\n    },\n    stop_cover: {\n      description: \"Stop all or specified cover.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of cover(s) to stop.\",\n          example: \"cover.living_room\"\n        }\n      }\n    },\n    open_cover_tilt: {\n      description: \"Open all or specified cover tilt.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of cover(s) tilt to open.\",\n          example: \"cover.living_room\"\n        }\n      }\n    },\n    close_cover_tilt: {\n      description: \"Close all or specified cover tilt.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of cover(s) to close tilt.\",\n          example: \"cover.living_room\"\n        }\n      }\n    },\n    stop_cover_tilt: {\n      description: \"Stop all or specified cover.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of cover(s) to stop.\",\n          example: \"cover.living_room\"\n        }\n      }\n    },\n    set_cover_tilt_position: {\n      description: \"Move to specific position all or specified cover tilt.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of cover(s) to set cover tilt position.\",\n          example: \"cover.living_room\"\n        },\n        tilt_position: {\n          description: \"Tilt position of the cover (0 to 100).\",\n          example: \"30\"\n        }\n      }\n    }\n  },\n  switch: {\n    turn_off: {\n      description: \"Turn a switch off.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to turn off.\",\n          example: \"switch.living_room\"\n        }\n      }\n    },\n    turn_on: {\n      description: \"Turn a switch on.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to turn on\",\n          example: \"switch.living_room\"\n        }\n      }\n    },\n    toggle: {\n      description: \"Toggles a switch state.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to toggle.\",\n          example: \"switch.living_room\"\n        }\n      }\n    }\n  },\n  light: {\n    turn_on: {\n      description: \"Turn a light on.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to turn on\",\n          example: \"light.kitchen\"\n        },\n        transition: {\n          description: \"Duration in seconds it takes to get to next state\",\n          example: \"60\"\n        },\n        rgb_color: {\n          description: \"Color for the light in RGB-format.\",\n          example: \"[255, 100, 100]\"\n        },\n        color_name: {\n          description: \"A human readable color name.\",\n          example: \"red\"\n        },\n        hs_color: {\n          description: \"Color for the light in hue/sat format. Hue is 0-360 and Sat is 0-100.\",\n          example: \"[300, 70]\"\n        },\n        xy_color: {\n          description: \"Color for the light in XY-format.\",\n          example: \"[0.52, 0.43]\"\n        },\n        color_temp: {\n          description: \"Color temperature for the light in mireds.\",\n          example: \"250\"\n        },\n        kelvin: {\n          description: \"Color temperature for the light in Kelvin.\",\n          example: \"4000\"\n        },\n        white_value: {\n          description: \"Number between 0..255 indicating level of white.\",\n          example: \"250\"\n        },\n        brightness: {\n          description: \"Number between 0..255 indicating brightness.\",\n          example: \"120\"\n        },\n        brightness_pct: {\n          description: \"Number between 0..100 indicating percentage of full brightness.\",\n          example: \"47\"\n        },\n        profile: {\n          description: \"Name of a light profile to use.\",\n          example: \"relax\"\n        },\n        flash: {\n          description: \"If the light should flash.\",\n          example: \"short\"\n        },\n        effect: {\n          description: \"Light effect.\",\n          example: \"colorloop\"\n        }\n      }\n    },\n    turn_off: {\n      description: \"Turn a light off.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to turn off.\",\n          example: \"light.kitchen\"\n        },\n        transition: {\n          description: \"Duration in seconds it takes to get to next state.\",\n          example: \"60\"\n        },\n        flash: {\n          description: \"If the light should flash.\",\n          example: \"short\"\n        }\n      }\n    },\n    toggle: {\n      description: \"Toggles a light.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to toggle.\",\n          example: \"light.kitchen\"\n        },\n        transition: {\n          description: \"Duration in seconds it takes to get to next state.\",\n          example: \"60\"\n        }\n      }\n    }\n  },\n  tts: {\n    demo_say: {\n      description: \"\",\n      fields: {}\n    },\n    clear_cache: {\n      description: \"Remove cache files and RAM cache.\",\n      fields: {}\n    }\n  },\n  configurator: {\n    configure: {\n      description: \"\",\n      fields: {}\n    }\n  }\n};","map":{"version":3,"names":["demoServices","homeassistant","turn_off","description","fields","entity_id","example","turn_on","toggle","stop","restart","check_config","update_entity","reload_core_config","persistent_notification","create","message","title","notification_id","dismiss","mark_read","logger","set_default_level","level","set_level","recorder","purge","keep_days","repack","system_log","clear","write","frontend","set_theme","name","reload_themes","input_select","select_option","option","select_next","select_previous","set_options","options","input_number","set_value","value","increment","decrement","scene","shell_command","borrel","party_mode","camera","enable_motion_detection","disable_motion_detection","snapshot","filename","media_player","volume_up","volume_down","media_play_pause","media_play","media_pause","media_stop","media_next_track","media_previous_track","clear_playlist","volume_set","volume_level","volume_mute","is_volume_muted","media_seek","seek_position","select_source","source","select_sound_mode","sound_mode","play_media","media_content_id","media_content_type","shuffle_set","shuffle","conversation","process","text","input_boolean","notify","demo_test_target_name","target","data","group","reload","set","object_id","view","icon","control","visible","entities","add_entities","all","remove","set_visibility","climate","set_aux_heat","aux_heat","set_temperature","temperature","target_temp_high","target_temp_low","operation_mode","set_humidity","humidity","set_fan_mode","fan_mode","set_hvac_mode","hvac_mode","set_swing_mode","swing_mode","image_processing","scan","script","device_tracker","see","mac","dev_id","host_name","location_name","gps","gps_accuracy","battery","automation","trigger","alarm_control_panel","alarm_disarm","code","alarm_arm_home","alarm_arm_away","alarm_arm_night","alarm_arm_custom_bypass","alarm_trigger","fan","speed","set_speed","oscillate","oscillating","set_direction","direction","lock","unlock","open","cover","open_cover","close_cover","set_cover_position","position","stop_cover","open_cover_tilt","close_cover_tilt","stop_cover_tilt","set_cover_tilt_position","tilt_position","switch","light","transition","rgb_color","color_name","hs_color","xy_color","color_temp","kelvin","white_value","brightness","brightness_pct","profile","flash","effect","tts","demo_say","clear_cache","configurator","configure"],"sources":["/workspaces/frontend/src/fake_data/demo_services.ts"],"sourcesContent":["import { HassServices } from \"home-assistant-js-websocket\";\n\nexport const demoServices: HassServices = {\n  homeassistant: {\n    turn_off: {\n      description:\n        \"Generic service to turn devices off under any domain. Same usage as the light.turn_on, switch.turn_on, etc. services.\",\n      fields: {\n        entity_id: {\n          description: \"The entity_id of the device to turn off.\",\n          example: \"light.living_room\",\n        },\n      },\n    },\n    turn_on: {\n      description:\n        \"Generic service to turn devices on under any domain. Same usage as the light.turn_on, switch.turn_on, etc. services.\",\n      fields: {\n        entity_id: {\n          description: \"The entity_id of the device to turn on.\",\n          example: \"light.living_room\",\n        },\n      },\n    },\n    toggle: {\n      description:\n        \"Generic service to toggle devices on/off under any domain. Same usage as the light.turn_on, switch.turn_on, etc. services.\",\n      fields: {\n        entity_id: {\n          description: \"The entity_id of the device to toggle on/off.\",\n          example: \"light.living_room\",\n        },\n      },\n    },\n    stop: { description: \"Stop the Indexline Technology service.\", fields: {} },\n    restart: { description: \"Restart the Indexline Technology service.\", fields: {} },\n    check_config: {\n      description:\n        \"Check the Indexline Technology configuration files for errors. Errors will be displayed in the Indexline Technology log.\",\n      fields: {},\n    },\n    update_entity: {\n      description: \"Force one or more entities to update its data\",\n      fields: {\n        entity_id: {\n          description: \"One or multiple entity_ids to update. Can be a list.\",\n          example: \"light.living_room\",\n        },\n      },\n    },\n    reload_core_config: {\n      description: \"Reload the core configuration.\",\n      fields: {},\n    },\n  },\n  persistent_notification: {\n    create: {\n      description: \"Show a notification in the frontend.\",\n      fields: {\n        message: {\n          description: \"Message body of the notification. [Templates accepted]\",\n          example: \"Please check your configuration.yaml.\",\n        },\n        title: {\n          description:\n            \"Optional title for your notification. [Optional, Templates accepted]\",\n          example: \"Test notification\",\n        },\n        notification_id: {\n          description:\n            \"Target ID of the notification, will replace a notification with the same Id. [Optional]\",\n          example: \"1234\",\n        },\n      },\n    },\n    dismiss: {\n      description: \"Remove a notification from the frontend.\",\n      fields: {\n        notification_id: {\n          description:\n            \"Target ID of the notification, which should be removed. [Required]\",\n          example: \"1234\",\n        },\n      },\n    },\n    mark_read: { description: \"\", fields: {} },\n  },\n  logger: {\n    set_default_level: {\n      description: \"Set the default log level for components.\",\n      fields: {\n        level: {\n          description:\n            \"Default severity level. Possible values are notset, debug, info, warn, warning, error, fatal, critical\",\n          example: \"debug\",\n        },\n      },\n    },\n    set_level: { description: \"Set log level for components.\", fields: {} },\n  },\n  recorder: {\n    purge: {\n      description:\n        \"Start purge task - delete events and states older than x days, according to keep_days service data.\",\n      fields: {\n        keep_days: {\n          description:\n            \"Number of history days to keep in database after purge. Value >= 0.\",\n          example: \"2\",\n        },\n        repack: {\n          description:\n            \"Attempt to save disk space by rewriting the entire database file.\",\n          example: \"true\",\n        },\n      },\n    },\n  },\n  system_log: {\n    clear: { description: \"\", fields: {} },\n    write: { description: \"\", fields: {} },\n  },\n  frontend: {\n    set_theme: {\n      description: \"Set a theme unless the client selected per-device theme.\",\n      fields: {\n        name: {\n          description: \"Name of a predefined theme or 'default'.\",\n          example: \"light\",\n        },\n      },\n    },\n    reload_themes: {\n      description: \"Reload themes from yaml configuration.\",\n      fields: {},\n    },\n  },\n  input_select: {\n    select_option: {\n      description: \"Select an option of an input select entity.\",\n      fields: {\n        entity_id: {\n          description: \"Entity id of the input select to select the value.\",\n          example: \"input_select.my_select\",\n        },\n        option: { description: \"Option to be selected.\", example: '\"Item A\"' },\n      },\n    },\n    select_next: {\n      description: \"Select the next options of an input select entity.\",\n      fields: {\n        entity_id: {\n          description:\n            \"Entity id of the input select to select the next value for.\",\n          example: \"input_select.my_select\",\n        },\n      },\n    },\n    select_previous: {\n      description: \"Select the previous options of an input select entity.\",\n      fields: {\n        entity_id: {\n          description:\n            \"Entity id of the input select to select the previous value for.\",\n          example: \"input_select.my_select\",\n        },\n      },\n    },\n    set_options: {\n      description: \"Set the options of an input select entity.\",\n      fields: {\n        entity_id: {\n          description:\n            \"Entity id of the input select to set the new options for.\",\n          example: \"input_select.my_select\",\n        },\n        options: {\n          description: \"Options for the input select entity.\",\n          example: '[\"Item A\", \"Item B\", \"Item C\"]',\n        },\n      },\n    },\n  },\n  input_number: {\n    set_value: {\n      description: \"Set the value of an input number entity.\",\n      fields: {\n        entity_id: {\n          description: \"Entity id of the input number to set the new value.\",\n          example: \"input_number.threshold\",\n        },\n        value: {\n          description: \"The target value the entity should be set to.\",\n          example: \"42\",\n        },\n      },\n    },\n    increment: {\n      description:\n        \"Increment the value of an input number entity by its stepping.\",\n      fields: {\n        entity_id: {\n          description:\n            \"Entity id of the input number the should be incremented.\",\n          example: \"input_number.threshold\",\n        },\n      },\n    },\n    decrement: {\n      description:\n        \"Decrement the value of an input number entity by its stepping.\",\n      fields: {\n        entity_id: {\n          description:\n            \"Entity id of the input number the should be decremented.\",\n          example: \"input_number.threshold\",\n        },\n      },\n    },\n  },\n  scene: {\n    turn_on: {\n      description: \"Activate a scene.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of scenes to turn on\",\n          example: \"scene.romantic\",\n        },\n      },\n    },\n  },\n  shell_command: {\n    borrel: { description: \"\", fields: {} },\n    party_mode: { description: \"\", fields: {} },\n  },\n  camera: {\n    enable_motion_detection: {\n      description: \"Enable the motion detection in a camera.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to enable motion detection.\",\n          example: \"camera.living_room_camera\",\n        },\n      },\n    },\n    disable_motion_detection: {\n      description: \"Disable the motion detection in a camera.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to disable motion detection.\",\n          example: \"camera.living_room_camera\",\n        },\n      },\n    },\n    turn_off: {\n      description: \"Turn off camera.\",\n      fields: {\n        entity_id: { description: \"Entity id.\", example: \"camera.living_room\" },\n      },\n    },\n    turn_on: {\n      description: \"Turn on camera.\",\n      fields: {\n        entity_id: { description: \"Entity id.\", example: \"camera.living_room\" },\n      },\n    },\n    snapshot: {\n      description: \"Take a snapshot from a camera.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to create snapshots from.\",\n          example: \"camera.living_room_camera\",\n        },\n        filename: {\n          description: \"Template of a Filename. Variable is entity_id.\",\n          example: \"/tmp/snapshot_{{ entity_id }}\",\n        },\n      },\n    },\n  },\n  media_player: {\n    turn_on: {\n      description: \"Turn a media player power on.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to turn on.\",\n          example: \"media_player.living_room_chromecast\",\n        },\n      },\n    },\n    turn_off: {\n      description: \"Turn a media player power off.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to turn off.\",\n          example: \"media_player.living_room_chromecast\",\n        },\n      },\n    },\n    toggle: {\n      description: \"Toggles a media player power state.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to toggle.\",\n          example: \"media_player.living_room_chromecast\",\n        },\n      },\n    },\n    volume_up: {\n      description: \"Turn a media player volume up.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to turn volume up on.\",\n          example: \"media_player.living_room_sonos\",\n        },\n      },\n    },\n    volume_down: {\n      description: \"Turn a media player volume down.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to turn volume down on.\",\n          example: \"media_player.living_room_sonos\",\n        },\n      },\n    },\n    media_play_pause: {\n      description: \"Toggle media player play/pause state.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to toggle play/pause state on.\",\n          example: \"media_player.living_room_sonos\",\n        },\n      },\n    },\n    media_play: {\n      description: \"Send the media player the command for play.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to play on.\",\n          example: \"media_player.living_room_sonos\",\n        },\n      },\n    },\n    media_pause: {\n      description: \"Send the media player the command for pause.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to pause on.\",\n          example: \"media_player.living_room_sonos\",\n        },\n      },\n    },\n    media_stop: {\n      description: \"Send the media player the stop command.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to stop on.\",\n          example: \"media_player.living_room_sonos\",\n        },\n      },\n    },\n    media_next_track: {\n      description: \"Send the media player the command for next track.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to send next track command to.\",\n          example: \"media_player.living_room_sonos\",\n        },\n      },\n    },\n    media_previous_track: {\n      description: \"Send the media player the command for previous track.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to send previous track command to.\",\n          example: \"media_player.living_room_sonos\",\n        },\n      },\n    },\n    clear_playlist: {\n      description:\n        \"Send the media player the command to clear players playlist.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to change source on.\",\n          example: \"media_player.living_room_chromecast\",\n        },\n      },\n    },\n    volume_set: {\n      description: \"Set a media player's volume level.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to set volume level on.\",\n          example: \"media_player.living_room_sonos\",\n        },\n        volume_level: {\n          description: \"Volume level to set as float.\",\n          example: \"0.6\",\n        },\n      },\n    },\n    volume_mute: {\n      description: \"Mute a media player's volume.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to mute.\",\n          example: \"media_player.living_room_sonos\",\n        },\n        is_volume_muted: {\n          description: \"True/false for mute/unmute.\",\n          example: \"true\",\n        },\n      },\n    },\n    media_seek: {\n      description:\n        \"Send the media player the command to seek in current playing media.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to seek media on.\",\n          example: \"media_player.living_room_chromecast\",\n        },\n        seek_position: {\n          description: \"Position to seek to. The format is platform dependent.\",\n          example: \"100\",\n        },\n      },\n    },\n    select_source: {\n      description: \"Send the media player the command to change input source.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to change source on.\",\n          example: \"media_player.media_player.txnr535_0009b0d81f82\",\n        },\n        source: {\n          description: \"Name of the source to switch to. Platform dependent.\",\n          example: \"video1\",\n        },\n      },\n    },\n    select_sound_mode: {\n      description: \"Send the media player the command to change sound mode.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to change sound mode on.\",\n          example: \"media_player.marantz\",\n        },\n        sound_mode: {\n          description: \"Name of the sound mode to switch to.\",\n          example: \"Music\",\n        },\n      },\n    },\n    play_media: {\n      description: \"Send the media player the command for playing media.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to seek media on\",\n          example: \"media_player.living_room_chromecast\",\n        },\n        media_content_id: {\n          description: \"The ID of the content to play. Platform dependent.\",\n          example: \"https://home-assistant.io/images/cast/splash.png\",\n        },\n        media_content_type: {\n          description:\n            \"The type of the content to play. Must be one of music, tvshow, video, episode, channel or playlist\",\n          example: \"music\",\n        },\n      },\n    },\n    shuffle_set: {\n      description: \"Set shuffling state.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to set.\",\n          example: \"media_player.spotify\",\n        },\n        shuffle: {\n          description: \"True/false for enabling/disabling shuffle.\",\n          example: \"true\",\n        },\n      },\n    },\n  },\n  conversation: {\n    process: {\n      description: \"Launch a conversation from a transcribed text.\",\n      fields: {\n        text: {\n          description: \"Transcribed text\",\n          example: \"Turn all lights on\",\n        },\n      },\n    },\n  },\n  input_boolean: {\n    turn_on: {\n      description: \"Turns on an input boolean.\",\n      fields: {\n        entity_id: {\n          description: \"Entity id of the input boolean to turn on.\",\n          example: \"input_boolean.notify_alerts\",\n        },\n      },\n    },\n    turn_off: {\n      description: \"Turns off an input boolean\",\n      fields: {\n        entity_id: {\n          description: \"Entity id of the input boolean to turn off.\",\n          example: \"input_boolean.notify_alerts\",\n        },\n      },\n    },\n    toggle: {\n      description: \"Toggles an input boolean.\",\n      fields: {\n        entity_id: {\n          description: \"Entity id of the input boolean to toggle.\",\n          example: \"input_boolean.notify_alerts\",\n        },\n      },\n    },\n  },\n  notify: {\n    demo_test_target_name: { description: \"\", fields: {} },\n    notify: {\n      description: \"Send a notification.\",\n      fields: {\n        message: {\n          description: \"Message body of the notification.\",\n          example: \"The garage door has been open for 10 minutes.\",\n        },\n        title: {\n          description: \"Optional title for your notification.\",\n          example: \"Your Garage Door Friend\",\n        },\n        target: {\n          description:\n            \"An array of targets to send the notification to. Optional depending on the platform.\",\n          example: \"platform specific\",\n        },\n        data: {\n          description:\n            \"Extended information for notification. Optional depending on the platform.\",\n          example: \"platform specific\",\n        },\n      },\n    },\n  },\n  group: {\n    reload: { description: \"Reload group configuration.\", fields: {} },\n    set: {\n      description: \"Create/Update a user group.\",\n      fields: {\n        object_id: {\n          description: \"Group id and part of entity id.\",\n          example: \"test_group\",\n        },\n        name: { description: \"Name of group\", example: \"My test group\" },\n        view: {\n          description: \"Boolean for if the group is a view.\",\n          example: \"true\",\n        },\n        icon: {\n          description: \"Name of icon for the group.\",\n          example: \"mdi:camera\",\n        },\n        control: {\n          description: \"Value for control the group control.\",\n          example: \"hidden\",\n        },\n        visible: {\n          description: \"If the group is visible on UI.\",\n          example: \"true\",\n        },\n        entities: {\n          description:\n            \"List of all members in the group. Not compatible with 'delta'.\",\n          example: \"domain.entity_id1, domain.entity_id2\",\n        },\n        add_entities: {\n          description: \"List of members they will change on group listening.\",\n          example: \"domain.entity_id1, domain.entity_id2\",\n        },\n        all: {\n          description:\n            \"Enable this option if the group should only turn on when all entities are on.\",\n          example: \"true\",\n        },\n      },\n    },\n    remove: {\n      description: \"Remove a user group.\",\n      fields: {\n        object_id: {\n          description: \"Group id and part of entity id.\",\n          example: \"test_group\",\n        },\n      },\n    },\n    set_visibility: {\n      description: \"Hide or show a group.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to set value.\",\n          example: \"group.travel\",\n        },\n        visible: {\n          description:\n            \"True if group should be shown or False if it should be hidden.\",\n          example: \"true\",\n        },\n      },\n    },\n  },\n  climate: {\n    set_aux_heat: {\n      description: \"Turn auxiliary heater on/off for climate device.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to change.\",\n          example: \"climate.kitchen\",\n        },\n        aux_heat: {\n          description: \"New value of axillary heater.\",\n          example: \"true\",\n        },\n      },\n    },\n    set_temperature: {\n      description: \"Set target temperature of climate device.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to change.\",\n          example: \"climate.kitchen\",\n        },\n        temperature: {\n          description: \"New target temperature for HVAC.\",\n          example: \"25\",\n        },\n        target_temp_high: {\n          description: \"New target high tempereature for HVAC.\",\n          example: \"26\",\n        },\n        target_temp_low: {\n          description: \"New target low temperature for HVAC.\",\n          example: \"20\",\n        },\n        operation_mode: {\n          description:\n            \"Operation mode to set temperature to. This defaults to current_operation mode if not set, or set incorrectly.\",\n          example: \"Heat\",\n        },\n      },\n    },\n    set_humidity: {\n      description: \"Set target humidity of climate device.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to change.\",\n          example: \"climate.kitchen\",\n        },\n        humidity: {\n          description: \"New target humidity for climate device.\",\n          example: \"60\",\n        },\n      },\n    },\n    set_fan_mode: {\n      description: \"Set fan operation for climate device.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to change.\",\n          example: \"climate.nest\",\n        },\n        fan_mode: { description: \"New value of fan mode.\", example: \"On Low\" },\n      },\n    },\n    set_hvac_mode: {\n      description: \"Set operation mode for climate device.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to change.\",\n          example: \"climate.nest\",\n        },\n        hvac_mode: {\n          description: \"New value of operation mode.\",\n          example: \"heat\",\n        },\n      },\n    },\n    set_swing_mode: {\n      description: \"Set swing operation for climate device.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to change.\",\n          example: \"climate.nest\",\n        },\n        swing_mode: { description: \"New value of swing mode.\", example: \"\" },\n      },\n    },\n  },\n  image_processing: {\n    scan: {\n      description: \"Process an image immediately.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to scan immediately.\",\n          example: \"image_processing.alpr_garage\",\n        },\n      },\n    },\n  },\n  script: {\n    \"1541701097153\": { description: \"\", fields: {} },\n    \"1541702006725\": { description: \"\", fields: {} },\n    reload: { description: \"\", fields: {} },\n    turn_on: { description: \"\", fields: {} },\n    turn_off: { description: \"\", fields: {} },\n    toggle: { description: \"\", fields: {} },\n  },\n  device_tracker: {\n    see: {\n      description: \"Control tracked device.\",\n      fields: {\n        mac: {\n          description: \"MAC address of device\",\n          example: \"FF:FF:FF:FF:FF:FF\",\n        },\n        dev_id: {\n          description: \"Id of device (find id in known_devices.yaml).\",\n          example: \"phonedave\",\n        },\n        host_name: { description: \"Hostname of device\", example: \"Dave\" },\n        location_name: {\n          description:\n            \"Name of location where device is located (not_home is away).\",\n          example: \"home\",\n        },\n        gps: {\n          description:\n            \"GPS coordinates where device is located (latitude, longitude).\",\n          example: \"[51.509802, -0.086692]\",\n        },\n        gps_accuracy: {\n          description: \"Accuracy of GPS coordinates.\",\n          example: \"80\",\n        },\n        battery: { description: \"Battery level of device.\", example: \"100\" },\n      },\n    },\n  },\n  automation: {\n    trigger: {\n      description: \"Trigger the action of an automation.\",\n      fields: {\n        entity_id: {\n          description: \"Name of the automation to trigger.\",\n          example: \"automation.notify_home\",\n        },\n      },\n    },\n    reload: { description: \"Reload the automation configuration.\", fields: {} },\n    toggle: {\n      description: \"Toggle an automation.\",\n      fields: {\n        entity_id: {\n          description: \"Name of the automation to toggle on/off.\",\n          example: \"automation.notify_home\",\n        },\n      },\n    },\n    turn_on: {\n      description: \"Enable an automation.\",\n      fields: {\n        entity_id: {\n          description: \"Name of the automation to turn on.\",\n          example: \"automation.notify_home\",\n        },\n      },\n    },\n    turn_off: {\n      description: \"Disable an automation.\",\n      fields: {\n        entity_id: {\n          description: \"Name of the automation to turn off.\",\n          example: \"automation.notify_home\",\n        },\n      },\n    },\n  },\n  alarm_control_panel: {\n    alarm_disarm: {\n      description: \"Send the alarm the command for disarm.\",\n      fields: {\n        entity_id: {\n          description: \"Name of alarm control panel to disarm.\",\n          example: \"alarm_control_panel.downstairs\",\n        },\n        code: {\n          description:\n            \"An optional code to disarm the alarm control panel with.\",\n          example: \"1234\",\n        },\n      },\n    },\n    alarm_arm_home: {\n      description: \"Send the alarm the command for arm home.\",\n      fields: {\n        entity_id: {\n          description: \"Name of alarm control panel to arm home.\",\n          example: \"alarm_control_panel.downstairs\",\n        },\n        code: {\n          description:\n            \"An optional code to arm home the alarm control panel with.\",\n          example: \"1234\",\n        },\n      },\n    },\n    alarm_arm_away: {\n      description: \"Send the alarm the command for arm away.\",\n      fields: {\n        entity_id: {\n          description: \"Name of alarm control panel to arm away.\",\n          example: \"alarm_control_panel.downstairs\",\n        },\n        code: {\n          description:\n            \"An optional code to arm away the alarm control panel with.\",\n          example: \"1234\",\n        },\n      },\n    },\n    alarm_arm_night: {\n      description: \"Send the alarm the command for arm night.\",\n      fields: {\n        entity_id: {\n          description: \"Name of alarm control panel to arm night.\",\n          example: \"alarm_control_panel.downstairs\",\n        },\n        code: {\n          description:\n            \"An optional code to arm night the alarm control panel with.\",\n          example: \"1234\",\n        },\n      },\n    },\n    alarm_arm_custom_bypass: { description: \"\", fields: {} },\n    alarm_trigger: {\n      description: \"Send the alarm the command for trigger.\",\n      fields: {\n        entity_id: {\n          description: \"Name of alarm control panel to trigger.\",\n          example: \"alarm_control_panel.downstairs\",\n        },\n        code: {\n          description:\n            \"An optional code to trigger the alarm control panel with.\",\n          example: \"1234\",\n        },\n      },\n    },\n  },\n  fan: {\n    turn_on: {\n      description: \"Turns fan on.\",\n      fields: {\n        entity_id: {\n          description: \"Names(s) of the entities to turn on\",\n          example: \"fan.living_room\",\n        },\n        speed: { description: \"Speed setting\", example: \"high\" },\n      },\n    },\n    turn_off: {\n      description: \"Turns fan off.\",\n      fields: {\n        entity_id: {\n          description: \"Names(s) of the entities to turn off\",\n          example: \"fan.living_room\",\n        },\n      },\n    },\n    toggle: {\n      description: \"Toggle the fan on/off.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of the entities to toggle\",\n          example: \"fan.living_room\",\n        },\n      },\n    },\n    set_speed: {\n      description: \"Sets fan speed.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of the entities to set\",\n          example: \"fan.living_room\",\n        },\n        speed: { description: \"Speed setting\", example: \"low\" },\n      },\n    },\n    oscillate: {\n      description: \"Oscillates the fan.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of the entities to oscillate\",\n          example: \"fan.desk_fan\",\n        },\n        oscillating: {\n          description: \"Flag to turn on/off oscillation\",\n          example: \"true\",\n        },\n      },\n    },\n    set_direction: {\n      description: \"Set the fan rotation.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of the entities to toggle\",\n          example: \"fan.living_room\",\n        },\n        direction: {\n          description: \"The direction to rotate. Either 'forward' or 'reverse'\",\n          example: \"forward\",\n        },\n      },\n    },\n  },\n  lock: {\n    unlock: {\n      description: \"Unlock all or specified locks.\",\n      fields: {\n        entity_id: {\n          description: \"Name of lock to unlock.\",\n          example: \"lock.front_door\",\n        },\n        code: {\n          description: \"An optional code to unlock the lock with.\",\n          example: \"1234\",\n        },\n      },\n    },\n    lock: {\n      description: \"Lock all or specified locks.\",\n      fields: {\n        entity_id: {\n          description: \"Name of lock to lock.\",\n          example: \"lock.front_door\",\n        },\n        code: {\n          description: \"An optional code to lock the lock with.\",\n          example: \"1234\",\n        },\n      },\n    },\n    open: { description: \"\", fields: {} },\n  },\n  cover: {\n    open_cover: {\n      description: \"Open all or specified cover.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of cover(s) to open.\",\n          example: \"cover.living_room\",\n        },\n      },\n    },\n    close_cover: {\n      description: \"Close all or specified cover.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of cover(s) to close.\",\n          example: \"cover.living_room\",\n        },\n      },\n    },\n    set_cover_position: {\n      description: \"Move to specific position all or specified cover.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of cover(s) to set cover position.\",\n          example: \"cover.living_room\",\n        },\n        position: {\n          description: \"Position of the cover (0 to 100).\",\n          example: \"30\",\n        },\n      },\n    },\n    stop_cover: {\n      description: \"Stop all or specified cover.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of cover(s) to stop.\",\n          example: \"cover.living_room\",\n        },\n      },\n    },\n    open_cover_tilt: {\n      description: \"Open all or specified cover tilt.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of cover(s) tilt to open.\",\n          example: \"cover.living_room\",\n        },\n      },\n    },\n    close_cover_tilt: {\n      description: \"Close all or specified cover tilt.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of cover(s) to close tilt.\",\n          example: \"cover.living_room\",\n        },\n      },\n    },\n    stop_cover_tilt: {\n      description: \"Stop all or specified cover.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of cover(s) to stop.\",\n          example: \"cover.living_room\",\n        },\n      },\n    },\n    set_cover_tilt_position: {\n      description: \"Move to specific position all or specified cover tilt.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of cover(s) to set cover tilt position.\",\n          example: \"cover.living_room\",\n        },\n        tilt_position: {\n          description: \"Tilt position of the cover (0 to 100).\",\n          example: \"30\",\n        },\n      },\n    },\n  },\n  switch: {\n    turn_off: {\n      description: \"Turn a switch off.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to turn off.\",\n          example: \"switch.living_room\",\n        },\n      },\n    },\n    turn_on: {\n      description: \"Turn a switch on.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to turn on\",\n          example: \"switch.living_room\",\n        },\n      },\n    },\n    toggle: {\n      description: \"Toggles a switch state.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to toggle.\",\n          example: \"switch.living_room\",\n        },\n      },\n    },\n  },\n  light: {\n    turn_on: {\n      description: \"Turn a light on.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to turn on\",\n          example: \"light.kitchen\",\n        },\n        transition: {\n          description: \"Duration in seconds it takes to get to next state\",\n          example: \"60\",\n        },\n        rgb_color: {\n          description: \"Color for the light in RGB-format.\",\n          example: \"[255, 100, 100]\",\n        },\n        color_name: {\n          description: \"A human readable color name.\",\n          example: \"red\",\n        },\n        hs_color: {\n          description:\n            \"Color for the light in hue/sat format. Hue is 0-360 and Sat is 0-100.\",\n          example: \"[300, 70]\",\n        },\n        xy_color: {\n          description: \"Color for the light in XY-format.\",\n          example: \"[0.52, 0.43]\",\n        },\n        color_temp: {\n          description: \"Color temperature for the light in mireds.\",\n          example: \"250\",\n        },\n        kelvin: {\n          description: \"Color temperature for the light in Kelvin.\",\n          example: \"4000\",\n        },\n        white_value: {\n          description: \"Number between 0..255 indicating level of white.\",\n          example: \"250\",\n        },\n        brightness: {\n          description: \"Number between 0..255 indicating brightness.\",\n          example: \"120\",\n        },\n        brightness_pct: {\n          description:\n            \"Number between 0..100 indicating percentage of full brightness.\",\n          example: \"47\",\n        },\n        profile: {\n          description: \"Name of a light profile to use.\",\n          example: \"relax\",\n        },\n        flash: {\n          description: \"If the light should flash.\",\n          example: \"short\",\n        },\n        effect: {\n          description: \"Light effect.\",\n          example: \"colorloop\",\n        },\n      },\n    },\n    turn_off: {\n      description: \"Turn a light off.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to turn off.\",\n          example: \"light.kitchen\",\n        },\n        transition: {\n          description: \"Duration in seconds it takes to get to next state.\",\n          example: \"60\",\n        },\n        flash: {\n          description: \"If the light should flash.\",\n          example: \"short\",\n        },\n      },\n    },\n    toggle: {\n      description: \"Toggles a light.\",\n      fields: {\n        entity_id: {\n          description: \"Name(s) of entities to toggle.\",\n          example: \"light.kitchen\",\n        },\n        transition: {\n          description: \"Duration in seconds it takes to get to next state.\",\n          example: \"60\",\n        },\n      },\n    },\n  },\n  tts: {\n    demo_say: { description: \"\", fields: {} },\n    clear_cache: {\n      description: \"Remove cache files and RAM cache.\",\n      fields: {},\n    },\n  },\n  configurator: { configure: { description: \"\", fields: {} } },\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}