{"ast":null,"code":"/**\n * Broadcast haptic feedback requests\n */\n\nimport { fireEvent } from \"../common/dom/fire_event\";\n\n// Allowed types are from iOS HIG.\n// https://developer.apple.com/design/human-interface-guidelines/ios/user-interaction/feedback/#haptics\n// Implementors on platforms other than iOS should attempt to match the patterns (shown in HIG) as closely as possible.\n\nexport var forwardHaptic = function forwardHaptic(hapticType) {\n  fireEvent(window, \"haptic\", hapticType);\n};","map":{"version":3,"names":["fireEvent","forwardHaptic","hapticType","window"],"sources":["/workspaces/frontend/src/data/haptics.ts"],"sourcesContent":["/**\n * Broadcast haptic feedback requests\n */\n\nimport { fireEvent, HASSDomEvent } from \"../common/dom/fire_event\";\n\n// Allowed types are from iOS HIG.\n// https://developer.apple.com/design/human-interface-guidelines/ios/user-interaction/feedback/#haptics\n// Implementors on platforms other than iOS should attempt to match the patterns (shown in HIG) as closely as possible.\nexport type HapticType =\n  | \"success\"\n  | \"warning\"\n  | \"failure\"\n  | \"light\"\n  | \"medium\"\n  | \"heavy\"\n  | \"selection\";\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    haptic: HapticType;\n  }\n\n  interface GlobalEventHandlersEventMap {\n    haptic: HASSDomEvent<HapticType>;\n  }\n}\n\nexport const forwardHaptic = (hapticType: HapticType) => {\n  fireEvent(window, \"haptic\", hapticType);\n};\n"],"mappings":"AAAA;AACA;AACA;;AAEA,SAASA,SAAS,QAAsB,0BAA0B;;AAElE;AACA;AACA;;AAqBA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAIC,UAAsB,EAAK;EACvDF,SAAS,CAACG,MAAM,EAAE,QAAQ,EAAED,UAAU,CAAC;AACzC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}