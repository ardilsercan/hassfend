{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nconst mdiDotsVertical = \"M12,16A2,2 0 0,1 14,18A2,2 0 0,1 12,20A2,2 0 0,1 10,18A2,2 0 0,1 12,16M12,10A2,2 0 0,1 14,12A2,2 0 0,1 12,14A2,2 0 0,1 10,12A2,2 0 0,1 12,10M12,4A2,2 0 0,1 14,6A2,2 0 0,1 12,8A2,2 0 0,1 10,6A2,2 0 0,1 12,4Z\";\nimport { LitElement, css, html, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { styleMap } from \"lit/directives/style-map\";\nimport { applyThemesOnElement } from \"../../../common/dom/apply_themes_on_element\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport { computeStateName } from \"../../../common/entity/compute_state_name\";\nimport { stateColorCss } from \"../../../common/entity/state_color\";\nimport \"../../../components/ha-card\";\nimport \"../../../components/ha-icon-button\";\nimport \"../../../state-control/climate/ha-state-control-climate-temperature\";\nimport { findEntities } from \"../common/find-entities\";\nimport { createEntityNotFoundWarning } from \"../components/hui-warning\";\nimport \"../card-features/hui-card-features\";\nexport let HuiThermostatCard = _decorate([customElement(\"hui-thermostat-card\")], function (_initialize, _LitElement) {\n  class HuiThermostatCard extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HuiThermostatCard,\n    d: [{\n      kind: \"method\",\n      static: true,\n      key: \"getConfigElement\",\n      value: async function getConfigElement() {\n        await import(\"../editor/config-elements/hui-thermostat-card-editor\");\n        return document.createElement(\"hui-thermostat-card-editor\");\n      }\n    }, {\n      kind: \"method\",\n      static: true,\n      key: \"getStubConfig\",\n      value: function getStubConfig(hass, entities, entitiesFallback) {\n        const includeDomains = [\"climate\"];\n        const maxEntities = 1;\n        const foundEntities = findEntities(hass, maxEntities, entities, entitiesFallback, includeDomains);\n        return {\n          type: \"thermostat\",\n          entity: foundEntities[0] || \"\"\n        };\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_config\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"getCardSize\",\n      value: function getCardSize() {\n        return 7;\n      }\n    }, {\n      kind: \"method\",\n      key: \"setConfig\",\n      value: function setConfig(config) {\n        if (!config.entity || config.entity.split(\".\")[0] !== \"climate\") {\n          throw new Error(\"Specify an entity from within the climate domain\");\n        }\n        this._config = config;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleMoreInfo\",\n      value: function _handleMoreInfo() {\n        fireEvent(this, \"hass-more-info\", {\n          entityId: this._config.entity\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"updated\",\n      value: function updated(changedProps) {\n        _get(_getPrototypeOf(HuiThermostatCard.prototype), \"updated\", this).call(this, changedProps);\n        if (!this._config || !this.hass || !changedProps.has(\"hass\") && !changedProps.has(\"_config\")) {\n          return;\n        }\n        const oldHass = changedProps.get(\"hass\");\n        const oldConfig = changedProps.get(\"_config\");\n        if (!oldHass || !oldConfig || oldHass.themes !== this.hass.themes || oldConfig.theme !== this._config.theme) {\n          applyThemesOnElement(this, this.hass.themes, this._config.theme);\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this.hass || !this._config) {\n          return nothing;\n        }\n        const stateObj = this.hass.states[this._config.entity];\n        if (!stateObj) {\n          return html`\n        <hui-warning>\n          ${createEntityNotFoundWarning(this.hass, this._config.entity)}\n        </hui-warning>\n      `;\n        }\n        const name = this._config.name || computeStateName(stateObj);\n        const color = stateColorCss(stateObj);\n        return html`\n      <ha-card>\n        <p class=\"title\">${name}</p>\n        <ha-state-control-climate-temperature\n          prevent-interaction-on-scroll\n          .showCurrentAsPrimary=${this._config.show_current_as_primary}\n          show-secondary\n          .hass=${this.hass}\n          .stateObj=${stateObj}\n        ></ha-state-control-climate-temperature>\n        <ha-icon-button\n          class=\"more-info\"\n          .label=${this.hass.localize(\"ui.panel.lovelace.cards.show_more_info\")}\n          .path=${mdiDotsVertical}\n          @click=${this._handleMoreInfo}\n          tabindex=\"0\"\n        ></ha-icon-button>\n        <hui-card-features\n          style=${styleMap({\n          \"--feature-color\": color\n        })}\n          .hass=${this.hass}\n          .stateObj=${stateObj}\n          .features=${this._config.features}\n        ></hui-card-features>\n      </ha-card>\n    `;\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css`\n      ha-card {\n        height: 100%;\n        position: relative;\n        overflow: hidden;\n        padding: 0;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: space-between;\n      }\n\n      .title {\n        width: 100%;\n        font-size: 18px;\n        line-height: 36px;\n        padding: 8px 30px 8px 30px;\n        margin: 0;\n        text-align: center;\n        box-sizing: border-box;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n      }\n\n      ha-state-control-climate-temperature {\n        width: 100%;\n        max-width: 344px; /* 12px + 12px + 320px */\n        padding: 0 12px 12px 12px;\n        box-sizing: border-box;\n      }\n\n      .more-info {\n        position: absolute;\n        cursor: pointer;\n        top: 0;\n        right: 0;\n        inset-inline-end: 0px;\n        inset-inline-start: initial;\n        border-radius: 100%;\n        color: var(--secondary-text-color);\n        direction: var(--direction);\n      }\n\n      hui-card-features {\n        width: 100%;\n      }\n    `;\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["LitElement","css","html","nothing","customElement","property","state","styleMap","applyThemesOnElement","fireEvent","computeStateName","stateColorCss","findEntities","createEntityNotFoundWarning","HuiThermostatCard","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","static","key","value","getConfigElement","document","createElement","getStubConfig","hass","entities","entitiesFallback","includeDomains","maxEntities","foundEntities","type","entity","decorators","attribute","getCardSize","setConfig","config","split","Error","_config","_handleMoreInfo","entityId","updated","changedProps","_get","_getPrototypeOf","prototype","call","has","oldHass","get","oldConfig","themes","theme","render","stateObj","states","name","color","show_current_as_primary","localize","mdiDotsVertical","features","styles"],"sources":["/workspaces/frontend/src/panels/lovelace/cards/hui-thermostat-card.ts"],"sourcesContent":["import { mdiDotsVertical } from \"@mdi/js\";\nimport {\n  CSSResultGroup,\n  LitElement,\n  PropertyValues,\n  css,\n  html,\n  nothing,\n} from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { styleMap } from \"lit/directives/style-map\";\nimport { applyThemesOnElement } from \"../../../common/dom/apply_themes_on_element\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport { computeStateName } from \"../../../common/entity/compute_state_name\";\nimport { stateColorCss } from \"../../../common/entity/state_color\";\nimport \"../../../components/ha-card\";\nimport \"../../../components/ha-icon-button\";\nimport { ClimateEntity } from \"../../../data/climate\";\nimport \"../../../state-control/climate/ha-state-control-climate-temperature\";\nimport { HomeAssistant } from \"../../../types\";\nimport { findEntities } from \"../common/find-entities\";\nimport { createEntityNotFoundWarning } from \"../components/hui-warning\";\nimport \"../card-features/hui-card-features\";\nimport { LovelaceCard, LovelaceCardEditor } from \"../types\";\nimport { ThermostatCardConfig } from \"./types\";\n\n@customElement(\"hui-thermostat-card\")\nexport class HuiThermostatCard extends LitElement implements LovelaceCard {\n  public static async getConfigElement(): Promise<LovelaceCardEditor> {\n    await import(\"../editor/config-elements/hui-thermostat-card-editor\");\n    return document.createElement(\"hui-thermostat-card-editor\");\n  }\n\n  public static getStubConfig(\n    hass: HomeAssistant,\n    entities: string[],\n    entitiesFallback: string[]\n  ): ThermostatCardConfig {\n    const includeDomains = [\"climate\"];\n    const maxEntities = 1;\n    const foundEntities = findEntities(\n      hass,\n      maxEntities,\n      entities,\n      entitiesFallback,\n      includeDomains\n    );\n\n    return { type: \"thermostat\", entity: foundEntities[0] || \"\" };\n  }\n\n  @property({ attribute: false }) public hass?: HomeAssistant;\n\n  @state() private _config?: ThermostatCardConfig;\n\n  public getCardSize(): number {\n    return 7;\n  }\n\n  public setConfig(config: ThermostatCardConfig): void {\n    if (!config.entity || config.entity.split(\".\")[0] !== \"climate\") {\n      throw new Error(\"Specify an entity from within the climate domain\");\n    }\n\n    this._config = config;\n  }\n\n  private _handleMoreInfo() {\n    fireEvent(this, \"hass-more-info\", {\n      entityId: this._config!.entity,\n    });\n  }\n\n  protected updated(changedProps: PropertyValues): void {\n    super.updated(changedProps);\n\n    if (\n      !this._config ||\n      !this.hass ||\n      (!changedProps.has(\"hass\") && !changedProps.has(\"_config\"))\n    ) {\n      return;\n    }\n\n    const oldHass = changedProps.get(\"hass\") as HomeAssistant | undefined;\n    const oldConfig = changedProps.get(\"_config\") as\n      | ThermostatCardConfig\n      | undefined;\n\n    if (\n      !oldHass ||\n      !oldConfig ||\n      oldHass.themes !== this.hass.themes ||\n      oldConfig.theme !== this._config.theme\n    ) {\n      applyThemesOnElement(this, this.hass.themes, this._config.theme);\n    }\n  }\n\n  protected render() {\n    if (!this.hass || !this._config) {\n      return nothing;\n    }\n    const stateObj = this.hass.states[this._config.entity] as ClimateEntity;\n\n    if (!stateObj) {\n      return html`\n        <hui-warning>\n          ${createEntityNotFoundWarning(this.hass, this._config.entity)}\n        </hui-warning>\n      `;\n    }\n\n    const name = this._config!.name || computeStateName(stateObj);\n\n    const color = stateColorCss(stateObj);\n\n    return html`\n      <ha-card>\n        <p class=\"title\">${name}</p>\n        <ha-state-control-climate-temperature\n          prevent-interaction-on-scroll\n          .showCurrentAsPrimary=${this._config.show_current_as_primary}\n          show-secondary\n          .hass=${this.hass}\n          .stateObj=${stateObj}\n        ></ha-state-control-climate-temperature>\n        <ha-icon-button\n          class=\"more-info\"\n          .label=${this.hass!.localize(\n            \"ui.panel.lovelace.cards.show_more_info\"\n          )}\n          .path=${mdiDotsVertical}\n          @click=${this._handleMoreInfo}\n          tabindex=\"0\"\n        ></ha-icon-button>\n        <hui-card-features\n          style=${styleMap({\n            \"--feature-color\": color,\n          })}\n          .hass=${this.hass}\n          .stateObj=${stateObj}\n          .features=${this._config.features}\n        ></hui-card-features>\n      </ha-card>\n    `;\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      ha-card {\n        height: 100%;\n        position: relative;\n        overflow: hidden;\n        padding: 0;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: space-between;\n      }\n\n      .title {\n        width: 100%;\n        font-size: 18px;\n        line-height: 36px;\n        padding: 8px 30px 8px 30px;\n        margin: 0;\n        text-align: center;\n        box-sizing: border-box;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n      }\n\n      ha-state-control-climate-temperature {\n        width: 100%;\n        max-width: 344px; /* 12px + 12px + 320px */\n        padding: 0 12px 12px 12px;\n        box-sizing: border-box;\n      }\n\n      .more-info {\n        position: absolute;\n        cursor: pointer;\n        top: 0;\n        right: 0;\n        inset-inline-end: 0px;\n        inset-inline-start: initial;\n        border-radius: 100%;\n        color: var(--secondary-text-color);\n        direction: var(--direction);\n      }\n\n      hui-card-features {\n        width: 100%;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-thermostat-card\": HuiThermostatCard;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}