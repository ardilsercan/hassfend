{"ast":null,"code":"import { applyThemesOnElement, invalidateThemeCache } from \"../common/dom/apply_themes_on_element\";\nimport { subscribeThemes } from \"../data/ws-themes\";\nimport { storeState } from \"../util/ha-pref-storage\";\nconst mql = matchMedia(\"(prefers-color-scheme: dark)\");\nexport default (superClass => class extends superClass {\n  constructor(...args) {\n    super(...args);\n    this._themeApplied = false;\n  }\n  firstUpdated(changedProps) {\n    super.firstUpdated(changedProps);\n    this.addEventListener(\"settheme\", ev => {\n      this._updateHass({\n        selectedTheme: {\n          ...this.hass.selectedTheme,\n          ...ev.detail\n        }\n      });\n      this._applyTheme(mql.matches);\n      storeState(this.hass);\n    });\n    mql.addListener(ev => this._applyTheme(ev.matches));\n    if (!this._themeApplied && mql.matches) {\n      applyThemesOnElement(document.documentElement, {\n        default_theme: \"default\",\n        default_dark_theme: null,\n        themes: {},\n        darkMode: true,\n        theme: \"default\"\n      }, undefined, undefined, true);\n    }\n  }\n  hassConnected() {\n    super.hassConnected();\n    subscribeThemes(this.hass.connection, themes => {\n      this._themeApplied = true;\n      this._updateHass({\n        themes\n      });\n      invalidateThemeCache();\n      this._applyTheme(mql.matches);\n    });\n  }\n  _applyTheme(darkPreferred) {\n    var _themeSettings, _themeSettings2, _auth$external;\n    if (!this.hass) {\n      return;\n    }\n    let themeSettings = this.hass.config.recovery_mode || this.hass.config.safe_mode ? {\n      ...this.hass.selectedTheme,\n      theme: \"default\",\n      primaryColor: this.hass.config.recovery_mode ? \"#db4437\" : \"#e48629\",\n      accentColor: this.hass.config.recovery_mode ? \"#ffca28\" : \"#db4437\"\n    } : this.hass.selectedTheme;\n    const themeName = ((_themeSettings = themeSettings) === null || _themeSettings === void 0 ? void 0 : _themeSettings.theme) || (darkPreferred && this.hass.themes.default_dark_theme ? this.hass.themes.default_dark_theme : this.hass.themes.default_theme);\n    let darkMode = ((_themeSettings2 = themeSettings) === null || _themeSettings2 === void 0 ? void 0 : _themeSettings2.dark) === undefined ? darkPreferred : themeSettings.dark;\n    const selectedTheme = themeName ? this.hass.themes.themes[themeName] : undefined;\n    if (selectedTheme && darkMode && !selectedTheme.modes) {\n      darkMode = false;\n    }\n    themeSettings = {\n      ...themeSettings,\n      dark: darkMode\n    };\n    this._updateHass({\n      themes: {\n        ...this.hass.themes,\n        theme: themeName\n      }\n    });\n    applyThemesOnElement(document.documentElement, this.hass.themes, themeName, themeSettings, true);\n    if (darkMode !== this.hass.themes.darkMode) {\n      this._updateHass({\n        themes: {\n          ...this.hass.themes,\n          darkMode\n        }\n      });\n      const schemeMeta = document.querySelector(\"meta[name=color-scheme]\");\n      if (schemeMeta) {\n        schemeMeta.setAttribute(\"content\", darkMode ? \"dark\" : themeName === \"default\" ? \"light\" : \"dark light\");\n      }\n    }\n    const themeMeta = document.querySelector(\"meta[name=theme-color]\");\n    const computedStyles = getComputedStyle(document.documentElement);\n    const headerColor = computedStyles.getPropertyValue(\"--app-header-background-color\");\n    document.documentElement.style.backgroundColor = computedStyles.getPropertyValue(\"--primary-background-color\");\n    if (themeMeta) {\n      if (!themeMeta.hasAttribute(\"default-content\")) {\n        themeMeta.setAttribute(\"default-content\", themeMeta.getAttribute(\"content\"));\n      }\n      const themeColor = (headerColor === null || headerColor === void 0 ? void 0 : headerColor.trim()) || themeMeta.getAttribute(\"default-content\");\n      themeMeta.setAttribute(\"content\", themeColor);\n    }\n    (_auth$external = this.hass.auth.external) === null || _auth$external === void 0 || _auth$external.fireMessage({\n      type: \"theme-update\"\n    });\n  }\n});","map":{"version":3,"names":["applyThemesOnElement","invalidateThemeCache","subscribeThemes","storeState","mql","matchMedia","superClass","constructor","args","_themeApplied","firstUpdated","changedProps","addEventListener","ev","_updateHass","selectedTheme","hass","detail","_applyTheme","matches","addListener","document","documentElement","default_theme","default_dark_theme","themes","darkMode","theme","undefined","hassConnected","connection","darkPreferred","_themeSettings","_themeSettings2","_auth$external","themeSettings","config","recovery_mode","safe_mode","primaryColor","accentColor","themeName","dark","modes","schemeMeta","querySelector","setAttribute","themeMeta","computedStyles","getComputedStyle","headerColor","getPropertyValue","style","backgroundColor","hasAttribute","getAttribute","themeColor","trim","auth","external","fireMessage","type"],"sources":["/workspaces/frontend/src/state/themes-mixin.ts"],"sourcesContent":["import {\n  applyThemesOnElement,\n  invalidateThemeCache,\n} from \"../common/dom/apply_themes_on_element\";\nimport { HASSDomEvent } from \"../common/dom/fire_event\";\nimport { subscribeThemes } from \"../data/ws-themes\";\nimport { Constructor, HomeAssistant } from \"../types\";\nimport { storeState } from \"../util/ha-pref-storage\";\nimport { HassBaseEl } from \"./hass-base-mixin\";\n\ndeclare global {\n  // for add event listener\n  interface HTMLElementEventMap {\n    settheme: HASSDomEvent<Partial<HomeAssistant[\"selectedTheme\"]>>;\n  }\n  interface HASSDomEvents {\n    settheme: Partial<HomeAssistant[\"selectedTheme\"]>;\n  }\n}\n\nconst mql = matchMedia(\"(prefers-color-scheme: dark)\");\n\nexport default <T extends Constructor<HassBaseEl>>(superClass: T) =>\n  class extends superClass {\n    private _themeApplied = false;\n\n    protected firstUpdated(changedProps) {\n      super.firstUpdated(changedProps);\n      this.addEventListener(\"settheme\", (ev) => {\n        this._updateHass({\n          selectedTheme: {\n            ...this.hass!.selectedTheme!,\n            ...ev.detail,\n          },\n        });\n        this._applyTheme(mql.matches);\n        storeState(this.hass!);\n      });\n      mql.addListener((ev) => this._applyTheme(ev.matches));\n      if (!this._themeApplied && mql.matches) {\n        applyThemesOnElement(\n          document.documentElement,\n          {\n            default_theme: \"default\",\n            default_dark_theme: null,\n            themes: {},\n            darkMode: true,\n            theme: \"default\",\n          },\n          undefined,\n          undefined,\n          true\n        );\n      }\n    }\n\n    protected hassConnected() {\n      super.hassConnected();\n\n      subscribeThemes(this.hass!.connection, (themes) => {\n        this._themeApplied = true;\n        this._updateHass({ themes });\n        invalidateThemeCache();\n        this._applyTheme(mql.matches);\n      });\n    }\n\n    private _applyTheme(darkPreferred: boolean) {\n      if (!this.hass) {\n        return;\n      }\n\n      let themeSettings: Partial<HomeAssistant[\"selectedTheme\"]> =\n        this.hass.config.recovery_mode || this.hass.config.safe_mode\n          ? {\n              ...this.hass.selectedTheme,\n              theme: \"default\",\n              primaryColor: this.hass.config.recovery_mode\n                ? \"#db4437\"\n                : \"#e48629\",\n              accentColor: this.hass.config.recovery_mode\n                ? \"#ffca28\"\n                : \"#db4437\",\n            }\n          : this.hass.selectedTheme;\n\n      const themeName =\n        themeSettings?.theme ||\n        (darkPreferred && this.hass.themes.default_dark_theme\n          ? this.hass.themes.default_dark_theme\n          : this.hass.themes.default_theme);\n\n      let darkMode =\n        themeSettings?.dark === undefined ? darkPreferred : themeSettings.dark;\n\n      const selectedTheme = themeName\n        ? this.hass.themes.themes[themeName]\n        : undefined;\n\n      if (selectedTheme && darkMode && !selectedTheme.modes) {\n        darkMode = false;\n      }\n\n      themeSettings = { ...themeSettings, dark: darkMode };\n      this._updateHass({\n        themes: { ...this.hass.themes!, theme: themeName },\n      });\n\n      applyThemesOnElement(\n        document.documentElement,\n        this.hass.themes,\n        themeName,\n        themeSettings,\n        true\n      );\n\n      if (darkMode !== this.hass.themes.darkMode) {\n        this._updateHass({\n          themes: { ...this.hass.themes!, darkMode },\n        });\n\n        const schemeMeta = document.querySelector(\"meta[name=color-scheme]\");\n        if (schemeMeta) {\n          schemeMeta.setAttribute(\n            \"content\",\n            darkMode ? \"dark\" : themeName === \"default\" ? \"light\" : \"dark light\"\n          );\n        }\n      }\n\n      const themeMeta = document.querySelector(\"meta[name=theme-color]\");\n      const computedStyles = getComputedStyle(document.documentElement);\n      const headerColor = computedStyles.getPropertyValue(\n        \"--app-header-background-color\"\n      );\n\n      document.documentElement.style.backgroundColor =\n        computedStyles.getPropertyValue(\"--primary-background-color\");\n\n      if (themeMeta) {\n        if (!themeMeta.hasAttribute(\"default-content\")) {\n          themeMeta.setAttribute(\n            \"default-content\",\n            themeMeta.getAttribute(\"content\")!\n          );\n        }\n        const themeColor =\n          headerColor?.trim() ||\n          (themeMeta.getAttribute(\"default-content\") as string);\n        themeMeta.setAttribute(\"content\", themeColor);\n      }\n\n      this.hass!.auth.external?.fireMessage({ type: \"theme-update\" });\n    }\n  };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}