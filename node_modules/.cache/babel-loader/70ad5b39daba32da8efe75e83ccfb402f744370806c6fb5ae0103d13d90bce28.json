{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport { STATE_NOT_RUNNING } from \"home-assistant-js-websocket\";\nimport { ReactiveElement } from \"lit\";\nimport { customElement } from \"lit/decorators\";\nimport { isComponentLoaded } from \"../../../common/config/is_component_loaded\";\nimport { getEnergyPreferences } from \"../../../data/energy\";\nimport { generateDefaultViewConfig } from \"../common/generate-lovelace-config\";\nexport let OriginalStatesViewStrategy = _decorate([customElement(\"original-states-view-strategy\")], function (_initialize, _ReactiveElement) {\n  class OriginalStatesViewStrategy extends _ReactiveElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: OriginalStatesViewStrategy,\n    d: [{\n      kind: \"method\",\n      static: true,\n      key: \"generate\",\n      value: async function generate(config, hass) {\n        if (hass.config.state === STATE_NOT_RUNNING) {\n          return {\n            cards: [{\n              type: \"starting\"\n            }]\n          };\n        }\n        if (hass.config.recovery_mode) {\n          return {\n            cards: [{\n              type: \"recovery-mode\"\n            }]\n          };\n        }\n        const [localize, energyPrefs] = await Promise.all([hass.loadBackendTranslation(\"title\"), isComponentLoaded(hass, \"energy\") ?\n        // It raises if not configured, just swallow that.\n        getEnergyPreferences(hass).catch(() => undefined) : undefined]);\n\n        // User can override default view. If they didn't, we will add one\n        // that contains all entities.\n        const view = generateDefaultViewConfig(hass.areas, hass.devices, hass.entities, hass.states, localize, energyPrefs, config.areas, config.hide_entities_without_area, config.hide_energy);\n\n        // Add map of geo locations to default view if loaded\n        if (hass.config.components.includes(\"geo_location\")) {\n          if (view && view.cards) {\n            view.cards.push({\n              type: \"map\",\n              geo_location_sources: [\"all\"]\n            });\n          }\n        }\n\n        // User has no entities\n        if (view.cards.length === 0) {\n          view.cards.push({\n            type: \"empty-state\"\n          });\n        }\n        return view;\n      }\n    }]\n  };\n}, ReactiveElement);","map":{"version":3,"names":["STATE_NOT_RUNNING","ReactiveElement","customElement","isComponentLoaded","getEnergyPreferences","generateDefaultViewConfig","OriginalStatesViewStrategy","_decorate","_initialize","_ReactiveElement","constructor","args","F","d","kind","static","key","value","generate","config","hass","state","cards","type","recovery_mode","localize","energyPrefs","Promise","all","loadBackendTranslation","catch","undefined","view","areas","devices","entities","states","hide_entities_without_area","hide_energy","components","includes","push","geo_location_sources","length"],"sources":["/workspaces/frontend/src/panels/lovelace/strategies/original-states-view-strategy.ts"],"sourcesContent":["import { STATE_NOT_RUNNING } from \"home-assistant-js-websocket\";\nimport { ReactiveElement } from \"lit\";\nimport { customElement } from \"lit/decorators\";\nimport { isComponentLoaded } from \"../../../common/config/is_component_loaded\";\nimport type { AreaFilterValue } from \"../../../components/ha-area-filter\";\nimport { getEnergyPreferences } from \"../../../data/energy\";\nimport { LovelaceViewConfig } from \"../../../data/lovelace/config/view\";\nimport { HomeAssistant } from \"../../../types\";\nimport { generateDefaultViewConfig } from \"../common/generate-lovelace-config\";\n\nexport type OriginalStatesViewStrategyConfig = {\n  type: \"original-states\";\n  areas?: AreaFilterValue;\n  hide_entities_without_area?: boolean;\n  hide_energy?: boolean;\n};\n\n@customElement(\"original-states-view-strategy\")\nexport class OriginalStatesViewStrategy extends ReactiveElement {\n  static async generate(\n    config: OriginalStatesViewStrategyConfig,\n    hass: HomeAssistant\n  ): Promise<LovelaceViewConfig> {\n    if (hass.config.state === STATE_NOT_RUNNING) {\n      return {\n        cards: [{ type: \"starting\" }],\n      };\n    }\n\n    if (hass.config.recovery_mode) {\n      return {\n        cards: [{ type: \"recovery-mode\" }],\n      };\n    }\n\n    const [localize, energyPrefs] = await Promise.all([\n      hass.loadBackendTranslation(\"title\"),\n      isComponentLoaded(hass, \"energy\")\n        ? // It raises if not configured, just swallow that.\n          getEnergyPreferences(hass).catch(() => undefined)\n        : undefined,\n    ]);\n\n    // User can override default view. If they didn't, we will add one\n    // that contains all entities.\n    const view = generateDefaultViewConfig(\n      hass.areas,\n      hass.devices,\n      hass.entities,\n      hass.states,\n      localize,\n      energyPrefs,\n      config.areas,\n      config.hide_entities_without_area,\n      config.hide_energy\n    );\n\n    // Add map of geo locations to default view if loaded\n    if (hass.config.components.includes(\"geo_location\")) {\n      if (view && view.cards) {\n        view.cards.push({\n          type: \"map\",\n          geo_location_sources: [\"all\"],\n        });\n      }\n    }\n\n    // User has no entities\n    if (view.cards!.length === 0) {\n      view.cards!.push({\n        type: \"empty-state\",\n      });\n    }\n\n    return view;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"original-states-view-strategy\": OriginalStatesViewStrategy;\n  }\n}\n"],"mappings":";AAAA,SAASA,iBAAiB,QAAQ,6BAA6B;AAC/D,SAASC,eAAe,QAAQ,KAAK;AACrC,SAASC,aAAa,QAAQ,gBAAgB;AAC9C,SAASC,iBAAiB,QAAQ,4CAA4C;AAE9E,SAASC,oBAAoB,QAAQ,sBAAsB;AAG3D,SAASC,yBAAyB,QAAQ,oCAAoC;AAS9E,WACaC,0BAA0B,GAAAC,SAAA,EADtCL,aAAa,CAAC,+BAA+B,CAAC,aAAAM,WAAA,EAAAC,gBAAA;EAA/C,MACaH,0BAA0B,SAAAG,gBAAA,CAAyB;IAAAC,YAAA,GAAAC,IAAA;MAAA,SAAAA,IAAA;MAAAH,WAAA;IAAA;EA0DhE;EAAC;IAAAI,CAAA,EA1DYN,0BAA0B;IAAAO,CAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,GAAA;MAAAC,KAAA,EACrC,eAAAC,SACEC,MAAwC,EACxCC,IAAmB,EACU;QAC7B,IAAIA,IAAI,CAACD,MAAM,CAACE,KAAK,KAAKrB,iBAAiB,EAAE;UAC3C,OAAO;YACLsB,KAAK,EAAE,CAAC;cAAEC,IAAI,EAAE;YAAW,CAAC;UAC9B,CAAC;QACH;QAEA,IAAIH,IAAI,CAACD,MAAM,CAACK,aAAa,EAAE;UAC7B,OAAO;YACLF,KAAK,EAAE,CAAC;cAAEC,IAAI,EAAE;YAAgB,CAAC;UACnC,CAAC;QACH;QAEA,MAAM,CAACE,QAAQ,EAAEC,WAAW,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CAChDR,IAAI,CAACS,sBAAsB,CAAC,OAAO,CAAC,EACpC1B,iBAAiB,CAACiB,IAAI,EAAE,QAAQ,CAAC;QAC7B;QACAhB,oBAAoB,CAACgB,IAAI,CAAC,CAACU,KAAK,CAAC,MAAMC,SAAS,CAAC,GACjDA,SAAS,CACd,CAAC;;QAEF;QACA;QACA,MAAMC,IAAI,GAAG3B,yBAAyB,CACpCe,IAAI,CAACa,KAAK,EACVb,IAAI,CAACc,OAAO,EACZd,IAAI,CAACe,QAAQ,EACbf,IAAI,CAACgB,MAAM,EACXX,QAAQ,EACRC,WAAW,EACXP,MAAM,CAACc,KAAK,EACZd,MAAM,CAACkB,0BAA0B,EACjClB,MAAM,CAACmB,WACT,CAAC;;QAED;QACA,IAAIlB,IAAI,CAACD,MAAM,CAACoB,UAAU,CAACC,QAAQ,CAAC,cAAc,CAAC,EAAE;UACnD,IAAIR,IAAI,IAAIA,IAAI,CAACV,KAAK,EAAE;YACtBU,IAAI,CAACV,KAAK,CAACmB,IAAI,CAAC;cACdlB,IAAI,EAAE,KAAK;cACXmB,oBAAoB,EAAE,CAAC,KAAK;YAC9B,CAAC,CAAC;UACJ;QACF;;QAEA;QACA,IAAIV,IAAI,CAACV,KAAK,CAAEqB,MAAM,KAAK,CAAC,EAAE;UAC5BX,IAAI,CAACV,KAAK,CAAEmB,IAAI,CAAC;YACflB,IAAI,EAAE;UACR,CAAC,CAAC;QACJ;QAEA,OAAOS,IAAI;MACb;IAAC;EAAA;AAAA,GAzD6C/B,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}