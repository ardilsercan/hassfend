{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport \"@material/mwc-button\";\nimport { css, html, LitElement } from \"lit\";\nimport { property, state, query } from \"lit/decorators\";\nimport { computeRTL } from \"../common/util/compute_rtl\";\nimport \"../components/ha-toast\";\nlet NotificationManager = _decorate(null, function (_initialize, _LitElement) {\n  class NotificationManager extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: NotificationManager,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_action\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_noCancelOnOutsideClick\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [query(\"ha-toast\")],\n      key: \"_toast\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"showDialog\",\n      value: async function showDialog({\n        message,\n        action,\n        duration,\n        dismissable\n      }) {\n        let toast = this._toast;\n        // Can happen on initial load\n        if (!toast) {\n          await this.updateComplete;\n          toast = this._toast;\n        }\n        toast.setAttribute(\"dir\", computeRTL(this.hass) ? \"rtl\" : \"ltr\");\n        this._action = action || undefined;\n        this._noCancelOnOutsideClick = dismissable === undefined ? false : !dismissable;\n        toast.hide();\n        toast.show({\n          text: message,\n          duration: duration === undefined ? 3000 : duration\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        return html`\n      <ha-toast .noCancelOnOutsideClick=${this._noCancelOnOutsideClick}>\n        ${this._action ? html`\n              <mwc-button\n                .label=${this._action.text}\n                @click=${this.buttonClicked}\n              ></mwc-button>\n            ` : \"\"}\n      </ha-toast>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"buttonClicked\",\n      value: function buttonClicked() {\n        this._toast.hide();\n        if (this._action) {\n          this._action.action();\n        }\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css`\n      ha-toast {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        padding: 8px 12px;\n      }\n      mwc-button {\n        color: var(--primary-color);\n        font-weight: bold;\n        margin-left: 8px;\n      }\n    `;\n      }\n    }]\n  };\n}, LitElement);\ncustomElements.define(\"notification-manager\", NotificationManager);","map":{"version":3,"names":["css","html","LitElement","property","state","query","computeRTL","NotificationManager","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","showDialog","message","action","duration","dismissable","toast","_toast","updateComplete","setAttribute","hass","_action","undefined","_noCancelOnOutsideClick","hide","show","text","render","buttonClicked","static","styles","customElements","define"],"sources":["/Users/sercanardil/Desktop/frontend/src/managers/notification-manager.ts"],"sourcesContent":["import \"@material/mwc-button\";\nimport { css, CSSResultGroup, html, LitElement, TemplateResult } from \"lit\";\nimport { property, state, query } from \"lit/decorators\";\nimport { computeRTL } from \"../common/util/compute_rtl\";\nimport \"../components/ha-toast\";\nimport type { HaToast } from \"../components/ha-toast\";\nimport type { HomeAssistant } from \"../types\";\n\nexport interface ShowToastParams {\n  message: string;\n  action?: ToastActionParams;\n  duration?: number;\n  dismissable?: boolean;\n}\n\nexport interface ToastActionParams {\n  action: () => void;\n  text: string;\n}\n\nclass NotificationManager extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @state() private _action?: ToastActionParams;\n\n  @state() private _noCancelOnOutsideClick = false;\n\n  @query(\"ha-toast\") private _toast!: HaToast;\n\n  public async showDialog({\n    message,\n    action,\n    duration,\n    dismissable,\n  }: ShowToastParams) {\n    let toast = this._toast;\n    // Can happen on initial load\n    if (!toast) {\n      await this.updateComplete;\n      toast = this._toast;\n    }\n    toast.setAttribute(\"dir\", computeRTL(this.hass) ? \"rtl\" : \"ltr\");\n    this._action = action || undefined;\n    this._noCancelOnOutsideClick =\n      dismissable === undefined ? false : !dismissable;\n    toast.hide();\n    toast.show({\n      text: message,\n      duration: duration === undefined ? 3000 : duration,\n    });\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      <ha-toast .noCancelOnOutsideClick=${this._noCancelOnOutsideClick}>\n        ${this._action\n          ? html`\n              <mwc-button\n                .label=${this._action.text}\n                @click=${this.buttonClicked}\n              ></mwc-button>\n            `\n          : \"\"}\n      </ha-toast>\n    `;\n  }\n\n  private buttonClicked() {\n    this._toast.hide();\n    if (this._action) {\n      this._action.action();\n    }\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      ha-toast {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        padding: 8px 12px;\n      }\n      mwc-button {\n        color: var(--primary-color);\n        font-weight: bold;\n        margin-left: 8px;\n      }\n    `;\n  }\n}\n\ncustomElements.define(\"notification-manager\", NotificationManager);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"notification-manager\": NotificationManager;\n  }\n\n  // for fire event\n  interface HASSDomEvents {\n    \"hass-notification\": ShowToastParams;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}