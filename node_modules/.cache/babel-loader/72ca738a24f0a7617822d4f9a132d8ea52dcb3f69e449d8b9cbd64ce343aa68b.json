{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport { customElement, property } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { computeStateDomain } from \"../../../common/entity/compute_state_domain\";\nimport { debounce } from \"../../../common/util/debounce\";\nimport { HassRouterPage } from \"../../../layouts/hass-router-page\";\nimport \"./ha-scene-dashboard\";\nimport \"./ha-scene-editor\";\nconst equal = (a, b) => {\n  if (a.length !== b.length) {\n    return false;\n  }\n  return a.every((scene, index) => scene === b[index]);\n};\nlet HaConfigScene = _decorate([customElement(\"ha-config-scene\")], function (_initialize, _HassRouterPage) {\n  class HaConfigScene extends _HassRouterPage {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaConfigScene,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"narrow\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"isWide\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"showAdvanced\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"scenes\",\n      value() {\n        return [];\n      }\n    }, {\n      kind: \"field\",\n      key: \"routerOptions\",\n      value() {\n        return {\n          defaultPage: \"dashboard\",\n          routes: {\n            dashboard: {\n              tag: \"ha-scene-dashboard\",\n              cache: true\n            },\n            edit: {\n              tag: \"ha-scene-editor\"\n            }\n          }\n        };\n      }\n    }, {\n      kind: \"field\",\n      key: \"_debouncedUpdateScenes\",\n      value() {\n        return debounce(pageEl => {\n          const newScenes = this._getScenes(this.hass.states);\n          if (!equal(newScenes, pageEl.scenes)) {\n            pageEl.scenes = newScenes;\n          }\n        }, 10);\n      }\n    }, {\n      kind: \"field\",\n      key: \"_getScenes\",\n      value() {\n        return memoizeOne(states => Object.values(states).filter(entity => computeStateDomain(entity) === \"scene\"));\n      }\n    }, {\n      kind: \"method\",\n      key: \"updatePageEl\",\n      value: function updatePageEl(pageEl, changedProps) {\n        pageEl.hass = this.hass;\n        pageEl.narrow = this.narrow;\n        pageEl.isWide = this.isWide;\n        pageEl.route = this.routeTail;\n        pageEl.showAdvanced = this.showAdvanced;\n        if (this.hass) {\n          if (!pageEl.scenes || !changedProps) {\n            pageEl.scenes = this._getScenes(this.hass.states);\n          } else if (changedProps.has(\"hass\")) {\n            this._debouncedUpdateScenes(pageEl);\n          }\n        }\n        if ((!changedProps || changedProps.has(\"route\")) && this._currentPage === \"edit\") {\n          pageEl.creatingNew = undefined;\n          const sceneId = this.routeTail.path.substr(1);\n          pageEl.sceneId = sceneId === \"new\" ? null : sceneId;\n        }\n      }\n    }]\n  };\n}, HassRouterPage);","map":{"version":3,"names":["customElement","property","memoizeOne","computeStateDomain","debounce","HassRouterPage","equal","a","b","length","every","scene","index","HaConfigScene","_decorate","_initialize","_HassRouterPage","constructor","args","F","d","kind","decorators","attribute","key","value","type","Boolean","defaultPage","routes","dashboard","tag","cache","edit","pageEl","newScenes","_getScenes","hass","states","scenes","Object","values","filter","entity","updatePageEl","changedProps","narrow","isWide","route","routeTail","showAdvanced","has","_debouncedUpdateScenes","_currentPage","creatingNew","undefined","sceneId","path","substr"],"sources":["/workspaces/frontend/src/panels/config/scene/ha-config-scene.ts"],"sourcesContent":["import { HassEntities } from \"home-assistant-js-websocket\";\nimport { PropertyValues } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { computeStateDomain } from \"../../../common/entity/compute_state_domain\";\nimport { debounce } from \"../../../common/util/debounce\";\nimport { SceneEntity } from \"../../../data/scene\";\nimport {\n  HassRouterPage,\n  RouterOptions,\n} from \"../../../layouts/hass-router-page\";\nimport { HomeAssistant } from \"../../../types\";\nimport \"./ha-scene-dashboard\";\nimport \"./ha-scene-editor\";\n\nconst equal = (a: SceneEntity[], b: SceneEntity[]): boolean => {\n  if (a.length !== b.length) {\n    return false;\n  }\n  return a.every((scene, index) => scene === b[index]);\n};\n\n@customElement(\"ha-config-scene\")\nclass HaConfigScene extends HassRouterPage {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ type: Boolean }) public narrow = false;\n\n  @property({ type: Boolean }) public isWide = false;\n\n  @property({ type: Boolean }) public showAdvanced = false;\n\n  @property({ attribute: false }) public scenes: SceneEntity[] = [];\n\n  protected routerOptions: RouterOptions = {\n    defaultPage: \"dashboard\",\n    routes: {\n      dashboard: {\n        tag: \"ha-scene-dashboard\",\n        cache: true,\n      },\n      edit: {\n        tag: \"ha-scene-editor\",\n      },\n    },\n  };\n\n  private _debouncedUpdateScenes = debounce((pageEl) => {\n    const newScenes = this._getScenes(this.hass.states);\n    if (!equal(newScenes, pageEl.scenes)) {\n      pageEl.scenes = newScenes;\n    }\n  }, 10);\n\n  private _getScenes = memoizeOne(\n    (states: HassEntities): SceneEntity[] =>\n      Object.values(states).filter(\n        (entity) => computeStateDomain(entity) === \"scene\"\n      ) as SceneEntity[]\n  );\n\n  protected updatePageEl(pageEl, changedProps: PropertyValues) {\n    pageEl.hass = this.hass;\n    pageEl.narrow = this.narrow;\n    pageEl.isWide = this.isWide;\n    pageEl.route = this.routeTail;\n    pageEl.showAdvanced = this.showAdvanced;\n\n    if (this.hass) {\n      if (!pageEl.scenes || !changedProps) {\n        pageEl.scenes = this._getScenes(this.hass.states);\n      } else if (changedProps.has(\"hass\")) {\n        this._debouncedUpdateScenes(pageEl);\n      }\n    }\n\n    if (\n      (!changedProps || changedProps.has(\"route\")) &&\n      this._currentPage === \"edit\"\n    ) {\n      pageEl.creatingNew = undefined;\n      const sceneId = this.routeTail.path.substr(1);\n      pageEl.sceneId = sceneId === \"new\" ? null : sceneId;\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-config-scene\": HaConfigScene;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}