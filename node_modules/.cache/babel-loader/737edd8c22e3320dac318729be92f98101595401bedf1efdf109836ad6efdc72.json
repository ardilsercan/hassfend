{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _regeneratorRuntime from \"@babel/runtime/helpers/regeneratorRuntime\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _templateObject, _templateObject2, _templateObject3;\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"./ha-form\";\nimport { css, html, LitElement } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nexport var HaFormGrid = _decorate([customElement(\"ha-form-grid\")], function (_initialize, _LitElement) {\n  var HaFormGrid = /*#__PURE__*/function (_LitElement2) {\n    _inherits(HaFormGrid, _LitElement2);\n    function HaFormGrid() {\n      var _this;\n      _classCallCheck(this, HaFormGrid);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, HaFormGrid, [].concat(args));\n      _initialize(_assertThisInitialized(_this));\n      return _this;\n    }\n    return _createClass(HaFormGrid);\n  }(_LitElement);\n  return {\n    F: HaFormGrid,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"data\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"schema\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"disabled\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"computeLabel\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"computeHelper\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"focus\",\n      value: function () {\n        var _focus = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n          var _this$renderRoot$quer;\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.updateComplete;\n              case 2:\n                (_this$renderRoot$quer = this.renderRoot.querySelector(\"ha-form\")) === null || _this$renderRoot$quer === void 0 || _this$renderRoot$quer.focus();\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee, this);\n        }));\n        function focus() {\n          return _focus.apply(this, arguments);\n        }\n        return focus;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"updated\",\n      value: function updated(changedProps) {\n        _get(_getPrototypeOf(HaFormGrid.prototype), \"updated\", this).call(this, changedProps);\n        if (changedProps.has(\"schema\")) {\n          if (this.schema.column_min_width) {\n            this.style.setProperty(\"--form-grid-min-width\", this.schema.column_min_width);\n          } else {\n            this.style.setProperty(\"--form-grid-min-width\", \"\");\n          }\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var _this2 = this;\n        return html(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      \", \"\\n    \"])), this.schema.schema.map(function (item) {\n          return html(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n          <ha-form\\n            .hass=\", \"\\n            .data=\", \"\\n            .schema=\", \"\\n            .disabled=\", \"\\n            .computeLabel=\", \"\\n            .computeHelper=\", \"\\n          ></ha-form>\\n        \"])), _this2.hass, _this2.data, [item], _this2.disabled, _this2.computeLabel, _this2.computeHelper);\n        }));\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n      :host {\\n        display: grid !important;\\n        grid-template-columns: repeat(\\n          var(--form-grid-column-count, auto-fit),\\n          minmax(var(--form-grid-min-width, 200px), 1fr)\\n        );\\n        grid-column-gap: 8px;\\n        grid-row-gap: 24px;\\n      }\\n      :host > ha-form {\\n        display: block;\\n      }\\n    \"])));\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","customElement","property","HaFormGrid","_decorate","_initialize","_LitElement","_LitElement2","_inherits","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_assertThisInitialized","_createClass","F","d","kind","decorators","attribute","key","value","type","Boolean","_focus","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_this$renderRoot$quer","wrap","_callee$","_context","prev","next","updateComplete","renderRoot","querySelector","focus","stop","apply","updated","changedProps","_get","_getPrototypeOf","prototype","call","has","schema","column_min_width","style","setProperty","render","_this2","_templateObject","_taggedTemplateLiteral","map","item","_templateObject2","hass","data","disabled","computeLabel","computeHelper","static","styles","_templateObject3"],"sources":["/workspaces/frontend/src/components/ha-form/ha-form-grid.ts"],"sourcesContent":["import \"./ha-form\";\nimport {\n  css,\n  CSSResultGroup,\n  html,\n  LitElement,\n  PropertyValues,\n  TemplateResult,\n} from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport type {\n  HaFormGridSchema,\n  HaFormDataContainer,\n  HaFormElement,\n  HaFormSchema,\n} from \"./types\";\nimport type { HomeAssistant } from \"../../types\";\n\n@customElement(\"ha-form-grid\")\nexport class HaFormGrid extends LitElement implements HaFormElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public data!: HaFormDataContainer;\n\n  @property({ attribute: false }) public schema!: HaFormGridSchema;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @property({ attribute: false }) public computeLabel?: (\n    schema: HaFormSchema,\n    data?: HaFormDataContainer\n  ) => string;\n\n  @property({ attribute: false }) public computeHelper?: (\n    schema: HaFormSchema\n  ) => string;\n\n  public async focus() {\n    await this.updateComplete;\n    this.renderRoot.querySelector(\"ha-form\")?.focus();\n  }\n\n  protected updated(changedProps: PropertyValues): void {\n    super.updated(changedProps);\n    if (changedProps.has(\"schema\")) {\n      if (this.schema.column_min_width) {\n        this.style.setProperty(\n          \"--form-grid-min-width\",\n          this.schema.column_min_width\n        );\n      } else {\n        this.style.setProperty(\"--form-grid-min-width\", \"\");\n      }\n    }\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      ${this.schema.schema.map(\n        (item) => html`\n          <ha-form\n            .hass=${this.hass}\n            .data=${this.data}\n            .schema=${[item]}\n            .disabled=${this.disabled}\n            .computeLabel=${this.computeLabel}\n            .computeHelper=${this.computeHelper}\n          ></ha-form>\n        `\n      )}\n    `;\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      :host {\n        display: grid !important;\n        grid-template-columns: repeat(\n          var(--form-grid-column-count, auto-fit),\n          minmax(var(--form-grid-min-width, 200px), 1fr)\n        );\n        grid-column-gap: 8px;\n        grid-row-gap: 24px;\n      }\n      :host > ha-form {\n        display: block;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-form-grid\": HaFormGrid;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}