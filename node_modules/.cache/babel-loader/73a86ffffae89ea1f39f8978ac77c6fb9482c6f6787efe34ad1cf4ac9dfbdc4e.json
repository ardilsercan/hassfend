{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport { html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport \"../../../../components/ha-form/ha-form\";\nexport let HuiClimatePresetModesCardFeatureEditor = _decorate([customElement(\"hui-climate-preset-modes-card-feature-editor\")], function (_initialize, _LitElement) {\n  class HuiClimatePresetModesCardFeatureEditor extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HuiClimatePresetModesCardFeatureEditor,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"context\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_config\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"setConfig\",\n      value: function setConfig(config) {\n        this._config = config;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_schema\",\n      value() {\n        return memoizeOne((localize, formatEntityAttributeValue, stateObj) => {\n          var _stateObj$attributes$;\n          return [{\n            name: \"style\",\n            selector: {\n              select: {\n                multiple: false,\n                mode: \"list\",\n                options: [\"dropdown\", \"icons\"].map(mode => ({\n                  value: mode,\n                  label: localize(`ui.panel.lovelace.editor.features.types.climate-preset-modes.style_list.${mode}`)\n                }))\n              }\n            }\n          }, {\n            name: \"preset_modes\",\n            selector: {\n              select: {\n                multiple: true,\n                mode: \"list\",\n                options: (stateObj === null || stateObj === void 0 || (_stateObj$attributes$ = stateObj.attributes.preset_modes) === null || _stateObj$attributes$ === void 0 ? void 0 : _stateObj$attributes$.map(mode => ({\n                  value: mode,\n                  label: formatEntityAttributeValue(stateObj, \"preset_mode\", mode)\n                }))) || []\n              }\n            }\n          }];\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var _this$context, _this$context2;\n        if (!this.hass || !this._config) {\n          return nothing;\n        }\n        const stateObj = (_this$context = this.context) !== null && _this$context !== void 0 && _this$context.entity_id ? this.hass.states[(_this$context2 = this.context) === null || _this$context2 === void 0 ? void 0 : _this$context2.entity_id] : undefined;\n        const data = {\n          style: \"dropdown\",\n          preset_modes: [],\n          ...this._config\n        };\n        const schema = this._schema(this.hass.localize, this.hass.formatEntityAttributeValue, stateObj);\n        return html`\n      <ha-form\n        .hass=${this.hass}\n        .data=${data}\n        .schema=${schema}\n        .computeLabel=${this._computeLabelCallback}\n        @value-changed=${this._valueChanged}\n      ></ha-form>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_valueChanged\",\n      value: function _valueChanged(ev) {\n        fireEvent(this, \"config-changed\", {\n          config: ev.detail.value\n        });\n      }\n    }, {\n      kind: \"field\",\n      key: \"_computeLabelCallback\",\n      value() {\n        return schema => {\n          switch (schema.name) {\n            case \"style\":\n            case \"preset_modes\":\n              return this.hass.localize(`ui.panel.lovelace.editor.features.types.climate-preset-modes.${schema.name}`);\n            default:\n              return \"\";\n          }\n        };\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["html","LitElement","nothing","customElement","property","state","memoizeOne","fireEvent","HuiClimatePresetModesCardFeatureEditor","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","setConfig","config","_config","localize","formatEntityAttributeValue","stateObj","_stateObj$attributes$","name","selector","select","multiple","mode","options","map","label","attributes","preset_modes","render","_this$context","_this$context2","hass","context","entity_id","states","undefined","data","style","schema","_schema","_computeLabelCallback","_valueChanged","ev","detail"],"sources":["/workspaces/frontend/src/panels/lovelace/editor/config-elements/hui-climate-preset-modes-card-feature-editor.ts"],"sourcesContent":["import { HassEntity } from \"home-assistant-js-websocket\";\nimport { html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { FormatEntityAttributeValueFunc } from \"../../../../common/translations/entity-state\";\nimport { LocalizeFunc } from \"../../../../common/translations/localize\";\nimport \"../../../../components/ha-form/ha-form\";\nimport type {\n  HaFormSchema,\n  SchemaUnion,\n} from \"../../../../components/ha-form/types\";\nimport type { HomeAssistant } from \"../../../../types\";\nimport {\n  ClimatePresetModesCardFeatureConfig,\n  LovelaceCardFeatureContext,\n} from \"../../card-features/types\";\nimport type { LovelaceCardFeatureEditor } from \"../../types\";\n\n@customElement(\"hui-climate-preset-modes-card-feature-editor\")\nexport class HuiClimatePresetModesCardFeatureEditor\n  extends LitElement\n  implements LovelaceCardFeatureEditor\n{\n  @property({ attribute: false }) public hass?: HomeAssistant;\n\n  @property({ attribute: false }) public context?: LovelaceCardFeatureContext;\n\n  @state() private _config?: ClimatePresetModesCardFeatureConfig;\n\n  public setConfig(config: ClimatePresetModesCardFeatureConfig): void {\n    this._config = config;\n  }\n\n  private _schema = memoizeOne(\n    (\n      localize: LocalizeFunc,\n      formatEntityAttributeValue: FormatEntityAttributeValueFunc,\n      stateObj?: HassEntity\n    ) =>\n      [\n        {\n          name: \"style\",\n          selector: {\n            select: {\n              multiple: false,\n              mode: \"list\",\n              options: [\"dropdown\", \"icons\"].map((mode) => ({\n                value: mode,\n                label: localize(\n                  `ui.panel.lovelace.editor.features.types.climate-preset-modes.style_list.${mode}`\n                ),\n              })),\n            },\n          },\n        },\n        {\n          name: \"preset_modes\",\n          selector: {\n            select: {\n              multiple: true,\n              mode: \"list\",\n              options:\n                stateObj?.attributes.preset_modes?.map((mode) => ({\n                  value: mode,\n                  label: formatEntityAttributeValue(\n                    stateObj,\n                    \"preset_mode\",\n                    mode\n                  ),\n                })) || [],\n            },\n          },\n        },\n      ] as const satisfies readonly HaFormSchema[]\n  );\n\n  protected render() {\n    if (!this.hass || !this._config) {\n      return nothing;\n    }\n\n    const stateObj = this.context?.entity_id\n      ? this.hass.states[this.context?.entity_id]\n      : undefined;\n\n    const data: ClimatePresetModesCardFeatureConfig = {\n      style: \"dropdown\",\n      preset_modes: [],\n      ...this._config,\n    };\n\n    const schema = this._schema(\n      this.hass.localize,\n      this.hass.formatEntityAttributeValue,\n      stateObj\n    );\n\n    return html`\n      <ha-form\n        .hass=${this.hass}\n        .data=${data}\n        .schema=${schema}\n        .computeLabel=${this._computeLabelCallback}\n        @value-changed=${this._valueChanged}\n      ></ha-form>\n    `;\n  }\n\n  private _valueChanged(ev: CustomEvent): void {\n    fireEvent(this, \"config-changed\", { config: ev.detail.value });\n  }\n\n  private _computeLabelCallback = (\n    schema: SchemaUnion<ReturnType<typeof this._schema>>\n  ) => {\n    switch (schema.name) {\n      case \"style\":\n      case \"preset_modes\":\n        return this.hass!.localize(\n          `ui.panel.lovelace.editor.features.types.climate-preset-modes.${schema.name}`\n        );\n      default:\n        return \"\";\n    }\n  };\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-climate-preset-modes-card-feature-editor\": HuiClimatePresetModesCardFeatureEditor;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}