{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/helpers/regeneratorRuntime\";\nimport _createForOfIteratorHelper from \"@babel/runtime/helpers/createForOfIteratorHelper\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\nexport var fetchSystemLog = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(hass) {\n    var log, _iterator, _step, error;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return hass.callWS({\n            type: \"system_log/list\"\n          });\n        case 2:\n          log = _context.sent;\n          _iterator = _createForOfIteratorHelper(log);\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              error = _step.value;\n              error.level = error.level.toLowerCase();\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n          return _context.abrupt(\"return\", log);\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function fetchSystemLog(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var getLoggedErrorIntegration = function getLoggedErrorIntegration(item) {\n  // Try to derive from logger name\n  if (item.name.startsWith(\"homeassistant.components.\")) {\n    return item.name.split(\".\")[2];\n  }\n  if (item.name.startsWith(\"custom_components.\")) {\n    return item.name.split(\".\")[1];\n  }\n\n  // Try to derive from logged location\n  if (item.source[0].startsWith(\"custom_components/\")) {\n    return item.source[0].split(\"/\")[1];\n  }\n  if (item.source[0].startsWith(\"homeassistant/components/\")) {\n    return item.source[0].split(\"/\")[2];\n  }\n  return undefined;\n};\nexport var isCustomIntegrationError = function isCustomIntegrationError(item) {\n  return item.name.startsWith(\"custom_components.\") || item.source[0].startsWith(\"custom_components/\");\n};","map":{"version":3,"names":["fetchSystemLog","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","hass","log","_iterator","_step","error","wrap","_callee$","_context","prev","next","callWS","type","sent","_createForOfIteratorHelper","s","n","done","value","level","toLowerCase","err","e","f","abrupt","stop","_x","apply","arguments","getLoggedErrorIntegration","item","name","startsWith","split","source","undefined","isCustomIntegrationError"],"sources":["/workspaces/frontend/src/data/system_log.ts"],"sourcesContent":["import { HomeAssistant } from \"../types\";\n\nexport type SystemLogLevel =\n  | \"critical\"\n  | \"error\"\n  | \"warning\"\n  | \"info\"\n  | \"debug\";\n\nexport interface LoggedError {\n  name: string;\n  message: [string];\n  level: SystemLogLevel;\n  source: [string, number];\n  exception: string;\n  count: number;\n  // unix timestamps in seconds\n  timestamp: number;\n  first_occurred: number;\n}\n\nexport const fetchSystemLog = async (hass: HomeAssistant) => {\n  const log = await hass.callWS<LoggedError[]>({ type: \"system_log/list\" });\n  for (const error of log) {\n    error.level = error.level.toLowerCase() as LoggedError[\"level\"];\n  }\n  return log;\n};\n\nexport const getLoggedErrorIntegration = (item: LoggedError) => {\n  // Try to derive from logger name\n  if (item.name.startsWith(\"homeassistant.components.\")) {\n    return item.name.split(\".\")[2];\n  }\n  if (item.name.startsWith(\"custom_components.\")) {\n    return item.name.split(\".\")[1];\n  }\n\n  // Try to derive from logged location\n  if (item.source[0].startsWith(\"custom_components/\")) {\n    return item.source[0].split(\"/\")[1];\n  }\n\n  if (item.source[0].startsWith(\"homeassistant/components/\")) {\n    return item.source[0].split(\"/\")[2];\n  }\n\n  return undefined;\n};\n\nexport const isCustomIntegrationError = (item: LoggedError) =>\n  item.name.startsWith(\"custom_components.\") ||\n  item.source[0].startsWith(\"custom_components/\");\n"],"mappings":";;;;;AAqBA,OAAO,IAAMA,cAAc;EAAA,IAAAC,IAAA,GAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAOC,IAAmB;IAAA,IAAAC,GAAA,EAAAC,SAAA,EAAAC,KAAA,EAAAC,KAAA;IAAA,OAAAP,mBAAA,GAAAQ,IAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UAAAF,QAAA,CAAAE,IAAA;UAAA,OACpCT,IAAI,CAACU,MAAM,CAAgB;YAAEC,IAAI,EAAE;UAAkB,CAAC,CAAC;QAAA;UAAnEV,GAAG,GAAAM,QAAA,CAAAK,IAAA;UAAAV,SAAA,GAAAW,0BAAA,CACWZ,GAAG;UAAA;YAAvB,KAAAC,SAAA,CAAAY,CAAA,MAAAX,KAAA,GAAAD,SAAA,CAAAa,CAAA,IAAAC,IAAA,GAAyB;cAAdZ,KAAK,GAAAD,KAAA,CAAAc,KAAA;cACdb,KAAK,CAACc,KAAK,GAAGd,KAAK,CAACc,KAAK,CAACC,WAAW,CAAC,CAAyB;YACjE;UAAC,SAAAC,GAAA;YAAAlB,SAAA,CAAAmB,CAAA,CAAAD,GAAA;UAAA;YAAAlB,SAAA,CAAAoB,CAAA;UAAA;UAAA,OAAAf,QAAA,CAAAgB,MAAA,WACMtB,GAAG;QAAA;QAAA;UAAA,OAAAM,QAAA,CAAAiB,IAAA;MAAA;IAAA,GAAAzB,OAAA;EAAA,CACX;EAAA,gBANYL,cAAcA,CAAA+B,EAAA;IAAA,OAAA9B,IAAA,CAAA+B,KAAA,OAAAC,SAAA;EAAA;AAAA,GAM1B;AAED,OAAO,IAAMC,yBAAyB,GAAG,SAA5BA,yBAAyBA,CAAIC,IAAiB,EAAK;EAC9D;EACA,IAAIA,IAAI,CAACC,IAAI,CAACC,UAAU,CAAC,2BAA2B,CAAC,EAAE;IACrD,OAAOF,IAAI,CAACC,IAAI,CAACE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAChC;EACA,IAAIH,IAAI,CAACC,IAAI,CAACC,UAAU,CAAC,oBAAoB,CAAC,EAAE;IAC9C,OAAOF,IAAI,CAACC,IAAI,CAACE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAChC;;EAEA;EACA,IAAIH,IAAI,CAACI,MAAM,CAAC,CAAC,CAAC,CAACF,UAAU,CAAC,oBAAoB,CAAC,EAAE;IACnD,OAAOF,IAAI,CAACI,MAAM,CAAC,CAAC,CAAC,CAACD,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EACrC;EAEA,IAAIH,IAAI,CAACI,MAAM,CAAC,CAAC,CAAC,CAACF,UAAU,CAAC,2BAA2B,CAAC,EAAE;IAC1D,OAAOF,IAAI,CAACI,MAAM,CAAC,CAAC,CAAC,CAACD,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EACrC;EAEA,OAAOE,SAAS;AAClB,CAAC;AAED,OAAO,IAAMC,wBAAwB,GAAG,SAA3BA,wBAAwBA,CAAIN,IAAiB;EAAA,OACxDA,IAAI,CAACC,IAAI,CAACC,UAAU,CAAC,oBAAoB,CAAC,IAC1CF,IAAI,CAACI,MAAM,CAAC,CAAC,CAAC,CAACF,UAAU,CAAC,oBAAoB,CAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}