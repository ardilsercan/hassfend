{"ast":null,"code":"import \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\nimport { temperature2rgb } from \"../common/color/convert-light-color\";\nexport var LightEntityFeature = /*#__PURE__*/function (LightEntityFeature) {\n  LightEntityFeature[LightEntityFeature[\"EFFECT\"] = 4] = \"EFFECT\";\n  LightEntityFeature[LightEntityFeature[\"FLASH\"] = 8] = \"FLASH\";\n  LightEntityFeature[LightEntityFeature[\"TRANSITION\"] = 32] = \"TRANSITION\";\n  return LightEntityFeature;\n}({});\nexport var LightColorMode = /*#__PURE__*/function (LightColorMode) {\n  LightColorMode[\"UNKNOWN\"] = \"unknown\";\n  LightColorMode[\"ONOFF\"] = \"onoff\";\n  LightColorMode[\"BRIGHTNESS\"] = \"brightness\";\n  LightColorMode[\"COLOR_TEMP\"] = \"color_temp\";\n  LightColorMode[\"HS\"] = \"hs\";\n  LightColorMode[\"XY\"] = \"xy\";\n  LightColorMode[\"RGB\"] = \"rgb\";\n  LightColorMode[\"RGBW\"] = \"rgbw\";\n  LightColorMode[\"RGBWW\"] = \"rgbww\";\n  LightColorMode[\"WHITE\"] = \"white\";\n  return LightColorMode;\n}({});\nvar modesSupportingColor = [LightColorMode.HS, LightColorMode.XY, LightColorMode.RGB, LightColorMode.RGBW, LightColorMode.RGBWW];\nvar modesSupportingBrightness = [].concat(modesSupportingColor, [LightColorMode.COLOR_TEMP, LightColorMode.BRIGHTNESS, LightColorMode.WHITE]);\nexport var lightSupportsColorMode = function lightSupportsColorMode(entity, mode) {\n  var _entity$attributes$su;\n  return ((_entity$attributes$su = entity.attributes.supported_color_modes) === null || _entity$attributes$su === void 0 ? void 0 : _entity$attributes$su.includes(mode)) || false;\n};\nexport var lightIsInColorMode = function lightIsInColorMode(entity) {\n  return entity.attributes.color_mode && modesSupportingColor.includes(entity.attributes.color_mode) || false;\n};\nexport var lightSupportsColor = function lightSupportsColor(entity) {\n  var _entity$attributes$su2;\n  return ((_entity$attributes$su2 = entity.attributes.supported_color_modes) === null || _entity$attributes$su2 === void 0 ? void 0 : _entity$attributes$su2.some(function (mode) {\n    return modesSupportingColor.includes(mode);\n  })) || false;\n};\nexport var lightSupportsBrightness = function lightSupportsBrightness(entity) {\n  var _entity$attributes$su3;\n  return ((_entity$attributes$su3 = entity.attributes.supported_color_modes) === null || _entity$attributes$su3 === void 0 ? void 0 : _entity$attributes$su3.some(function (mode) {\n    return modesSupportingBrightness.includes(mode);\n  })) || false;\n};\nexport var lightSupportsFavoriteColors = function lightSupportsFavoriteColors(entity) {\n  return lightSupportsColor(entity) || lightSupportsColorMode(entity, LightColorMode.COLOR_TEMP);\n};\nexport var getLightCurrentModeRgbColor = function getLightCurrentModeRgbColor(entity) {\n  return entity.attributes.color_mode === LightColorMode.RGBWW ? entity.attributes.rgbww_color : entity.attributes.color_mode === LightColorMode.RGBW ? entity.attributes.rgbw_color : entity.attributes.rgb_color;\n};\nvar COLOR_TEMP_COUNT = 4;\nvar DEFAULT_COLORED_COLORS = [{\n  rgb_color: [127, 172, 255]\n},\n// blue #7FACFF\n{\n  rgb_color: [215, 150, 255]\n},\n// purple #D796FF\n{\n  rgb_color: [255, 158, 243]\n},\n// pink #FF9EF3\n{\n  rgb_color: [255, 110, 84]\n} // red #FF6E54\n];\nexport var computeDefaultFavoriteColors = function computeDefaultFavoriteColors(stateObj) {\n  var colors = [];\n  var supportsColorTemp = lightSupportsColorMode(stateObj, LightColorMode.COLOR_TEMP);\n  var supportsColor = lightSupportsColor(stateObj);\n  if (supportsColorTemp) {\n    var min = stateObj.attributes.min_color_temp_kelvin;\n    var max = stateObj.attributes.max_color_temp_kelvin;\n    var step = (max - min) / (COLOR_TEMP_COUNT - 1);\n    for (var i = 0; i < COLOR_TEMP_COUNT; i++) {\n      colors.push({\n        color_temp_kelvin: Math.round(min + step * i)\n      });\n    }\n  } else if (supportsColor) {\n    var _min = 2000;\n    var _max = 6500;\n    var _step = (_max - _min) / (COLOR_TEMP_COUNT - 1);\n    for (var _i = 0; _i < COLOR_TEMP_COUNT; _i++) {\n      colors.push({\n        rgb_color: temperature2rgb(Math.round(_min + _step * _i))\n      });\n    }\n  }\n  if (supportsColor) {\n    colors.push.apply(colors, DEFAULT_COLORED_COLORS);\n  }\n  return colors;\n};\nexport var formatTempColor = function formatTempColor(value) {\n  return \"\".concat(value, \" K\");\n};","map":{"version":3,"names":["temperature2rgb","LightEntityFeature","LightColorMode","modesSupportingColor","HS","XY","RGB","RGBW","RGBWW","modesSupportingBrightness","concat","COLOR_TEMP","BRIGHTNESS","WHITE","lightSupportsColorMode","entity","mode","_entity$attributes$su","attributes","supported_color_modes","includes","lightIsInColorMode","color_mode","lightSupportsColor","_entity$attributes$su2","some","lightSupportsBrightness","_entity$attributes$su3","lightSupportsFavoriteColors","getLightCurrentModeRgbColor","rgbww_color","rgbw_color","rgb_color","COLOR_TEMP_COUNT","DEFAULT_COLORED_COLORS","computeDefaultFavoriteColors","stateObj","colors","supportsColorTemp","supportsColor","min","min_color_temp_kelvin","max","max_color_temp_kelvin","step","i","push","color_temp_kelvin","Math","round","apply","formatTempColor","value"],"sources":["/Users/sercanardil/Desktop/frontend/src/data/light.ts"],"sourcesContent":["import {\n  HassEntityAttributeBase,\n  HassEntityBase,\n} from \"home-assistant-js-websocket\";\nimport { temperature2rgb } from \"../common/color/convert-light-color\";\n\nexport const enum LightEntityFeature {\n  EFFECT = 4,\n  FLASH = 8,\n  TRANSITION = 32,\n}\n\nexport const enum LightColorMode {\n  UNKNOWN = \"unknown\",\n  ONOFF = \"onoff\",\n  BRIGHTNESS = \"brightness\",\n  COLOR_TEMP = \"color_temp\",\n  HS = \"hs\",\n  XY = \"xy\",\n  RGB = \"rgb\",\n  RGBW = \"rgbw\",\n  RGBWW = \"rgbww\",\n  WHITE = \"white\",\n}\n\nconst modesSupportingColor = [\n  LightColorMode.HS,\n  LightColorMode.XY,\n  LightColorMode.RGB,\n  LightColorMode.RGBW,\n  LightColorMode.RGBWW,\n];\n\nconst modesSupportingBrightness = [\n  ...modesSupportingColor,\n  LightColorMode.COLOR_TEMP,\n  LightColorMode.BRIGHTNESS,\n  LightColorMode.WHITE,\n];\n\nexport const lightSupportsColorMode = (\n  entity: LightEntity,\n  mode: LightColorMode\n) => entity.attributes.supported_color_modes?.includes(mode) || false;\n\nexport const lightIsInColorMode = (entity: LightEntity) =>\n  (entity.attributes.color_mode &&\n    modesSupportingColor.includes(entity.attributes.color_mode)) ||\n  false;\n\nexport const lightSupportsColor = (entity: LightEntity) =>\n  entity.attributes.supported_color_modes?.some((mode) =>\n    modesSupportingColor.includes(mode)\n  ) || false;\n\nexport const lightSupportsBrightness = (entity: LightEntity) =>\n  entity.attributes.supported_color_modes?.some((mode) =>\n    modesSupportingBrightness.includes(mode)\n  ) || false;\n\nexport const lightSupportsFavoriteColors = (entity: LightEntity) =>\n  lightSupportsColor(entity) ||\n  lightSupportsColorMode(entity, LightColorMode.COLOR_TEMP);\n\nexport const getLightCurrentModeRgbColor = (\n  entity: LightEntity\n): number[] | undefined =>\n  entity.attributes.color_mode === LightColorMode.RGBWW\n    ? entity.attributes.rgbww_color\n    : entity.attributes.color_mode === LightColorMode.RGBW\n      ? entity.attributes.rgbw_color\n      : entity.attributes.rgb_color;\n\ninterface LightEntityAttributes extends HassEntityAttributeBase {\n  min_color_temp_kelvin?: number;\n  max_color_temp_kelvin?: number;\n  min_mireds?: number;\n  max_mireds?: number;\n  brightness?: number;\n  xy_color?: [number, number];\n  hs_color?: [number, number];\n  color_temp?: number;\n  color_temp_kelvin?: number;\n  rgb_color?: [number, number, number];\n  rgbw_color?: [number, number, number, number];\n  rgbww_color?: [number, number, number, number, number];\n  effect?: string;\n  effect_list?: string[] | null;\n  supported_color_modes?: LightColorMode[];\n  color_mode?: LightColorMode;\n}\n\nexport interface LightEntity extends HassEntityBase {\n  attributes: LightEntityAttributes;\n}\n\nexport type LightColor =\n  | {\n      color_temp_kelvin: number;\n    }\n  | {\n      hs_color: [number, number];\n    }\n  | {\n      rgb_color: [number, number, number];\n    }\n  | {\n      rgbw_color: [number, number, number, number];\n    }\n  | {\n      rgbww_color: [number, number, number, number, number];\n    };\n\nconst COLOR_TEMP_COUNT = 4;\nconst DEFAULT_COLORED_COLORS = [\n  { rgb_color: [127, 172, 255] }, // blue #7FACFF\n  { rgb_color: [215, 150, 255] }, // purple #D796FF\n  { rgb_color: [255, 158, 243] }, // pink #FF9EF3\n  { rgb_color: [255, 110, 84] }, // red #FF6E54\n] as LightColor[];\n\nexport const computeDefaultFavoriteColors = (\n  stateObj: LightEntity\n): LightColor[] => {\n  const colors: LightColor[] = [];\n\n  const supportsColorTemp = lightSupportsColorMode(\n    stateObj,\n    LightColorMode.COLOR_TEMP\n  );\n\n  const supportsColor = lightSupportsColor(stateObj);\n\n  if (supportsColorTemp) {\n    const min = stateObj.attributes.min_color_temp_kelvin!;\n    const max = stateObj.attributes.max_color_temp_kelvin!;\n    const step = (max - min) / (COLOR_TEMP_COUNT - 1);\n\n    for (let i = 0; i < COLOR_TEMP_COUNT; i++) {\n      colors.push({\n        color_temp_kelvin: Math.round(min + step * i),\n      });\n    }\n  } else if (supportsColor) {\n    const min = 2000;\n    const max = 6500;\n    const step = (max - min) / (COLOR_TEMP_COUNT - 1);\n\n    for (let i = 0; i < COLOR_TEMP_COUNT; i++) {\n      colors.push({\n        rgb_color: temperature2rgb(Math.round(min + step * i)),\n      });\n    }\n  }\n\n  if (supportsColor) {\n    colors.push(...DEFAULT_COLORED_COLORS);\n  }\n\n  return colors;\n};\n\nexport const formatTempColor = (value: number) => `${value} K`;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}