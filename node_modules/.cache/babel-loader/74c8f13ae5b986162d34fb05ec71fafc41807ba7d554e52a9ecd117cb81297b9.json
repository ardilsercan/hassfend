{"ast":null,"code":"import { storeState } from \"../util/ha-pref-storage\";\nconst hapticPatterns = {\n  success: [50, 50, 50],\n  warning: [100, 50, 100],\n  failure: [200, 100, 200],\n  light: [50],\n  medium: [100],\n  heavy: [200],\n  selection: [20]\n};\nconst handleHaptic = hapticTypeEvent => {\n  navigator.vibrate(hapticPatterns[hapticTypeEvent.detail]);\n};\nexport const hapticMixin = superClass => class extends superClass {\n  firstUpdated(changedProps) {\n    super.firstUpdated(changedProps);\n    this.addEventListener(\"hass-vibrate\", ev => {\n      const vibrate = ev.detail.vibrate;\n      // @ts-expect-error not all browsers support vibrate\n      if (navigator.vibrate && vibrate) {\n        window.addEventListener(\"haptic\", handleHaptic);\n      } else {\n        window.removeEventListener(\"haptic\", handleHaptic);\n      }\n      this._updateHass({\n        vibrate\n      });\n      storeState(this.hass);\n    });\n  }\n  hassConnected() {\n    super.hassConnected();\n    // @ts-expect-error not all browsers support vibrate\n    if (navigator.vibrate && this.hass.vibrate) {\n      window.addEventListener(\"haptic\", handleHaptic);\n    }\n  }\n};","map":{"version":3,"names":["storeState","hapticPatterns","success","warning","failure","light","medium","heavy","selection","handleHaptic","hapticTypeEvent","navigator","vibrate","detail","hapticMixin","superClass","firstUpdated","changedProps","addEventListener","ev","window","removeEventListener","_updateHass","hass","hassConnected"],"sources":["/workspaces/frontend/src/state/haptic-mixin.ts"],"sourcesContent":["import { PropertyValues } from \"lit\";\nimport { HASSDomEvent } from \"../common/dom/fire_event\";\nimport { HapticType } from \"../data/haptics\";\nimport { Constructor, HomeAssistant } from \"../types\";\nimport { storeState } from \"../util/ha-pref-storage\";\nimport { HassBaseEl } from \"./hass-base-mixin\";\n\ninterface VibrateParams {\n  vibrate: HomeAssistant[\"vibrate\"];\n}\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    \"hass-vibrate\": VibrateParams;\n  }\n  // for add event listener\n  interface HTMLElementEventMap {\n    \"hass-vibrate\": HASSDomEvent<VibrateParams>;\n  }\n}\n\nconst hapticPatterns = {\n  success: [50, 50, 50],\n  warning: [100, 50, 100],\n  failure: [200, 100, 200],\n  light: [50],\n  medium: [100],\n  heavy: [200],\n  selection: [20],\n};\n\nconst handleHaptic = (hapticTypeEvent: HASSDomEvent<HapticType>) => {\n  navigator.vibrate(hapticPatterns[hapticTypeEvent.detail]);\n};\n\nexport const hapticMixin = <T extends Constructor<HassBaseEl>>(superClass: T) =>\n  class extends superClass {\n    protected firstUpdated(changedProps: PropertyValues) {\n      super.firstUpdated(changedProps);\n      this.addEventListener(\"hass-vibrate\", (ev) => {\n        const vibrate = ev.detail.vibrate;\n        // @ts-expect-error not all browsers support vibrate\n        if (navigator.vibrate && vibrate) {\n          window.addEventListener(\"haptic\", handleHaptic);\n        } else {\n          window.removeEventListener(\"haptic\", handleHaptic);\n        }\n        this._updateHass({ vibrate });\n        storeState(this.hass!);\n      });\n    }\n\n    protected hassConnected() {\n      super.hassConnected();\n      // @ts-expect-error not all browsers support vibrate\n      if (navigator.vibrate && this.hass!.vibrate) {\n        window.addEventListener(\"haptic\", handleHaptic);\n      }\n    }\n  };\n"],"mappings":"AAIA,SAASA,UAAU,QAAQ,yBAAyB;AAkBpD,MAAMC,cAAc,GAAG;EACrBC,OAAO,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;EACrBC,OAAO,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC;EACvBC,OAAO,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACxBC,KAAK,EAAE,CAAC,EAAE,CAAC;EACXC,MAAM,EAAE,CAAC,GAAG,CAAC;EACbC,KAAK,EAAE,CAAC,GAAG,CAAC;EACZC,SAAS,EAAE,CAAC,EAAE;AAChB,CAAC;AAED,MAAMC,YAAY,GAAIC,eAAyC,IAAK;EAClEC,SAAS,CAACC,OAAO,CAACX,cAAc,CAACS,eAAe,CAACG,MAAM,CAAC,CAAC;AAC3D,CAAC;AAED,OAAO,MAAMC,WAAW,GAAuCC,UAAa,IAC1E,cAAcA,UAAU,CAAC;EACbC,YAAYA,CAACC,YAA4B,EAAE;IACnD,KAAK,CAACD,YAAY,CAACC,YAAY,CAAC;IAChC,IAAI,CAACC,gBAAgB,CAAC,cAAc,EAAGC,EAAE,IAAK;MAC5C,MAAMP,OAAO,GAAGO,EAAE,CAACN,MAAM,CAACD,OAAO;MACjC;MACA,IAAID,SAAS,CAACC,OAAO,IAAIA,OAAO,EAAE;QAChCQ,MAAM,CAACF,gBAAgB,CAAC,QAAQ,EAAET,YAAY,CAAC;MACjD,CAAC,MAAM;QACLW,MAAM,CAACC,mBAAmB,CAAC,QAAQ,EAAEZ,YAAY,CAAC;MACpD;MACA,IAAI,CAACa,WAAW,CAAC;QAAEV;MAAQ,CAAC,CAAC;MAC7BZ,UAAU,CAAC,IAAI,CAACuB,IAAK,CAAC;IACxB,CAAC,CAAC;EACJ;EAEUC,aAAaA,CAAA,EAAG;IACxB,KAAK,CAACA,aAAa,CAAC,CAAC;IACrB;IACA,IAAIb,SAAS,CAACC,OAAO,IAAI,IAAI,CAACW,IAAI,CAAEX,OAAO,EAAE;MAC3CQ,MAAM,CAACF,gBAAgB,CAAC,QAAQ,EAAET,YAAY,CAAC;IACjD;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}