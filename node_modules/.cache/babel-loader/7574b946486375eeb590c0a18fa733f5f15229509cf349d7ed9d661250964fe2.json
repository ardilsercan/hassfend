{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nconst mdiCog = \"M12,15.5A3.5,3.5 0 0,1 8.5,12A3.5,3.5 0 0,1 12,8.5A3.5,3.5 0 0,1 15.5,12A3.5,3.5 0 0,1 12,15.5M19.43,12.97C19.47,12.65 19.5,12.33 19.5,12C19.5,11.67 19.47,11.34 19.43,11L21.54,9.37C21.73,9.22 21.78,8.95 21.66,8.73L19.66,5.27C19.54,5.05 19.27,4.96 19.05,5.05L16.56,6.05C16.04,5.66 15.5,5.32 14.87,5.07L14.5,2.42C14.46,2.18 14.25,2 14,2H10C9.75,2 9.54,2.18 9.5,2.42L9.13,5.07C8.5,5.32 7.96,5.66 7.44,6.05L4.95,5.05C4.73,4.96 4.46,5.05 4.34,5.27L2.34,8.73C2.21,8.95 2.27,9.22 2.46,9.37L4.57,11C4.53,11.34 4.5,11.67 4.5,12C4.5,12.33 4.53,12.65 4.57,12.97L2.46,14.63C2.27,14.78 2.21,15.05 2.34,15.27L4.34,18.73C4.46,18.95 4.73,19.03 4.95,18.95L7.44,17.94C7.96,18.34 8.5,18.68 9.13,18.93L9.5,21.58C9.54,21.82 9.75,22 10,22H14C14.25,22 14.46,21.82 14.5,21.58L14.87,18.93C15.5,18.67 16.04,18.34 16.56,17.94L19.05,18.95C19.27,19.03 19.54,18.95 19.66,18.73L21.66,15.27C21.78,15.05 21.73,14.78 21.54,14.63L19.43,12.97Z\";\nconst mdiContentDuplicate = \"M11,17H4A2,2 0 0,1 2,15V3A2,2 0 0,1 4,1H16V3H4V15H11V13L15,16L11,19V17M19,21V7H8V13H6V7A2,2 0 0,1 8,5H19A2,2 0 0,1 21,7V21A2,2 0 0,1 19,23H8A2,2 0 0,1 6,21V19H8V21H19Z\";\nconst mdiHelpCircle = \"M15.07,11.25L14.17,12.17C13.45,12.89 13,13.5 13,15H11V14.5C11,13.39 11.45,12.39 12.17,11.67L13.41,10.41C13.78,10.05 14,9.55 14,9C14,7.89 13.1,7 12,7A2,2 0 0,0 10,9H8A4,4 0 0,1 12,5A4,4 0 0,1 16,9C16,9.88 15.64,10.67 15.07,11.25M13,19H11V17H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12C22,6.47 17.5,2 12,2Z\";\nconst mdiPlus = \"M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z\";\nconst mdiRobot = \"M12,2A2,2 0 0,1 14,4C14,4.74 13.6,5.39 13,5.73V7H14A7,7 0 0,1 21,14H22A1,1 0 0,1 23,15V18A1,1 0 0,1 22,19H21V20A2,2 0 0,1 19,22H5A2,2 0 0,1 3,20V19H2A1,1 0 0,1 1,18V15A1,1 0 0,1 2,14H3A7,7 0 0,1 10,7H11V5.73C10.4,5.39 10,4.74 10,4A2,2 0 0,1 12,2M7.5,13A2.5,2.5 0 0,0 5,15.5A2.5,2.5 0 0,0 7.5,18A2.5,2.5 0 0,0 10,15.5A2.5,2.5 0 0,0 7.5,13M16.5,13A2.5,2.5 0 0,0 14,15.5A2.5,2.5 0 0,0 16.5,18A2.5,2.5 0 0,0 19,15.5A2.5,2.5 0 0,0 16.5,13Z\";\nimport { html, LitElement } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport \"../../../components/ha-fab\";\nimport \"../../../components/ha-icon-button\";\nimport \"../../../components/ha-relative-time\";\nimport { showAutomationEditor } from \"../../../data/automation\";\nimport { createTag, deleteTag, EVENT_TAG_SCANNED, fetchTags, updateTag } from \"../../../data/tag\";\nimport { showAlertDialog, showConfirmationDialog } from \"../../../dialogs/generic/show-dialog-box\";\nimport \"../../../layouts/hass-tabs-subpage-data-table\";\nimport { SubscribeMixin } from \"../../../mixins/subscribe-mixin\";\nimport { documentationUrl } from \"../../../util/documentation-url\";\nimport { configSections } from \"../ha-panel-config\";\nimport { showTagDetailDialog } from \"./show-dialog-tag-detail\";\nimport \"./tag-image\";\nexport let HaConfigTags = _decorate([customElement(\"ha-config-tags\")], function (_initialize, _SubscribeMixin) {\n  class HaConfigTags extends _SubscribeMixin {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaConfigTags,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"isWide\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"narrow\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"route\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_tags\",\n      value() {\n        return [];\n      }\n    }, {\n      kind: \"get\",\n      key: \"_canWriteTags\",\n      value: function _canWriteTags() {\n        var _this$hass$auth$exter;\n        return (_this$hass$auth$exter = this.hass.auth.external) === null || _this$hass$auth$exter === void 0 ? void 0 : _this$hass$auth$exter.config.canWriteTag;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_columns\",\n      value() {\n        return memoizeOne((narrow, _language) => {\n          const columns = {\n            icon: {\n              title: \"\",\n              label: this.hass.localize(\"ui.panel.config.tag.headers.icon\"),\n              type: \"icon\",\n              template: tag => html`<tag-image .tag=${tag}></tag-image>`\n            },\n            display_name: {\n              title: this.hass.localize(\"ui.panel.config.tag.headers.name\"),\n              main: true,\n              sortable: true,\n              filterable: true,\n              grows: true,\n              template: tag => html`${tag.name}\n          ${narrow ? html`<div class=\"secondary\">\n                ${tag.last_scanned_datetime ? html`<ha-relative-time\n                      .hass=${this.hass}\n                      .datetime=${tag.last_scanned_datetime}\n                      capitalize\n                    ></ha-relative-time>` : this.hass.localize(\"ui.panel.config.tag.never_scanned\")}\n              </div>` : \"\"}`\n            }\n          };\n          if (!narrow) {\n            columns.last_scanned_datetime = {\n              title: this.hass.localize(\"ui.panel.config.tag.headers.last_scanned\"),\n              sortable: true,\n              direction: \"desc\",\n              width: \"20%\",\n              template: tag => html`\n          ${tag.last_scanned_datetime ? html`<ha-relative-time\n                .hass=${this.hass}\n                .datetime=${tag.last_scanned_datetime}\n                capitalize\n              ></ha-relative-time>` : this.hass.localize(\"ui.panel.config.tag.never_scanned\")}\n        `\n            };\n          }\n          if (this._canWriteTags) {\n            columns.write = {\n              title: \"\",\n              label: this.hass.localize(\"ui.panel.config.tag.headers.write\"),\n              type: \"icon-button\",\n              template: tag => html` <ha-icon-button\n            .tag=${tag}\n            @click=${this._handleWriteClick}\n            .label=${this.hass.localize(\"ui.panel.config.tag.write\")}\n            .path=${mdiContentDuplicate}\n          ></ha-icon-button>`\n            };\n          }\n          columns.automation = {\n            title: \"\",\n            type: \"icon-button\",\n            template: tag => html` <ha-icon-button\n          .tag=${tag}\n          @click=${this._handleAutomationClick}\n          .label=${this.hass.localize(\"ui.panel.config.tag.create_automation\")}\n          .path=${mdiRobot}\n        ></ha-icon-button>`\n          };\n          columns.edit = {\n            title: \"\",\n            type: \"icon-button\",\n            template: tag => html` <ha-icon-button\n          .tag=${tag}\n          @click=${this._handleEditClick}\n          .label=${this.hass.localize(\"ui.panel.config.tag.edit\")}\n          .path=${mdiCog}\n        ></ha-icon-button>`\n          };\n          return columns;\n        });\n      }\n    }, {\n      kind: \"field\",\n      key: \"_data\",\n      value() {\n        return memoizeOne(tags => tags.map(tag => ({\n          ...tag,\n          display_name: tag.name || tag.id,\n          last_scanned_datetime: tag.last_scanned ? new Date(tag.last_scanned) : null\n        })));\n      }\n    }, {\n      kind: \"method\",\n      key: \"firstUpdated\",\n      value: function firstUpdated(changedProperties) {\n        _get(_getPrototypeOf(HaConfigTags.prototype), \"firstUpdated\", this).call(this, changedProperties);\n        this._fetchTags();\n      }\n    }, {\n      kind: \"method\",\n      key: \"hassSubscribe\",\n      value: function hassSubscribe() {\n        return [this.hass.connection.subscribeEvents(ev => {\n          const foundTag = this._tags.find(tag => tag.id === ev.data.tag_id);\n          if (!foundTag) {\n            this._fetchTags();\n            return;\n          }\n          foundTag.last_scanned = ev.time_fired;\n          this._tags = [...this._tags];\n        }, EVENT_TAG_SCANNED)];\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        return html`\n      <hass-tabs-subpage-data-table\n        .hass=${this.hass}\n        .narrow=${this.narrow}\n        back-path=\"/config\"\n        .route=${this.route}\n        .tabs=${configSections.tags}\n        .columns=${this._columns(this.narrow, this.hass.language)}\n        .data=${this._data(this._tags)}\n        .noDataText=${this.hass.localize(\"ui.panel.config.tag.no_tags\")}\n        hasFab\n      >\n        <ha-icon-button\n          slot=\"toolbar-icon\"\n          @click=${this._showHelp}\n          .label=${this.hass.localize(\"ui.common.help\")}\n          .path=${mdiHelpCircle}\n        ></ha-icon-button>\n        <ha-fab\n          slot=\"fab\"\n          .label=${this.hass.localize(\"ui.panel.config.tag.add_tag\")}\n          extended\n          @click=${this._addTag}\n        >\n          <ha-svg-icon slot=\"icon\" .path=${mdiPlus}></ha-svg-icon>\n        </ha-fab>\n      </hass-tabs-subpage-data-table>\n    `;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_handleWriteClick\",\n      value() {\n        return ev => this._openWrite(ev.currentTarget.tag);\n      }\n    }, {\n      kind: \"field\",\n      key: \"_handleAutomationClick\",\n      value() {\n        return ev => {\n          const tag = ev.currentTarget.tag;\n          const data = {\n            alias: this.hass.localize(\"ui.panel.config.tag.automation_title\", {\n              name: tag.name || tag.id\n            }),\n            trigger: [{\n              platform: \"tag\",\n              tag_id: tag.id\n            }]\n          };\n          showAutomationEditor(data);\n        };\n      }\n    }, {\n      kind: \"field\",\n      key: \"_handleEditClick\",\n      value() {\n        return ev => this._openDialog(ev.currentTarget.tag);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_showHelp\",\n      value: function _showHelp() {\n        showAlertDialog(this, {\n          title: this.hass.localize(\"ui.panel.config.tag.caption\"),\n          text: html`\n        <p>\n          ${this.hass.localize(\"ui.panel.config.tag.detail.usage\", {\n            companion_link: html`<a\n              href=\"https://companion.home-assistant.io/\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              >${this.hass.localize(\"ui.panel.config.tag.detail.companion_apps\")}</a\n            >`\n          })}\n        </p>\n        <p>\n          <a\n            href=${documentationUrl(this.hass, \"/integrations/tag/\")}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            ${this.hass.localize(\"ui.panel.config.tag.learn_more\")}\n          </a>\n        </p>\n      `\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_fetchTags\",\n      value: async function _fetchTags() {\n        this._tags = await fetchTags(this.hass);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_openWrite\",\n      value: function _openWrite(tag) {\n        this.hass.auth.external.fireMessage({\n          type: \"tag/write\",\n          payload: {\n            name: tag.name || null,\n            tag: tag.id\n          }\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_addTag\",\n      value: function _addTag() {\n        this._openDialog();\n      }\n    }, {\n      kind: \"method\",\n      key: \"_openDialog\",\n      value: function _openDialog(entry) {\n        showTagDetailDialog(this, {\n          entry,\n          openWrite: this._canWriteTags ? tag => this._openWrite(tag) : undefined,\n          createEntry: (values, tagId) => this._createTag(values, tagId),\n          updateEntry: entry ? values => this._updateTag(entry, values) : undefined,\n          removeEntry: entry ? () => this._removeTag(entry) : undefined\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_createTag\",\n      value: async function _createTag(values, tagId) {\n        const newTag = await createTag(this.hass, values, tagId);\n        this._tags = [...this._tags, newTag];\n        return newTag;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_updateTag\",\n      value: async function _updateTag(selectedTag, values) {\n        const updated = await updateTag(this.hass, selectedTag.id, values);\n        this._tags = this._tags.map(tag => tag.id === selectedTag.id ? updated : tag);\n        return updated;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_removeTag\",\n      value: async function _removeTag(selectedTag) {\n        if (!(await showConfirmationDialog(this, {\n          title: this.hass.localize(\"ui.panel.config.tag.confirm_remove_title\"),\n          text: this.hass.localize(\"ui.panel.config.tag.confirm_remove\", {\n            tag: selectedTag.name || selectedTag.id\n          }),\n          dismissText: this.hass.localize(\"ui.common.cancel\"),\n          confirmText: this.hass.localize(\"ui.common.remove\")\n        }))) {\n          return false;\n        }\n        try {\n          await deleteTag(this.hass, selectedTag.id);\n          this._tags = this._tags.filter(tag => tag.id !== selectedTag.id);\n          return true;\n        } catch (err) {\n          return false;\n        }\n      }\n    }]\n  };\n}, SubscribeMixin(LitElement));","map":{"version":3,"names":["html","LitElement","customElement","property","state","memoizeOne","showAutomationEditor","createTag","deleteTag","EVENT_TAG_SCANNED","fetchTags","updateTag","showAlertDialog","showConfirmationDialog","SubscribeMixin","documentationUrl","configSections","showTagDetailDialog","HaConfigTags","_decorate","_initialize","_SubscribeMixin","constructor","args","F","d","kind","decorators","attribute","key","value","type","Boolean","_canWriteTags","_this$hass$auth$exter","hass","auth","external","config","canWriteTag","narrow","_language","columns","icon","title","label","localize","template","tag","display_name","main","sortable","filterable","grows","name","last_scanned_datetime","direction","width","write","_handleWriteClick","mdiContentDuplicate","automation","_handleAutomationClick","mdiRobot","edit","_handleEditClick","mdiCog","tags","map","id","last_scanned","Date","firstUpdated","changedProperties","_get","_getPrototypeOf","prototype","call","_fetchTags","hassSubscribe","connection","subscribeEvents","ev","foundTag","_tags","find","data","tag_id","time_fired","render","route","_columns","language","_data","_showHelp","mdiHelpCircle","_addTag","mdiPlus","_openWrite","currentTarget","alias","trigger","platform","_openDialog","text","companion_link","fireMessage","payload","entry","openWrite","undefined","createEntry","values","tagId","_createTag","updateEntry","_updateTag","removeEntry","_removeTag","newTag","selectedTag","updated","dismissText","confirmText","filter","err"],"sources":["/workspaces/frontend/src/panels/config/tags/ha-config-tags.ts"],"sourcesContent":["import {\n  mdiCog,\n  mdiContentDuplicate,\n  mdiHelpCircle,\n  mdiPlus,\n  mdiRobot,\n} from \"@mdi/js\";\nimport { html, LitElement, PropertyValues } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { DataTableColumnContainer } from \"../../../components/data-table/ha-data-table\";\nimport \"../../../components/ha-fab\";\nimport \"../../../components/ha-icon-button\";\nimport \"../../../components/ha-relative-time\";\nimport { showAutomationEditor, TagTrigger } from \"../../../data/automation\";\nimport {\n  createTag,\n  deleteTag,\n  EVENT_TAG_SCANNED,\n  fetchTags,\n  Tag,\n  TagScannedEvent,\n  updateTag,\n  UpdateTagParams,\n} from \"../../../data/tag\";\nimport {\n  showAlertDialog,\n  showConfirmationDialog,\n} from \"../../../dialogs/generic/show-dialog-box\";\nimport \"../../../layouts/hass-tabs-subpage-data-table\";\nimport { SubscribeMixin } from \"../../../mixins/subscribe-mixin\";\nimport { HomeAssistant, Route } from \"../../../types\";\nimport { documentationUrl } from \"../../../util/documentation-url\";\nimport { configSections } from \"../ha-panel-config\";\nimport { showTagDetailDialog } from \"./show-dialog-tag-detail\";\nimport \"./tag-image\";\n\nexport interface TagRowData extends Tag {\n  display_name: string;\n  last_scanned_datetime: Date | null;\n}\n\n@customElement(\"ha-config-tags\")\nexport class HaConfigTags extends SubscribeMixin(LitElement) {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ type: Boolean }) public isWide = false;\n\n  @property({ type: Boolean }) public narrow = false;\n\n  @property({ attribute: false }) public route!: Route;\n\n  @state() private _tags: Tag[] = [];\n\n  private get _canWriteTags() {\n    return this.hass.auth.external?.config.canWriteTag;\n  }\n\n  private _columns = memoizeOne((narrow: boolean, _language) => {\n    const columns: DataTableColumnContainer<TagRowData> = {\n      icon: {\n        title: \"\",\n        label: this.hass.localize(\"ui.panel.config.tag.headers.icon\"),\n        type: \"icon\",\n        template: (tag) => html`<tag-image .tag=${tag}></tag-image>`,\n      },\n      display_name: {\n        title: this.hass.localize(\"ui.panel.config.tag.headers.name\"),\n        main: true,\n        sortable: true,\n        filterable: true,\n        grows: true,\n        template: (tag) =>\n          html`${tag.name}\n          ${narrow\n            ? html`<div class=\"secondary\">\n                ${tag.last_scanned_datetime\n                  ? html`<ha-relative-time\n                      .hass=${this.hass}\n                      .datetime=${tag.last_scanned_datetime}\n                      capitalize\n                    ></ha-relative-time>`\n                  : this.hass.localize(\"ui.panel.config.tag.never_scanned\")}\n              </div>`\n            : \"\"}`,\n      },\n    };\n    if (!narrow) {\n      columns.last_scanned_datetime = {\n        title: this.hass.localize(\"ui.panel.config.tag.headers.last_scanned\"),\n        sortable: true,\n        direction: \"desc\",\n        width: \"20%\",\n        template: (tag) => html`\n          ${tag.last_scanned_datetime\n            ? html`<ha-relative-time\n                .hass=${this.hass}\n                .datetime=${tag.last_scanned_datetime}\n                capitalize\n              ></ha-relative-time>`\n            : this.hass.localize(\"ui.panel.config.tag.never_scanned\")}\n        `,\n      };\n    }\n    if (this._canWriteTags) {\n      columns.write = {\n        title: \"\",\n        label: this.hass.localize(\"ui.panel.config.tag.headers.write\"),\n        type: \"icon-button\",\n        template: (tag) =>\n          html` <ha-icon-button\n            .tag=${tag}\n            @click=${this._handleWriteClick}\n            .label=${this.hass.localize(\"ui.panel.config.tag.write\")}\n            .path=${mdiContentDuplicate}\n          ></ha-icon-button>`,\n      };\n    }\n    columns.automation = {\n      title: \"\",\n      type: \"icon-button\",\n      template: (tag) =>\n        html` <ha-icon-button\n          .tag=${tag}\n          @click=${this._handleAutomationClick}\n          .label=${this.hass.localize(\"ui.panel.config.tag.create_automation\")}\n          .path=${mdiRobot}\n        ></ha-icon-button>`,\n    };\n    columns.edit = {\n      title: \"\",\n      type: \"icon-button\",\n      template: (tag) =>\n        html` <ha-icon-button\n          .tag=${tag}\n          @click=${this._handleEditClick}\n          .label=${this.hass.localize(\"ui.panel.config.tag.edit\")}\n          .path=${mdiCog}\n        ></ha-icon-button>`,\n    };\n    return columns;\n  });\n\n  private _data = memoizeOne((tags: Tag[]): TagRowData[] =>\n    tags.map((tag) => ({\n      ...tag,\n      display_name: tag.name || tag.id,\n      last_scanned_datetime: tag.last_scanned\n        ? new Date(tag.last_scanned)\n        : null,\n    }))\n  );\n\n  protected firstUpdated(changedProperties: PropertyValues) {\n    super.firstUpdated(changedProperties);\n    this._fetchTags();\n  }\n\n  protected hassSubscribe() {\n    return [\n      this.hass.connection.subscribeEvents<TagScannedEvent>((ev) => {\n        const foundTag = this._tags.find((tag) => tag.id === ev.data.tag_id);\n        if (!foundTag) {\n          this._fetchTags();\n          return;\n        }\n        foundTag.last_scanned = ev.time_fired;\n        this._tags = [...this._tags];\n      }, EVENT_TAG_SCANNED),\n    ];\n  }\n\n  protected render() {\n    return html`\n      <hass-tabs-subpage-data-table\n        .hass=${this.hass}\n        .narrow=${this.narrow}\n        back-path=\"/config\"\n        .route=${this.route}\n        .tabs=${configSections.tags}\n        .columns=${this._columns(this.narrow, this.hass.language)}\n        .data=${this._data(this._tags)}\n        .noDataText=${this.hass.localize(\"ui.panel.config.tag.no_tags\")}\n        hasFab\n      >\n        <ha-icon-button\n          slot=\"toolbar-icon\"\n          @click=${this._showHelp}\n          .label=${this.hass.localize(\"ui.common.help\")}\n          .path=${mdiHelpCircle}\n        ></ha-icon-button>\n        <ha-fab\n          slot=\"fab\"\n          .label=${this.hass.localize(\"ui.panel.config.tag.add_tag\")}\n          extended\n          @click=${this._addTag}\n        >\n          <ha-svg-icon slot=\"icon\" .path=${mdiPlus}></ha-svg-icon>\n        </ha-fab>\n      </hass-tabs-subpage-data-table>\n    `;\n  }\n\n  private _handleWriteClick = (ev: Event) =>\n    this._openWrite((ev.currentTarget as any).tag);\n\n  private _handleAutomationClick = (ev: Event) => {\n    const tag = (ev.currentTarget as any).tag;\n    const data = {\n      alias: this.hass.localize(\"ui.panel.config.tag.automation_title\", {\n        name: tag.name || tag.id,\n      }),\n      trigger: [{ platform: \"tag\", tag_id: tag.id } as TagTrigger],\n    };\n    showAutomationEditor(data);\n  };\n\n  private _handleEditClick = (ev: Event) =>\n    this._openDialog((ev.currentTarget as any).tag);\n\n  private _showHelp() {\n    showAlertDialog(this, {\n      title: this.hass.localize(\"ui.panel.config.tag.caption\"),\n      text: html`\n        <p>\n          ${this.hass.localize(\"ui.panel.config.tag.detail.usage\", {\n            companion_link: html`<a\n              href=\"https://companion.home-assistant.io/\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              >${this.hass!.localize(\n                \"ui.panel.config.tag.detail.companion_apps\"\n              )}</a\n            >`,\n          })}\n        </p>\n        <p>\n          <a\n            href=${documentationUrl(this.hass, \"/integrations/tag/\")}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            ${this.hass.localize(\"ui.panel.config.tag.learn_more\")}\n          </a>\n        </p>\n      `,\n    });\n  }\n\n  private async _fetchTags() {\n    this._tags = await fetchTags(this.hass);\n  }\n\n  private _openWrite(tag: Tag) {\n    this.hass.auth.external!.fireMessage({\n      type: \"tag/write\",\n      payload: { name: tag.name || null, tag: tag.id },\n    });\n  }\n\n  private _addTag() {\n    this._openDialog();\n  }\n\n  private _openDialog(entry?: Tag) {\n    showTagDetailDialog(this, {\n      entry,\n      openWrite: this._canWriteTags ? (tag) => this._openWrite(tag) : undefined,\n      createEntry: (values, tagId) => this._createTag(values, tagId),\n      updateEntry: entry\n        ? (values) => this._updateTag(entry, values)\n        : undefined,\n      removeEntry: entry ? () => this._removeTag(entry) : undefined,\n    });\n  }\n\n  private async _createTag(\n    values: Partial<UpdateTagParams>,\n    tagId?: string\n  ): Promise<Tag> {\n    const newTag = await createTag(this.hass, values, tagId);\n    this._tags = [...this._tags, newTag];\n    return newTag;\n  }\n\n  private async _updateTag(\n    selectedTag: Tag,\n    values: Partial<UpdateTagParams>\n  ): Promise<Tag> {\n    const updated = await updateTag(this.hass, selectedTag.id, values);\n    this._tags = this._tags.map((tag) =>\n      tag.id === selectedTag.id ? updated : tag\n    );\n    return updated;\n  }\n\n  private async _removeTag(selectedTag: Tag) {\n    if (\n      !(await showConfirmationDialog(this, {\n        title: this.hass!.localize(\"ui.panel.config.tag.confirm_remove_title\"),\n        text: this.hass.localize(\"ui.panel.config.tag.confirm_remove\", {\n          tag: selectedTag.name || selectedTag.id,\n        }),\n        dismissText: this.hass!.localize(\"ui.common.cancel\"),\n        confirmText: this.hass!.localize(\"ui.common.remove\"),\n      }))\n    ) {\n      return false;\n    }\n    try {\n      await deleteTag(this.hass, selectedTag.id);\n      this._tags = this._tags.filter((tag) => tag.id !== selectedTag.id);\n      return true;\n    } catch (err: any) {\n      return false;\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-config-tags\": HaConfigTags;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}