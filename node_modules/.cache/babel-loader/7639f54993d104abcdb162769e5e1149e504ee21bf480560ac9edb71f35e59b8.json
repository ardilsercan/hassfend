{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport \"@material/mwc-list/mwc-list-item\";\nimport { html, LitElement } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { ensureArray } from \"../../../../../common/array/ensure-array\";\nimport { fireEvent } from \"../../../../../common/dom/fire_event\";\nimport \"../../../../../components/ha-form/ha-form\";\nimport \"../../../../../components/ha-select\";\nexport let HaTriggerCondition = _decorate([customElement(\"ha-automation-condition-trigger\")], function (_initialize, _LitElement) {\n  class HaTriggerCondition extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaTriggerCondition,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"condition\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"disabled\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_triggers\",\n      value() {\n        return [];\n      }\n    }, {\n      kind: \"field\",\n      key: \"_unsub\",\n      value: void 0\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"defaultConfig\",\n      value: function defaultConfig() {\n        return {\n          id: \"\"\n        };\n      }\n    }, {\n      kind: \"field\",\n      key: \"_schema\",\n      value() {\n        return memoizeOne(triggers => [{\n          name: \"id\",\n          selector: {\n            select: {\n              multiple: true,\n              options: triggers.map(trigger => trigger.id)\n            }\n          },\n          required: true\n        }]);\n      }\n    }, {\n      kind: \"method\",\n      key: \"connectedCallback\",\n      value: function connectedCallback() {\n        _get(_getPrototypeOf(HaTriggerCondition.prototype), \"connectedCallback\", this).call(this);\n        const details = {\n          callback: config => this._automationUpdated(config)\n        };\n        fireEvent(this, \"subscribe-automation-config\", details);\n        this._unsub = details.unsub;\n      }\n    }, {\n      kind: \"method\",\n      key: \"disconnectedCallback\",\n      value: function disconnectedCallback() {\n        _get(_getPrototypeOf(HaTriggerCondition.prototype), \"disconnectedCallback\", this).call(this);\n        if (this._unsub) {\n          this._unsub();\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this._triggers.length) {\n          return this.hass.localize(\"ui.panel.config.automation.editor.conditions.type.trigger.no_triggers\");\n        }\n        const schema = this._schema(this._triggers);\n        return html`\n      <ha-form\n        .schema=${schema}\n        .data=${this.condition}\n        .hass=${this.hass}\n        .disabled=${this.disabled}\n        .computeLabel=${this._computeLabelCallback}\n        @value-changed=${this._valueChanged}\n      ></ha-form>\n    `;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_computeLabelCallback\",\n      value() {\n        return schema => this.hass.localize(`ui.panel.config.automation.editor.conditions.type.trigger.${schema.name}`);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_automationUpdated\",\n      value: function _automationUpdated(config) {\n        const seenIds = new Set();\n        this._triggers = config !== null && config !== void 0 && config.trigger ? ensureArray(config.trigger).filter(t => t.id && (seenIds.has(t.id) ? false : seenIds.add(t.id))) : [];\n      }\n    }, {\n      kind: \"method\",\n      key: \"_valueChanged\",\n      value: function _valueChanged(ev) {\n        ev.stopPropagation();\n        const newValue = ev.detail.value;\n        if (typeof newValue.id === \"string\") {\n          if (!this._triggers.some(trigger => trigger.id === newValue.id)) {\n            newValue.id = \"\";\n          }\n        } else if (Array.isArray(newValue.id)) {\n          newValue.id = newValue.id.filter(id => this._triggers.some(trigger => trigger.id === id));\n          if (!newValue.id.length) {\n            newValue.id = \"\";\n          }\n        }\n        fireEvent(this, \"value-changed\", {\n          value: newValue\n        });\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["html","LitElement","customElement","property","state","memoizeOne","ensureArray","fireEvent","HaTriggerCondition","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","type","Boolean","static","defaultConfig","id","triggers","name","selector","select","multiple","options","map","trigger","required","connectedCallback","_get","_getPrototypeOf","prototype","call","details","callback","config","_automationUpdated","_unsub","unsub","disconnectedCallback","render","_triggers","length","hass","localize","schema","_schema","condition","disabled","_computeLabelCallback","_valueChanged","seenIds","Set","filter","t","has","add","ev","stopPropagation","newValue","detail","some","Array","isArray"],"sources":["/workspaces/frontend/src/panels/config/automation/condition/types/ha-automation-condition-trigger.ts"],"sourcesContent":["import \"@material/mwc-list/mwc-list-item\";\nimport { UnsubscribeFunc } from \"home-assistant-js-websocket\";\nimport { html, LitElement } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { ensureArray } from \"../../../../../common/array/ensure-array\";\nimport { fireEvent } from \"../../../../../common/dom/fire_event\";\nimport \"../../../../../components/ha-form/ha-form\";\nimport type { SchemaUnion } from \"../../../../../components/ha-form/types\";\nimport \"../../../../../components/ha-select\";\nimport type {\n  AutomationConfig,\n  Trigger,\n  TriggerCondition,\n} from \"../../../../../data/automation\";\nimport type { HomeAssistant } from \"../../../../../types\";\n\n@customElement(\"ha-automation-condition-trigger\")\nexport class HaTriggerCondition extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public condition!: TriggerCondition;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @state() private _triggers: Trigger[] = [];\n\n  private _unsub?: UnsubscribeFunc;\n\n  public static get defaultConfig() {\n    return {\n      id: \"\",\n    };\n  }\n\n  private _schema = memoizeOne(\n    (triggers: Trigger[]) =>\n      [\n        {\n          name: \"id\",\n          selector: {\n            select: {\n              multiple: true,\n              options: triggers.map((trigger) => trigger.id!),\n            },\n          },\n          required: true,\n        },\n      ] as const\n  );\n\n  connectedCallback() {\n    super.connectedCallback();\n    const details = { callback: (config) => this._automationUpdated(config) };\n    fireEvent(this, \"subscribe-automation-config\", details);\n    this._unsub = (details as any).unsub;\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    if (this._unsub) {\n      this._unsub();\n    }\n  }\n\n  protected render() {\n    if (!this._triggers.length) {\n      return this.hass.localize(\n        \"ui.panel.config.automation.editor.conditions.type.trigger.no_triggers\"\n      );\n    }\n\n    const schema = this._schema(this._triggers);\n\n    return html`\n      <ha-form\n        .schema=${schema}\n        .data=${this.condition}\n        .hass=${this.hass}\n        .disabled=${this.disabled}\n        .computeLabel=${this._computeLabelCallback}\n        @value-changed=${this._valueChanged}\n      ></ha-form>\n    `;\n  }\n\n  private _computeLabelCallback = (\n    schema: SchemaUnion<ReturnType<typeof this._schema>>\n  ): string =>\n    this.hass.localize(\n      `ui.panel.config.automation.editor.conditions.type.trigger.${schema.name}`\n    );\n\n  private _automationUpdated(config?: AutomationConfig) {\n    const seenIds = new Set();\n    this._triggers = config?.trigger\n      ? ensureArray(config.trigger).filter(\n          (t) => t.id && (seenIds.has(t.id) ? false : seenIds.add(t.id))\n        )\n      : [];\n  }\n\n  private _valueChanged(ev: CustomEvent): void {\n    ev.stopPropagation();\n    const newValue = ev.detail.value;\n\n    if (typeof newValue.id === \"string\") {\n      if (!this._triggers.some((trigger) => trigger.id === newValue.id)) {\n        newValue.id = \"\";\n      }\n    } else if (Array.isArray(newValue.id)) {\n      newValue.id = newValue.id.filter((id) =>\n        this._triggers.some((trigger) => trigger.id === id)\n      );\n      if (!newValue.id.length) {\n        newValue.id = \"\";\n      }\n    }\n\n    fireEvent(this, \"value-changed\", { value: newValue });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-automation-condition-trigger\": HaTriggerCondition;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}