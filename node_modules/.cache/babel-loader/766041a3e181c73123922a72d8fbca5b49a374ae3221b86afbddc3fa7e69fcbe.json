{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\nimport { processConfigEntities } from \"./process-config-entities\";\nexport function hasConfigChanged(element, changedProps) {\n  if (changedProps.has(\"_config\")) {\n    return true;\n  }\n  if (!changedProps.has(\"hass\")) {\n    return false;\n  }\n  var oldHass = changedProps.get(\"hass\");\n  if (!oldHass) {\n    return true;\n  }\n  if (oldHass.connected !== element.hass.connected || oldHass.themes !== element.hass.themes || oldHass.locale !== element.hass.locale || oldHass.localize !== element.hass.localize || oldHass.formatEntityState !== element.hass.formatEntityState || oldHass.formatEntityAttributeName !== element.hass.formatEntityAttributeName || oldHass.formatEntityAttributeValue !== element.hass.formatEntityAttributeValue || oldHass.config.state !== element.hass.config.state) {\n    return true;\n  }\n  return false;\n}\nfunction compareEntityState(oldHass, newHass, entityId) {\n  var oldState = oldHass.states[entityId];\n  var newState = newHass.states[entityId];\n  return oldState !== newState;\n}\nfunction compareEntityDisplayEntry(oldHass, newHass, entityId) {\n  var oldEntry = oldHass.entities[entityId];\n  var newEntry = newHass.entities[entityId];\n  return (oldEntry === null || oldEntry === void 0 ? void 0 : oldEntry.display_precision) !== (newEntry === null || newEntry === void 0 ? void 0 : newEntry.display_precision);\n}\n\n// Check if config or Entity changed\nexport function hasConfigOrEntityChanged(element, changedProps) {\n  if (hasConfigChanged(element, changedProps)) {\n    return true;\n  }\n  if (!changedProps.has(\"hass\")) {\n    return false;\n  }\n  var oldHass = changedProps.get(\"hass\");\n  var newHass = element.hass;\n  return compareEntityState(oldHass, newHass, element._config.entity) || compareEntityDisplayEntry(oldHass, newHass, element._config.entity);\n}\n\n// Check if config or Entities changed\nexport function hasConfigOrEntitiesChanged(element, changedProps) {\n  if (hasConfigChanged(element, changedProps)) {\n    return true;\n  }\n  if (!changedProps.has(\"hass\")) {\n    return false;\n  }\n  var oldHass = changedProps.get(\"hass\");\n  var newHass = element.hass;\n  var entities = processConfigEntities(element._config.entities, false);\n  return entities.some(function (entity) {\n    if (!(\"entity\" in entity)) {\n      return false;\n    }\n    return compareEntityState(oldHass, newHass, entity.entity) || compareEntityDisplayEntry(oldHass, newHass, entity.entity);\n  });\n}","map":{"version":3,"names":["processConfigEntities","hasConfigChanged","element","changedProps","has","oldHass","get","connected","hass","themes","locale","localize","formatEntityState","formatEntityAttributeName","formatEntityAttributeValue","config","state","compareEntityState","newHass","entityId","oldState","states","newState","compareEntityDisplayEntry","oldEntry","entities","newEntry","display_precision","hasConfigOrEntityChanged","_config","entity","hasConfigOrEntitiesChanged","some"],"sources":["/workspaces/frontend/src/panels/lovelace/common/has-changed.ts"],"sourcesContent":["import { HassEntity } from \"home-assistant-js-websocket\";\nimport { PropertyValues } from \"lit\";\nimport { EntityRegistryDisplayEntry } from \"../../../data/entity_registry\";\nimport { HomeAssistant } from \"../../../types\";\nimport { processConfigEntities } from \"./process-config-entities\";\n\nexport function hasConfigChanged(\n  element: any,\n  changedProps: PropertyValues\n): boolean {\n  if (changedProps.has(\"_config\")) {\n    return true;\n  }\n\n  if (!changedProps.has(\"hass\")) {\n    return false;\n  }\n\n  const oldHass = changedProps.get(\"hass\") as HomeAssistant | undefined;\n  if (!oldHass) {\n    return true;\n  }\n\n  if (\n    oldHass.connected !== element.hass!.connected ||\n    oldHass.themes !== element.hass!.themes ||\n    oldHass.locale !== element.hass!.locale ||\n    oldHass.localize !== element.hass.localize ||\n    oldHass.formatEntityState !== element.hass.formatEntityState ||\n    oldHass.formatEntityAttributeName !==\n      element.hass.formatEntityAttributeName ||\n    oldHass.formatEntityAttributeValue !==\n      element.hass.formatEntityAttributeValue ||\n    oldHass.config.state !== element.hass.config.state\n  ) {\n    return true;\n  }\n  return false;\n}\n\nfunction compareEntityState(\n  oldHass: HomeAssistant,\n  newHass: HomeAssistant,\n  entityId: string\n) {\n  const oldState = oldHass.states[entityId] as HassEntity | undefined;\n  const newState = newHass.states[entityId] as HassEntity | undefined;\n\n  return oldState !== newState;\n}\n\nfunction compareEntityDisplayEntry(\n  oldHass: HomeAssistant,\n  newHass: HomeAssistant,\n  entityId: string\n) {\n  const oldEntry = oldHass.entities[entityId] as\n    | EntityRegistryDisplayEntry\n    | undefined;\n  const newEntry = newHass.entities[entityId] as\n    | EntityRegistryDisplayEntry\n    | undefined;\n\n  return oldEntry?.display_precision !== newEntry?.display_precision;\n}\n\n// Check if config or Entity changed\nexport function hasConfigOrEntityChanged(\n  element: any,\n  changedProps: PropertyValues\n): boolean {\n  if (hasConfigChanged(element, changedProps)) {\n    return true;\n  }\n\n  if (!changedProps.has(\"hass\")) {\n    return false;\n  }\n\n  const oldHass = changedProps.get(\"hass\") as HomeAssistant;\n  const newHass = element.hass as HomeAssistant;\n\n  return (\n    compareEntityState(oldHass, newHass, element._config!.entity) ||\n    compareEntityDisplayEntry(oldHass, newHass, element._config!.entity)\n  );\n}\n\n// Check if config or Entities changed\nexport function hasConfigOrEntitiesChanged(\n  element: any,\n  changedProps: PropertyValues\n): boolean {\n  if (hasConfigChanged(element, changedProps)) {\n    return true;\n  }\n\n  if (!changedProps.has(\"hass\")) {\n    return false;\n  }\n\n  const oldHass = changedProps.get(\"hass\") as HomeAssistant;\n  const newHass = element.hass as HomeAssistant;\n\n  const entities = processConfigEntities(element._config!.entities, false);\n\n  return entities.some((entity) => {\n    if (!(\"entity\" in entity)) {\n      return false;\n    }\n\n    return (\n      compareEntityState(oldHass, newHass, entity.entity) ||\n      compareEntityDisplayEntry(oldHass, newHass, entity.entity)\n    );\n  });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}