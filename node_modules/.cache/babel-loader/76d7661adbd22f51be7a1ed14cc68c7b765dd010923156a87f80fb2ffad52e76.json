{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport \"@material/mwc-button/mwc-button\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { isComponentLoaded } from \"../../../common/config/is_component_loaded\";\nimport { formatDateTime } from \"../../../common/datetime/format_date_time\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport { copyToClipboard } from \"../../../common/util/copy-clipboard\";\nimport { subscribePollingCollection } from \"../../../common/util/subscribe-polling\";\nimport \"../../../components/ha-alert\";\nimport \"../../../components/ha-card\";\nimport \"../../../components/ha-circular-progress\";\nimport { createCloseHeading } from \"../../../components/ha-dialog\";\nimport \"../../../components/ha-metric\";\nimport { fetchHassioStats } from \"../../../data/hassio/common\";\nimport { fetchHassioResolution } from \"../../../data/hassio/resolution\";\nimport { domainToName } from \"../../../data/integration\";\nimport { subscribeSystemHealthInfo } from \"../../../data/system_health\";\nimport { showAlertDialog } from \"../../../dialogs/generic/show-dialog-box\";\nimport { haStyleDialog } from \"../../../resources/styles\";\nimport { documentationUrl } from \"../../../util/documentation-url\";\nimport { showToast } from \"../../../util/toast\";\nconst sortKeys = (a, b) => {\n  if (a === \"homeassistant\") {\n    return -1;\n  }\n  if (b === \"homeassistant\") {\n    return 1;\n  }\n  if (a < b) {\n    return -1;\n  }\n  if (b < a) {\n    return 1;\n  }\n  return 0;\n};\nexport const UNSUPPORTED_REASON_URL = {};\nexport const UNHEALTHY_REASON_URL = {\n  privileged: \"/more-info/unsupported/privileged\"\n};\nlet DialogSystemInformation = _decorate([customElement(\"dialog-system-information\")], function (_initialize, _LitElement) {\n  class DialogSystemInformation extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: DialogSystemInformation,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_systemInfo\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_resolutionInfo\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_supervisorStats\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_coreStats\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_opened\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_systemHealthSubscription\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_hassIOSubscription\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"showDialog\",\n      value: function showDialog() {\n        this._opened = true;\n        this.hass.loadBackendTranslation(\"system_health\");\n        this._subscribe();\n      }\n    }, {\n      kind: \"method\",\n      key: \"closeDialog\",\n      value: function closeDialog() {\n        this._opened = false;\n        this._unsubscribe();\n        fireEvent(this, \"dialog-closed\", {\n          dialog: this.localName\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_subscribe\",\n      value: function _subscribe() {\n        if (isComponentLoaded(this.hass, \"system_health\")) {\n          this._systemHealthSubscription = subscribeSystemHealthInfo(this.hass, info => {\n            if (!info) {\n              this._systemHealthSubscription = undefined;\n            } else {\n              this._systemInfo = info;\n            }\n          });\n        }\n        if (isComponentLoaded(this.hass, \"hassio\")) {\n          this._hassIOSubscription = subscribePollingCollection(this.hass, async () => {\n            this._supervisorStats = await fetchHassioStats(this.hass, \"supervisor\");\n            this._coreStats = await fetchHassioStats(this.hass, \"core\");\n          }, 10000);\n          fetchHassioResolution(this.hass).then(data => {\n            this._resolutionInfo = data;\n          });\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_unsubscribe\",\n      value: function _unsubscribe() {\n        var _this$_systemHealthSu, _this$_hassIOSubscrip;\n        (_this$_systemHealthSu = this._systemHealthSubscription) === null || _this$_systemHealthSu === void 0 || _this$_systemHealthSu.then(unsubFunc => unsubFunc());\n        this._systemHealthSubscription = undefined;\n        (_this$_hassIOSubscrip = this._hassIOSubscription) === null || _this$_hassIOSubscrip === void 0 || _this$_hassIOSubscrip.call(this);\n        this._hassIOSubscription = undefined;\n        this._systemInfo = undefined;\n        this._resolutionInfo = undefined;\n        this._coreStats = undefined;\n        this._supervisorStats = undefined;\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this._opened) {\n          return nothing;\n        }\n        const sections = this._getSections();\n        return html`\n      <ha-dialog\n        open\n        @closed=${this.closeDialog}\n        scrimClickAction\n        escapeKeyAction\n        .heading=${createCloseHeading(this.hass, this.hass.localize(\"ui.panel.config.repairs.system_information\"))}\n      >\n        <div>\n          ${this._resolutionInfo ? html`${this._resolutionInfo.unhealthy.length ? html`<ha-alert alert-type=\"error\">\n                    ${this.hass.localize(\"ui.dialogs.unhealthy.title\")}\n                    <mwc-button\n                      slot=\"action\"\n                      .label=${this.hass.localize(\"ui.panel.config.common.learn_more\")}\n                      @click=${this._unhealthyDialog}\n                    >\n                    </mwc-button\n                  ></ha-alert>` : \"\"}\n              ${this._resolutionInfo.unsupported.length ? html`<ha-alert alert-type=\"warning\">\n                    ${this.hass.localize(\"ui.dialogs.unsupported.title\")}\n                    <mwc-button\n                      slot=\"action\"\n                      .label=${this.hass.localize(\"ui.panel.config.common.learn_more\")}\n                      @click=${this._unsupportedDialog}\n                    >\n                    </mwc-button>\n                  </ha-alert>` : \"\"} ` : \"\"}\n\n          <div>${sections}</div>\n\n          ${!this._coreStats && !this._supervisorStats ? \"\" : html`\n                <div>\n                  ${this._coreStats ? html`\n                        <h3>\n                          ${this.hass.localize(\"ui.panel.config.system_health.core_stats\")}\n                        </h3>\n                        <ha-metric\n                          .heading=${this.hass.localize(\"ui.panel.config.system_health.cpu_usage\")}\n                          .value=${this._coreStats.cpu_percent}\n                        ></ha-metric>\n                        <ha-metric\n                          .heading=${this.hass.localize(\"ui.panel.config.system_health.ram_usage\")}\n                          .value=${this._coreStats.memory_percent}\n                        ></ha-metric>\n                      ` : \"\"}\n                  ${this._supervisorStats ? html`\n                        <h3>\n                          ${this.hass.localize(\"ui.panel.config.system_health.supervisor_stats\")}\n                        </h3>\n                        <ha-metric\n                          .heading=${this.hass.localize(\"ui.panel.config.system_health.cpu_usage\")}\n                          .value=${this._supervisorStats.cpu_percent}\n                        ></ha-metric>\n                        <ha-metric\n                          .heading=${this.hass.localize(\"ui.panel.config.system_health.ram_usage\")}\n                          .value=${this._supervisorStats.memory_percent}\n                        ></ha-metric>\n                      ` : \"\"}\n                </div>\n              `}\n        </div>\n        <mwc-button\n          slot=\"primaryAction\"\n          .label=${this.hass.localize(\"ui.panel.config.repairs.copy\")}\n          @click=${this._copyInfo}\n        ></mwc-button>\n      </ha-dialog>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_unsupportedDialog\",\n      value: async function _unsupportedDialog() {\n        await showAlertDialog(this, {\n          title: this.hass.localize(\"ui.dialogs.unsupported.title\"),\n          text: html`${this.hass.localize(\"ui.dialogs.unsupported.description\")}\n        <br /><br />\n        <ul>\n          ${this._resolutionInfo.unsupported.map(reason => html`\n              <li>\n                <a\n                  href=${documentationUrl(this.hass, UNSUPPORTED_REASON_URL[reason] || `/more-info/unsupported/${reason}`)}\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  ${this.hass.localize(`ui.dialogs.unsupported.reason.${reason}`) || reason}\n                </a>\n              </li>\n            `)}\n        </ul>`\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_unhealthyDialog\",\n      value: async function _unhealthyDialog() {\n        await showAlertDialog(this, {\n          title: this.hass.localize(\"ui.dialogs.unhealthy.title\"),\n          text: html`${this.hass.localize(\"ui.dialogs.unhealthy.description\")}\n        <br /><br />\n        <ul>\n          ${this._resolutionInfo.unhealthy.map(reason => html`\n              <li>\n                <a\n                  href=${documentationUrl(this.hass, UNHEALTHY_REASON_URL[reason] || `/more-info/unhealthy/${reason}`)}\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  ${this.hass.localize(`ui.dialogs.unhealthy.reason.${reason}`) || reason}\n                </a>\n              </li>\n            `)}\n        </ul>`\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_getSections\",\n      value: function _getSections() {\n        const sections = [];\n        if (!this._systemInfo) {\n          sections.push(html`\n        <div class=\"loading-container\">\n          <ha-circular-progress indeterminate></ha-circular-progress>\n        </div>\n      `);\n        } else {\n          const domains = Object.keys(this._systemInfo).sort(sortKeys);\n          for (const domain of domains) {\n            const domainInfo = this._systemInfo[domain];\n            const keys = [];\n            for (const key of Object.keys(domainInfo.info)) {\n              let value;\n              if (domainInfo.info[key] && typeof domainInfo.info[key] === \"object\") {\n                const info = domainInfo.info[key];\n                if (info.type === \"pending\") {\n                  value = html`\n                <ha-circular-progress\n                  indeterminate\n                  size=\"small\"\n                ></ha-circular-progress>\n              `;\n                } else if (info.type === \"failed\") {\n                  value = html`\n                <span class=\"error\">${info.error}</span>${!info.more_info ? \"\" : html`\n                      –\n                      <a\n                        href=${info.more_info}\n                        target=\"_blank\"\n                        rel=\"noreferrer noopener\"\n                      >\n                        ${this.hass.localize(\"ui.panel.config.info.system_health.more_info\")}\n                      </a>\n                    `}\n              `;\n                } else if (info.type === \"date\") {\n                  value = formatDateTime(new Date(info.value), this.hass.locale, this.hass.config);\n                }\n              } else {\n                value = domainInfo.info[key];\n              }\n              keys.push(html`\n            <tr>\n              <td>\n                ${this.hass.localize(`component.${domain}.system_health.info.${key}`) || key}\n              </td>\n              <td>${value}</td>\n            </tr>\n          `);\n            }\n            if (domain !== \"homeassistant\") {\n              sections.push(html`\n            <div class=\"card-header\">\n              <h3>${domainToName(this.hass.localize, domain)}</h3>\n              ${!domainInfo.manage_url ? \"\" : html`\n                    <a class=\"manage\" href=${domainInfo.manage_url}>\n                      <mwc-button>\n                        ${this.hass.localize(\"ui.panel.config.info.system_health.manage\")}\n                      </mwc-button>\n                    </a>\n                  `}\n            </div>\n          `);\n            }\n            sections.push(html`\n          <table>\n            ${keys}\n          </table>\n        `);\n          }\n        }\n        return sections;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_copyInfo\",\n      value: async function _copyInfo() {\n        let haContent;\n        const domainParts = [];\n        for (const domain of Object.keys(this._systemInfo).sort(sortKeys)) {\n          const domainInfo = this._systemInfo[domain];\n          let first = true;\n          const parts = [`${domain !== \"homeassistant\" ? `<details><summary>${domainToName(this.hass.localize, domain)}</summary>\\n` : \"\"}`];\n          for (const key of Object.keys(domainInfo.info)) {\n            let value;\n            if (domainInfo.info[key] && typeof domainInfo.info[key] === \"object\") {\n              const info = domainInfo.info[key];\n              if (info.type === \"pending\") {\n                value = \"pending\";\n              } else if (info.type === \"failed\") {\n                value = `failed to load: ${info.error}`;\n              } else if (info.type === \"date\") {\n                value = formatDateTime(new Date(info.value), this.hass.locale, this.hass.config);\n              }\n            } else {\n              value = domainInfo.info[key];\n            }\n            if (first) {\n              parts.push(`${key} | ${value}\\n-- | --`);\n              first = false;\n            } else {\n              parts.push(`${key} | ${value}`);\n            }\n          }\n          if (domain === \"homeassistant\") {\n            haContent = parts.join(\"\\n\");\n          } else {\n            domainParts.push(parts.join(\"\\n\"));\n            if (domain !== \"homeassistant\") {\n              domainParts.push(\"</details>\");\n            }\n          }\n        }\n        await copyToClipboard(`${\"## \"}System Information\\n${haContent}\\n\\n${domainParts.join(\"\\n\\n\")}`);\n        showToast(this, {\n          message: this.hass.localize(\"ui.common.copied_clipboard\")\n        });\n      }\n    }, {\n      kind: \"field\",\n      static: true,\n      key: \"styles\",\n      value() {\n        return [haStyleDialog, css`\n      ha-alert {\n        margin-bottom: 16px;\n        display: block;\n      }\n      table {\n        width: 100%;\n      }\n\n      td:first-child {\n        width: 45%;\n      }\n\n      td:last-child {\n        direction: ltr;\n      }\n\n      .loading-container {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n\n      .card-header {\n        justify-content: space-between;\n        display: flex;\n        align-items: center;\n      }\n\n      .error {\n        color: var(--error-color);\n      }\n\n      a.manage {\n        text-decoration: none;\n      }\n    `];\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","nothing","customElement","property","state","isComponentLoaded","formatDateTime","fireEvent","copyToClipboard","subscribePollingCollection","createCloseHeading","fetchHassioStats","fetchHassioResolution","domainToName","subscribeSystemHealthInfo","showAlertDialog","haStyleDialog","documentationUrl","showToast","sortKeys","a","b","UNSUPPORTED_REASON_URL","UNHEALTHY_REASON_URL","privileged","DialogSystemInformation","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","showDialog","_opened","hass","loadBackendTranslation","_subscribe","closeDialog","_unsubscribe","dialog","localName","_systemHealthSubscription","info","undefined","_systemInfo","_hassIOSubscription","_supervisorStats","_coreStats","then","data","_resolutionInfo","_this$_systemHealthSu","_this$_hassIOSubscrip","unsubFunc","call","render","sections","_getSections","localize","unhealthy","length","_unhealthyDialog","unsupported","_unsupportedDialog","cpu_percent","memory_percent","_copyInfo","title","text","map","reason","push","domains","Object","keys","sort","domain","domainInfo","type","error","more_info","Date","locale","config","manage_url","haContent","domainParts","first","parts","join","message","static"],"sources":["/Users/sercanardil/Desktop/frontend/src/panels/config/repairs/dialog-system-information.ts"],"sourcesContent":["import \"@material/mwc-button/mwc-button\";\nimport { UnsubscribeFunc } from \"home-assistant-js-websocket\";\nimport {\n  css,\n  CSSResultGroup,\n  html,\n  LitElement,\n  TemplateResult,\n  nothing,\n} from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { isComponentLoaded } from \"../../../common/config/is_component_loaded\";\nimport { formatDateTime } from \"../../../common/datetime/format_date_time\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport { copyToClipboard } from \"../../../common/util/copy-clipboard\";\nimport { subscribePollingCollection } from \"../../../common/util/subscribe-polling\";\nimport \"../../../components/ha-alert\";\nimport \"../../../components/ha-card\";\nimport \"../../../components/ha-circular-progress\";\nimport { createCloseHeading } from \"../../../components/ha-dialog\";\nimport \"../../../components/ha-metric\";\nimport { fetchHassioStats, HassioStats } from \"../../../data/hassio/common\";\nimport {\n  fetchHassioResolution,\n  HassioResolution,\n} from \"../../../data/hassio/resolution\";\nimport { domainToName } from \"../../../data/integration\";\nimport {\n  subscribeSystemHealthInfo,\n  SystemCheckValueObject,\n  SystemHealthInfo,\n} from \"../../../data/system_health\";\nimport { showAlertDialog } from \"../../../dialogs/generic/show-dialog-box\";\nimport { haStyleDialog } from \"../../../resources/styles\";\nimport type { HomeAssistant } from \"../../../types\";\nimport { documentationUrl } from \"../../../util/documentation-url\";\nimport { showToast } from \"../../../util/toast\";\n\nconst sortKeys = (a: string, b: string) => {\n  if (a === \"homeassistant\") {\n    return -1;\n  }\n  if (b === \"homeassistant\") {\n    return 1;\n  }\n  if (a < b) {\n    return -1;\n  }\n  if (b < a) {\n    return 1;\n  }\n  return 0;\n};\n\nexport const UNSUPPORTED_REASON_URL = {};\nexport const UNHEALTHY_REASON_URL = {\n  privileged: \"/more-info/unsupported/privileged\",\n};\n\n@customElement(\"dialog-system-information\")\nclass DialogSystemInformation extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @state() private _systemInfo?: SystemHealthInfo;\n\n  @state() private _resolutionInfo?: HassioResolution;\n\n  @state() private _supervisorStats?: HassioStats;\n\n  @state() private _coreStats?: HassioStats;\n\n  @state() private _opened = false;\n\n  private _systemHealthSubscription?: Promise<UnsubscribeFunc>;\n\n  private _hassIOSubscription?: UnsubscribeFunc;\n\n  public showDialog(): void {\n    this._opened = true;\n    this.hass!.loadBackendTranslation(\"system_health\");\n    this._subscribe();\n  }\n\n  public closeDialog() {\n    this._opened = false;\n    this._unsubscribe();\n    fireEvent(this, \"dialog-closed\", { dialog: this.localName });\n  }\n\n  private _subscribe(): void {\n    if (isComponentLoaded(this.hass, \"system_health\")) {\n      this._systemHealthSubscription = subscribeSystemHealthInfo(\n        this.hass,\n        (info) => {\n          if (!info) {\n            this._systemHealthSubscription = undefined;\n          } else {\n            this._systemInfo = info;\n          }\n        }\n      );\n    }\n\n    if (isComponentLoaded(this.hass, \"hassio\")) {\n      this._hassIOSubscription = subscribePollingCollection(\n        this.hass,\n        async () => {\n          this._supervisorStats = await fetchHassioStats(\n            this.hass,\n            \"supervisor\"\n          );\n          this._coreStats = await fetchHassioStats(this.hass, \"core\");\n        },\n        10000\n      );\n\n      fetchHassioResolution(this.hass).then((data) => {\n        this._resolutionInfo = data;\n      });\n    }\n  }\n\n  private _unsubscribe() {\n    this._systemHealthSubscription?.then((unsubFunc) => unsubFunc());\n    this._systemHealthSubscription = undefined;\n    this._hassIOSubscription?.();\n    this._hassIOSubscription = undefined;\n\n    this._systemInfo = undefined;\n    this._resolutionInfo = undefined;\n    this._coreStats = undefined;\n    this._supervisorStats = undefined;\n  }\n\n  protected render() {\n    if (!this._opened) {\n      return nothing;\n    }\n\n    const sections = this._getSections();\n\n    return html`\n      <ha-dialog\n        open\n        @closed=${this.closeDialog}\n        scrimClickAction\n        escapeKeyAction\n        .heading=${createCloseHeading(\n          this.hass,\n          this.hass.localize(\"ui.panel.config.repairs.system_information\")\n        )}\n      >\n        <div>\n          ${this._resolutionInfo\n            ? html`${this._resolutionInfo.unhealthy.length\n                ? html`<ha-alert alert-type=\"error\">\n                    ${this.hass.localize(\"ui.dialogs.unhealthy.title\")}\n                    <mwc-button\n                      slot=\"action\"\n                      .label=${this.hass.localize(\n                        \"ui.panel.config.common.learn_more\"\n                      )}\n                      @click=${this._unhealthyDialog}\n                    >\n                    </mwc-button\n                  ></ha-alert>`\n                : \"\"}\n              ${this._resolutionInfo.unsupported.length\n                ? html`<ha-alert alert-type=\"warning\">\n                    ${this.hass.localize(\"ui.dialogs.unsupported.title\")}\n                    <mwc-button\n                      slot=\"action\"\n                      .label=${this.hass.localize(\n                        \"ui.panel.config.common.learn_more\"\n                      )}\n                      @click=${this._unsupportedDialog}\n                    >\n                    </mwc-button>\n                  </ha-alert>`\n                : \"\"} `\n            : \"\"}\n\n          <div>${sections}</div>\n\n          ${!this._coreStats && !this._supervisorStats\n            ? \"\"\n            : html`\n                <div>\n                  ${this._coreStats\n                    ? html`\n                        <h3>\n                          ${this.hass.localize(\n                            \"ui.panel.config.system_health.core_stats\"\n                          )}\n                        </h3>\n                        <ha-metric\n                          .heading=${this.hass.localize(\n                            \"ui.panel.config.system_health.cpu_usage\"\n                          )}\n                          .value=${this._coreStats.cpu_percent}\n                        ></ha-metric>\n                        <ha-metric\n                          .heading=${this.hass.localize(\n                            \"ui.panel.config.system_health.ram_usage\"\n                          )}\n                          .value=${this._coreStats.memory_percent}\n                        ></ha-metric>\n                      `\n                    : \"\"}\n                  ${this._supervisorStats\n                    ? html`\n                        <h3>\n                          ${this.hass.localize(\n                            \"ui.panel.config.system_health.supervisor_stats\"\n                          )}\n                        </h3>\n                        <ha-metric\n                          .heading=${this.hass.localize(\n                            \"ui.panel.config.system_health.cpu_usage\"\n                          )}\n                          .value=${this._supervisorStats.cpu_percent}\n                        ></ha-metric>\n                        <ha-metric\n                          .heading=${this.hass.localize(\n                            \"ui.panel.config.system_health.ram_usage\"\n                          )}\n                          .value=${this._supervisorStats.memory_percent}\n                        ></ha-metric>\n                      `\n                    : \"\"}\n                </div>\n              `}\n        </div>\n        <mwc-button\n          slot=\"primaryAction\"\n          .label=${this.hass.localize(\"ui.panel.config.repairs.copy\")}\n          @click=${this._copyInfo}\n        ></mwc-button>\n      </ha-dialog>\n    `;\n  }\n\n  private async _unsupportedDialog(): Promise<void> {\n    await showAlertDialog(this, {\n      title: this.hass.localize(\"ui.dialogs.unsupported.title\"),\n      text: html`${this.hass.localize(\"ui.dialogs.unsupported.description\")}\n        <br /><br />\n        <ul>\n          ${this._resolutionInfo!.unsupported.map(\n            (reason) => html`\n              <li>\n                <a\n                  href=${documentationUrl(\n                    this.hass,\n                    UNSUPPORTED_REASON_URL[reason] ||\n                      `/more-info/unsupported/${reason}`\n                  )}\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  ${this.hass.localize(\n                    `ui.dialogs.unsupported.reason.${reason}`\n                  ) || reason}\n                </a>\n              </li>\n            `\n          )}\n        </ul>`,\n    });\n  }\n\n  private async _unhealthyDialog(): Promise<void> {\n    await showAlertDialog(this, {\n      title: this.hass.localize(\"ui.dialogs.unhealthy.title\"),\n      text: html`${this.hass.localize(\"ui.dialogs.unhealthy.description\")}\n        <br /><br />\n        <ul>\n          ${this._resolutionInfo!.unhealthy.map(\n            (reason) => html`\n              <li>\n                <a\n                  href=${documentationUrl(\n                    this.hass,\n                    UNHEALTHY_REASON_URL[reason] ||\n                      `/more-info/unhealthy/${reason}`\n                  )}\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  ${this.hass.localize(\n                    `ui.dialogs.unhealthy.reason.${reason}`\n                  ) || reason}\n                </a>\n              </li>\n            `\n          )}\n        </ul>`,\n    });\n  }\n\n  private _getSections(): TemplateResult[] {\n    const sections: TemplateResult[] = [];\n\n    if (!this._systemInfo) {\n      sections.push(html`\n        <div class=\"loading-container\">\n          <ha-circular-progress indeterminate></ha-circular-progress>\n        </div>\n      `);\n    } else {\n      const domains = Object.keys(this._systemInfo).sort(sortKeys);\n      for (const domain of domains) {\n        const domainInfo = this._systemInfo[domain];\n        const keys: TemplateResult[] = [];\n\n        for (const key of Object.keys(domainInfo.info)) {\n          let value: unknown;\n\n          if (\n            domainInfo.info[key] &&\n            typeof domainInfo.info[key] === \"object\"\n          ) {\n            const info = domainInfo.info[key] as SystemCheckValueObject;\n\n            if (info.type === \"pending\") {\n              value = html`\n                <ha-circular-progress\n                  indeterminate\n                  size=\"small\"\n                ></ha-circular-progress>\n              `;\n            } else if (info.type === \"failed\") {\n              value = html`\n                <span class=\"error\">${info.error}</span>${!info.more_info\n                  ? \"\"\n                  : html`\n                      –\n                      <a\n                        href=${info.more_info}\n                        target=\"_blank\"\n                        rel=\"noreferrer noopener\"\n                      >\n                        ${this.hass.localize(\n                          \"ui.panel.config.info.system_health.more_info\"\n                        )}\n                      </a>\n                    `}\n              `;\n            } else if (info.type === \"date\") {\n              value = formatDateTime(\n                new Date(info.value),\n                this.hass.locale,\n                this.hass.config\n              );\n            }\n          } else {\n            value = domainInfo.info[key];\n          }\n\n          keys.push(html`\n            <tr>\n              <td>\n                ${this.hass.localize(\n                  `component.${domain}.system_health.info.${key}`\n                ) || key}\n              </td>\n              <td>${value}</td>\n            </tr>\n          `);\n        }\n        if (domain !== \"homeassistant\") {\n          sections.push(html`\n            <div class=\"card-header\">\n              <h3>${domainToName(this.hass.localize, domain)}</h3>\n              ${!domainInfo.manage_url\n                ? \"\"\n                : html`\n                    <a class=\"manage\" href=${domainInfo.manage_url}>\n                      <mwc-button>\n                        ${this.hass.localize(\n                          \"ui.panel.config.info.system_health.manage\"\n                        )}\n                      </mwc-button>\n                    </a>\n                  `}\n            </div>\n          `);\n        }\n        sections.push(html`\n          <table>\n            ${keys}\n          </table>\n        `);\n      }\n    }\n    return sections;\n  }\n\n  private async _copyInfo(): Promise<void> {\n    let haContent: string | undefined;\n    const domainParts: string[] = [];\n\n    for (const domain of Object.keys(this._systemInfo!).sort(sortKeys)) {\n      const domainInfo = this._systemInfo![domain];\n      let first = true;\n      const parts = [\n        `${\n          domain !== \"homeassistant\"\n            ? `<details><summary>${domainToName(\n                this.hass.localize,\n                domain\n              )}</summary>\\n`\n            : \"\"\n        }`,\n      ];\n\n      for (const key of Object.keys(domainInfo.info)) {\n        let value: unknown;\n\n        if (domainInfo.info[key] && typeof domainInfo.info[key] === \"object\") {\n          const info = domainInfo.info[key] as SystemCheckValueObject;\n\n          if (info.type === \"pending\") {\n            value = \"pending\";\n          } else if (info.type === \"failed\") {\n            value = `failed to load: ${info.error}`;\n          } else if (info.type === \"date\") {\n            value = formatDateTime(\n              new Date(info.value),\n              this.hass.locale,\n              this.hass.config\n            );\n          }\n        } else {\n          value = domainInfo.info[key];\n        }\n        if (first) {\n          parts.push(`${key} | ${value}\\n-- | --`);\n          first = false;\n        } else {\n          parts.push(`${key} | ${value}`);\n        }\n      }\n\n      if (domain === \"homeassistant\") {\n        haContent = parts.join(\"\\n\");\n      } else {\n        domainParts.push(parts.join(\"\\n\"));\n        if (domain !== \"homeassistant\") {\n          domainParts.push(\"</details>\");\n        }\n      }\n    }\n\n    await copyToClipboard(\n      `${\"## \"}System Information\\n${haContent}\\n\\n${domainParts.join(\"\\n\\n\")}`\n    );\n\n    showToast(this, {\n      message: this.hass.localize(\"ui.common.copied_clipboard\"),\n    });\n  }\n\n  static styles: CSSResultGroup = [\n    haStyleDialog,\n    css`\n      ha-alert {\n        margin-bottom: 16px;\n        display: block;\n      }\n      table {\n        width: 100%;\n      }\n\n      td:first-child {\n        width: 45%;\n      }\n\n      td:last-child {\n        direction: ltr;\n      }\n\n      .loading-container {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n\n      .card-header {\n        justify-content: space-between;\n        display: flex;\n        align-items: center;\n      }\n\n      .error {\n        color: var(--error-color);\n      }\n\n      a.manage {\n        text-decoration: none;\n      }\n    `,\n  ];\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"dialog-system-information\": DialogSystemInformation;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}