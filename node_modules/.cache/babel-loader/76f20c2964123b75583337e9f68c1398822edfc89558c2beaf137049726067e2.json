{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.entries.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.parse-int.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\n/**\n * @license\n * Copyright (c) 2015 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { ComboBoxPlaceholder } from './vaadin-combo-box-placeholder.js';\n\n/**\n * @polymerMixin\n */\nexport var ComboBoxDataProviderMixin = function ComboBoxDataProviderMixin(superClass) {\n  return /*#__PURE__*/function (_superClass) {\n    _inherits(DataProviderMixin, _superClass);\n    function DataProviderMixin() {\n      _classCallCheck(this, DataProviderMixin);\n      return _callSuper(this, DataProviderMixin, arguments);\n    }\n    _createClass(DataProviderMixin, [{\n      key: \"ready\",\n      value: /** @protected */\n      function ready() {\n        var _this = this;\n        _get(_getPrototypeOf(DataProviderMixin.prototype), \"ready\", this).call(this);\n        this._scroller.addEventListener('index-requested', function (e) {\n          var index = e.detail.index;\n          var currentScrollerPos = e.detail.currentScrollerPos;\n          var allowedIndexRange = Math.floor(_this.pageSize * 1.5);\n\n          // Ignores the indexes, which are being re-sent during scrolling reset,\n          // if the corresponding page is around the current scroller position.\n          // Otherwise, there might be a last pages duplicates, which cause the\n          // loading indicator hanging and blank items\n          if (_this._shouldSkipIndex(index, allowedIndexRange, currentScrollerPos)) {\n            return;\n          }\n          if (index !== undefined) {\n            var page = _this._getPageForIndex(index);\n            if (_this._shouldLoadPage(page)) {\n              _this._loadPage(page);\n            }\n          }\n        });\n      }\n\n      /** @private */\n    }, {\n      key: \"_dataProviderFilterChanged\",\n      value: function _dataProviderFilterChanged(filter) {\n        if (this.__previousDataProviderFilter === undefined && filter === '') {\n          this.__previousDataProviderFilter = filter;\n          return;\n        }\n        if (this.__previousDataProviderFilter !== filter) {\n          this.__previousDataProviderFilter = filter;\n          this._pendingRequests = {};\n          // Immediately mark as loading if this refresh leads to re-fetching pages\n          // This prevents some issues with the properties below triggering\n          // observers that also rely on the loading state\n          this.loading = this._shouldFetchData();\n          // Reset size and internal loading state\n          this.size = undefined;\n          this.clearCache();\n        }\n      }\n\n      /** @private */\n    }, {\n      key: \"_shouldFetchData\",\n      value: function _shouldFetchData() {\n        if (!this.dataProvider) {\n          return false;\n        }\n        return this.opened || this.filter && this.filter.length;\n      }\n\n      /** @private */\n    }, {\n      key: \"_ensureFirstPage\",\n      value: function _ensureFirstPage(opened) {\n        if (opened && this._shouldLoadPage(0)) {\n          this._loadPage(0);\n        }\n      }\n\n      /** @private */\n    }, {\n      key: \"_shouldSkipIndex\",\n      value: function _shouldSkipIndex(index, allowedIndexRange, currentScrollerPos) {\n        return currentScrollerPos !== 0 && index >= currentScrollerPos - allowedIndexRange && index <= currentScrollerPos + allowedIndexRange;\n      }\n\n      /** @private */\n    }, {\n      key: \"_shouldLoadPage\",\n      value: function _shouldLoadPage(page) {\n        if (!this.filteredItems || this._forceNextRequest) {\n          this._forceNextRequest = false;\n          return true;\n        }\n        var loadedItem = this.filteredItems[page * this.pageSize];\n        if (loadedItem !== undefined) {\n          return loadedItem instanceof ComboBoxPlaceholder;\n        }\n        return this.size === undefined;\n      }\n\n      /** @private */\n    }, {\n      key: \"_loadPage\",\n      value: function _loadPage(page) {\n        var _this2 = this;\n        // Make sure same page isn't requested multiple times.\n        if (this._pendingRequests[page] || !this.dataProvider) {\n          return;\n        }\n        var params = {\n          page: page,\n          pageSize: this.pageSize,\n          filter: this.filter\n        };\n        var callback = function callback(items, size) {\n          if (_this2._pendingRequests[page] !== callback) {\n            return;\n          }\n          var filteredItems = _this2.filteredItems ? _toConsumableArray(_this2.filteredItems) : [];\n          filteredItems.splice.apply(filteredItems, [params.page * params.pageSize, items.length].concat(_toConsumableArray(items)));\n          _this2.filteredItems = filteredItems;\n          if (!_this2.opened && !_this2._isInputFocused()) {\n            _this2._commitValue();\n          }\n          if (size !== undefined) {\n            _this2.size = size;\n          }\n          delete _this2._pendingRequests[page];\n          if (Object.keys(_this2._pendingRequests).length === 0) {\n            _this2.loading = false;\n          }\n        };\n        this._pendingRequests[page] = callback;\n        // Set the `loading` flag only after marking the request as pending\n        // to prevent the same page from getting requested multiple times\n        // as a result of `__loadingChanged` in the scroller which requests\n        // a virtualizer update which in turn may trigger a data provider page request.\n        this.loading = true;\n        this.dataProvider(params, callback);\n      }\n\n      /** @private */\n    }, {\n      key: \"_getPageForIndex\",\n      value: function _getPageForIndex(index) {\n        return Math.floor(index / this.pageSize);\n      }\n\n      /**\n       * Clears the cached pages and reloads data from dataprovider when needed.\n       */\n    }, {\n      key: \"clearCache\",\n      value: function clearCache() {\n        if (!this.dataProvider) {\n          return;\n        }\n        this._pendingRequests = {};\n        var filteredItems = [];\n        for (var i = 0; i < (this.size || 0); i++) {\n          filteredItems.push(this.__placeHolder);\n        }\n        this.filteredItems = filteredItems;\n        if (this._shouldFetchData()) {\n          this._forceNextRequest = false;\n          this._loadPage(0);\n        } else {\n          this._forceNextRequest = true;\n        }\n      }\n\n      /** @private */\n    }, {\n      key: \"_sizeChanged\",\n      value: function _sizeChanged() {\n        var size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n        var filteredItems = (this.filteredItems || []).slice(0, size);\n        for (var i = 0; i < size; i++) {\n          filteredItems[i] = filteredItems[i] !== undefined ? filteredItems[i] : this.__placeHolder;\n        }\n        this.filteredItems = filteredItems;\n\n        // Cleans up the redundant pending requests for pages > size\n        // Refers to https://github.com/vaadin/vaadin-flow-components/issues/229\n        this._flushPendingRequests(size);\n      }\n\n      /** @private */\n    }, {\n      key: \"_pageSizeChanged\",\n      value: function _pageSizeChanged(pageSize, oldPageSize) {\n        if (Math.floor(pageSize) !== pageSize || pageSize < 1) {\n          this.pageSize = oldPageSize;\n          throw new Error('`pageSize` value must be an integer > 0');\n        }\n        this.clearCache();\n      }\n\n      /** @private */\n    }, {\n      key: \"_dataProviderChanged\",\n      value: function _dataProviderChanged(dataProvider, oldDataProvider) {\n        var _this3 = this;\n        this._ensureItemsOrDataProvider(function () {\n          _this3.dataProvider = oldDataProvider;\n        });\n        this.clearCache();\n      }\n\n      /** @private */\n    }, {\n      key: \"_ensureItemsOrDataProvider\",\n      value: function _ensureItemsOrDataProvider(restoreOldValueCallback) {\n        if (this.items !== undefined && this.dataProvider !== undefined) {\n          restoreOldValueCallback();\n          throw new Error('Using `items` and `dataProvider` together is not supported');\n        } else if (this.dataProvider && !this.filteredItems) {\n          this.filteredItems = [];\n        }\n      }\n\n      /** @private */\n    }, {\n      key: \"_warnDataProviderValue\",\n      value: function _warnDataProviderValue(dataProvider, value) {\n        if (dataProvider && value !== '' && (this.selectedItem === undefined || this.selectedItem === null)) {\n          var valueIndex = this.__getItemIndexByValue(this.filteredItems, value);\n          if (valueIndex < 0 || !this._getItemLabel(this.filteredItems[valueIndex])) {\n            console.warn('Warning: unable to determine the label for the provided `value`. ' + 'Nothing to display in the text field. This usually happens when ' + 'setting an initial `value` before any items are returned from ' + 'the `dataProvider` callback. Consider setting `selectedItem` ' + 'instead of `value`');\n          }\n        }\n      }\n\n      /**\n       * This method cleans up the page callbacks which refers to the\n       * non-existing pages, i.e. which item indexes are greater than the\n       * changed size.\n       * This case is basically happens when:\n       * 1. Users scroll fast to the bottom and combo box generates the\n       * redundant page request/callback\n       * 2. Server side uses undefined size lazy loading and suddenly reaches\n       * the exact size which is on the range edge\n       * (for default page size = 50, it will be 100, 200, 300, ...).\n       * @param size the new size of items\n       * @private\n       */\n    }, {\n      key: \"_flushPendingRequests\",\n      value: function _flushPendingRequests(size) {\n        if (this._pendingRequests) {\n          var lastPage = Math.ceil(size / this.pageSize);\n          Object.entries(this._pendingRequests).forEach(function (_ref) {\n            var _ref2 = _slicedToArray(_ref, 2),\n              page = _ref2[0],\n              callback = _ref2[1];\n            if (parseInt(page) >= lastPage) {\n              callback([], size);\n            }\n          });\n        }\n      }\n    }], [{\n      key: \"properties\",\n      get: function get() {\n        return {\n          /**\n           * Number of items fetched at a time from the dataprovider.\n           * @attr {number} page-size\n           * @type {number}\n           */\n          pageSize: {\n            type: Number,\n            value: 50,\n            observer: '_pageSizeChanged'\n          },\n          /**\n           * Total number of items.\n           * @type {number | undefined}\n           */\n          size: {\n            type: Number,\n            observer: '_sizeChanged'\n          },\n          /**\n           * Function that provides items lazily. Receives arguments `params`, `callback`\n           *\n           * `params.page` Requested page index\n           *\n           * `params.pageSize` Current page size\n           *\n           * `params.filter` Currently applied filter\n           *\n           * `callback(items, size)` Callback function with arguments:\n           *   - `items` Current page of items\n           *   - `size` Total number of items.\n           * @type {ComboBoxDataProvider | undefined}\n           */\n          dataProvider: {\n            type: Object,\n            observer: '_dataProviderChanged'\n          },\n          /** @private */\n          _pendingRequests: {\n            value: function value() {\n              return {};\n            }\n          },\n          /** @private */\n          __placeHolder: {\n            value: new ComboBoxPlaceholder()\n          },\n          /** @private */\n          __previousDataProviderFilter: {\n            type: String\n          }\n        };\n      }\n    }, {\n      key: \"observers\",\n      get: function get() {\n        return ['_dataProviderFilterChanged(filter)', '_warnDataProviderValue(dataProvider, value)', '_ensureFirstPage(opened)'];\n      }\n    }]);\n    return DataProviderMixin;\n  }(superClass);\n};","map":{"version":3,"names":["ComboBoxPlaceholder","ComboBoxDataProviderMixin","superClass","_superClass","_inherits","DataProviderMixin","_classCallCheck","_callSuper","arguments","_createClass","key","value","ready","_this","_get","_getPrototypeOf","prototype","call","_scroller","addEventListener","e","index","detail","currentScrollerPos","allowedIndexRange","Math","floor","pageSize","_shouldSkipIndex","undefined","page","_getPageForIndex","_shouldLoadPage","_loadPage","_dataProviderFilterChanged","filter","__previousDataProviderFilter","_pendingRequests","loading","_shouldFetchData","size","clearCache","dataProvider","opened","length","_ensureFirstPage","filteredItems","_forceNextRequest","loadedItem","_this2","params","callback","items","_toConsumableArray","splice","apply","concat","_isInputFocused","_commitValue","Object","keys","i","push","__placeHolder","_sizeChanged","slice","_flushPendingRequests","_pageSizeChanged","oldPageSize","Error","_dataProviderChanged","oldDataProvider","_this3","_ensureItemsOrDataProvider","restoreOldValueCallback","_warnDataProviderValue","selectedItem","valueIndex","__getItemIndexByValue","_getItemLabel","console","warn","lastPage","ceil","entries","forEach","_ref","_ref2","_slicedToArray","parseInt","get","type","Number","observer","String"],"sources":["/Users/sercanardil/Desktop/frontend/node_modules/@vaadin/combo-box/src/vaadin-combo-box-data-provider-mixin.js"],"sourcesContent":["/**\n * @license\n * Copyright (c) 2015 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { ComboBoxPlaceholder } from './vaadin-combo-box-placeholder.js';\n\n/**\n * @polymerMixin\n */\nexport const ComboBoxDataProviderMixin = (superClass) =>\n  class DataProviderMixin extends superClass {\n    static get properties() {\n      return {\n        /**\n         * Number of items fetched at a time from the dataprovider.\n         * @attr {number} page-size\n         * @type {number}\n         */\n        pageSize: {\n          type: Number,\n          value: 50,\n          observer: '_pageSizeChanged',\n        },\n\n        /**\n         * Total number of items.\n         * @type {number | undefined}\n         */\n        size: {\n          type: Number,\n          observer: '_sizeChanged',\n        },\n\n        /**\n         * Function that provides items lazily. Receives arguments `params`, `callback`\n         *\n         * `params.page` Requested page index\n         *\n         * `params.pageSize` Current page size\n         *\n         * `params.filter` Currently applied filter\n         *\n         * `callback(items, size)` Callback function with arguments:\n         *   - `items` Current page of items\n         *   - `size` Total number of items.\n         * @type {ComboBoxDataProvider | undefined}\n         */\n        dataProvider: {\n          type: Object,\n          observer: '_dataProviderChanged',\n        },\n\n        /** @private */\n        _pendingRequests: {\n          value: () => {\n            return {};\n          },\n        },\n\n        /** @private */\n        __placeHolder: {\n          value: new ComboBoxPlaceholder(),\n        },\n\n        /** @private */\n        __previousDataProviderFilter: {\n          type: String,\n        },\n      };\n    }\n\n    static get observers() {\n      return [\n        '_dataProviderFilterChanged(filter)',\n        '_warnDataProviderValue(dataProvider, value)',\n        '_ensureFirstPage(opened)',\n      ];\n    }\n\n    /** @protected */\n    ready() {\n      super.ready();\n      this._scroller.addEventListener('index-requested', (e) => {\n        const index = e.detail.index;\n        const currentScrollerPos = e.detail.currentScrollerPos;\n        const allowedIndexRange = Math.floor(this.pageSize * 1.5);\n\n        // Ignores the indexes, which are being re-sent during scrolling reset,\n        // if the corresponding page is around the current scroller position.\n        // Otherwise, there might be a last pages duplicates, which cause the\n        // loading indicator hanging and blank items\n        if (this._shouldSkipIndex(index, allowedIndexRange, currentScrollerPos)) {\n          return;\n        }\n\n        if (index !== undefined) {\n          const page = this._getPageForIndex(index);\n          if (this._shouldLoadPage(page)) {\n            this._loadPage(page);\n          }\n        }\n      });\n    }\n\n    /** @private */\n    _dataProviderFilterChanged(filter) {\n      if (this.__previousDataProviderFilter === undefined && filter === '') {\n        this.__previousDataProviderFilter = filter;\n        return;\n      }\n\n      if (this.__previousDataProviderFilter !== filter) {\n        this.__previousDataProviderFilter = filter;\n\n        this._pendingRequests = {};\n        // Immediately mark as loading if this refresh leads to re-fetching pages\n        // This prevents some issues with the properties below triggering\n        // observers that also rely on the loading state\n        this.loading = this._shouldFetchData();\n        // Reset size and internal loading state\n        this.size = undefined;\n\n        this.clearCache();\n      }\n    }\n\n    /** @private */\n    _shouldFetchData() {\n      if (!this.dataProvider) {\n        return false;\n      }\n\n      return this.opened || (this.filter && this.filter.length);\n    }\n\n    /** @private */\n    _ensureFirstPage(opened) {\n      if (opened && this._shouldLoadPage(0)) {\n        this._loadPage(0);\n      }\n    }\n\n    /** @private */\n    _shouldSkipIndex(index, allowedIndexRange, currentScrollerPos) {\n      return (\n        currentScrollerPos !== 0 &&\n        index >= currentScrollerPos - allowedIndexRange &&\n        index <= currentScrollerPos + allowedIndexRange\n      );\n    }\n\n    /** @private */\n    _shouldLoadPage(page) {\n      if (!this.filteredItems || this._forceNextRequest) {\n        this._forceNextRequest = false;\n        return true;\n      }\n\n      const loadedItem = this.filteredItems[page * this.pageSize];\n      if (loadedItem !== undefined) {\n        return loadedItem instanceof ComboBoxPlaceholder;\n      }\n      return this.size === undefined;\n    }\n\n    /** @private */\n    _loadPage(page) {\n      // Make sure same page isn't requested multiple times.\n      if (this._pendingRequests[page] || !this.dataProvider) {\n        return;\n      }\n\n      const params = {\n        page,\n        pageSize: this.pageSize,\n        filter: this.filter,\n      };\n\n      const callback = (items, size) => {\n        if (this._pendingRequests[page] !== callback) {\n          return;\n        }\n\n        const filteredItems = this.filteredItems ? [...this.filteredItems] : [];\n        filteredItems.splice(params.page * params.pageSize, items.length, ...items);\n        this.filteredItems = filteredItems;\n\n        if (!this.opened && !this._isInputFocused()) {\n          this._commitValue();\n        }\n\n        if (size !== undefined) {\n          this.size = size;\n        }\n\n        delete this._pendingRequests[page];\n\n        if (Object.keys(this._pendingRequests).length === 0) {\n          this.loading = false;\n        }\n      };\n\n      this._pendingRequests[page] = callback;\n      // Set the `loading` flag only after marking the request as pending\n      // to prevent the same page from getting requested multiple times\n      // as a result of `__loadingChanged` in the scroller which requests\n      // a virtualizer update which in turn may trigger a data provider page request.\n      this.loading = true;\n      this.dataProvider(params, callback);\n    }\n\n    /** @private */\n    _getPageForIndex(index) {\n      return Math.floor(index / this.pageSize);\n    }\n\n    /**\n     * Clears the cached pages and reloads data from dataprovider when needed.\n     */\n    clearCache() {\n      if (!this.dataProvider) {\n        return;\n      }\n\n      this._pendingRequests = {};\n      const filteredItems = [];\n      for (let i = 0; i < (this.size || 0); i++) {\n        filteredItems.push(this.__placeHolder);\n      }\n      this.filteredItems = filteredItems;\n\n      if (this._shouldFetchData()) {\n        this._forceNextRequest = false;\n        this._loadPage(0);\n      } else {\n        this._forceNextRequest = true;\n      }\n    }\n\n    /** @private */\n    _sizeChanged(size = 0) {\n      const filteredItems = (this.filteredItems || []).slice(0, size);\n      for (let i = 0; i < size; i++) {\n        filteredItems[i] = filteredItems[i] !== undefined ? filteredItems[i] : this.__placeHolder;\n      }\n      this.filteredItems = filteredItems;\n\n      // Cleans up the redundant pending requests for pages > size\n      // Refers to https://github.com/vaadin/vaadin-flow-components/issues/229\n      this._flushPendingRequests(size);\n    }\n\n    /** @private */\n    _pageSizeChanged(pageSize, oldPageSize) {\n      if (Math.floor(pageSize) !== pageSize || pageSize < 1) {\n        this.pageSize = oldPageSize;\n        throw new Error('`pageSize` value must be an integer > 0');\n      }\n      this.clearCache();\n    }\n\n    /** @private */\n    _dataProviderChanged(dataProvider, oldDataProvider) {\n      this._ensureItemsOrDataProvider(() => {\n        this.dataProvider = oldDataProvider;\n      });\n\n      this.clearCache();\n    }\n\n    /** @private */\n    _ensureItemsOrDataProvider(restoreOldValueCallback) {\n      if (this.items !== undefined && this.dataProvider !== undefined) {\n        restoreOldValueCallback();\n        throw new Error('Using `items` and `dataProvider` together is not supported');\n      } else if (this.dataProvider && !this.filteredItems) {\n        this.filteredItems = [];\n      }\n    }\n\n    /** @private */\n    _warnDataProviderValue(dataProvider, value) {\n      if (dataProvider && value !== '' && (this.selectedItem === undefined || this.selectedItem === null)) {\n        const valueIndex = this.__getItemIndexByValue(this.filteredItems, value);\n        if (valueIndex < 0 || !this._getItemLabel(this.filteredItems[valueIndex])) {\n          console.warn(\n            'Warning: unable to determine the label for the provided `value`. ' +\n              'Nothing to display in the text field. This usually happens when ' +\n              'setting an initial `value` before any items are returned from ' +\n              'the `dataProvider` callback. Consider setting `selectedItem` ' +\n              'instead of `value`',\n          );\n        }\n      }\n    }\n\n    /**\n     * This method cleans up the page callbacks which refers to the\n     * non-existing pages, i.e. which item indexes are greater than the\n     * changed size.\n     * This case is basically happens when:\n     * 1. Users scroll fast to the bottom and combo box generates the\n     * redundant page request/callback\n     * 2. Server side uses undefined size lazy loading and suddenly reaches\n     * the exact size which is on the range edge\n     * (for default page size = 50, it will be 100, 200, 300, ...).\n     * @param size the new size of items\n     * @private\n     */\n    _flushPendingRequests(size) {\n      if (this._pendingRequests) {\n        const lastPage = Math.ceil(size / this.pageSize);\n        Object.entries(this._pendingRequests).forEach(([page, callback]) => {\n          if (parseInt(page) >= lastPage) {\n            callback([], size);\n          }\n        });\n      }\n    }\n  };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}