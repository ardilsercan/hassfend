{"ast":null,"code":"import \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n// We import the minified bundle because the unminified bundle\n// has some quirks that break wds. See #7784 for unminified version.\n\nimport Vibrant from \"node-vibrant/dist/vibrant\";\nimport { getRGBContrastRatio } from \"../color/rgb\";\nvar CONTRAST_RATIO = 4.5;\n\n// How much the total diff between 2 RGB colors can be\n// to be considered similar.\nvar COLOR_SIMILARITY_THRESHOLD = 150;\n\n// For debug purposes, is being tree shaken.\nvar DEBUG_COLOR = __DEV__ && false;\nvar logColor = function logColor(color) {\n  var label = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\".concat(color.hex, \" - \").concat(color.population);\n  return (\n    // eslint-disable-next-line no-console\n    console.log(\"%c\".concat(label), \"color: \".concat(color.bodyTextColor, \"; background-color: \").concat(color.hex))\n  );\n};\nvar customGenerator = function customGenerator(colors) {\n  colors.sort(function (colorA, colorB) {\n    return colorB.population - colorA.population;\n  });\n  var backgroundColor = colors[0];\n  var foregroundColor;\n  var contrastRatios = new Map();\n  var approvedContrastRatio = function approvedContrastRatio(hex, rgb) {\n    if (!contrastRatios.has(hex)) {\n      contrastRatios.set(hex, getRGBContrastRatio(backgroundColor.rgb, rgb));\n    }\n    return contrastRatios.get(hex) > CONTRAST_RATIO;\n  };\n\n  // We take each next color and find one that has better contrast.\n  for (var i = 1; i < colors.length && foregroundColor === undefined; i++) {\n    // If this color matches, score, take it.\n    if (approvedContrastRatio(colors[i].hex, colors[i].rgb)) {\n      if (DEBUG_COLOR) {\n        logColor(colors[i], \"PICKED\");\n      }\n      foregroundColor = colors[i].rgb;\n      break;\n    }\n\n    // This color has the wrong contrast ratio, but it is the right color.\n    // Let's find similar colors that might have the right contrast ratio\n\n    var currentColor = colors[i];\n    if (DEBUG_COLOR) {\n      logColor(colors[i], \"Finding similar color with better contrast\");\n    }\n    for (var j = i + 1; j < colors.length; j++) {\n      var compareColor = colors[j];\n\n      // difference. 0 is same, 765 max difference\n      var diffScore = Math.abs(currentColor.rgb[0] - compareColor.rgb[0]) + Math.abs(currentColor.rgb[1] - compareColor.rgb[1]) + Math.abs(currentColor.rgb[2] - compareColor.rgb[2]);\n      if (DEBUG_COLOR) {\n        logColor(colors[j], \"\".concat(colors[j].hex, \" - \").concat(diffScore));\n      }\n      if (diffScore > COLOR_SIMILARITY_THRESHOLD) {\n        continue;\n      }\n      if (approvedContrastRatio(compareColor.hex, compareColor.rgb)) {\n        if (DEBUG_COLOR) {\n          logColor(compareColor, \"PICKED\");\n        }\n        foregroundColor = compareColor.rgb;\n        break;\n      }\n    }\n  }\n  if (foregroundColor === undefined) {\n    foregroundColor =\n    // @ts-expect-error\n    backgroundColor.getYiq() < 200 ? [255, 255, 255] : [0, 0, 0];\n  }\n  if (DEBUG_COLOR) {\n    // eslint-disable-next-line no-console\n    console.log();\n    // eslint-disable-next-line no-console\n    console.log(\"%cPicked colors\", \"color: \".concat(foregroundColor, \"; background-color: \").concat(backgroundColor.hex, \"; font-weight: bold; padding: 16px;\"));\n    colors.forEach(function (color) {\n      return logColor(color);\n    });\n    // eslint-disable-next-line no-console\n    console.log();\n  }\n  return {\n    // We can't import Swatch constructor from the minified bundle, take it from background color.\n    // @ts-expect-error\n    foreground: new backgroundColor.constructor(foregroundColor, 0),\n    background: backgroundColor\n  };\n};\n\n// Set our custom generator as the default.\nVibrant._pipeline.generator.register(\"default\", customGenerator);\nexport var extractColors = function extractColors(url) {\n  var downsampleColors = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 16;\n  return new Vibrant(url, {\n    colorCount: downsampleColors\n  }).getPalette().then(function (_ref) {\n    var foreground = _ref.foreground,\n      background = _ref.background;\n    return {\n      background: background,\n      foreground: foreground\n    };\n  });\n};","map":{"version":3,"names":["Vibrant","getRGBContrastRatio","CONTRAST_RATIO","COLOR_SIMILARITY_THRESHOLD","DEBUG_COLOR","__DEV__","logColor","color","label","arguments","length","undefined","concat","hex","population","console","log","bodyTextColor","customGenerator","colors","sort","colorA","colorB","backgroundColor","foregroundColor","contrastRatios","Map","approvedContrastRatio","rgb","has","set","get","i","currentColor","j","compareColor","diffScore","Math","abs","getYiq","forEach","foreground","constructor","background","_pipeline","generator","register","extractColors","url","downsampleColors","colorCount","getPalette","then","_ref"],"sources":["/workspaces/frontend/src/common/image/extract_color.ts"],"sourcesContent":["// We import the minified bundle because the unminified bundle\n// has some quirks that break wds. See #7784 for unminified version.\nimport type { Swatch, Vec3 } from \"@vibrant/color\";\nimport Vibrant from \"node-vibrant/dist/vibrant\";\nimport { getRGBContrastRatio } from \"../color/rgb\";\n\nconst CONTRAST_RATIO = 4.5;\n\n// How much the total diff between 2 RGB colors can be\n// to be considered similar.\nconst COLOR_SIMILARITY_THRESHOLD = 150;\n\n// For debug purposes, is being tree shaken.\nconst DEBUG_COLOR = __DEV__ && false;\n\nconst logColor = (\n  color: Swatch,\n  label = `${color.hex} - ${color.population}`\n) =>\n  // eslint-disable-next-line no-console\n  console.log(\n    `%c${label}`,\n    `color: ${color.bodyTextColor}; background-color: ${color.hex}`\n  );\n\nconst customGenerator = (colors: Swatch[]) => {\n  colors.sort((colorA, colorB) => colorB.population - colorA.population);\n\n  const backgroundColor = colors[0];\n  let foregroundColor: Vec3 | undefined;\n\n  const contrastRatios = new Map<string, number>();\n  const approvedContrastRatio = (hex: string, rgb: Swatch[\"rgb\"]) => {\n    if (!contrastRatios.has(hex)) {\n      contrastRatios.set(hex, getRGBContrastRatio(backgroundColor.rgb, rgb));\n    }\n\n    return contrastRatios.get(hex)! > CONTRAST_RATIO;\n  };\n\n  // We take each next color and find one that has better contrast.\n  for (let i = 1; i < colors.length && foregroundColor === undefined; i++) {\n    // If this color matches, score, take it.\n    if (approvedContrastRatio(colors[i].hex, colors[i].rgb)) {\n      if (DEBUG_COLOR) {\n        logColor(colors[i], \"PICKED\");\n      }\n      foregroundColor = colors[i].rgb;\n      break;\n    }\n\n    // This color has the wrong contrast ratio, but it is the right color.\n    // Let's find similar colors that might have the right contrast ratio\n\n    const currentColor = colors[i];\n    if (DEBUG_COLOR) {\n      logColor(colors[i], \"Finding similar color with better contrast\");\n    }\n\n    for (let j = i + 1; j < colors.length; j++) {\n      const compareColor = colors[j];\n\n      // difference. 0 is same, 765 max difference\n      const diffScore =\n        Math.abs(currentColor.rgb[0] - compareColor.rgb[0]) +\n        Math.abs(currentColor.rgb[1] - compareColor.rgb[1]) +\n        Math.abs(currentColor.rgb[2] - compareColor.rgb[2]);\n\n      if (DEBUG_COLOR) {\n        logColor(colors[j], `${colors[j].hex} - ${diffScore}`);\n      }\n\n      if (diffScore > COLOR_SIMILARITY_THRESHOLD) {\n        continue;\n      }\n\n      if (approvedContrastRatio(compareColor.hex, compareColor.rgb)) {\n        if (DEBUG_COLOR) {\n          logColor(compareColor, \"PICKED\");\n        }\n        foregroundColor = compareColor.rgb;\n        break;\n      }\n    }\n  }\n\n  if (foregroundColor === undefined) {\n    foregroundColor =\n      // @ts-expect-error\n      backgroundColor.getYiq() < 200 ? [255, 255, 255] : [0, 0, 0];\n  }\n\n  if (DEBUG_COLOR) {\n    // eslint-disable-next-line no-console\n    console.log();\n    // eslint-disable-next-line no-console\n    console.log(\n      \"%cPicked colors\",\n      `color: ${foregroundColor}; background-color: ${backgroundColor.hex}; font-weight: bold; padding: 16px;`\n    );\n    colors.forEach((color) => logColor(color));\n    // eslint-disable-next-line no-console\n    console.log();\n  }\n\n  return {\n    // We can't import Swatch constructor from the minified bundle, take it from background color.\n    // @ts-expect-error\n    foreground: new backgroundColor.constructor(foregroundColor, 0),\n    background: backgroundColor,\n  };\n};\n\n// Set our custom generator as the default.\nVibrant._pipeline.generator.register(\"default\", customGenerator);\n\nexport const extractColors = (url: string, downsampleColors = 16) =>\n  new Vibrant(url, {\n    colorCount: downsampleColors,\n  })\n    .getPalette()\n    .then(({ foreground, background }) => ({\n      background: background!,\n      foreground: foreground!,\n    }));\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}