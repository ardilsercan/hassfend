{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport { consume } from \"@lit-labs/context\";\nimport \"@lrnwebcomponents/simple-tooltip/simple-tooltip\";\nconst mdiCloseBoxMultiple = \"M4 20H18V22H4C2.9 22 2 21.11 2 20V6H4V20M20.22 2H7.78C6.8 2 6 2.8 6 3.78V16.22C6 17.2 6.8 18 7.78 18H20.22C21.2 18 22 17.2 22 16.22V3.78C22 2.8 21.2 2 20.22 2M19 13.6L17.6 15L14 11.4L10.4 15L9 13.6L12.6 10L9 6.4L10.4 5L14 8.6L17.6 5L19 6.4L15.4 10L19 13.6Z\";\nconst mdiCloseCircleOutline = \"M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,2C6.47,2 2,6.47 2,12C2,17.53 6.47,22 12,22C17.53,22 22,17.53 22,12C22,6.47 17.53,2 12,2M14.59,8L12,10.59L9.41,8L8,9.41L10.59,12L8,14.59L9.41,16L12,13.41L14.59,16L16,14.59L13.41,12L16,9.41L14.59,8Z\";\nconst mdiFilterVariant = \"M6,13H18V11H6M3,6V8H21V6M10,18H14V16H10V18Z\";\nconst mdiPlus = \"M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z\";\nconst mdiPlusBoxMultiple = \"M19,11H15V15H13V11H9V9H13V5H15V9H19M20,2H8A2,2 0 0,0 6,4V16A2,2 0 0,0 8,18H20A2,2 0 0,0 22,16V4A2,2 0 0,0 20,2M4,6H2V20A2,2 0 0,0 4,22H18V20H4V6Z\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport { ifDefined } from \"lit/directives/if-defined\";\nimport memoize from \"memoize-one\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport { computeStateName } from \"../../../common/entity/compute_state_name\";\nimport { generateFilter, isEmptyFilter } from \"../../../common/entity/entity_filter\";\nimport { navigate } from \"../../../common/navigate\";\nimport \"../../../components/ha-fab\";\nimport { fetchCloudAlexaEntities } from \"../../../data/alexa\";\nimport { entitiesContext } from \"../../../data/context\";\nimport { getExtendedEntityRegistryEntries } from \"../../../data/entity_registry\";\nimport { exposeEntities, voiceAssistants } from \"../../../data/expose\";\nimport { fetchCloudGoogleEntities } from \"../../../data/google_assistant\";\nimport { showConfirmationDialog } from \"../../../dialogs/generic/show-dialog-box\";\nimport \"../../../layouts/hass-loading-screen\";\nimport \"../../../layouts/hass-tabs-subpage-data-table\";\nimport { haStyle } from \"../../../resources/styles\";\nimport \"./expose/expose-assistant-icon\";\nimport { voiceAssistantTabs } from \"./ha-config-voice-assistants\";\nimport { showExposeEntityDialog } from \"./show-dialog-expose-entity\";\nimport { showVoiceSettingsDialog } from \"./show-dialog-voice-settings\";\nexport let VoiceAssistantsExpose = _decorate([customElement(\"ha-config-voice-assistants-expose\")], function (_initialize, _LitElement) {\n  class VoiceAssistantsExpose extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: VoiceAssistantsExpose,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"cloudStatus\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"isWide\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"narrow\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"route\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"exposedEntities\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state(), consume({\n        context: entitiesContext,\n        subscribe: true\n      })],\n      key: \"_entities\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_extEntities\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_filter\",\n      value() {\n        var _history$state;\n        return ((_history$state = history.state) === null || _history$state === void 0 ? void 0 : _history$state.filter) || \"\";\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_numHiddenEntities\",\n      value() {\n        return 0;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_searchParms\",\n      value() {\n        return new URLSearchParams(window.location.search);\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_selectedEntities\",\n      value() {\n        return [];\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_supportedEntities\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [query(\"hass-tabs-subpage-data-table\", true)],\n      key: \"_dataTable\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_activeFilters\",\n      value() {\n        return memoize(filters => {\n          const filterTexts = [];\n          filters.forEach((value, key) => {\n            switch (key) {\n              case \"assistants\":\n                {\n                  const assistants = value.split(\",\");\n                  assistants.forEach(assistant => {\n                    var _voiceAssistants$assi;\n                    filterTexts.push(((_voiceAssistants$assi = voiceAssistants[assistant]) === null || _voiceAssistants$assi === void 0 ? void 0 : _voiceAssistants$assi.name) || assistant);\n                  });\n                }\n            }\n          });\n          return filterTexts.length ? filterTexts : undefined;\n        });\n      }\n    }, {\n      kind: \"field\",\n      key: \"_columns\",\n      value() {\n        return memoize((narrow, availableAssistants, supportedEntities, _language) => ({\n          icon: {\n            title: \"\",\n            type: \"icon\",\n            hidden: narrow,\n            template: entry => {\n              var _entry$entity;\n              return html`\n          <ha-state-icon\n            title=${ifDefined((_entry$entity = entry.entity) === null || _entry$entity === void 0 ? void 0 : _entry$entity.state)}\n            .stateObj=${entry.entity}\n            .hass=${this.hass}\n          ></ha-state-icon>\n        `;\n            }\n          },\n          name: {\n            main: true,\n            title: this.hass.localize(\"ui.panel.config.voice_assistants.expose.headers.name\"),\n            sortable: true,\n            filterable: true,\n            direction: \"asc\",\n            grows: true,\n            template: entry => html`\n          ${entry.name}<br />\n          <div class=\"secondary\">${entry.entity_id}</div>\n        `\n          },\n          area: {\n            title: this.hass.localize(\"ui.panel.config.voice_assistants.expose.headers.area\"),\n            sortable: true,\n            hidden: narrow,\n            filterable: true,\n            width: \"15%\"\n          },\n          assistants: {\n            title: this.hass.localize(\"ui.panel.config.voice_assistants.expose.headers.assistants\"),\n            sortable: true,\n            filterable: true,\n            width: \"160px\",\n            type: \"flex\",\n            template: entry => html`${availableAssistants.map(key => {\n              var _entry$manAssistants;\n              const supported = !(supportedEntities !== null && supportedEntities !== void 0 && supportedEntities[key]) || supportedEntities[key].includes(entry.entity_id);\n              const manual = (_entry$manAssistants = entry.manAssistants) === null || _entry$manAssistants === void 0 ? void 0 : _entry$manAssistants.includes(key);\n              return entry.assistants.includes(key) ? html`\n                  <voice-assistants-expose-assistant-icon\n                    .assistant=${key}\n                    .hass=${this.hass}\n                    .manual=${manual}\n                    .unsupported=${!supported}\n                  >\n                  </voice-assistants-expose-assistant-icon>\n                ` : html`<div style=\"width: 40px;\"></div>`;\n            })}`\n          },\n          aliases: {\n            title: this.hass.localize(\"ui.panel.config.voice_assistants.expose.headers.aliases\"),\n            sortable: true,\n            filterable: true,\n            hidden: narrow,\n            width: \"15%\",\n            template: entry => entry.aliases.length === 0 ? \"-\" : entry.aliases.length === 1 ? entry.aliases[0] : this.hass.localize(\"ui.panel.config.voice_assistants.expose.aliases\", {\n              count: entry.aliases.length\n            })\n          },\n          remove: {\n            title: \"\",\n            type: \"icon-button\",\n            hidden: narrow,\n            template: () => html`<ha-icon-button\n            @click=${this._removeEntity}\n            .path=${mdiCloseCircleOutline}\n          ></ha-icon-button>`\n          },\n          // For search\n          entity_id: {\n            title: \"\",\n            hidden: true,\n            filterable: true\n          }\n        }));\n      }\n    }, {\n      kind: \"field\",\n      key: \"_getEntityFilterFuncs\",\n      value() {\n        return memoize((googleFilter, alexaFilter) => ({\n          google: generateFilter(googleFilter.include_domains, googleFilter.include_entities, googleFilter.exclude_domains, googleFilter.exclude_entities),\n          amazon: generateFilter(alexaFilter.include_domains, alexaFilter.include_entities, alexaFilter.exclude_domains, alexaFilter.exclude_entities)\n        }));\n      }\n    }, {\n      kind: \"field\",\n      key: \"_availableAssistants\",\n      value() {\n        return memoize(cloudStatus => {\n          const googleEnabled = (cloudStatus === null || cloudStatus === void 0 ? void 0 : cloudStatus.logged_in) === true && cloudStatus.prefs.google_enabled === true;\n          const alexaEnabled = (cloudStatus === null || cloudStatus === void 0 ? void 0 : cloudStatus.logged_in) === true && cloudStatus.prefs.alexa_enabled === true;\n          const showAssistants = [...Object.keys(voiceAssistants)];\n          if (!googleEnabled) {\n            showAssistants.splice(showAssistants.indexOf(\"cloud.google_assistant\"), 1);\n          }\n          if (!alexaEnabled) {\n            showAssistants.splice(showAssistants.indexOf(\"cloud.alexa\"), 1);\n          }\n          return showAssistants;\n        });\n      }\n    }, {\n      kind: \"field\",\n      key: \"_filteredEntities\",\n      value() {\n        return memoize((entities, exposedEntities, devices, areas, cloudStatus, filters) => {\n          const googleEnabled = (cloudStatus === null || cloudStatus === void 0 ? void 0 : cloudStatus.logged_in) === true && cloudStatus.prefs.google_enabled === true;\n          const alexaEnabled = (cloudStatus === null || cloudStatus === void 0 ? void 0 : cloudStatus.logged_in) === true && cloudStatus.prefs.alexa_enabled === true;\n          const showAssistants = [...this._availableAssistants(cloudStatus)];\n          const alexaManual = alexaEnabled && !isEmptyFilter(this.cloudStatus.alexa_entities);\n          const googleManual = googleEnabled && !isEmptyFilter(this.cloudStatus.google_entities);\n          if (googleManual) {\n            showAssistants.splice(showAssistants.indexOf(\"cloud.google_assistant\"), 1);\n          }\n          if (alexaManual) {\n            showAssistants.splice(showAssistants.indexOf(\"cloud.alexa\"), 1);\n          }\n          const result = {};\n          let filteredEntities = Object.values(this.hass.states);\n          filteredEntities = filteredEntities.filter(entity => showAssistants.some(assis => {\n            var _exposedEntities$enti;\n            return exposedEntities === null || exposedEntities === void 0 || (_exposedEntities$enti = exposedEntities[entity.entity_id]) === null || _exposedEntities$enti === void 0 ? void 0 : _exposedEntities$enti[assis];\n          }));\n\n          // If nothing gets filtered, this is our correct count of entities\n          const startLength = filteredEntities.length;\n          let filteredAssistants;\n          filters.forEach((value, key) => {\n            if (key === \"assistants\") {\n              filteredAssistants = value.split(\",\");\n              filteredEntities = filteredEntities.filter(entity => filteredAssistants.some(assis => {\n                var _exposedEntities$enti2;\n                return !(assis === \"cloud.alexa\" && alexaManual) && !(assis === \"cloud.google_assistant\" && googleManual) && (exposedEntities === null || exposedEntities === void 0 || (_exposedEntities$enti2 = exposedEntities[entity.entity_id]) === null || _exposedEntities$enti2 === void 0 ? void 0 : _exposedEntities$enti2[assis]);\n              }));\n            }\n          });\n          for (const entityState of filteredEntities) {\n            var _entry$area_id, _devices;\n            const entry = entities[entityState.entity_id];\n            const areaId = (_entry$area_id = entry === null || entry === void 0 ? void 0 : entry.area_id) !== null && _entry$area_id !== void 0 ? _entry$area_id : entry !== null && entry !== void 0 && entry.device_id ? (_devices = devices[entry.device_id]) === null || _devices === void 0 ? void 0 : _devices.area_id : undefined;\n            const area = areaId ? areas[areaId] : undefined;\n            result[entityState.entity_id] = {\n              entity_id: entityState.entity_id,\n              entity: entityState,\n              name: computeStateName(entityState) || this.hass.localize(\"ui.panel.config.entities.picker.unnamed_entity\"),\n              area: area ? area.name : \"—\",\n              assistants: Object.keys(exposedEntities === null || exposedEntities === void 0 ? void 0 : exposedEntities[entityState.entity_id]).filter(key => {\n                var _exposedEntities$enti3;\n                return showAssistants.includes(key) && (exposedEntities === null || exposedEntities === void 0 || (_exposedEntities$enti3 = exposedEntities[entityState.entity_id]) === null || _exposedEntities$enti3 === void 0 ? void 0 : _exposedEntities$enti3[key]);\n              }),\n              aliases: (entry === null || entry === void 0 ? void 0 : entry.aliases) || []\n            };\n          }\n          this._numHiddenEntities = startLength - Object.values(result).length;\n          if (alexaManual || googleManual) {\n            const manFilterFuncs = this._getEntityFilterFuncs(this.cloudStatus.google_entities, this.cloudStatus.alexa_entities);\n            Object.keys(this.hass.states).forEach(entityId => {\n              const assistants = [];\n              if (alexaManual && manFilterFuncs.amazon(entityId)) {\n                assistants.push(\"cloud.alexa\");\n              }\n              if (googleManual && manFilterFuncs.google(entityId)) {\n                assistants.push(\"cloud.google_assistant\");\n              }\n              if (!assistants.length) {\n                return;\n              }\n              if (entityId in result) {\n                result[entityId].assistants.push(...assistants);\n                result[entityId].manAssistants = assistants;\n              } else if (!filteredAssistants || filteredAssistants.some(ass => assistants.includes(ass))) {\n                var _entry$area_id2, _devices2;\n                const entityState = this.hass.states[entityId];\n                const entry = entities[entityId];\n                const areaId = (_entry$area_id2 = entry === null || entry === void 0 ? void 0 : entry.area_id) !== null && _entry$area_id2 !== void 0 ? _entry$area_id2 : entry !== null && entry !== void 0 && entry.device_id ? (_devices2 = devices[entry.device_id]) === null || _devices2 === void 0 ? void 0 : _devices2.area_id : undefined;\n                const area = areaId ? areas[areaId] : undefined;\n                result[entityId] = {\n                  entity_id: entityState.entity_id,\n                  entity: entityState,\n                  name: computeStateName(entityState),\n                  area: area ? area.name : \"—\",\n                  assistants: [...(exposedEntities ? Object.keys(exposedEntities === null || exposedEntities === void 0 ? void 0 : exposedEntities[entityState.entity_id]).filter(key => {\n                    var _exposedEntities$enti4;\n                    return showAssistants.includes(key) && (exposedEntities === null || exposedEntities === void 0 || (_exposedEntities$enti4 = exposedEntities[entityState.entity_id]) === null || _exposedEntities$enti4 === void 0 ? void 0 : _exposedEntities$enti4[key]);\n                  }) : []), ...assistants],\n                  manAssistants: assistants,\n                  aliases: (entry === null || entry === void 0 ? void 0 : entry.aliases) || []\n                };\n              }\n            });\n          }\n          return Object.values(result);\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"connectedCallback\",\n      value: function connectedCallback() {\n        _get(_getPrototypeOf(VoiceAssistantsExpose.prototype), \"connectedCallback\", this).call(this);\n        window.addEventListener(\"location-changed\", this._locationChanged);\n        window.addEventListener(\"popstate\", this._popState);\n      }\n    }, {\n      kind: \"method\",\n      key: \"disconnectedCallback\",\n      value: function disconnectedCallback() {\n        _get(_getPrototypeOf(VoiceAssistantsExpose.prototype), \"disconnectedCallback\", this).call(this);\n        window.removeEventListener(\"location-changed\", this._locationChanged);\n        window.removeEventListener(\"popstate\", this._popState);\n      }\n    }, {\n      kind: \"field\",\n      key: \"_locationChanged\",\n      value() {\n        return () => {\n          if (window.location.search.substring(1) !== this._searchParms.toString()) {\n            this._searchParms = new URLSearchParams(window.location.search);\n          }\n        };\n      }\n    }, {\n      kind: \"field\",\n      key: \"_popState\",\n      value() {\n        return () => {\n          if (window.location.search.substring(1) !== this._searchParms.toString()) {\n            this._searchParms = new URLSearchParams(window.location.search);\n          }\n        };\n      }\n    }, {\n      kind: \"method\",\n      key: \"_fetchEntities\",\n      value: async function _fetchEntities() {\n        this._extEntities = await getExtendedEntityRegistryEntries(this.hass, Object.keys(this._entities));\n        this._fetchSupportedEntities();\n      }\n    }, {\n      kind: \"method\",\n      key: \"_fetchSupportedEntities\",\n      value: async function _fetchSupportedEntities() {\n        var _this$cloudStatus, _this$cloudStatus2;\n        let alexaEntitiesProm;\n        let googleEntitiesProm;\n        if ((_this$cloudStatus = this.cloudStatus) !== null && _this$cloudStatus !== void 0 && _this$cloudStatus.logged_in && this.cloudStatus.prefs.alexa_enabled) {\n          alexaEntitiesProm = fetchCloudAlexaEntities(this.hass);\n        }\n        if ((_this$cloudStatus2 = this.cloudStatus) !== null && _this$cloudStatus2 !== void 0 && _this$cloudStatus2.logged_in && this.cloudStatus.prefs.google_enabled) {\n          googleEntitiesProm = fetchCloudGoogleEntities(this.hass);\n        }\n        const [alexaEntities, googleEntities] = await Promise.all([alexaEntitiesProm, googleEntitiesProm]);\n        this._supportedEntities = {\n          \"cloud.alexa\": alexaEntities === null || alexaEntities === void 0 ? void 0 : alexaEntities.map(entity => entity.entity_id),\n          \"cloud.google_assistant\": googleEntities === null || googleEntities === void 0 ? void 0 : googleEntities.map(entity => entity.entity_id),\n          // TODO add supported entity for assist\n          conversation: undefined\n        };\n      }\n    }, {\n      kind: \"method\",\n      key: \"willUpdate\",\n      value: function willUpdate(changedProperties) {\n        var _changedProperties$ge;\n        if (changedProperties.has(\"_entities\")) {\n          this._fetchEntities();\n          return;\n        }\n        if (changedProperties.has(\"hass\") && this.hass.config.state === \"RUNNING\" && ((_changedProperties$ge = changedProperties.get(\"hass\")) === null || _changedProperties$ge === void 0 ? void 0 : _changedProperties$ge.config.state) !== this.hass.config.state) {\n          this._fetchSupportedEntities();\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this.hass || !this.exposedEntities || !this._extEntities) {\n          return html`<hass-loading-screen></hass-loading-screen>`;\n        }\n        const activeFilters = this._activeFilters(this._searchParms);\n        const filteredEntities = this._filteredEntities(this._extEntities, this.exposedEntities, this.hass.devices, this.hass.areas, this.cloudStatus, this._searchParms);\n        return html`\n      <hass-tabs-subpage-data-table\n        .hass=${this.hass}\n        .narrow=${this.narrow}\n        .backPath=${this._searchParms.has(\"historyBack\") ? undefined : \"/config\"}\n        .route=${this.route}\n        .tabs=${voiceAssistantTabs}\n        .columns=${this._columns(this.narrow, this._availableAssistants(this.cloudStatus), this._supportedEntities, this.hass.language)}\n        .data=${filteredEntities}\n        .activeFilters=${activeFilters}\n        .numHidden=${this._numHiddenEntities}\n        .hideFilterMenu=${this._selectedEntities.length > 0}\n        .searchLabel=${this.hass.localize(\"ui.panel.config.entities.picker.search\")}\n        .hiddenLabel=${this.hass.localize(\"ui.panel.config.entities.picker.filter.hidden_entities\", {\n          number: this._numHiddenEntities\n        })}\n        .filter=${this._filter}\n        selectable\n        clickable\n        @selection-changed=${this._handleSelectionChanged}\n        @clear-filter=${this._clearFilter}\n        @search-changed=${this._handleSearchChange}\n        @row-click=${this._openEditEntry}\n        id=\"entity_id\"\n        hasFab\n      >\n        ${this._selectedEntities.length ? html`\n              <div\n                class=${classMap({\n          \"header-toolbar\": this.narrow,\n          \"table-header\": !this.narrow\n        })}\n                slot=\"header\"\n              >\n                <p class=\"selected-txt\">\n                  ${this.hass.localize(\"ui.panel.config.entities.picker.selected\", {\n          number: this._selectedEntities.length\n        })}\n                </p>\n                <div class=\"header-btns\">\n                  ${!this.narrow ? html`\n                        <mwc-button @click=${this._exposeSelected}\n                          >${this.hass.localize(\"ui.panel.config.voice_assistants.expose.expose\")}</mwc-button\n                        >\n                        <mwc-button @click=${this._unexposeSelected}\n                          >${this.hass.localize(\"ui.panel.config.voice_assistants.expose.unexpose\")}</mwc-button\n                        >\n                      ` : html`\n                        <ha-icon-button\n                          id=\"enable-btn\"\n                          @click=${this._exposeSelected}\n                          .path=${mdiPlusBoxMultiple}\n                          .label=${this.hass.localize(\"ui.panel.config.voice_assistants.expose.expose\")}\n                        ></ha-icon-button>\n                        <simple-tooltip animation-delay=\"0\" for=\"enable-btn\">\n                          ${this.hass.localize(\"ui.panel.config.voice_assistants.expose.expose\")}\n                        </simple-tooltip>\n                        <ha-icon-button\n                          id=\"disable-btn\"\n                          @click=${this._unexposeSelected}\n                          .path=${mdiCloseBoxMultiple}\n                          .label=${this.hass.localize(\"ui.panel.config.voice_assistants.expose.unexpose\")}\n                        ></ha-icon-button>\n                        <simple-tooltip animation-delay=\"0\" for=\"disable-btn\">\n                          ${this.hass.localize(\"ui.panel.config.voice_assistants.expose.unexpose\")}\n                        </simple-tooltip>\n                      `}\n                </div>\n              </div>\n            ` : \"\"}\n        <ha-fab\n          slot=\"fab\"\n          .label=${this.hass.localize(\"ui.panel.config.voice_assistants.expose.add\")}\n          extended\n          @click=${this._addEntry}\n        >\n          <ha-svg-icon slot=\"icon\" .path=${mdiPlus}></ha-svg-icon>\n        </ha-fab>\n        ${this.narrow && activeFilters !== null && activeFilters !== void 0 && activeFilters.length ? html`\n              <ha-button-menu slot=\"filter-menu\" multi>\n                <ha-icon-button\n                  slot=\"trigger\"\n                  .label=${this.hass.localize(\"ui.panel.config.devices.picker.filter.filter\")}\n                  .path=${mdiFilterVariant}\n                ></ha-icon-button>\n                <mwc-list-item @click=${this._clearFilter}>\n                  ${this.hass.localize(\"ui.components.data-table.filtering_by\")}\n                  ${activeFilters.join(\", \")}\n                  <span class=\"clear\">\n                    ${this.hass.localize(\"ui.common.clear\")}\n                  </span>\n                </mwc-list-item>\n              </ha-button-menu>\n            ` : nothing}\n      </hass-tabs-subpage-data-table>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_addEntry\",\n      value: function _addEntry() {\n        const assistants = this._searchParms.has(\"assistants\") ? this._searchParms.get(\"assistants\").split(\",\") : this._availableAssistants(this.cloudStatus);\n        showExposeEntityDialog(this, {\n          filterAssistants: assistants,\n          exposedEntities: this.exposedEntities,\n          exposeEntities: entities => {\n            exposeEntities(this.hass, assistants, entities, true).then(() => fireEvent(this, \"exposed-entities-changed\"));\n          }\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleSearchChange\",\n      value: function _handleSearchChange(ev) {\n        this._filter = ev.detail.value;\n        history.replaceState({\n          filter: this._filter\n        }, \"\");\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleSelectionChanged\",\n      value: function _handleSelectionChanged(ev) {\n        this._selectedEntities = ev.detail.value;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_removeEntity\",\n      value() {\n        return ev => {\n          ev.stopPropagation();\n          const entityId = ev.currentTarget.closest(\".mdc-data-table__row\").rowId;\n          const assistants = this._searchParms.has(\"assistants\") ? this._searchParms.get(\"assistants\").split(\",\") : this._availableAssistants(this.cloudStatus);\n          exposeEntities(this.hass, assistants, [entityId], false).then(() => fireEvent(this, \"exposed-entities-changed\"));\n        };\n      }\n    }, {\n      kind: \"method\",\n      key: \"_unexposeSelected\",\n      value: function _unexposeSelected() {\n        const assistants = this._searchParms.has(\"assistants\") ? this._searchParms.get(\"assistants\").split(\",\") : this._availableAssistants(this.cloudStatus);\n        showConfirmationDialog(this, {\n          title: this.hass.localize(\"ui.panel.config.voice_assistants.expose.unexpose_confirm_title\"),\n          text: this.hass.localize(\"ui.panel.config.voice_assistants.expose.unexpose_confirm_text\", {\n            assistants: assistants.map(ass => voiceAssistants[ass].name).join(\", \"),\n            entities: this._selectedEntities.length\n          }),\n          confirmText: this.hass.localize(\"ui.panel.config.voice_assistants.expose.unexpose\"),\n          dismissText: this.hass.localize(\"ui.common.cancel\"),\n          confirm: () => {\n            exposeEntities(this.hass, assistants, this._selectedEntities, false).then(() => fireEvent(this, \"exposed-entities-changed\"));\n            this._clearSelection();\n          }\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_exposeSelected\",\n      value: function _exposeSelected() {\n        const assistants = this._searchParms.has(\"assistants\") ? this._searchParms.get(\"assistants\").split(\",\") : this._availableAssistants(this.cloudStatus);\n        showConfirmationDialog(this, {\n          title: this.hass.localize(\"ui.panel.config.voice_assistants.expose.expose_confirm_title\"),\n          text: this.hass.localize(\"ui.panel.config.voice_assistants.expose.expose_confirm_text\", {\n            assistants: assistants.map(ass => voiceAssistants[ass].name).join(\", \"),\n            entities: this._selectedEntities.length\n          }),\n          confirmText: this.hass.localize(\"ui.panel.config.voice_assistants.expose.expose\"),\n          dismissText: this.hass.localize(\"ui.common.cancel\"),\n          confirm: () => {\n            exposeEntities(this.hass, assistants, this._selectedEntities, true).then(() => fireEvent(this, \"exposed-entities-changed\"));\n            this._clearSelection();\n          }\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_clearSelection\",\n      value: function _clearSelection() {\n        this._dataTable.clearSelection();\n      }\n    }, {\n      kind: \"method\",\n      key: \"_openEditEntry\",\n      value: function _openEditEntry(ev) {\n        var _this$_extEntities;\n        const entityId = ev.detail.id;\n        showVoiceSettingsDialog(this, {\n          entityId,\n          exposed: this.exposedEntities[entityId],\n          extEntityReg: (_this$_extEntities = this._extEntities) === null || _this$_extEntities === void 0 ? void 0 : _this$_extEntities[entityId],\n          exposedEntitiesChanged: () => {\n            fireEvent(this, \"exposed-entities-changed\");\n          }\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_clearFilter\",\n      value: function _clearFilter() {\n        if (this._activeFilters(this._searchParms)) {\n          navigate(window.location.pathname, {\n            replace: true\n          });\n        }\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [haStyle, css`\n        hass-loading-screen {\n          --app-header-background-color: var(--sidebar-background-color);\n          --app-header-text-color: var(--sidebar-text-color);\n        }\n        .table-header {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          height: 56px;\n          background-color: var(--mdc-text-field-fill-color, whitesmoke);\n          border-bottom: 1px solid\n            var(--mdc-text-field-idle-line-color, rgba(0, 0, 0, 0.42));\n          box-sizing: border-box;\n        }\n        .header-toolbar {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          color: var(--secondary-text-color);\n          position: relative;\n          top: -4px;\n        }\n        .selected-txt {\n          font-weight: bold;\n          padding-left: 16px;\n          padding-inline-start: 16px;\n          direction: var(--direction);\n        }\n        .table-header .selected-txt {\n          margin-top: 20px;\n        }\n        .header-toolbar .selected-txt {\n          font-size: 16px;\n        }\n        .header-toolbar .header-btns {\n          margin-right: -12px;\n          margin-inline-end: -12px;\n          direction: var(--direction);\n        }\n        .header-btns {\n          display: flex;\n        }\n        .header-btns > mwc-button,\n        .header-btns > ha-icon-button {\n          margin: 8px;\n        }\n        ha-button-menu {\n          margin-left: 8px;\n          margin-inline-start: 8px;\n          margin-inline-end: initial;\n        }\n        .clear {\n          color: var(--primary-color);\n          padding-left: 8px;\n          padding-inline-start: 8px;\n          text-transform: uppercase;\n          direction: var(--direction);\n        }\n      `];\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["consume","mdiCloseBoxMultiple","mdiCloseCircleOutline","mdiFilterVariant","mdiPlus","mdiPlusBoxMultiple","css","html","LitElement","nothing","customElement","property","query","state","classMap","ifDefined","memoize","fireEvent","computeStateName","generateFilter","isEmptyFilter","navigate","fetchCloudAlexaEntities","entitiesContext","getExtendedEntityRegistryEntries","exposeEntities","voiceAssistants","fetchCloudGoogleEntities","showConfirmationDialog","haStyle","voiceAssistantTabs","showExposeEntityDialog","showVoiceSettingsDialog","VoiceAssistantsExpose","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","type","Boolean","context","subscribe","_history$state","history","filter","URLSearchParams","window","location","search","filters","filterTexts","forEach","assistants","split","assistant","_voiceAssistants$assi","push","name","length","undefined","narrow","availableAssistants","supportedEntities","_language","icon","title","hidden","template","entry","_entry$entity","entity","hass","main","localize","sortable","filterable","direction","grows","entity_id","area","width","map","_entry$manAssistants","supported","includes","manual","manAssistants","aliases","count","remove","_removeEntity","googleFilter","alexaFilter","google","include_domains","include_entities","exclude_domains","exclude_entities","amazon","cloudStatus","googleEnabled","logged_in","prefs","google_enabled","alexaEnabled","alexa_enabled","showAssistants","Object","keys","splice","indexOf","entities","exposedEntities","devices","areas","_availableAssistants","alexaManual","alexa_entities","googleManual","google_entities","result","filteredEntities","values","states","some","assis","_exposedEntities$enti","startLength","filteredAssistants","_exposedEntities$enti2","entityState","_entry$area_id","_devices","areaId","area_id","device_id","_exposedEntities$enti3","_numHiddenEntities","manFilterFuncs","_getEntityFilterFuncs","entityId","ass","_entry$area_id2","_devices2","_exposedEntities$enti4","connectedCallback","_get","_getPrototypeOf","prototype","call","addEventListener","_locationChanged","_popState","disconnectedCallback","removeEventListener","substring","_searchParms","toString","_fetchEntities","_extEntities","_entities","_fetchSupportedEntities","_this$cloudStatus","_this$cloudStatus2","alexaEntitiesProm","googleEntitiesProm","alexaEntities","googleEntities","Promise","all","_supportedEntities","conversation","willUpdate","changedProperties","_changedProperties$ge","has","config","get","render","activeFilters","_activeFilters","_filteredEntities","route","_columns","language","_selectedEntities","number","_filter","_handleSelectionChanged","_clearFilter","_handleSearchChange","_openEditEntry","_exposeSelected","_unexposeSelected","_addEntry","join","filterAssistants","then","ev","detail","replaceState","stopPropagation","currentTarget","closest","rowId","text","confirmText","dismissText","confirm","_clearSelection","_dataTable","clearSelection","_this$_extEntities","id","exposed","extEntityReg","exposedEntitiesChanged","pathname","replace","static","styles"],"sources":["/Users/sercanardil/Desktop/frontend/src/panels/config/voice-assistants/ha-config-voice-assistants-expose.ts"],"sourcesContent":["import { consume } from \"@lit-labs/context\";\nimport \"@lrnwebcomponents/simple-tooltip/simple-tooltip\";\nimport {\n  mdiCloseBoxMultiple,\n  mdiCloseCircleOutline,\n  mdiFilterVariant,\n  mdiPlus,\n  mdiPlusBoxMultiple,\n} from \"@mdi/js\";\nimport {\n  css,\n  CSSResultGroup,\n  html,\n  LitElement,\n  nothing,\n  PropertyValues,\n} from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport { ifDefined } from \"lit/directives/if-defined\";\nimport memoize from \"memoize-one\";\nimport { fireEvent, HASSDomEvent } from \"../../../common/dom/fire_event\";\nimport { computeStateName } from \"../../../common/entity/compute_state_name\";\nimport {\n  EntityFilter,\n  generateFilter,\n  isEmptyFilter,\n} from \"../../../common/entity/entity_filter\";\nimport { navigate } from \"../../../common/navigate\";\nimport {\n  DataTableColumnContainer,\n  DataTableRowData,\n  RowClickedEvent,\n  SelectionChangedEvent,\n} from \"../../../components/data-table/ha-data-table\";\nimport \"../../../components/ha-fab\";\nimport { AlexaEntity, fetchCloudAlexaEntities } from \"../../../data/alexa\";\nimport { CloudStatus, CloudStatusLoggedIn } from \"../../../data/cloud\";\nimport { entitiesContext } from \"../../../data/context\";\nimport {\n  ExtEntityRegistryEntry,\n  getExtendedEntityRegistryEntries,\n} from \"../../../data/entity_registry\";\nimport {\n  exposeEntities,\n  ExposeEntitySettings,\n  voiceAssistants,\n} from \"../../../data/expose\";\nimport {\n  fetchCloudGoogleEntities,\n  GoogleEntity,\n} from \"../../../data/google_assistant\";\nimport { showConfirmationDialog } from \"../../../dialogs/generic/show-dialog-box\";\nimport \"../../../layouts/hass-loading-screen\";\nimport \"../../../layouts/hass-tabs-subpage-data-table\";\nimport type { HaTabsSubpageDataTable } from \"../../../layouts/hass-tabs-subpage-data-table\";\nimport { haStyle } from \"../../../resources/styles\";\nimport { HomeAssistant, Route } from \"../../../types\";\nimport \"./expose/expose-assistant-icon\";\nimport { voiceAssistantTabs } from \"./ha-config-voice-assistants\";\nimport { showExposeEntityDialog } from \"./show-dialog-expose-entity\";\nimport { showVoiceSettingsDialog } from \"./show-dialog-voice-settings\";\n\n@customElement(\"ha-config-voice-assistants-expose\")\nexport class VoiceAssistantsExpose extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public cloudStatus?: CloudStatus;\n\n  @property({ type: Boolean }) public isWide = false;\n\n  @property({ type: Boolean }) public narrow = false;\n\n  @property({ attribute: false }) public route!: Route;\n\n  @property({ attribute: false }) public exposedEntities?: Record<\n    string,\n    ExposeEntitySettings\n  >;\n\n  @state()\n  @consume({ context: entitiesContext, subscribe: true })\n  _entities!: HomeAssistant[\"entities\"];\n\n  @state() private _extEntities?: Record<string, ExtEntityRegistryEntry>;\n\n  @state() private _filter: string = history.state?.filter || \"\";\n\n  @state() private _numHiddenEntities = 0;\n\n  @state() private _searchParms = new URLSearchParams(window.location.search);\n\n  @state() private _selectedEntities: string[] = [];\n\n  @state() private _supportedEntities?: Record<\n    \"cloud.google_assistant\" | \"cloud.alexa\" | \"conversation\",\n    string[] | undefined\n  >;\n\n  @query(\"hass-tabs-subpage-data-table\", true)\n  private _dataTable!: HaTabsSubpageDataTable;\n\n  private _activeFilters = memoize(\n    (filters: URLSearchParams): string[] | undefined => {\n      const filterTexts: string[] = [];\n      filters.forEach((value, key) => {\n        switch (key) {\n          case \"assistants\": {\n            const assistants = value.split(\",\");\n            assistants.forEach((assistant) => {\n              filterTexts.push(voiceAssistants[assistant]?.name || assistant);\n            });\n          }\n        }\n      });\n      return filterTexts.length ? filterTexts : undefined;\n    }\n  );\n\n  private _columns = memoize(\n    (\n      narrow: boolean,\n      availableAssistants: string[],\n      supportedEntities:\n        | Record<\n            \"cloud.google_assistant\" | \"cloud.alexa\" | \"conversation\",\n            string[] | undefined\n          >\n        | undefined,\n      _language: string\n    ): DataTableColumnContainer => ({\n      icon: {\n        title: \"\",\n        type: \"icon\",\n        hidden: narrow,\n        template: (entry) => html`\n          <ha-state-icon\n            title=${ifDefined(entry.entity?.state)}\n            .stateObj=${entry.entity}\n            .hass=${this.hass}\n          ></ha-state-icon>\n        `,\n      },\n      name: {\n        main: true,\n        title: this.hass.localize(\n          \"ui.panel.config.voice_assistants.expose.headers.name\"\n        ),\n        sortable: true,\n        filterable: true,\n        direction: \"asc\",\n        grows: true,\n        template: (entry) => html`\n          ${entry.name}<br />\n          <div class=\"secondary\">${entry.entity_id}</div>\n        `,\n      },\n      area: {\n        title: this.hass.localize(\n          \"ui.panel.config.voice_assistants.expose.headers.area\"\n        ),\n        sortable: true,\n        hidden: narrow,\n        filterable: true,\n        width: \"15%\",\n      },\n      assistants: {\n        title: this.hass.localize(\n          \"ui.panel.config.voice_assistants.expose.headers.assistants\"\n        ),\n        sortable: true,\n        filterable: true,\n        width: \"160px\",\n        type: \"flex\",\n        template: (entry) =>\n          html`${availableAssistants.map((key) => {\n            const supported =\n              !supportedEntities?.[key] ||\n              supportedEntities[key].includes(entry.entity_id);\n            const manual = entry.manAssistants?.includes(key);\n            return entry.assistants.includes(key)\n              ? html`\n                  <voice-assistants-expose-assistant-icon\n                    .assistant=${key}\n                    .hass=${this.hass}\n                    .manual=${manual}\n                    .unsupported=${!supported}\n                  >\n                  </voice-assistants-expose-assistant-icon>\n                `\n              : html`<div style=\"width: 40px;\"></div>`;\n          })}`,\n      },\n      aliases: {\n        title: this.hass.localize(\n          \"ui.panel.config.voice_assistants.expose.headers.aliases\"\n        ),\n        sortable: true,\n        filterable: true,\n        hidden: narrow,\n        width: \"15%\",\n        template: (entry) =>\n          entry.aliases.length === 0\n            ? \"-\"\n            : entry.aliases.length === 1\n              ? entry.aliases[0]\n              : this.hass.localize(\n                  \"ui.panel.config.voice_assistants.expose.aliases\",\n                  { count: entry.aliases.length }\n                ),\n      },\n      remove: {\n        title: \"\",\n        type: \"icon-button\",\n        hidden: narrow,\n        template: () =>\n          html`<ha-icon-button\n            @click=${this._removeEntity}\n            .path=${mdiCloseCircleOutline}\n          ></ha-icon-button>`,\n      },\n      // For search\n      entity_id: {\n        title: \"\",\n        hidden: true,\n        filterable: true,\n      },\n    })\n  );\n\n  private _getEntityFilterFuncs = memoize(\n    (googleFilter: EntityFilter, alexaFilter: EntityFilter) => ({\n      google: generateFilter(\n        googleFilter.include_domains,\n        googleFilter.include_entities,\n        googleFilter.exclude_domains,\n        googleFilter.exclude_entities\n      ),\n      amazon: generateFilter(\n        alexaFilter.include_domains,\n        alexaFilter.include_entities,\n        alexaFilter.exclude_domains,\n        alexaFilter.exclude_entities\n      ),\n    })\n  );\n\n  private _availableAssistants = memoize(\n    (cloudStatus: CloudStatus | undefined) => {\n      const googleEnabled =\n        cloudStatus?.logged_in === true &&\n        cloudStatus.prefs.google_enabled === true;\n      const alexaEnabled =\n        cloudStatus?.logged_in === true &&\n        cloudStatus.prefs.alexa_enabled === true;\n\n      const showAssistants = [...Object.keys(voiceAssistants)];\n\n      if (!googleEnabled) {\n        showAssistants.splice(\n          showAssistants.indexOf(\"cloud.google_assistant\"),\n          1\n        );\n      }\n\n      if (!alexaEnabled) {\n        showAssistants.splice(showAssistants.indexOf(\"cloud.alexa\"), 1);\n      }\n\n      return showAssistants;\n    }\n  );\n\n  private _filteredEntities = memoize(\n    (\n      entities: Record<string, ExtEntityRegistryEntry>,\n      exposedEntities: Record<string, ExposeEntitySettings>,\n      devices: HomeAssistant[\"devices\"],\n      areas: HomeAssistant[\"areas\"],\n      cloudStatus: CloudStatus | undefined,\n      filters: URLSearchParams\n    ) => {\n      const googleEnabled =\n        cloudStatus?.logged_in === true &&\n        cloudStatus.prefs.google_enabled === true;\n      const alexaEnabled =\n        cloudStatus?.logged_in === true &&\n        cloudStatus.prefs.alexa_enabled === true;\n\n      const showAssistants = [...this._availableAssistants(cloudStatus)];\n\n      const alexaManual =\n        alexaEnabled &&\n        !isEmptyFilter(\n          (this.cloudStatus as CloudStatusLoggedIn).alexa_entities\n        );\n      const googleManual =\n        googleEnabled &&\n        !isEmptyFilter(\n          (this.cloudStatus as CloudStatusLoggedIn).google_entities\n        );\n\n      if (googleManual) {\n        showAssistants.splice(\n          showAssistants.indexOf(\"cloud.google_assistant\"),\n          1\n        );\n      }\n\n      if (alexaManual) {\n        showAssistants.splice(showAssistants.indexOf(\"cloud.alexa\"), 1);\n      }\n\n      const result: Record<string, DataTableRowData> = {};\n\n      let filteredEntities = Object.values(this.hass.states);\n\n      filteredEntities = filteredEntities.filter((entity) =>\n        showAssistants.some(\n          (assis) => exposedEntities?.[entity.entity_id]?.[assis]\n        )\n      );\n\n      // If nothing gets filtered, this is our correct count of entities\n      const startLength = filteredEntities.length;\n\n      let filteredAssistants: string[];\n\n      filters.forEach((value, key) => {\n        if (key === \"assistants\") {\n          filteredAssistants = value.split(\",\");\n          filteredEntities = filteredEntities.filter((entity) =>\n            filteredAssistants.some(\n              (assis) =>\n                !(assis === \"cloud.alexa\" && alexaManual) &&\n                !(assis === \"cloud.google_assistant\" && googleManual) &&\n                exposedEntities?.[entity.entity_id]?.[assis]\n            )\n          );\n        }\n      });\n\n      for (const entityState of filteredEntities) {\n        const entry: ExtEntityRegistryEntry | undefined =\n          entities[entityState.entity_id];\n        const areaId =\n          entry?.area_id ??\n          (entry?.device_id ? devices[entry.device_id!]?.area_id : undefined);\n        const area = areaId ? areas[areaId] : undefined;\n\n        result[entityState.entity_id] = {\n          entity_id: entityState.entity_id,\n          entity: entityState,\n          name:\n            computeStateName(entityState) ||\n            this.hass.localize(\n              \"ui.panel.config.entities.picker.unnamed_entity\"\n            ),\n          area: area ? area.name : \"—\",\n          assistants: Object.keys(\n            exposedEntities?.[entityState.entity_id]\n          ).filter(\n            (key) =>\n              showAssistants.includes(key) &&\n              exposedEntities?.[entityState.entity_id]?.[key]\n          ),\n          aliases: entry?.aliases || [],\n        };\n      }\n\n      this._numHiddenEntities = startLength - Object.values(result).length;\n\n      if (alexaManual || googleManual) {\n        const manFilterFuncs = this._getEntityFilterFuncs(\n          (this.cloudStatus as CloudStatusLoggedIn).google_entities,\n          (this.cloudStatus as CloudStatusLoggedIn).alexa_entities\n        );\n        Object.keys(this.hass.states).forEach((entityId) => {\n          const assistants: string[] = [];\n          if (alexaManual && manFilterFuncs.amazon(entityId)) {\n            assistants.push(\"cloud.alexa\");\n          }\n          if (googleManual && manFilterFuncs.google(entityId)) {\n            assistants.push(\"cloud.google_assistant\");\n          }\n          if (!assistants.length) {\n            return;\n          }\n          if (entityId in result) {\n            result[entityId].assistants.push(...assistants);\n            result[entityId].manAssistants = assistants;\n          } else if (\n            !filteredAssistants ||\n            filteredAssistants.some((ass) => assistants.includes(ass))\n          ) {\n            const entityState = this.hass.states[entityId];\n            const entry: ExtEntityRegistryEntry | undefined =\n              entities[entityId];\n            const areaId =\n              entry?.area_id ??\n              (entry?.device_id\n                ? devices[entry.device_id!]?.area_id\n                : undefined);\n            const area = areaId ? areas[areaId] : undefined;\n            result[entityId] = {\n              entity_id: entityState.entity_id,\n              entity: entityState,\n              name: computeStateName(entityState),\n              area: area ? area.name : \"—\",\n              assistants: [\n                ...(exposedEntities\n                  ? Object.keys(\n                      exposedEntities?.[entityState.entity_id]\n                    ).filter(\n                      (key) =>\n                        showAssistants.includes(key) &&\n                        exposedEntities?.[entityState.entity_id]?.[key]\n                    )\n                  : []),\n                ...assistants,\n              ],\n              manAssistants: assistants,\n              aliases: entry?.aliases || [],\n            };\n          }\n        });\n      }\n\n      return Object.values(result);\n    }\n  );\n\n  public connectedCallback() {\n    super.connectedCallback();\n    window.addEventListener(\"location-changed\", this._locationChanged);\n    window.addEventListener(\"popstate\", this._popState);\n  }\n\n  disconnectedCallback(): void {\n    super.disconnectedCallback();\n    window.removeEventListener(\"location-changed\", this._locationChanged);\n    window.removeEventListener(\"popstate\", this._popState);\n  }\n\n  private _locationChanged = () => {\n    if (window.location.search.substring(1) !== this._searchParms.toString()) {\n      this._searchParms = new URLSearchParams(window.location.search);\n    }\n  };\n\n  private _popState = () => {\n    if (window.location.search.substring(1) !== this._searchParms.toString()) {\n      this._searchParms = new URLSearchParams(window.location.search);\n    }\n  };\n\n  private async _fetchEntities() {\n    this._extEntities = await getExtendedEntityRegistryEntries(\n      this.hass,\n      Object.keys(this._entities)\n    );\n    this._fetchSupportedEntities();\n  }\n\n  private async _fetchSupportedEntities() {\n    let alexaEntitiesProm: Promise<AlexaEntity[]> | undefined;\n    let googleEntitiesProm: Promise<GoogleEntity[]> | undefined;\n    if (this.cloudStatus?.logged_in && this.cloudStatus.prefs.alexa_enabled) {\n      alexaEntitiesProm = fetchCloudAlexaEntities(this.hass);\n    }\n    if (this.cloudStatus?.logged_in && this.cloudStatus.prefs.google_enabled) {\n      googleEntitiesProm = fetchCloudGoogleEntities(this.hass);\n    }\n    const [alexaEntities, googleEntities] = await Promise.all([\n      alexaEntitiesProm,\n      googleEntitiesProm,\n    ]);\n    this._supportedEntities = {\n      \"cloud.alexa\": alexaEntities?.map((entity) => entity.entity_id),\n      \"cloud.google_assistant\": googleEntities?.map(\n        (entity) => entity.entity_id\n      ),\n      // TODO add supported entity for assist\n      conversation: undefined,\n    };\n  }\n\n  public willUpdate(changedProperties: PropertyValues): void {\n    if (changedProperties.has(\"_entities\")) {\n      this._fetchEntities();\n      return;\n    }\n    if (\n      changedProperties.has(\"hass\") &&\n      this.hass.config.state === \"RUNNING\" &&\n      changedProperties.get(\"hass\")?.config.state !== this.hass.config.state\n    ) {\n      this._fetchSupportedEntities();\n    }\n  }\n\n  protected render() {\n    if (!this.hass || !this.exposedEntities || !this._extEntities) {\n      return html`<hass-loading-screen></hass-loading-screen>`;\n    }\n    const activeFilters = this._activeFilters(this._searchParms);\n\n    const filteredEntities = this._filteredEntities(\n      this._extEntities,\n      this.exposedEntities,\n      this.hass.devices,\n      this.hass.areas,\n      this.cloudStatus,\n      this._searchParms\n    );\n\n    return html`\n      <hass-tabs-subpage-data-table\n        .hass=${this.hass}\n        .narrow=${this.narrow}\n        .backPath=${this._searchParms.has(\"historyBack\")\n          ? undefined\n          : \"/config\"}\n        .route=${this.route}\n        .tabs=${voiceAssistantTabs}\n        .columns=${this._columns(\n          this.narrow,\n          this._availableAssistants(this.cloudStatus),\n          this._supportedEntities,\n          this.hass.language\n        )}\n        .data=${filteredEntities}\n        .activeFilters=${activeFilters}\n        .numHidden=${this._numHiddenEntities}\n        .hideFilterMenu=${this._selectedEntities.length > 0}\n        .searchLabel=${this.hass.localize(\n          \"ui.panel.config.entities.picker.search\"\n        )}\n        .hiddenLabel=${this.hass.localize(\n          \"ui.panel.config.entities.picker.filter.hidden_entities\",\n          { number: this._numHiddenEntities }\n        )}\n        .filter=${this._filter}\n        selectable\n        clickable\n        @selection-changed=${this._handleSelectionChanged}\n        @clear-filter=${this._clearFilter}\n        @search-changed=${this._handleSearchChange}\n        @row-click=${this._openEditEntry}\n        id=\"entity_id\"\n        hasFab\n      >\n        ${this._selectedEntities.length\n          ? html`\n              <div\n                class=${classMap({\n                  \"header-toolbar\": this.narrow,\n                  \"table-header\": !this.narrow,\n                })}\n                slot=\"header\"\n              >\n                <p class=\"selected-txt\">\n                  ${this.hass.localize(\n                    \"ui.panel.config.entities.picker.selected\",\n                    { number: this._selectedEntities.length }\n                  )}\n                </p>\n                <div class=\"header-btns\">\n                  ${!this.narrow\n                    ? html`\n                        <mwc-button @click=${this._exposeSelected}\n                          >${this.hass.localize(\n                            \"ui.panel.config.voice_assistants.expose.expose\"\n                          )}</mwc-button\n                        >\n                        <mwc-button @click=${this._unexposeSelected}\n                          >${this.hass.localize(\n                            \"ui.panel.config.voice_assistants.expose.unexpose\"\n                          )}</mwc-button\n                        >\n                      `\n                    : html`\n                        <ha-icon-button\n                          id=\"enable-btn\"\n                          @click=${this._exposeSelected}\n                          .path=${mdiPlusBoxMultiple}\n                          .label=${this.hass.localize(\n                            \"ui.panel.config.voice_assistants.expose.expose\"\n                          )}\n                        ></ha-icon-button>\n                        <simple-tooltip animation-delay=\"0\" for=\"enable-btn\">\n                          ${this.hass.localize(\n                            \"ui.panel.config.voice_assistants.expose.expose\"\n                          )}\n                        </simple-tooltip>\n                        <ha-icon-button\n                          id=\"disable-btn\"\n                          @click=${this._unexposeSelected}\n                          .path=${mdiCloseBoxMultiple}\n                          .label=${this.hass.localize(\n                            \"ui.panel.config.voice_assistants.expose.unexpose\"\n                          )}\n                        ></ha-icon-button>\n                        <simple-tooltip animation-delay=\"0\" for=\"disable-btn\">\n                          ${this.hass.localize(\n                            \"ui.panel.config.voice_assistants.expose.unexpose\"\n                          )}\n                        </simple-tooltip>\n                      `}\n                </div>\n              </div>\n            `\n          : \"\"}\n        <ha-fab\n          slot=\"fab\"\n          .label=${this.hass.localize(\n            \"ui.panel.config.voice_assistants.expose.add\"\n          )}\n          extended\n          @click=${this._addEntry}\n        >\n          <ha-svg-icon slot=\"icon\" .path=${mdiPlus}></ha-svg-icon>\n        </ha-fab>\n        ${this.narrow && activeFilters?.length\n          ? html`\n              <ha-button-menu slot=\"filter-menu\" multi>\n                <ha-icon-button\n                  slot=\"trigger\"\n                  .label=${this.hass!.localize(\n                    \"ui.panel.config.devices.picker.filter.filter\"\n                  )}\n                  .path=${mdiFilterVariant}\n                ></ha-icon-button>\n                <mwc-list-item @click=${this._clearFilter}>\n                  ${this.hass.localize(\"ui.components.data-table.filtering_by\")}\n                  ${activeFilters.join(\", \")}\n                  <span class=\"clear\">\n                    ${this.hass.localize(\"ui.common.clear\")}\n                  </span>\n                </mwc-list-item>\n              </ha-button-menu>\n            `\n          : nothing}\n      </hass-tabs-subpage-data-table>\n    `;\n  }\n\n  private _addEntry() {\n    const assistants = this._searchParms.has(\"assistants\")\n      ? this._searchParms.get(\"assistants\")!.split(\",\")\n      : this._availableAssistants(this.cloudStatus);\n    showExposeEntityDialog(this, {\n      filterAssistants: assistants,\n      exposedEntities: this.exposedEntities!,\n      exposeEntities: (entities) => {\n        exposeEntities(this.hass, assistants, entities, true).then(() =>\n          fireEvent(this, \"exposed-entities-changed\")\n        );\n      },\n    });\n  }\n\n  private _handleSearchChange(ev: CustomEvent) {\n    this._filter = ev.detail.value;\n    history.replaceState({ filter: this._filter }, \"\");\n  }\n\n  private _handleSelectionChanged(\n    ev: HASSDomEvent<SelectionChangedEvent>\n  ): void {\n    this._selectedEntities = ev.detail.value;\n  }\n\n  private _removeEntity = (ev) => {\n    ev.stopPropagation();\n    const entityId = ev.currentTarget.closest(\".mdc-data-table__row\").rowId;\n    const assistants = this._searchParms.has(\"assistants\")\n      ? this._searchParms.get(\"assistants\")!.split(\",\")\n      : this._availableAssistants(this.cloudStatus);\n    exposeEntities(this.hass, assistants, [entityId], false).then(() =>\n      fireEvent(this, \"exposed-entities-changed\")\n    );\n  };\n\n  private _unexposeSelected() {\n    const assistants = this._searchParms.has(\"assistants\")\n      ? this._searchParms.get(\"assistants\")!.split(\",\")\n      : this._availableAssistants(this.cloudStatus);\n    showConfirmationDialog(this, {\n      title: this.hass.localize(\n        \"ui.panel.config.voice_assistants.expose.unexpose_confirm_title\"\n      ),\n      text: this.hass.localize(\n        \"ui.panel.config.voice_assistants.expose.unexpose_confirm_text\",\n        {\n          assistants: assistants\n            .map((ass) => voiceAssistants[ass].name)\n            .join(\", \"),\n          entities: this._selectedEntities.length,\n        }\n      ),\n      confirmText: this.hass.localize(\n        \"ui.panel.config.voice_assistants.expose.unexpose\"\n      ),\n      dismissText: this.hass.localize(\"ui.common.cancel\"),\n      confirm: () => {\n        exposeEntities(\n          this.hass,\n          assistants,\n          this._selectedEntities,\n          false\n        ).then(() => fireEvent(this, \"exposed-entities-changed\"));\n        this._clearSelection();\n      },\n    });\n  }\n\n  private _exposeSelected() {\n    const assistants = this._searchParms.has(\"assistants\")\n      ? this._searchParms.get(\"assistants\")!.split(\",\")\n      : this._availableAssistants(this.cloudStatus);\n    showConfirmationDialog(this, {\n      title: this.hass.localize(\n        \"ui.panel.config.voice_assistants.expose.expose_confirm_title\"\n      ),\n      text: this.hass.localize(\n        \"ui.panel.config.voice_assistants.expose.expose_confirm_text\",\n        {\n          assistants: assistants\n            .map((ass) => voiceAssistants[ass].name)\n            .join(\", \"),\n          entities: this._selectedEntities.length,\n        }\n      ),\n      confirmText: this.hass.localize(\n        \"ui.panel.config.voice_assistants.expose.expose\"\n      ),\n      dismissText: this.hass.localize(\"ui.common.cancel\"),\n      confirm: () => {\n        exposeEntities(\n          this.hass,\n          assistants,\n          this._selectedEntities,\n          true\n        ).then(() => fireEvent(this, \"exposed-entities-changed\"));\n        this._clearSelection();\n      },\n    });\n  }\n\n  private _clearSelection() {\n    this._dataTable.clearSelection();\n  }\n\n  private _openEditEntry(ev: CustomEvent): void {\n    const entityId = (ev.detail as RowClickedEvent).id;\n    showVoiceSettingsDialog(this, {\n      entityId,\n      exposed: this.exposedEntities![entityId],\n      extEntityReg: this._extEntities?.[entityId],\n      exposedEntitiesChanged: () => {\n        fireEvent(this, \"exposed-entities-changed\");\n      },\n    });\n  }\n\n  private _clearFilter() {\n    if (this._activeFilters(this._searchParms)) {\n      navigate(window.location.pathname, { replace: true });\n    }\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyle,\n      css`\n        hass-loading-screen {\n          --app-header-background-color: var(--sidebar-background-color);\n          --app-header-text-color: var(--sidebar-text-color);\n        }\n        .table-header {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          height: 56px;\n          background-color: var(--mdc-text-field-fill-color, whitesmoke);\n          border-bottom: 1px solid\n            var(--mdc-text-field-idle-line-color, rgba(0, 0, 0, 0.42));\n          box-sizing: border-box;\n        }\n        .header-toolbar {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          color: var(--secondary-text-color);\n          position: relative;\n          top: -4px;\n        }\n        .selected-txt {\n          font-weight: bold;\n          padding-left: 16px;\n          padding-inline-start: 16px;\n          direction: var(--direction);\n        }\n        .table-header .selected-txt {\n          margin-top: 20px;\n        }\n        .header-toolbar .selected-txt {\n          font-size: 16px;\n        }\n        .header-toolbar .header-btns {\n          margin-right: -12px;\n          margin-inline-end: -12px;\n          direction: var(--direction);\n        }\n        .header-btns {\n          display: flex;\n        }\n        .header-btns > mwc-button,\n        .header-btns > ha-icon-button {\n          margin: 8px;\n        }\n        ha-button-menu {\n          margin-left: 8px;\n          margin-inline-start: 8px;\n          margin-inline-end: initial;\n        }\n        .clear {\n          color: var(--primary-color);\n          padding-left: 8px;\n          padding-inline-start: 8px;\n          text-transform: uppercase;\n          direction: var(--direction);\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-config-voice-assistants-expose\": VoiceAssistantsExpose;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}