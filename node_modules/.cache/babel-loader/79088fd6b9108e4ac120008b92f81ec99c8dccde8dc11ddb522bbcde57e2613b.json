{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport memoizeOne from \"memoize-one\";\nimport { html, LitElement } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport \"../ha-selector/ha-selector-select\";\nexport let HaFormSelect = _decorate([customElement(\"ha-form-select\")], function (_initialize, _LitElement) {\n  class HaFormSelect extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaFormSelect,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"schema\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"data\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"label\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"helper\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"disabled\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_selectSchema\",\n      value() {\n        return memoizeOne(options => ({\n          select: {\n            options: options.map(option => ({\n              value: option[0],\n              label: option[1]\n            }))\n          }\n        }));\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        return html`\n      <ha-selector-select\n        .hass=${this.hass}\n        .schema=${this.schema}\n        .value=${this.data}\n        .label=${this.label}\n        .helper=${this.helper}\n        .disabled=${this.disabled}\n        .required=${this.schema.required}\n        .selector=${this._selectSchema(this.schema.options)}\n        @value-changed=${this._valueChanged}\n      ></ha-selector-select>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_valueChanged\",\n      value: function _valueChanged(ev) {\n        ev.stopPropagation();\n        let value = ev.detail.value;\n        if (value === this.data) {\n          return;\n        }\n        if (value === \"\") {\n          value = undefined;\n        }\n        fireEvent(this, \"value-changed\", {\n          value\n        });\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["memoizeOne","html","LitElement","customElement","property","fireEvent","HaFormSelect","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","type","Boolean","options","select","map","option","label","render","hass","schema","data","helper","disabled","required","_selectSchema","_valueChanged","ev","stopPropagation","detail","undefined"],"sources":["/workspaces/frontend/src/components/ha-form/ha-form-select.ts"],"sourcesContent":["import memoizeOne from \"memoize-one\";\nimport { html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport type { HomeAssistant } from \"../../types\";\nimport type {\n  HaFormElement,\n  HaFormSelectData,\n  HaFormSelectSchema,\n} from \"./types\";\nimport type { SelectSelector } from \"../../data/selector\";\nimport \"../ha-selector/ha-selector-select\";\n\n@customElement(\"ha-form-select\")\nexport class HaFormSelect extends LitElement implements HaFormElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public schema!: HaFormSelectSchema;\n\n  @property({ attribute: false }) public data!: HaFormSelectData;\n\n  @property() public label?: string;\n\n  @property() public helper?: string;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  private _selectSchema = memoizeOne(\n    (options): SelectSelector => ({\n      select: {\n        options: options.map((option) => ({\n          value: option[0],\n          label: option[1],\n        })),\n      },\n    })\n  );\n\n  protected render(): TemplateResult {\n    return html`\n      <ha-selector-select\n        .hass=${this.hass}\n        .schema=${this.schema}\n        .value=${this.data}\n        .label=${this.label}\n        .helper=${this.helper}\n        .disabled=${this.disabled}\n        .required=${this.schema.required}\n        .selector=${this._selectSchema(this.schema.options)}\n        @value-changed=${this._valueChanged}\n      ></ha-selector-select>\n    `;\n  }\n\n  private _valueChanged(ev: CustomEvent) {\n    ev.stopPropagation();\n    let value: string | undefined = ev.detail.value;\n\n    if (value === this.data) {\n      return;\n    }\n\n    if (value === \"\") {\n      value = undefined;\n    }\n\n    fireEvent(this, \"value-changed\", {\n      value,\n    });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-form-select\": HaFormSelect;\n  }\n}\n"],"mappings":";AAAA,OAAOA,UAAU,MAAM,aAAa;AACpC,SAASC,IAAI,EAAEC,UAAU,QAAwB,KAAK;AACtD,SAASC,aAAa,EAAEC,QAAQ,QAAQ,gBAAgB;AACxD,SAASC,SAAS,QAAQ,6BAA6B;AAQvD,OAAO,mCAAmC;AAE1C,WACaC,YAAY,GAAAC,SAAA,EADxBJ,aAAa,CAAC,gBAAgB,CAAC,aAAAK,WAAA,EAAAC,WAAA;EAAhC,MACaH,YAAY,SAAAG,WAAA,CAA6C;IAAAC,YAAA,GAAAC,IAAA;MAAA,SAAAA,IAAA;MAAAH,WAAA;IAAA;EAwDtE;EAAC;IAAAI,CAAA,EAxDYN,YAAY;IAAAO,CAAA;MAAAC,IAAA;MAAAC,UAAA,GACtBX,QAAQ,CAAC;QAAEY,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAC,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAE9BX,QAAQ,CAAC;QAAEY,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAC,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAE9BX,QAAQ,CAAC;QAAEY,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAC,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAE9BX,QAAQ,CAAC,CAAC;MAAAa,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAEVX,QAAQ,CAAC,CAAC;MAAAa,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAEVX,QAAQ,CAAC;QAAEe,IAAI,EAAEC;MAAQ,CAAC,CAAC;MAAAH,GAAA;MAAAC,MAAA;QAAA,OAAmB,KAAK;MAAA;IAAA;MAAAJ,IAAA;MAAAG,GAAA;MAAAC,MAAA;QAAA,OAE5BlB,UAAU,CAC/BqB,OAAO,KAAsB;UAC5BC,MAAM,EAAE;YACND,OAAO,EAAEA,OAAO,CAACE,GAAG,CAAEC,MAAM,KAAM;cAChCN,KAAK,EAAEM,MAAM,CAAC,CAAC,CAAC;cAChBC,KAAK,EAAED,MAAM,CAAC,CAAC;YACjB,CAAC,CAAC;UACJ;QACF,CAAC,CACH,CAAC;MAAA;IAAA;MAAAV,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAQ,OAAA,EAAmC;QACjC,OAAOzB,IAAK;AAChB;AACA,gBAAgB,IAAI,CAAC0B,IAAK;AAC1B,kBAAkB,IAAI,CAACC,MAAO;AAC9B,iBAAiB,IAAI,CAACC,IAAK;AAC3B,iBAAiB,IAAI,CAACJ,KAAM;AAC5B,kBAAkB,IAAI,CAACK,MAAO;AAC9B,oBAAoB,IAAI,CAACC,QAAS;AAClC,oBAAoB,IAAI,CAACH,MAAM,CAACI,QAAS;AACzC,oBAAoB,IAAI,CAACC,aAAa,CAAC,IAAI,CAACL,MAAM,CAACP,OAAO,CAAE;AAC5D,yBAAyB,IAAI,CAACa,aAAc;AAC5C;AACA,KAAK;MACH;IAAC;MAAApB,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAgB,cAAsBC,EAAe,EAAE;QACrCA,EAAE,CAACC,eAAe,CAAC,CAAC;QACpB,IAAIlB,KAAyB,GAAGiB,EAAE,CAACE,MAAM,CAACnB,KAAK;QAE/C,IAAIA,KAAK,KAAK,IAAI,CAACW,IAAI,EAAE;UACvB;QACF;QAEA,IAAIX,KAAK,KAAK,EAAE,EAAE;UAChBA,KAAK,GAAGoB,SAAS;QACnB;QAEAjC,SAAS,CAAC,IAAI,EAAE,eAAe,EAAE;UAC/Ba;QACF,CAAC,CAAC;MACJ;IAAC;EAAA;AAAA,GAvD+BhB,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}