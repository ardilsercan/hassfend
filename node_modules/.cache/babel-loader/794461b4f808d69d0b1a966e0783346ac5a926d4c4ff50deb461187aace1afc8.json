{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _decorate from \"@babel/runtime/helpers/decorate\";\nvar _templateObject, _templateObject2, _templateObject3;\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport { styleMap } from \"lit/directives/style-map\";\nimport { computeUserInitials } from \"../../data/user\";\nvar PersonBadge = _decorate([customElement(\"ha-person-badge\")], function (_initialize, _LitElement) {\n  var PersonBadge = /*#__PURE__*/function (_LitElement2) {\n    _inherits(PersonBadge, _LitElement2);\n    function PersonBadge() {\n      var _this;\n      _classCallCheck(this, PersonBadge);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, PersonBadge, [].concat(args));\n      _initialize(_assertThisInitialized(_this));\n      return _this;\n    }\n    return _createClass(PersonBadge);\n  }(_LitElement);\n  return {\n    F: PersonBadge,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"person\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this.person) {\n          return nothing;\n        }\n        var picture = this.person.picture;\n        if (picture) {\n          return html(_templateObject || (_templateObject = _taggedTemplateLiteral([\"<div\\n        style=\", \"\\n        class=\\\"picture\\\"\\n      ></div>\"])), styleMap({\n            backgroundImage: \"url(\".concat(picture, \")\")\n          }));\n        }\n        var initials = computeUserInitials(this.person.name);\n        return html(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"<div\\n      class=\\\"initials \", \"\\\"\\n    >\\n      \", \"\\n    </div>\"])), classMap({\n          long: initials.length > 2\n        }), initials);\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n      :host {\\n        width: 40px;\\n        height: 40px;\\n        display: block;\\n      }\\n      .picture {\\n        width: 100%;\\n        height: 100%;\\n        background-size: cover;\\n        border-radius: 50%;\\n      }\\n      .initials {\\n        display: inline-flex;\\n        justify-content: center;\\n        align-items: center;\\n        box-sizing: border-box;\\n        width: 100%;\\n        height: 100%;\\n        border-radius: 50%;\\n        background-color: var(--light-primary-color);\\n        text-decoration: none;\\n        color: var(--text-light-primary-color, var(--primary-text-color));\\n        overflow: hidden;\\n        font-size: var(--person-badge-font-size, 1em);\\n      }\\n      .initials.long {\\n        font-size: 80%;\\n      }\\n    \"])));\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","nothing","customElement","property","classMap","styleMap","computeUserInitials","PersonBadge","_decorate","_initialize","_LitElement","_LitElement2","_inherits","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_assertThisInitialized","_createClass","F","d","kind","decorators","attribute","key","value","render","person","picture","_templateObject","_taggedTemplateLiteral","backgroundImage","initials","name","_templateObject2","long","static","styles","_templateObject3"],"sources":["/workspaces/frontend/src/components/user/ha-person-badge.ts"],"sourcesContent":["import { css, CSSResultGroup, html, LitElement, nothing } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport { styleMap } from \"lit/directives/style-map\";\nimport { BasePerson } from \"../../data/person\";\nimport { computeUserInitials } from \"../../data/user\";\n\n@customElement(\"ha-person-badge\")\nclass PersonBadge extends LitElement {\n  @property({ attribute: false }) public person?: BasePerson;\n\n  protected render() {\n    if (!this.person) {\n      return nothing;\n    }\n\n    const picture = this.person.picture;\n\n    if (picture) {\n      return html`<div\n        style=${styleMap({ backgroundImage: `url(${picture})` })}\n        class=\"picture\"\n      ></div>`;\n    }\n    const initials = computeUserInitials(this.person.name);\n    return html`<div\n      class=\"initials ${classMap({ long: initials!.length > 2 })}\"\n    >\n      ${initials}\n    </div>`;\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      :host {\n        width: 40px;\n        height: 40px;\n        display: block;\n      }\n      .picture {\n        width: 100%;\n        height: 100%;\n        background-size: cover;\n        border-radius: 50%;\n      }\n      .initials {\n        display: inline-flex;\n        justify-content: center;\n        align-items: center;\n        box-sizing: border-box;\n        width: 100%;\n        height: 100%;\n        border-radius: 50%;\n        background-color: var(--light-primary-color);\n        text-decoration: none;\n        color: var(--text-light-primary-color, var(--primary-text-color));\n        overflow: hidden;\n        font-size: var(--person-badge-font-size, 1em);\n      }\n      .initials.long {\n        font-size: 80%;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-person-badge\": PersonBadge;\n  }\n}\n"],"mappings":";;;;;;;;;;AAAA,SAASA,GAAG,EAAkBC,IAAI,EAAEC,UAAU,EAAEC,OAAO,QAAQ,KAAK;AACpE,SAASC,aAAa,EAAEC,QAAQ,QAAQ,gBAAgB;AACxD,SAASC,QAAQ,QAAQ,0BAA0B;AACnD,SAASC,QAAQ,QAAQ,0BAA0B;AAEnD,SAASC,mBAAmB,QAAQ,iBAAiB;AAAC,IAGhDC,WAAW,GAAAC,SAAA,EADhBN,aAAa,CAAC,iBAAiB,CAAC,aAAAO,WAAA,EAAAC,WAAA;EAAA,IAC3BH,WAAW,0BAAAI,YAAA;IAAAC,SAAA,CAAAL,WAAA,EAAAI,YAAA;IAAA,SAAAJ,YAAA;MAAA,IAAAM,KAAA;MAAAC,eAAA,OAAAP,WAAA;MAAA,SAAAQ,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAAC,IAAA,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;QAAAF,IAAA,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;MAAA;MAAAP,KAAA,GAAAQ,UAAA,OAAAd,WAAA,KAAAe,MAAA,CAAAJ,IAAA;MAAAT,WAAA,CAAAc,sBAAA,CAAAV,KAAA;MAAA,OAAAA,KAAA;IAAA;IAAA,OAAAW,YAAA,CAAAjB,WAAA;EAAA,EAAAG,WAAA;EAAA;IAAAe,CAAA,EAAXlB,WAAW;IAAAmB,CAAA;MAAAC,IAAA;MAAAC,UAAA,GACdzB,QAAQ,CAAC;QAAE0B,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAC,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAE/B,SAAAC,OAAA,EAAmB;QACjB,IAAI,CAAC,IAAI,CAACC,MAAM,EAAE;UAChB,OAAOhC,OAAO;QAChB;QAEA,IAAMiC,OAAO,GAAG,IAAI,CAACD,MAAM,CAACC,OAAO;QAEnC,IAAIA,OAAO,EAAE;UACX,OAAOnC,IAAI,CAAAoC,eAAA,KAAAA,eAAA,GAAAC,sBAAA,2EACD/B,QAAQ,CAAC;YAAEgC,eAAe,SAAAf,MAAA,CAASY,OAAO;UAAI,CAAC,CAAC;QAG5D;QACA,IAAMI,QAAQ,GAAGhC,mBAAmB,CAAC,IAAI,CAAC2B,MAAM,CAACM,IAAI,CAAC;QACtD,OAAOxC,IAAI,CAAAyC,gBAAA,KAAAA,gBAAA,GAAAJ,sBAAA,2EACShC,QAAQ,CAAC;UAAEqC,IAAI,EAAEH,QAAQ,CAAErB,MAAM,GAAG;QAAE,CAAC,CAAC,EAExDqB,QAAQ;MAEd;IAAC;MAAAX,IAAA;MAAAe,MAAA;MAAAZ,GAAA;MAAAC,KAAA,EAED,SAAAY,OAAA,EAAoC;QAClC,OAAO7C,GAAG,CAAA8C,gBAAA,KAAAA,gBAAA,GAAAR,sBAAA;MA8BZ;IAAC;EAAA;AAAA,GAvDuBpC,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}