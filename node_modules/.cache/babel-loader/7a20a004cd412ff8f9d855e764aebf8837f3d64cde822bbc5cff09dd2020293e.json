{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _regeneratorRuntime from \"@babel/runtime/helpers/regeneratorRuntime\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7;\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"@material/mwc-button/mwc-button\";\nimport \"@material/mwc-formfield/mwc-formfield\";\nimport \"@material/mwc-list/mwc-list-item\";\nimport { css, html, LitElement } from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport \"../../../components/ha-alert\";\nimport { deleteConfigEntry, getConfigEntry } from \"../../../data/config_entries\";\nimport { updateDeviceRegistryEntry } from \"../../../data/device_registry\";\nimport { removeEntityRegistryEntry, updateEntityRegistryEntry } from \"../../../data/entity_registry\";\nimport { fetchIntegrationManifest } from \"../../../data/integration\";\nimport { showAlertDialog, showConfirmationDialog } from \"../../../dialogs/generic/show-dialog-box\";\nimport { SubscribeMixin } from \"../../../mixins/subscribe-mixin\";\nimport { haStyle } from \"../../../resources/styles\";\nimport { showDeviceRegistryDetailDialog } from \"../devices/device-registry-detail/show-dialog-device-registry-detail\";\nimport \"./entity-registry-settings-editor\";\nvar invalidDomainUpdate = false;\nexport var EntityRegistrySettings = _decorate([customElement(\"entity-registry-settings\")], function (_initialize, _SubscribeMixin) {\n  var EntityRegistrySettings = /*#__PURE__*/function (_SubscribeMixin2) {\n    _inherits(EntityRegistrySettings, _SubscribeMixin2);\n    function EntityRegistrySettings() {\n      var _this;\n      _classCallCheck(this, EntityRegistrySettings);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, EntityRegistrySettings, [].concat(args));\n      _initialize(_assertThisInitialized(_this));\n      return _this;\n    }\n    return _createClass(EntityRegistrySettings);\n  }(_SubscribeMixin);\n  return {\n    F: EntityRegistrySettings,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Object\n      })],\n      key: \"entry\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_helperConfigEntry\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_error\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_submitting\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [query(\"entity-registry-settings-editor\")],\n      key: \"_registryEditor\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"willUpdate\",\n      value: function willUpdate(changedProps) {\n        _get(_getPrototypeOf(EntityRegistrySettings.prototype), \"willUpdate\", this).call(this, changedProps);\n        if (changedProps.has(\"entry\")) {\n          this._fetchHelperConfigEntry();\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_fetchHelperConfigEntry\",\n      value: function () {\n        var _fetchHelperConfigEntry2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n          var _this$entry;\n          var configEntry, manifest;\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                this._helperConfigEntry = undefined;\n                if ((_this$entry = this.entry) !== null && _this$entry !== void 0 && _this$entry.config_entry_id) {\n                  _context.next = 3;\n                  break;\n                }\n                return _context.abrupt(\"return\");\n              case 3:\n                _context.prev = 3;\n                _context.next = 6;\n                return getConfigEntry(this.hass, this.entry.config_entry_id);\n              case 6:\n                configEntry = _context.sent.config_entry;\n                _context.next = 9;\n                return fetchIntegrationManifest(this.hass, configEntry.domain);\n              case 9:\n                manifest = _context.sent;\n                if (manifest.integration_type === \"helper\") {\n                  this._helperConfigEntry = configEntry;\n                }\n                // eslint-disable-next-line no-empty\n                _context.next = 15;\n                break;\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](3);\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee, this, [[3, 13]]);\n        }));\n        function _fetchHelperConfigEntry() {\n          return _fetchHelperConfigEntry2.apply(this, arguments);\n        }\n        return _fetchHelperConfigEntry;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var stateObj = this.hass.states[this.entry.entity_id];\n        var device = this.entry.device_id ? this.hass.devices[this.entry.device_id] : undefined;\n        return html(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      \", \"\\n      \", \"\\n      <div class=\\\"form container\\\">\\n        <entity-registry-settings-editor\\n          .hass=\", \"\\n          .entry=\", \"\\n          .helperConfigEntry=\", \"\\n          .disabled=\", \"\\n          @change=\", \"\\n        ></entity-registry-settings-editor>\\n      </div>\\n      <div class=\\\"buttons\\\">\\n        <mwc-button\\n          class=\\\"warning\\\"\\n          @click=\", \"\\n          .disabled=\", \"\\n        >\\n          \", \"\\n        </mwc-button>\\n        <mwc-button\\n          @click=\", \"\\n          .disabled=\", \"\\n        >\\n          \", \"\\n        </mwc-button>\\n      </div>\\n    \"])), !stateObj ? html(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n            <ha-alert alert-type=\\\"warning\\\">\\n              \", \"\\n            </ha-alert>\\n          \"])), device !== null && device !== void 0 && device.disabled_by ? html(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\", \"<mwc-button\\n                      @click=\", \"\\n                      slot=\\\"action\\\"\\n                    >\\n                      \", \"\\n                    </mwc-button>\"])), this.hass.localize(\"ui.dialogs.entity_registry.editor.device_disabled\"), this._openDeviceSettings, this.hass.localize(\"ui.dialogs.entity_registry.editor.open_device_settings\")) : this.entry.disabled_by ? html(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\", \"\", \"\"])), this.hass.localize(\"ui.dialogs.entity_registry.editor.entity_disabled\"), [\"user\", \"integration\"].includes(this.entry.disabled_by) ? html(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"<mwc-button\\n                          slot=\\\"action\\\"\\n                          @click=\", \"\\n                        >\\n                          \", \"</mwc-button\\n                        >\"])), this._enableEntry, this.hass.localize(\"ui.dialogs.entity_registry.editor.enable_entity\")) : \"\") : this.hass.localize(\"ui.dialogs.entity_registry.editor.unavailable\")) : \"\", this._error ? html(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"<ha-alert alert-type=\\\"error\\\">\", \"</ha-alert>\"])), this._error) : \"\", this.hass, this.entry, this._helperConfigEntry, this._submitting, this._entityRegistryChanged, this._confirmDeleteEntry, this._submitting || !this._helperConfigEntry && !(stateObj !== null && stateObj !== void 0 && stateObj.attributes.restored), this.hass.localize(\"ui.dialogs.entity_registry.editor.delete\"), this._updateEntry, invalidDomainUpdate || this._submitting, this.hass.localize(\"ui.dialogs.entity_registry.editor.update\"));\n      }\n    }, {\n      kind: \"method\",\n      key: \"_entityRegistryChanged\",\n      value: function _entityRegistryChanged() {\n        this._error = undefined;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_openDeviceSettings\",\n      value: function _openDeviceSettings() {\n        var _this2 = this;\n        var device = this.hass.devices[this.entry.device_id];\n        showDeviceRegistryDetailDialog(this, {\n          device: device,\n          updateEntry: function () {\n            var _updateEntry2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(updates) {\n              return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n                while (1) switch (_context2.prev = _context2.next) {\n                  case 0:\n                    _context2.next = 2;\n                    return updateDeviceRegistryEntry(_this2.hass, device.id, updates);\n                  case 2:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }, _callee2);\n            }));\n            function updateEntry(_x) {\n              return _updateEntry2.apply(this, arguments);\n            }\n            return updateEntry;\n          }()\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_enableEntry\",\n      value: function () {\n        var _enableEntry2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n          var result;\n          return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n            while (1) switch (_context3.prev = _context3.next) {\n              case 0:\n                this._error = undefined;\n                this._submitting = true;\n                _context3.prev = 2;\n                _context3.next = 5;\n                return updateEntityRegistryEntry(this.hass, this.entry.entity_id, {\n                  disabled_by: null\n                });\n              case 5:\n                result = _context3.sent;\n                fireEvent(this, \"entity-entry-updated\", result.entity_entry);\n                if (result.require_restart) {\n                  showAlertDialog(this, {\n                    text: this.hass.localize(\"ui.dialogs.entity_registry.editor.enabled_restart_confirm\")\n                  });\n                }\n                if (result.reload_delay) {\n                  showAlertDialog(this, {\n                    text: this.hass.localize(\"ui.dialogs.entity_registry.editor.enabled_delay_confirm\", {\n                      delay: result.reload_delay\n                    })\n                  });\n                }\n                _context3.next = 14;\n                break;\n              case 11:\n                _context3.prev = 11;\n                _context3.t0 = _context3[\"catch\"](2);\n                this._error = _context3.t0.message;\n              case 14:\n                _context3.prev = 14;\n                this._submitting = false;\n                return _context3.finish(14);\n              case 17:\n              case \"end\":\n                return _context3.stop();\n            }\n          }, _callee3, this, [[2, 11, 14, 17]]);\n        }));\n        function _enableEntry() {\n          return _enableEntry2.apply(this, arguments);\n        }\n        return _enableEntry;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"_updateEntry\",\n      value: function () {\n        var _updateEntry3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n          var result;\n          return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n            while (1) switch (_context4.prev = _context4.next) {\n              case 0:\n                this._submitting = true;\n                _context4.prev = 1;\n                _context4.next = 4;\n                return this._registryEditor.updateEntry();\n              case 4:\n                result = _context4.sent;\n                if (result.close) {\n                  fireEvent(this, \"close-dialog\");\n                }\n                _context4.next = 11;\n                break;\n              case 8:\n                _context4.prev = 8;\n                _context4.t0 = _context4[\"catch\"](1);\n                this._error = _context4.t0.message || \"Unknown error\";\n              case 11:\n                _context4.prev = 11;\n                this._submitting = false;\n                return _context4.finish(11);\n              case 14:\n              case \"end\":\n                return _context4.stop();\n            }\n          }, _callee4, this, [[1, 8, 11, 14]]);\n        }));\n        function _updateEntry() {\n          return _updateEntry3.apply(this, arguments);\n        }\n        return _updateEntry;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"_confirmDeleteEntry\",\n      value: function () {\n        var _confirmDeleteEntry2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n          return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n            while (1) switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return showConfirmationDialog(this, {\n                  text: this.hass.localize(\"ui.dialogs.entity_registry.editor.confirm_delete\")\n                });\n              case 2:\n                if (_context5.sent) {\n                  _context5.next = 4;\n                  break;\n                }\n                return _context5.abrupt(\"return\");\n              case 4:\n                this._submitting = true;\n                _context5.prev = 5;\n                if (!this._helperConfigEntry) {\n                  _context5.next = 11;\n                  break;\n                }\n                _context5.next = 9;\n                return deleteConfigEntry(this.hass, this._helperConfigEntry.entry_id);\n              case 9:\n                _context5.next = 13;\n                break;\n              case 11:\n                _context5.next = 13;\n                return removeEntityRegistryEntry(this.hass, this.entry.entity_id);\n              case 13:\n                fireEvent(this, \"close-dialog\");\n              case 14:\n                _context5.prev = 14;\n                this._submitting = false;\n                return _context5.finish(14);\n              case 17:\n              case \"end\":\n                return _context5.stop();\n            }\n          }, _callee5, this, [[5,, 14, 17]]);\n        }));\n        function _confirmDeleteEntry() {\n          return _confirmDeleteEntry2.apply(this, arguments);\n        }\n        return _confirmDeleteEntry;\n      }()\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [haStyle, css(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral([\"\\n        :host {\\n          display: block;\\n        }\\n        .container {\\n          padding: 8px 24px 20px 24px;\\n        }\\n        .buttons {\\n          box-sizing: border-box;\\n          display: flex;\\n          padding: 8px 16px 8px 24px;\\n          justify-content: space-between;\\n          padding-bottom: max(env(safe-area-inset-bottom), 8px);\\n          background-color: var(--mdc-theme-surface, #fff);\\n          border-top: 1px solid var(--divider-color);\\n          position: sticky;\\n          bottom: 0px;\\n        }\\n        ha-alert mwc-button {\\n          width: max-content;\\n        }\\n      \"])))];\n      }\n    }]\n  };\n}, SubscribeMixin(LitElement));","map":{"version":3,"names":["css","html","LitElement","customElement","property","query","state","fireEvent","deleteConfigEntry","getConfigEntry","updateDeviceRegistryEntry","removeEntityRegistryEntry","updateEntityRegistryEntry","fetchIntegrationManifest","showAlertDialog","showConfirmationDialog","SubscribeMixin","haStyle","showDeviceRegistryDetailDialog","invalidDomainUpdate","EntityRegistrySettings","_decorate","_initialize","_SubscribeMixin","_SubscribeMixin2","_inherits","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_assertThisInitialized","_createClass","F","d","kind","decorators","attribute","key","value","type","Object","willUpdate","changedProps","_get","_getPrototypeOf","prototype","call","has","_fetchHelperConfigEntry","_fetchHelperConfigEntry2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_this$entry","configEntry","manifest","wrap","_callee$","_context","prev","next","_helperConfigEntry","undefined","entry","config_entry_id","abrupt","hass","sent","config_entry","domain","integration_type","t0","stop","apply","render","stateObj","states","entity_id","device","device_id","devices","_templateObject","_taggedTemplateLiteral","_templateObject2","disabled_by","_templateObject3","localize","_openDeviceSettings","_templateObject4","includes","_templateObject5","_enableEntry","_error","_templateObject6","_submitting","_entityRegistryChanged","_confirmDeleteEntry","attributes","restored","_updateEntry","_this2","updateEntry","_updateEntry2","_callee2","updates","_callee2$","_context2","id","_x","_enableEntry2","_callee3","result","_callee3$","_context3","entity_entry","require_restart","text","reload_delay","delay","message","finish","_updateEntry3","_callee4","_callee4$","_context4","_registryEditor","close","_confirmDeleteEntry2","_callee5","_callee5$","_context5","entry_id","static","styles","_templateObject7"],"sources":["/Users/sercanardil/Desktop/frontend/src/panels/config/entities/entity-registry-settings.ts"],"sourcesContent":["import \"@material/mwc-button/mwc-button\";\nimport \"@material/mwc-formfield/mwc-formfield\";\nimport \"@material/mwc-list/mwc-list-item\";\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport { css, CSSResultGroup, html, LitElement, PropertyValues } from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport \"../../../components/ha-alert\";\nimport {\n  ConfigEntry,\n  deleteConfigEntry,\n  getConfigEntry,\n} from \"../../../data/config_entries\";\nimport { updateDeviceRegistryEntry } from \"../../../data/device_registry\";\nimport {\n  ExtEntityRegistryEntry,\n  removeEntityRegistryEntry,\n  updateEntityRegistryEntry,\n} from \"../../../data/entity_registry\";\nimport { fetchIntegrationManifest } from \"../../../data/integration\";\nimport {\n  showAlertDialog,\n  showConfirmationDialog,\n} from \"../../../dialogs/generic/show-dialog-box\";\nimport { SubscribeMixin } from \"../../../mixins/subscribe-mixin\";\nimport { haStyle } from \"../../../resources/styles\";\nimport type { HomeAssistant } from \"../../../types\";\nimport { showDeviceRegistryDetailDialog } from \"../devices/device-registry-detail/show-dialog-device-registry-detail\";\nimport \"./entity-registry-settings-editor\";\nimport type { EntityRegistrySettingsEditor } from \"./entity-registry-settings-editor\";\n\nconst invalidDomainUpdate = false;\n\n@customElement(\"entity-registry-settings\")\nexport class EntityRegistrySettings extends SubscribeMixin(LitElement) {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ type: Object }) public entry!: ExtEntityRegistryEntry;\n\n  @state() private _helperConfigEntry?: ConfigEntry;\n\n  @state() private _error?: string;\n\n  @state() private _submitting?: boolean;\n\n  @query(\"entity-registry-settings-editor\")\n  private _registryEditor?: EntityRegistrySettingsEditor;\n\n  protected willUpdate(changedProps: PropertyValues): void {\n    super.willUpdate(changedProps);\n    if (changedProps.has(\"entry\")) {\n      this._fetchHelperConfigEntry();\n    }\n  }\n\n  private async _fetchHelperConfigEntry() {\n    this._helperConfigEntry = undefined;\n    if (!this.entry?.config_entry_id) {\n      return;\n    }\n    try {\n      const configEntry = (\n        await getConfigEntry(this.hass, this.entry.config_entry_id)\n      ).config_entry;\n      const manifest = await fetchIntegrationManifest(\n        this.hass,\n        configEntry.domain\n      );\n      if (manifest.integration_type === \"helper\") {\n        this._helperConfigEntry = configEntry;\n      }\n      // eslint-disable-next-line no-empty\n    } catch (err) {}\n  }\n\n  protected render() {\n    const stateObj: HassEntity | undefined =\n      this.hass.states[this.entry.entity_id];\n\n    const device = this.entry.device_id\n      ? this.hass.devices[this.entry.device_id]\n      : undefined;\n\n    return html`\n      ${!stateObj\n        ? html`\n            <ha-alert alert-type=\"warning\">\n              ${device?.disabled_by\n                ? html`${this.hass!.localize(\n                      \"ui.dialogs.entity_registry.editor.device_disabled\"\n                    )}<mwc-button\n                      @click=${this._openDeviceSettings}\n                      slot=\"action\"\n                    >\n                      ${this.hass!.localize(\n                        \"ui.dialogs.entity_registry.editor.open_device_settings\"\n                      )}\n                    </mwc-button>`\n                : this.entry.disabled_by\n                  ? html`${this.hass!.localize(\n                      \"ui.dialogs.entity_registry.editor.entity_disabled\"\n                    )}${[\"user\", \"integration\"].includes(\n                      this.entry.disabled_by!\n                    )\n                      ? html`<mwc-button\n                          slot=\"action\"\n                          @click=${this._enableEntry}\n                        >\n                          ${this.hass!.localize(\n                            \"ui.dialogs.entity_registry.editor.enable_entity\"\n                          )}</mwc-button\n                        >`\n                      : \"\"}`\n                  : this.hass!.localize(\n                      \"ui.dialogs.entity_registry.editor.unavailable\"\n                    )}\n            </ha-alert>\n          `\n        : \"\"}\n      ${this._error\n        ? html`<ha-alert alert-type=\"error\">${this._error}</ha-alert>`\n        : \"\"}\n      <div class=\"form container\">\n        <entity-registry-settings-editor\n          .hass=${this.hass}\n          .entry=${this.entry}\n          .helperConfigEntry=${this._helperConfigEntry}\n          .disabled=${this._submitting}\n          @change=${this._entityRegistryChanged}\n        ></entity-registry-settings-editor>\n      </div>\n      <div class=\"buttons\">\n        <mwc-button\n          class=\"warning\"\n          @click=${this._confirmDeleteEntry}\n          .disabled=${this._submitting ||\n          (!this._helperConfigEntry && !stateObj?.attributes.restored)}\n        >\n          ${this.hass.localize(\"ui.dialogs.entity_registry.editor.delete\")}\n        </mwc-button>\n        <mwc-button\n          @click=${this._updateEntry}\n          .disabled=${invalidDomainUpdate || this._submitting}\n        >\n          ${this.hass.localize(\"ui.dialogs.entity_registry.editor.update\")}\n        </mwc-button>\n      </div>\n    `;\n  }\n\n  private _entityRegistryChanged() {\n    this._error = undefined;\n  }\n\n  private _openDeviceSettings() {\n    const device = this.hass.devices[this.entry.device_id!];\n\n    showDeviceRegistryDetailDialog(this, {\n      device: device,\n      updateEntry: async (updates) => {\n        await updateDeviceRegistryEntry(this.hass, device.id, updates);\n      },\n    });\n  }\n\n  private async _enableEntry() {\n    this._error = undefined;\n    this._submitting = true;\n    try {\n      const result = await updateEntityRegistryEntry(\n        this.hass!,\n        this.entry.entity_id,\n        { disabled_by: null }\n      );\n      fireEvent(this, \"entity-entry-updated\", result.entity_entry);\n      if (result.require_restart) {\n        showAlertDialog(this, {\n          text: this.hass.localize(\n            \"ui.dialogs.entity_registry.editor.enabled_restart_confirm\"\n          ),\n        });\n      }\n      if (result.reload_delay) {\n        showAlertDialog(this, {\n          text: this.hass.localize(\n            \"ui.dialogs.entity_registry.editor.enabled_delay_confirm\",\n            { delay: result.reload_delay }\n          ),\n        });\n      }\n    } catch (err: any) {\n      this._error = err.message;\n    } finally {\n      this._submitting = false;\n    }\n  }\n\n  private async _updateEntry(): Promise<void> {\n    this._submitting = true;\n    try {\n      const result = await this._registryEditor!.updateEntry();\n      if (result.close) {\n        fireEvent(this, \"close-dialog\");\n      }\n    } catch (err: any) {\n      this._error = err.message || \"Unknown error\";\n    } finally {\n      this._submitting = false;\n    }\n  }\n\n  private async _confirmDeleteEntry(): Promise<void> {\n    if (\n      !(await showConfirmationDialog(this, {\n        text: this.hass.localize(\n          \"ui.dialogs.entity_registry.editor.confirm_delete\"\n        ),\n      }))\n    ) {\n      return;\n    }\n\n    this._submitting = true;\n\n    try {\n      if (this._helperConfigEntry) {\n        await deleteConfigEntry(this.hass, this._helperConfigEntry.entry_id);\n      } else {\n        await removeEntityRegistryEntry(this.hass!, this.entry.entity_id);\n      }\n      fireEvent(this, \"close-dialog\");\n    } finally {\n      this._submitting = false;\n    }\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyle,\n      css`\n        :host {\n          display: block;\n        }\n        .container {\n          padding: 8px 24px 20px 24px;\n        }\n        .buttons {\n          box-sizing: border-box;\n          display: flex;\n          padding: 8px 16px 8px 24px;\n          justify-content: space-between;\n          padding-bottom: max(env(safe-area-inset-bottom), 8px);\n          background-color: var(--mdc-theme-surface, #fff);\n          border-top: 1px solid var(--divider-color);\n          position: sticky;\n          bottom: 0px;\n        }\n        ha-alert mwc-button {\n          width: max-content;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"entity-registry-settings\": EntityRegistrySettings;\n  }\n  interface HASSDomEvents {\n    \"entity-entry-updated\": ExtEntityRegistryEntry;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}