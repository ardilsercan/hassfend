{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n/* eslint-disable lit/prefer-static-styles */\nimport { html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport punycode from \"punycode\";\nimport { applyThemesOnElement } from \"../common/dom/apply_themes_on_element\";\nimport { extractSearchParamsObject } from \"../common/url/search-params\";\nimport \"../components/ha-alert\";\nimport { fetchAuthProviders } from \"../data/auth\";\nimport { litLocalizeLiteMixin } from \"../mixins/lit-localize-lite-mixin\";\nimport { registerServiceWorker } from \"../util/register-service-worker\";\nimport \"./ha-auth-flow\";\nimport(\"./ha-pick-auth-provider\");\nconst appNames = {\n  \"https://home-assistant.io/iOS\": \"iOS\",\n  \"https://home-assistant.io/android\": \"Android\"\n};\nexport let HaAuthorize = _decorate([customElement(\"ha-authorize\")], function (_initialize, _litLocalizeLiteMixin) {\n  class HaAuthorize extends _litLocalizeLiteMixin {\n    constructor() {\n      super();\n      _initialize(this);\n      const query = extractSearchParamsObject();\n      if (query.client_id) {\n        this.clientId = query.client_id;\n      }\n      if (query.redirect_uri) {\n        this.redirectUri = query.redirect_uri;\n      }\n      if (query.state) {\n        this.oauth2State = query.state;\n      }\n    }\n  }\n  return {\n    F: HaAuthorize,\n    d: [{\n      kind: \"field\",\n      decorators: [property()],\n      key: \"clientId\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"redirectUri\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"oauth2State\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"translationFragment\",\n      value() {\n        return \"page-authorize\";\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_authProvider\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_authProviders\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_preselectStoreToken\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_ownInstance\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_error\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var _this$_authProviders;\n        if (this._error) {\n          return html`\n        <style>\n          ha-authorize ha-alert {\n            display: block;\n            margin: 16px 0;\n            background-color: var(--primary-background-color, #fafafa);\n          }\n        </style>\n        <ha-alert alert-type=\"error\"\n          >${this._error} ${this.redirectUri}</ha-alert\n        >\n      `;\n        }\n        const inactiveProviders = (_this$_authProviders = this._authProviders) === null || _this$_authProviders === void 0 ? void 0 : _this$_authProviders.filter(prv => prv !== this._authProvider);\n        const app = this.clientId && this.clientId in appNames;\n        return html`\n      <style>\n        ha-pick-auth-provider {\n          display: block;\n          margin-top: 24px;\n        }\n        ha-auth-flow {\n          display: flex;\n          justify-content: center;\n          flex-direction: column;\n          align-items: center;\n        }\n        ha-alert {\n          display: block;\n          margin: 16px 0;\n          background-color: var(--primary-background-color, #fafafa);\n        }\n        p {\n          font-size: 14px;\n          line-height: 20px;\n        }\n        .card-content {\n          background: var(\n            --ha-card-background,\n            var(--card-background-color, white)\n          );\n          box-shadow: var(--ha-card-box-shadow, none);\n          box-sizing: border-box;\n          border-radius: var(--ha-card-border-radius, 12px);\n          border-width: var(--ha-card-border-width, 1px);\n          border-style: solid;\n          border-color: var(\n            --ha-card-border-color,\n            var(--divider-color, #e0e0e0)\n          );\n          color: var(--primary-text-color);\n          position: relative;\n          padding: 16px;\n        }\n        .action {\n          margin: 16px 0 8px;\n          display: flex;\n          width: 100%;\n          max-width: 336px;\n          justify-content: center;\n        }\n        .space-between {\n          justify-content: space-between;\n        }\n        .footer {\n          padding-top: 8px;\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n        }\n        ha-language-picker {\n          width: 200px;\n          border-radius: 4px;\n          overflow: hidden;\n          --ha-select-height: 40px;\n          --mdc-select-fill-color: none;\n          --mdc-select-label-ink-color: var(--primary-text-color, #212121);\n          --mdc-select-ink-color: var(--primary-text-color, #212121);\n          --mdc-select-idle-line-color: transparent;\n          --mdc-select-hover-line-color: transparent;\n          --mdc-select-dropdown-icon-color: var(--primary-text-color, #212121);\n          --mdc-shape-small: 0;\n        }\n        .footer a {\n          text-decoration: none;\n          color: var(--primary-text-color);\n          margin-right: 16px;\n          margin-inline-end: 16px;\n          margin-inline-start: initial;\n        }\n        h1 {\n          font-size: 28px;\n          font-weight: 400;\n          margin-top: 16px;\n          margin-bottom: 16px;\n        }\n      </style>\n\n      ${!this._ownInstance ? html`<ha-alert .alertType=${app ? \"info\" : \"warning\"}>\n            ${app ? this.localize(\"ui.panel.page-authorize.authorizing_app\", {\n          app: appNames[this.clientId]\n        }) : this.localize(\"ui.panel.page-authorize.authorizing_client\", {\n          clientId: html`<b\n                    >${this.clientId ? punycode.toASCII(this.clientId) : this.clientId}</b\n                  >`\n        })}\n          </ha-alert>` : nothing}\n\n      <div class=\"card-content\">\n        ${!this._authProvider ? html`<p>\n              ${this.localize(\"ui.panel.page-authorize.initializing\")}\n            </p> ` : html`<ha-auth-flow\n                .clientId=${this.clientId}\n                .redirectUri=${this.redirectUri}\n                .oauth2State=${this.oauth2State}\n                .authProvider=${this._authProvider}\n                .localize=${this.localize}\n                .initStoreToken=${this._preselectStoreToken}\n              ></ha-auth-flow>\n              ${inactiveProviders.length > 0 ? html`\n                    <ha-pick-auth-provider\n                      .localize=${this.localize}\n                      .clientId=${this.clientId}\n                      .authProviders=${inactiveProviders}\n                      @pick-auth-provider=${this._handleAuthProviderPick}\n                    ></ha-pick-auth-provider>\n                  ` : \"\"}`}\n      </div>\n      <div class=\"footer\">\n        <ha-language-picker\n          .value=${this.language}\n          .label=${\"\"}\n          nativeName\n          @value-changed=${this._languageChanged}\n        ></ha-language-picker>\n        <a\n          href=\"https://www.home-assistant.io/docs/authentication/\"\n          target=\"_blank\"\n          rel=\"noreferrer noopener\"\n          >${this.localize(\"ui.panel.page-authorize.help\")}</a\n        >\n      </div>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"createRenderRoot\",\n      value: function createRenderRoot() {\n        return this;\n      }\n    }, {\n      kind: \"method\",\n      key: \"firstUpdated\",\n      value: function firstUpdated(changedProps) {\n        _get(_getPrototypeOf(HaAuthorize.prototype), \"firstUpdated\", this).call(this, changedProps);\n        if (!this.redirectUri) {\n          this._error = \"Invalid redirect URI\";\n          return;\n        }\n        let url;\n        try {\n          url = new URL(this.redirectUri);\n        } catch (err) {\n          this._error = \"Invalid redirect URI\";\n          return;\n        }\n        if (\n        // eslint-disable-next-line no-script-url\n        [\"javascript:\", \"data:\", \"vbscript:\", \"file:\", \"about:\"].includes(url.protocol)) {\n          this._error = \"Invalid redirect URI\";\n          return;\n        }\n        this._fetchAuthProviders();\n        if (matchMedia(\"(prefers-color-scheme: dark)\").matches) {\n          applyThemesOnElement(document.documentElement, {\n            default_theme: \"default\",\n            default_dark_theme: null,\n            themes: {},\n            darkMode: true,\n            theme: \"default\"\n          }, undefined, undefined, true);\n        }\n        if (window.innerWidth > 450) {\n          import(\"../resources/particles\");\n        }\n\n        // If we are logging into the instance that is hosting this auth form\n        // we will register the service worker to start preloading.\n        if (url.host === location.host) {\n          this._ownInstance = true;\n          registerServiceWorker(this, false);\n        }\n        import(\"../components/ha-language-picker\");\n      }\n    }, {\n      kind: \"method\",\n      key: \"updated\",\n      value: function updated(changedProps) {\n        _get(_getPrototypeOf(HaAuthorize.prototype), \"updated\", this).call(this, changedProps);\n        if (changedProps.has(\"language\")) {\n          document.querySelector(\"html\").setAttribute(\"lang\", this.language);\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_fetchAuthProviders\",\n      value: async function _fetchAuthProviders() {\n        // Fetch auth providers\n        try {\n          // We prefetch this data on page load in authorize.html.template for modern builds\n          const response = await (window.providersPromise || fetchAuthProviders());\n          const authProviders = await response.json();\n\n          // Forward to main screen which will redirect to right onboarding page.\n          if (response.status === 400 && authProviders.code === \"onboarding_required\") {\n            location.href = `/onboarding.html${location.search}`;\n            return;\n          }\n          if (authProviders.providers.length === 0) {\n            this._error = \"No auth providers returned. Unable to finish login.\";\n            return;\n          }\n          this._authProviders = authProviders.providers;\n          this._authProvider = authProviders.providers[0];\n          this._preselectStoreToken = authProviders.preselect_remember_me;\n        } catch (err) {\n          this._error = \"Unable to fetch auth providers.\";\n          // eslint-disable-next-line\n          console.error(\"Error loading auth providers\", err);\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleAuthProviderPick\",\n      value: async function _handleAuthProviderPick(ev) {\n        this._authProvider = ev.detail;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_languageChanged\",\n      value: function _languageChanged(ev) {\n        const language = ev.detail.value;\n        this.language = language;\n        try {\n          localStorage.setItem(\"selectedLanguage\", JSON.stringify(language));\n        } catch (err) {\n          // Ignore\n        }\n      }\n    }]\n  };\n}, litLocalizeLiteMixin(LitElement));","map":{"version":3,"names":["html","LitElement","nothing","customElement","property","state","punycode","applyThemesOnElement","extractSearchParamsObject","fetchAuthProviders","litLocalizeLiteMixin","registerServiceWorker","appNames","HaAuthorize","_decorate","_initialize","_litLocalizeLiteMixin","constructor","query","client_id","clientId","redirect_uri","redirectUri","oauth2State","F","d","kind","decorators","key","value","render","_this$_authProviders","_error","inactiveProviders","_authProviders","filter","prv","_authProvider","app","_ownInstance","localize","toASCII","_preselectStoreToken","length","_handleAuthProviderPick","language","_languageChanged","createRenderRoot","firstUpdated","changedProps","_get","_getPrototypeOf","prototype","call","url","URL","err","includes","protocol","_fetchAuthProviders","matchMedia","matches","document","documentElement","default_theme","default_dark_theme","themes","darkMode","theme","undefined","window","innerWidth","host","location","updated","has","querySelector","setAttribute","response","providersPromise","authProviders","json","status","code","href","search","providers","preselect_remember_me","console","error","ev","detail","localStorage","setItem","JSON","stringify"],"sources":["/workspaces/frontend/src/auth/ha-authorize.ts"],"sourcesContent":["/* eslint-disable lit/prefer-static-styles */\nimport { html, LitElement, nothing, PropertyValues } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport punycode from \"punycode\";\nimport { applyThemesOnElement } from \"../common/dom/apply_themes_on_element\";\nimport { extractSearchParamsObject } from \"../common/url/search-params\";\nimport \"../components/ha-alert\";\nimport {\n  AuthProvider,\n  AuthUrlSearchParams,\n  fetchAuthProviders,\n} from \"../data/auth\";\nimport { litLocalizeLiteMixin } from \"../mixins/lit-localize-lite-mixin\";\nimport { registerServiceWorker } from \"../util/register-service-worker\";\nimport \"./ha-auth-flow\";\n\nimport(\"./ha-pick-auth-provider\");\n\nconst appNames = {\n  \"https://home-assistant.io/iOS\": \"iOS\",\n  \"https://home-assistant.io/android\": \"Android\",\n};\n\n@customElement(\"ha-authorize\")\nexport class HaAuthorize extends litLocalizeLiteMixin(LitElement) {\n  @property() public clientId?: string;\n\n  @property() public redirectUri?: string;\n\n  @property() public oauth2State?: string;\n\n  @property() public translationFragment = \"page-authorize\";\n\n  @state() private _authProvider?: AuthProvider;\n\n  @state() private _authProviders?: AuthProvider[];\n\n  @state() private _preselectStoreToken = false;\n\n  @state() private _ownInstance = false;\n\n  @state() private _error?: string;\n\n  constructor() {\n    super();\n    const query = extractSearchParamsObject() as AuthUrlSearchParams;\n    if (query.client_id) {\n      this.clientId = query.client_id;\n    }\n    if (query.redirect_uri) {\n      this.redirectUri = query.redirect_uri;\n    }\n    if (query.state) {\n      this.oauth2State = query.state;\n    }\n  }\n\n  protected render() {\n    if (this._error) {\n      return html`\n        <style>\n          ha-authorize ha-alert {\n            display: block;\n            margin: 16px 0;\n            background-color: var(--primary-background-color, #fafafa);\n          }\n        </style>\n        <ha-alert alert-type=\"error\"\n          >${this._error} ${this.redirectUri}</ha-alert\n        >\n      `;\n    }\n\n    const inactiveProviders = this._authProviders?.filter(\n      (prv) => prv !== this._authProvider\n    );\n\n    const app = this.clientId && this.clientId in appNames;\n\n    return html`\n      <style>\n        ha-pick-auth-provider {\n          display: block;\n          margin-top: 24px;\n        }\n        ha-auth-flow {\n          display: flex;\n          justify-content: center;\n          flex-direction: column;\n          align-items: center;\n        }\n        ha-alert {\n          display: block;\n          margin: 16px 0;\n          background-color: var(--primary-background-color, #fafafa);\n        }\n        p {\n          font-size: 14px;\n          line-height: 20px;\n        }\n        .card-content {\n          background: var(\n            --ha-card-background,\n            var(--card-background-color, white)\n          );\n          box-shadow: var(--ha-card-box-shadow, none);\n          box-sizing: border-box;\n          border-radius: var(--ha-card-border-radius, 12px);\n          border-width: var(--ha-card-border-width, 1px);\n          border-style: solid;\n          border-color: var(\n            --ha-card-border-color,\n            var(--divider-color, #e0e0e0)\n          );\n          color: var(--primary-text-color);\n          position: relative;\n          padding: 16px;\n        }\n        .action {\n          margin: 16px 0 8px;\n          display: flex;\n          width: 100%;\n          max-width: 336px;\n          justify-content: center;\n        }\n        .space-between {\n          justify-content: space-between;\n        }\n        .footer {\n          padding-top: 8px;\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n        }\n        ha-language-picker {\n          width: 200px;\n          border-radius: 4px;\n          overflow: hidden;\n          --ha-select-height: 40px;\n          --mdc-select-fill-color: none;\n          --mdc-select-label-ink-color: var(--primary-text-color, #212121);\n          --mdc-select-ink-color: var(--primary-text-color, #212121);\n          --mdc-select-idle-line-color: transparent;\n          --mdc-select-hover-line-color: transparent;\n          --mdc-select-dropdown-icon-color: var(--primary-text-color, #212121);\n          --mdc-shape-small: 0;\n        }\n        .footer a {\n          text-decoration: none;\n          color: var(--primary-text-color);\n          margin-right: 16px;\n          margin-inline-end: 16px;\n          margin-inline-start: initial;\n        }\n        h1 {\n          font-size: 28px;\n          font-weight: 400;\n          margin-top: 16px;\n          margin-bottom: 16px;\n        }\n      </style>\n\n      ${!this._ownInstance\n        ? html`<ha-alert .alertType=${app ? \"info\" : \"warning\"}>\n            ${app\n              ? this.localize(\"ui.panel.page-authorize.authorizing_app\", {\n                  app: appNames[this.clientId!],\n                })\n              : this.localize(\"ui.panel.page-authorize.authorizing_client\", {\n                  clientId: html`<b\n                    >${this.clientId\n                      ? punycode.toASCII(this.clientId)\n                      : this.clientId}</b\n                  >`,\n                })}\n          </ha-alert>`\n        : nothing}\n\n      <div class=\"card-content\">\n        ${!this._authProvider\n          ? html`<p>\n              ${this.localize(\"ui.panel.page-authorize.initializing\")}\n            </p> `\n          : html`<ha-auth-flow\n                .clientId=${this.clientId}\n                .redirectUri=${this.redirectUri}\n                .oauth2State=${this.oauth2State}\n                .authProvider=${this._authProvider}\n                .localize=${this.localize}\n                .initStoreToken=${this._preselectStoreToken}\n              ></ha-auth-flow>\n              ${inactiveProviders!.length > 0\n                ? html`\n                    <ha-pick-auth-provider\n                      .localize=${this.localize}\n                      .clientId=${this.clientId}\n                      .authProviders=${inactiveProviders!}\n                      @pick-auth-provider=${this._handleAuthProviderPick}\n                    ></ha-pick-auth-provider>\n                  `\n                : \"\"}`}\n      </div>\n      <div class=\"footer\">\n        <ha-language-picker\n          .value=${this.language}\n          .label=${\"\"}\n          nativeName\n          @value-changed=${this._languageChanged}\n        ></ha-language-picker>\n        <a\n          href=\"https://www.home-assistant.io/docs/authentication/\"\n          target=\"_blank\"\n          rel=\"noreferrer noopener\"\n          >${this.localize(\"ui.panel.page-authorize.help\")}</a\n        >\n      </div>\n    `;\n  }\n\n  createRenderRoot() {\n    return this;\n  }\n\n  protected firstUpdated(changedProps: PropertyValues) {\n    super.firstUpdated(changedProps);\n\n    if (!this.redirectUri) {\n      this._error = \"Invalid redirect URI\";\n      return;\n    }\n\n    let url: URL;\n\n    try {\n      url = new URL(this.redirectUri);\n    } catch (err) {\n      this._error = \"Invalid redirect URI\";\n      return;\n    }\n\n    if (\n      // eslint-disable-next-line no-script-url\n      [\"javascript:\", \"data:\", \"vbscript:\", \"file:\", \"about:\"].includes(\n        url.protocol\n      )\n    ) {\n      this._error = \"Invalid redirect URI\";\n      return;\n    }\n\n    this._fetchAuthProviders();\n\n    if (matchMedia(\"(prefers-color-scheme: dark)\").matches) {\n      applyThemesOnElement(\n        document.documentElement,\n        {\n          default_theme: \"default\",\n          default_dark_theme: null,\n          themes: {},\n          darkMode: true,\n          theme: \"default\",\n        },\n        undefined,\n        undefined,\n        true\n      );\n    }\n\n    if (window.innerWidth > 450) {\n      import(\"../resources/particles\");\n    }\n\n    // If we are logging into the instance that is hosting this auth form\n    // we will register the service worker to start preloading.\n    if (url.host === location.host) {\n      this._ownInstance = true;\n      registerServiceWorker(this, false);\n    }\n\n    import(\"../components/ha-language-picker\");\n  }\n\n  protected updated(changedProps: PropertyValues) {\n    super.updated(changedProps);\n    if (changedProps.has(\"language\")) {\n      document.querySelector(\"html\")!.setAttribute(\"lang\", this.language!);\n    }\n  }\n\n  private async _fetchAuthProviders() {\n    // Fetch auth providers\n    try {\n      // We prefetch this data on page load in authorize.html.template for modern builds\n      const response = await ((window as any).providersPromise ||\n        fetchAuthProviders());\n      const authProviders = await response.json();\n\n      // Forward to main screen which will redirect to right onboarding page.\n      if (\n        response.status === 400 &&\n        authProviders.code === \"onboarding_required\"\n      ) {\n        location.href = `/onboarding.html${location.search}`;\n        return;\n      }\n\n      if (authProviders.providers.length === 0) {\n        this._error = \"No auth providers returned. Unable to finish login.\";\n        return;\n      }\n\n      this._authProviders = authProviders.providers;\n      this._authProvider = authProviders.providers[0];\n      this._preselectStoreToken = authProviders.preselect_remember_me;\n    } catch (err: any) {\n      this._error = \"Unable to fetch auth providers.\";\n      // eslint-disable-next-line\n      console.error(\"Error loading auth providers\", err);\n    }\n  }\n\n  private async _handleAuthProviderPick(ev) {\n    this._authProvider = ev.detail;\n  }\n\n  private _languageChanged(ev: CustomEvent) {\n    const language = ev.detail.value;\n    this.language = language;\n\n    try {\n      localStorage.setItem(\"selectedLanguage\", JSON.stringify(language));\n    } catch (err: any) {\n      // Ignore\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-authorize\": HaAuthorize;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}