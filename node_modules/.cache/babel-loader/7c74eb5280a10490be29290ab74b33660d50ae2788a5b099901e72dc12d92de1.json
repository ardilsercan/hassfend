{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport \"@lrnwebcomponents/simple-tooltip/simple-tooltip\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { computeStateName } from \"../../common/entity/compute_state_name\";\nimport \"../ha-relative-time\";\nimport \"./state-badge\";\nlet StateInfo = _decorate([customElement(\"state-info\")], function (_initialize, _LitElement) {\n  class StateInfo extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: StateInfo,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"stateObj\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"inDialog\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"color\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this.hass || !this.stateObj) {\n          return nothing;\n        }\n        const name = computeStateName(this.stateObj);\n        return html`<state-badge\n        .hass=${this.hass}\n        .stateObj=${this.stateObj}\n        .stateColor=${true}\n        .color=${this.color}\n      ></state-badge>\n      <div class=\"info\">\n        <div class=\"name\" .title=${name} .inDialog=${this.inDialog}>\n          ${name}\n        </div>\n        ${this.inDialog ? html`<div class=\"time-ago\">\n              <ha-relative-time\n                id=\"last_changed\"\n                .hass=${this.hass}\n                .datetime=${this.stateObj.last_changed}\n                capitalize\n              ></ha-relative-time>\n              <simple-tooltip animation-delay=\"0\" for=\"last_changed\">\n                <div>\n                  <div class=\"row\">\n                    <span class=\"column-name\">\n                      ${this.hass.localize(\"ui.dialogs.more_info_control.last_changed\")}:\n                    </span>\n                    <ha-relative-time\n                      .hass=${this.hass}\n                      .datetime=${this.stateObj.last_changed}\n                      capitalize\n                    ></ha-relative-time>\n                  </div>\n                  <div class=\"row\">\n                    <span>\n                      ${this.hass.localize(\"ui.dialogs.more_info_control.last_updated\")}:\n                    </span>\n                    <ha-relative-time\n                      .hass=${this.hass}\n                      .datetime=${this.stateObj.last_updated}\n                      capitalize\n                    ></ha-relative-time>\n                  </div>\n                </div>\n              </simple-tooltip>\n            </div>` : html`<div class=\"extra-info\"><slot></slot></div>`}\n      </div>`;\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css`\n      :host {\n        min-width: 120px;\n        white-space: nowrap;\n        display: flex;\n        align-items: center;\n      }\n\n      state-badge {\n        flex: none;\n      }\n\n      .info {\n        margin-left: 8px;\n        margin-inline-start: 8px;\n        margin-inline-end: initial;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        height: 100%;\n        min-width: 0;\n        text-align: var(--float-start);\n      }\n\n      .name {\n        color: var(--primary-text-color);\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n      }\n\n      .name[inDialog],\n      :host([secondary-line]) .name {\n        line-height: 20px;\n      }\n\n      .time-ago,\n      .extra-info,\n      .extra-info > * {\n        color: var(--secondary-text-color);\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n      }\n\n      .row {\n        display: flex;\n        flex-direction: row;\n        flex-wrap: no-wrap;\n        width: 100%;\n        justify-content: space-between;\n        margin: 0 2px 4px 0;\n      }\n\n      .row:last-child {\n        margin-bottom: 0px;\n      }\n    `;\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","nothing","customElement","property","computeStateName","StateInfo","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","type","Boolean","render","hass","stateObj","name","color","inDialog","last_changed","localize","last_updated","static","styles"],"sources":["/Users/sercanardil/Desktop/frontend/src/components/entity/state-info.ts"],"sourcesContent":["import \"@lrnwebcomponents/simple-tooltip/simple-tooltip\";\nimport type { HassEntity } from \"home-assistant-js-websocket\";\nimport { css, CSSResultGroup, html, LitElement, nothing } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { computeStateName } from \"../../common/entity/compute_state_name\";\nimport type { HomeAssistant } from \"../../types\";\nimport \"../ha-relative-time\";\nimport \"./state-badge\";\n\n@customElement(\"state-info\")\nclass StateInfo extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public stateObj?: HassEntity;\n\n  @property({ type: Boolean }) public inDialog = false;\n\n  @property() public color?: string;\n\n  protected render() {\n    if (!this.hass || !this.stateObj) {\n      return nothing;\n    }\n\n    const name = computeStateName(this.stateObj);\n\n    return html`<state-badge\n        .hass=${this.hass}\n        .stateObj=${this.stateObj}\n        .stateColor=${true}\n        .color=${this.color}\n      ></state-badge>\n      <div class=\"info\">\n        <div class=\"name\" .title=${name} .inDialog=${this.inDialog}>\n          ${name}\n        </div>\n        ${this.inDialog\n          ? html`<div class=\"time-ago\">\n              <ha-relative-time\n                id=\"last_changed\"\n                .hass=${this.hass}\n                .datetime=${this.stateObj.last_changed}\n                capitalize\n              ></ha-relative-time>\n              <simple-tooltip animation-delay=\"0\" for=\"last_changed\">\n                <div>\n                  <div class=\"row\">\n                    <span class=\"column-name\">\n                      ${this.hass.localize(\n                        \"ui.dialogs.more_info_control.last_changed\"\n                      )}:\n                    </span>\n                    <ha-relative-time\n                      .hass=${this.hass}\n                      .datetime=${this.stateObj.last_changed}\n                      capitalize\n                    ></ha-relative-time>\n                  </div>\n                  <div class=\"row\">\n                    <span>\n                      ${this.hass.localize(\n                        \"ui.dialogs.more_info_control.last_updated\"\n                      )}:\n                    </span>\n                    <ha-relative-time\n                      .hass=${this.hass}\n                      .datetime=${this.stateObj.last_updated}\n                      capitalize\n                    ></ha-relative-time>\n                  </div>\n                </div>\n              </simple-tooltip>\n            </div>`\n          : html`<div class=\"extra-info\"><slot></slot></div>`}\n      </div>`;\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      :host {\n        min-width: 120px;\n        white-space: nowrap;\n        display: flex;\n        align-items: center;\n      }\n\n      state-badge {\n        flex: none;\n      }\n\n      .info {\n        margin-left: 8px;\n        margin-inline-start: 8px;\n        margin-inline-end: initial;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        height: 100%;\n        min-width: 0;\n        text-align: var(--float-start);\n      }\n\n      .name {\n        color: var(--primary-text-color);\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n      }\n\n      .name[inDialog],\n      :host([secondary-line]) .name {\n        line-height: 20px;\n      }\n\n      .time-ago,\n      .extra-info,\n      .extra-info > * {\n        color: var(--secondary-text-color);\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n      }\n\n      .row {\n        display: flex;\n        flex-direction: row;\n        flex-wrap: no-wrap;\n        width: 100%;\n        justify-content: space-between;\n        margin: 0 2px 4px 0;\n      }\n\n      .row:last-child {\n        margin-bottom: 0px;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"state-info\": StateInfo;\n  }\n}\n"],"mappings":";AAAA,OAAO,iDAAiD;AAExD,SAASA,GAAG,EAAkBC,IAAI,EAAEC,UAAU,EAAEC,OAAO,QAAQ,KAAK;AACpE,SAASC,aAAa,EAAEC,QAAQ,QAAQ,gBAAgB;AACxD,SAASC,gBAAgB,QAAQ,wCAAwC;AAEzE,OAAO,qBAAqB;AAC5B,OAAO,eAAe;AAAC,IAGjBC,SAAS,GAAAC,SAAA,EADdJ,aAAa,CAAC,YAAY,CAAC,aAAAK,WAAA,EAAAC,WAAA;EAA5B,MACMH,SAAS,SAAAG,WAAA,CAAoB;IAAAC,YAAA,GAAAC,IAAA;MAAA,SAAAA,IAAA;MAAAH,WAAA;IAAA;EA+HnC;EAAC;IAAAI,CAAA,EA/HKN,SAAS;IAAAO,CAAA;MAAAC,IAAA;MAAAC,UAAA,GACZX,QAAQ,CAAC;QAAEY,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAC,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAE9BX,QAAQ,CAAC;QAAEY,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAC,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAE9BX,QAAQ,CAAC;QAAEe,IAAI,EAAEC;MAAQ,CAAC,CAAC;MAAAH,GAAA;MAAAC,MAAA;QAAA,OAAmB,KAAK;MAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAEnDX,QAAQ,CAAC,CAAC;MAAAa,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAEX,SAAAG,OAAA,EAAmB;QACjB,IAAI,CAAC,IAAI,CAACC,IAAI,IAAI,CAAC,IAAI,CAACC,QAAQ,EAAE;UAChC,OAAOrB,OAAO;QAChB;QAEA,MAAMsB,IAAI,GAAGnB,gBAAgB,CAAC,IAAI,CAACkB,QAAQ,CAAC;QAE5C,OAAOvB,IAAK;AAChB,gBAAgB,IAAI,CAACsB,IAAK;AAC1B,oBAAoB,IAAI,CAACC,QAAS;AAClC,sBAAsB,IAAK;AAC3B,iBAAiB,IAAI,CAACE,KAAM;AAC5B;AACA;AACA,mCAAmCD,IAAK,cAAa,IAAI,CAACE,QAAS;AACnE,YAAYF,IAAK;AACjB;AACA,UAAU,IAAI,CAACE,QAAQ,GACX1B,IAAK;AACjB;AACA;AACA,wBAAwB,IAAI,CAACsB,IAAK;AAClC,4BAA4B,IAAI,CAACC,QAAQ,CAACI,YAAa;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,IAAI,CAACL,IAAI,CAACM,QAAQ,CAClB,2CACF,CAAE;AACxB;AACA;AACA,8BAA8B,IAAI,CAACN,IAAK;AACxC,kCAAkC,IAAI,CAACC,QAAQ,CAACI,YAAa;AAC7D;AACA;AACA;AACA;AACA;AACA,wBAAwB,IAAI,CAACL,IAAI,CAACM,QAAQ,CAClB,2CACF,CAAE;AACxB;AACA;AACA,8BAA8B,IAAI,CAACN,IAAK;AACxC,kCAAkC,IAAI,CAACC,QAAQ,CAACM,YAAa;AAC7D;AACA;AACA;AACA;AACA;AACA,mBAAmB,GACP7B,IAAK,6CAA6C;AAC9D,aAAa;MACX;IAAC;MAAAc,IAAA;MAAAgB,MAAA;MAAAb,GAAA;MAAAC,KAAA,EAED,SAAAa,OAAA,EAAoC;QAClC,OAAOhC,GAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;MACH;IAAC;EAAA;AAAA,GA9HqBE,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}