{"ast":null,"code":"/**\n * @license\n * Copyright (c) 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * A mixin that forwards CSS class names to the internal overlay element\n * by setting the `overlayClass` property or `overlay-class` attribute.\n *\n * @polymerMixin\n */\nexport const OverlayClassMixin = superclass => class OverlayClassMixinClass extends superclass {\n  static get properties() {\n    return {\n      /**\n       * A space-delimited list of CSS class names to set on the overlay element.\n       * This property does not affect other CSS class names set manually via JS.\n       *\n       * Note, if the CSS class name was set with this property, clearing it will\n       * remove it from the overlay, even if the same class name was also added\n       * manually, e.g. by using `classList.add()` in the `renderer` function.\n       *\n       * @attr {string} overlay-class\n       */\n      overlayClass: {\n        type: String\n      },\n      /**\n       * An overlay element on which CSS class names are set.\n       *\n       * @protected\n       */\n      _overlayElement: {\n        type: Object\n      }\n    };\n  }\n  static get observers() {\n    return ['__updateOverlayClassNames(overlayClass, _overlayElement)'];\n  }\n\n  /** @private */\n  __updateOverlayClassNames(overlayClass, overlayElement) {\n    if (!overlayElement) {\n      return;\n    }\n\n    // Overlay is set but overlayClass is not set\n    if (overlayClass === undefined) {\n      return;\n    }\n    const {\n      classList\n    } = overlayElement;\n    if (!this.__initialClasses) {\n      this.__initialClasses = new Set(classList);\n    }\n    if (Array.isArray(this.__previousClasses)) {\n      // Remove old classes that no longer apply\n      const classesToRemove = this.__previousClasses.filter(name => !this.__initialClasses.has(name));\n      if (classesToRemove.length > 0) {\n        classList.remove(...classesToRemove);\n      }\n    }\n\n    // Add new classes based on the overlayClass\n    const classesToAdd = typeof overlayClass === 'string' ? overlayClass.split(' ') : [];\n    if (classesToAdd.length > 0) {\n      classList.add(...classesToAdd);\n    }\n    this.__previousClasses = classesToAdd;\n  }\n};","map":{"version":3,"names":["OverlayClassMixin","superclass","OverlayClassMixinClass","properties","overlayClass","type","String","_overlayElement","Object","observers","__updateOverlayClassNames","overlayElement","undefined","classList","__initialClasses","Set","Array","isArray","__previousClasses","classesToRemove","filter","name","has","length","remove","classesToAdd","split","add"],"sources":["/Users/sercanardil/Desktop/frontend/node_modules/@vaadin/component-base/src/overlay-class-mixin.js"],"sourcesContent":["/**\n * @license\n * Copyright (c) 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * A mixin that forwards CSS class names to the internal overlay element\n * by setting the `overlayClass` property or `overlay-class` attribute.\n *\n * @polymerMixin\n */\nexport const OverlayClassMixin = (superclass) =>\n  class OverlayClassMixinClass extends superclass {\n    static get properties() {\n      return {\n        /**\n         * A space-delimited list of CSS class names to set on the overlay element.\n         * This property does not affect other CSS class names set manually via JS.\n         *\n         * Note, if the CSS class name was set with this property, clearing it will\n         * remove it from the overlay, even if the same class name was also added\n         * manually, e.g. by using `classList.add()` in the `renderer` function.\n         *\n         * @attr {string} overlay-class\n         */\n        overlayClass: {\n          type: String,\n        },\n\n        /**\n         * An overlay element on which CSS class names are set.\n         *\n         * @protected\n         */\n        _overlayElement: {\n          type: Object,\n        },\n      };\n    }\n\n    static get observers() {\n      return ['__updateOverlayClassNames(overlayClass, _overlayElement)'];\n    }\n\n    /** @private */\n    __updateOverlayClassNames(overlayClass, overlayElement) {\n      if (!overlayElement) {\n        return;\n      }\n\n      // Overlay is set but overlayClass is not set\n      if (overlayClass === undefined) {\n        return;\n      }\n\n      const { classList } = overlayElement;\n\n      if (!this.__initialClasses) {\n        this.__initialClasses = new Set(classList);\n      }\n\n      if (Array.isArray(this.__previousClasses)) {\n        // Remove old classes that no longer apply\n        const classesToRemove = this.__previousClasses.filter((name) => !this.__initialClasses.has(name));\n        if (classesToRemove.length > 0) {\n          classList.remove(...classesToRemove);\n        }\n      }\n\n      // Add new classes based on the overlayClass\n      const classesToAdd = typeof overlayClass === 'string' ? overlayClass.split(' ') : [];\n      if (classesToAdd.length > 0) {\n        classList.add(...classesToAdd);\n      }\n\n      this.__previousClasses = classesToAdd;\n    }\n  };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,iBAAiB,GAAIC,UAAU,IAC1C,MAAMC,sBAAsB,SAASD,UAAU,CAAC;EAC9C,WAAWE,UAAUA,CAAA,EAAG;IACtB,OAAO;MACL;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACQC,YAAY,EAAE;QACZC,IAAI,EAAEC;MACR,CAAC;MAED;AACR;AACA;AACA;AACA;MACQC,eAAe,EAAE;QACfF,IAAI,EAAEG;MACR;IACF,CAAC;EACH;EAEA,WAAWC,SAASA,CAAA,EAAG;IACrB,OAAO,CAAC,0DAA0D,CAAC;EACrE;;EAEA;EACAC,yBAAyBA,CAACN,YAAY,EAAEO,cAAc,EAAE;IACtD,IAAI,CAACA,cAAc,EAAE;MACnB;IACF;;IAEA;IACA,IAAIP,YAAY,KAAKQ,SAAS,EAAE;MAC9B;IACF;IAEA,MAAM;MAAEC;IAAU,CAAC,GAAGF,cAAc;IAEpC,IAAI,CAAC,IAAI,CAACG,gBAAgB,EAAE;MAC1B,IAAI,CAACA,gBAAgB,GAAG,IAAIC,GAAG,CAACF,SAAS,CAAC;IAC5C;IAEA,IAAIG,KAAK,CAACC,OAAO,CAAC,IAAI,CAACC,iBAAiB,CAAC,EAAE;MACzC;MACA,MAAMC,eAAe,GAAG,IAAI,CAACD,iBAAiB,CAACE,MAAM,CAAEC,IAAI,IAAK,CAAC,IAAI,CAACP,gBAAgB,CAACQ,GAAG,CAACD,IAAI,CAAC,CAAC;MACjG,IAAIF,eAAe,CAACI,MAAM,GAAG,CAAC,EAAE;QAC9BV,SAAS,CAACW,MAAM,CAAC,GAAGL,eAAe,CAAC;MACtC;IACF;;IAEA;IACA,MAAMM,YAAY,GAAG,OAAOrB,YAAY,KAAK,QAAQ,GAAGA,YAAY,CAACsB,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE;IACpF,IAAID,YAAY,CAACF,MAAM,GAAG,CAAC,EAAE;MAC3BV,SAAS,CAACc,GAAG,CAAC,GAAGF,YAAY,CAAC;IAChC;IAEA,IAAI,CAACP,iBAAiB,GAAGO,YAAY;EACvC;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}