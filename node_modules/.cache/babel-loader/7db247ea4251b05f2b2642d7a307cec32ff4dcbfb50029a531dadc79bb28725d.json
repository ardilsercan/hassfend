{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport { css, html, LitElement } from \"lit\";\nimport { customElement, property, queryAll } from \"lit/decorators\";\nimport { styleMap } from \"lit/directives/style-map\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport \"./ha-icon-button\";\nexport let HaButtonToggleGroup = _decorate([customElement(\"ha-button-toggle-group\")], function (_initialize, _LitElement) {\n  class HaButtonToggleGroup extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaButtonToggleGroup,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"buttons\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"active\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"fullWidth\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"dense\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [queryAll(\"mwc-button\")],\n      key: \"_buttons\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        return html`\n      <div>\n        ${this.buttons.map(button => button.iconPath ? html`<ha-icon-button\n                .label=${button.label}\n                .path=${button.iconPath}\n                .value=${button.value}\n                ?active=${this.active === button.value}\n                @click=${this._handleClick}\n              ></ha-icon-button>` : html`<mwc-button\n                style=${styleMap({\n          width: this.fullWidth ? `${100 / this.buttons.length}%` : \"initial\"\n        })}\n                outlined\n                .dense=${this.dense}\n                .value=${button.value}\n                ?active=${this.active === button.value}\n                @click=${this._handleClick}\n                >${button.label}</mwc-button\n              >`)}\n      </div>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"updated\",\n      value: function updated() {\n        var _this$_buttons;\n        // Work around Safari default margin that is not reset in mwc-button as of aug 2021\n        (_this$_buttons = this._buttons) === null || _this$_buttons === void 0 || _this$_buttons.forEach(async button => {\n          await button.updateComplete;\n          button.shadowRoot.querySelector(\"button\").style.margin = \"0\";\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleClick\",\n      value: function _handleClick(ev) {\n        this.active = ev.currentTarget.value;\n        fireEvent(this, \"value-changed\", {\n          value: this.active\n        });\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css`\n      div {\n        display: flex;\n        --mdc-icon-button-size: var(--button-toggle-size, 36px);\n        --mdc-icon-size: var(--button-toggle-icon-size, 20px);\n        direction: ltr;\n      }\n      mwc-button {\n        --mdc-shape-small: 0;\n        --mdc-button-outline-width: 1px 0 1px 1px;\n      }\n      ha-icon-button {\n        border: 1px solid var(--primary-color);\n        border-right-width: 0px;\n      }\n      ha-icon-button,\n      mwc-button {\n        position: relative;\n        cursor: pointer;\n      }\n      ha-icon-button::before,\n      mwc-button::before {\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        position: absolute;\n        background-color: currentColor;\n        opacity: 0;\n        pointer-events: none;\n        content: \"\";\n        transition:\n          opacity 15ms linear,\n          background-color 15ms linear;\n      }\n      ha-icon-button[active]::before,\n      mwc-button[active]::before {\n        opacity: var(--mdc-icon-button-ripple-opacity, 0.12);\n      }\n      ha-icon-button:first-child,\n      mwc-button:first-child {\n        --mdc-shape-small: 4px 0 0 4px;\n        border-radius: 4px 0 0 4px;\n      }\n      ha-icon-button:last-child,\n      mwc-button:last-child {\n        border-radius: 0 4px 4px 0;\n        border-right-width: 1px;\n        --mdc-shape-small: 0 4px 4px 0;\n        --mdc-button-outline-width: 1px;\n      }\n      ha-icon-button:only-child,\n      mwc-button:only-child {\n        --mdc-shape-small: 4px;\n        border-right-width: 1px;\n      }\n    `;\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","customElement","property","queryAll","styleMap","fireEvent","HaButtonToggleGroup","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","type","Boolean","render","buttons","map","button","iconPath","label","active","_handleClick","width","fullWidth","length","dense","updated","_this$_buttons","_buttons","forEach","updateComplete","shadowRoot","querySelector","style","margin","ev","currentTarget","static","styles"],"sources":["/workspaces/frontend/src/components/ha-button-toggle-group.ts"],"sourcesContent":["import { Button } from \"@material/mwc-button/mwc-button\";\nimport { css, CSSResultGroup, html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, property, queryAll } from \"lit/decorators\";\nimport { styleMap } from \"lit/directives/style-map\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport type { ToggleButton } from \"../types\";\nimport \"./ha-icon-button\";\n\n@customElement(\"ha-button-toggle-group\")\nexport class HaButtonToggleGroup extends LitElement {\n  @property({ attribute: false }) public buttons!: ToggleButton[];\n\n  @property() public active?: string;\n\n  @property({ type: Boolean }) public fullWidth = false;\n\n  @property({ type: Boolean }) public dense = false;\n\n  @queryAll(\"mwc-button\") private _buttons?: Button[];\n\n  protected render(): TemplateResult {\n    return html`\n      <div>\n        ${this.buttons.map((button) =>\n          button.iconPath\n            ? html`<ha-icon-button\n                .label=${button.label}\n                .path=${button.iconPath}\n                .value=${button.value}\n                ?active=${this.active === button.value}\n                @click=${this._handleClick}\n              ></ha-icon-button>`\n            : html`<mwc-button\n                style=${styleMap({\n                  width: this.fullWidth\n                    ? `${100 / this.buttons.length}%`\n                    : \"initial\",\n                })}\n                outlined\n                .dense=${this.dense}\n                .value=${button.value}\n                ?active=${this.active === button.value}\n                @click=${this._handleClick}\n                >${button.label}</mwc-button\n              >`\n        )}\n      </div>\n    `;\n  }\n\n  protected updated() {\n    // Work around Safari default margin that is not reset in mwc-button as of aug 2021\n    this._buttons?.forEach(async (button) => {\n      await button.updateComplete;\n      (\n        button.shadowRoot!.querySelector(\"button\") as HTMLButtonElement\n      ).style.margin = \"0\";\n    });\n  }\n\n  private _handleClick(ev): void {\n    this.active = ev.currentTarget.value;\n    fireEvent(this, \"value-changed\", { value: this.active });\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      div {\n        display: flex;\n        --mdc-icon-button-size: var(--button-toggle-size, 36px);\n        --mdc-icon-size: var(--button-toggle-icon-size, 20px);\n        direction: ltr;\n      }\n      mwc-button {\n        --mdc-shape-small: 0;\n        --mdc-button-outline-width: 1px 0 1px 1px;\n      }\n      ha-icon-button {\n        border: 1px solid var(--primary-color);\n        border-right-width: 0px;\n      }\n      ha-icon-button,\n      mwc-button {\n        position: relative;\n        cursor: pointer;\n      }\n      ha-icon-button::before,\n      mwc-button::before {\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        position: absolute;\n        background-color: currentColor;\n        opacity: 0;\n        pointer-events: none;\n        content: \"\";\n        transition:\n          opacity 15ms linear,\n          background-color 15ms linear;\n      }\n      ha-icon-button[active]::before,\n      mwc-button[active]::before {\n        opacity: var(--mdc-icon-button-ripple-opacity, 0.12);\n      }\n      ha-icon-button:first-child,\n      mwc-button:first-child {\n        --mdc-shape-small: 4px 0 0 4px;\n        border-radius: 4px 0 0 4px;\n      }\n      ha-icon-button:last-child,\n      mwc-button:last-child {\n        border-radius: 0 4px 4px 0;\n        border-right-width: 1px;\n        --mdc-shape-small: 0 4px 4px 0;\n        --mdc-button-outline-width: 1px;\n      }\n      ha-icon-button:only-child,\n      mwc-button:only-child {\n        --mdc-shape-small: 4px;\n        border-right-width: 1px;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-button-toggle-group\": HaButtonToggleGroup;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}