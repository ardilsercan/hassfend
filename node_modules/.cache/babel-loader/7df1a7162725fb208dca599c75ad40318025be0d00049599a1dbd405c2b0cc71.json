{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _regeneratorRuntime from \"@babel/runtime/helpers/regeneratorRuntime\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _decorate from \"@babel/runtime/helpers/decorate\";\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8;\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\nimport \"@material/mwc-button\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { property, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport \"../../../components/entity/ha-entities-picker\";\nimport { createCloseHeading } from \"../../../components/ha-dialog\";\nimport \"../../../components/ha-formfield\";\nimport \"../../../components/ha-picture-upload\";\nimport \"../../../components/ha-textfield\";\nimport { deleteUser, SYSTEM_GROUP_ID_ADMIN, SYSTEM_GROUP_ID_USER, updateUser } from \"../../../data/user\";\nimport { showAlertDialog, showConfirmationDialog } from \"../../../dialogs/generic/show-dialog-box\";\nimport { haStyleDialog } from \"../../../resources/styles\";\nimport { documentationUrl } from \"../../../util/documentation-url\";\nimport { showAddUserDialog } from \"../users/show-dialog-add-user\";\nimport { showAdminChangePasswordDialog } from \"../users/show-dialog-admin-change-password\";\nvar includeDomains = [\"device_tracker\"];\nvar cropOptions = {\n  round: true,\n  quality: 0.75,\n  aspectRatio: 1\n};\nvar DialogPersonDetail = _decorate(null, function (_initialize, _LitElement) {\n  var DialogPersonDetail = /*#__PURE__*/function (_LitElement2) {\n    _inherits(DialogPersonDetail, _LitElement2);\n    function DialogPersonDetail() {\n      var _this;\n      _classCallCheck(this, DialogPersonDetail);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, DialogPersonDetail, [].concat(args));\n      _initialize(_assertThisInitialized(_this));\n      return _this;\n    }\n    return _createClass(DialogPersonDetail);\n  }(_LitElement);\n  return {\n    F: DialogPersonDetail,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_name\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_userId\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_user\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_isAdmin\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_localOnly\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_deviceTrackers\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_picture\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_error\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_params\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_submitting\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_personExists\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_deviceTrackersAvailable\",\n      value: function value() {\n        return memoizeOne(function (hass) {\n          return Object.keys(hass.states).some(function (entityId) {\n            return entityId.substr(0, entityId.indexOf(\".\")) === \"device_tracker\";\n          });\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"showDialog\",\n      value: function () {\n        var _showDialog = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(params) {\n          var _this2 = this;\n          var _this$_user, _this$_user2;\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                this._params = params;\n                this._error = undefined;\n                if (this._params.entry) {\n                  this._personExists = true;\n                  this._name = this._params.entry.name || \"\";\n                  this._userId = this._params.entry.user_id || undefined;\n                  this._deviceTrackers = this._params.entry.device_trackers || [];\n                  this._picture = this._params.entry.picture || null;\n                  this._user = this._userId ? this._params.users.find(function (user) {\n                    return user.id === _this2._userId;\n                  }) : undefined;\n                  this._isAdmin = (_this$_user = this._user) === null || _this$_user === void 0 ? void 0 : _this$_user.group_ids.includes(SYSTEM_GROUP_ID_ADMIN);\n                  this._localOnly = (_this$_user2 = this._user) === null || _this$_user2 === void 0 ? void 0 : _this$_user2.local_only;\n                } else {\n                  this._personExists = false;\n                  this._name = \"\";\n                  this._userId = undefined;\n                  this._user = undefined;\n                  this._isAdmin = undefined;\n                  this._localOnly = undefined;\n                  this._deviceTrackers = [];\n                  this._picture = null;\n                }\n                _context.next = 5;\n                return this.updateComplete;\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee, this);\n        }));\n        function showDialog(_x) {\n          return _showDialog.apply(this, arguments);\n        }\n        return showDialog;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var _this$hass$user, _this$hass$user2;\n        if (!this._params) {\n          return nothing;\n        }\n        var nameInvalid = this._name.trim() === \"\";\n        return html(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      <ha-dialog\\n        open\\n        @closed=\", \"\\n        scrimClickAction\\n        escapeKeyAction\\n        .heading=\", \"\\n      >\\n        <div>\\n          \", \"\\n          <div class=\\\"form\\\">\\n            <ha-textfield\\n              dialogInitialFocus\\n              .value=\", \"\\n              @input=\", \"\\n              label=\", \"\\n              .validationMessage=\", \"\\n              required\\n            ></ha-textfield>\\n\\n            <ha-picture-upload\\n              .hass=\", \"\\n              .value=\", \"\\n              crop\\n              .cropOptions=\", \"\\n              @change=\", \"\\n            ></ha-picture-upload>\\n\\n            <ha-formfield\\n              .label=\", \"\\n            >\\n              <ha-switch\\n                @change=\", \"\\n                .disabled=\", \"\\n                .checked=\", \"\\n              ></ha-switch>\\n            </ha-formfield>\\n\\n            \", \"\\n            \", \"\\n          </div>\\n        </div>\\n        \", \"\\n        <mwc-button\\n          slot=\\\"primaryAction\\\"\\n          @click=\", \"\\n          .disabled=\", \"\\n        >\\n          \", \"\\n        </mwc-button>\\n      </ha-dialog>\\n    \"])), this._close, createCloseHeading(this.hass, this._params.entry ? this._params.entry.name : this.hass.localize(\"ui.panel.config.person.detail.new_person\")), this._error ? html(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\" <div class=\\\"error\\\">\", \"</div> \"])), this._error) : \"\", this._name, this._nameChanged, this.hass.localize(\"ui.panel.config.person.detail.name\"), this.hass.localize(\"ui.panel.config.person.detail.name_error_msg\"), this.hass, this._picture, cropOptions, this._pictureChanged, this.hass.localize(\"ui.panel.config.person.detail.allow_login\"), this._allowLoginChanged, this._user && (this._user.id === ((_this$hass$user = this.hass.user) === null || _this$hass$user === void 0 ? void 0 : _this$hass$user.id) || this._user.system_generated || this._user.is_owner), this._userId, this._user ? html(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"<ha-formfield\\n                    .label=\", \"\\n                  >\\n                    <ha-switch\\n                      .checked=\", \"\\n                      @change=\", \"\\n                    >\\n                    </ha-switch>\\n                  </ha-formfield>\\n                  <ha-formfield\\n                    .label=\", \"\\n                  >\\n                    <ha-switch\\n                      .disabled=\", \"\\n                      .checked=\", \"\\n                      @change=\", \"\\n                    >\\n                    </ha-switch>\\n                  </ha-formfield>\"])), this.hass.localize(\"ui.panel.config.person.detail.local_only\"), this._localOnly, this._localOnlyChanged, this.hass.localize(\"ui.panel.config.person.detail.admin\"), this._user.system_generated || this._user.is_owner, this._isAdmin, this._adminChanged) : \"\", this._deviceTrackersAvailable(this.hass) ? html(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n                  <p>\\n                    \", \"\\n                  </p>\\n                  <ha-entities-picker\\n                    .hass=\", \"\\n                    .value=\", \"\\n                    .includeDomains=\", \"\\n                    .pickedEntityLabel=\", \"\\n                    .pickEntityLabel=\", \"\\n                    @value-changed=\", \"\\n                  >\\n                  </ha-entities-picker>\\n                \"])), this.hass.localize(\"ui.panel.config.person.detail.device_tracker_intro\"), this.hass, this._deviceTrackers, includeDomains, this.hass.localize(\"ui.panel.config.person.detail.device_tracker_picked\"), this.hass.localize(\"ui.panel.config.person.detail.device_tracker_pick\"), this._deviceTrackersChanged) : html(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"\\n                  <p>\\n                    \", \"\\n                  </p>\\n                  <ul>\\n                    <li>\\n                      <a\\n                        href=\", \"\\n                        target=\\\"_blank\\\"\\n                        rel=\\\"noreferrer\\\"\\n                        >\", \"</a\\n                      >\\n                    </li>\\n                    <li>\\n                      <a\\n                        @click=\", \"\\n                        href=\\\"/config/integrations\\\"\\n                      >\\n                        \", \"</a\\n                      >\\n                    </li>\\n                  </ul>\\n                \"])), this.hass.localize(\"ui.panel.config.person.detail.no_device_tracker_available_intro\"), documentationUrl(this.hass, \"/integrations/#presence-detection\"), this.hass.localize(\"ui.panel.config.person.detail.link_presence_detection_integrations\"), this._closeDialog, this.hass.localize(\"ui.panel.config.person.detail.link_integrations_page\")), this._params.entry ? html(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"\\n              <mwc-button\\n                slot=\\\"secondaryAction\\\"\\n                class=\\\"warning\\\"\\n                @click=\", \"\\n                .disabled=\", \"\\n              >\\n                \", \"\\n              </mwc-button>\\n              \", \"\\n            \"])), this._deleteEntry, this._user && this._user.is_owner || this._submitting, this.hass.localize(\"ui.panel.config.person.detail.delete\"), this._user && (_this$hass$user2 = this.hass.user) !== null && _this$hass$user2 !== void 0 && _this$hass$user2.is_owner ? html(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral([\"<mwc-button\\n                    slot=\\\"secondaryAction\\\"\\n                    @click=\", \"\\n                  >\\n                    \", \"\\n                  </mwc-button>\"])), this._changePassword, this.hass.localize(\"ui.panel.config.users.editor.change_password\")) : \"\") : nothing, this._updateEntry, nameInvalid || this._submitting, this._params.entry ? this.hass.localize(\"ui.panel.config.person.detail.update\") : this.hass.localize(\"ui.panel.config.person.detail.create\"));\n      }\n    }, {\n      kind: \"method\",\n      key: \"_closeDialog\",\n      value: function _closeDialog() {\n        this._params = undefined;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_nameChanged\",\n      value: function _nameChanged(ev) {\n        this._error = undefined;\n        this._name = ev.target.value;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_adminChanged\",\n      value: function _adminChanged(ev) {\n        this._isAdmin = ev.target.checked;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_localOnlyChanged\",\n      value: function _localOnlyChanged(ev) {\n        this._localOnly = ev.target.checked;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_allowLoginChanged\",\n      value: function () {\n        var _allowLoginChanged2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(ev) {\n          var _this3 = this;\n          var target, _this$_params;\n          return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n            while (1) switch (_context3.prev = _context3.next) {\n              case 0:\n                target = ev.target;\n                if (!target.checked) {\n                  _context3.next = 6;\n                  break;\n                }\n                target.checked = false;\n                showAddUserDialog(this, {\n                  userAddedCallback: function () {\n                    var _userAddedCallback = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(user) {\n                      var _this3$_params;\n                      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n                        while (1) switch (_context2.prev = _context2.next) {\n                          case 0:\n                            if (user) {\n                              target.checked = true;\n                              _this3._user = user;\n                              _this3._userId = user.id;\n                              _this3._isAdmin = user.group_ids.includes(SYSTEM_GROUP_ID_ADMIN);\n                              _this3._localOnly = user.local_only;\n                              (_this3$_params = _this3._params) === null || _this3$_params === void 0 || _this3$_params.refreshUsers();\n                            }\n                          case 1:\n                          case \"end\":\n                            return _context2.stop();\n                        }\n                      }, _callee2);\n                    }));\n                    function userAddedCallback(_x3) {\n                      return _userAddedCallback.apply(this, arguments);\n                    }\n                    return userAddedCallback;\n                  }(),\n                  name: this._name\n                });\n                _context3.next = 16;\n                break;\n              case 6:\n                if (!this._userId) {\n                  _context3.next = 16;\n                  break;\n                }\n                _context3.next = 9;\n                return showConfirmationDialog(this, {\n                  text: this.hass.localize(\"ui.panel.config.person.detail.confirm_delete_user\", {\n                    name: this._name\n                  }),\n                  confirmText: this.hass.localize(\"ui.panel.config.person.detail.delete\"),\n                  dismissText: this.hass.localize(\"ui.common.cancel\")\n                });\n              case 9:\n                if (_context3.sent) {\n                  _context3.next = 12;\n                  break;\n                }\n                target.checked = true;\n                return _context3.abrupt(\"return\");\n              case 12:\n                _context3.next = 14;\n                return deleteUser(this.hass, this._userId);\n              case 14:\n                (_this$_params = this._params) === null || _this$_params === void 0 || _this$_params.refreshUsers();\n                this._userId = undefined;\n              case 16:\n              case \"end\":\n                return _context3.stop();\n            }\n          }, _callee3, this);\n        }));\n        function _allowLoginChanged(_x2) {\n          return _allowLoginChanged2.apply(this, arguments);\n        }\n        return _allowLoginChanged;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"_deviceTrackersChanged\",\n      value: function _deviceTrackersChanged(ev) {\n        this._error = undefined;\n        this._deviceTrackers = ev.detail.value;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_pictureChanged\",\n      value: function _pictureChanged(ev) {\n        this._error = undefined;\n        this._picture = ev.target.value;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_changePassword\",\n      value: function () {\n        var _changePassword2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n          var credential;\n          return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n            while (1) switch (_context4.prev = _context4.next) {\n              case 0:\n                if (this._user) {\n                  _context4.next = 2;\n                  break;\n                }\n                return _context4.abrupt(\"return\");\n              case 2:\n                credential = this._user.credentials.find(function (cred) {\n                  return cred.type === \"homeassistant\";\n                });\n                if (credential) {\n                  _context4.next = 6;\n                  break;\n                }\n                showAlertDialog(this, {\n                  title: \"No NDX Tech credentials found.\"\n                });\n                return _context4.abrupt(\"return\");\n              case 6:\n                showAdminChangePasswordDialog(this, {\n                  userId: this._user.id\n                });\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }, _callee4, this);\n        }));\n        function _changePassword() {\n          return _changePassword2.apply(this, arguments);\n        }\n        return _changePassword;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"_updateEntry\",\n      value: function () {\n        var _updateEntry2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n          var _entry, _this$_user3, _this$_user4, _this$_params2, values;\n          return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n            while (1) switch (_context5.prev = _context5.next) {\n              case 0:\n                this._submitting = true;\n                _context5.prev = 1;\n                if (!(this._userId && this._name !== ((_entry = this._params.entry) === null || _entry === void 0 ? void 0 : _entry.name) || this._isAdmin !== ((_this$_user3 = this._user) === null || _this$_user3 === void 0 ? void 0 : _this$_user3.group_ids.includes(SYSTEM_GROUP_ID_ADMIN)) || this._localOnly !== ((_this$_user4 = this._user) === null || _this$_user4 === void 0 ? void 0 : _this$_user4.local_only))) {\n                  _context5.next = 6;\n                  break;\n                }\n                _context5.next = 5;\n                return updateUser(this.hass, this._userId, {\n                  name: this._name.trim(),\n                  group_ids: [this._isAdmin ? SYSTEM_GROUP_ID_ADMIN : SYSTEM_GROUP_ID_USER],\n                  local_only: this._localOnly\n                });\n              case 5:\n                (_this$_params2 = this._params) === null || _this$_params2 === void 0 || _this$_params2.refreshUsers();\n              case 6:\n                values = {\n                  name: this._name.trim(),\n                  device_trackers: this._deviceTrackers,\n                  user_id: this._userId || null,\n                  picture: this._picture\n                };\n                if (!this._params.entry) {\n                  _context5.next = 12;\n                  break;\n                }\n                _context5.next = 10;\n                return this._params.updateEntry(values);\n              case 10:\n                _context5.next = 15;\n                break;\n              case 12:\n                _context5.next = 14;\n                return this._params.createEntry(values);\n              case 14:\n                this._personExists = true;\n              case 15:\n                this._params = undefined;\n                _context5.next = 21;\n                break;\n              case 18:\n                _context5.prev = 18;\n                _context5.t0 = _context5[\"catch\"](1);\n                this._error = _context5.t0 ? _context5.t0.message : \"Unknown error\";\n              case 21:\n                _context5.prev = 21;\n                this._submitting = false;\n                return _context5.finish(21);\n              case 24:\n              case \"end\":\n                return _context5.stop();\n            }\n          }, _callee5, this, [[1, 18, 21, 24]]);\n        }));\n        function _updateEntry() {\n          return _updateEntry2.apply(this, arguments);\n        }\n        return _updateEntry;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"_deleteEntry\",\n      value: function () {\n        var _deleteEntry2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n          return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n            while (1) switch (_context6.prev = _context6.next) {\n              case 0:\n                this._submitting = true;\n                _context6.prev = 1;\n                _context6.next = 4;\n                return this._params.removeEntry();\n              case 4:\n                if (!_context6.sent) {\n                  _context6.next = 7;\n                  break;\n                }\n                if (this._params.entry.user_id) {\n                  deleteUser(this.hass, this._params.entry.user_id);\n                }\n                this._params = undefined;\n              case 7:\n                _context6.prev = 7;\n                this._submitting = false;\n                return _context6.finish(7);\n              case 10:\n              case \"end\":\n                return _context6.stop();\n            }\n          }, _callee6, this, [[1,, 7, 10]]);\n        }));\n        function _deleteEntry() {\n          return _deleteEntry2.apply(this, arguments);\n        }\n        return _deleteEntry;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"_close\",\n      value: function _close() {\n        // If we do not have a person ID yet (= person creation dialog was just cancelled), but\n        // we already created a user ID for it, delete it now to not have it \"free floating\".\n        if (!this._personExists && this._userId) {\n          var _this$_params3;\n          deleteUser(this.hass, this._userId);\n          (_this$_params3 = this._params) === null || _this$_params3 === void 0 || _this$_params3.refreshUsers();\n          this._userId = undefined;\n        }\n        this._params = undefined;\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [haStyleDialog, css(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral([\"\\n        ha-picture-upload,\\n        ha-textfield {\\n          display: block;\\n        }\\n        ha-picture-upload {\\n          margin-bottom: 16px;\\n          --file-upload-image-border-radius: 50%;\\n        }\\n        ha-formfield {\\n          display: block;\\n          padding: 16px 0;\\n        }\\n        a {\\n          color: var(--primary-color);\\n        }\\n        p {\\n          color: var(--primary-text-color);\\n        }\\n      \"])))];\n      }\n    }]\n  };\n}, LitElement);\ncustomElements.define(\"dialog-person-detail\", DialogPersonDetail);","map":{"version":3,"names":["css","html","LitElement","nothing","property","state","memoizeOne","createCloseHeading","deleteUser","SYSTEM_GROUP_ID_ADMIN","SYSTEM_GROUP_ID_USER","updateUser","showAlertDialog","showConfirmationDialog","haStyleDialog","documentationUrl","showAddUserDialog","showAdminChangePasswordDialog","includeDomains","cropOptions","round","quality","aspectRatio","DialogPersonDetail","_decorate","_initialize","_LitElement","_LitElement2","_inherits","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_assertThisInitialized","_createClass","F","d","kind","decorators","attribute","key","value","hass","Object","keys","states","some","entityId","substr","indexOf","_showDialog","_asyncToGenerator","_regeneratorRuntime","mark","_callee","params","_this2","_this$_user","_this$_user2","wrap","_callee$","_context","prev","next","_params","_error","undefined","entry","_personExists","_name","name","_userId","user_id","_deviceTrackers","device_trackers","_picture","picture","_user","users","find","user","id","_isAdmin","group_ids","includes","_localOnly","local_only","updateComplete","stop","showDialog","_x","apply","render","_this$hass$user","_this$hass$user2","nameInvalid","trim","_templateObject","_taggedTemplateLiteral","_close","localize","_templateObject2","_nameChanged","_pictureChanged","_allowLoginChanged","system_generated","is_owner","_templateObject3","_localOnlyChanged","_adminChanged","_deviceTrackersAvailable","_templateObject4","_deviceTrackersChanged","_templateObject5","_closeDialog","_templateObject6","_deleteEntry","_submitting","_templateObject7","_changePassword","_updateEntry","ev","target","checked","_allowLoginChanged2","_callee3","_this3","_this$_params","_callee3$","_context3","userAddedCallback","_userAddedCallback","_callee2","_this3$_params","_callee2$","_context2","refreshUsers","_x3","text","confirmText","dismissText","sent","abrupt","_x2","detail","_changePassword2","_callee4","credential","_callee4$","_context4","credentials","cred","type","title","userId","_updateEntry2","_callee5","_entry","_this$_user3","_this$_user4","_this$_params2","values","_callee5$","_context5","updateEntry","createEntry","t0","message","finish","_deleteEntry2","_callee6","_callee6$","_context6","removeEntry","_this$_params3","static","styles","_templateObject8","customElements","define"],"sources":["/Users/sercanardil/Desktop/frontend/src/panels/config/person/dialog-person-detail.ts"],"sourcesContent":["import \"@material/mwc-button\";\nimport { css, CSSResultGroup, html, LitElement, nothing } from \"lit\";\nimport { property, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport \"../../../components/entity/ha-entities-picker\";\nimport { createCloseHeading } from \"../../../components/ha-dialog\";\nimport \"../../../components/ha-formfield\";\nimport \"../../../components/ha-picture-upload\";\nimport type { HaPictureUpload } from \"../../../components/ha-picture-upload\";\nimport \"../../../components/ha-textfield\";\nimport { PersonMutableParams } from \"../../../data/person\";\nimport {\n  deleteUser,\n  SYSTEM_GROUP_ID_ADMIN,\n  SYSTEM_GROUP_ID_USER,\n  updateUser,\n  User,\n} from \"../../../data/user\";\nimport {\n  showAlertDialog,\n  showConfirmationDialog,\n} from \"../../../dialogs/generic/show-dialog-box\";\nimport { CropOptions } from \"../../../dialogs/image-cropper-dialog/show-image-cropper-dialog\";\nimport { ValueChangedEvent, HomeAssistant } from \"../../../types\";\nimport { haStyleDialog } from \"../../../resources/styles\";\nimport { documentationUrl } from \"../../../util/documentation-url\";\nimport { showAddUserDialog } from \"../users/show-dialog-add-user\";\nimport { showAdminChangePasswordDialog } from \"../users/show-dialog-admin-change-password\";\nimport { PersonDetailDialogParams } from \"./show-dialog-person-detail\";\n\nconst includeDomains = [\"device_tracker\"];\n\nconst cropOptions: CropOptions = {\n  round: true,\n  quality: 0.75,\n  aspectRatio: 1,\n};\n\nclass DialogPersonDetail extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @state() private _name!: string;\n\n  @state() private _userId?: string;\n\n  @state() private _user?: User;\n\n  @state() private _isAdmin?: boolean;\n\n  @state() private _localOnly?: boolean;\n\n  @state() private _deviceTrackers!: string[];\n\n  @state() private _picture!: string | null;\n\n  @state() private _error?: string;\n\n  @state() private _params?: PersonDetailDialogParams;\n\n  @state() private _submitting = false;\n\n  @state() private _personExists = false;\n\n  private _deviceTrackersAvailable = memoizeOne((hass) =>\n    Object.keys(hass.states).some(\n      (entityId) =>\n        entityId.substr(0, entityId.indexOf(\".\")) === \"device_tracker\"\n    )\n  );\n\n  public async showDialog(params: PersonDetailDialogParams): Promise<void> {\n    this._params = params;\n    this._error = undefined;\n    if (this._params.entry) {\n      this._personExists = true;\n      this._name = this._params.entry.name || \"\";\n      this._userId = this._params.entry.user_id || undefined;\n      this._deviceTrackers = this._params.entry.device_trackers || [];\n      this._picture = this._params.entry.picture || null;\n      this._user = this._userId\n        ? this._params.users.find((user) => user.id === this._userId)\n        : undefined;\n      this._isAdmin = this._user?.group_ids.includes(SYSTEM_GROUP_ID_ADMIN);\n      this._localOnly = this._user?.local_only;\n    } else {\n      this._personExists = false;\n      this._name = \"\";\n      this._userId = undefined;\n      this._user = undefined;\n      this._isAdmin = undefined;\n      this._localOnly = undefined;\n      this._deviceTrackers = [];\n      this._picture = null;\n    }\n    await this.updateComplete;\n  }\n\n  protected render() {\n    if (!this._params) {\n      return nothing;\n    }\n    const nameInvalid = this._name.trim() === \"\";\n    return html`\n      <ha-dialog\n        open\n        @closed=${this._close}\n        scrimClickAction\n        escapeKeyAction\n        .heading=${createCloseHeading(\n          this.hass,\n          this._params.entry\n            ? this._params.entry.name\n            : this.hass!.localize(\"ui.panel.config.person.detail.new_person\")\n        )}\n      >\n        <div>\n          ${this._error ? html` <div class=\"error\">${this._error}</div> ` : \"\"}\n          <div class=\"form\">\n            <ha-textfield\n              dialogInitialFocus\n              .value=${this._name}\n              @input=${this._nameChanged}\n              label=${this.hass!.localize(\"ui.panel.config.person.detail.name\")}\n              .validationMessage=${this.hass!.localize(\n                \"ui.panel.config.person.detail.name_error_msg\"\n              )}\n              required\n            ></ha-textfield>\n\n            <ha-picture-upload\n              .hass=${this.hass}\n              .value=${this._picture}\n              crop\n              .cropOptions=${cropOptions}\n              @change=${this._pictureChanged}\n            ></ha-picture-upload>\n\n            <ha-formfield\n              .label=${this.hass!.localize(\n                \"ui.panel.config.person.detail.allow_login\"\n              )}\n            >\n              <ha-switch\n                @change=${this._allowLoginChanged}\n                .disabled=${this._user &&\n                (this._user.id === this.hass.user?.id ||\n                  this._user.system_generated ||\n                  this._user.is_owner)}\n                .checked=${this._userId}\n              ></ha-switch>\n            </ha-formfield>\n\n            ${this._user\n              ? html`<ha-formfield\n                    .label=${this.hass.localize(\n                      \"ui.panel.config.person.detail.local_only\"\n                    )}\n                  >\n                    <ha-switch\n                      .checked=${this._localOnly}\n                      @change=${this._localOnlyChanged}\n                    >\n                    </ha-switch>\n                  </ha-formfield>\n                  <ha-formfield\n                    .label=${this.hass.localize(\n                      \"ui.panel.config.person.detail.admin\"\n                    )}\n                  >\n                    <ha-switch\n                      .disabled=${this._user.system_generated ||\n                      this._user.is_owner}\n                      .checked=${this._isAdmin}\n                      @change=${this._adminChanged}\n                    >\n                    </ha-switch>\n                  </ha-formfield>`\n              : \"\"}\n            ${this._deviceTrackersAvailable(this.hass)\n              ? html`\n                  <p>\n                    ${this.hass.localize(\n                      \"ui.panel.config.person.detail.device_tracker_intro\"\n                    )}\n                  </p>\n                  <ha-entities-picker\n                    .hass=${this.hass}\n                    .value=${this._deviceTrackers}\n                    .includeDomains=${includeDomains}\n                    .pickedEntityLabel=${this.hass.localize(\n                      \"ui.panel.config.person.detail.device_tracker_picked\"\n                    )}\n                    .pickEntityLabel=${this.hass.localize(\n                      \"ui.panel.config.person.detail.device_tracker_pick\"\n                    )}\n                    @value-changed=${this._deviceTrackersChanged}\n                  >\n                  </ha-entities-picker>\n                `\n              : html`\n                  <p>\n                    ${this.hass!.localize(\n                      \"ui.panel.config.person.detail.no_device_tracker_available_intro\"\n                    )}\n                  </p>\n                  <ul>\n                    <li>\n                      <a\n                        href=${documentationUrl(\n                          this.hass,\n                          \"/integrations/#presence-detection\"\n                        )}\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                        >${this.hass!.localize(\n                          \"ui.panel.config.person.detail.link_presence_detection_integrations\"\n                        )}</a\n                      >\n                    </li>\n                    <li>\n                      <a\n                        @click=${this._closeDialog}\n                        href=\"/config/integrations\"\n                      >\n                        ${this.hass!.localize(\n                          \"ui.panel.config.person.detail.link_integrations_page\"\n                        )}</a\n                      >\n                    </li>\n                  </ul>\n                `}\n          </div>\n        </div>\n        ${this._params.entry\n          ? html`\n              <mwc-button\n                slot=\"secondaryAction\"\n                class=\"warning\"\n                @click=${this._deleteEntry}\n                .disabled=${(this._user && this._user.is_owner) ||\n                this._submitting}\n              >\n                ${this.hass!.localize(\"ui.panel.config.person.detail.delete\")}\n              </mwc-button>\n              ${this._user && this.hass.user?.is_owner\n                ? html`<mwc-button\n                    slot=\"secondaryAction\"\n                    @click=${this._changePassword}\n                  >\n                    ${this.hass.localize(\n                      \"ui.panel.config.users.editor.change_password\"\n                    )}\n                  </mwc-button>`\n                : \"\"}\n            `\n          : nothing}\n        <mwc-button\n          slot=\"primaryAction\"\n          @click=${this._updateEntry}\n          .disabled=${nameInvalid || this._submitting}\n        >\n          ${this._params.entry\n            ? this.hass!.localize(\"ui.panel.config.person.detail.update\")\n            : this.hass!.localize(\"ui.panel.config.person.detail.create\")}\n        </mwc-button>\n      </ha-dialog>\n    `;\n  }\n\n  private _closeDialog() {\n    this._params = undefined;\n  }\n\n  private _nameChanged(ev) {\n    this._error = undefined;\n    this._name = ev.target.value;\n  }\n\n  private _adminChanged(ev): void {\n    this._isAdmin = ev.target.checked;\n  }\n\n  private _localOnlyChanged(ev): void {\n    this._localOnly = ev.target.checked;\n  }\n\n  private async _allowLoginChanged(ev): Promise<void> {\n    const target = ev.target;\n    if (target.checked) {\n      target.checked = false;\n      showAddUserDialog(this, {\n        userAddedCallback: async (user?: User) => {\n          if (user) {\n            target.checked = true;\n            this._user = user;\n            this._userId = user.id;\n            this._isAdmin = user.group_ids.includes(SYSTEM_GROUP_ID_ADMIN);\n            this._localOnly = user.local_only;\n            this._params?.refreshUsers();\n          }\n        },\n        name: this._name,\n      });\n    } else if (this._userId) {\n      if (\n        !(await showConfirmationDialog(this, {\n          text: this.hass!.localize(\n            \"ui.panel.config.person.detail.confirm_delete_user\",\n            { name: this._name }\n          ),\n          confirmText: this.hass!.localize(\n            \"ui.panel.config.person.detail.delete\"\n          ),\n          dismissText: this.hass!.localize(\"ui.common.cancel\"),\n        }))\n      ) {\n        target.checked = true;\n        return;\n      }\n      await deleteUser(this.hass, this._userId);\n      this._params?.refreshUsers();\n      this._userId = undefined;\n    }\n  }\n\n  private _deviceTrackersChanged(ev: ValueChangedEvent<string[]>) {\n    this._error = undefined;\n    this._deviceTrackers = ev.detail.value;\n  }\n\n  private _pictureChanged(ev: ValueChangedEvent<string | null>) {\n    this._error = undefined;\n    this._picture = (ev.target as HaPictureUpload).value;\n  }\n\n  private async _changePassword() {\n    if (!this._user) {\n      return;\n    }\n    const credential = this._user.credentials.find(\n      (cred) => cred.type === \"homeassistant\"\n    );\n    if (!credential) {\n      showAlertDialog(this, {\n        title: \"No NDX Tech credentials found.\",\n      });\n      return;\n    }\n    showAdminChangePasswordDialog(this, { userId: this._user.id });\n  }\n\n  private async _updateEntry() {\n    this._submitting = true;\n    try {\n      if (\n        (this._userId && this._name !== this._params!.entry?.name) ||\n        this._isAdmin !==\n          this._user?.group_ids.includes(SYSTEM_GROUP_ID_ADMIN) ||\n        this._localOnly !== this._user?.local_only\n      ) {\n        await updateUser(this.hass!, this._userId!, {\n          name: this._name.trim(),\n          group_ids: [\n            this._isAdmin ? SYSTEM_GROUP_ID_ADMIN : SYSTEM_GROUP_ID_USER,\n          ],\n          local_only: this._localOnly,\n        });\n        this._params?.refreshUsers();\n      }\n      const values: PersonMutableParams = {\n        name: this._name.trim(),\n        device_trackers: this._deviceTrackers,\n        user_id: this._userId || null,\n        picture: this._picture,\n      };\n      if (this._params!.entry) {\n        await this._params!.updateEntry(values);\n      } else {\n        await this._params!.createEntry(values);\n        this._personExists = true;\n      }\n      this._params = undefined;\n    } catch (err: any) {\n      this._error = err ? err.message : \"Unknown error\";\n    } finally {\n      this._submitting = false;\n    }\n  }\n\n  private async _deleteEntry() {\n    this._submitting = true;\n    try {\n      if (await this._params!.removeEntry()) {\n        if (this._params!.entry!.user_id) {\n          deleteUser(this.hass, this._params!.entry!.user_id);\n        }\n        this._params = undefined;\n      }\n    } finally {\n      this._submitting = false;\n    }\n  }\n\n  private _close(): void {\n    // If we do not have a person ID yet (= person creation dialog was just cancelled), but\n    // we already created a user ID for it, delete it now to not have it \"free floating\".\n    if (!this._personExists && this._userId) {\n      deleteUser(this.hass, this._userId);\n      this._params?.refreshUsers();\n      this._userId = undefined;\n    }\n\n    this._params = undefined;\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyleDialog,\n      css`\n        ha-picture-upload,\n        ha-textfield {\n          display: block;\n        }\n        ha-picture-upload {\n          margin-bottom: 16px;\n          --file-upload-image-border-radius: 50%;\n        }\n        ha-formfield {\n          display: block;\n          padding: 16px 0;\n        }\n        a {\n          color: var(--primary-color);\n        }\n        p {\n          color: var(--primary-text-color);\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"dialog-person-detail\": DialogPersonDetail;\n  }\n}\n\ncustomElements.define(\"dialog-person-detail\", DialogPersonDetail);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}