{"ast":null,"code":"import _createForOfIteratorHelper from \"@babel/runtime/helpers/createForOfIteratorHelper\";\nimport \"core-js/modules/es.array.at.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.parse-int.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.at-alternative.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.string.match.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport { ensureArray } from \"../common/array/ensure-array\";\nimport { formatDuration } from \"../common/datetime/format_duration\";\nimport { formatTime, formatTimeWithSeconds } from \"../common/datetime/format_time\";\nimport secondsToDuration from \"../common/datetime/seconds_to_duration\";\nimport { computeAttributeNameDisplay } from \"../common/entity/compute_attribute_display\";\nimport { computeStateName } from \"../common/entity/compute_state_name\";\nimport \"../resources/intl-polyfill\";\nimport { localizeDeviceAutomationCondition, localizeDeviceAutomationTrigger } from \"./device_automation\";\nimport { formatListWithAnds, formatListWithOrs } from \"../common/string/format-list\";\nvar triggerTranslationBaseKey = \"ui.panel.config.automation.editor.triggers.type\";\nvar conditionsTranslationBaseKey = \"ui.panel.config.automation.editor.conditions.type\";\nvar describeDuration = function describeDuration(locale, forTime) {\n  var duration;\n  if (typeof forTime === \"number\") {\n    duration = secondsToDuration(forTime);\n  } else if (typeof forTime === \"string\") {\n    duration = forTime;\n  } else {\n    duration = formatDuration(locale, forTime);\n  }\n  return duration;\n};\nvar localizeTimeString = function localizeTimeString(time, locale, config) {\n  var chunks = time.split(\":\");\n  if (chunks.length < 2 || chunks.length > 3) {\n    return time;\n  }\n  try {\n    var dt = new Date(\"1970-01-01T\" + time);\n    if (chunks.length === 2 || Number(chunks[2]) === 0) {\n      return formatTime(dt, locale, config);\n    }\n    return formatTimeWithSeconds(dt, locale, config);\n  } catch (_unused) {\n    return time;\n  }\n};\nexport var describeTrigger = function describeTrigger(trigger, hass, entityRegistry) {\n  var ignoreAlias = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  try {\n    return tryDescribeTrigger(trigger, hass, entityRegistry, ignoreAlias);\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.error(error);\n    var msg = \"Error in describing trigger\";\n    if (error.message) {\n      msg += \": \" + error.message;\n    }\n    return msg;\n  }\n};\nvar tryDescribeTrigger = function tryDescribeTrigger(trigger, hass, entityRegistry) {\n  var ignoreAlias = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  if (trigger.alias && !ignoreAlias) {\n    return trigger.alias;\n  }\n\n  // Event Trigger\n  if (trigger.platform === \"event\" && trigger.event_type) {\n    var eventTypes = [];\n    if (Array.isArray(trigger.event_type)) {\n      var _iterator = _createForOfIteratorHelper(trigger.event_type.values()),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var state = _step.value;\n          eventTypes.push(state);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    } else {\n      eventTypes.push(trigger.event_type);\n    }\n    var eventTypesString = formatListWithOrs(hass.locale, eventTypes);\n    return hass.localize(\"\".concat(triggerTranslationBaseKey, \".event.description.full\"), {\n      eventTypes: eventTypesString\n    });\n  }\n\n  // Indexline Technology Trigger\n  if (trigger.platform === \"homeassistant\" && trigger.event) {\n    return hass.localize(trigger.event === \"start\" ? \"\".concat(triggerTranslationBaseKey, \".homeassistant.description.started\") : \"\".concat(triggerTranslationBaseKey, \".homeassistant.description.shutdown\"));\n  }\n\n  // Numeric State Trigger\n  if (trigger.platform === \"numeric_state\" && trigger.entity_id) {\n    var entities = [];\n    var states = hass.states;\n    var stateObj = Array.isArray(trigger.entity_id) ? hass.states[trigger.entity_id[0]] : hass.states[trigger.entity_id];\n    if (Array.isArray(trigger.entity_id)) {\n      var _iterator2 = _createForOfIteratorHelper(trigger.entity_id.values()),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var entity = _step2.value;\n          if (states[entity]) {\n            entities.push(computeStateName(states[entity]) || entity);\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    } else if (trigger.entity_id) {\n      entities.push(states[trigger.entity_id] ? computeStateName(states[trigger.entity_id]) : trigger.entity_id);\n    }\n    var attribute = trigger.attribute ? computeAttributeNameDisplay(hass.localize, stateObj, hass.entities, trigger.attribute) : undefined;\n    var duration = trigger.for ? describeDuration(hass.locale, trigger.for) : undefined;\n    if (trigger.above !== undefined && trigger.below !== undefined) {\n      return hass.localize(\"\".concat(triggerTranslationBaseKey, \".numeric_state.description.above-below\"), {\n        attribute: attribute,\n        entity: formatListWithOrs(hass.locale, entities),\n        numberOfEntities: entities.length,\n        above: trigger.above,\n        below: trigger.below,\n        duration: duration\n      });\n    }\n    if (trigger.above !== undefined) {\n      return hass.localize(\"\".concat(triggerTranslationBaseKey, \".numeric_state.description.above\"), {\n        attribute: attribute,\n        entity: formatListWithOrs(hass.locale, entities),\n        numberOfEntities: entities.length,\n        above: trigger.above,\n        duration: duration\n      });\n    }\n    if (trigger.below !== undefined) {\n      return hass.localize(\"\".concat(triggerTranslationBaseKey, \".numeric_state.description.below\"), {\n        attribute: attribute,\n        entity: formatListWithOrs(hass.locale, entities),\n        numberOfEntities: entities.length,\n        below: trigger.below,\n        duration: duration\n      });\n    }\n  }\n\n  // State Trigger\n  if (trigger.platform === \"state\") {\n    var _entities = [];\n    var _states = hass.states;\n    var _attribute = \"\";\n    if (trigger.attribute) {\n      var _stateObj = Array.isArray(trigger.entity_id) ? hass.states[trigger.entity_id[0]] : hass.states[trigger.entity_id];\n      _attribute = computeAttributeNameDisplay(hass.localize, _stateObj, hass.entities, trigger.attribute);\n    }\n    var entityArray = ensureArray(trigger.entity_id);\n    if (entityArray) {\n      var _iterator3 = _createForOfIteratorHelper(entityArray),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var _entity = _step3.value;\n          if (_states[_entity]) {\n            _entities.push(computeStateName(_states[_entity]) || _entity);\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n    var _stateObj2 = hass.states[entityArray[0]];\n    var fromChoice = \"other\";\n    var fromString = \"\";\n    if (trigger.from !== undefined) {\n      var fromArray = [];\n      if (trigger.from === null) {\n        if (!trigger.attribute) {\n          fromChoice = \"null\";\n        }\n      } else {\n        fromArray = ensureArray(trigger.from);\n        var from = [];\n        var _iterator4 = _createForOfIteratorHelper(fromArray),\n          _step4;\n        try {\n          for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n            var _state = _step4.value;\n            from.push(trigger.attribute ? hass.formatEntityAttributeValue(_stateObj2, trigger.attribute, _state).toString() : hass.formatEntityState(_stateObj2, _state));\n          }\n        } catch (err) {\n          _iterator4.e(err);\n        } finally {\n          _iterator4.f();\n        }\n        if (from.length !== 0) {\n          fromString = formatListWithOrs(hass.locale, from);\n          fromChoice = \"fromUsed\";\n        }\n      }\n    }\n    var toChoice = \"other\";\n    var _toString = \"\";\n    if (trigger.to !== undefined) {\n      var toArray = [];\n      if (trigger.to === null) {\n        if (!trigger.attribute) {\n          toChoice = \"null\";\n        }\n      } else {\n        toArray = ensureArray(trigger.to);\n        var to = [];\n        var _iterator5 = _createForOfIteratorHelper(toArray),\n          _step5;\n        try {\n          for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n            var _state2 = _step5.value;\n            to.push(trigger.attribute ? hass.formatEntityAttributeValue(_stateObj2, trigger.attribute, _state2).toString() : hass.formatEntityState(_stateObj2, _state2).toString());\n          }\n        } catch (err) {\n          _iterator5.e(err);\n        } finally {\n          _iterator5.f();\n        }\n        if (to.length !== 0) {\n          _toString = formatListWithOrs(hass.locale, to);\n          toChoice = \"toUsed\";\n        }\n      }\n    }\n    if (!trigger.attribute && trigger.from === undefined && trigger.to === undefined) {\n      toChoice = \"special\";\n    }\n    var _duration = \"\";\n    if (trigger.for) {\n      var _describeDuration;\n      _duration = (_describeDuration = describeDuration(hass.locale, trigger.for)) !== null && _describeDuration !== void 0 ? _describeDuration : \"\";\n    }\n    return hass.localize(\"\".concat(triggerTranslationBaseKey, \".state.description.full\"), {\n      hasAttribute: _attribute !== \"\" ? \"true\" : \"false\",\n      attribute: _attribute,\n      hasEntity: _entities.length !== 0 ? \"true\" : \"false\",\n      entity: formatListWithOrs(hass.locale, _entities),\n      fromChoice: fromChoice,\n      fromString: fromString,\n      toChoice: toChoice,\n      toString: _toString,\n      hasDuration: _duration !== \"\" ? \"true\" : \"false\",\n      duration: _duration\n    });\n  }\n\n  // Sun Trigger\n  if (trigger.platform === \"sun\" && trigger.event) {\n    var _duration2 = \"\";\n    if (trigger.offset) {\n      if (typeof trigger.offset === \"number\") {\n        _duration2 = secondsToDuration(trigger.offset);\n      } else if (typeof trigger.offset === \"string\") {\n        _duration2 = trigger.offset;\n      } else {\n        _duration2 = JSON.stringify(trigger.offset);\n      }\n    }\n    return hass.localize(trigger.event === \"sunset\" ? \"\".concat(triggerTranslationBaseKey, \".sun.description.sets\") : \"\".concat(triggerTranslationBaseKey, \".sun.description.rises\"), {\n      hasDuration: _duration2 !== \"\" ? \"true\" : \"false\",\n      duration: _duration2\n    });\n  }\n\n  // Tag Trigger\n  if (trigger.platform === \"tag\") {\n    return hass.localize(\"\".concat(triggerTranslationBaseKey, \".tag.description.full\"));\n  }\n\n  // Time Trigger\n  if (trigger.platform === \"time\" && trigger.at) {\n    var result = ensureArray(trigger.at).map(function (at) {\n      return typeof at !== \"string\" ? at : at.includes(\".\") ? \"entity \".concat(hass.states[at] ? computeStateName(hass.states[at]) : at) : localizeTimeString(at, hass.locale, hass.config);\n    });\n    return hass.localize(\"\".concat(triggerTranslationBaseKey, \".time.description.full\"), {\n      time: formatListWithOrs(hass.locale, result)\n    });\n  }\n\n  // Time Pattern Trigger\n  if (trigger.platform === \"time_pattern\") {\n    if (!trigger.seconds && !trigger.minutes && !trigger.hours) {\n      return hass.localize(\"\".concat(triggerTranslationBaseKey, \".time_pattern.description.initial\"));\n    }\n    var invalidParts = [];\n    var secondsChoice = \"other\";\n    var minutesChoice = \"other\";\n    var hoursChoice = \"other\";\n    var seconds = 0;\n    var minutes = 0;\n    var hours = 0;\n    if (trigger.seconds !== undefined) {\n      var seconds_all = trigger.seconds === \"*\";\n      var seconds_interval = typeof trigger.seconds === \"string\" && trigger.seconds.startsWith(\"/\");\n      seconds = seconds_all ? 0 : typeof trigger.seconds === \"number\" ? trigger.seconds : seconds_interval ? parseInt(trigger.seconds.substring(1)) : parseInt(trigger.seconds);\n      if (isNaN(seconds) || seconds > 59 || seconds < 0 || seconds_interval && seconds === 0) {\n        invalidParts.push(\"seconds\");\n      }\n      if (seconds_all || seconds_interval && seconds === 1) {\n        secondsChoice = \"every\";\n      } else if (seconds_interval) {\n        secondsChoice = \"every_interval\";\n      } else {\n        secondsChoice = \"on_the_xth\";\n      }\n    }\n    if (trigger.minutes !== undefined) {\n      var minutes_all = trigger.minutes === \"*\";\n      var minutes_interval = typeof trigger.minutes === \"string\" && trigger.minutes.startsWith(\"/\");\n      minutes = minutes_all ? 0 : typeof trigger.minutes === \"number\" ? trigger.minutes : minutes_interval ? parseInt(trigger.minutes.substring(1)) : parseInt(trigger.minutes);\n      if (isNaN(minutes) || minutes > 59 || minutes < 0 || minutes_interval && minutes === 0) {\n        invalidParts.push(\"minutes\");\n      }\n      if (minutes_all || minutes_interval && minutes === 1) {\n        minutesChoice = \"every\";\n      } else if (minutes_interval) {\n        minutesChoice = \"every_interval\";\n      } else {\n        minutesChoice = trigger.seconds !== undefined ? \"has_seconds\" : \"on_the_xth\";\n      }\n    } else if (trigger.seconds !== undefined) {\n      if (trigger.hours !== undefined) {\n        minutes = 0;\n        minutesChoice = \"has_seconds\";\n      } else {\n        minutesChoice = \"every\";\n      }\n    }\n    if (trigger.hours !== undefined) {\n      var hours_all = trigger.hours === \"*\";\n      var hours_interval = typeof trigger.hours === \"string\" && trigger.hours.startsWith(\"/\");\n      hours = hours_all ? 0 : typeof trigger.hours === \"number\" ? trigger.hours : hours_interval ? parseInt(trigger.hours.substring(1)) : parseInt(trigger.hours);\n      if (isNaN(hours) || hours > 23 || hours < 0 || hours_interval && hours === 0) {\n        invalidParts.push(\"hours\");\n      }\n      if (hours_all || hours_interval && hours === 1) {\n        hoursChoice = \"every\";\n      } else if (hours_interval) {\n        hoursChoice = \"every_interval\";\n      } else {\n        hoursChoice = trigger.seconds !== undefined || trigger.minutes !== undefined ? \"has_seconds_or_minutes\" : \"on_the_xth\";\n      }\n    } else {\n      hoursChoice = \"every\";\n    }\n    if (invalidParts.length !== 0) {\n      return hass.localize(\"\".concat(triggerTranslationBaseKey, \".time_pattern.description.invalid\"), {\n        parts: formatListWithAnds(hass.locale, invalidParts.map(function (invalidPart) {\n          return hass.localize(\"\".concat(triggerTranslationBaseKey, \".time_pattern.\").concat(invalidPart));\n        }))\n      });\n    }\n    return hass.localize(\"\".concat(triggerTranslationBaseKey, \".time_pattern.description.full\"), {\n      secondsChoice: secondsChoice,\n      minutesChoice: minutesChoice,\n      hoursChoice: hoursChoice,\n      seconds: seconds,\n      minutes: minutes,\n      hours: hours,\n      secondsWithOrdinal: hass.localize(\"\".concat(triggerTranslationBaseKey, \".time_pattern.description.ordinal\"), {\n        part: seconds\n      }),\n      minutesWithOrdinal: hass.localize(\"\".concat(triggerTranslationBaseKey, \".time_pattern.description.ordinal\"), {\n        part: minutes\n      }),\n      hoursWithOrdinal: hass.localize(\"\".concat(triggerTranslationBaseKey, \".time_pattern.description.ordinal\"), {\n        part: hours\n      })\n    });\n  }\n\n  // Zone Trigger\n  if (trigger.platform === \"zone\" && trigger.entity_id && trigger.zone) {\n    var _entities2 = [];\n    var zones = [];\n    var _states2 = hass.states;\n    if (Array.isArray(trigger.entity_id)) {\n      var _iterator6 = _createForOfIteratorHelper(trigger.entity_id.values()),\n        _step6;\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var _entity2 = _step6.value;\n          if (_states2[_entity2]) {\n            _entities2.push(computeStateName(_states2[_entity2]) || _entity2);\n          }\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n    } else {\n      _entities2.push(_states2[trigger.entity_id] ? computeStateName(_states2[trigger.entity_id]) : trigger.entity_id);\n    }\n    if (Array.isArray(trigger.zone)) {\n      var _iterator7 = _createForOfIteratorHelper(trigger.zone.values()),\n        _step7;\n      try {\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          var zone = _step7.value;\n          if (_states2[zone]) {\n            zones.push(computeStateName(_states2[zone]) || zone);\n          }\n        }\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n    } else {\n      zones.push(_states2[trigger.zone] ? computeStateName(_states2[trigger.zone]) : trigger.zone);\n    }\n    return hass.localize(\"\".concat(triggerTranslationBaseKey, \".zone.description.full\"), {\n      entity: formatListWithOrs(hass.locale, _entities2),\n      event: trigger.event.toString(),\n      zone: formatListWithOrs(hass.locale, zones),\n      numberOfZones: zones.length\n    });\n  }\n\n  // Geo Location Trigger\n  if (trigger.platform === \"geo_location\" && trigger.source && trigger.zone) {\n    var sources = [];\n    var _zones = [];\n    var _states3 = hass.states;\n    if (Array.isArray(trigger.source)) {\n      var _iterator8 = _createForOfIteratorHelper(trigger.source.values()),\n        _step8;\n      try {\n        for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n          var source = _step8.value;\n          sources.push(source);\n        }\n      } catch (err) {\n        _iterator8.e(err);\n      } finally {\n        _iterator8.f();\n      }\n    } else {\n      sources.push(trigger.source);\n    }\n    if (Array.isArray(trigger.zone)) {\n      var _iterator9 = _createForOfIteratorHelper(trigger.zone.values()),\n        _step9;\n      try {\n        for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n          var _zone = _step9.value;\n          if (_states3[_zone]) {\n            _zones.push(computeStateName(_states3[_zone]) || _zone);\n          }\n        }\n      } catch (err) {\n        _iterator9.e(err);\n      } finally {\n        _iterator9.f();\n      }\n    } else {\n      _zones.push(_states3[trigger.zone] ? computeStateName(_states3[trigger.zone]) : trigger.zone);\n    }\n    return hass.localize(\"\".concat(triggerTranslationBaseKey, \".geo_location.description.full\"), {\n      source: formatListWithOrs(hass.locale, sources),\n      event: trigger.event.toString(),\n      zone: formatListWithOrs(hass.locale, _zones),\n      numberOfZones: _zones.length\n    });\n  }\n\n  // MQTT Trigger\n  if (trigger.platform === \"mqtt\") {\n    return hass.localize(\"\".concat(triggerTranslationBaseKey, \".mqtt.description.full\"));\n  }\n\n  // Template Trigger\n  if (trigger.platform === \"template\") {\n    var _duration3 = \"\";\n    if (trigger.for) {\n      var _describeDuration2;\n      _duration3 = (_describeDuration2 = describeDuration(hass.locale, trigger.for)) !== null && _describeDuration2 !== void 0 ? _describeDuration2 : \"\";\n    }\n    return hass.localize(\"\".concat(triggerTranslationBaseKey, \".template.description.full\"), {\n      hasDuration: _duration3 !== \"\" ? \"true\" : \"false\",\n      duration: _duration3\n    });\n  }\n\n  // Webhook Trigger\n  if (trigger.platform === \"webhook\") {\n    return hass.localize(\"\".concat(triggerTranslationBaseKey, \".webhook.description.full\"));\n  }\n\n  // Conversation Trigger\n  if (trigger.platform === \"conversation\") {\n    if (!trigger.command) {\n      return hass.localize(\"\".concat(triggerTranslationBaseKey, \".conversation.description.empty\"));\n    }\n    return hass.localize(\"\".concat(triggerTranslationBaseKey, \".conversation.description.full\"), {\n      sentence: formatListWithOrs(hass.locale, ensureArray(trigger.command).map(function (cmd) {\n        return \"'\".concat(cmd, \"'\");\n      }))\n    });\n  }\n\n  // Persistent Notification Trigger\n  if (trigger.platform === \"persistent_notification\") {\n    return hass.localize(\"\".concat(triggerTranslationBaseKey, \".persistent_notification.description.full\"));\n  }\n\n  // Device Trigger\n  if (trigger.platform === \"device\" && trigger.device_id) {\n    var config = trigger;\n    var localized = localizeDeviceAutomationTrigger(hass, entityRegistry, config);\n    if (localized) {\n      return localized;\n    }\n    var _stateObj3 = hass.states[config.entity_id];\n    return \"\".concat(_stateObj3 ? computeStateName(_stateObj3) : config.entity_id, \" \").concat(config.type);\n  }\n  return hass.localize(\"ui.panel.config.automation.editor.triggers.type.\".concat(trigger.platform, \".label\")) || hass.localize(\"ui.panel.config.automation.editor.triggers.unknown_trigger\");\n};\nexport var describeCondition = function describeCondition(condition, hass, entityRegistry) {\n  var ignoreAlias = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  try {\n    return tryDescribeCondition(condition, hass, entityRegistry, ignoreAlias);\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.error(error);\n    var msg = \"Error in describing condition\";\n    if (error.message) {\n      msg += \": \" + error.message;\n    }\n    return msg;\n  }\n};\nvar tryDescribeCondition = function tryDescribeCondition(condition, hass, entityRegistry) {\n  var ignoreAlias = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  if (condition.alias && !ignoreAlias) {\n    return condition.alias;\n  }\n  if (!condition.condition) {\n    var shorthands = [\"and\", \"or\", \"not\"];\n    for (var _i = 0, _shorthands = shorthands; _i < _shorthands.length; _i++) {\n      var key = _shorthands[_i];\n      if (!(key in condition)) {\n        continue;\n      }\n      if (ensureArray(condition[key])) {\n        condition = {\n          condition: key,\n          conditions: condition[key]\n        };\n      }\n    }\n  }\n  if (condition.condition === \"or\") {\n    var conditions = ensureArray(condition.conditions);\n    if (!conditions || conditions.length === 0) {\n      return hass.localize(\"\".concat(conditionsTranslationBaseKey, \".or.description.no_conditions\"));\n    }\n    var count = conditions.length;\n    return hass.localize(\"\".concat(conditionsTranslationBaseKey, \".or.description.full\"), {\n      count: count\n    });\n  }\n  if (condition.condition === \"and\") {\n    var _conditions = ensureArray(condition.conditions);\n    if (!_conditions || _conditions.length === 0) {\n      return hass.localize(\"\".concat(conditionsTranslationBaseKey, \".and.description.no_conditions\"));\n    }\n    var _count = _conditions.length;\n    return hass.localize(\"\".concat(conditionsTranslationBaseKey, \".and.description.full\"), {\n      count: _count\n    });\n  }\n  if (condition.condition === \"not\") {\n    var _conditions2 = ensureArray(condition.conditions);\n    if (!_conditions2 || _conditions2.length === 0) {\n      return hass.localize(\"\".concat(conditionsTranslationBaseKey, \".not.description.no_conditions\"));\n    }\n    if (_conditions2.length === 1) {\n      return hass.localize(\"\".concat(conditionsTranslationBaseKey, \".not.description.one_condition\"));\n    }\n    return hass.localize(\"\".concat(conditionsTranslationBaseKey, \".not.description.full\"), {\n      count: _conditions2.length\n    });\n  }\n\n  // State Condition\n  if (condition.condition === \"state\") {\n    if (!condition.entity_id) {\n      return hass.localize(\"\".concat(conditionsTranslationBaseKey, \".state.description.no_entity\"));\n    }\n    var attribute = \"\";\n    if (condition.attribute) {\n      var _stateObj4 = Array.isArray(condition.entity_id) ? hass.states[condition.entity_id[0]] : hass.states[condition.entity_id];\n      attribute = computeAttributeNameDisplay(hass.localize, _stateObj4, hass.entities, condition.attribute);\n    }\n    var entities = [];\n    if (Array.isArray(condition.entity_id)) {\n      var _iterator10 = _createForOfIteratorHelper(condition.entity_id.values()),\n        _step10;\n      try {\n        for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n          var entity = _step10.value;\n          if (hass.states[entity]) {\n            entities.push(computeStateName(hass.states[entity]) || entity);\n          }\n        }\n      } catch (err) {\n        _iterator10.e(err);\n      } finally {\n        _iterator10.f();\n      }\n    } else if (condition.entity_id) {\n      entities.push(hass.states[condition.entity_id] ? computeStateName(hass.states[condition.entity_id]) : condition.entity_id);\n    }\n    var states = [];\n    var stateObj = hass.states[Array.isArray(condition.entity_id) ? condition.entity_id[0] : condition.entity_id];\n    if (Array.isArray(condition.state)) {\n      var _iterator11 = _createForOfIteratorHelper(condition.state.values()),\n        _step11;\n      try {\n        for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n          var state = _step11.value;\n          states.push(condition.attribute ? hass.formatEntityAttributeValue(stateObj, condition.attribute, state).toString() : hass.formatEntityState(stateObj, state));\n        }\n      } catch (err) {\n        _iterator11.e(err);\n      } finally {\n        _iterator11.f();\n      }\n    } else if (condition.state !== \"\") {\n      states.push(condition.attribute ? hass.formatEntityAttributeValue(stateObj, condition.attribute, condition.state).toString() : hass.formatEntityState(stateObj, condition.state.toString()));\n    }\n    var duration = \"\";\n    if (condition.for) {\n      duration = describeDuration(hass.locale, condition.for) || \"\";\n    }\n    return hass.localize(\"\".concat(conditionsTranslationBaseKey, \".state.description.full\"), {\n      hasAttribute: attribute !== \"\" ? \"true\" : \"false\",\n      attribute: attribute,\n      numberOfEntities: entities.length,\n      entities: condition.match === \"any\" ? formatListWithOrs(hass.locale, entities) : formatListWithAnds(hass.locale, entities),\n      numberOfStates: states.length,\n      states: formatListWithOrs(hass.locale, states),\n      hasDuration: duration !== \"\" ? \"true\" : \"false\",\n      duration: duration\n    });\n  }\n\n  // Numeric State Condition\n  if (condition.condition === \"numeric_state\" && condition.entity_id) {\n    var _stateObj5 = hass.states[condition.entity_id];\n    var _entity3 = _stateObj5 ? computeStateName(_stateObj5) : condition.entity_id;\n    var _attribute2 = condition.attribute ? computeAttributeNameDisplay(hass.localize, _stateObj5, hass.entities, condition.attribute) : undefined;\n    if (condition.above && condition.below) {\n      return hass.localize(\"\".concat(conditionsTranslationBaseKey, \".numeric_state.description.above-below\"), {\n        attribute: _attribute2,\n        entity: _entity3,\n        above: condition.above,\n        below: condition.below\n      });\n    }\n    if (condition.above) {\n      return hass.localize(\"\".concat(conditionsTranslationBaseKey, \".numeric_state.description.above\"), {\n        attribute: _attribute2,\n        entity: _entity3,\n        above: condition.above\n      });\n    }\n    if (condition.below) {\n      return hass.localize(\"\".concat(conditionsTranslationBaseKey, \".numeric_state.description.below\"), {\n        attribute: _attribute2,\n        entity: _entity3,\n        below: condition.below\n      });\n    }\n  }\n\n  // Time condition\n  if (condition.condition === \"time\") {\n    var weekdaysArray = ensureArray(condition.weekday);\n    var validWeekdays = weekdaysArray && weekdaysArray.length > 0 && weekdaysArray.length < 7;\n    if (condition.before || condition.after || validWeekdays) {\n      var before = typeof condition.before !== \"string\" ? condition.before : condition.before.includes(\".\") ? \"entity \".concat(hass.states[condition.before] ? computeStateName(hass.states[condition.before]) : condition.before) : localizeTimeString(condition.before, hass.locale, hass.config);\n      var after = typeof condition.after !== \"string\" ? condition.after : condition.after.includes(\".\") ? \"entity \".concat(hass.states[condition.after] ? computeStateName(hass.states[condition.after]) : condition.after) : localizeTimeString(condition.after, hass.locale, hass.config);\n      var localizedDays = [];\n      if (validWeekdays) {\n        localizedDays = weekdaysArray.map(function (d) {\n          return hass.localize(\"ui.panel.config.automation.editor.conditions.type.time.weekdays.\".concat(d));\n        });\n      }\n      var hasTime = \"\";\n      if (after !== undefined && before !== undefined) {\n        hasTime = \"after_before\";\n      } else if (after !== undefined) {\n        hasTime = \"after\";\n      } else if (before !== undefined) {\n        hasTime = \"before\";\n      }\n      return hass.localize(\"\".concat(conditionsTranslationBaseKey, \".time.description.full\"), {\n        hasTime: hasTime,\n        hasTimeAndDay: (after || before) && validWeekdays ? \"true\" : \"false\",\n        hasDay: validWeekdays ? \"true\" : \"false\",\n        time_before: before,\n        time_after: after,\n        day: formatListWithOrs(hass.locale, localizedDays)\n      });\n    }\n  }\n\n  // Sun condition\n  if (condition.condition === \"sun\" && (condition.before || condition.after)) {\n    var _condition$after, _condition$before;\n    var afterDuration = \"\";\n    if (condition.after && condition.after_offset) {\n      if (typeof condition.after_offset === \"number\") {\n        afterDuration = secondsToDuration(condition.after_offset);\n      } else if (typeof condition.after_offset === \"string\") {\n        afterDuration = condition.after_offset;\n      } else {\n        afterDuration = JSON.stringify(condition.after_offset);\n      }\n    }\n    var beforeDuration = \"\";\n    if (condition.before && condition.before_offset) {\n      if (typeof condition.before_offset === \"number\") {\n        beforeDuration = secondsToDuration(condition.before_offset);\n      } else if (typeof condition.before_offset === \"string\") {\n        beforeDuration = condition.before_offset;\n      } else {\n        beforeDuration = JSON.stringify(condition.before_offset);\n      }\n    }\n    return hass.localize(\"\".concat(conditionsTranslationBaseKey, \".sun.description.full\"), {\n      afterChoice: (_condition$after = condition.after) !== null && _condition$after !== void 0 ? _condition$after : \"other\",\n      afterOffsetChoice: afterDuration !== \"\" ? \"offset\" : \"other\",\n      afterOffset: afterDuration,\n      beforeChoice: (_condition$before = condition.before) !== null && _condition$before !== void 0 ? _condition$before : \"other\",\n      beforeOffsetChoice: beforeDuration !== \"\" ? \"offset\" : \"other\",\n      beforeOffset: beforeDuration\n    });\n  }\n\n  // Zone condition\n  if (condition.condition === \"zone\" && condition.entity_id && condition.zone) {\n    var _entities3 = [];\n    var zones = [];\n    var _states4 = hass.states;\n    if (Array.isArray(condition.entity_id)) {\n      var _iterator12 = _createForOfIteratorHelper(condition.entity_id.values()),\n        _step12;\n      try {\n        for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n          var _entity4 = _step12.value;\n          if (_states4[_entity4]) {\n            _entities3.push(computeStateName(_states4[_entity4]) || _entity4);\n          }\n        }\n      } catch (err) {\n        _iterator12.e(err);\n      } finally {\n        _iterator12.f();\n      }\n    } else {\n      _entities3.push(_states4[condition.entity_id] ? computeStateName(_states4[condition.entity_id]) : condition.entity_id);\n    }\n    if (Array.isArray(condition.zone)) {\n      var _iterator13 = _createForOfIteratorHelper(condition.zone.values()),\n        _step13;\n      try {\n        for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n          var zone = _step13.value;\n          if (_states4[zone]) {\n            zones.push(computeStateName(_states4[zone]) || zone);\n          }\n        }\n      } catch (err) {\n        _iterator13.e(err);\n      } finally {\n        _iterator13.f();\n      }\n    } else {\n      zones.push(_states4[condition.zone] ? computeStateName(_states4[condition.zone]) : condition.zone);\n    }\n    var entitiesString = formatListWithOrs(hass.locale, _entities3);\n    var zonesString = formatListWithOrs(hass.locale, zones);\n    return hass.localize(\"\".concat(conditionsTranslationBaseKey, \".zone.description.full\"), {\n      entity: entitiesString,\n      numberOfEntities: _entities3.length,\n      zone: zonesString,\n      numberOfZones: zones.length\n    });\n  }\n  if (condition.condition === \"device\" && condition.device_id) {\n    var config = condition;\n    var localized = localizeDeviceAutomationCondition(hass, entityRegistry, config);\n    if (localized) {\n      return localized;\n    }\n    var _stateObj6 = hass.states[config.entity_id];\n    return \"\".concat(_stateObj6 ? computeStateName(_stateObj6) : config.entity_id, \" \").concat(config.type);\n  }\n  if (condition.condition === \"template\") {\n    return hass.localize(\"\".concat(conditionsTranslationBaseKey, \".template.description.full\"));\n  }\n  if (condition.condition === \"trigger\" && condition.id != null) {\n    return hass.localize(\"\".concat(conditionsTranslationBaseKey, \".trigger.description.full\"), {\n      id: formatListWithOrs(hass.locale, ensureArray(condition.id).map(function (id) {\n        return id.toString();\n      }))\n    });\n  }\n  return hass.localize(\"ui.panel.config.automation.editor.conditions.type.\".concat(condition.condition, \".label\")) || hass.localize(\"ui.panel.config.automation.editor.conditions.unknown_condition\");\n};","map":{"version":3,"names":["ensureArray","formatDuration","formatTime","formatTimeWithSeconds","secondsToDuration","computeAttributeNameDisplay","computeStateName","localizeDeviceAutomationCondition","localizeDeviceAutomationTrigger","formatListWithAnds","formatListWithOrs","triggerTranslationBaseKey","conditionsTranslationBaseKey","describeDuration","locale","forTime","duration","localizeTimeString","time","config","chunks","split","length","dt","Date","Number","_unused","describeTrigger","trigger","hass","entityRegistry","ignoreAlias","arguments","undefined","tryDescribeTrigger","error","console","msg","message","alias","platform","event_type","eventTypes","Array","isArray","_iterator","_createForOfIteratorHelper","values","_step","s","n","done","state","value","push","err","e","f","eventTypesString","localize","concat","event","entity_id","entities","states","stateObj","_iterator2","_step2","entity","attribute","for","above","below","numberOfEntities","entityArray","_iterator3","_step3","fromChoice","fromString","from","fromArray","_iterator4","_step4","formatEntityAttributeValue","toString","formatEntityState","toChoice","to","toArray","_iterator5","_step5","_describeDuration","hasAttribute","hasEntity","hasDuration","offset","JSON","stringify","at","result","map","includes","seconds","minutes","hours","invalidParts","secondsChoice","minutesChoice","hoursChoice","seconds_all","seconds_interval","startsWith","parseInt","substring","isNaN","minutes_all","minutes_interval","hours_all","hours_interval","parts","invalidPart","secondsWithOrdinal","part","minutesWithOrdinal","hoursWithOrdinal","zone","zones","_iterator6","_step6","_iterator7","_step7","numberOfZones","source","sources","_iterator8","_step8","_iterator9","_step9","_describeDuration2","command","sentence","cmd","device_id","localized","type","describeCondition","condition","tryDescribeCondition","shorthands","_i","_shorthands","key","conditions","count","_iterator10","_step10","_iterator11","_step11","match","numberOfStates","weekdaysArray","weekday","validWeekdays","before","after","localizedDays","d","hasTime","hasTimeAndDay","hasDay","time_before","time_after","day","_condition$after","_condition$before","afterDuration","after_offset","beforeDuration","before_offset","afterChoice","afterOffsetChoice","afterOffset","beforeChoice","beforeOffsetChoice","beforeOffset","_iterator12","_step12","_iterator13","_step13","entitiesString","zonesString","id"],"sources":["/Users/sercanardil/Desktop/frontend/src/data/automation_i18n.ts"],"sourcesContent":["import { HassConfig } from \"home-assistant-js-websocket\";\nimport { ensureArray } from \"../common/array/ensure-array\";\nimport { formatDuration } from \"../common/datetime/format_duration\";\nimport {\n  formatTime,\n  formatTimeWithSeconds,\n} from \"../common/datetime/format_time\";\nimport secondsToDuration from \"../common/datetime/seconds_to_duration\";\nimport { computeAttributeNameDisplay } from \"../common/entity/compute_attribute_display\";\nimport { computeStateName } from \"../common/entity/compute_state_name\";\nimport \"../resources/intl-polyfill\";\nimport type { HomeAssistant } from \"../types\";\nimport { Condition, ForDict, Trigger } from \"./automation\";\nimport {\n  DeviceCondition,\n  DeviceTrigger,\n  localizeDeviceAutomationCondition,\n  localizeDeviceAutomationTrigger,\n} from \"./device_automation\";\nimport { EntityRegistryEntry } from \"./entity_registry\";\nimport { FrontendLocaleData } from \"./translation\";\nimport {\n  formatListWithAnds,\n  formatListWithOrs,\n} from \"../common/string/format-list\";\n\nconst triggerTranslationBaseKey =\n  \"ui.panel.config.automation.editor.triggers.type\";\nconst conditionsTranslationBaseKey =\n  \"ui.panel.config.automation.editor.conditions.type\";\n\nconst describeDuration = (\n  locale: FrontendLocaleData,\n  forTime: number | string | ForDict\n) => {\n  let duration: string | null;\n  if (typeof forTime === \"number\") {\n    duration = secondsToDuration(forTime);\n  } else if (typeof forTime === \"string\") {\n    duration = forTime;\n  } else {\n    duration = formatDuration(locale, forTime);\n  }\n  return duration;\n};\n\nconst localizeTimeString = (\n  time: string,\n  locale: FrontendLocaleData,\n  config: HassConfig\n) => {\n  const chunks = time.split(\":\");\n  if (chunks.length < 2 || chunks.length > 3) {\n    return time;\n  }\n  try {\n    const dt = new Date(\"1970-01-01T\" + time);\n    if (chunks.length === 2 || Number(chunks[2]) === 0) {\n      return formatTime(dt, locale, config);\n    }\n    return formatTimeWithSeconds(dt, locale, config);\n  } catch {\n    return time;\n  }\n};\n\nexport const describeTrigger = (\n  trigger: Trigger,\n  hass: HomeAssistant,\n  entityRegistry: EntityRegistryEntry[],\n  ignoreAlias = false\n) => {\n  try {\n    return tryDescribeTrigger(trigger, hass, entityRegistry, ignoreAlias);\n  } catch (error: any) {\n    // eslint-disable-next-line no-console\n    console.error(error);\n\n    let msg = \"Error in describing trigger\";\n    if (error.message) {\n      msg += \": \" + error.message;\n    }\n    return msg;\n  }\n};\n\nconst tryDescribeTrigger = (\n  trigger: Trigger,\n  hass: HomeAssistant,\n  entityRegistry: EntityRegistryEntry[],\n  ignoreAlias = false\n) => {\n  if (trigger.alias && !ignoreAlias) {\n    return trigger.alias;\n  }\n\n  // Event Trigger\n  if (trigger.platform === \"event\" && trigger.event_type) {\n    const eventTypes: string[] = [];\n\n    if (Array.isArray(trigger.event_type)) {\n      for (const state of trigger.event_type.values()) {\n        eventTypes.push(state);\n      }\n    } else {\n      eventTypes.push(trigger.event_type);\n    }\n\n    const eventTypesString = formatListWithOrs(hass.locale, eventTypes);\n    return hass.localize(\n      `${triggerTranslationBaseKey}.event.description.full`,\n      { eventTypes: eventTypesString }\n    );\n  }\n\n  // Indexline Technology Trigger\n  if (trigger.platform === \"homeassistant\" && trigger.event) {\n    return hass.localize(\n      trigger.event === \"start\"\n        ? `${triggerTranslationBaseKey}.homeassistant.description.started`\n        : `${triggerTranslationBaseKey}.homeassistant.description.shutdown`\n    );\n  }\n\n  // Numeric State Trigger\n  if (trigger.platform === \"numeric_state\" && trigger.entity_id) {\n    const entities: string[] = [];\n    const states = hass.states;\n\n    const stateObj = Array.isArray(trigger.entity_id)\n      ? hass.states[trigger.entity_id[0]]\n      : hass.states[trigger.entity_id];\n\n    if (Array.isArray(trigger.entity_id)) {\n      for (const entity of trigger.entity_id.values()) {\n        if (states[entity]) {\n          entities.push(computeStateName(states[entity]) || entity);\n        }\n      }\n    } else if (trigger.entity_id) {\n      entities.push(\n        states[trigger.entity_id]\n          ? computeStateName(states[trigger.entity_id])\n          : trigger.entity_id\n      );\n    }\n\n    const attribute = trigger.attribute\n      ? computeAttributeNameDisplay(\n          hass.localize,\n          stateObj,\n          hass.entities,\n          trigger.attribute\n        )\n      : undefined;\n\n    const duration = trigger.for\n      ? describeDuration(hass.locale, trigger.for)\n      : undefined;\n\n    if (trigger.above !== undefined && trigger.below !== undefined) {\n      return hass.localize(\n        `${triggerTranslationBaseKey}.numeric_state.description.above-below`,\n        {\n          attribute: attribute,\n          entity: formatListWithOrs(hass.locale, entities),\n          numberOfEntities: entities.length,\n          above: trigger.above,\n          below: trigger.below,\n          duration: duration,\n        }\n      );\n    }\n    if (trigger.above !== undefined) {\n      return hass.localize(\n        `${triggerTranslationBaseKey}.numeric_state.description.above`,\n        {\n          attribute: attribute,\n          entity: formatListWithOrs(hass.locale, entities),\n          numberOfEntities: entities.length,\n          above: trigger.above,\n          duration: duration,\n        }\n      );\n    }\n    if (trigger.below !== undefined) {\n      return hass.localize(\n        `${triggerTranslationBaseKey}.numeric_state.description.below`,\n        {\n          attribute: attribute,\n          entity: formatListWithOrs(hass.locale, entities),\n          numberOfEntities: entities.length,\n          below: trigger.below,\n          duration: duration,\n        }\n      );\n    }\n  }\n\n  // State Trigger\n  if (trigger.platform === \"state\") {\n    const entities: string[] = [];\n    const states = hass.states;\n\n    let attribute = \"\";\n    if (trigger.attribute) {\n      const stateObj = Array.isArray(trigger.entity_id)\n        ? hass.states[trigger.entity_id[0]]\n        : hass.states[trigger.entity_id];\n      attribute = computeAttributeNameDisplay(\n        hass.localize,\n        stateObj,\n        hass.entities,\n        trigger.attribute\n      );\n    }\n\n    const entityArray: string[] = ensureArray(trigger.entity_id);\n    if (entityArray) {\n      for (const entity of entityArray) {\n        if (states[entity]) {\n          entities.push(computeStateName(states[entity]) || entity);\n        }\n      }\n    }\n\n    const stateObj = hass.states[entityArray[0]];\n\n    let fromChoice = \"other\";\n    let fromString = \"\";\n    if (trigger.from !== undefined) {\n      let fromArray: string[] = [];\n      if (trigger.from === null) {\n        if (!trigger.attribute) {\n          fromChoice = \"null\";\n        }\n      } else {\n        fromArray = ensureArray(trigger.from);\n\n        const from: string[] = [];\n        for (const state of fromArray) {\n          from.push(\n            trigger.attribute\n              ? hass\n                  .formatEntityAttributeValue(\n                    stateObj,\n                    trigger.attribute,\n                    state\n                  )\n                  .toString()\n              : hass.formatEntityState(stateObj, state)\n          );\n        }\n        if (from.length !== 0) {\n          fromString = formatListWithOrs(hass.locale, from);\n          fromChoice = \"fromUsed\";\n        }\n      }\n    }\n\n    let toChoice = \"other\";\n    let toString = \"\";\n    if (trigger.to !== undefined) {\n      let toArray: string[] = [];\n      if (trigger.to === null) {\n        if (!trigger.attribute) {\n          toChoice = \"null\";\n        }\n      } else {\n        toArray = ensureArray(trigger.to);\n\n        const to: string[] = [];\n        for (const state of toArray) {\n          to.push(\n            trigger.attribute\n              ? hass\n                  .formatEntityAttributeValue(\n                    stateObj,\n                    trigger.attribute,\n                    state\n                  )\n                  .toString()\n              : hass.formatEntityState(stateObj, state).toString()\n          );\n        }\n        if (to.length !== 0) {\n          toString = formatListWithOrs(hass.locale, to);\n          toChoice = \"toUsed\";\n        }\n      }\n    }\n\n    if (\n      !trigger.attribute &&\n      trigger.from === undefined &&\n      trigger.to === undefined\n    ) {\n      toChoice = \"special\";\n    }\n\n    let duration = \"\";\n    if (trigger.for) {\n      duration = describeDuration(hass.locale, trigger.for) ?? \"\";\n    }\n\n    return hass.localize(\n      `${triggerTranslationBaseKey}.state.description.full`,\n      {\n        hasAttribute: attribute !== \"\" ? \"true\" : \"false\",\n        attribute: attribute,\n        hasEntity: entities.length !== 0 ? \"true\" : \"false\",\n        entity: formatListWithOrs(hass.locale, entities),\n        fromChoice: fromChoice,\n        fromString: fromString,\n        toChoice: toChoice,\n        toString: toString,\n        hasDuration: duration !== \"\" ? \"true\" : \"false\",\n        duration: duration,\n      }\n    );\n  }\n\n  // Sun Trigger\n  if (trigger.platform === \"sun\" && trigger.event) {\n    let duration = \"\";\n    if (trigger.offset) {\n      if (typeof trigger.offset === \"number\") {\n        duration = secondsToDuration(trigger.offset)!;\n      } else if (typeof trigger.offset === \"string\") {\n        duration = trigger.offset;\n      } else {\n        duration = JSON.stringify(trigger.offset);\n      }\n    }\n\n    return hass.localize(\n      trigger.event === \"sunset\"\n        ? `${triggerTranslationBaseKey}.sun.description.sets`\n        : `${triggerTranslationBaseKey}.sun.description.rises`,\n      { hasDuration: duration !== \"\" ? \"true\" : \"false\", duration: duration }\n    );\n  }\n\n  // Tag Trigger\n  if (trigger.platform === \"tag\") {\n    return hass.localize(`${triggerTranslationBaseKey}.tag.description.full`);\n  }\n\n  // Time Trigger\n  if (trigger.platform === \"time\" && trigger.at) {\n    const result = ensureArray(trigger.at).map((at) =>\n      typeof at !== \"string\"\n        ? at\n        : at.includes(\".\")\n          ? `entity ${hass.states[at] ? computeStateName(hass.states[at]) : at}`\n          : localizeTimeString(at, hass.locale, hass.config)\n    );\n\n    return hass.localize(`${triggerTranslationBaseKey}.time.description.full`, {\n      time: formatListWithOrs(hass.locale, result),\n    });\n  }\n\n  // Time Pattern Trigger\n  if (trigger.platform === \"time_pattern\") {\n    if (!trigger.seconds && !trigger.minutes && !trigger.hours) {\n      return hass.localize(\n        `${triggerTranslationBaseKey}.time_pattern.description.initial`\n      );\n    }\n\n    const invalidParts: Array<\"seconds\" | \"minutes\" | \"hours\"> = [];\n\n    let secondsChoice: \"every\" | \"every_interval\" | \"on_the_xth\" | \"other\" =\n      \"other\";\n    let minutesChoice:\n      | \"every\"\n      | \"every_interval\"\n      | \"on_the_xth\"\n      | \"other\"\n      | \"has_seconds\" = \"other\";\n    let hoursChoice:\n      | \"every\"\n      | \"every_interval\"\n      | \"on_the_xth\"\n      | \"other\"\n      | \"has_seconds_or_minutes\" = \"other\";\n\n    let seconds = 0;\n    let minutes = 0;\n    let hours = 0;\n\n    if (trigger.seconds !== undefined) {\n      const seconds_all = trigger.seconds === \"*\";\n      const seconds_interval =\n        typeof trigger.seconds === \"string\" && trigger.seconds.startsWith(\"/\");\n      seconds = seconds_all\n        ? 0\n        : typeof trigger.seconds === \"number\"\n          ? trigger.seconds\n          : seconds_interval\n            ? parseInt(trigger.seconds.substring(1))\n            : parseInt(trigger.seconds);\n\n      if (\n        isNaN(seconds) ||\n        seconds > 59 ||\n        seconds < 0 ||\n        (seconds_interval && seconds === 0)\n      ) {\n        invalidParts.push(\"seconds\");\n      }\n\n      if (seconds_all || (seconds_interval && seconds === 1)) {\n        secondsChoice = \"every\";\n      } else if (seconds_interval) {\n        secondsChoice = \"every_interval\";\n      } else {\n        secondsChoice = \"on_the_xth\";\n      }\n    }\n    if (trigger.minutes !== undefined) {\n      const minutes_all = trigger.minutes === \"*\";\n      const minutes_interval =\n        typeof trigger.minutes === \"string\" && trigger.minutes.startsWith(\"/\");\n      minutes = minutes_all\n        ? 0\n        : typeof trigger.minutes === \"number\"\n          ? trigger.minutes\n          : minutes_interval\n            ? parseInt(trigger.minutes.substring(1))\n            : parseInt(trigger.minutes);\n\n      if (\n        isNaN(minutes) ||\n        minutes > 59 ||\n        minutes < 0 ||\n        (minutes_interval && minutes === 0)\n      ) {\n        invalidParts.push(\"minutes\");\n      }\n\n      if (minutes_all || (minutes_interval && minutes === 1)) {\n        minutesChoice = \"every\";\n      } else if (minutes_interval) {\n        minutesChoice = \"every_interval\";\n      } else {\n        minutesChoice =\n          trigger.seconds !== undefined ? \"has_seconds\" : \"on_the_xth\";\n      }\n    } else if (trigger.seconds !== undefined) {\n      if (trigger.hours !== undefined) {\n        minutes = 0;\n        minutesChoice = \"has_seconds\";\n      } else {\n        minutesChoice = \"every\";\n      }\n    }\n    if (trigger.hours !== undefined) {\n      const hours_all = trigger.hours === \"*\";\n      const hours_interval =\n        typeof trigger.hours === \"string\" && trigger.hours.startsWith(\"/\");\n      hours = hours_all\n        ? 0\n        : typeof trigger.hours === \"number\"\n          ? trigger.hours\n          : hours_interval\n            ? parseInt(trigger.hours.substring(1))\n            : parseInt(trigger.hours);\n\n      if (\n        isNaN(hours) ||\n        hours > 23 ||\n        hours < 0 ||\n        (hours_interval && hours === 0)\n      ) {\n        invalidParts.push(\"hours\");\n      }\n\n      if (hours_all || (hours_interval && hours === 1)) {\n        hoursChoice = \"every\";\n      } else if (hours_interval) {\n        hoursChoice = \"every_interval\";\n      } else {\n        hoursChoice =\n          trigger.seconds !== undefined || trigger.minutes !== undefined\n            ? \"has_seconds_or_minutes\"\n            : \"on_the_xth\";\n      }\n    } else {\n      hoursChoice = \"every\";\n    }\n\n    if (invalidParts.length !== 0) {\n      return hass.localize(\n        `${triggerTranslationBaseKey}.time_pattern.description.invalid`,\n        {\n          parts: formatListWithAnds(\n            hass.locale,\n            invalidParts.map((invalidPart) =>\n              hass.localize(\n                `${triggerTranslationBaseKey}.time_pattern.${invalidPart}`\n              )\n            )\n          ),\n        }\n      );\n    }\n\n    return hass.localize(\n      `${triggerTranslationBaseKey}.time_pattern.description.full`,\n      {\n        secondsChoice: secondsChoice,\n        minutesChoice: minutesChoice,\n        hoursChoice: hoursChoice,\n        seconds: seconds,\n        minutes: minutes,\n        hours: hours,\n        secondsWithOrdinal: hass.localize(\n          `${triggerTranslationBaseKey}.time_pattern.description.ordinal`,\n          {\n            part: seconds,\n          }\n        ),\n        minutesWithOrdinal: hass.localize(\n          `${triggerTranslationBaseKey}.time_pattern.description.ordinal`,\n          {\n            part: minutes,\n          }\n        ),\n        hoursWithOrdinal: hass.localize(\n          `${triggerTranslationBaseKey}.time_pattern.description.ordinal`,\n          {\n            part: hours,\n          }\n        ),\n      }\n    );\n  }\n\n  // Zone Trigger\n  if (trigger.platform === \"zone\" && trigger.entity_id && trigger.zone) {\n    const entities: string[] = [];\n    const zones: string[] = [];\n\n    const states = hass.states;\n\n    if (Array.isArray(trigger.entity_id)) {\n      for (const entity of trigger.entity_id.values()) {\n        if (states[entity]) {\n          entities.push(computeStateName(states[entity]) || entity);\n        }\n      }\n    } else {\n      entities.push(\n        states[trigger.entity_id]\n          ? computeStateName(states[trigger.entity_id])\n          : trigger.entity_id\n      );\n    }\n\n    if (Array.isArray(trigger.zone)) {\n      for (const zone of trigger.zone.values()) {\n        if (states[zone]) {\n          zones.push(computeStateName(states[zone]) || zone);\n        }\n      }\n    } else {\n      zones.push(\n        states[trigger.zone]\n          ? computeStateName(states[trigger.zone])\n          : trigger.zone\n      );\n    }\n\n    return hass.localize(`${triggerTranslationBaseKey}.zone.description.full`, {\n      entity: formatListWithOrs(hass.locale, entities),\n      event: trigger.event.toString(),\n      zone: formatListWithOrs(hass.locale, zones),\n      numberOfZones: zones.length,\n    });\n  }\n\n  // Geo Location Trigger\n  if (trigger.platform === \"geo_location\" && trigger.source && trigger.zone) {\n    const sources: string[] = [];\n    const zones: string[] = [];\n    const states = hass.states;\n\n    if (Array.isArray(trigger.source)) {\n      for (const source of trigger.source.values()) {\n        sources.push(source);\n      }\n    } else {\n      sources.push(trigger.source);\n    }\n\n    if (Array.isArray(trigger.zone)) {\n      for (const zone of trigger.zone.values()) {\n        if (states[zone]) {\n          zones.push(computeStateName(states[zone]) || zone);\n        }\n      }\n    } else {\n      zones.push(\n        states[trigger.zone]\n          ? computeStateName(states[trigger.zone])\n          : trigger.zone\n      );\n    }\n\n    return hass.localize(\n      `${triggerTranslationBaseKey}.geo_location.description.full`,\n      {\n        source: formatListWithOrs(hass.locale, sources),\n        event: trigger.event.toString(),\n        zone: formatListWithOrs(hass.locale, zones),\n        numberOfZones: zones.length,\n      }\n    );\n  }\n\n  // MQTT Trigger\n  if (trigger.platform === \"mqtt\") {\n    return hass.localize(`${triggerTranslationBaseKey}.mqtt.description.full`);\n  }\n\n  // Template Trigger\n  if (trigger.platform === \"template\") {\n    let duration = \"\";\n    if (trigger.for) {\n      duration = describeDuration(hass.locale, trigger.for) ?? \"\";\n    }\n\n    return hass.localize(\n      `${triggerTranslationBaseKey}.template.description.full`,\n      { hasDuration: duration !== \"\" ? \"true\" : \"false\", duration: duration }\n    );\n  }\n\n  // Webhook Trigger\n  if (trigger.platform === \"webhook\") {\n    return hass.localize(\n      `${triggerTranslationBaseKey}.webhook.description.full`\n    );\n  }\n\n  // Conversation Trigger\n  if (trigger.platform === \"conversation\") {\n    if (!trigger.command) {\n      return hass.localize(\n        `${triggerTranslationBaseKey}.conversation.description.empty`\n      );\n    }\n\n    return hass.localize(\n      `${triggerTranslationBaseKey}.conversation.description.full`,\n      {\n        sentence: formatListWithOrs(\n          hass.locale,\n          ensureArray(trigger.command).map((cmd) => `'${cmd}'`)\n        ),\n      }\n    );\n  }\n\n  // Persistent Notification Trigger\n  if (trigger.platform === \"persistent_notification\") {\n    return hass.localize(\n      `${triggerTranslationBaseKey}.persistent_notification.description.full`\n    );\n  }\n\n  // Device Trigger\n  if (trigger.platform === \"device\" && trigger.device_id) {\n    const config = trigger as DeviceTrigger;\n    const localized = localizeDeviceAutomationTrigger(\n      hass,\n      entityRegistry,\n      config\n    );\n    if (localized) {\n      return localized;\n    }\n    const stateObj = hass.states[config.entity_id as string];\n    return `${stateObj ? computeStateName(stateObj) : config.entity_id} ${\n      config.type\n    }`;\n  }\n\n  return (\n    hass.localize(\n      `ui.panel.config.automation.editor.triggers.type.${trigger.platform}.label`\n    ) ||\n    hass.localize(`ui.panel.config.automation.editor.triggers.unknown_trigger`)\n  );\n};\n\nexport const describeCondition = (\n  condition: Condition,\n  hass: HomeAssistant,\n  entityRegistry: EntityRegistryEntry[],\n  ignoreAlias = false\n) => {\n  try {\n    return tryDescribeCondition(condition, hass, entityRegistry, ignoreAlias);\n  } catch (error: any) {\n    // eslint-disable-next-line no-console\n    console.error(error);\n\n    let msg = \"Error in describing condition\";\n    if (error.message) {\n      msg += \": \" + error.message;\n    }\n    return msg;\n  }\n};\n\nconst tryDescribeCondition = (\n  condition: Condition,\n  hass: HomeAssistant,\n  entityRegistry: EntityRegistryEntry[],\n  ignoreAlias = false\n) => {\n  if (condition.alias && !ignoreAlias) {\n    return condition.alias;\n  }\n\n  if (!condition.condition) {\n    const shorthands: Array<\"and\" | \"or\" | \"not\"> = [\"and\", \"or\", \"not\"];\n    for (const key of shorthands) {\n      if (!(key in condition)) {\n        continue;\n      }\n      if (ensureArray(condition[key])) {\n        condition = {\n          condition: key,\n          conditions: condition[key],\n        };\n      }\n    }\n  }\n\n  if (condition.condition === \"or\") {\n    const conditions = ensureArray(condition.conditions);\n\n    if (!conditions || conditions.length === 0) {\n      return hass.localize(\n        `${conditionsTranslationBaseKey}.or.description.no_conditions`\n      );\n    }\n    const count = conditions.length;\n    return hass.localize(\n      `${conditionsTranslationBaseKey}.or.description.full`,\n      {\n        count: count,\n      }\n    );\n  }\n\n  if (condition.condition === \"and\") {\n    const conditions = ensureArray(condition.conditions);\n\n    if (!conditions || conditions.length === 0) {\n      return hass.localize(\n        `${conditionsTranslationBaseKey}.and.description.no_conditions`\n      );\n    }\n    const count = conditions.length;\n    return hass.localize(\n      `${conditionsTranslationBaseKey}.and.description.full`,\n      {\n        count: count,\n      }\n    );\n  }\n\n  if (condition.condition === \"not\") {\n    const conditions = ensureArray(condition.conditions);\n\n    if (!conditions || conditions.length === 0) {\n      return hass.localize(\n        `${conditionsTranslationBaseKey}.not.description.no_conditions`\n      );\n    }\n    if (conditions.length === 1) {\n      return hass.localize(\n        `${conditionsTranslationBaseKey}.not.description.one_condition`\n      );\n    }\n    return hass.localize(\n      `${conditionsTranslationBaseKey}.not.description.full`,\n      { count: conditions.length }\n    );\n  }\n\n  // State Condition\n  if (condition.condition === \"state\") {\n    if (!condition.entity_id) {\n      return hass.localize(\n        `${conditionsTranslationBaseKey}.state.description.no_entity`\n      );\n    }\n\n    let attribute = \"\";\n    if (condition.attribute) {\n      const stateObj = Array.isArray(condition.entity_id)\n        ? hass.states[condition.entity_id[0]]\n        : hass.states[condition.entity_id];\n      attribute = computeAttributeNameDisplay(\n        hass.localize,\n        stateObj,\n        hass.entities,\n        condition.attribute\n      );\n    }\n\n    const entities: string[] = [];\n    if (Array.isArray(condition.entity_id)) {\n      for (const entity of condition.entity_id.values()) {\n        if (hass.states[entity]) {\n          entities.push(computeStateName(hass.states[entity]) || entity);\n        }\n      }\n    } else if (condition.entity_id) {\n      entities.push(\n        hass.states[condition.entity_id]\n          ? computeStateName(hass.states[condition.entity_id])\n          : condition.entity_id\n      );\n    }\n\n    const states: string[] = [];\n    const stateObj =\n      hass.states[\n        Array.isArray(condition.entity_id)\n          ? condition.entity_id[0]\n          : condition.entity_id\n      ];\n    if (Array.isArray(condition.state)) {\n      for (const state of condition.state.values()) {\n        states.push(\n          condition.attribute\n            ? hass\n                .formatEntityAttributeValue(\n                  stateObj,\n                  condition.attribute,\n                  state\n                )\n                .toString()\n            : hass.formatEntityState(stateObj, state)\n        );\n      }\n    } else if (condition.state !== \"\") {\n      states.push(\n        condition.attribute\n          ? hass\n              .formatEntityAttributeValue(\n                stateObj,\n                condition.attribute,\n                condition.state\n              )\n              .toString()\n          : hass.formatEntityState(stateObj, condition.state.toString())\n      );\n    }\n\n    let duration = \"\";\n    if (condition.for) {\n      duration = describeDuration(hass.locale, condition.for) || \"\";\n    }\n\n    return hass.localize(\n      `${conditionsTranslationBaseKey}.state.description.full`,\n      {\n        hasAttribute: attribute !== \"\" ? \"true\" : \"false\",\n        attribute: attribute,\n        numberOfEntities: entities.length,\n        entities:\n          condition.match === \"any\"\n            ? formatListWithOrs(hass.locale, entities)\n            : formatListWithAnds(hass.locale, entities),\n        numberOfStates: states.length,\n        states: formatListWithOrs(hass.locale, states),\n        hasDuration: duration !== \"\" ? \"true\" : \"false\",\n        duration: duration,\n      }\n    );\n  }\n\n  // Numeric State Condition\n  if (condition.condition === \"numeric_state\" && condition.entity_id) {\n    const stateObj = hass.states[condition.entity_id];\n    const entity = stateObj ? computeStateName(stateObj) : condition.entity_id;\n\n    const attribute = condition.attribute\n      ? computeAttributeNameDisplay(\n          hass.localize,\n          stateObj,\n          hass.entities,\n          condition.attribute\n        )\n      : undefined;\n\n    if (condition.above && condition.below) {\n      return hass.localize(\n        `${conditionsTranslationBaseKey}.numeric_state.description.above-below`,\n        {\n          attribute: attribute,\n          entity: entity,\n          above: condition.above,\n          below: condition.below,\n        }\n      );\n    }\n    if (condition.above) {\n      return hass.localize(\n        `${conditionsTranslationBaseKey}.numeric_state.description.above`,\n        {\n          attribute: attribute,\n          entity: entity,\n          above: condition.above,\n        }\n      );\n    }\n    if (condition.below) {\n      return hass.localize(\n        `${conditionsTranslationBaseKey}.numeric_state.description.below`,\n        {\n          attribute: attribute,\n          entity: entity,\n          below: condition.below,\n        }\n      );\n    }\n  }\n\n  // Time condition\n  if (condition.condition === \"time\") {\n    const weekdaysArray = ensureArray(condition.weekday);\n    const validWeekdays =\n      weekdaysArray && weekdaysArray.length > 0 && weekdaysArray.length < 7;\n    if (condition.before || condition.after || validWeekdays) {\n      const before =\n        typeof condition.before !== \"string\"\n          ? condition.before\n          : condition.before.includes(\".\")\n            ? `entity ${\n                hass.states[condition.before]\n                  ? computeStateName(hass.states[condition.before])\n                  : condition.before\n              }`\n            : localizeTimeString(condition.before, hass.locale, hass.config);\n\n      const after =\n        typeof condition.after !== \"string\"\n          ? condition.after\n          : condition.after.includes(\".\")\n            ? `entity ${\n                hass.states[condition.after]\n                  ? computeStateName(hass.states[condition.after])\n                  : condition.after\n              }`\n            : localizeTimeString(condition.after, hass.locale, hass.config);\n\n      let localizedDays: string[] = [];\n      if (validWeekdays) {\n        localizedDays = weekdaysArray.map((d) =>\n          hass.localize(\n            `ui.panel.config.automation.editor.conditions.type.time.weekdays.${d}`\n          )\n        );\n      }\n\n      let hasTime = \"\";\n      if (after !== undefined && before !== undefined) {\n        hasTime = \"after_before\";\n      } else if (after !== undefined) {\n        hasTime = \"after\";\n      } else if (before !== undefined) {\n        hasTime = \"before\";\n      }\n\n      return hass.localize(\n        `${conditionsTranslationBaseKey}.time.description.full`,\n        {\n          hasTime: hasTime,\n          hasTimeAndDay: (after || before) && validWeekdays ? \"true\" : \"false\",\n          hasDay: validWeekdays ? \"true\" : \"false\",\n          time_before: before,\n          time_after: after,\n          day: formatListWithOrs(hass.locale, localizedDays),\n        }\n      );\n    }\n  }\n\n  // Sun condition\n  if (condition.condition === \"sun\" && (condition.before || condition.after)) {\n    let afterDuration = \"\";\n    if (condition.after && condition.after_offset) {\n      if (typeof condition.after_offset === \"number\") {\n        afterDuration = secondsToDuration(condition.after_offset)!;\n      } else if (typeof condition.after_offset === \"string\") {\n        afterDuration = condition.after_offset;\n      } else {\n        afterDuration = JSON.stringify(condition.after_offset);\n      }\n    }\n\n    let beforeDuration = \"\";\n    if (condition.before && condition.before_offset) {\n      if (typeof condition.before_offset === \"number\") {\n        beforeDuration = secondsToDuration(condition.before_offset)!;\n      } else if (typeof condition.before_offset === \"string\") {\n        beforeDuration = condition.before_offset;\n      } else {\n        beforeDuration = JSON.stringify(condition.before_offset);\n      }\n    }\n\n    return hass.localize(\n      `${conditionsTranslationBaseKey}.sun.description.full`,\n      {\n        afterChoice: condition.after ?? \"other\",\n        afterOffsetChoice: afterDuration !== \"\" ? \"offset\" : \"other\",\n        afterOffset: afterDuration,\n        beforeChoice: condition.before ?? \"other\",\n        beforeOffsetChoice: beforeDuration !== \"\" ? \"offset\" : \"other\",\n        beforeOffset: beforeDuration,\n      }\n    );\n  }\n\n  // Zone condition\n  if (condition.condition === \"zone\" && condition.entity_id && condition.zone) {\n    const entities: string[] = [];\n    const zones: string[] = [];\n\n    const states = hass.states;\n\n    if (Array.isArray(condition.entity_id)) {\n      for (const entity of condition.entity_id.values()) {\n        if (states[entity]) {\n          entities.push(computeStateName(states[entity]) || entity);\n        }\n      }\n    } else {\n      entities.push(\n        states[condition.entity_id]\n          ? computeStateName(states[condition.entity_id])\n          : condition.entity_id\n      );\n    }\n\n    if (Array.isArray(condition.zone)) {\n      for (const zone of condition.zone.values()) {\n        if (states[zone]) {\n          zones.push(computeStateName(states[zone]) || zone);\n        }\n      }\n    } else {\n      zones.push(\n        states[condition.zone]\n          ? computeStateName(states[condition.zone])\n          : condition.zone\n      );\n    }\n\n    const entitiesString = formatListWithOrs(hass.locale, entities);\n    const zonesString = formatListWithOrs(hass.locale, zones);\n    return hass.localize(\n      `${conditionsTranslationBaseKey}.zone.description.full`,\n      {\n        entity: entitiesString,\n        numberOfEntities: entities.length,\n        zone: zonesString,\n        numberOfZones: zones.length,\n      }\n    );\n  }\n\n  if (condition.condition === \"device\" && condition.device_id) {\n    const config = condition as DeviceCondition;\n    const localized = localizeDeviceAutomationCondition(\n      hass,\n      entityRegistry,\n      config\n    );\n    if (localized) {\n      return localized;\n    }\n    const stateObj = hass.states[config.entity_id as string];\n    return `${stateObj ? computeStateName(stateObj) : config.entity_id} ${\n      config.type\n    }`;\n  }\n\n  if (condition.condition === \"template\") {\n    return hass.localize(\n      `${conditionsTranslationBaseKey}.template.description.full`\n    );\n  }\n\n  if (condition.condition === \"trigger\" && condition.id != null) {\n    return hass.localize(\n      `${conditionsTranslationBaseKey}.trigger.description.full`,\n      {\n        id: formatListWithOrs(\n          hass.locale,\n          ensureArray(condition.id).map((id) => id.toString())\n        ),\n      }\n    );\n  }\n\n  return (\n    hass.localize(\n      `ui.panel.config.automation.editor.conditions.type.${condition.condition}.label`\n    ) ||\n    hass.localize(\n      `ui.panel.config.automation.editor.conditions.unknown_condition`\n    )\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}