{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nconst mdiCog = \"M12,15.5A3.5,3.5 0 0,1 8.5,12A3.5,3.5 0 0,1 12,8.5A3.5,3.5 0 0,1 15.5,12A3.5,3.5 0 0,1 12,15.5M19.43,12.97C19.47,12.65 19.5,12.33 19.5,12C19.5,11.67 19.47,11.34 19.43,11L21.54,9.37C21.73,9.22 21.78,8.95 21.66,8.73L19.66,5.27C19.54,5.05 19.27,4.96 19.05,5.05L16.56,6.05C16.04,5.66 15.5,5.32 14.87,5.07L14.5,2.42C14.46,2.18 14.25,2 14,2H10C9.75,2 9.54,2.18 9.5,2.42L9.13,5.07C8.5,5.32 7.96,5.66 7.44,6.05L4.95,5.05C4.73,4.96 4.46,5.05 4.34,5.27L2.34,8.73C2.21,8.95 2.27,9.22 2.46,9.37L4.57,11C4.53,11.34 4.5,11.67 4.5,12C4.5,12.33 4.53,12.65 4.57,12.97L2.46,14.63C2.27,14.78 2.21,15.05 2.34,15.27L4.34,18.73C4.46,18.95 4.73,19.03 4.95,18.95L7.44,17.94C7.96,18.34 8.5,18.68 9.13,18.93L9.5,21.58C9.54,21.82 9.75,22 10,22H14C14.25,22 14.46,21.82 14.5,21.58L14.87,18.93C15.5,18.67 16.04,18.34 16.56,17.94L19.05,18.95C19.27,19.03 19.54,18.95 19.66,18.73L21.66,15.27C21.78,15.05 21.73,14.78 21.54,14.63L19.43,12.97Z\";\nimport { css, html, LitElement } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport \"../../../components/ha-button\";\nimport { enableConfigEntry } from \"../../../data/config_entries\";\nimport { showAlertDialog } from \"../../../dialogs/generic/show-dialog-box\";\nimport \"./ha-integration-action-card\";\nexport let HaDisabledConfigEntryCard = _decorate([customElement(\"ha-disabled-config-entry-card\")], function (_initialize, _LitElement) {\n  class HaDisabledConfigEntryCard extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaDisabledConfigEntryCard,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"entry\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"manifest\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        return html`\n      <ha-integration-action-card\n        .hass=${this.hass}\n        .manifest=${this.manifest}\n        .banner=${this.hass.localize(\"ui.panel.config.integrations.config_entry.disable.disabled_cause\", {\n          cause: this.hass.localize(`ui.panel.config.integrations.config_entry.disable.disabled_by.${this.entry.disabled_by}`) || this.entry.disabled_by\n        })}\n        .domain=${this.entry.domain}\n        .localizedDomainName=${this.entry.localized_domain_name}\n        .label=${this.entry.title || this.entry.localized_domain_name}\n      >\n        <a\n          href=${`/config/integrations/integration/${this.entry.domain}`}\n          slot=\"header-button\"\n        >\n          <ha-icon-button .path=${mdiCog}></ha-icon-button>\n        </a>\n        <ha-button\n          @click=${this._handleEnable}\n          .label=${this.hass.localize(\"ui.common.enable\")}\n        ></ha-button>\n      </ha-integration-action-card>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleEnable\",\n      value: async function _handleEnable() {\n        const entryId = this.entry.entry_id;\n        let result;\n        try {\n          result = await enableConfigEntry(this.hass, entryId);\n        } catch (err) {\n          showAlertDialog(this, {\n            title: this.hass.localize(\"ui.panel.config.integrations.config_entry.disable_error\"),\n            text: err.message\n          });\n          return;\n        }\n        if (result.require_restart) {\n          showAlertDialog(this, {\n            text: this.hass.localize(\"ui.panel.config.integrations.config_entry.enable_restart_confirm\")\n          });\n        }\n      }\n    }, {\n      kind: \"field\",\n      static: true,\n      key: \"styles\",\n      value() {\n        return css`\n    :host {\n      --state-color: var(--divider-color, #e0e0e0);\n    }\n\n    ha-button {\n      --mdc-theme-primary: var(--primary-color);\n    }\n    a ha-icon-button {\n      color: var(--secondary-text-color);\n    }\n  `;\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","customElement","property","enableConfigEntry","showAlertDialog","HaDisabledConfigEntryCard","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","render","hass","manifest","localize","cause","entry","disabled_by","domain","localized_domain_name","title","mdiCog","_handleEnable","entryId","entry_id","result","err","text","message","require_restart","static"],"sources":["/workspaces/frontend/src/panels/config/integrations/ha-disabled-config-entry-card.ts"],"sourcesContent":["import { mdiCog } from \"@mdi/js\";\nimport { css, html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport \"../../../components/ha-button\";\nimport {\n  DisableConfigEntryResult,\n  enableConfigEntry,\n} from \"../../../data/config_entries\";\nimport type { IntegrationManifest } from \"../../../data/integration\";\nimport { showAlertDialog } from \"../../../dialogs/generic/show-dialog-box\";\nimport type { HomeAssistant } from \"../../../types\";\nimport type { ConfigEntryExtended } from \"./ha-config-integrations\";\nimport \"./ha-integration-action-card\";\n\n@customElement(\"ha-disabled-config-entry-card\")\nexport class HaDisabledConfigEntryCard extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public entry!: ConfigEntryExtended;\n\n  @property({ attribute: false }) public manifest?: IntegrationManifest;\n\n  protected render(): TemplateResult {\n    return html`\n      <ha-integration-action-card\n        .hass=${this.hass}\n        .manifest=${this.manifest}\n        .banner=${this.hass.localize(\n          \"ui.panel.config.integrations.config_entry.disable.disabled_cause\",\n          {\n            cause:\n              this.hass.localize(\n                `ui.panel.config.integrations.config_entry.disable.disabled_by.${this\n                  .entry.disabled_by!}`\n              ) || this.entry.disabled_by,\n          }\n        )}\n        .domain=${this.entry.domain}\n        .localizedDomainName=${this.entry.localized_domain_name}\n        .label=${this.entry.title || this.entry.localized_domain_name}\n      >\n        <a\n          href=${`/config/integrations/integration/${this.entry.domain}`}\n          slot=\"header-button\"\n        >\n          <ha-icon-button .path=${mdiCog}></ha-icon-button>\n        </a>\n        <ha-button\n          @click=${this._handleEnable}\n          .label=${this.hass.localize(\"ui.common.enable\")}\n        ></ha-button>\n      </ha-integration-action-card>\n    `;\n  }\n\n  private async _handleEnable() {\n    const entryId = this.entry.entry_id;\n\n    let result: DisableConfigEntryResult;\n    try {\n      result = await enableConfigEntry(this.hass, entryId);\n    } catch (err: any) {\n      showAlertDialog(this, {\n        title: this.hass.localize(\n          \"ui.panel.config.integrations.config_entry.disable_error\"\n        ),\n        text: err.message,\n      });\n      return;\n    }\n\n    if (result.require_restart) {\n      showAlertDialog(this, {\n        text: this.hass.localize(\n          \"ui.panel.config.integrations.config_entry.enable_restart_confirm\"\n        ),\n      });\n    }\n  }\n\n  static styles = css`\n    :host {\n      --state-color: var(--divider-color, #e0e0e0);\n    }\n\n    ha-button {\n      --mdc-theme-primary: var(--primary-color);\n    }\n    a ha-icon-button {\n      color: var(--secondary-text-color);\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-disabled-config-entry-card\": HaDisabledConfigEntryCard;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}