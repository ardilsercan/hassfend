{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _templateObject, _templateObject2;\n/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { html } from 'lit';\nimport { Progress } from './progress.js';\n/**\n * A circular progress component.\n */\nexport var CircularProgress = /*#__PURE__*/function (_Progress) {\n  _inherits(CircularProgress, _Progress);\n  function CircularProgress() {\n    _classCallCheck(this, CircularProgress);\n    return _callSuper(this, CircularProgress, arguments);\n  }\n  _createClass(CircularProgress, [{\n    key: \"renderIndicator\",\n    value: function renderIndicator() {\n      if (this.indeterminate) {\n        return this.renderIndeterminateContainer();\n      }\n      return this.renderDeterminateContainer();\n    }\n    // Determinate mode is rendered with an svg so the progress arc can be\n    // easily animated via stroke-dashoffset.\n  }, {\n    key: \"renderDeterminateContainer\",\n    value: function renderDeterminateContainer() {\n      var dashOffset = (1 - this.value / this.max) * 100;\n      // note, dash-array/offset are relative to Setting `pathLength` but\n      // Chrome seems to render this inaccurately and using a large viewbox helps.\n      return html(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      <svg viewBox=\\\"0 0 4800 4800\\\">\\n        <circle class=\\\"track\\\" pathLength=\\\"100\\\"></circle>\\n        <circle\\n          class=\\\"active-track\\\"\\n          pathLength=\\\"100\\\"\\n          stroke-dashoffset=\", \"></circle>\\n      </svg>\\n    \"])), dashOffset);\n    }\n    // Indeterminate mode rendered with 2 bordered-divs. The borders are\n    // clipped into half circles by their containers. The divs are then carefully\n    // animated to produce changes to the spinner arc size.\n    // This approach has 4.5x the FPS of rendering via svg on Chrome 111.\n    // See https://lit.dev/playground/#gist=febb773565272f75408ab06a0eb49746.\n  }, {\n    key: \"renderIndeterminateContainer\",\n    value: function renderIndeterminateContainer() {\n      return html(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\" <div class=\\\"spinner\\\">\\n      <div class=\\\"left\\\">\\n        <div class=\\\"circle\\\"></div>\\n      </div>\\n      <div class=\\\"right\\\">\\n        <div class=\\\"circle\\\"></div>\\n      </div>\\n    </div>\"])));\n    }\n  }]);\n  return CircularProgress;\n}(Progress);","map":{"version":3,"names":["html","Progress","CircularProgress","_Progress","_inherits","_classCallCheck","_callSuper","arguments","_createClass","key","value","renderIndicator","indeterminate","renderIndeterminateContainer","renderDeterminateContainer","dashOffset","max","_templateObject","_taggedTemplateLiteral","_templateObject2"],"sources":["circular-progress.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {html} from 'lit';\n\nimport {Progress} from './progress.js';\n\n/**\n * A circular progress component.\n */\nexport class CircularProgress extends Progress {\n  protected override renderIndicator() {\n    if (this.indeterminate) {\n      return this.renderIndeterminateContainer();\n    }\n\n    return this.renderDeterminateContainer();\n  }\n\n  // Determinate mode is rendered with an svg so the progress arc can be\n  // easily animated via stroke-dashoffset.\n  private renderDeterminateContainer() {\n    const dashOffset = (1 - this.value / this.max) * 100;\n    // note, dash-array/offset are relative to Setting `pathLength` but\n    // Chrome seems to render this inaccurately and using a large viewbox helps.\n    return html`\n      <svg viewBox=\"0 0 4800 4800\">\n        <circle class=\"track\" pathLength=\"100\"></circle>\n        <circle\n          class=\"active-track\"\n          pathLength=\"100\"\n          stroke-dashoffset=${dashOffset}></circle>\n      </svg>\n    `;\n  }\n\n  // Indeterminate mode rendered with 2 bordered-divs. The borders are\n  // clipped into half circles by their containers. The divs are then carefully\n  // animated to produce changes to the spinner arc size.\n  // This approach has 4.5x the FPS of rendering via svg on Chrome 111.\n  // See https://lit.dev/playground/#gist=febb773565272f75408ab06a0eb49746.\n  private renderIndeterminateContainer() {\n    return html` <div class=\"spinner\">\n      <div class=\"left\">\n        <div class=\"circle\"></div>\n      </div>\n      <div class=\"right\">\n        <div class=\"circle\"></div>\n      </div>\n    </div>`;\n  }\n}\n"],"mappings":";;;;;;AAAA;;;;;AAMA,SAAQA,IAAI,QAAO,KAAK;AAExB,SAAQC,QAAQ,QAAO,eAAe;AAEtC;;;AAGA,WAAaC,gBAAiB,0BAAAC,SAAA;EAAAC,SAAA,CAAAF,gBAAA,EAAAC,SAAA;EAAA,SAAAD,iBAAA;IAAAG,eAAA,OAAAH,gBAAA;IAAA,OAAAI,UAAA,OAAAJ,gBAAA,EAAAK,SAAA;EAAA;EAAAC,YAAA,CAAAN,gBAAA;IAAAO,GAAA;IAAAC,KAAA,EACT,SAAAC,gBAAA,EAAe;MAChC,IAAI,IAAI,CAACC,aAAa,EAAE;QACtB,OAAO,IAAI,CAACC,4BAA4B,EAAE;;MAG5C,OAAO,IAAI,CAACC,0BAA0B,EAAE;IAC1C;IAEA;IACA;EAAA;IAAAL,GAAA;IAAAC,KAAA,EACQ,SAAAI,2BAAA,EAA0B;MAChC,IAAMC,UAAU,GAAG,CAAC,CAAC,GAAG,IAAI,CAACL,KAAK,GAAG,IAAI,CAACM,GAAG,IAAI,GAAG;MACpD;MACA;MACA,OAAOhB,IAAI,CAAAiB,eAAA,KAAAA,eAAA,GAAAC,sBAAA,+PAMeH,UAAU;IAGtC;IAEA;IACA;IACA;IACA;IACA;EAAA;IAAAN,GAAA;IAAAC,KAAA,EACQ,SAAAG,6BAAA,EAA4B;MAClC,OAAOb,IAAI,CAAAmB,gBAAA,KAAAA,gBAAA,GAAAD,sBAAA;IAQb;EAAC;EAAA,OAAAhB,gBAAA;AAAA,EAxCmCD,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}