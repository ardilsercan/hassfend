{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport { consume } from \"@lit-labs/context\";\nimport \"@lrnwebcomponents/simple-tooltip/simple-tooltip\";\nconst mdiCancel = \"M12 2C17.5 2 22 6.5 22 12S17.5 22 12 22 2 17.5 2 12 6.5 2 12 2M12 4C10.1 4 8.4 4.6 7.1 5.7L18.3 16.9C19.3 15.5 20 13.8 20 12C20 7.6 16.4 4 12 4M16.9 18.3L5.7 7.1C4.6 8.4 4 10.1 4 12C4 16.4 7.6 20 12 20C13.9 20 15.6 19.4 16.9 18.3Z\";\nconst mdiFilterVariant = \"M6,13H18V11H6M3,6V8H21V6M10,18H14V16H10V18Z\";\nconst mdiPlus = \"M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z\";\nimport { LitElement, css, html, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { computeStateDomain } from \"../../../common/entity/compute_state_domain\";\nimport { PROTOCOL_INTEGRATIONS, protocolIntegrationPicked } from \"../../../common/integrations/protocolIntegrationPicked\";\nimport { navigate } from \"../../../common/navigate\";\nimport \"../../../components/entity/ha-battery-icon\";\nimport \"../../../components/ha-button-menu\";\nimport \"../../../components/ha-check-list-item\";\nimport \"../../../components/ha-fab\";\nimport \"../../../components/ha-icon-button\";\nimport { sortConfigEntries } from \"../../../data/config_entries\";\nimport { fullEntitiesContext } from \"../../../data/context\";\nimport { computeDeviceName } from \"../../../data/device_registry\";\nimport { findBatteryChargingEntity, findBatteryEntity } from \"../../../data/entity_registry\";\nimport { domainToName } from \"../../../data/integration\";\nimport \"../../../layouts/hass-tabs-subpage-data-table\";\nimport { haStyle } from \"../../../resources/styles\";\nimport { brandsUrl } from \"../../../util/brands-url\";\nimport { configSections } from \"../ha-panel-config\";\nimport \"../integrations/ha-integration-overflow-menu\";\nimport { showAddIntegrationDialog } from \"../integrations/show-add-integration-dialog\";\nexport let HaConfigDeviceDashboard = _decorate([customElement(\"ha-config-devices-dashboard\")], function (_initialize, _LitElement) {\n  class HaConfigDeviceDashboard extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaConfigDeviceDashboard,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"narrow\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"isWide\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"entries\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state(), consume({\n        context: fullEntitiesContext,\n        subscribe: true\n      })],\n      key: \"entities\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"manifests\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"route\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_searchParms\",\n      value() {\n        return new URLSearchParams(window.location.search);\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_showDisabled\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_filter\",\n      value() {\n        var _history$state;\n        return ((_history$state = history.state) === null || _history$state === void 0 ? void 0 : _history$state.filter) || \"\";\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_numHiddenDevices\",\n      value() {\n        return 0;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_ignoreLocationChange\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"method\",\n      key: \"connectedCallback\",\n      value: function connectedCallback() {\n        _get(_getPrototypeOf(HaConfigDeviceDashboard.prototype), \"connectedCallback\", this).call(this);\n        window.addEventListener(\"location-changed\", this._locationChanged);\n        window.addEventListener(\"popstate\", this._popState);\n      }\n    }, {\n      kind: \"method\",\n      key: \"disconnectedCallback\",\n      value: function disconnectedCallback() {\n        _get(_getPrototypeOf(HaConfigDeviceDashboard.prototype), \"disconnectedCallback\", this).call(this);\n        window.removeEventListener(\"location-changed\", this._locationChanged);\n        window.removeEventListener(\"popstate\", this._popState);\n      }\n    }, {\n      kind: \"field\",\n      key: \"_locationChanged\",\n      value() {\n        return () => {\n          if (this._ignoreLocationChange) {\n            this._ignoreLocationChange = false;\n            return;\n          }\n          if (window.location.search.substring(1) !== this._searchParms.toString()) {\n            this._searchParms = new URLSearchParams(window.location.search);\n          }\n        };\n      }\n    }, {\n      kind: \"field\",\n      key: \"_popState\",\n      value() {\n        return () => {\n          if (window.location.search.substring(1) !== this._searchParms.toString()) {\n            this._searchParms = new URLSearchParams(window.location.search);\n          }\n        };\n      }\n    }, {\n      kind: \"field\",\n      key: \"_activeFilters\",\n      value() {\n        return memoizeOne((entries, filters, localize) => {\n          const filterTexts = [];\n          filters.forEach((value, key) => {\n            switch (key) {\n              case \"config_entry\":\n                {\n                  const configEntry = entries.find(entry => entry.entry_id === value);\n                  if (!configEntry) {\n                    break;\n                  }\n                  const integrationName = domainToName(localize, configEntry.domain);\n                  filterTexts.push(`${this.hass.localize(\"ui.panel.config.integrations.integration\")} \"${integrationName}${integrationName !== configEntry.title ? `: ${configEntry.title}` : \"\"}\"`);\n                  break;\n                }\n              case \"domain\":\n                {\n                  filterTexts.push(`${this.hass.localize(\"ui.panel.config.integrations.integration\")} \"${domainToName(localize, value)}\"`);\n                }\n            }\n          });\n          return filterTexts.length ? filterTexts : undefined;\n        });\n      }\n    }, {\n      kind: \"field\",\n      key: \"_devicesAndFilterDomains\",\n      value() {\n        return memoizeOne((devices, entries, entities, areas, manifests, filters, showDisabled, localize) => {\n          // Some older installations might have devices pointing at invalid entryIDs\n          // So we guard for that.\n          let outputDevices = Object.values(devices);\n\n          // If nothing gets filtered, this is our correct count of devices\n          let startLength = outputDevices.length;\n          const deviceEntityLookup = {};\n          for (const entity of entities) {\n            if (!entity.device_id) {\n              continue;\n            }\n            if (!(entity.device_id in deviceEntityLookup)) {\n              deviceEntityLookup[entity.device_id] = [];\n            }\n            deviceEntityLookup[entity.device_id].push(entity);\n          }\n          const entryLookup = {};\n          for (const entry of entries) {\n            entryLookup[entry.entry_id] = entry;\n          }\n          const manifestLookup = {};\n          for (const manifest of manifests) {\n            manifestLookup[manifest.domain] = manifest;\n          }\n          let filterConfigEntry;\n          const filteredDomains = new Set();\n          filters.forEach((value, key) => {\n            if (key === \"config_entry\") {\n              outputDevices = outputDevices.filter(device => device.config_entries.includes(value));\n              startLength = outputDevices.length;\n              filterConfigEntry = entries.find(entry => entry.entry_id === value);\n              if (filterConfigEntry) {\n                filteredDomains.add(filterConfigEntry.domain);\n              }\n            }\n            if (key === \"domain\") {\n              const entryIds = entries.filter(entry => entry.domain === value).map(entry => entry.entry_id);\n              outputDevices = outputDevices.filter(device => device.config_entries.some(entryId => entryIds.includes(entryId)));\n              startLength = outputDevices.length;\n              filteredDomains.add(value);\n            }\n          });\n          if (!showDisabled) {\n            outputDevices = outputDevices.filter(device => !device.disabled_by);\n          }\n          const formattedOutputDevices = outputDevices.map(device => {\n            var _this$hass$states;\n            const deviceEntries = sortConfigEntries(device.config_entries.filter(entId => entId in entryLookup).map(entId => entryLookup[entId]), manifestLookup);\n            return {\n              ...device,\n              name: computeDeviceName(device, this.hass, deviceEntityLookup[device.id]),\n              model: device.model || `<${localize(\"ui.panel.config.devices.data_table.unknown\")}>`,\n              manufacturer: device.manufacturer || `<${localize(\"ui.panel.config.devices.data_table.unknown\")}>`,\n              area: device.area_id && areas[device.area_id] ? areas[device.area_id].name : \"—\",\n              integration: deviceEntries.length ? deviceEntries.map(entry => localize(`component.${entry.domain}.title`) || entry.domain).join(\", \") : this.hass.localize(\"ui.panel.config.devices.data_table.no_integration\"),\n              domains: deviceEntries.map(entry => entry.domain),\n              battery_entity: [this._batteryEntity(device.id, deviceEntityLookup), this._batteryChargingEntity(device.id, deviceEntityLookup)],\n              battery_level: (_this$hass$states = this.hass.states[this._batteryEntity(device.id, deviceEntityLookup) || \"\"]) === null || _this$hass$states === void 0 ? void 0 : _this$hass$states.state\n            };\n          });\n          this._numHiddenDevices = startLength - formattedOutputDevices.length;\n          return {\n            devicesOutput: formattedOutputDevices,\n            filteredConfigEntry: filterConfigEntry,\n            filteredDomains\n          };\n        });\n      }\n    }, {\n      kind: \"field\",\n      key: \"_columns\",\n      value() {\n        return memoizeOne((localize, narrow, showDisabled) => {\n          const columns = {\n            icon: {\n              title: \"\",\n              type: \"icon\",\n              template: device => {\n                var _this$hass$themes;\n                return device.domains.length ? html`<img\n                  alt=\"\"\n                  crossorigin=\"anonymous\"\n                  referrerpolicy=\"no-referrer\"\n                  src=${brandsUrl({\n                  domain: device.domains[0],\n                  type: \"icon\",\n                  darkOptimized: (_this$hass$themes = this.hass.themes) === null || _this$hass$themes === void 0 ? void 0 : _this$hass$themes.darkMode\n                })}\n                />` : \"\";\n              }\n            }\n          };\n          if (narrow) {\n            columns.name = {\n              title: localize(\"ui.panel.config.devices.data_table.device\"),\n              main: true,\n              sortable: true,\n              filterable: true,\n              direction: \"asc\",\n              grows: true,\n              template: device => html`\n            ${device.name}\n            <div class=\"secondary\">${device.area} | ${device.integration}</div>\n          `\n            };\n          } else {\n            columns.name = {\n              title: localize(\"ui.panel.config.devices.data_table.device\"),\n              main: true,\n              sortable: true,\n              filterable: true,\n              grows: true,\n              direction: \"asc\"\n            };\n          }\n          columns.manufacturer = {\n            title: localize(\"ui.panel.config.devices.data_table.manufacturer\"),\n            sortable: true,\n            hidden: narrow,\n            filterable: true,\n            width: \"15%\"\n          };\n          columns.model = {\n            title: localize(\"ui.panel.config.devices.data_table.model\"),\n            sortable: true,\n            hidden: narrow,\n            filterable: true,\n            width: \"15%\"\n          };\n          columns.area = {\n            title: localize(\"ui.panel.config.devices.data_table.area\"),\n            sortable: true,\n            hidden: narrow,\n            filterable: true,\n            width: \"15%\"\n          };\n          columns.integration = {\n            title: localize(\"ui.panel.config.devices.data_table.integration\"),\n            sortable: true,\n            hidden: narrow,\n            filterable: true,\n            width: \"15%\"\n          };\n          columns.battery_entity = {\n            title: localize(\"ui.panel.config.devices.data_table.battery\"),\n            sortable: true,\n            filterable: true,\n            type: \"numeric\",\n            width: narrow ? \"105px\" : \"15%\",\n            maxWidth: \"105px\",\n            valueColumn: \"battery_level\",\n            template: device => {\n              const batteryEntityPair = device.battery_entity;\n              const battery = batteryEntityPair && batteryEntityPair[0] ? this.hass.states[batteryEntityPair[0]] : undefined;\n              const batteryDomain = battery ? computeStateDomain(battery) : undefined;\n              const batteryCharging = batteryEntityPair && batteryEntityPair[1] ? this.hass.states[batteryEntityPair[1]] : undefined;\n              return battery && (batteryDomain === \"binary_sensor\" || !isNaN(battery.state)) ? html`\n                ${batteryDomain === \"sensor\" ? this.hass.formatEntityState(battery) : nothing}\n                <ha-battery-icon\n                  .hass=${this.hass}\n                  .batteryStateObj=${battery}\n                  .batteryChargingStateObj=${batteryCharging}\n                ></ha-battery-icon>\n              ` : html`—`;\n            }\n          };\n          if (showDisabled) {\n            columns.disabled_by = {\n              title: \"\",\n              label: localize(\"ui.panel.config.devices.data_table.disabled_by\"),\n              type: \"icon\",\n              template: device => device.disabled_by ? html`<div\n                  tabindex=\"0\"\n                  style=\"display:inline-block; position: relative;\"\n                >\n                  <ha-svg-icon .path=${mdiCancel}></ha-svg-icon>\n                  <simple-tooltip animation-delay=\"0\" position=\"left\">\n                    ${this.hass.localize(\"ui.panel.config.devices.disabled\")}\n                  </simple-tooltip>\n                </div>` : \"—\"\n            };\n          }\n          return columns;\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"willUpdate\",\n      value: function willUpdate(changedProps) {\n        if (changedProps.has(\"_searchParms\")) {\n          if (this._searchParms.get(\"config_entry\") || this._searchParms.get(\"domain\")) {\n            // If we are requested to show the devices for a given config entry / domain,\n            // also show the disabled ones by default.\n            this._showDisabled = true;\n          }\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        const {\n          devicesOutput\n        } = this._devicesAndFilterDomains(this.hass.devices, this.entries, this.entities, this.hass.areas, this.manifests, this._searchParms, this._showDisabled, this.hass.localize);\n        const activeFilters = this._activeFilters(this.entries, this._searchParms, this.hass.localize);\n        return html`\n      <hass-tabs-subpage-data-table\n        .hass=${this.hass}\n        .narrow=${this.narrow}\n        .backPath=${this._searchParms.has(\"historyBack\") ? undefined : \"/config\"}\n        .tabs=${configSections.devices}\n        .route=${this.route}\n        .activeFilters=${activeFilters}\n        .numHidden=${this._numHiddenDevices}\n        .searchLabel=${this.hass.localize(\"ui.panel.config.devices.picker.search\")}\n        .hiddenLabel=${this.hass.localize(\"ui.panel.config.devices.picker.filter.hidden_devices\", {\n          number: this._numHiddenDevices\n        })}\n        .columns=${this._columns(this.hass.localize, this.narrow, this._showDisabled)}\n        .data=${devicesOutput}\n        .filter=${this._filter}\n        @clear-filter=${this._clearFilter}\n        @search-changed=${this._handleSearchChange}\n        @row-click=${this._handleRowClicked}\n        clickable\n        hasFab\n      >\n        <ha-integration-overflow-menu\n          .hass=${this.hass}\n          slot=\"toolbar-icon\"\n        ></ha-integration-overflow-menu>\n        <ha-fab\n          slot=\"fab\"\n          .label=${this.hass.localize(\"ui.panel.config.devices.add_device\")}\n          extended\n          @click=${this._addDevice}\n        >\n          <ha-svg-icon slot=\"icon\" .path=${mdiPlus}></ha-svg-icon>\n        </ha-fab>\n        <ha-button-menu slot=\"filter-menu\" multi>\n          <ha-icon-button\n            slot=\"trigger\"\n            .label=${this.hass.localize(\"ui.panel.config.devices.picker.filter.filter\")}\n            .path=${mdiFilterVariant}\n          ></ha-icon-button>\n          ${this.narrow && activeFilters !== null && activeFilters !== void 0 && activeFilters.length ? html`<mwc-list-item @click=${this._clearFilter}\n                >${this.hass.localize(\"ui.components.data-table.filtering_by\")}\n                ${activeFilters.join(\", \")}\n                <span class=\"clear\"\n                  >${this.hass.localize(\"ui.common.clear\")}</span\n                ></mwc-list-item\n              >` : \"\"}\n          <ha-check-list-item\n            left\n            @request-selected=${this._showDisabledChanged}\n            .selected=${this._showDisabled}\n          >\n            ${this.hass.localize(\"ui.panel.config.devices.picker.filter.show_disabled\")}\n          </ha-check-list-item>\n        </ha-button-menu>\n      </hass-tabs-subpage-data-table>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_batteryEntity\",\n      value: function _batteryEntity(deviceId, deviceEntityLookup) {\n        const batteryEntity = findBatteryEntity(this.hass, deviceEntityLookup[deviceId] || []);\n        return batteryEntity ? batteryEntity.entity_id : undefined;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_batteryChargingEntity\",\n      value: function _batteryChargingEntity(deviceId, deviceEntityLookup) {\n        const batteryChargingEntity = findBatteryChargingEntity(this.hass, deviceEntityLookup[deviceId] || []);\n        return batteryChargingEntity ? batteryChargingEntity.entity_id : undefined;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleRowClicked\",\n      value: function _handleRowClicked(ev) {\n        const deviceId = ev.detail.id;\n        this._ignoreLocationChange = true;\n        navigate(`/config/devices/device/${deviceId}`);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_showDisabledChanged\",\n      value: function _showDisabledChanged(ev) {\n        if (ev.detail.source !== \"property\") {\n          return;\n        }\n        this._showDisabled = ev.detail.selected;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleSearchChange\",\n      value: function _handleSearchChange(ev) {\n        this._filter = ev.detail.value;\n        history.replaceState({\n          filter: this._filter\n        }, \"\");\n      }\n    }, {\n      kind: \"method\",\n      key: \"_clearFilter\",\n      value: function _clearFilter() {\n        if (this._activeFilters(this.entries, this._searchParms, this.hass.localize)) {\n          navigate(window.location.pathname, {\n            replace: true\n          });\n        }\n        this._showDisabled = true;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_addDevice\",\n      value: function _addDevice() {\n        const {\n          filteredConfigEntry,\n          filteredDomains\n        } = this._devicesAndFilterDomains(this.hass.devices, this.entries, this.entities, this.hass.areas, this.manifests, this._searchParms, this._showDisabled, this.hass.localize);\n        if (filteredDomains.size === 1 && PROTOCOL_INTEGRATIONS.includes([...filteredDomains][0])) {\n          protocolIntegrationPicked(this, this.hass, [...filteredDomains][0], {\n            config_entry: filteredConfigEntry === null || filteredConfigEntry === void 0 ? void 0 : filteredConfigEntry.entry_id\n          });\n          return;\n        }\n        showAddIntegrationDialog(this, {\n          domain: this._searchParms.get(\"domain\") || undefined\n        });\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [css`\n        ha-button-menu {\n          margin-left: 8px;\n          margin-inline-start: 8px;\n          margin-inline-end: initial;\n        }\n        .clear {\n          color: var(--primary-color);\n          padding-left: 8px;\n          padding-inline-start: 8px;\n          text-transform: uppercase;\n          direction: var(--direction);\n        }\n      `, haStyle];\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["consume","mdiCancel","mdiFilterVariant","mdiPlus","LitElement","css","html","nothing","customElement","property","state","memoizeOne","computeStateDomain","PROTOCOL_INTEGRATIONS","protocolIntegrationPicked","navigate","sortConfigEntries","fullEntitiesContext","computeDeviceName","findBatteryChargingEntity","findBatteryEntity","domainToName","haStyle","brandsUrl","configSections","showAddIntegrationDialog","HaConfigDeviceDashboard","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","type","Boolean","context","subscribe","URLSearchParams","window","location","search","_history$state","history","filter","connectedCallback","_get","_getPrototypeOf","prototype","call","addEventListener","_locationChanged","_popState","disconnectedCallback","removeEventListener","_ignoreLocationChange","substring","_searchParms","toString","entries","filters","localize","filterTexts","forEach","configEntry","find","entry","entry_id","integrationName","domain","push","hass","title","length","undefined","devices","entities","areas","manifests","showDisabled","outputDevices","Object","values","startLength","deviceEntityLookup","entity","device_id","entryLookup","manifestLookup","manifest","filterConfigEntry","filteredDomains","Set","device","config_entries","includes","add","entryIds","map","some","entryId","disabled_by","formattedOutputDevices","_this$hass$states","deviceEntries","entId","name","id","model","manufacturer","area","area_id","integration","join","domains","battery_entity","_batteryEntity","_batteryChargingEntity","battery_level","states","_numHiddenDevices","devicesOutput","filteredConfigEntry","narrow","columns","icon","template","_this$hass$themes","darkOptimized","themes","darkMode","main","sortable","filterable","direction","grows","hidden","width","maxWidth","valueColumn","batteryEntityPair","battery","batteryDomain","batteryCharging","isNaN","formatEntityState","label","willUpdate","changedProps","has","get","_showDisabled","render","_devicesAndFilterDomains","activeFilters","_activeFilters","route","number","_columns","_filter","_clearFilter","_handleSearchChange","_handleRowClicked","_addDevice","_showDisabledChanged","deviceId","batteryEntity","entity_id","batteryChargingEntity","ev","detail","source","selected","replaceState","pathname","replace","size","config_entry","static","styles"],"sources":["/Users/sercanardil/Desktop/frontend/src/panels/config/devices/ha-config-devices-dashboard.ts"],"sourcesContent":["import { consume } from \"@lit-labs/context\";\nimport \"@lrnwebcomponents/simple-tooltip/simple-tooltip\";\nimport type { RequestSelectedDetail } from \"@material/mwc-list/mwc-list-item\";\nimport { mdiCancel, mdiFilterVariant, mdiPlus } from \"@mdi/js\";\nimport {\n  CSSResultGroup,\n  LitElement,\n  TemplateResult,\n  css,\n  html,\n  nothing,\n} from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { HASSDomEvent } from \"../../../common/dom/fire_event\";\nimport { computeStateDomain } from \"../../../common/entity/compute_state_domain\";\nimport {\n  PROTOCOL_INTEGRATIONS,\n  protocolIntegrationPicked,\n} from \"../../../common/integrations/protocolIntegrationPicked\";\nimport { navigate } from \"../../../common/navigate\";\nimport { LocalizeFunc } from \"../../../common/translations/localize\";\nimport {\n  DataTableColumnContainer,\n  RowClickedEvent,\n} from \"../../../components/data-table/ha-data-table\";\nimport \"../../../components/entity/ha-battery-icon\";\nimport \"../../../components/ha-button-menu\";\nimport \"../../../components/ha-check-list-item\";\nimport \"../../../components/ha-fab\";\nimport \"../../../components/ha-icon-button\";\nimport { ConfigEntry, sortConfigEntries } from \"../../../data/config_entries\";\nimport { fullEntitiesContext } from \"../../../data/context\";\nimport {\n  DeviceEntityLookup,\n  DeviceRegistryEntry,\n  computeDeviceName,\n} from \"../../../data/device_registry\";\nimport {\n  EntityRegistryEntry,\n  findBatteryChargingEntity,\n  findBatteryEntity,\n} from \"../../../data/entity_registry\";\nimport { IntegrationManifest, domainToName } from \"../../../data/integration\";\nimport \"../../../layouts/hass-tabs-subpage-data-table\";\nimport { haStyle } from \"../../../resources/styles\";\nimport { HomeAssistant, Route } from \"../../../types\";\nimport { brandsUrl } from \"../../../util/brands-url\";\nimport { configSections } from \"../ha-panel-config\";\nimport \"../integrations/ha-integration-overflow-menu\";\nimport { showAddIntegrationDialog } from \"../integrations/show-add-integration-dialog\";\n\ninterface DeviceRowData extends DeviceRegistryEntry {\n  device?: DeviceRowData;\n  area?: string;\n  integration?: string;\n  battery_entity?: [string | undefined, string | undefined];\n}\n\n@customElement(\"ha-config-devices-dashboard\")\nexport class HaConfigDeviceDashboard extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ type: Boolean }) public narrow = false;\n\n  @property({ type: Boolean }) public isWide = false;\n\n  @property({ attribute: false }) public entries!: ConfigEntry[];\n\n  @state()\n  @consume({ context: fullEntitiesContext, subscribe: true })\n  entities!: EntityRegistryEntry[];\n\n  @property({ attribute: false }) public manifests!: IntegrationManifest[];\n\n  @property({ attribute: false }) public route!: Route;\n\n  @state() private _searchParms = new URLSearchParams(window.location.search);\n\n  @state() private _showDisabled = false;\n\n  @state() private _filter: string = history.state?.filter || \"\";\n\n  @state() private _numHiddenDevices = 0;\n\n  private _ignoreLocationChange = false;\n\n  public connectedCallback() {\n    super.connectedCallback();\n    window.addEventListener(\"location-changed\", this._locationChanged);\n    window.addEventListener(\"popstate\", this._popState);\n  }\n\n  disconnectedCallback(): void {\n    super.disconnectedCallback();\n    window.removeEventListener(\"location-changed\", this._locationChanged);\n    window.removeEventListener(\"popstate\", this._popState);\n  }\n\n  private _locationChanged = () => {\n    if (this._ignoreLocationChange) {\n      this._ignoreLocationChange = false;\n      return;\n    }\n    if (window.location.search.substring(1) !== this._searchParms.toString()) {\n      this._searchParms = new URLSearchParams(window.location.search);\n    }\n  };\n\n  private _popState = () => {\n    if (window.location.search.substring(1) !== this._searchParms.toString()) {\n      this._searchParms = new URLSearchParams(window.location.search);\n    }\n  };\n\n  private _activeFilters = memoizeOne(\n    (\n      entries: ConfigEntry[],\n      filters: URLSearchParams,\n      localize: LocalizeFunc\n    ): string[] | undefined => {\n      const filterTexts: string[] = [];\n      filters.forEach((value, key) => {\n        switch (key) {\n          case \"config_entry\": {\n            const configEntry = entries.find(\n              (entry) => entry.entry_id === value\n            );\n            if (!configEntry) {\n              break;\n            }\n            const integrationName = domainToName(localize, configEntry.domain);\n            filterTexts.push(\n              `${this.hass.localize(\n                \"ui.panel.config.integrations.integration\"\n              )} \"${integrationName}${\n                integrationName !== configEntry.title\n                  ? `: ${configEntry.title}`\n                  : \"\"\n              }\"`\n            );\n            break;\n          }\n          case \"domain\": {\n            filterTexts.push(\n              `${this.hass.localize(\n                \"ui.panel.config.integrations.integration\"\n              )} \"${domainToName(localize, value)}\"`\n            );\n          }\n        }\n      });\n      return filterTexts.length ? filterTexts : undefined;\n    }\n  );\n\n  private _devicesAndFilterDomains = memoizeOne(\n    (\n      devices: HomeAssistant[\"devices\"],\n      entries: ConfigEntry[],\n      entities: EntityRegistryEntry[],\n      areas: HomeAssistant[\"areas\"],\n      manifests: IntegrationManifest[],\n      filters: URLSearchParams,\n      showDisabled: boolean,\n      localize: LocalizeFunc\n    ) => {\n      // Some older installations might have devices pointing at invalid entryIDs\n      // So we guard for that.\n      let outputDevices: DeviceRowData[] = Object.values(devices);\n\n      // If nothing gets filtered, this is our correct count of devices\n      let startLength = outputDevices.length;\n\n      const deviceEntityLookup: DeviceEntityLookup = {};\n      for (const entity of entities) {\n        if (!entity.device_id) {\n          continue;\n        }\n        if (!(entity.device_id in deviceEntityLookup)) {\n          deviceEntityLookup[entity.device_id] = [];\n        }\n        deviceEntityLookup[entity.device_id].push(entity);\n      }\n\n      const entryLookup: { [entryId: string]: ConfigEntry } = {};\n      for (const entry of entries) {\n        entryLookup[entry.entry_id] = entry;\n      }\n\n      const manifestLookup: { [domain: string]: IntegrationManifest } = {};\n      for (const manifest of manifests) {\n        manifestLookup[manifest.domain] = manifest;\n      }\n\n      let filterConfigEntry: ConfigEntry | undefined;\n\n      const filteredDomains = new Set<string>();\n\n      filters.forEach((value, key) => {\n        if (key === \"config_entry\") {\n          outputDevices = outputDevices.filter((device) =>\n            device.config_entries.includes(value)\n          );\n          startLength = outputDevices.length;\n          filterConfigEntry = entries.find((entry) => entry.entry_id === value);\n          if (filterConfigEntry) {\n            filteredDomains.add(filterConfigEntry.domain);\n          }\n        }\n        if (key === \"domain\") {\n          const entryIds = entries\n            .filter((entry) => entry.domain === value)\n            .map((entry) => entry.entry_id);\n          outputDevices = outputDevices.filter((device) =>\n            device.config_entries.some((entryId) => entryIds.includes(entryId))\n          );\n          startLength = outputDevices.length;\n          filteredDomains.add(value);\n        }\n      });\n\n      if (!showDisabled) {\n        outputDevices = outputDevices.filter((device) => !device.disabled_by);\n      }\n\n      const formattedOutputDevices = outputDevices.map((device) => {\n        const deviceEntries = sortConfigEntries(\n          device.config_entries\n            .filter((entId) => entId in entryLookup)\n            .map((entId) => entryLookup[entId]),\n          manifestLookup\n        );\n        return {\n          ...device,\n          name: computeDeviceName(\n            device,\n            this.hass,\n            deviceEntityLookup[device.id]\n          ),\n          model:\n            device.model ||\n            `<${localize(\"ui.panel.config.devices.data_table.unknown\")}>`,\n          manufacturer:\n            device.manufacturer ||\n            `<${localize(\"ui.panel.config.devices.data_table.unknown\")}>`,\n          area:\n            device.area_id && areas[device.area_id]\n              ? areas[device.area_id].name\n              : \"—\",\n          integration: deviceEntries.length\n            ? deviceEntries\n                .map(\n                  (entry) =>\n                    localize(`component.${entry.domain}.title`) || entry.domain\n                )\n                .join(\", \")\n            : this.hass.localize(\n                \"ui.panel.config.devices.data_table.no_integration\"\n              ),\n          domains: deviceEntries.map((entry) => entry.domain),\n          battery_entity: [\n            this._batteryEntity(device.id, deviceEntityLookup),\n            this._batteryChargingEntity(device.id, deviceEntityLookup),\n          ],\n          battery_level:\n            this.hass.states[\n              this._batteryEntity(device.id, deviceEntityLookup) || \"\"\n            ]?.state,\n        };\n      });\n\n      this._numHiddenDevices = startLength - formattedOutputDevices.length;\n      return {\n        devicesOutput: formattedOutputDevices,\n        filteredConfigEntry: filterConfigEntry,\n        filteredDomains,\n      };\n    }\n  );\n\n  private _columns = memoizeOne(\n    (localize: LocalizeFunc, narrow: boolean, showDisabled: boolean) => {\n      type DeviceItem = ReturnType<\n        typeof this._devicesAndFilterDomains\n      >[\"devicesOutput\"][number];\n\n      const columns: DataTableColumnContainer<DeviceItem> = {\n        icon: {\n          title: \"\",\n          type: \"icon\",\n          template: (device) =>\n            device.domains.length\n              ? html`<img\n                  alt=\"\"\n                  crossorigin=\"anonymous\"\n                  referrerpolicy=\"no-referrer\"\n                  src=${brandsUrl({\n                    domain: device.domains[0],\n                    type: \"icon\",\n                    darkOptimized: this.hass.themes?.darkMode,\n                  })}\n                />`\n              : \"\",\n        },\n      };\n\n      if (narrow) {\n        columns.name = {\n          title: localize(\"ui.panel.config.devices.data_table.device\"),\n          main: true,\n          sortable: true,\n          filterable: true,\n          direction: \"asc\",\n          grows: true,\n          template: (device) => html`\n            ${device.name}\n            <div class=\"secondary\">${device.area} | ${device.integration}</div>\n          `,\n        };\n      } else {\n        columns.name = {\n          title: localize(\"ui.panel.config.devices.data_table.device\"),\n          main: true,\n          sortable: true,\n          filterable: true,\n          grows: true,\n          direction: \"asc\",\n        };\n      }\n\n      columns.manufacturer = {\n        title: localize(\"ui.panel.config.devices.data_table.manufacturer\"),\n        sortable: true,\n        hidden: narrow,\n        filterable: true,\n        width: \"15%\",\n      };\n      columns.model = {\n        title: localize(\"ui.panel.config.devices.data_table.model\"),\n        sortable: true,\n        hidden: narrow,\n        filterable: true,\n        width: \"15%\",\n      };\n      columns.area = {\n        title: localize(\"ui.panel.config.devices.data_table.area\"),\n        sortable: true,\n        hidden: narrow,\n        filterable: true,\n        width: \"15%\",\n      };\n      columns.integration = {\n        title: localize(\"ui.panel.config.devices.data_table.integration\"),\n        sortable: true,\n        hidden: narrow,\n        filterable: true,\n        width: \"15%\",\n      };\n      columns.battery_entity = {\n        title: localize(\"ui.panel.config.devices.data_table.battery\"),\n        sortable: true,\n        filterable: true,\n        type: \"numeric\",\n        width: narrow ? \"105px\" : \"15%\",\n        maxWidth: \"105px\",\n        valueColumn: \"battery_level\",\n        template: (device) => {\n          const batteryEntityPair = device.battery_entity;\n          const battery =\n            batteryEntityPair && batteryEntityPair[0]\n              ? this.hass.states[batteryEntityPair[0]]\n              : undefined;\n          const batteryDomain = battery\n            ? computeStateDomain(battery)\n            : undefined;\n          const batteryCharging =\n            batteryEntityPair && batteryEntityPair[1]\n              ? this.hass.states[batteryEntityPair[1]]\n              : undefined;\n\n          return battery &&\n            (batteryDomain === \"binary_sensor\" || !isNaN(battery.state as any))\n            ? html`\n                ${batteryDomain === \"sensor\"\n                  ? this.hass.formatEntityState(battery)\n                  : nothing}\n                <ha-battery-icon\n                  .hass=${this.hass}\n                  .batteryStateObj=${battery}\n                  .batteryChargingStateObj=${batteryCharging}\n                ></ha-battery-icon>\n              `\n            : html`—`;\n        },\n      };\n      if (showDisabled) {\n        columns.disabled_by = {\n          title: \"\",\n          label: localize(\"ui.panel.config.devices.data_table.disabled_by\"),\n          type: \"icon\",\n          template: (device) =>\n            device.disabled_by\n              ? html`<div\n                  tabindex=\"0\"\n                  style=\"display:inline-block; position: relative;\"\n                >\n                  <ha-svg-icon .path=${mdiCancel}></ha-svg-icon>\n                  <simple-tooltip animation-delay=\"0\" position=\"left\">\n                    ${this.hass.localize(\"ui.panel.config.devices.disabled\")}\n                  </simple-tooltip>\n                </div>`\n              : \"—\",\n        };\n      }\n      return columns;\n    }\n  );\n\n  public willUpdate(changedProps) {\n    if (changedProps.has(\"_searchParms\")) {\n      if (\n        this._searchParms.get(\"config_entry\") ||\n        this._searchParms.get(\"domain\")\n      ) {\n        // If we are requested to show the devices for a given config entry / domain,\n        // also show the disabled ones by default.\n        this._showDisabled = true;\n      }\n    }\n  }\n\n  protected render(): TemplateResult {\n    const { devicesOutput } = this._devicesAndFilterDomains(\n      this.hass.devices,\n      this.entries,\n      this.entities,\n      this.hass.areas,\n      this.manifests,\n      this._searchParms,\n      this._showDisabled,\n      this.hass.localize\n    );\n    const activeFilters = this._activeFilters(\n      this.entries,\n      this._searchParms,\n      this.hass.localize\n    );\n\n    return html`\n      <hass-tabs-subpage-data-table\n        .hass=${this.hass}\n        .narrow=${this.narrow}\n        .backPath=${this._searchParms.has(\"historyBack\")\n          ? undefined\n          : \"/config\"}\n        .tabs=${configSections.devices}\n        .route=${this.route}\n        .activeFilters=${activeFilters}\n        .numHidden=${this._numHiddenDevices}\n        .searchLabel=${this.hass.localize(\n          \"ui.panel.config.devices.picker.search\"\n        )}\n        .hiddenLabel=${this.hass.localize(\n          \"ui.panel.config.devices.picker.filter.hidden_devices\",\n          { number: this._numHiddenDevices }\n        )}\n        .columns=${this._columns(\n          this.hass.localize,\n          this.narrow,\n          this._showDisabled\n        )}\n        .data=${devicesOutput}\n        .filter=${this._filter}\n        @clear-filter=${this._clearFilter}\n        @search-changed=${this._handleSearchChange}\n        @row-click=${this._handleRowClicked}\n        clickable\n        hasFab\n      >\n        <ha-integration-overflow-menu\n          .hass=${this.hass}\n          slot=\"toolbar-icon\"\n        ></ha-integration-overflow-menu>\n        <ha-fab\n          slot=\"fab\"\n          .label=${this.hass.localize(\"ui.panel.config.devices.add_device\")}\n          extended\n          @click=${this._addDevice}\n        >\n          <ha-svg-icon slot=\"icon\" .path=${mdiPlus}></ha-svg-icon>\n        </ha-fab>\n        <ha-button-menu slot=\"filter-menu\" multi>\n          <ha-icon-button\n            slot=\"trigger\"\n            .label=${this.hass!.localize(\n              \"ui.panel.config.devices.picker.filter.filter\"\n            )}\n            .path=${mdiFilterVariant}\n          ></ha-icon-button>\n          ${this.narrow && activeFilters?.length\n            ? html`<mwc-list-item @click=${this._clearFilter}\n                >${this.hass.localize(\"ui.components.data-table.filtering_by\")}\n                ${activeFilters.join(\", \")}\n                <span class=\"clear\"\n                  >${this.hass.localize(\"ui.common.clear\")}</span\n                ></mwc-list-item\n              >`\n            : \"\"}\n          <ha-check-list-item\n            left\n            @request-selected=${this._showDisabledChanged}\n            .selected=${this._showDisabled}\n          >\n            ${this.hass!.localize(\n              \"ui.panel.config.devices.picker.filter.show_disabled\"\n            )}\n          </ha-check-list-item>\n        </ha-button-menu>\n      </hass-tabs-subpage-data-table>\n    `;\n  }\n\n  private _batteryEntity(\n    deviceId: string,\n    deviceEntityLookup: DeviceEntityLookup\n  ): string | undefined {\n    const batteryEntity = findBatteryEntity(\n      this.hass,\n      deviceEntityLookup[deviceId] || []\n    );\n    return batteryEntity ? batteryEntity.entity_id : undefined;\n  }\n\n  private _batteryChargingEntity(\n    deviceId: string,\n    deviceEntityLookup: DeviceEntityLookup\n  ): string | undefined {\n    const batteryChargingEntity = findBatteryChargingEntity(\n      this.hass,\n      deviceEntityLookup[deviceId] || []\n    );\n    return batteryChargingEntity ? batteryChargingEntity.entity_id : undefined;\n  }\n\n  private _handleRowClicked(ev: HASSDomEvent<RowClickedEvent>) {\n    const deviceId = ev.detail.id;\n    this._ignoreLocationChange = true;\n    navigate(`/config/devices/device/${deviceId}`);\n  }\n\n  private _showDisabledChanged(ev: CustomEvent<RequestSelectedDetail>) {\n    if (ev.detail.source !== \"property\") {\n      return;\n    }\n    this._showDisabled = ev.detail.selected;\n  }\n\n  private _handleSearchChange(ev: CustomEvent) {\n    this._filter = ev.detail.value;\n    history.replaceState({ filter: this._filter }, \"\");\n  }\n\n  private _clearFilter() {\n    if (\n      this._activeFilters(this.entries, this._searchParms, this.hass.localize)\n    ) {\n      navigate(window.location.pathname, { replace: true });\n    }\n    this._showDisabled = true;\n  }\n\n  private _addDevice() {\n    const { filteredConfigEntry, filteredDomains } =\n      this._devicesAndFilterDomains(\n        this.hass.devices,\n        this.entries,\n        this.entities,\n        this.hass.areas,\n        this.manifests,\n        this._searchParms,\n        this._showDisabled,\n        this.hass.localize\n      );\n    if (\n      filteredDomains.size === 1 &&\n      (PROTOCOL_INTEGRATIONS as ReadonlyArray<string>).includes(\n        [...filteredDomains][0]\n      )\n    ) {\n      protocolIntegrationPicked(this, this.hass, [...filteredDomains][0], {\n        config_entry: filteredConfigEntry?.entry_id,\n      });\n      return;\n    }\n    showAddIntegrationDialog(this, {\n      domain: this._searchParms.get(\"domain\") || undefined,\n    });\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      css`\n        ha-button-menu {\n          margin-left: 8px;\n          margin-inline-start: 8px;\n          margin-inline-end: initial;\n        }\n        .clear {\n          color: var(--primary-color);\n          padding-left: 8px;\n          padding-inline-start: 8px;\n          text-transform: uppercase;\n          direction: var(--direction);\n        }\n      `,\n      haStyle,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-config-devices-dashboard\": HaConfigDeviceDashboard;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}