{"ast":null,"code":"/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\n// Make TypeScript not remove the import.\nimport '@material/mwc-tab-indicator/mwc-tab-indicator.js';\nimport '@material/mwc-ripple/mwc-ripple.js';\nimport { addHasRemoveClass, BaseElement } from '@material/mwc-base/base-element.js';\nimport { observer } from '@material/mwc-base/observer.js';\nimport { RippleHandlers } from '@material/mwc-ripple/ripple-handlers.js';\nimport MDCTabFoundation from '@material/tab/foundation.js';\nimport { html } from 'lit';\nimport { eventOptions, property, query, queryAsync, state } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\n// used for generating unique id for each tab\nlet tabIdCounter = 0;\nexport class TabBase extends BaseElement {\n  constructor() {\n    super(...arguments);\n    this.mdcFoundationClass = MDCTabFoundation;\n    this.label = '';\n    this.icon = '';\n    this.hasImageIcon = false;\n    this.isFadingIndicator = false;\n    this.minWidth = false;\n    this.isMinWidthIndicator = false;\n    this.indicatorIcon = '';\n    this.stacked = false;\n    this.focusOnActivate = true;\n    this._active = false;\n    this.initFocus = false;\n    this.shouldRenderRipple = false;\n    this.useStateLayerCustomProperties = false;\n    this.rippleElement = null;\n    this.rippleHandlers = new RippleHandlers(() => {\n      this.shouldRenderRipple = true;\n      this.ripple.then(v => this.rippleElement = v);\n      return this.ripple;\n    });\n  }\n  get active() {\n    return this._active;\n  }\n  connectedCallback() {\n    this.dir = document.dir;\n    super.connectedCallback();\n  }\n  firstUpdated() {\n    super.firstUpdated();\n    // create an unique id\n    this.id = this.id || `mdc-tab-${++tabIdCounter}`;\n  }\n  render() {\n    const classes = {\n      'mdc-tab--min-width': this.minWidth,\n      'mdc-tab--stacked': this.stacked\n    };\n    let iconTemplate = html``;\n    if (this.hasImageIcon || this.icon) {\n      // NOTE: MUST be on same line as spaces will cause vert alignment issues\n      // in IE\n      iconTemplate = html`\n        <span class=\"mdc-tab__icon material-icons\"><slot name=\"icon\">${this.icon}</slot></span>`;\n    }\n    let labelTemplate = html``;\n    if (this.label) {\n      labelTemplate = html`\n        <span class=\"mdc-tab__text-label\">${this.label}</span>`;\n    }\n    return html`\n      <button\n        @click=\"${this.handleClick}\"\n        class=\"mdc-tab ${classMap(classes)}\"\n        role=\"tab\"\n        aria-selected=\"false\"\n        tabindex=\"-1\"\n        @focus=\"${this.focus}\"\n        @blur=\"${this.handleBlur}\"\n        @mousedown=\"${this.handleRippleMouseDown}\"\n        @mouseenter=\"${this.handleRippleMouseEnter}\"\n        @mouseleave=\"${this.handleRippleMouseLeave}\"\n        @touchstart=\"${this.handleRippleTouchStart}\"\n        @touchend=\"${this.handleRippleDeactivate}\"\n        @touchcancel=\"${this.handleRippleDeactivate}\">\n        <span class=\"mdc-tab__content\">\n          ${iconTemplate}\n          ${labelTemplate}\n          ${this.isMinWidthIndicator ? this.renderIndicator() : ''}\n        </span>\n        ${this.isMinWidthIndicator ? '' : this.renderIndicator()}\n        ${this.renderRipple()}\n      </button>`;\n  }\n  renderIndicator() {\n    return html`<mwc-tab-indicator\n        .icon=\"${this.indicatorIcon}\"\n        .fade=\"${this.isFadingIndicator}\"></mwc-tab-indicator>`;\n  }\n  // TODO(dfreedm): Make this use selected as a param after Polymer/internal#739\n  /** @soyCompatible */\n  renderRipple() {\n    return this.shouldRenderRipple ? html`<mwc-ripple primary\n        .internalUseStateLayerCustomProperties=\"${this.useStateLayerCustomProperties}\"></mwc-ripple>` : '';\n  }\n  createAdapter() {\n    return Object.assign(Object.assign({}, addHasRemoveClass(this.mdcRoot)), {\n      setAttr: (attr, value) => this.mdcRoot.setAttribute(attr, value),\n      activateIndicator: async previousIndicatorClientRect => {\n        await this.tabIndicator.updateComplete;\n        this.tabIndicator.activate(previousIndicatorClientRect);\n      },\n      deactivateIndicator: async () => {\n        await this.tabIndicator.updateComplete;\n        this.tabIndicator.deactivate();\n      },\n      notifyInteracted: () => this.dispatchEvent(new CustomEvent(MDCTabFoundation.strings.INTERACTED_EVENT, {\n        detail: {\n          tabId: this.id\n        },\n        bubbles: true,\n        composed: true,\n        cancelable: true\n      })),\n      getOffsetLeft: () => this.offsetLeft,\n      getOffsetWidth: () => this.mdcRoot.offsetWidth,\n      getContentOffsetLeft: () => this._contentElement.offsetLeft,\n      getContentOffsetWidth: () => this._contentElement.offsetWidth,\n      focus: () => {\n        if (this.initFocus) {\n          this.initFocus = false;\n        } else {\n          this.mdcRoot.focus();\n        }\n      }\n    });\n  }\n  activate(clientRect) {\n    // happens only on initialization. We don't want to focus to prevent scroll\n    if (!clientRect) {\n      this.initFocus = true;\n    }\n    if (this.mdcFoundation) {\n      this.mdcFoundation.activate(clientRect);\n      this.setActive(this.mdcFoundation.isActive());\n    } else {\n      // happens if this is called by tab-bar on initialization, but tab has not\n      // finished rendering.\n      this.updateComplete.then(() => {\n        this.mdcFoundation.activate(clientRect);\n        this.setActive(this.mdcFoundation.isActive());\n      });\n    }\n  }\n  deactivate() {\n    this.mdcFoundation.deactivate();\n    this.setActive(this.mdcFoundation.isActive());\n  }\n  setActive(newValue) {\n    const oldValue = this.active;\n    if (oldValue !== newValue) {\n      this._active = newValue;\n      this.requestUpdate('active', oldValue);\n    }\n  }\n  computeDimensions() {\n    return this.mdcFoundation.computeDimensions();\n  }\n  computeIndicatorClientRect() {\n    return this.tabIndicator.computeContentClientRect();\n  }\n  // NOTE: needed only for ShadyDOM where delegatesFocus is not implemented\n  focus() {\n    this.mdcRoot.focus();\n    this.handleFocus();\n  }\n  handleClick() {\n    this.handleFocus();\n    this.mdcFoundation.handleClick();\n  }\n  handleFocus() {\n    this.handleRippleFocus();\n  }\n  handleBlur() {\n    this.handleRippleBlur();\n  }\n  handleRippleMouseDown(event) {\n    const onUp = () => {\n      window.removeEventListener('mouseup', onUp);\n      this.handleRippleDeactivate();\n    };\n    window.addEventListener('mouseup', onUp);\n    this.rippleHandlers.startPress(event);\n  }\n  handleRippleTouchStart(event) {\n    this.rippleHandlers.startPress(event);\n  }\n  handleRippleDeactivate() {\n    this.rippleHandlers.endPress();\n  }\n  handleRippleMouseEnter() {\n    this.rippleHandlers.startHover();\n  }\n  handleRippleMouseLeave() {\n    this.rippleHandlers.endHover();\n  }\n  handleRippleFocus() {\n    this.rippleHandlers.startFocus();\n  }\n  handleRippleBlur() {\n    this.rippleHandlers.endFocus();\n  }\n  get isRippleActive() {\n    var _a;\n    return ((_a = this.rippleElement) === null || _a === void 0 ? void 0 : _a.isActive) || false;\n  }\n}\nTabBase.shadowRootOptions = {\n  mode: 'open',\n  delegatesFocus: true\n};\n__decorate([query('.mdc-tab')], TabBase.prototype, \"mdcRoot\", void 0);\n__decorate([query('mwc-tab-indicator')], TabBase.prototype, \"tabIndicator\", void 0);\n__decorate([property()], TabBase.prototype, \"label\", void 0);\n__decorate([property()], TabBase.prototype, \"icon\", void 0);\n__decorate([property({\n  type: Boolean\n})], TabBase.prototype, \"hasImageIcon\", void 0);\n__decorate([property({\n  type: Boolean\n})], TabBase.prototype, \"isFadingIndicator\", void 0);\n__decorate([property({\n  type: Boolean\n})], TabBase.prototype, \"minWidth\", void 0);\n__decorate([property({\n  type: Boolean\n})], TabBase.prototype, \"isMinWidthIndicator\", void 0);\n__decorate([property({\n  type: Boolean,\n  reflect: true,\n  attribute: 'active'\n})], TabBase.prototype, \"active\", null);\n__decorate([property()], TabBase.prototype, \"indicatorIcon\", void 0);\n__decorate([property({\n  type: Boolean\n})], TabBase.prototype, \"stacked\", void 0);\n__decorate([observer(async function (value) {\n  await this.updateComplete;\n  this.mdcFoundation.setFocusOnActivate(value);\n}), property({\n  type: Boolean\n})], TabBase.prototype, \"focusOnActivate\", void 0);\n__decorate([query('.mdc-tab__content')], TabBase.prototype, \"_contentElement\", void 0);\n__decorate([state()], TabBase.prototype, \"shouldRenderRipple\", void 0);\n__decorate([state()], TabBase.prototype, \"useStateLayerCustomProperties\", void 0);\n__decorate([queryAsync('mwc-ripple')], TabBase.prototype, \"ripple\", void 0);\n__decorate([eventOptions({\n  passive: true\n})], TabBase.prototype, \"handleRippleTouchStart\", null);","map":{"version":3,"names":["addHasRemoveClass","BaseElement","observer","RippleHandlers","MDCTabFoundation","html","eventOptions","property","query","queryAsync","state","classMap","tabIdCounter","TabBase","constructor","mdcFoundationClass","label","icon","hasImageIcon","isFadingIndicator","minWidth","isMinWidthIndicator","indicatorIcon","stacked","focusOnActivate","_active","initFocus","shouldRenderRipple","useStateLayerCustomProperties","rippleElement","rippleHandlers","ripple","then","v","active","connectedCallback","dir","document","firstUpdated","id","render","classes","iconTemplate","labelTemplate","handleClick","focus","handleBlur","handleRippleMouseDown","handleRippleMouseEnter","handleRippleMouseLeave","handleRippleTouchStart","handleRippleDeactivate","renderIndicator","renderRipple","createAdapter","Object","assign","mdcRoot","setAttr","attr","value","setAttribute","activateIndicator","previousIndicatorClientRect","tabIndicator","updateComplete","activate","deactivateIndicator","deactivate","notifyInteracted","dispatchEvent","CustomEvent","strings","INTERACTED_EVENT","detail","tabId","bubbles","composed","cancelable","getOffsetLeft","offsetLeft","getOffsetWidth","offsetWidth","getContentOffsetLeft","_contentElement","getContentOffsetWidth","clientRect","mdcFoundation","setActive","isActive","newValue","oldValue","requestUpdate","computeDimensions","computeIndicatorClientRect","computeContentClientRect","handleFocus","handleRippleFocus","handleRippleBlur","event","onUp","window","removeEventListener","addEventListener","startPress","endPress","startHover","endHover","startFocus","endFocus","isRippleActive","_a","shadowRootOptions","mode","delegatesFocus","__decorate","type","Boolean","reflect","attribute","setFocusOnActivate","passive"],"sources":["mwc-tab-base.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\n\n// Make TypeScript not remove the import.\nimport '@material/mwc-tab-indicator/mwc-tab-indicator.js';\nimport '@material/mwc-ripple/mwc-ripple.js';\n\nimport {addHasRemoveClass, BaseElement} from '@material/mwc-base/base-element.js';\nimport {observer} from '@material/mwc-base/observer.js';\nimport {Ripple} from '@material/mwc-ripple/mwc-ripple.js';\nimport {RippleHandlers} from '@material/mwc-ripple/ripple-handlers.js';\nimport {TabIndicator} from '@material/mwc-tab-indicator/mwc-tab-indicator.js';\nimport {MDCTabAdapter} from '@material/tab/adapter.js';\nimport MDCTabFoundation from '@material/tab/foundation.js';\nimport {html} from 'lit';\nimport {eventOptions, property, query, queryAsync, state} from 'lit/decorators.js';\nimport {classMap} from 'lit/directives/class-map.js';\n\nexport interface TabInteractionEventDetail {\n  tabId: string;\n}\n\n// used for generating unique id for each tab\nlet tabIdCounter = 0;\n\nexport class TabBase extends BaseElement {\n  static override shadowRootOptions:\n      ShadowRootInit = {mode: 'open', delegatesFocus: true};\n\n  protected mdcFoundation!: MDCTabFoundation;\n\n  protected readonly mdcFoundationClass = MDCTabFoundation;\n\n  @query('.mdc-tab') protected mdcRoot!: HTMLElement;\n\n  @query('mwc-tab-indicator') protected tabIndicator!: TabIndicator;\n\n  @property() label = '';\n\n  @property() icon = '';\n\n  @property({type: Boolean}) hasImageIcon = false;\n\n  @property({type: Boolean}) isFadingIndicator = false;\n\n  @property({type: Boolean}) minWidth = false;\n\n  @property({type: Boolean}) isMinWidthIndicator = false;\n\n  @property({type: Boolean, reflect: true, attribute: 'active'})\n  get active(): boolean {\n    return this._active;\n  }\n\n  @property() indicatorIcon = '';\n\n  @property({type: Boolean}) stacked = false;\n\n  @observer(async function(this: TabBase, value: boolean) {\n    await this.updateComplete;\n    this.mdcFoundation.setFocusOnActivate(value);\n  })\n  @property({type: Boolean})\n  focusOnActivate = true;\n\n  protected _active = false;\n\n  protected initFocus = false;\n\n  /**\n   * Other properties\n   * indicatorContent <slot>\n   * previousIndicatorClientRect (needed?)\n   * onTransitionEnd (needed?)\n   */\n\n  @query('.mdc-tab__content') protected _contentElement!: HTMLElement;\n\n  @state() protected shouldRenderRipple = false;\n\n  @state() protected useStateLayerCustomProperties = false;\n\n  @queryAsync('mwc-ripple') ripple!: Promise<Ripple|null>;\n\n  protected rippleElement: Ripple|null = null;\n\n  override connectedCallback() {\n    this.dir = document.dir;\n    super.connectedCallback();\n  }\n\n  protected override firstUpdated() {\n    super.firstUpdated();\n    // create an unique id\n    this.id = this.id || `mdc-tab-${++tabIdCounter}`;\n  }\n\n  protected override render() {\n    const classes = {\n      'mdc-tab--min-width': this.minWidth,\n      'mdc-tab--stacked': this.stacked,\n    };\n\n    let iconTemplate = html``;\n    if (this.hasImageIcon || this.icon) {\n      // NOTE: MUST be on same line as spaces will cause vert alignment issues\n      // in IE\n      iconTemplate = html`\n        <span class=\"mdc-tab__icon material-icons\"><slot name=\"icon\">${\n          this.icon}</slot></span>`;\n    }\n\n    let labelTemplate = html``;\n    if (this.label) {\n      labelTemplate = html`\n        <span class=\"mdc-tab__text-label\">${this.label}</span>`;\n    }\n\n    return html`\n      <button\n        @click=\"${this.handleClick}\"\n        class=\"mdc-tab ${classMap(classes)}\"\n        role=\"tab\"\n        aria-selected=\"false\"\n        tabindex=\"-1\"\n        @focus=\"${this.focus}\"\n        @blur=\"${this.handleBlur}\"\n        @mousedown=\"${this.handleRippleMouseDown}\"\n        @mouseenter=\"${this.handleRippleMouseEnter}\"\n        @mouseleave=\"${this.handleRippleMouseLeave}\"\n        @touchstart=\"${this.handleRippleTouchStart}\"\n        @touchend=\"${this.handleRippleDeactivate}\"\n        @touchcancel=\"${this.handleRippleDeactivate}\">\n        <span class=\"mdc-tab__content\">\n          ${iconTemplate}\n          ${labelTemplate}\n          ${this.isMinWidthIndicator ? this.renderIndicator() : ''}\n        </span>\n        ${this.isMinWidthIndicator ? '' : this.renderIndicator()}\n        ${this.renderRipple()}\n      </button>`;\n  }\n\n  protected renderIndicator() {\n    return html`<mwc-tab-indicator\n        .icon=\"${this.indicatorIcon}\"\n        .fade=\"${this.isFadingIndicator}\"></mwc-tab-indicator>`;\n  }\n\n  // TODO(dfreedm): Make this use selected as a param after Polymer/internal#739\n  /** @soyCompatible */\n  protected renderRipple() {\n    return this.shouldRenderRipple ?\n        html`<mwc-ripple primary\n        .internalUseStateLayerCustomProperties=\"${\n            this.useStateLayerCustomProperties}\"></mwc-ripple>` :\n        '';\n  }\n\n  protected createAdapter(): MDCTabAdapter {\n    return {\n      ...addHasRemoveClass(this.mdcRoot),\n      setAttr: (attr: string, value: string) =>\n          this.mdcRoot.setAttribute(attr, value),\n      activateIndicator: async (previousIndicatorClientRect: DOMRect) => {\n        await this.tabIndicator.updateComplete;\n        this.tabIndicator.activate(previousIndicatorClientRect);\n      },\n      deactivateIndicator: async () => {\n        await this.tabIndicator.updateComplete;\n        this.tabIndicator.deactivate();\n      },\n      notifyInteracted: () =>\n          this.dispatchEvent(new CustomEvent<TabInteractionEventDetail>(\n              MDCTabFoundation.strings.INTERACTED_EVENT, {\n                detail: {tabId: this.id},\n                bubbles: true,\n                composed: true,\n                cancelable: true,\n              })),\n      getOffsetLeft: () => this.offsetLeft,\n      getOffsetWidth: () => this.mdcRoot.offsetWidth,\n      getContentOffsetLeft: () => this._contentElement.offsetLeft,\n      getContentOffsetWidth: () => this._contentElement.offsetWidth,\n      focus: () => {\n        if (this.initFocus) {\n          this.initFocus = false;\n        } else {\n          this.mdcRoot.focus();\n        }\n      },\n    };\n  }\n\n  activate(clientRect: DOMRect) {\n    // happens only on initialization. We don't want to focus to prevent scroll\n    if (!clientRect) {\n      this.initFocus = true;\n    }\n\n    if (this.mdcFoundation) {\n      this.mdcFoundation.activate(clientRect);\n      this.setActive(this.mdcFoundation.isActive());\n    } else {\n      // happens if this is called by tab-bar on initialization, but tab has not\n      // finished rendering.\n      this.updateComplete.then(() => {\n        this.mdcFoundation.activate(clientRect);\n        this.setActive(this.mdcFoundation.isActive());\n      });\n    }\n  }\n\n  deactivate() {\n    this.mdcFoundation.deactivate();\n    this.setActive(this.mdcFoundation.isActive());\n  }\n\n  protected setActive(newValue: boolean) {\n    const oldValue = this.active;\n\n    if (oldValue !== newValue) {\n      this._active = newValue;\n      this.requestUpdate('active', oldValue);\n    }\n  }\n\n  computeDimensions() {\n    return this.mdcFoundation.computeDimensions();\n  }\n\n  computeIndicatorClientRect() {\n    return this.tabIndicator.computeContentClientRect();\n  }\n\n  // NOTE: needed only for ShadyDOM where delegatesFocus is not implemented\n  override focus() {\n    this.mdcRoot.focus();\n    this.handleFocus();\n  }\n\n  protected rippleHandlers: RippleHandlers = new RippleHandlers(() => {\n    this.shouldRenderRipple = true;\n    this.ripple.then((v) => this.rippleElement = v);\n    return this.ripple;\n  });\n\n  protected handleClick() {\n    this.handleFocus();\n    this.mdcFoundation.handleClick();\n  }\n\n  protected handleFocus() {\n    this.handleRippleFocus();\n  }\n\n  protected handleBlur() {\n    this.handleRippleBlur();\n  }\n\n  protected handleRippleMouseDown(event: Event) {\n    const onUp = () => {\n      window.removeEventListener('mouseup', onUp);\n\n      this.handleRippleDeactivate();\n    };\n\n    window.addEventListener('mouseup', onUp);\n    this.rippleHandlers.startPress(event);\n  }\n\n  @eventOptions({passive: true})\n  protected handleRippleTouchStart(event: Event) {\n    this.rippleHandlers.startPress(event);\n  }\n\n  protected handleRippleDeactivate() {\n    this.rippleHandlers.endPress();\n  }\n\n  protected handleRippleMouseEnter() {\n    this.rippleHandlers.startHover();\n  }\n\n  protected handleRippleMouseLeave() {\n    this.rippleHandlers.endHover();\n  }\n\n  protected handleRippleFocus() {\n    this.rippleHandlers.startFocus();\n  }\n\n  protected handleRippleBlur() {\n    this.rippleHandlers.endFocus();\n  }\n\n  get isRippleActive() {\n    return this.rippleElement?.isActive || false;\n  }\n}\n"],"mappings":"AAAA;;;;;;AAMA;AACA;AAEA;AACA,OAAO,kDAAkD;AACzD,OAAO,oCAAoC;AAE3C,SAAQA,iBAAiB,EAAEC,WAAW,QAAO,oCAAoC;AACjF,SAAQC,QAAQ,QAAO,gCAAgC;AAEvD,SAAQC,cAAc,QAAO,yCAAyC;AAGtE,OAAOC,gBAAgB,MAAM,6BAA6B;AAC1D,SAAQC,IAAI,QAAO,KAAK;AACxB,SAAQC,YAAY,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,UAAU,EAAEC,KAAK,QAAO,mBAAmB;AAClF,SAAQC,QAAQ,QAAO,6BAA6B;AAMpD;AACA,IAAIC,YAAY,GAAG,CAAC;AAEpB,OAAM,MAAOC,OAAQ,SAAQZ,WAAW;EAAxCa,YAAA;;IAMqB,KAAAC,kBAAkB,GAAGX,gBAAgB;IAM5C,KAAAY,KAAK,GAAG,EAAE;IAEV,KAAAC,IAAI,GAAG,EAAE;IAEM,KAAAC,YAAY,GAAG,KAAK;IAEpB,KAAAC,iBAAiB,GAAG,KAAK;IAEzB,KAAAC,QAAQ,GAAG,KAAK;IAEhB,KAAAC,mBAAmB,GAAG,KAAK;IAO1C,KAAAC,aAAa,GAAG,EAAE;IAEH,KAAAC,OAAO,GAAG,KAAK;IAO1C,KAAAC,eAAe,GAAG,IAAI;IAEZ,KAAAC,OAAO,GAAG,KAAK;IAEf,KAAAC,SAAS,GAAG,KAAK;IAWR,KAAAC,kBAAkB,GAAG,KAAK;IAE1B,KAAAC,6BAA6B,GAAG,KAAK;IAI9C,KAAAC,aAAa,GAAgB,IAAI;IA6JjC,KAAAC,cAAc,GAAmB,IAAI3B,cAAc,CAAC,MAAK;MACjE,IAAI,CAACwB,kBAAkB,GAAG,IAAI;MAC9B,IAAI,CAACI,MAAM,CAACC,IAAI,CAAEC,CAAC,IAAK,IAAI,CAACJ,aAAa,GAAGI,CAAC,CAAC;MAC/C,OAAO,IAAI,CAACF,MAAM;IACpB,CAAC,CAAC;EAsDJ;EAzPE,IAAIG,MAAMA,CAAA;IACR,OAAO,IAAI,CAACT,OAAO;EACrB;EAkCSU,iBAAiBA,CAAA;IACxB,IAAI,CAACC,GAAG,GAAGC,QAAQ,CAACD,GAAG;IACvB,KAAK,CAACD,iBAAiB,EAAE;EAC3B;EAEmBG,YAAYA,CAAA;IAC7B,KAAK,CAACA,YAAY,EAAE;IACpB;IACA,IAAI,CAACC,EAAE,GAAG,IAAI,CAACA,EAAE,IAAI,WAAW,EAAE3B,YAAY,EAAE;EAClD;EAEmB4B,MAAMA,CAAA;IACvB,MAAMC,OAAO,GAAG;MACd,oBAAoB,EAAE,IAAI,CAACrB,QAAQ;MACnC,kBAAkB,EAAE,IAAI,CAACG;KAC1B;IAED,IAAImB,YAAY,GAAGrC,IAAI,EAAE;IACzB,IAAI,IAAI,CAACa,YAAY,IAAI,IAAI,CAACD,IAAI,EAAE;MAClC;MACA;MACAyB,YAAY,GAAGrC,IAAI;uEAEf,IAAI,CAACY,IAAI,gBAAgB;;IAG/B,IAAI0B,aAAa,GAAGtC,IAAI,EAAE;IAC1B,IAAI,IAAI,CAACW,KAAK,EAAE;MACd2B,aAAa,GAAGtC,IAAI;4CACkB,IAAI,CAACW,KAAK,SAAS;;IAG3D,OAAOX,IAAI;;kBAEG,IAAI,CAACuC,WAAW;yBACTjC,QAAQ,CAAC8B,OAAO,CAAC;;;;kBAIxB,IAAI,CAACI,KAAK;iBACX,IAAI,CAACC,UAAU;sBACV,IAAI,CAACC,qBAAqB;uBACzB,IAAI,CAACC,sBAAsB;uBAC3B,IAAI,CAACC,sBAAsB;uBAC3B,IAAI,CAACC,sBAAsB;qBAC7B,IAAI,CAACC,sBAAsB;wBACxB,IAAI,CAACA,sBAAsB;;YAEvCT,YAAY;YACZC,aAAa;YACb,IAAI,CAACtB,mBAAmB,GAAG,IAAI,CAAC+B,eAAe,EAAE,GAAG,EAAE;;UAExD,IAAI,CAAC/B,mBAAmB,GAAG,EAAE,GAAG,IAAI,CAAC+B,eAAe,EAAE;UACtD,IAAI,CAACC,YAAY,EAAE;gBACb;EACd;EAEUD,eAAeA,CAAA;IACvB,OAAO/C,IAAI;iBACE,IAAI,CAACiB,aAAa;iBAClB,IAAI,CAACH,iBAAiB,wBAAwB;EAC7D;EAEA;EACA;EACUkC,YAAYA,CAAA;IACpB,OAAO,IAAI,CAAC1B,kBAAkB,GAC1BtB,IAAI;kDAEA,IAAI,CAACuB,6BAA6B,iBAAiB,GACvD,EAAE;EACR;EAEU0B,aAAaA,CAAA;IACrB,OAAAC,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACKxD,iBAAiB,CAAC,IAAI,CAACyD,OAAO,CAAC;MAClCC,OAAO,EAAEA,CAACC,IAAY,EAAEC,KAAa,KACjC,IAAI,CAACH,OAAO,CAACI,YAAY,CAACF,IAAI,EAAEC,KAAK,CAAC;MAC1CE,iBAAiB,EAAE,MAAOC,2BAAoC,IAAI;QAChE,MAAM,IAAI,CAACC,YAAY,CAACC,cAAc;QACtC,IAAI,CAACD,YAAY,CAACE,QAAQ,CAACH,2BAA2B,CAAC;MACzD,CAAC;MACDI,mBAAmB,EAAE,MAAAA,CAAA,KAAW;QAC9B,MAAM,IAAI,CAACH,YAAY,CAACC,cAAc;QACtC,IAAI,CAACD,YAAY,CAACI,UAAU,EAAE;MAChC,CAAC;MACDC,gBAAgB,EAAEA,CAAA,KACd,IAAI,CAACC,aAAa,CAAC,IAAIC,WAAW,CAC9BnE,gBAAgB,CAACoE,OAAO,CAACC,gBAAgB,EAAE;QACzCC,MAAM,EAAE;UAACC,KAAK,EAAE,IAAI,CAACpC;QAAE,CAAC;QACxBqC,OAAO,EAAE,IAAI;QACbC,QAAQ,EAAE,IAAI;QACdC,UAAU,EAAE;OACb,CAAC,CAAC;MACXC,aAAa,EAAEA,CAAA,KAAM,IAAI,CAACC,UAAU;MACpCC,cAAc,EAAEA,CAAA,KAAM,IAAI,CAACxB,OAAO,CAACyB,WAAW;MAC9CC,oBAAoB,EAAEA,CAAA,KAAM,IAAI,CAACC,eAAe,CAACJ,UAAU;MAC3DK,qBAAqB,EAAEA,CAAA,KAAM,IAAI,CAACD,eAAe,CAACF,WAAW;MAC7DrC,KAAK,EAAEA,CAAA,KAAK;QACV,IAAI,IAAI,CAACnB,SAAS,EAAE;UAClB,IAAI,CAACA,SAAS,GAAG,KAAK;SACvB,MAAM;UACL,IAAI,CAAC+B,OAAO,CAACZ,KAAK,EAAE;;MAExB;IAAC;EAEL;EAEAqB,QAAQA,CAACoB,UAAmB;IAC1B;IACA,IAAI,CAACA,UAAU,EAAE;MACf,IAAI,CAAC5D,SAAS,GAAG,IAAI;;IAGvB,IAAI,IAAI,CAAC6D,aAAa,EAAE;MACtB,IAAI,CAACA,aAAa,CAACrB,QAAQ,CAACoB,UAAU,CAAC;MACvC,IAAI,CAACE,SAAS,CAAC,IAAI,CAACD,aAAa,CAACE,QAAQ,EAAE,CAAC;KAC9C,MAAM;MACL;MACA;MACA,IAAI,CAACxB,cAAc,CAACjC,IAAI,CAAC,MAAK;QAC5B,IAAI,CAACuD,aAAa,CAACrB,QAAQ,CAACoB,UAAU,CAAC;QACvC,IAAI,CAACE,SAAS,CAAC,IAAI,CAACD,aAAa,CAACE,QAAQ,EAAE,CAAC;MAC/C,CAAC,CAAC;;EAEN;EAEArB,UAAUA,CAAA;IACR,IAAI,CAACmB,aAAa,CAACnB,UAAU,EAAE;IAC/B,IAAI,CAACoB,SAAS,CAAC,IAAI,CAACD,aAAa,CAACE,QAAQ,EAAE,CAAC;EAC/C;EAEUD,SAASA,CAACE,QAAiB;IACnC,MAAMC,QAAQ,GAAG,IAAI,CAACzD,MAAM;IAE5B,IAAIyD,QAAQ,KAAKD,QAAQ,EAAE;MACzB,IAAI,CAACjE,OAAO,GAAGiE,QAAQ;MACvB,IAAI,CAACE,aAAa,CAAC,QAAQ,EAAED,QAAQ,CAAC;;EAE1C;EAEAE,iBAAiBA,CAAA;IACf,OAAO,IAAI,CAACN,aAAa,CAACM,iBAAiB,EAAE;EAC/C;EAEAC,0BAA0BA,CAAA;IACxB,OAAO,IAAI,CAAC9B,YAAY,CAAC+B,wBAAwB,EAAE;EACrD;EAEA;EACSlD,KAAKA,CAAA;IACZ,IAAI,CAACY,OAAO,CAACZ,KAAK,EAAE;IACpB,IAAI,CAACmD,WAAW,EAAE;EACpB;EAQUpD,WAAWA,CAAA;IACnB,IAAI,CAACoD,WAAW,EAAE;IAClB,IAAI,CAACT,aAAa,CAAC3C,WAAW,EAAE;EAClC;EAEUoD,WAAWA,CAAA;IACnB,IAAI,CAACC,iBAAiB,EAAE;EAC1B;EAEUnD,UAAUA,CAAA;IAClB,IAAI,CAACoD,gBAAgB,EAAE;EACzB;EAEUnD,qBAAqBA,CAACoD,KAAY;IAC1C,MAAMC,IAAI,GAAGA,CAAA,KAAK;MAChBC,MAAM,CAACC,mBAAmB,CAAC,SAAS,EAAEF,IAAI,CAAC;MAE3C,IAAI,CAACjD,sBAAsB,EAAE;IAC/B,CAAC;IAEDkD,MAAM,CAACE,gBAAgB,CAAC,SAAS,EAAEH,IAAI,CAAC;IACxC,IAAI,CAACtE,cAAc,CAAC0E,UAAU,CAACL,KAAK,CAAC;EACvC;EAGUjD,sBAAsBA,CAACiD,KAAY;IAC3C,IAAI,CAACrE,cAAc,CAAC0E,UAAU,CAACL,KAAK,CAAC;EACvC;EAEUhD,sBAAsBA,CAAA;IAC9B,IAAI,CAACrB,cAAc,CAAC2E,QAAQ,EAAE;EAChC;EAEUzD,sBAAsBA,CAAA;IAC9B,IAAI,CAAClB,cAAc,CAAC4E,UAAU,EAAE;EAClC;EAEUzD,sBAAsBA,CAAA;IAC9B,IAAI,CAACnB,cAAc,CAAC6E,QAAQ,EAAE;EAChC;EAEUV,iBAAiBA,CAAA;IACzB,IAAI,CAACnE,cAAc,CAAC8E,UAAU,EAAE;EAClC;EAEUV,gBAAgBA,CAAA;IACxB,IAAI,CAACpE,cAAc,CAAC+E,QAAQ,EAAE;EAChC;EAEA,IAAIC,cAAcA,CAAA;;IAChB,OAAO,EAAAC,EAAA,OAAI,CAAClF,aAAa,cAAAkF,EAAA,uBAAAA,EAAA,CAAEtB,QAAQ,KAAI,KAAK;EAC9C;;AAhRgB5E,OAAA,CAAAmG,iBAAiB,GACZ;EAACC,IAAI,EAAE,MAAM;EAAEC,cAAc,EAAE;AAAI,CAAC;AAMtCC,UAAA,EAAlB3G,KAAK,CAAC,UAAU,CAAC,C,uCAAiC;AAEvB2G,UAAA,EAA3B3G,KAAK,CAAC,mBAAmB,CAAC,C,4CAAuC;AAEtD2G,UAAA,EAAX5G,QAAQ,EAAE,C,qCAAY;AAEX4G,UAAA,EAAX5G,QAAQ,EAAE,C,oCAAW;AAEK4G,UAAA,EAA1B5G,QAAQ,CAAC;EAAC6G,IAAI,EAAEC;AAAO,CAAC,CAAC,C,4CAAsB;AAErBF,UAAA,EAA1B5G,QAAQ,CAAC;EAAC6G,IAAI,EAAEC;AAAO,CAAC,CAAC,C,iDAA2B;AAE1BF,UAAA,EAA1B5G,QAAQ,CAAC;EAAC6G,IAAI,EAAEC;AAAO,CAAC,CAAC,C,wCAAkB;AAEjBF,UAAA,EAA1B5G,QAAQ,CAAC;EAAC6G,IAAI,EAAEC;AAAO,CAAC,CAAC,C,mDAA6B;AAGvDF,UAAA,EADC5G,QAAQ,CAAC;EAAC6G,IAAI,EAAEC,OAAO;EAAEC,OAAO,EAAE,IAAI;EAAEC,SAAS,EAAE;AAAQ,CAAC,CAAC,C,oCAG7D;AAEWJ,UAAA,EAAX5G,QAAQ,EAAE,C,6CAAoB;AAEJ4G,UAAA,EAA1B5G,QAAQ,CAAC;EAAC6G,IAAI,EAAEC;AAAO,CAAC,CAAC,C,uCAAiB;AAO3CF,UAAA,EALCjH,QAAQ,CAAC,gBAA8B0D,KAAc;EACpD,MAAM,IAAI,CAACK,cAAc;EACzB,IAAI,CAACsB,aAAa,CAACiC,kBAAkB,CAAC5D,KAAK,CAAC;AAC9C,CAAC,CAAC,EACDrD,QAAQ,CAAC;EAAC6G,IAAI,EAAEC;AAAO,CAAC,CAAC,C,+CACH;AAaKF,UAAA,EAA3B3G,KAAK,CAAC,mBAAmB,CAAC,C,+CAAyC;AAE3D2G,UAAA,EAARzG,KAAK,EAAE,C,kDAAsC;AAErCyG,UAAA,EAARzG,KAAK,EAAE,C,6DAAiD;AAE/ByG,UAAA,EAAzB1G,UAAU,CAAC,YAAY,CAAC,C,sCAA+B;AA8LxD0G,UAAA,EADC7G,YAAY,CAAC;EAACmH,OAAO,EAAE;AAAI,CAAC,CAAC,C,oDAG7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}