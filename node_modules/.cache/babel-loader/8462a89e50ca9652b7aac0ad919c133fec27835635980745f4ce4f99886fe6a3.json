{"ast":null,"code":"/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport { dom } from '@polymer/polymer/lib/legacy/polymer.dom.js';\n\n/**\n * @demo demo/index.html\n * @polymerBehavior\n */\nexport var IronControlState = {\n  properties: {\n    /**\n     * If true, the element currently has focus.\n     */\n    focused: {\n      type: Boolean,\n      value: false,\n      notify: true,\n      readOnly: true,\n      reflectToAttribute: true\n    },\n    /**\n     * If true, the user cannot interact with this element.\n     */\n    disabled: {\n      type: Boolean,\n      value: false,\n      notify: true,\n      observer: '_disabledChanged',\n      reflectToAttribute: true\n    },\n    /**\n     * Value of the `tabindex` attribute before `disabled` was activated.\n     * `null` means the attribute was not present.\n     * @type {?string|undefined}\n     */\n    _oldTabIndex: {\n      type: String\n    },\n    _boundFocusBlurHandler: {\n      type: Function,\n      value: function value() {\n        return this._focusBlurHandler.bind(this);\n      }\n    }\n  },\n  observers: ['_changedControlState(focused, disabled)'],\n  /**\n   * @return {void}\n   */\n  ready: function ready() {\n    this.addEventListener('focus', this._boundFocusBlurHandler, true);\n    this.addEventListener('blur', this._boundFocusBlurHandler, true);\n  },\n  _focusBlurHandler: function _focusBlurHandler(event) {\n    // Polymer takes care of retargeting events.\n    this._setFocused(event.type === 'focus');\n    return;\n  },\n  _disabledChanged: function _disabledChanged(disabled, old) {\n    this.setAttribute('aria-disabled', disabled ? 'true' : 'false');\n    this.style.pointerEvents = disabled ? 'none' : '';\n    if (disabled) {\n      // Read the `tabindex` attribute instead of the `tabIndex` property.\n      // The property returns `-1` if there is no `tabindex` attribute.\n      // This distinction is important when restoring the value because\n      // leaving `-1` hides shadow root children from the tab order.\n      this._oldTabIndex = this.getAttribute('tabindex');\n      this._setFocused(false);\n      this.tabIndex = -1;\n      this.blur();\n    } else if (this._oldTabIndex !== undefined) {\n      if (this._oldTabIndex === null) {\n        this.removeAttribute('tabindex');\n      } else {\n        this.setAttribute('tabindex', this._oldTabIndex);\n      }\n    }\n  },\n  _changedControlState: function _changedControlState() {\n    // _controlStateChanged is abstract, follow-on behaviors may implement it\n    if (this._controlStateChanged) {\n      this._controlStateChanged();\n    }\n  }\n};","map":{"version":3,"names":["dom","IronControlState","properties","focused","type","Boolean","value","notify","readOnly","reflectToAttribute","disabled","observer","_oldTabIndex","String","_boundFocusBlurHandler","Function","_focusBlurHandler","bind","observers","ready","addEventListener","event","_setFocused","_disabledChanged","old","setAttribute","style","pointerEvents","getAttribute","tabIndex","blur","undefined","removeAttribute","_changedControlState","_controlStateChanged"],"sources":["/Users/sercanardil/Desktop/frontend/node_modules/@polymer/iron-behaviors/iron-control-state.js"],"sourcesContent":["/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport {dom} from '@polymer/polymer/lib/legacy/polymer.dom.js';\n\n/**\n * @demo demo/index.html\n * @polymerBehavior\n */\nexport const IronControlState = {\n\n  properties: {\n\n    /**\n     * If true, the element currently has focus.\n     */\n    focused: {\n      type: Boolean,\n      value: false,\n      notify: true,\n      readOnly: true,\n      reflectToAttribute: true\n    },\n\n    /**\n     * If true, the user cannot interact with this element.\n     */\n    disabled: {\n      type: Boolean,\n      value: false,\n      notify: true,\n      observer: '_disabledChanged',\n      reflectToAttribute: true\n    },\n\n    /**\n     * Value of the `tabindex` attribute before `disabled` was activated.\n     * `null` means the attribute was not present.\n     * @type {?string|undefined}\n     */\n    _oldTabIndex: {type: String},\n\n    _boundFocusBlurHandler: {\n      type: Function,\n      value: function() {\n        return this._focusBlurHandler.bind(this);\n      }\n    }\n  },\n\n  observers: ['_changedControlState(focused, disabled)'],\n\n  /**\n   * @return {void}\n   */\n  ready: function() {\n    this.addEventListener('focus', this._boundFocusBlurHandler, true);\n    this.addEventListener('blur', this._boundFocusBlurHandler, true);\n  },\n\n  _focusBlurHandler: function(event) {\n    // Polymer takes care of retargeting events.\n    this._setFocused(event.type === 'focus');\n    return;\n  },\n\n  _disabledChanged: function(disabled, old) {\n    this.setAttribute('aria-disabled', disabled ? 'true' : 'false');\n    this.style.pointerEvents = disabled ? 'none' : '';\n    if (disabled) {\n      // Read the `tabindex` attribute instead of the `tabIndex` property.\n      // The property returns `-1` if there is no `tabindex` attribute.\n      // This distinction is important when restoring the value because\n      // leaving `-1` hides shadow root children from the tab order.\n      this._oldTabIndex = this.getAttribute('tabindex');\n      this._setFocused(false);\n      this.tabIndex = -1;\n      this.blur();\n    } else if (this._oldTabIndex !== undefined) {\n      if (this._oldTabIndex === null) {\n        this.removeAttribute('tabindex');\n      } else {\n        this.setAttribute('tabindex', this._oldTabIndex);\n      }\n    }\n  },\n\n  _changedControlState: function() {\n    // _controlStateChanged is abstract, follow-on behaviors may implement it\n    if (this._controlStateChanged) {\n      this._controlStateChanged();\n    }\n  }\n\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,oCAAoC;AAE3C,SAAQA,GAAG,QAAO,4CAA4C;;AAE9D;AACA;AACA;AACA;AACA,OAAO,IAAMC,gBAAgB,GAAG;EAE9BC,UAAU,EAAE;IAEV;AACJ;AACA;IACIC,OAAO,EAAE;MACPC,IAAI,EAAEC,OAAO;MACbC,KAAK,EAAE,KAAK;MACZC,MAAM,EAAE,IAAI;MACZC,QAAQ,EAAE,IAAI;MACdC,kBAAkB,EAAE;IACtB,CAAC;IAED;AACJ;AACA;IACIC,QAAQ,EAAE;MACRN,IAAI,EAAEC,OAAO;MACbC,KAAK,EAAE,KAAK;MACZC,MAAM,EAAE,IAAI;MACZI,QAAQ,EAAE,kBAAkB;MAC5BF,kBAAkB,EAAE;IACtB,CAAC;IAED;AACJ;AACA;AACA;AACA;IACIG,YAAY,EAAE;MAACR,IAAI,EAAES;IAAM,CAAC;IAE5BC,sBAAsB,EAAE;MACtBV,IAAI,EAAEW,QAAQ;MACdT,KAAK,EAAE,SAAAA,MAAA,EAAW;QAChB,OAAO,IAAI,CAACU,iBAAiB,CAACC,IAAI,CAAC,IAAI,CAAC;MAC1C;IACF;EACF,CAAC;EAEDC,SAAS,EAAE,CAAC,yCAAyC,CAAC;EAEtD;AACF;AACA;EACEC,KAAK,EAAE,SAAAA,MAAA,EAAW;IAChB,IAAI,CAACC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAACN,sBAAsB,EAAE,IAAI,CAAC;IACjE,IAAI,CAACM,gBAAgB,CAAC,MAAM,EAAE,IAAI,CAACN,sBAAsB,EAAE,IAAI,CAAC;EAClE,CAAC;EAEDE,iBAAiB,EAAE,SAAAA,kBAASK,KAAK,EAAE;IACjC;IACA,IAAI,CAACC,WAAW,CAACD,KAAK,CAACjB,IAAI,KAAK,OAAO,CAAC;IACxC;EACF,CAAC;EAEDmB,gBAAgB,EAAE,SAAAA,iBAASb,QAAQ,EAAEc,GAAG,EAAE;IACxC,IAAI,CAACC,YAAY,CAAC,eAAe,EAAEf,QAAQ,GAAG,MAAM,GAAG,OAAO,CAAC;IAC/D,IAAI,CAACgB,KAAK,CAACC,aAAa,GAAGjB,QAAQ,GAAG,MAAM,GAAG,EAAE;IACjD,IAAIA,QAAQ,EAAE;MACZ;MACA;MACA;MACA;MACA,IAAI,CAACE,YAAY,GAAG,IAAI,CAACgB,YAAY,CAAC,UAAU,CAAC;MACjD,IAAI,CAACN,WAAW,CAAC,KAAK,CAAC;MACvB,IAAI,CAACO,QAAQ,GAAG,CAAC,CAAC;MAClB,IAAI,CAACC,IAAI,CAAC,CAAC;IACb,CAAC,MAAM,IAAI,IAAI,CAAClB,YAAY,KAAKmB,SAAS,EAAE;MAC1C,IAAI,IAAI,CAACnB,YAAY,KAAK,IAAI,EAAE;QAC9B,IAAI,CAACoB,eAAe,CAAC,UAAU,CAAC;MAClC,CAAC,MAAM;QACL,IAAI,CAACP,YAAY,CAAC,UAAU,EAAE,IAAI,CAACb,YAAY,CAAC;MAClD;IACF;EACF,CAAC;EAEDqB,oBAAoB,EAAE,SAAAA,qBAAA,EAAW;IAC/B;IACA,IAAI,IAAI,CAACC,oBAAoB,EAAE;MAC7B,IAAI,CAACA,oBAAoB,CAAC,CAAC;IAC7B;EACF;AAEF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}