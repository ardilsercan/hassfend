{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport \"@material/mwc-button\";\nconst mdiPlus = \"M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z\";\nimport { LitElement, css, html, nothing } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport \"../../../components/ha-button\";\nimport \"../../../components/ha-button-menu\";\nimport \"../../../components/ha-svg-icon\";\nimport \"./ha-script-field-row\";\nlet HaScriptFields = _decorate([customElement(\"ha-script-fields\")], function (_initialize, _LitElement) {\n  class HaScriptFields extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaScriptFields,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"disabled\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"fields\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_focusLastActionOnChange\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        return html`\n      ${this.fields ? html`<div class=\"fields\">\n            ${Object.entries(this.fields).map(([key, field]) => html`\n                <ha-script-field-row\n                  .key=${key}\n                  .excludeKeys=${Object.keys(this.fields).filter(k => k !== key)}\n                  .field=${field}\n                  .disabled=${this.disabled}\n                  @value-changed=${this._fieldChanged}\n                  .hass=${this.hass}\n                >\n                </ha-script-field-row>\n              `)}\n          </div> ` : nothing}\n      <ha-button\n        outlined\n        @click=${this._addField}\n        .disabled=${this.disabled}\n        .label=${this.hass.localize(\"ui.panel.config.script.editor.field.add_field\")}\n      >\n        <ha-svg-icon .path=${mdiPlus} slot=\"icon\"></ha-svg-icon>\n      </ha-button>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"updated\",\n      value: function updated(changedProps) {\n        _get(_getPrototypeOf(HaScriptFields.prototype), \"updated\", this).call(this, changedProps);\n        if (changedProps.has(\"fields\") && this._focusLastActionOnChange) {\n          this._focusLastActionOnChange = false;\n          this.focusLastField();\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"focusLastField\",\n      value: function focusLastField() {\n        const row = this.shadowRoot.querySelector(\"ha-script-field-row:last-of-type\");\n        row.updateComplete.then(() => {\n          row.expand();\n          row.scrollIntoView();\n          row.focus();\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_addField\",\n      value: function _addField() {\n        const key = this._getUniqueKey(this.hass.localize(\"ui.panel.config.script.editor.field.field\") || \"field\", this.fields || {});\n        const fields = {\n          ...(this.fields || {}),\n          [key]: {\n            selector: {\n              text: null\n            }\n          }\n        };\n        this._focusLastActionOnChange = true;\n        fireEvent(this, \"value-changed\", {\n          value: fields\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_fieldChanged\",\n      value: function _fieldChanged(ev) {\n        ev.stopPropagation();\n        const key = ev.target.key;\n        let fields = {};\n        if (ev.detail.value === null) {\n          fields = {\n            ...this.fields\n          };\n          delete fields[key];\n        } else {\n          const newValue = {\n            ...ev.detail.value\n          };\n          const newKey = newValue.key;\n          delete newValue.key;\n          const keyChanged = key !== newKey;\n\n          // If key is changed, recreate the object to maintain the same insertion order.\n          if (keyChanged) {\n            Object.entries(this.fields).forEach(([k, v]) => {\n              if (k === key) {\n                fields[newKey] = newValue;\n              } else fields[k] = v;\n            });\n          } else {\n            fields = {\n              ...this.fields\n            };\n            fields[key] = newValue;\n          }\n        }\n        fireEvent(this, \"value-changed\", {\n          value: fields\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_getUniqueKey\",\n      value: function _getUniqueKey(base, fields) {\n        let key = base;\n        if (base in fields) {\n          let i = 2;\n          do {\n            key = `${base}_${i}`;\n            i++;\n          } while (key in fields);\n        }\n        return key;\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css`\n      ha-script-field-row {\n        display: block;\n        margin-bottom: 16px;\n        scroll-margin-top: 48px;\n      }\n      ha-svg-icon {\n        height: 20px;\n      }\n    `;\n      }\n    }]\n  };\n}, LitElement);\nexport { HaScriptFields as default };","map":{"version":3,"names":["mdiPlus","LitElement","css","html","nothing","customElement","property","fireEvent","HaScriptFields","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","type","Boolean","render","fields","Object","entries","map","field","keys","filter","k","disabled","_fieldChanged","hass","_addField","localize","updated","changedProps","_get","_getPrototypeOf","prototype","call","has","_focusLastActionOnChange","focusLastField","row","shadowRoot","querySelector","updateComplete","then","expand","scrollIntoView","focus","_getUniqueKey","selector","text","ev","stopPropagation","target","detail","newValue","newKey","keyChanged","forEach","v","base","i","static","styles","default"],"sources":["/workspaces/frontend/src/panels/config/script/ha-script-fields.ts"],"sourcesContent":["import \"@material/mwc-button\";\nimport { mdiPlus } from \"@mdi/js\";\nimport {\n  CSSResultGroup,\n  LitElement,\n  PropertyValues,\n  css,\n  html,\n  nothing,\n} from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport \"../../../components/ha-button\";\nimport \"../../../components/ha-button-menu\";\nimport \"../../../components/ha-svg-icon\";\nimport { Fields } from \"../../../data/script\";\nimport { HomeAssistant } from \"../../../types\";\nimport \"./ha-script-field-row\";\nimport type HaScriptFieldRow from \"./ha-script-field-row\";\n\n@customElement(\"ha-script-fields\")\nexport default class HaScriptFields extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @property({ attribute: false }) public fields!: Fields;\n\n  private _focusLastActionOnChange = false;\n\n  protected render() {\n    return html`\n      ${this.fields\n        ? html`<div class=\"fields\">\n            ${Object.entries(this.fields).map(\n              ([key, field]) => html`\n                <ha-script-field-row\n                  .key=${key}\n                  .excludeKeys=${Object.keys(this.fields).filter(\n                    (k) => k !== key\n                  )}\n                  .field=${field}\n                  .disabled=${this.disabled}\n                  @value-changed=${this._fieldChanged}\n                  .hass=${this.hass}\n                >\n                </ha-script-field-row>\n              `\n            )}\n          </div> `\n        : nothing}\n      <ha-button\n        outlined\n        @click=${this._addField}\n        .disabled=${this.disabled}\n        .label=${this.hass.localize(\n          \"ui.panel.config.script.editor.field.add_field\"\n        )}\n      >\n        <ha-svg-icon .path=${mdiPlus} slot=\"icon\"></ha-svg-icon>\n      </ha-button>\n    `;\n  }\n\n  protected updated(changedProps: PropertyValues) {\n    super.updated(changedProps);\n\n    if (changedProps.has(\"fields\") && this._focusLastActionOnChange) {\n      this._focusLastActionOnChange = false;\n      this.focusLastField();\n    }\n  }\n\n  public focusLastField() {\n    const row = this.shadowRoot!.querySelector<HaScriptFieldRow>(\n      \"ha-script-field-row:last-of-type\"\n    )!;\n    row.updateComplete.then(() => {\n      row.expand();\n      row.scrollIntoView();\n      row.focus();\n    });\n  }\n\n  private _addField() {\n    const key = this._getUniqueKey(\n      this.hass.localize(\"ui.panel.config.script.editor.field.field\") ||\n        \"field\",\n      this.fields || {}\n    );\n    const fields = {\n      ...(this.fields || {}),\n      [key]: {\n        selector: {\n          text: null,\n        },\n      },\n    };\n    this._focusLastActionOnChange = true;\n    fireEvent(this, \"value-changed\", { value: fields });\n  }\n\n  private _fieldChanged(ev: CustomEvent) {\n    ev.stopPropagation();\n    const key = (ev.target as any).key;\n    let fields: Fields = {};\n    if (ev.detail.value === null) {\n      fields = { ...this.fields };\n      delete fields[key];\n    } else {\n      const newValue = { ...ev.detail.value };\n      const newKey = newValue.key;\n      delete newValue.key;\n      const keyChanged = key !== newKey;\n\n      // If key is changed, recreate the object to maintain the same insertion order.\n      if (keyChanged) {\n        Object.entries(this.fields).forEach(([k, v]) => {\n          if (k === key) {\n            fields[newKey] = newValue;\n          } else fields[k] = v;\n        });\n      } else {\n        fields = { ...this.fields };\n        fields[key] = newValue;\n      }\n    }\n    fireEvent(this, \"value-changed\", { value: fields });\n  }\n\n  private _getUniqueKey(base: string, fields: Fields): string {\n    let key = base;\n    if (base in fields) {\n      let i = 2;\n      do {\n        key = `${base}_${i}`;\n        i++;\n      } while (key in fields);\n    }\n    return key;\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      ha-script-field-row {\n        display: block;\n        margin-bottom: 16px;\n        scroll-margin-top: 48px;\n      }\n      ha-svg-icon {\n        height: 20px;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-script-fields\": HaScriptFields;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}