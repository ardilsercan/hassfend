{"ast":null,"code":"export const fetchSystemLog = async hass => {\n  const log = await hass.callWS({\n    type: \"system_log/list\"\n  });\n  for (const error of log) {\n    error.level = error.level.toLowerCase();\n  }\n  return log;\n};\nexport const getLoggedErrorIntegration = item => {\n  // Try to derive from logger name\n  if (item.name.startsWith(\"homeassistant.components.\")) {\n    return item.name.split(\".\")[2];\n  }\n  if (item.name.startsWith(\"custom_components.\")) {\n    return item.name.split(\".\")[1];\n  }\n\n  // Try to derive from logged location\n  if (item.source[0].startsWith(\"custom_components/\")) {\n    return item.source[0].split(\"/\")[1];\n  }\n  if (item.source[0].startsWith(\"homeassistant/components/\")) {\n    return item.source[0].split(\"/\")[2];\n  }\n  return undefined;\n};\nexport const isCustomIntegrationError = item => item.name.startsWith(\"custom_components.\") || item.source[0].startsWith(\"custom_components/\");","map":{"version":3,"names":["fetchSystemLog","hass","log","callWS","type","error","level","toLowerCase","getLoggedErrorIntegration","item","name","startsWith","split","source","undefined","isCustomIntegrationError"],"sources":["/workspaces/frontend/src/data/system_log.ts"],"sourcesContent":["import { HomeAssistant } from \"../types\";\n\nexport type SystemLogLevel =\n  | \"critical\"\n  | \"error\"\n  | \"warning\"\n  | \"info\"\n  | \"debug\";\n\nexport interface LoggedError {\n  name: string;\n  message: [string];\n  level: SystemLogLevel;\n  source: [string, number];\n  exception: string;\n  count: number;\n  // unix timestamps in seconds\n  timestamp: number;\n  first_occurred: number;\n}\n\nexport const fetchSystemLog = async (hass: HomeAssistant) => {\n  const log = await hass.callWS<LoggedError[]>({ type: \"system_log/list\" });\n  for (const error of log) {\n    error.level = error.level.toLowerCase() as LoggedError[\"level\"];\n  }\n  return log;\n};\n\nexport const getLoggedErrorIntegration = (item: LoggedError) => {\n  // Try to derive from logger name\n  if (item.name.startsWith(\"homeassistant.components.\")) {\n    return item.name.split(\".\")[2];\n  }\n  if (item.name.startsWith(\"custom_components.\")) {\n    return item.name.split(\".\")[1];\n  }\n\n  // Try to derive from logged location\n  if (item.source[0].startsWith(\"custom_components/\")) {\n    return item.source[0].split(\"/\")[1];\n  }\n\n  if (item.source[0].startsWith(\"homeassistant/components/\")) {\n    return item.source[0].split(\"/\")[2];\n  }\n\n  return undefined;\n};\n\nexport const isCustomIntegrationError = (item: LoggedError) =>\n  item.name.startsWith(\"custom_components.\") ||\n  item.source[0].startsWith(\"custom_components/\");\n"],"mappings":"AAqBA,OAAO,MAAMA,cAAc,GAAG,MAAOC,IAAmB,IAAK;EAC3D,MAAMC,GAAG,GAAG,MAAMD,IAAI,CAACE,MAAM,CAAgB;IAAEC,IAAI,EAAE;EAAkB,CAAC,CAAC;EACzE,KAAK,MAAMC,KAAK,IAAIH,GAAG,EAAE;IACvBG,KAAK,CAACC,KAAK,GAAGD,KAAK,CAACC,KAAK,CAACC,WAAW,CAAC,CAAyB;EACjE;EACA,OAAOL,GAAG;AACZ,CAAC;AAED,OAAO,MAAMM,yBAAyB,GAAIC,IAAiB,IAAK;EAC9D;EACA,IAAIA,IAAI,CAACC,IAAI,CAACC,UAAU,CAAC,2BAA2B,CAAC,EAAE;IACrD,OAAOF,IAAI,CAACC,IAAI,CAACE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAChC;EACA,IAAIH,IAAI,CAACC,IAAI,CAACC,UAAU,CAAC,oBAAoB,CAAC,EAAE;IAC9C,OAAOF,IAAI,CAACC,IAAI,CAACE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAChC;;EAEA;EACA,IAAIH,IAAI,CAACI,MAAM,CAAC,CAAC,CAAC,CAACF,UAAU,CAAC,oBAAoB,CAAC,EAAE;IACnD,OAAOF,IAAI,CAACI,MAAM,CAAC,CAAC,CAAC,CAACD,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EACrC;EAEA,IAAIH,IAAI,CAACI,MAAM,CAAC,CAAC,CAAC,CAACF,UAAU,CAAC,2BAA2B,CAAC,EAAE;IAC1D,OAAOF,IAAI,CAACI,MAAM,CAAC,CAAC,CAAC,CAACD,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EACrC;EAEA,OAAOE,SAAS;AAClB,CAAC;AAED,OAAO,MAAMC,wBAAwB,GAAIN,IAAiB,IACxDA,IAAI,CAACC,IAAI,CAACC,UAAU,CAAC,oBAAoB,CAAC,IAC1CF,IAAI,CAACI,MAAM,CAAC,CAAC,CAAC,CAACF,UAAU,CAAC,oBAAoB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}