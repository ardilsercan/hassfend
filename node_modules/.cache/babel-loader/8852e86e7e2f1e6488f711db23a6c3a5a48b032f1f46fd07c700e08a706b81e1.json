{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport { html, LitElement } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { assert, literal, number, object, optional, string } from \"superstruct\";\nimport { fireEvent } from \"../../../../../common/dom/fire_event\";\nimport \"../../../../../components/ha-form/ha-form\";\nconst numericStateConditionStruct = object({\n  condition: literal(\"numeric_state\"),\n  entity: optional(string()),\n  above: optional(number()),\n  below: optional(number())\n});\nexport let HaCardConditionNumericState = _decorate([customElement(\"ha-card-condition-numeric_state\")], function (_initialize, _LitElement) {\n  class HaCardConditionNumericState extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaCardConditionNumericState,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"condition\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"disabled\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"defaultConfig\",\n      value: function defaultConfig() {\n        return {\n          condition: \"numeric_state\",\n          entity: \"\"\n        };\n      }\n    }, {\n      kind: \"method\",\n      static: true,\n      key: \"validateUIConfig\",\n      value: function validateUIConfig(condition) {\n        return assert(condition, numericStateConditionStruct);\n      }\n    }, {\n      kind: \"field\",\n      key: \"_schema\",\n      value() {\n        return memoizeOne(stateObj => [{\n          name: \"entity\",\n          selector: {\n            entity: {}\n          }\n        }, {\n          name: \"\",\n          type: \"grid\",\n          schema: [{\n            name: \"above\",\n            selector: {\n              number: {\n                step: \"any\",\n                mode: \"box\",\n                unit_of_measurement: stateObj === null || stateObj === void 0 ? void 0 : stateObj.attributes.unit_of_measurement\n              }\n            }\n          }, {\n            name: \"below\",\n            selector: {\n              number: {\n                step: \"any\",\n                mode: \"box\",\n                unit_of_measurement: stateObj === null || stateObj === void 0 ? void 0 : stateObj.attributes.unit_of_measurement\n              }\n            }\n          }]\n        }]);\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        const stateObj = this.condition.entity ? this.hass.states[this.condition.entity] : undefined;\n        return html`\n      <ha-form\n        .hass=${this.hass}\n        .data=${this.condition}\n        .schema=${this._schema(stateObj)}\n        .disabled=${this.disabled}\n        @value-changed=${this._valueChanged}\n        .computeLabel=${this._computeLabelCallback}\n      ></ha-form>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_valueChanged\",\n      value: function _valueChanged(ev) {\n        ev.stopPropagation();\n        const condition = ev.detail.value;\n        fireEvent(this, \"value-changed\", {\n          value: condition\n        });\n      }\n    }, {\n      kind: \"field\",\n      key: \"_computeLabelCallback\",\n      value() {\n        return schema => {\n          switch (schema.name) {\n            case \"entity\":\n              return this.hass.localize(\"ui.components.entity.entity-picker.entity\");\n            case \"below\":\n            case \"above\":\n              return this.hass.localize(`ui.panel.lovelace.editor.condition-editor.condition.numeric_state.${schema.name}`);\n            default:\n              return \"\";\n          }\n        };\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["html","LitElement","customElement","property","memoizeOne","assert","literal","number","object","optional","string","fireEvent","numericStateConditionStruct","condition","entity","above","below","HaCardConditionNumericState","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","type","Boolean","static","defaultConfig","validateUIConfig","stateObj","name","selector","schema","step","mode","unit_of_measurement","attributes","render","hass","states","undefined","_schema","disabled","_valueChanged","_computeLabelCallback","ev","stopPropagation","detail","localize"],"sources":["/workspaces/frontend/src/panels/lovelace/editor/conditions/types/ha-card-condition-numeric_state.ts"],"sourcesContent":["import { HassEntity } from \"home-assistant-js-websocket\";\nimport { html, LitElement } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { assert, literal, number, object, optional, string } from \"superstruct\";\nimport { fireEvent } from \"../../../../../common/dom/fire_event\";\nimport \"../../../../../components/ha-form/ha-form\";\nimport type { SchemaUnion } from \"../../../../../components/ha-form/types\";\nimport { HaFormSchema } from \"../../../../../components/ha-form/types\";\nimport type { HomeAssistant } from \"../../../../../types\";\nimport {\n  NumericStateCondition,\n  StateCondition,\n} from \"../../../common/validate-condition\";\n\nconst numericStateConditionStruct = object({\n  condition: literal(\"numeric_state\"),\n  entity: optional(string()),\n  above: optional(number()),\n  below: optional(number()),\n});\n\n@customElement(\"ha-card-condition-numeric_state\")\nexport class HaCardConditionNumericState extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public condition!: NumericStateCondition;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  public static get defaultConfig(): NumericStateCondition {\n    return { condition: \"numeric_state\", entity: \"\" };\n  }\n\n  protected static validateUIConfig(condition: StateCondition) {\n    return assert(condition, numericStateConditionStruct);\n  }\n\n  private _schema = memoizeOne(\n    (stateObj?: HassEntity) =>\n      [\n        { name: \"entity\", selector: { entity: {} } },\n        {\n          name: \"\",\n          type: \"grid\",\n          schema: [\n            {\n              name: \"above\",\n              selector: {\n                number: {\n                  step: \"any\",\n                  mode: \"box\",\n                  unit_of_measurement: stateObj?.attributes.unit_of_measurement,\n                },\n              },\n            },\n            {\n              name: \"below\",\n              selector: {\n                number: {\n                  step: \"any\",\n                  mode: \"box\",\n                  unit_of_measurement: stateObj?.attributes.unit_of_measurement,\n                },\n              },\n            },\n          ],\n        },\n      ] as const satisfies readonly HaFormSchema[]\n  );\n\n  protected render() {\n    const stateObj = this.condition.entity\n      ? this.hass.states[this.condition.entity]\n      : undefined;\n\n    return html`\n      <ha-form\n        .hass=${this.hass}\n        .data=${this.condition}\n        .schema=${this._schema(stateObj)}\n        .disabled=${this.disabled}\n        @value-changed=${this._valueChanged}\n        .computeLabel=${this._computeLabelCallback}\n      ></ha-form>\n    `;\n  }\n\n  private _valueChanged(ev: CustomEvent): void {\n    ev.stopPropagation();\n    const condition = ev.detail.value as NumericStateCondition;\n    fireEvent(this, \"value-changed\", { value: condition });\n  }\n\n  private _computeLabelCallback = (\n    schema: SchemaUnion<ReturnType<typeof this._schema>>\n  ): string => {\n    switch (schema.name) {\n      case \"entity\":\n        return this.hass.localize(\"ui.components.entity.entity-picker.entity\");\n      case \"below\":\n      case \"above\":\n        return this.hass.localize(\n          `ui.panel.lovelace.editor.condition-editor.condition.numeric_state.${schema.name}`\n        );\n      default:\n        return \"\";\n    }\n  };\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-card-condition-numeric_state\": HaCardConditionNumericState;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}