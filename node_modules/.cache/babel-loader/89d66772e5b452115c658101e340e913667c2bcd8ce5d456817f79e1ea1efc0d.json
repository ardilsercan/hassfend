{"ast":null,"code":"import \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\n/**\n * @license\n * Copyright (c) 2017 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nexport { registerStyles, css, unsafeCSS } from './vaadin-themable-mixin.js';\n\n/**\n * This is for use internally by Lumo and Material styles.\n *\n * @param {string} id the id to set on the created element, only for informational purposes\n * @param  {CSSResultGroup[]} styles the styles to add\n */\nexport var addGlobalThemeStyles = function addGlobalThemeStyles(id) {\n  var styleTag = document.createElement('style');\n  styleTag.id = id;\n  for (var _len = arguments.length, styles = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    styles[_key - 1] = arguments[_key];\n  }\n  styleTag.textContent = styles.map(function (style) {\n    return style.toString();\n  }).join('\\n').replace(':host', 'html');\n  document.head.insertAdjacentElement('afterbegin', styleTag);\n};","map":{"version":3,"names":["registerStyles","css","unsafeCSS","addGlobalThemeStyles","id","styleTag","document","createElement","_len","arguments","length","styles","Array","_key","textContent","map","style","toString","join","replace","head","insertAdjacentElement"],"sources":["/Users/sercanardil/Desktop/frontend/node_modules/@vaadin/vaadin-themable-mixin/register-styles.js"],"sourcesContent":["/**\n * @license\n * Copyright (c) 2017 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nexport { registerStyles, css, unsafeCSS } from './vaadin-themable-mixin.js';\n\n/**\n * This is for use internally by Lumo and Material styles.\n *\n * @param {string} id the id to set on the created element, only for informational purposes\n * @param  {CSSResultGroup[]} styles the styles to add\n */\nexport const addGlobalThemeStyles = (id, ...styles) => {\n  const styleTag = document.createElement('style');\n  styleTag.id = id;\n  styleTag.textContent = styles\n    .map((style) => style.toString())\n    .join('\\n')\n    .replace(':host', 'html');\n\n  document.head.insertAdjacentElement('afterbegin', styleTag);\n};\n"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA,SAASA,cAAc,EAAEC,GAAG,EAAEC,SAAS,QAAQ,4BAA4B;;AAE3E;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAIC,EAAE,EAAgB;EACrD,IAAMC,QAAQ,GAAGC,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC;EAChDF,QAAQ,CAACD,EAAE,GAAGA,EAAE;EAAC,SAAAI,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAFyBC,MAAM,OAAAC,KAAA,CAAAJ,IAAA,OAAAA,IAAA,WAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;IAANF,MAAM,CAAAE,IAAA,QAAAJ,SAAA,CAAAI,IAAA;EAAA;EAGhDR,QAAQ,CAACS,WAAW,GAAGH,MAAM,CAC1BI,GAAG,CAAC,UAACC,KAAK;IAAA,OAAKA,KAAK,CAACC,QAAQ,CAAC,CAAC;EAAA,EAAC,CAChCC,IAAI,CAAC,IAAI,CAAC,CACVC,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC;EAE3Bb,QAAQ,CAACc,IAAI,CAACC,qBAAqB,CAAC,YAAY,EAAEhB,QAAQ,CAAC;AAC7D,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}