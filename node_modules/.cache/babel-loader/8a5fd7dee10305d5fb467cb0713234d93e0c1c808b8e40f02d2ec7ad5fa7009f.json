{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport { dump } from \"js-yaml\";\nimport { css, html, LitElement } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport { formatTimeWithSeconds } from \"../../../../../../common/datetime/format_time\";\nlet MQTTMessages = _decorate([customElement(\"mqtt-messages\")], function (_initialize, _LitElement) {\n  class MQTTMessages extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: MQTTMessages,\n    d: [{\n      kind: \"field\",\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"messages\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"direction\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"showAsYaml\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"showDeserialized\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"subscribedTopic\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"summary\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_open\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_payloadsJson\",\n      value() {\n        return new WeakMap();\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_showTopic\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"method\",\n      key: \"firstUpdated\",\n      value: function firstUpdated() {\n        this.messages.forEach(message => {\n          // If any message's topic differs from the subscribed topic, show topics + payload\n          if (this.subscribedTopic !== message.topic) {\n            this._showTopic = true;\n          }\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        return html`\n      <div\n        class=\"expander ${classMap({\n          open: this._open\n        })}\"\n        @click=${this._handleToggle}\n      >\n        ${this.summary}\n      </div>\n      ${this._open ? html`\n            <ul class=\"message-list\">\n              ${this.messages.map(message => html`\n                  <li class=\"message\">\n                    <div class=\"time\">\n                      ${this.direction}\n                      ${formatTimeWithSeconds(new Date(message.time), this.hass.locale, this.hass.config)}\n                    </div>\n                    ${this._renderSingleMessage(message)}\n                  </li>\n                `)}\n            </ul>\n          ` : \"\"}\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_renderSingleMessage\",\n      value: function _renderSingleMessage(message) {\n        const topic = message.topic;\n        return html`\n      <ul class=\"message-with-topic\">\n        ${this._showTopic ? html` <li>Topic: <code>${topic}</code></li> ` : \"\"}\n        <li>QoS: ${message.qos}${message.retain ? \", Retained\" : \"\"}</li>\n        <li>Payload: ${this._renderSinglePayload(message)}</li>\n      </ul>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_renderSinglePayload\",\n      value: function _renderSinglePayload(message) {\n        let json;\n        if (this.showDeserialized) {\n          if (!this._payloadsJson.has(message)) {\n            json = this._tryParseJson(message.payload);\n            this._payloadsJson.set(message, json);\n          } else {\n            json = this._payloadsJson.get(message);\n          }\n        }\n        return json ? html`\n          ${this.showAsYaml ? html` <pre>${dump(json)}</pre> ` : html` <pre>${JSON.stringify(json, null, 2)}</pre> `}\n        ` : html` <code>${message.payload}</code> `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_tryParseJson\",\n      value: function _tryParseJson(payload) {\n        let jsonPayload = null;\n        let o = payload;\n\n        // If the payload is a string, determine if the payload is valid JSON and if it\n        // is, assign the object representation to this._payloadJson.\n        if (typeof payload === \"string\") {\n          try {\n            o = JSON.parse(payload);\n          } catch (err) {\n            o = null;\n          }\n        }\n        // Handle non-exception-throwing cases:\n        // Neither JSON.parse(false) or JSON.parse(1234) throw errors, hence the type-checking,\n        // but... JSON.parse(null) returns null, and typeof null === \"object\",\n        // so we must check for that, too. Thankfully, null is falsey, so this suffices:\n        if (o && typeof o === \"object\") {\n          jsonPayload = o;\n        }\n        return jsonPayload;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleToggle\",\n      value: function _handleToggle() {\n        this._open = !this._open;\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css`\n      .expander {\n        cursor: pointer;\n        position: relative;\n        padding: 8px;\n        padding-left: 29px;\n        padding-inline-start: 29px\n        padding-inline-end: initial;\n        border: 1px solid var(--divider-color);\n      }\n      .expander:before {\n        content: \"\";\n        position: absolute;\n        border-right: 2px solid var(--primary-text-color);\n        border-bottom: 2px solid var(--primary-text-color);\n        width: 5px;\n        height: 5px;\n        top: 50%;\n        left: 12px;\n        transform: translateY(-50%) rotate(-45deg);\n      }\n      .expander.open:before {\n        transform: translateY(-50%) rotate(45deg);\n      }\n      .message {\n        font-size: 0.9em;\n        margin-bottom: 12px;\n      }\n      .message-list {\n        border: 1px solid var(--divider-color);\n        border-top: 0;\n        padding-left: 28px;\n        padding-inline-start: 28px;\n        padding-inline-end: initial;\n        margin: 0;\n      }\n      pre {\n        display: inline-block;\n        font-size: 0.9em;\n        margin: 0;\n        padding-left: 4px;\n        padding-right: 4px;\n        padding-inline-start: 4px;\n        padding-inline-end: 4px;\n        font-family: var(--code-font-family, monospace);\n      }\n    `;\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["dump","css","html","LitElement","customElement","property","state","classMap","formatTimeWithSeconds","MQTTMessages","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","key","value","decorators","attribute","type","Boolean","WeakMap","firstUpdated","messages","forEach","message","subscribedTopic","topic","_showTopic","render","open","_open","_handleToggle","summary","map","direction","Date","time","hass","locale","config","_renderSingleMessage","qos","retain","_renderSinglePayload","json","showDeserialized","_payloadsJson","has","_tryParseJson","payload","set","get","showAsYaml","JSON","stringify","jsonPayload","o","parse","err","static","styles"],"sources":["/workspaces/frontend/src/panels/config/devices/device-detail/integration-elements/mqtt/mqtt-messages.ts"],"sourcesContent":["import { dump } from \"js-yaml\";\nimport { css, CSSResultGroup, html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport { formatTimeWithSeconds } from \"../../../../../../common/datetime/format_time\";\nimport { MQTTMessage } from \"../../../../../../data/mqtt\";\nimport { HomeAssistant } from \"../../../../../../types\";\n\n@customElement(\"mqtt-messages\")\nclass MQTTMessages extends LitElement {\n  public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public messages!: MQTTMessage[];\n\n  @property() public direction!: string;\n\n  @property({ type: Boolean }) public showAsYaml = false;\n\n  @property({ type: Boolean }) public showDeserialized = false;\n\n  @property() public subscribedTopic!: string;\n\n  @property() public summary!: string;\n\n  @state() private _open = false;\n\n  @state() private _payloadsJson = new WeakMap();\n\n  @state() private _showTopic = false;\n\n  protected firstUpdated(): void {\n    this.messages.forEach((message) => {\n      // If any message's topic differs from the subscribed topic, show topics + payload\n      if (this.subscribedTopic !== message.topic) {\n        this._showTopic = true;\n      }\n    });\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      <div\n        class=\"expander ${classMap({ open: this._open })}\"\n        @click=${this._handleToggle}\n      >\n        ${this.summary}\n      </div>\n      ${this._open\n        ? html`\n            <ul class=\"message-list\">\n              ${this.messages.map(\n                (message) => html`\n                  <li class=\"message\">\n                    <div class=\"time\">\n                      ${this.direction}\n                      ${formatTimeWithSeconds(\n                        new Date(message.time),\n                        this.hass.locale,\n                        this.hass.config\n                      )}\n                    </div>\n                    ${this._renderSingleMessage(message)}\n                  </li>\n                `\n              )}\n            </ul>\n          `\n        : \"\"}\n    `;\n  }\n\n  private _renderSingleMessage(message): TemplateResult {\n    const topic = message.topic;\n    return html`\n      <ul class=\"message-with-topic\">\n        ${this._showTopic ? html` <li>Topic: <code>${topic}</code></li> ` : \"\"}\n        <li>QoS: ${message.qos}${message.retain ? \", Retained\" : \"\"}</li>\n        <li>Payload: ${this._renderSinglePayload(message)}</li>\n      </ul>\n    `;\n  }\n\n  private _renderSinglePayload(message): TemplateResult {\n    let json;\n\n    if (this.showDeserialized) {\n      if (!this._payloadsJson.has(message)) {\n        json = this._tryParseJson(message.payload);\n        this._payloadsJson.set(message, json);\n      } else {\n        json = this._payloadsJson.get(message);\n      }\n    }\n\n    return json\n      ? html`\n          ${this.showAsYaml\n            ? html` <pre>${dump(json)}</pre> `\n            : html` <pre>${JSON.stringify(json, null, 2)}</pre> `}\n        `\n      : html` <code>${message.payload}</code> `;\n  }\n\n  private _tryParseJson(payload) {\n    let jsonPayload = null;\n    let o = payload;\n\n    // If the payload is a string, determine if the payload is valid JSON and if it\n    // is, assign the object representation to this._payloadJson.\n    if (typeof payload === \"string\") {\n      try {\n        o = JSON.parse(payload);\n      } catch (err: any) {\n        o = null;\n      }\n    }\n    // Handle non-exception-throwing cases:\n    // Neither JSON.parse(false) or JSON.parse(1234) throw errors, hence the type-checking,\n    // but... JSON.parse(null) returns null, and typeof null === \"object\",\n    // so we must check for that, too. Thankfully, null is falsey, so this suffices:\n    if (o && typeof o === \"object\") {\n      jsonPayload = o;\n    }\n    return jsonPayload;\n  }\n\n  private _handleToggle() {\n    this._open = !this._open;\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      .expander {\n        cursor: pointer;\n        position: relative;\n        padding: 8px;\n        padding-left: 29px;\n        padding-inline-start: 29px\n        padding-inline-end: initial;\n        border: 1px solid var(--divider-color);\n      }\n      .expander:before {\n        content: \"\";\n        position: absolute;\n        border-right: 2px solid var(--primary-text-color);\n        border-bottom: 2px solid var(--primary-text-color);\n        width: 5px;\n        height: 5px;\n        top: 50%;\n        left: 12px;\n        transform: translateY(-50%) rotate(-45deg);\n      }\n      .expander.open:before {\n        transform: translateY(-50%) rotate(45deg);\n      }\n      .message {\n        font-size: 0.9em;\n        margin-bottom: 12px;\n      }\n      .message-list {\n        border: 1px solid var(--divider-color);\n        border-top: 0;\n        padding-left: 28px;\n        padding-inline-start: 28px;\n        padding-inline-end: initial;\n        margin: 0;\n      }\n      pre {\n        display: inline-block;\n        font-size: 0.9em;\n        margin: 0;\n        padding-left: 4px;\n        padding-right: 4px;\n        padding-inline-start: 4px;\n        padding-inline-end: 4px;\n        font-family: var(--code-font-family, monospace);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"mqtt-messages\": MQTTMessages;\n  }\n}\n"],"mappings":";AAAA,SAASA,IAAI,QAAQ,SAAS;AAC9B,SAASC,GAAG,EAAkBC,IAAI,EAAEC,UAAU,QAAwB,KAAK;AAC3E,SAASC,aAAa,EAAEC,QAAQ,EAAEC,KAAK,QAAQ,gBAAgB;AAC/D,SAASC,QAAQ,QAAQ,0BAA0B;AACnD,SAASC,qBAAqB,QAAQ,+CAA+C;AAAC,IAKhFC,YAAY,GAAAC,SAAA,EADjBN,aAAa,CAAC,eAAe,CAAC,aAAAO,WAAA,EAAAC,WAAA;EAA/B,MACMH,YAAY,SAAAG,WAAA,CAAoB;IAAAC,YAAA,GAAAC,IAAA;MAAA,SAAAA,IAAA;MAAAH,WAAA;IAAA;EA0KtC;EAAC;IAAAI,CAAA,EA1KKN,YAAY;IAAAO,CAAA;MAAAC,IAAA;MAAAC,GAAA;MAAAC,KAAA;IAAA;MAAAF,IAAA;MAAAG,UAAA,GAGff,QAAQ,CAAC;QAAEgB,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAH,GAAA;MAAAC,KAAA;IAAA;MAAAF,IAAA;MAAAG,UAAA,GAE9Bf,QAAQ,CAAC,CAAC;MAAAa,GAAA;MAAAC,KAAA;IAAA;MAAAF,IAAA;MAAAG,UAAA,GAEVf,QAAQ,CAAC;QAAEiB,IAAI,EAAEC;MAAQ,CAAC,CAAC;MAAAL,GAAA;MAAAC,MAAA;QAAA,OAAqB,KAAK;MAAA;IAAA;MAAAF,IAAA;MAAAG,UAAA,GAErDf,QAAQ,CAAC;QAAEiB,IAAI,EAAEC;MAAQ,CAAC,CAAC;MAAAL,GAAA;MAAAC,MAAA;QAAA,OAA2B,KAAK;MAAA;IAAA;MAAAF,IAAA;MAAAG,UAAA,GAE3Df,QAAQ,CAAC,CAAC;MAAAa,GAAA;MAAAC,KAAA;IAAA;MAAAF,IAAA;MAAAG,UAAA,GAEVf,QAAQ,CAAC,CAAC;MAAAa,GAAA;MAAAC,KAAA;IAAA;MAAAF,IAAA;MAAAG,UAAA,GAEVd,KAAK,CAAC,CAAC;MAAAY,GAAA;MAAAC,MAAA;QAAA,OAAiB,KAAK;MAAA;IAAA;MAAAF,IAAA;MAAAG,UAAA,GAE7Bd,KAAK,CAAC,CAAC;MAAAY,GAAA;MAAAC,MAAA;QAAA,OAAyB,IAAIK,OAAO,CAAC,CAAC;MAAA;IAAA;MAAAP,IAAA;MAAAG,UAAA,GAE7Cd,KAAK,CAAC,CAAC;MAAAY,GAAA;MAAAC,MAAA;QAAA,OAAsB,KAAK;MAAA;IAAA;MAAAF,IAAA;MAAAC,GAAA;MAAAC,KAAA,EAEnC,SAAAM,aAAA,EAA+B;QAC7B,IAAI,CAACC,QAAQ,CAACC,OAAO,CAAEC,OAAO,IAAK;UACjC;UACA,IAAI,IAAI,CAACC,eAAe,KAAKD,OAAO,CAACE,KAAK,EAAE;YAC1C,IAAI,CAACC,UAAU,GAAG,IAAI;UACxB;QACF,CAAC,CAAC;MACJ;IAAC;MAAAd,IAAA;MAAAC,GAAA;MAAAC,KAAA,EAED,SAAAa,OAAA,EAAmC;QACjC,OAAO9B,IAAK;AAChB;AACA,0BAA0BK,QAAQ,CAAC;UAAE0B,IAAI,EAAE,IAAI,CAACC;QAAM,CAAC,CAAE;AACzD,iBAAiB,IAAI,CAACC,aAAc;AACpC;AACA,UAAU,IAAI,CAACC,OAAQ;AACvB;AACA,QAAQ,IAAI,CAACF,KAAK,GACRhC,IAAK;AACf;AACA,gBAAgB,IAAI,CAACwB,QAAQ,CAACW,GAAG,CAChBT,OAAO,IAAK1B,IAAK;AAClC;AACA;AACA,wBAAwB,IAAI,CAACoC,SAAU;AACvC,wBAAwB9B,qBAAqB,CACrB,IAAI+B,IAAI,CAACX,OAAO,CAACY,IAAI,CAAC,EACtB,IAAI,CAACC,IAAI,CAACC,MAAM,EAChB,IAAI,CAACD,IAAI,CAACE,MACZ,CAAE;AACxB;AACA,sBAAsB,IAAI,CAACC,oBAAoB,CAAChB,OAAO,CAAE;AACzD;AACA,iBACc,CAAE;AAChB;AACA,WAAW,GACD,EAAG;AACb,KAAK;MACH;IAAC;MAAAX,IAAA;MAAAC,GAAA;MAAAC,KAAA,EAED,SAAAyB,qBAA6BhB,OAAO,EAAkB;QACpD,MAAME,KAAK,GAAGF,OAAO,CAACE,KAAK;QAC3B,OAAO5B,IAAK;AAChB;AACA,UAAU,IAAI,CAAC6B,UAAU,GAAG7B,IAAK,qBAAoB4B,KAAM,eAAc,GAAG,EAAG;AAC/E,mBAAmBF,OAAO,CAACiB,GAAI,GAAEjB,OAAO,CAACkB,MAAM,GAAG,YAAY,GAAG,EAAG;AACpE,uBAAuB,IAAI,CAACC,oBAAoB,CAACnB,OAAO,CAAE;AAC1D;AACA,KAAK;MACH;IAAC;MAAAX,IAAA;MAAAC,GAAA;MAAAC,KAAA,EAED,SAAA4B,qBAA6BnB,OAAO,EAAkB;QACpD,IAAIoB,IAAI;QAER,IAAI,IAAI,CAACC,gBAAgB,EAAE;UACzB,IAAI,CAAC,IAAI,CAACC,aAAa,CAACC,GAAG,CAACvB,OAAO,CAAC,EAAE;YACpCoB,IAAI,GAAG,IAAI,CAACI,aAAa,CAACxB,OAAO,CAACyB,OAAO,CAAC;YAC1C,IAAI,CAACH,aAAa,CAACI,GAAG,CAAC1B,OAAO,EAAEoB,IAAI,CAAC;UACvC,CAAC,MAAM;YACLA,IAAI,GAAG,IAAI,CAACE,aAAa,CAACK,GAAG,CAAC3B,OAAO,CAAC;UACxC;QACF;QAEA,OAAOoB,IAAI,GACP9C,IAAK;AACb,YAAY,IAAI,CAACsD,UAAU,GACbtD,IAAK,SAAQF,IAAI,CAACgD,IAAI,CAAE,SAAQ,GAChC9C,IAAK,SAAQuD,IAAI,CAACC,SAAS,CAACV,IAAI,EAAE,IAAI,EAAE,CAAC,CAAE,SAAS;AAClE,SAAS,GACD9C,IAAK,UAAS0B,OAAO,CAACyB,OAAQ,UAAS;MAC7C;IAAC;MAAApC,IAAA;MAAAC,GAAA;MAAAC,KAAA,EAED,SAAAiC,cAAsBC,OAAO,EAAE;QAC7B,IAAIM,WAAW,GAAG,IAAI;QACtB,IAAIC,CAAC,GAAGP,OAAO;;QAEf;QACA;QACA,IAAI,OAAOA,OAAO,KAAK,QAAQ,EAAE;UAC/B,IAAI;YACFO,CAAC,GAAGH,IAAI,CAACI,KAAK,CAACR,OAAO,CAAC;UACzB,CAAC,CAAC,OAAOS,GAAQ,EAAE;YACjBF,CAAC,GAAG,IAAI;UACV;QACF;QACA;QACA;QACA;QACA;QACA,IAAIA,CAAC,IAAI,OAAOA,CAAC,KAAK,QAAQ,EAAE;UAC9BD,WAAW,GAAGC,CAAC;QACjB;QACA,OAAOD,WAAW;MACpB;IAAC;MAAA1C,IAAA;MAAAC,GAAA;MAAAC,KAAA,EAED,SAAAgB,cAAA,EAAwB;QACtB,IAAI,CAACD,KAAK,GAAG,CAAC,IAAI,CAACA,KAAK;MAC1B;IAAC;MAAAjB,IAAA;MAAA8C,MAAA;MAAA7C,GAAA;MAAAC,KAAA,EAED,SAAA6C,OAAA,EAAoC;QAClC,OAAO/D,GAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;MACH;IAAC;EAAA;AAAA,GAzKwBE,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}