{"ast":null,"code":"import \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.string.pad-start.js\";\nexport var stateToIsoDateString = function stateToIsoDateString(entityState) {\n  return \"\".concat(entityState.attributes.year || \"1970\", \"-\").concat(String(entityState.attributes.month || \"01\").padStart(2, \"0\"), \"-\").concat(String(entityState.attributes.day || \"01\").padStart(2, \"0\"), \"T\").concat(String(entityState.attributes.hour || \"00\").padStart(2, \"0\"), \":\").concat(String(entityState.attributes.minute || \"00\").padStart(2, \"0\"), \":\").concat(String(entityState.attributes.second || \"00\").padStart(2, \"0\"));\n};\nexport var setInputDateTimeValue = function setInputDateTimeValue(hass, entityId) {\n  var time = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n  var date = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : undefined;\n  var param = {\n    entity_id: entityId,\n    time: time,\n    date: date\n  };\n  hass.callService(\"input_datetime\", \"set_datetime\", param);\n};\nexport var fetchInputDateTime = function fetchInputDateTime(hass) {\n  return hass.callWS({\n    type: \"input_datetime/list\"\n  });\n};\nexport var createInputDateTime = function createInputDateTime(hass, values) {\n  return hass.callWS(Object.assign({\n    type: \"input_datetime/create\"\n  }, values));\n};\nexport var updateInputDateTime = function updateInputDateTime(hass, id, updates) {\n  return hass.callWS(Object.assign({\n    type: \"input_datetime/update\",\n    input_datetime_id: id\n  }, updates));\n};\nexport var deleteInputDateTime = function deleteInputDateTime(hass, id) {\n  return hass.callWS({\n    type: \"input_datetime/delete\",\n    input_datetime_id: id\n  });\n};","map":{"version":3,"names":["stateToIsoDateString","entityState","concat","attributes","year","String","month","padStart","day","hour","minute","second","setInputDateTimeValue","hass","entityId","time","arguments","length","undefined","date","param","entity_id","callService","fetchInputDateTime","callWS","type","createInputDateTime","values","Object","assign","updateInputDateTime","id","updates","input_datetime_id","deleteInputDateTime"],"sources":["/workspaces/frontend/src/data/input_datetime.ts"],"sourcesContent":["import { HassEntity } from \"home-assistant-js-websocket\";\nimport { HomeAssistant } from \"../types\";\n\nexport interface InputDateTime {\n  id: string;\n  name: string;\n  icon?: string;\n  initial?: string;\n  has_time: boolean;\n  has_date: boolean;\n}\n\nexport interface InputDateTimeMutableParams {\n  name: string;\n  icon: string;\n  initial: string;\n  has_time: boolean;\n  has_date: boolean;\n}\n\nexport const stateToIsoDateString = (entityState: HassEntity) =>\n  `${entityState.attributes.year || \"1970\"}-${String(\n    entityState.attributes.month || \"01\"\n  ).padStart(2, \"0\")}-${String(entityState.attributes.day || \"01\").padStart(\n    2,\n    \"0\"\n  )}T${String(entityState.attributes.hour || \"00\").padStart(2, \"0\")}:${String(\n    entityState.attributes.minute || \"00\"\n  ).padStart(2, \"0\")}:${String(entityState.attributes.second || \"00\").padStart(\n    2,\n    \"0\"\n  )}`;\n\nexport const setInputDateTimeValue = (\n  hass: HomeAssistant,\n  entityId: string,\n  time: string | undefined = undefined,\n  date: string | undefined = undefined\n) => {\n  const param = { entity_id: entityId, time, date };\n  hass.callService(\"input_datetime\", \"set_datetime\", param);\n};\n\nexport const fetchInputDateTime = (hass: HomeAssistant) =>\n  hass.callWS<InputDateTime[]>({ type: \"input_datetime/list\" });\n\nexport const createInputDateTime = (\n  hass: HomeAssistant,\n  values: InputDateTimeMutableParams\n) =>\n  hass.callWS<InputDateTime>({\n    type: \"input_datetime/create\",\n    ...values,\n  });\n\nexport const updateInputDateTime = (\n  hass: HomeAssistant,\n  id: string,\n  updates: Partial<InputDateTimeMutableParams>\n) =>\n  hass.callWS<InputDateTime>({\n    type: \"input_datetime/update\",\n    input_datetime_id: id,\n    ...updates,\n  });\n\nexport const deleteInputDateTime = (hass: HomeAssistant, id: string) =>\n  hass.callWS({\n    type: \"input_datetime/delete\",\n    input_datetime_id: id,\n  });\n"],"mappings":";;;AAoBA,OAAO,IAAMA,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAIC,WAAuB;EAAA,UAAAC,MAAA,CACvDD,WAAW,CAACE,UAAU,CAACC,IAAI,IAAI,MAAM,OAAAF,MAAA,CAAIG,MAAM,CAChDJ,WAAW,CAACE,UAAU,CAACG,KAAK,IAAI,IAClC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,OAAAL,MAAA,CAAIG,MAAM,CAACJ,WAAW,CAACE,UAAU,CAACK,GAAG,IAAI,IAAI,CAAC,CAACD,QAAQ,CACvE,CAAC,EACD,GACF,CAAC,OAAAL,MAAA,CAAIG,MAAM,CAACJ,WAAW,CAACE,UAAU,CAACM,IAAI,IAAI,IAAI,CAAC,CAACF,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,OAAAL,MAAA,CAAIG,MAAM,CACzEJ,WAAW,CAACE,UAAU,CAACO,MAAM,IAAI,IACnC,CAAC,CAACH,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,OAAAL,MAAA,CAAIG,MAAM,CAACJ,WAAW,CAACE,UAAU,CAACQ,MAAM,IAAI,IAAI,CAAC,CAACJ,QAAQ,CAC1E,CAAC,EACD,GACF,CAAC;AAAA,CAAE;AAEL,OAAO,IAAMK,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAChCC,IAAmB,EACnBC,QAAgB,EAGb;EAAA,IAFHC,IAAwB,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGE,SAAS;EAAA,IACpCC,IAAwB,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGE,SAAS;EAEpC,IAAME,KAAK,GAAG;IAAEC,SAAS,EAAEP,QAAQ;IAAEC,IAAI,EAAJA,IAAI;IAAEI,IAAI,EAAJA;EAAK,CAAC;EACjDN,IAAI,CAACS,WAAW,CAAC,gBAAgB,EAAE,cAAc,EAAEF,KAAK,CAAC;AAC3D,CAAC;AAED,OAAO,IAAMG,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAIV,IAAmB;EAAA,OACpDA,IAAI,CAACW,MAAM,CAAkB;IAAEC,IAAI,EAAE;EAAsB,CAAC,CAAC;AAAA;AAE/D,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAC9Bb,IAAmB,EACnBc,MAAkC;EAAA,OAElCd,IAAI,CAACW,MAAM,CAAAI,MAAA,CAAAC,MAAA;IACTJ,IAAI,EAAE;EAAuB,GAC1BE,MAAM,CACV,CAAC;AAAA;AAEJ,OAAO,IAAMG,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAC9BjB,IAAmB,EACnBkB,EAAU,EACVC,OAA4C;EAAA,OAE5CnB,IAAI,CAACW,MAAM,CAAAI,MAAA,CAAAC,MAAA;IACTJ,IAAI,EAAE,uBAAuB;IAC7BQ,iBAAiB,EAAEF;EAAE,GAClBC,OAAO,CACX,CAAC;AAAA;AAEJ,OAAO,IAAME,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAIrB,IAAmB,EAAEkB,EAAU;EAAA,OACjElB,IAAI,CAACW,MAAM,CAAC;IACVC,IAAI,EAAE,uBAAuB;IAC7BQ,iBAAiB,EAAEF;EACrB,CAAC,CAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}