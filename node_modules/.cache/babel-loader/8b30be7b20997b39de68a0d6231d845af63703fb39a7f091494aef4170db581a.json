{"ast":null,"code":"import { navigate } from \"../common/navigate\";\nexport var SCENE_IGNORED_DOMAINS = [\"binary_sensor\", \"button\", \"configuration\", \"device_tracker\", \"event\", \"image_processing\", \"input_button\", \"persistent_notification\", \"person\", \"scene\", \"schedule\", \"sensor\", \"sun\", \"update\", \"weather\", \"zone\"];\nvar inititialSceneEditorData;\nexport var showSceneEditor = function showSceneEditor(config, areaId) {\n  inititialSceneEditorData = {\n    config: config,\n    areaId: areaId\n  };\n  navigate(\"/config/scene/edit/new\");\n};\nexport var getSceneEditorInitData = function getSceneEditorInitData() {\n  var data = inititialSceneEditorData;\n  inititialSceneEditorData = undefined;\n  return data;\n};\nexport var activateScene = function activateScene(hass, entityId) {\n  return hass.callService(\"scene\", \"turn_on\", {\n    entity_id: entityId\n  });\n};\nexport var applyScene = function applyScene(hass, entities) {\n  return hass.callService(\"scene\", \"apply\", {\n    entities: entities\n  });\n};\nexport var getSceneConfig = function getSceneConfig(hass, sceneId) {\n  return hass.callApi(\"GET\", \"config/scene/config/\".concat(sceneId));\n};\nexport var saveScene = function saveScene(hass, sceneId, config) {\n  return hass.callApi(\"POST\", \"config/scene/config/\".concat(sceneId), config);\n};\nexport var deleteScene = function deleteScene(hass, id) {\n  return hass.callApi(\"DELETE\", \"config/scene/config/\".concat(id));\n};","map":{"version":3,"names":["navigate","SCENE_IGNORED_DOMAINS","inititialSceneEditorData","showSceneEditor","config","areaId","getSceneEditorInitData","data","undefined","activateScene","hass","entityId","callService","entity_id","applyScene","entities","getSceneConfig","sceneId","callApi","concat","saveScene","deleteScene","id"],"sources":["/Users/sercanardil/Desktop/frontend/src/data/scene.ts"],"sourcesContent":["import {\n  HassEntityAttributeBase,\n  HassEntityBase,\n} from \"home-assistant-js-websocket\";\nimport { navigate } from \"../common/navigate\";\nimport { HomeAssistant, ServiceCallResponse } from \"../types\";\n\nexport const SCENE_IGNORED_DOMAINS = [\n  \"binary_sensor\",\n  \"button\",\n  \"configuration\",\n  \"device_tracker\",\n  \"event\",\n  \"image_processing\",\n  \"input_button\",\n  \"persistent_notification\",\n  \"person\",\n  \"scene\",\n  \"schedule\",\n  \"sensor\",\n  \"sun\",\n  \"update\",\n  \"weather\",\n  \"zone\",\n];\n\nlet inititialSceneEditorData:\n  | { config?: Partial<SceneConfig>; areaId?: string }\n  | undefined;\n\nexport const showSceneEditor = (\n  config?: Partial<SceneConfig>,\n  areaId?: string\n) => {\n  inititialSceneEditorData = { config, areaId };\n  navigate(\"/config/scene/edit/new\");\n};\n\nexport const getSceneEditorInitData = () => {\n  const data = inititialSceneEditorData;\n  inititialSceneEditorData = undefined;\n  return data;\n};\n\nexport interface SceneEntity extends HassEntityBase {\n  attributes: HassEntityAttributeBase & { id?: string };\n}\n\nexport interface SceneConfig {\n  id?: string;\n  name: string;\n  icon?: string;\n  entities: SceneEntities;\n  metadata?: SceneMetaData;\n}\n\nexport interface SceneEntities {\n  [entityId: string]: string | { state: string; [key: string]: any };\n}\n\nexport interface SceneMetaData {\n  [entityId: string]: { entity_only?: boolean | undefined };\n}\n\nexport const activateScene = (\n  hass: HomeAssistant,\n  entityId: string\n): Promise<ServiceCallResponse> =>\n  hass.callService(\"scene\", \"turn_on\", { entity_id: entityId });\n\nexport const applyScene = (\n  hass: HomeAssistant,\n  entities: SceneEntities\n): Promise<ServiceCallResponse> =>\n  hass.callService(\"scene\", \"apply\", { entities });\n\nexport const getSceneConfig = (\n  hass: HomeAssistant,\n  sceneId: string\n): Promise<SceneConfig> =>\n  hass.callApi<SceneConfig>(\"GET\", `config/scene/config/${sceneId}`);\n\nexport const saveScene = (\n  hass: HomeAssistant,\n  sceneId: string,\n  config: SceneConfig\n) => hass.callApi(\"POST\", `config/scene/config/${sceneId}`, config);\n\nexport const deleteScene = (hass: HomeAssistant, id: string) =>\n  hass.callApi(\"DELETE\", `config/scene/config/${id}`);\n"],"mappings":"AAIA,SAASA,QAAQ,QAAQ,oBAAoB;AAG7C,OAAO,IAAMC,qBAAqB,GAAG,CACnC,eAAe,EACf,QAAQ,EACR,eAAe,EACf,gBAAgB,EAChB,OAAO,EACP,kBAAkB,EAClB,cAAc,EACd,yBAAyB,EACzB,QAAQ,EACR,OAAO,EACP,UAAU,EACV,QAAQ,EACR,KAAK,EACL,QAAQ,EACR,SAAS,EACT,MAAM,CACP;AAED,IAAIC,wBAES;AAEb,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAC1BC,MAA6B,EAC7BC,MAAe,EACZ;EACHH,wBAAwB,GAAG;IAAEE,MAAM,EAANA,MAAM;IAAEC,MAAM,EAANA;EAAO,CAAC;EAC7CL,QAAQ,CAAC,wBAAwB,CAAC;AACpC,CAAC;AAED,OAAO,IAAMM,sBAAsB,GAAG,SAAzBA,sBAAsBA,CAAA,EAAS;EAC1C,IAAMC,IAAI,GAAGL,wBAAwB;EACrCA,wBAAwB,GAAGM,SAAS;EACpC,OAAOD,IAAI;AACb,CAAC;AAsBD,OAAO,IAAME,aAAa,GAAG,SAAhBA,aAAaA,CACxBC,IAAmB,EACnBC,QAAgB;EAAA,OAEhBD,IAAI,CAACE,WAAW,CAAC,OAAO,EAAE,SAAS,EAAE;IAAEC,SAAS,EAAEF;EAAS,CAAC,CAAC;AAAA;AAE/D,OAAO,IAAMG,UAAU,GAAG,SAAbA,UAAUA,CACrBJ,IAAmB,EACnBK,QAAuB;EAAA,OAEvBL,IAAI,CAACE,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE;IAAEG,QAAQ,EAARA;EAAS,CAAC,CAAC;AAAA;AAElD,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CACzBN,IAAmB,EACnBO,OAAe;EAAA,OAEfP,IAAI,CAACQ,OAAO,CAAc,KAAK,yBAAAC,MAAA,CAAyBF,OAAO,CAAE,CAAC;AAAA;AAEpE,OAAO,IAAMG,SAAS,GAAG,SAAZA,SAASA,CACpBV,IAAmB,EACnBO,OAAe,EACfb,MAAmB;EAAA,OAChBM,IAAI,CAACQ,OAAO,CAAC,MAAM,yBAAAC,MAAA,CAAyBF,OAAO,GAAIb,MAAM,CAAC;AAAA;AAEnE,OAAO,IAAMiB,WAAW,GAAG,SAAdA,WAAWA,CAAIX,IAAmB,EAAEY,EAAU;EAAA,OACzDZ,IAAI,CAACQ,OAAO,CAAC,QAAQ,yBAAAC,MAAA,CAAyBG,EAAE,CAAE,CAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}