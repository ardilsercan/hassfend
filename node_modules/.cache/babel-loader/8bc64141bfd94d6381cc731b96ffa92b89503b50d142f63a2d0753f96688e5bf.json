{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport { LitElement, css, html, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { ifDefined } from \"lit/directives/if-defined\";\nimport { formatDateWeekdayShort } from \"../../../common/datetime/format_date\";\nimport { formatTime } from \"../../../common/datetime/format_time\";\nimport { applyThemesOnElement } from \"../../../common/dom/apply_themes_on_element\";\nimport { computeStateName } from \"../../../common/entity/compute_state_name\";\nimport { isValidEntityId } from \"../../../common/entity/valid_entity_id\";\nimport { formatNumber } from \"../../../common/number/format_number\";\nimport { debounce } from \"../../../common/util/debounce\";\nimport \"../../../components/ha-card\";\nimport \"../../../components/ha-svg-icon\";\nimport { UNAVAILABLE } from \"../../../data/entity\";\nimport { getForecast, getSecondaryWeatherAttribute, getWeatherStateIcon, getWeatherUnit, getWind, subscribeForecast, weatherAttrIcons, weatherSVGStyles } from \"../../../data/weather\";\nimport { loadPolyfillIfNeeded } from \"../../../resources/resize-observer.polyfill\";\nimport { actionHandler } from \"../common/directives/action-handler-directive\";\nimport { findEntities } from \"../common/find-entities\";\nimport { handleAction } from \"../common/handle-action\";\nimport { hasAction } from \"../common/has-action\";\nimport { hasConfigOrEntityChanged } from \"../common/has-changed\";\nimport { createEntityNotFoundWarning } from \"../components/hui-warning\";\nlet HuiWeatherForecastCard = _decorate([customElement(\"hui-weather-forecast-card\")], function (_initialize, _LitElement) {\n  class HuiWeatherForecastCard extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HuiWeatherForecastCard,\n    d: [{\n      kind: \"method\",\n      static: true,\n      key: \"getConfigElement\",\n      value: async function getConfigElement() {\n        await import(\"../editor/config-elements/hui-weather-forecast-card-editor\");\n        return document.createElement(\"hui-weather-forecast-card-editor\");\n      }\n    }, {\n      kind: \"method\",\n      static: true,\n      key: \"getStubConfig\",\n      value: function getStubConfig(hass, entities, entitiesFallback) {\n        const includeDomains = [\"weather\"];\n        const maxEntities = 1;\n        const foundEntities = findEntities(hass, maxEntities, entities, entitiesFallback, includeDomains);\n        return {\n          type: \"weather-forecast\",\n          entity: foundEntities[0] || \"\"\n        };\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_config\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_forecastEvent\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_subscribed\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        reflect: true\n      })],\n      key: \"veryVeryNarrow\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_resizeObserver\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"_needForecastSubscription\",\n      value:\n      // @todo Consider reworking to eliminate need for attribute since it is manipulated internally\n\n      function _needForecastSubscription() {\n        return this._config.forecast_type && this._config.forecast_type !== \"legacy\";\n      }\n    }, {\n      kind: \"method\",\n      key: \"_unsubscribeForecastEvents\",\n      value: function _unsubscribeForecastEvents() {\n        if (this._subscribed) {\n          this._subscribed.then(unsub => unsub());\n          this._subscribed = undefined;\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_subscribeForecastEvents\",\n      value: async function _subscribeForecastEvents() {\n        this._unsubscribeForecastEvents();\n        if (!this.isConnected || !this.hass || !this._config || !this._needForecastSubscription()) {\n          return;\n        }\n        this._subscribed = subscribeForecast(this.hass, this._config.entity, this._config.forecast_type, event => {\n          this._forecastEvent = event;\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"connectedCallback\",\n      value: function connectedCallback() {\n        _get(_getPrototypeOf(HuiWeatherForecastCard.prototype), \"connectedCallback\", this).call(this);\n        if (this.hasUpdated && this._config && this.hass) {\n          this._subscribeForecastEvents();\n        }\n        this.updateComplete.then(() => this._attachObserver());\n      }\n    }, {\n      kind: \"method\",\n      key: \"disconnectedCallback\",\n      value: function disconnectedCallback() {\n        _get(_getPrototypeOf(HuiWeatherForecastCard.prototype), \"disconnectedCallback\", this).call(this);\n        if (this._resizeObserver) {\n          this._resizeObserver.disconnect();\n        }\n        this._unsubscribeForecastEvents();\n      }\n    }, {\n      kind: \"method\",\n      key: \"getCardSize\",\n      value: function getCardSize() {\n        var _this$_config, _this$_config2;\n        let cardSize = 0;\n        if (((_this$_config = this._config) === null || _this$_config === void 0 ? void 0 : _this$_config.show_current) !== false) {\n          cardSize += 2;\n        }\n        if (((_this$_config2 = this._config) === null || _this$_config2 === void 0 ? void 0 : _this$_config2.show_forecast) !== false) {\n          cardSize += 3;\n        }\n        return cardSize;\n      }\n    }, {\n      kind: \"method\",\n      key: \"setConfig\",\n      value: function setConfig(config) {\n        if (!config.entity) {\n          throw new Error(\"Entity must be specified\");\n        }\n        if (!isValidEntityId(config.entity)) {\n          throw new Error(\"Invalid entity\");\n        }\n        this._config = config;\n      }\n    }, {\n      kind: \"method\",\n      key: \"shouldUpdate\",\n      value: function shouldUpdate(changedProps) {\n        return hasConfigOrEntityChanged(this, changedProps) || changedProps.size > 1 || !changedProps.has(\"hass\");\n      }\n    }, {\n      kind: \"method\",\n      key: \"willUpdate\",\n      value: function willUpdate() {\n        if (!this.hasUpdated) {\n          this._measureCard();\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"firstUpdated\",\n      value: function firstUpdated() {\n        this._attachObserver();\n      }\n    }, {\n      kind: \"method\",\n      key: \"updated\",\n      value: function updated(changedProps) {\n        _get(_getPrototypeOf(HuiWeatherForecastCard.prototype), \"updated\", this).call(this, changedProps);\n        if (!this._config || !this.hass) {\n          return;\n        }\n        if (changedProps.has(\"_config\") || !this._subscribed) {\n          this._subscribeForecastEvents();\n        }\n        const oldHass = changedProps.get(\"hass\");\n        const oldConfig = changedProps.get(\"_config\");\n        if (changedProps.has(\"hass\") && !oldHass || changedProps.has(\"_config\") && !oldConfig || changedProps.has(\"hass\") && oldHass.themes !== this.hass.themes || changedProps.has(\"_config\") && oldConfig.theme !== this._config.theme) {\n          applyThemesOnElement(this, this.hass.themes, this._config.theme);\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var _this$_config3, _this$_config4, _forecastData$forecas, _this$_config5, _this$_config$name;\n        if (!this._config || !this.hass) {\n          return nothing;\n        }\n        const stateObj = this.hass.states[this._config.entity];\n        if (!stateObj) {\n          return html`\n        <hui-warning>\n          ${createEntityNotFoundWarning(this.hass, this._config.entity)}\n        </hui-warning>\n      `;\n        }\n        if (stateObj.state === UNAVAILABLE) {\n          return html`\n        <ha-card class=\"unavailable\" @click=${this._handleAction}>\n          ${this.hass.localize(\"ui.panel.lovelace.warning.entity_unavailable\", {\n            entity: `${computeStateName(stateObj)} (${this._config.entity})`\n          })}\n        </ha-card>\n      `;\n        }\n        const forecastData = getForecast(stateObj.attributes, this._forecastEvent, (_this$_config3 = this._config) === null || _this$_config3 === void 0 ? void 0 : _this$_config3.forecast_type);\n        const forecast = ((_this$_config4 = this._config) === null || _this$_config4 === void 0 ? void 0 : _this$_config4.show_forecast) !== false && forecastData !== null && forecastData !== void 0 && (_forecastData$forecas = forecastData.forecast) !== null && _forecastData$forecas !== void 0 && _forecastData$forecas.length ? forecastData.forecast.slice(0, this.veryVeryNarrow ? 3 : 5) : undefined;\n        const weather = !forecast || ((_this$_config5 = this._config) === null || _this$_config5 === void 0 ? void 0 : _this$_config5.show_current) !== false;\n        const hourly = (forecastData === null || forecastData === void 0 ? void 0 : forecastData.type) === \"hourly\";\n        const dayNight = (forecastData === null || forecastData === void 0 ? void 0 : forecastData.type) === \"twice_daily\";\n        const weatherStateIcon = getWeatherStateIcon(stateObj.state, this);\n        const name = (_this$_config$name = this._config.name) !== null && _this$_config$name !== void 0 ? _this$_config$name : computeStateName(stateObj);\n        return html`\n      <ha-card\n        @action=${this._handleAction}\n        .actionHandler=${actionHandler({\n          hasHold: hasAction(this._config.hold_action),\n          hasDoubleClick: hasAction(this._config.double_tap_action)\n        })}\n        tabindex=${ifDefined(hasAction(this._config.tap_action) ? \"0\" : undefined)}\n      >\n        ${weather ? html`\n              <div class=\"content\">\n                <div class=\"icon-image\">\n                  ${weatherStateIcon || html`\n                    <ha-state-icon\n                      class=\"weather-icon\"\n                      .stateObj=${stateObj}\n                      .hass=${this.hass}\n                    ></ha-state-icon>\n                  `}\n                </div>\n                <div class=\"info\">\n                  <div class=\"name-state\">\n                    <div class=\"state\">\n                      ${this.hass.formatEntityState(stateObj)}\n                    </div>\n                    <div class=\"name\" .title=${name}>${name}</div>\n                  </div>\n                  <div class=\"temp-attribute\">\n                    <div class=\"temp\">\n                      ${stateObj.attributes.temperature !== undefined && stateObj.attributes.temperature !== null ? html`\n                            ${formatNumber(stateObj.attributes.temperature, this.hass.locale)}&nbsp;<span\n                              >${getWeatherUnit(this.hass.config, stateObj, \"temperature\")}</span\n                            >\n                          ` : html`&nbsp;`}\n                    </div>\n                    <div class=\"attribute\">\n                      ${this._config.secondary_info_attribute !== undefined ? html`\n                            ${this._config.secondary_info_attribute in weatherAttrIcons ? html`\n                                  <ha-svg-icon\n                                    class=\"attr-icon\"\n                                    .path=${weatherAttrIcons[this._config.secondary_info_attribute]}\n                                  ></ha-svg-icon>\n                                ` : this.hass.localize(`ui.card.weather.attributes.${this._config.secondary_info_attribute}`)}\n                            ${this._config.secondary_info_attribute === \"wind_speed\" ? getWind(this.hass, stateObj, stateObj.attributes.wind_speed, stateObj.attributes.wind_bearing) : html`\n                                  ${this.hass.formatEntityAttributeValue(stateObj, this._config.secondary_info_attribute)}\n                                `}\n                          ` : getSecondaryWeatherAttribute(this.hass, stateObj, forecast)}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ` : \"\"}\n        ${forecast ? html`\n              <div class=\"forecast\">\n                ${forecast.map(item => this._showValue(item.templow) || this._showValue(item.temperature) ? html`\n                        <div>\n                          <div>\n                            ${dayNight ? html`\n                                  ${formatDateWeekdayShort(new Date(item.datetime), this.hass.locale, this.hass.config)}\n                                  <div class=\"daynight\">\n                                    ${item.is_daytime !== false ? this.hass.localize(\"ui.card.weather.day\") : this.hass.localize(\"ui.card.weather.night\")}<br />\n                                  </div>\n                                ` : hourly ? html`\n                                    ${formatTime(new Date(item.datetime), this.hass.locale, this.hass.config)}\n                                  ` : html`\n                                    ${formatDateWeekdayShort(new Date(item.datetime), this.hass.locale, this.hass.config)}\n                                  `}\n                          </div>\n                          ${this._showValue(item.condition) ? html`\n                                <div class=\"forecast-image-icon\">\n                                  ${getWeatherStateIcon(item.condition, this, !(item.is_daytime || item.is_daytime === undefined))}\n                                </div>\n                              ` : \"\"}\n                          <div class=\"temp\">\n                            ${this._showValue(item.temperature) ? html`${formatNumber(item.temperature, this.hass.locale)}°` : \"—\"}\n                          </div>\n                          <div class=\"templow\">\n                            ${this._showValue(item.templow) ? html`${formatNumber(item.templow, this.hass.locale)}°` : hourly ? \"\" : \"—\"}\n                          </div>\n                        </div>\n                      ` : \"\")}\n              </div>\n            ` : \"\"}\n      </ha-card>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleAction\",\n      value: function _handleAction(ev) {\n        handleAction(this, this.hass, this._config, ev.detail.action);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_attachObserver\",\n      value: async function _attachObserver() {\n        if (!this._resizeObserver) {\n          await loadPolyfillIfNeeded();\n          this._resizeObserver = new ResizeObserver(debounce(() => this._measureCard(), 250, false));\n        }\n        const card = this.shadowRoot.querySelector(\"ha-card\");\n        // If we show an error or warning there is no ha-card\n        if (!card) {\n          return;\n        }\n        this._resizeObserver.observe(card);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_measureCard\",\n      value: function _measureCard() {\n        if (!this.isConnected) {\n          return;\n        }\n        const card = this.shadowRoot.querySelector(\"ha-card\");\n        // If we show an error or warning there is no ha-card\n        if (!card) {\n          return;\n        }\n        if (card.offsetWidth < 375) {\n          this.setAttribute(\"narrow\", \"\");\n        } else {\n          this.removeAttribute(\"narrow\");\n        }\n        if (card.offsetWidth < 300) {\n          this.setAttribute(\"verynarrow\", \"\");\n        } else {\n          this.removeAttribute(\"verynarrow\");\n        }\n        this.veryVeryNarrow = card.offsetWidth < 245;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_showValue\",\n      value: function _showValue(item) {\n        return typeof item !== \"undefined\" && item !== null;\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [weatherSVGStyles, css`\n        ha-card {\n          cursor: pointer;\n          outline: none;\n          height: 100%;\n          display: flex;\n          flex-direction: column;\n          justify-content: center;\n          padding: 16px;\n          box-sizing: border-box;\n        }\n\n        .content {\n          display: flex;\n          flex-wrap: nowrap;\n          justify-content: space-between;\n          align-items: center;\n        }\n\n        .icon-image {\n          display: flex;\n          align-items: center;\n          min-width: 64px;\n          margin-right: 16px;\n          margin-inline-end: 16px;\n          margin-inline-start: initial;\n        }\n\n        .icon-image > * {\n          flex: 0 0 64px;\n          height: 64px;\n        }\n\n        .weather-icon {\n          --mdc-icon-size: 64px;\n        }\n\n        .info {\n          display: flex;\n          justify-content: space-between;\n          flex-grow: 1;\n          overflow: hidden;\n        }\n\n        .temp-attribute {\n          text-align: var(--float-end);\n        }\n\n        .temp-attribute .temp {\n          position: relative;\n          margin-right: 24px;\n          direction: ltr;\n        }\n\n        .temp-attribute .temp span {\n          position: absolute;\n          font-size: 24px;\n          top: 1px;\n        }\n\n        .state,\n        .temp-attribute .temp {\n          font-size: 28px;\n          line-height: 1.2;\n        }\n\n        .name,\n        .attribute {\n          font-size: 14px;\n          line-height: 1;\n        }\n\n        .name-state {\n          overflow: hidden;\n          padding-right: 12px;\n          padding-inline-end: 12px;\n          padding-inline-start: initial;\n          width: 100%;\n        }\n\n        .name,\n        .state {\n          overflow: hidden;\n          text-overflow: ellipsis;\n          white-space: nowrap;\n        }\n\n        .attribute {\n          white-space: nowrap;\n          direction: ltr;\n        }\n\n        .forecast {\n          display: flex;\n          justify-content: space-around;\n          padding-top: 16px;\n        }\n\n        .forecast > div {\n          text-align: center;\n        }\n\n        .forecast .icon,\n        .forecast .temp {\n          margin: 4px 0;\n        }\n\n        .forecast .temp {\n          font-size: 16px;\n        }\n\n        .forecast-image-icon {\n          padding-top: 4px;\n          padding-bottom: 4px;\n          display: flex;\n          justify-content: center;\n        }\n\n        .forecast-image-icon > * {\n          width: 40px;\n          height: 40px;\n          --mdc-icon-size: 40px;\n        }\n\n        .forecast-icon {\n          --mdc-icon-size: 40px;\n        }\n\n        .attr-icon {\n          --mdc-icon-size: 20px;\n        }\n\n        .attribute,\n        .templow,\n        .daynight,\n        .name {\n          color: var(--secondary-text-color);\n        }\n\n        .unavailable {\n          height: 100px;\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          font-size: 16px;\n          padding: 10px 20px;\n          text-align: center;\n        }\n\n        /* ============= NARROW ============= */\n\n        :host([narrow]) .icon-image {\n          min-width: 52px;\n        }\n\n        :host([narrow]) .weather-image {\n          flex: 0 0 52px;\n          width: 52px;\n        }\n\n        :host([narrow]) .icon-image .weather-icon {\n          --mdc-icon-size: 52px;\n        }\n\n        :host([narrow]) .state,\n        :host([narrow]) .temp-attribute .temp {\n          font-size: 22px;\n        }\n\n        :host([narrow]) .temp-attribute .temp {\n          margin-right: 16px;\n          margin-inline-end: 16px;\n          margin-inline-start: initial;\n        }\n\n        :host([narrow]) .temp span {\n          top: 1px;\n          font-size: 16px;\n        }\n\n        /* ============= VERY NARROW ============= */\n\n        :host([veryNarrow]) .name,\n        :host([veryNarrow]) .attribute {\n          display: none;\n        }\n\n        :host([veryNarrow]) .info {\n          flex-direction: column;\n          align-items: flex-start;\n        }\n\n        :host([veryNarrow]) .name-state {\n          padding-right: 0;\n          padding-inline-end: 0;\n          padding-inline-start: initial;\n        }\n\n        /* ============= VERY VERY NARROW ============= */\n\n        :host([veryVeryNarrow]) .info {\n          padding-top: 4px;\n          align-items: center;\n        }\n\n        :host([veryVeryNarrow]) .content {\n          flex-wrap: wrap;\n          justify-content: center;\n          flex-direction: column;\n        }\n\n        :host([veryVeryNarrow]) .icon-image {\n          margin-right: 0;\n          margin-inline-end: 0;\n          margin-inline-start: initial;\n        }\n      `];\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["LitElement","css","html","nothing","customElement","property","state","ifDefined","formatDateWeekdayShort","formatTime","applyThemesOnElement","computeStateName","isValidEntityId","formatNumber","debounce","UNAVAILABLE","getForecast","getSecondaryWeatherAttribute","getWeatherStateIcon","getWeatherUnit","getWind","subscribeForecast","weatherAttrIcons","weatherSVGStyles","loadPolyfillIfNeeded","actionHandler","findEntities","handleAction","hasAction","hasConfigOrEntityChanged","createEntityNotFoundWarning","HuiWeatherForecastCard","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","static","key","value","getConfigElement","document","createElement","getStubConfig","hass","entities","entitiesFallback","includeDomains","maxEntities","foundEntities","type","entity","decorators","attribute","Boolean","reflect","_needForecastSubscription","_config","forecast_type","_unsubscribeForecastEvents","_subscribed","then","unsub","undefined","_subscribeForecastEvents","isConnected","event","_forecastEvent","connectedCallback","_get","_getPrototypeOf","prototype","call","hasUpdated","updateComplete","_attachObserver","disconnectedCallback","_resizeObserver","disconnect","getCardSize","_this$_config","_this$_config2","cardSize","show_current","show_forecast","setConfig","config","Error","shouldUpdate","changedProps","size","has","willUpdate","_measureCard","firstUpdated","updated","oldHass","get","oldConfig","themes","theme","render","_this$_config3","_this$_config4","_forecastData$forecas","_this$_config5","_this$_config$name","stateObj","states","_handleAction","localize","forecastData","attributes","forecast","length","slice","veryVeryNarrow","weather","hourly","dayNight","weatherStateIcon","name","hasHold","hold_action","hasDoubleClick","double_tap_action","tap_action","formatEntityState","temperature","locale","secondary_info_attribute","wind_speed","wind_bearing","formatEntityAttributeValue","map","item","_showValue","templow","Date","datetime","is_daytime","condition","ev","detail","action","ResizeObserver","card","shadowRoot","querySelector","observe","offsetWidth","setAttribute","removeAttribute","styles"],"sources":["/Users/sercanardil/Desktop/frontend/src/panels/lovelace/cards/hui-weather-forecast-card.ts"],"sourcesContent":["import {\n  CSSResultGroup,\n  LitElement,\n  PropertyValues,\n  css,\n  html,\n  nothing,\n} from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { ifDefined } from \"lit/directives/if-defined\";\nimport { formatDateWeekdayShort } from \"../../../common/datetime/format_date\";\nimport { formatTime } from \"../../../common/datetime/format_time\";\nimport { applyThemesOnElement } from \"../../../common/dom/apply_themes_on_element\";\nimport { computeStateName } from \"../../../common/entity/compute_state_name\";\nimport { isValidEntityId } from \"../../../common/entity/valid_entity_id\";\nimport { formatNumber } from \"../../../common/number/format_number\";\nimport { debounce } from \"../../../common/util/debounce\";\nimport \"../../../components/ha-card\";\nimport \"../../../components/ha-svg-icon\";\nimport { UNAVAILABLE } from \"../../../data/entity\";\nimport { ActionHandlerEvent } from \"../../../data/lovelace/action_handler\";\nimport {\n  ForecastEvent,\n  WeatherEntity,\n  getForecast,\n  getSecondaryWeatherAttribute,\n  getWeatherStateIcon,\n  getWeatherUnit,\n  getWind,\n  subscribeForecast,\n  weatherAttrIcons,\n  weatherSVGStyles,\n} from \"../../../data/weather\";\nimport { loadPolyfillIfNeeded } from \"../../../resources/resize-observer.polyfill\";\nimport type { HomeAssistant } from \"../../../types\";\nimport { actionHandler } from \"../common/directives/action-handler-directive\";\nimport { findEntities } from \"../common/find-entities\";\nimport { handleAction } from \"../common/handle-action\";\nimport { hasAction } from \"../common/has-action\";\nimport { hasConfigOrEntityChanged } from \"../common/has-changed\";\nimport { createEntityNotFoundWarning } from \"../components/hui-warning\";\nimport type { LovelaceCard, LovelaceCardEditor } from \"../types\";\nimport type { WeatherForecastCardConfig } from \"./types\";\n\n@customElement(\"hui-weather-forecast-card\")\nclass HuiWeatherForecastCard extends LitElement implements LovelaceCard {\n  public static async getConfigElement(): Promise<LovelaceCardEditor> {\n    await import(\"../editor/config-elements/hui-weather-forecast-card-editor\");\n    return document.createElement(\"hui-weather-forecast-card-editor\");\n  }\n\n  public static getStubConfig(\n    hass: HomeAssistant,\n    entities: string[],\n    entitiesFallback: string[]\n  ): WeatherForecastCardConfig {\n    const includeDomains = [\"weather\"];\n    const maxEntities = 1;\n    const foundEntities = findEntities(\n      hass,\n      maxEntities,\n      entities,\n      entitiesFallback,\n      includeDomains\n    );\n\n    return { type: \"weather-forecast\", entity: foundEntities[0] || \"\" };\n  }\n\n  @property({ attribute: false }) public hass?: HomeAssistant;\n\n  @state() private _config?: WeatherForecastCardConfig;\n\n  @state() private _forecastEvent?: ForecastEvent;\n\n  @state() private _subscribed?: Promise<() => void>;\n\n  // @todo Consider reworking to eliminate need for attribute since it is manipulated internally\n  @property({ type: Boolean, reflect: true }) public veryVeryNarrow = false;\n\n  private _resizeObserver?: ResizeObserver;\n\n  private _needForecastSubscription() {\n    return (\n      this._config!.forecast_type && this._config!.forecast_type !== \"legacy\"\n    );\n  }\n\n  private _unsubscribeForecastEvents() {\n    if (this._subscribed) {\n      this._subscribed.then((unsub) => unsub());\n      this._subscribed = undefined;\n    }\n  }\n\n  private async _subscribeForecastEvents() {\n    this._unsubscribeForecastEvents();\n    if (\n      !this.isConnected ||\n      !this.hass ||\n      !this._config ||\n      !this._needForecastSubscription()\n    ) {\n      return;\n    }\n\n    this._subscribed = subscribeForecast(\n      this.hass!,\n      this._config!.entity,\n      this._config!.forecast_type as \"daily\" | \"hourly\" | \"twice_daily\",\n      (event) => {\n        this._forecastEvent = event;\n      }\n    );\n  }\n\n  public connectedCallback(): void {\n    super.connectedCallback();\n    if (this.hasUpdated && this._config && this.hass) {\n      this._subscribeForecastEvents();\n    }\n    this.updateComplete.then(() => this._attachObserver());\n  }\n\n  public disconnectedCallback(): void {\n    super.disconnectedCallback();\n    if (this._resizeObserver) {\n      this._resizeObserver.disconnect();\n    }\n    this._unsubscribeForecastEvents();\n  }\n\n  public getCardSize(): number {\n    let cardSize = 0;\n    if (this._config?.show_current !== false) {\n      cardSize += 2;\n    }\n    if (this._config?.show_forecast !== false) {\n      cardSize += 3;\n    }\n    return cardSize;\n  }\n\n  public setConfig(config: WeatherForecastCardConfig): void {\n    if (!config.entity) {\n      throw new Error(\"Entity must be specified\");\n    }\n    if (!isValidEntityId(config.entity)) {\n      throw new Error(\"Invalid entity\");\n    }\n\n    this._config = config;\n  }\n\n  protected shouldUpdate(changedProps: PropertyValues): boolean {\n    return (\n      hasConfigOrEntityChanged(this, changedProps) ||\n      changedProps.size > 1 ||\n      !changedProps.has(\"hass\")\n    );\n  }\n\n  public willUpdate(): void {\n    if (!this.hasUpdated) {\n      this._measureCard();\n    }\n  }\n\n  protected firstUpdated(): void {\n    this._attachObserver();\n  }\n\n  protected updated(changedProps: PropertyValues): void {\n    super.updated(changedProps);\n    if (!this._config || !this.hass) {\n      return;\n    }\n\n    if (changedProps.has(\"_config\") || !this._subscribed) {\n      this._subscribeForecastEvents();\n    }\n\n    const oldHass = changedProps.get(\"hass\") as HomeAssistant | undefined;\n    const oldConfig = changedProps.get(\"_config\") as\n      | WeatherForecastCardConfig\n      | undefined;\n\n    if (\n      (changedProps.has(\"hass\") && !oldHass) ||\n      (changedProps.has(\"_config\") && !oldConfig) ||\n      (changedProps.has(\"hass\") && oldHass!.themes !== this.hass.themes) ||\n      (changedProps.has(\"_config\") && oldConfig!.theme !== this._config.theme)\n    ) {\n      applyThemesOnElement(this, this.hass.themes, this._config.theme);\n    }\n  }\n\n  protected render() {\n    if (!this._config || !this.hass) {\n      return nothing;\n    }\n\n    const stateObj = this.hass.states[this._config.entity] as WeatherEntity;\n\n    if (!stateObj) {\n      return html`\n        <hui-warning>\n          ${createEntityNotFoundWarning(this.hass, this._config.entity)}\n        </hui-warning>\n      `;\n    }\n\n    if (stateObj.state === UNAVAILABLE) {\n      return html`\n        <ha-card class=\"unavailable\" @click=${this._handleAction}>\n          ${this.hass.localize(\"ui.panel.lovelace.warning.entity_unavailable\", {\n            entity: `${computeStateName(stateObj)} (${this._config.entity})`,\n          })}\n        </ha-card>\n      `;\n    }\n\n    const forecastData = getForecast(\n      stateObj.attributes,\n      this._forecastEvent,\n      this._config?.forecast_type\n    );\n    const forecast =\n      this._config?.show_forecast !== false && forecastData?.forecast?.length\n        ? forecastData.forecast.slice(0, this.veryVeryNarrow ? 3 : 5)\n        : undefined;\n    const weather = !forecast || this._config?.show_current !== false;\n\n    const hourly = forecastData?.type === \"hourly\";\n    const dayNight = forecastData?.type === \"twice_daily\";\n\n    const weatherStateIcon = getWeatherStateIcon(stateObj.state, this);\n    const name = this._config.name ?? computeStateName(stateObj);\n\n    return html`\n      <ha-card\n        @action=${this._handleAction}\n        .actionHandler=${actionHandler({\n          hasHold: hasAction(this._config!.hold_action),\n          hasDoubleClick: hasAction(this._config!.double_tap_action),\n        })}\n        tabindex=${ifDefined(\n          hasAction(this._config.tap_action) ? \"0\" : undefined\n        )}\n      >\n        ${weather\n          ? html`\n              <div class=\"content\">\n                <div class=\"icon-image\">\n                  ${weatherStateIcon ||\n                  html`\n                    <ha-state-icon\n                      class=\"weather-icon\"\n                      .stateObj=${stateObj}\n                      .hass=${this.hass}\n                    ></ha-state-icon>\n                  `}\n                </div>\n                <div class=\"info\">\n                  <div class=\"name-state\">\n                    <div class=\"state\">\n                      ${this.hass.formatEntityState(stateObj)}\n                    </div>\n                    <div class=\"name\" .title=${name}>${name}</div>\n                  </div>\n                  <div class=\"temp-attribute\">\n                    <div class=\"temp\">\n                      ${stateObj.attributes.temperature !== undefined &&\n                      stateObj.attributes.temperature !== null\n                        ? html`\n                            ${formatNumber(\n                              stateObj.attributes.temperature,\n                              this.hass.locale\n                            )}&nbsp;<span\n                              >${getWeatherUnit(\n                                this.hass.config,\n                                stateObj,\n                                \"temperature\"\n                              )}</span\n                            >\n                          `\n                        : html`&nbsp;`}\n                    </div>\n                    <div class=\"attribute\">\n                      ${this._config.secondary_info_attribute !== undefined\n                        ? html`\n                            ${this._config.secondary_info_attribute in\n                            weatherAttrIcons\n                              ? html`\n                                  <ha-svg-icon\n                                    class=\"attr-icon\"\n                                    .path=${weatherAttrIcons[\n                                      this._config.secondary_info_attribute\n                                    ]}\n                                  ></ha-svg-icon>\n                                `\n                              : this.hass!.localize(\n                                  `ui.card.weather.attributes.${this._config.secondary_info_attribute}`\n                                )}\n                            ${this._config.secondary_info_attribute ===\n                            \"wind_speed\"\n                              ? getWind(\n                                  this.hass,\n                                  stateObj,\n                                  stateObj.attributes.wind_speed,\n                                  stateObj.attributes.wind_bearing\n                                )\n                              : html`\n                                  ${this.hass.formatEntityAttributeValue(\n                                    stateObj,\n                                    this._config.secondary_info_attribute\n                                  )}\n                                `}\n                          `\n                        : getSecondaryWeatherAttribute(\n                            this.hass,\n                            stateObj,\n                            forecast!\n                          )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `\n          : \"\"}\n        ${forecast\n          ? html`\n              <div class=\"forecast\">\n                ${forecast.map((item) =>\n                  this._showValue(item.templow) ||\n                  this._showValue(item.temperature)\n                    ? html`\n                        <div>\n                          <div>\n                            ${dayNight\n                              ? html`\n                                  ${formatDateWeekdayShort(\n                                    new Date(item.datetime),\n                                    this.hass!.locale,\n                                    this.hass!.config\n                                  )}\n                                  <div class=\"daynight\">\n                                    ${item.is_daytime !== false\n                                      ? this.hass!.localize(\n                                          \"ui.card.weather.day\"\n                                        )\n                                      : this.hass!.localize(\n                                          \"ui.card.weather.night\"\n                                        )}<br />\n                                  </div>\n                                `\n                              : hourly\n                                ? html`\n                                    ${formatTime(\n                                      new Date(item.datetime),\n                                      this.hass!.locale,\n                                      this.hass!.config\n                                    )}\n                                  `\n                                : html`\n                                    ${formatDateWeekdayShort(\n                                      new Date(item.datetime),\n                                      this.hass!.locale,\n                                      this.hass!.config\n                                    )}\n                                  `}\n                          </div>\n                          ${this._showValue(item.condition)\n                            ? html`\n                                <div class=\"forecast-image-icon\">\n                                  ${getWeatherStateIcon(\n                                    item.condition!,\n                                    this,\n                                    !(\n                                      item.is_daytime ||\n                                      item.is_daytime === undefined\n                                    )\n                                  )}\n                                </div>\n                              `\n                            : \"\"}\n                          <div class=\"temp\">\n                            ${this._showValue(item.temperature)\n                              ? html`${formatNumber(\n                                  item.temperature,\n                                  this.hass!.locale\n                                )}°`\n                              : \"—\"}\n                          </div>\n                          <div class=\"templow\">\n                            ${this._showValue(item.templow)\n                              ? html`${formatNumber(\n                                  item.templow!,\n                                  this.hass!.locale\n                                )}°`\n                              : hourly\n                                ? \"\"\n                                : \"—\"}\n                          </div>\n                        </div>\n                      `\n                    : \"\"\n                )}\n              </div>\n            `\n          : \"\"}\n      </ha-card>\n    `;\n  }\n\n  private _handleAction(ev: ActionHandlerEvent) {\n    handleAction(this, this.hass!, this._config!, ev.detail.action!);\n  }\n\n  private async _attachObserver(): Promise<void> {\n    if (!this._resizeObserver) {\n      await loadPolyfillIfNeeded();\n      this._resizeObserver = new ResizeObserver(\n        debounce(() => this._measureCard(), 250, false)\n      );\n    }\n    const card = this.shadowRoot!.querySelector(\"ha-card\");\n    // If we show an error or warning there is no ha-card\n    if (!card) {\n      return;\n    }\n    this._resizeObserver.observe(card);\n  }\n\n  private _measureCard() {\n    if (!this.isConnected) {\n      return;\n    }\n\n    const card = this.shadowRoot!.querySelector(\"ha-card\");\n    // If we show an error or warning there is no ha-card\n    if (!card) {\n      return;\n    }\n\n    if (card.offsetWidth < 375) {\n      this.setAttribute(\"narrow\", \"\");\n    } else {\n      this.removeAttribute(\"narrow\");\n    }\n    if (card.offsetWidth < 300) {\n      this.setAttribute(\"verynarrow\", \"\");\n    } else {\n      this.removeAttribute(\"verynarrow\");\n    }\n    this.veryVeryNarrow = card.offsetWidth < 245;\n  }\n\n  private _showValue(item?: any): boolean {\n    return typeof item !== \"undefined\" && item !== null;\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      weatherSVGStyles,\n      css`\n        ha-card {\n          cursor: pointer;\n          outline: none;\n          height: 100%;\n          display: flex;\n          flex-direction: column;\n          justify-content: center;\n          padding: 16px;\n          box-sizing: border-box;\n        }\n\n        .content {\n          display: flex;\n          flex-wrap: nowrap;\n          justify-content: space-between;\n          align-items: center;\n        }\n\n        .icon-image {\n          display: flex;\n          align-items: center;\n          min-width: 64px;\n          margin-right: 16px;\n          margin-inline-end: 16px;\n          margin-inline-start: initial;\n        }\n\n        .icon-image > * {\n          flex: 0 0 64px;\n          height: 64px;\n        }\n\n        .weather-icon {\n          --mdc-icon-size: 64px;\n        }\n\n        .info {\n          display: flex;\n          justify-content: space-between;\n          flex-grow: 1;\n          overflow: hidden;\n        }\n\n        .temp-attribute {\n          text-align: var(--float-end);\n        }\n\n        .temp-attribute .temp {\n          position: relative;\n          margin-right: 24px;\n          direction: ltr;\n        }\n\n        .temp-attribute .temp span {\n          position: absolute;\n          font-size: 24px;\n          top: 1px;\n        }\n\n        .state,\n        .temp-attribute .temp {\n          font-size: 28px;\n          line-height: 1.2;\n        }\n\n        .name,\n        .attribute {\n          font-size: 14px;\n          line-height: 1;\n        }\n\n        .name-state {\n          overflow: hidden;\n          padding-right: 12px;\n          padding-inline-end: 12px;\n          padding-inline-start: initial;\n          width: 100%;\n        }\n\n        .name,\n        .state {\n          overflow: hidden;\n          text-overflow: ellipsis;\n          white-space: nowrap;\n        }\n\n        .attribute {\n          white-space: nowrap;\n          direction: ltr;\n        }\n\n        .forecast {\n          display: flex;\n          justify-content: space-around;\n          padding-top: 16px;\n        }\n\n        .forecast > div {\n          text-align: center;\n        }\n\n        .forecast .icon,\n        .forecast .temp {\n          margin: 4px 0;\n        }\n\n        .forecast .temp {\n          font-size: 16px;\n        }\n\n        .forecast-image-icon {\n          padding-top: 4px;\n          padding-bottom: 4px;\n          display: flex;\n          justify-content: center;\n        }\n\n        .forecast-image-icon > * {\n          width: 40px;\n          height: 40px;\n          --mdc-icon-size: 40px;\n        }\n\n        .forecast-icon {\n          --mdc-icon-size: 40px;\n        }\n\n        .attr-icon {\n          --mdc-icon-size: 20px;\n        }\n\n        .attribute,\n        .templow,\n        .daynight,\n        .name {\n          color: var(--secondary-text-color);\n        }\n\n        .unavailable {\n          height: 100px;\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          font-size: 16px;\n          padding: 10px 20px;\n          text-align: center;\n        }\n\n        /* ============= NARROW ============= */\n\n        :host([narrow]) .icon-image {\n          min-width: 52px;\n        }\n\n        :host([narrow]) .weather-image {\n          flex: 0 0 52px;\n          width: 52px;\n        }\n\n        :host([narrow]) .icon-image .weather-icon {\n          --mdc-icon-size: 52px;\n        }\n\n        :host([narrow]) .state,\n        :host([narrow]) .temp-attribute .temp {\n          font-size: 22px;\n        }\n\n        :host([narrow]) .temp-attribute .temp {\n          margin-right: 16px;\n          margin-inline-end: 16px;\n          margin-inline-start: initial;\n        }\n\n        :host([narrow]) .temp span {\n          top: 1px;\n          font-size: 16px;\n        }\n\n        /* ============= VERY NARROW ============= */\n\n        :host([veryNarrow]) .name,\n        :host([veryNarrow]) .attribute {\n          display: none;\n        }\n\n        :host([veryNarrow]) .info {\n          flex-direction: column;\n          align-items: flex-start;\n        }\n\n        :host([veryNarrow]) .name-state {\n          padding-right: 0;\n          padding-inline-end: 0;\n          padding-inline-start: initial;\n        }\n\n        /* ============= VERY VERY NARROW ============= */\n\n        :host([veryVeryNarrow]) .info {\n          padding-top: 4px;\n          align-items: center;\n        }\n\n        :host([veryVeryNarrow]) .content {\n          flex-wrap: wrap;\n          justify-content: center;\n          flex-direction: column;\n        }\n\n        :host([veryVeryNarrow]) .icon-image {\n          margin-right: 0;\n          margin-inline-end: 0;\n          margin-inline-start: initial;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-weather-forecast-card\": HuiWeatherForecastCard;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}