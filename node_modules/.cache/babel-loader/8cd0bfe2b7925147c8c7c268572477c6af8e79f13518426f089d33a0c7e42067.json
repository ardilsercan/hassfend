{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport \"@material/mwc-button\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { property, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport \"../../../components/entity/ha-entities-picker\";\nimport { createCloseHeading } from \"../../../components/ha-dialog\";\nimport \"../../../components/ha-formfield\";\nimport \"../../../components/ha-picture-upload\";\nimport \"../../../components/ha-textfield\";\nimport { deleteUser, SYSTEM_GROUP_ID_ADMIN, SYSTEM_GROUP_ID_USER, updateUser } from \"../../../data/user\";\nimport { showAlertDialog, showConfirmationDialog } from \"../../../dialogs/generic/show-dialog-box\";\nimport { haStyleDialog } from \"../../../resources/styles\";\nimport { documentationUrl } from \"../../../util/documentation-url\";\nimport { showAddUserDialog } from \"../users/show-dialog-add-user\";\nimport { showAdminChangePasswordDialog } from \"../users/show-dialog-admin-change-password\";\nconst includeDomains = [\"device_tracker\"];\nconst cropOptions = {\n  round: true,\n  quality: 0.75,\n  aspectRatio: 1\n};\nlet DialogPersonDetail = _decorate(null, function (_initialize, _LitElement) {\n  class DialogPersonDetail extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: DialogPersonDetail,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_name\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_userId\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_user\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_isAdmin\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_localOnly\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_deviceTrackers\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_picture\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_error\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_params\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_submitting\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_personExists\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_deviceTrackersAvailable\",\n      value() {\n        return memoizeOne(hass => Object.keys(hass.states).some(entityId => entityId.substr(0, entityId.indexOf(\".\")) === \"device_tracker\"));\n      }\n    }, {\n      kind: \"method\",\n      key: \"showDialog\",\n      value: async function showDialog(params) {\n        this._params = params;\n        this._error = undefined;\n        if (this._params.entry) {\n          var _this$_user, _this$_user2;\n          this._personExists = true;\n          this._name = this._params.entry.name || \"\";\n          this._userId = this._params.entry.user_id || undefined;\n          this._deviceTrackers = this._params.entry.device_trackers || [];\n          this._picture = this._params.entry.picture || null;\n          this._user = this._userId ? this._params.users.find(user => user.id === this._userId) : undefined;\n          this._isAdmin = (_this$_user = this._user) === null || _this$_user === void 0 ? void 0 : _this$_user.group_ids.includes(SYSTEM_GROUP_ID_ADMIN);\n          this._localOnly = (_this$_user2 = this._user) === null || _this$_user2 === void 0 ? void 0 : _this$_user2.local_only;\n        } else {\n          this._personExists = false;\n          this._name = \"\";\n          this._userId = undefined;\n          this._user = undefined;\n          this._isAdmin = undefined;\n          this._localOnly = undefined;\n          this._deviceTrackers = [];\n          this._picture = null;\n        }\n        await this.updateComplete;\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var _this$hass$user, _this$hass$user2;\n        if (!this._params) {\n          return nothing;\n        }\n        const nameInvalid = this._name.trim() === \"\";\n        return html`\n      <ha-dialog\n        open\n        @closed=${this._close}\n        scrimClickAction\n        escapeKeyAction\n        .heading=${createCloseHeading(this.hass, this._params.entry ? this._params.entry.name : this.hass.localize(\"ui.panel.config.person.detail.new_person\"))}\n      >\n        <div>\n          ${this._error ? html` <div class=\"error\">${this._error}</div> ` : \"\"}\n          <div class=\"form\">\n            <ha-textfield\n              dialogInitialFocus\n              .value=${this._name}\n              @input=${this._nameChanged}\n              label=${this.hass.localize(\"ui.panel.config.person.detail.name\")}\n              .validationMessage=${this.hass.localize(\"ui.panel.config.person.detail.name_error_msg\")}\n              required\n            ></ha-textfield>\n\n            <ha-picture-upload\n              .hass=${this.hass}\n              .value=${this._picture}\n              crop\n              .cropOptions=${cropOptions}\n              @change=${this._pictureChanged}\n            ></ha-picture-upload>\n\n            <ha-formfield\n              .label=${this.hass.localize(\"ui.panel.config.person.detail.allow_login\")}\n            >\n              <ha-switch\n                @change=${this._allowLoginChanged}\n                .disabled=${this._user && (this._user.id === ((_this$hass$user = this.hass.user) === null || _this$hass$user === void 0 ? void 0 : _this$hass$user.id) || this._user.system_generated || this._user.is_owner)}\n                .checked=${this._userId}\n              ></ha-switch>\n            </ha-formfield>\n\n            ${this._user ? html`<ha-formfield\n                    .label=${this.hass.localize(\"ui.panel.config.person.detail.local_only\")}\n                  >\n                    <ha-switch\n                      .checked=${this._localOnly}\n                      @change=${this._localOnlyChanged}\n                    >\n                    </ha-switch>\n                  </ha-formfield>\n                  <ha-formfield\n                    .label=${this.hass.localize(\"ui.panel.config.person.detail.admin\")}\n                  >\n                    <ha-switch\n                      .disabled=${this._user.system_generated || this._user.is_owner}\n                      .checked=${this._isAdmin}\n                      @change=${this._adminChanged}\n                    >\n                    </ha-switch>\n                  </ha-formfield>` : \"\"}\n            ${this._deviceTrackersAvailable(this.hass) ? html`\n                  <p>\n                    ${this.hass.localize(\"ui.panel.config.person.detail.device_tracker_intro\")}\n                  </p>\n                  <ha-entities-picker\n                    .hass=${this.hass}\n                    .value=${this._deviceTrackers}\n                    .includeDomains=${includeDomains}\n                    .pickedEntityLabel=${this.hass.localize(\"ui.panel.config.person.detail.device_tracker_picked\")}\n                    .pickEntityLabel=${this.hass.localize(\"ui.panel.config.person.detail.device_tracker_pick\")}\n                    @value-changed=${this._deviceTrackersChanged}\n                  >\n                  </ha-entities-picker>\n                ` : html`\n                  <p>\n                    ${this.hass.localize(\"ui.panel.config.person.detail.no_device_tracker_available_intro\")}\n                  </p>\n                  <ul>\n                    <li>\n                      <a\n                        href=${documentationUrl(this.hass, \"/integrations/#presence-detection\")}\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                        >${this.hass.localize(\"ui.panel.config.person.detail.link_presence_detection_integrations\")}</a\n                      >\n                    </li>\n                    <li>\n                      <a\n                        @click=${this._closeDialog}\n                        href=\"/config/integrations\"\n                      >\n                        ${this.hass.localize(\"ui.panel.config.person.detail.link_integrations_page\")}</a\n                      >\n                    </li>\n                  </ul>\n                `}\n          </div>\n        </div>\n        ${this._params.entry ? html`\n              <mwc-button\n                slot=\"secondaryAction\"\n                class=\"warning\"\n                @click=${this._deleteEntry}\n                .disabled=${this._user && this._user.is_owner || this._submitting}\n              >\n                ${this.hass.localize(\"ui.panel.config.person.detail.delete\")}\n              </mwc-button>\n              ${this._user && (_this$hass$user2 = this.hass.user) !== null && _this$hass$user2 !== void 0 && _this$hass$user2.is_owner ? html`<mwc-button\n                    slot=\"secondaryAction\"\n                    @click=${this._changePassword}\n                  >\n                    ${this.hass.localize(\"ui.panel.config.users.editor.change_password\")}\n                  </mwc-button>` : \"\"}\n            ` : nothing}\n        <mwc-button\n          slot=\"primaryAction\"\n          @click=${this._updateEntry}\n          .disabled=${nameInvalid || this._submitting}\n        >\n          ${this._params.entry ? this.hass.localize(\"ui.panel.config.person.detail.update\") : this.hass.localize(\"ui.panel.config.person.detail.create\")}\n        </mwc-button>\n      </ha-dialog>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_closeDialog\",\n      value: function _closeDialog() {\n        this._params = undefined;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_nameChanged\",\n      value: function _nameChanged(ev) {\n        this._error = undefined;\n        this._name = ev.target.value;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_adminChanged\",\n      value: function _adminChanged(ev) {\n        this._isAdmin = ev.target.checked;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_localOnlyChanged\",\n      value: function _localOnlyChanged(ev) {\n        this._localOnly = ev.target.checked;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_allowLoginChanged\",\n      value: async function _allowLoginChanged(ev) {\n        const target = ev.target;\n        if (target.checked) {\n          target.checked = false;\n          showAddUserDialog(this, {\n            userAddedCallback: async user => {\n              if (user) {\n                var _this$_params;\n                target.checked = true;\n                this._user = user;\n                this._userId = user.id;\n                this._isAdmin = user.group_ids.includes(SYSTEM_GROUP_ID_ADMIN);\n                this._localOnly = user.local_only;\n                (_this$_params = this._params) === null || _this$_params === void 0 || _this$_params.refreshUsers();\n              }\n            },\n            name: this._name\n          });\n        } else if (this._userId) {\n          var _this$_params2;\n          if (!(await showConfirmationDialog(this, {\n            text: this.hass.localize(\"ui.panel.config.person.detail.confirm_delete_user\", {\n              name: this._name\n            }),\n            confirmText: this.hass.localize(\"ui.panel.config.person.detail.delete\"),\n            dismissText: this.hass.localize(\"ui.common.cancel\")\n          }))) {\n            target.checked = true;\n            return;\n          }\n          await deleteUser(this.hass, this._userId);\n          (_this$_params2 = this._params) === null || _this$_params2 === void 0 || _this$_params2.refreshUsers();\n          this._userId = undefined;\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_deviceTrackersChanged\",\n      value: function _deviceTrackersChanged(ev) {\n        this._error = undefined;\n        this._deviceTrackers = ev.detail.value;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_pictureChanged\",\n      value: function _pictureChanged(ev) {\n        this._error = undefined;\n        this._picture = ev.target.value;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_changePassword\",\n      value: async function _changePassword() {\n        if (!this._user) {\n          return;\n        }\n        const credential = this._user.credentials.find(cred => cred.type === \"homeassistant\");\n        if (!credential) {\n          showAlertDialog(this, {\n            title: \"No NDX Tech credentials found.\"\n          });\n          return;\n        }\n        showAdminChangePasswordDialog(this, {\n          userId: this._user.id\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_updateEntry\",\n      value: async function _updateEntry() {\n        this._submitting = true;\n        try {\n          var _entry, _this$_user3, _this$_user4;\n          if (this._userId && this._name !== ((_entry = this._params.entry) === null || _entry === void 0 ? void 0 : _entry.name) || this._isAdmin !== ((_this$_user3 = this._user) === null || _this$_user3 === void 0 ? void 0 : _this$_user3.group_ids.includes(SYSTEM_GROUP_ID_ADMIN)) || this._localOnly !== ((_this$_user4 = this._user) === null || _this$_user4 === void 0 ? void 0 : _this$_user4.local_only)) {\n            var _this$_params3;\n            await updateUser(this.hass, this._userId, {\n              name: this._name.trim(),\n              group_ids: [this._isAdmin ? SYSTEM_GROUP_ID_ADMIN : SYSTEM_GROUP_ID_USER],\n              local_only: this._localOnly\n            });\n            (_this$_params3 = this._params) === null || _this$_params3 === void 0 || _this$_params3.refreshUsers();\n          }\n          const values = {\n            name: this._name.trim(),\n            device_trackers: this._deviceTrackers,\n            user_id: this._userId || null,\n            picture: this._picture\n          };\n          if (this._params.entry) {\n            await this._params.updateEntry(values);\n          } else {\n            await this._params.createEntry(values);\n            this._personExists = true;\n          }\n          this._params = undefined;\n        } catch (err) {\n          this._error = err ? err.message : \"Unknown error\";\n        } finally {\n          this._submitting = false;\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_deleteEntry\",\n      value: async function _deleteEntry() {\n        this._submitting = true;\n        try {\n          if (await this._params.removeEntry()) {\n            if (this._params.entry.user_id) {\n              deleteUser(this.hass, this._params.entry.user_id);\n            }\n            this._params = undefined;\n          }\n        } finally {\n          this._submitting = false;\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_close\",\n      value: function _close() {\n        // If we do not have a person ID yet (= person creation dialog was just cancelled), but\n        // we already created a user ID for it, delete it now to not have it \"free floating\".\n        if (!this._personExists && this._userId) {\n          var _this$_params4;\n          deleteUser(this.hass, this._userId);\n          (_this$_params4 = this._params) === null || _this$_params4 === void 0 || _this$_params4.refreshUsers();\n          this._userId = undefined;\n        }\n        this._params = undefined;\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [haStyleDialog, css`\n        ha-picture-upload,\n        ha-textfield {\n          display: block;\n        }\n        ha-picture-upload {\n          margin-bottom: 16px;\n          --file-upload-image-border-radius: 50%;\n        }\n        ha-formfield {\n          display: block;\n          padding: 16px 0;\n        }\n        a {\n          color: var(--primary-color);\n        }\n        p {\n          color: var(--primary-text-color);\n        }\n      `];\n      }\n    }]\n  };\n}, LitElement);\ncustomElements.define(\"dialog-person-detail\", DialogPersonDetail);","map":{"version":3,"names":["css","html","LitElement","nothing","property","state","memoizeOne","createCloseHeading","deleteUser","SYSTEM_GROUP_ID_ADMIN","SYSTEM_GROUP_ID_USER","updateUser","showAlertDialog","showConfirmationDialog","haStyleDialog","documentationUrl","showAddUserDialog","showAdminChangePasswordDialog","includeDomains","cropOptions","round","quality","aspectRatio","DialogPersonDetail","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","hass","Object","keys","states","some","entityId","substr","indexOf","showDialog","params","_params","_error","undefined","entry","_this$_user","_this$_user2","_personExists","_name","name","_userId","user_id","_deviceTrackers","device_trackers","_picture","picture","_user","users","find","user","id","_isAdmin","group_ids","includes","_localOnly","local_only","updateComplete","render","_this$hass$user","_this$hass$user2","nameInvalid","trim","_close","localize","_nameChanged","_pictureChanged","_allowLoginChanged","system_generated","is_owner","_localOnlyChanged","_adminChanged","_deviceTrackersAvailable","_deviceTrackersChanged","_closeDialog","_deleteEntry","_submitting","_changePassword","_updateEntry","ev","target","checked","userAddedCallback","_this$_params","refreshUsers","_this$_params2","text","confirmText","dismissText","detail","credential","credentials","cred","type","title","userId","_entry","_this$_user3","_this$_user4","_this$_params3","values","updateEntry","createEntry","err","message","removeEntry","_this$_params4","static","styles","customElements","define"],"sources":["/Users/sercanardil/Desktop/frontend/src/panels/config/person/dialog-person-detail.ts"],"sourcesContent":["import \"@material/mwc-button\";\nimport { css, CSSResultGroup, html, LitElement, nothing } from \"lit\";\nimport { property, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport \"../../../components/entity/ha-entities-picker\";\nimport { createCloseHeading } from \"../../../components/ha-dialog\";\nimport \"../../../components/ha-formfield\";\nimport \"../../../components/ha-picture-upload\";\nimport type { HaPictureUpload } from \"../../../components/ha-picture-upload\";\nimport \"../../../components/ha-textfield\";\nimport { PersonMutableParams } from \"../../../data/person\";\nimport {\n  deleteUser,\n  SYSTEM_GROUP_ID_ADMIN,\n  SYSTEM_GROUP_ID_USER,\n  updateUser,\n  User,\n} from \"../../../data/user\";\nimport {\n  showAlertDialog,\n  showConfirmationDialog,\n} from \"../../../dialogs/generic/show-dialog-box\";\nimport { CropOptions } from \"../../../dialogs/image-cropper-dialog/show-image-cropper-dialog\";\nimport { ValueChangedEvent, HomeAssistant } from \"../../../types\";\nimport { haStyleDialog } from \"../../../resources/styles\";\nimport { documentationUrl } from \"../../../util/documentation-url\";\nimport { showAddUserDialog } from \"../users/show-dialog-add-user\";\nimport { showAdminChangePasswordDialog } from \"../users/show-dialog-admin-change-password\";\nimport { PersonDetailDialogParams } from \"./show-dialog-person-detail\";\n\nconst includeDomains = [\"device_tracker\"];\n\nconst cropOptions: CropOptions = {\n  round: true,\n  quality: 0.75,\n  aspectRatio: 1,\n};\n\nclass DialogPersonDetail extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @state() private _name!: string;\n\n  @state() private _userId?: string;\n\n  @state() private _user?: User;\n\n  @state() private _isAdmin?: boolean;\n\n  @state() private _localOnly?: boolean;\n\n  @state() private _deviceTrackers!: string[];\n\n  @state() private _picture!: string | null;\n\n  @state() private _error?: string;\n\n  @state() private _params?: PersonDetailDialogParams;\n\n  @state() private _submitting = false;\n\n  @state() private _personExists = false;\n\n  private _deviceTrackersAvailable = memoizeOne((hass) =>\n    Object.keys(hass.states).some(\n      (entityId) =>\n        entityId.substr(0, entityId.indexOf(\".\")) === \"device_tracker\"\n    )\n  );\n\n  public async showDialog(params: PersonDetailDialogParams): Promise<void> {\n    this._params = params;\n    this._error = undefined;\n    if (this._params.entry) {\n      this._personExists = true;\n      this._name = this._params.entry.name || \"\";\n      this._userId = this._params.entry.user_id || undefined;\n      this._deviceTrackers = this._params.entry.device_trackers || [];\n      this._picture = this._params.entry.picture || null;\n      this._user = this._userId\n        ? this._params.users.find((user) => user.id === this._userId)\n        : undefined;\n      this._isAdmin = this._user?.group_ids.includes(SYSTEM_GROUP_ID_ADMIN);\n      this._localOnly = this._user?.local_only;\n    } else {\n      this._personExists = false;\n      this._name = \"\";\n      this._userId = undefined;\n      this._user = undefined;\n      this._isAdmin = undefined;\n      this._localOnly = undefined;\n      this._deviceTrackers = [];\n      this._picture = null;\n    }\n    await this.updateComplete;\n  }\n\n  protected render() {\n    if (!this._params) {\n      return nothing;\n    }\n    const nameInvalid = this._name.trim() === \"\";\n    return html`\n      <ha-dialog\n        open\n        @closed=${this._close}\n        scrimClickAction\n        escapeKeyAction\n        .heading=${createCloseHeading(\n          this.hass,\n          this._params.entry\n            ? this._params.entry.name\n            : this.hass!.localize(\"ui.panel.config.person.detail.new_person\")\n        )}\n      >\n        <div>\n          ${this._error ? html` <div class=\"error\">${this._error}</div> ` : \"\"}\n          <div class=\"form\">\n            <ha-textfield\n              dialogInitialFocus\n              .value=${this._name}\n              @input=${this._nameChanged}\n              label=${this.hass!.localize(\"ui.panel.config.person.detail.name\")}\n              .validationMessage=${this.hass!.localize(\n                \"ui.panel.config.person.detail.name_error_msg\"\n              )}\n              required\n            ></ha-textfield>\n\n            <ha-picture-upload\n              .hass=${this.hass}\n              .value=${this._picture}\n              crop\n              .cropOptions=${cropOptions}\n              @change=${this._pictureChanged}\n            ></ha-picture-upload>\n\n            <ha-formfield\n              .label=${this.hass!.localize(\n                \"ui.panel.config.person.detail.allow_login\"\n              )}\n            >\n              <ha-switch\n                @change=${this._allowLoginChanged}\n                .disabled=${this._user &&\n                (this._user.id === this.hass.user?.id ||\n                  this._user.system_generated ||\n                  this._user.is_owner)}\n                .checked=${this._userId}\n              ></ha-switch>\n            </ha-formfield>\n\n            ${this._user\n              ? html`<ha-formfield\n                    .label=${this.hass.localize(\n                      \"ui.panel.config.person.detail.local_only\"\n                    )}\n                  >\n                    <ha-switch\n                      .checked=${this._localOnly}\n                      @change=${this._localOnlyChanged}\n                    >\n                    </ha-switch>\n                  </ha-formfield>\n                  <ha-formfield\n                    .label=${this.hass.localize(\n                      \"ui.panel.config.person.detail.admin\"\n                    )}\n                  >\n                    <ha-switch\n                      .disabled=${this._user.system_generated ||\n                      this._user.is_owner}\n                      .checked=${this._isAdmin}\n                      @change=${this._adminChanged}\n                    >\n                    </ha-switch>\n                  </ha-formfield>`\n              : \"\"}\n            ${this._deviceTrackersAvailable(this.hass)\n              ? html`\n                  <p>\n                    ${this.hass.localize(\n                      \"ui.panel.config.person.detail.device_tracker_intro\"\n                    )}\n                  </p>\n                  <ha-entities-picker\n                    .hass=${this.hass}\n                    .value=${this._deviceTrackers}\n                    .includeDomains=${includeDomains}\n                    .pickedEntityLabel=${this.hass.localize(\n                      \"ui.panel.config.person.detail.device_tracker_picked\"\n                    )}\n                    .pickEntityLabel=${this.hass.localize(\n                      \"ui.panel.config.person.detail.device_tracker_pick\"\n                    )}\n                    @value-changed=${this._deviceTrackersChanged}\n                  >\n                  </ha-entities-picker>\n                `\n              : html`\n                  <p>\n                    ${this.hass!.localize(\n                      \"ui.panel.config.person.detail.no_device_tracker_available_intro\"\n                    )}\n                  </p>\n                  <ul>\n                    <li>\n                      <a\n                        href=${documentationUrl(\n                          this.hass,\n                          \"/integrations/#presence-detection\"\n                        )}\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                        >${this.hass!.localize(\n                          \"ui.panel.config.person.detail.link_presence_detection_integrations\"\n                        )}</a\n                      >\n                    </li>\n                    <li>\n                      <a\n                        @click=${this._closeDialog}\n                        href=\"/config/integrations\"\n                      >\n                        ${this.hass!.localize(\n                          \"ui.panel.config.person.detail.link_integrations_page\"\n                        )}</a\n                      >\n                    </li>\n                  </ul>\n                `}\n          </div>\n        </div>\n        ${this._params.entry\n          ? html`\n              <mwc-button\n                slot=\"secondaryAction\"\n                class=\"warning\"\n                @click=${this._deleteEntry}\n                .disabled=${(this._user && this._user.is_owner) ||\n                this._submitting}\n              >\n                ${this.hass!.localize(\"ui.panel.config.person.detail.delete\")}\n              </mwc-button>\n              ${this._user && this.hass.user?.is_owner\n                ? html`<mwc-button\n                    slot=\"secondaryAction\"\n                    @click=${this._changePassword}\n                  >\n                    ${this.hass.localize(\n                      \"ui.panel.config.users.editor.change_password\"\n                    )}\n                  </mwc-button>`\n                : \"\"}\n            `\n          : nothing}\n        <mwc-button\n          slot=\"primaryAction\"\n          @click=${this._updateEntry}\n          .disabled=${nameInvalid || this._submitting}\n        >\n          ${this._params.entry\n            ? this.hass!.localize(\"ui.panel.config.person.detail.update\")\n            : this.hass!.localize(\"ui.panel.config.person.detail.create\")}\n        </mwc-button>\n      </ha-dialog>\n    `;\n  }\n\n  private _closeDialog() {\n    this._params = undefined;\n  }\n\n  private _nameChanged(ev) {\n    this._error = undefined;\n    this._name = ev.target.value;\n  }\n\n  private _adminChanged(ev): void {\n    this._isAdmin = ev.target.checked;\n  }\n\n  private _localOnlyChanged(ev): void {\n    this._localOnly = ev.target.checked;\n  }\n\n  private async _allowLoginChanged(ev): Promise<void> {\n    const target = ev.target;\n    if (target.checked) {\n      target.checked = false;\n      showAddUserDialog(this, {\n        userAddedCallback: async (user?: User) => {\n          if (user) {\n            target.checked = true;\n            this._user = user;\n            this._userId = user.id;\n            this._isAdmin = user.group_ids.includes(SYSTEM_GROUP_ID_ADMIN);\n            this._localOnly = user.local_only;\n            this._params?.refreshUsers();\n          }\n        },\n        name: this._name,\n      });\n    } else if (this._userId) {\n      if (\n        !(await showConfirmationDialog(this, {\n          text: this.hass!.localize(\n            \"ui.panel.config.person.detail.confirm_delete_user\",\n            { name: this._name }\n          ),\n          confirmText: this.hass!.localize(\n            \"ui.panel.config.person.detail.delete\"\n          ),\n          dismissText: this.hass!.localize(\"ui.common.cancel\"),\n        }))\n      ) {\n        target.checked = true;\n        return;\n      }\n      await deleteUser(this.hass, this._userId);\n      this._params?.refreshUsers();\n      this._userId = undefined;\n    }\n  }\n\n  private _deviceTrackersChanged(ev: ValueChangedEvent<string[]>) {\n    this._error = undefined;\n    this._deviceTrackers = ev.detail.value;\n  }\n\n  private _pictureChanged(ev: ValueChangedEvent<string | null>) {\n    this._error = undefined;\n    this._picture = (ev.target as HaPictureUpload).value;\n  }\n\n  private async _changePassword() {\n    if (!this._user) {\n      return;\n    }\n    const credential = this._user.credentials.find(\n      (cred) => cred.type === \"homeassistant\"\n    );\n    if (!credential) {\n      showAlertDialog(this, {\n        title: \"No NDX Tech credentials found.\",\n      });\n      return;\n    }\n    showAdminChangePasswordDialog(this, { userId: this._user.id });\n  }\n\n  private async _updateEntry() {\n    this._submitting = true;\n    try {\n      if (\n        (this._userId && this._name !== this._params!.entry?.name) ||\n        this._isAdmin !==\n          this._user?.group_ids.includes(SYSTEM_GROUP_ID_ADMIN) ||\n        this._localOnly !== this._user?.local_only\n      ) {\n        await updateUser(this.hass!, this._userId!, {\n          name: this._name.trim(),\n          group_ids: [\n            this._isAdmin ? SYSTEM_GROUP_ID_ADMIN : SYSTEM_GROUP_ID_USER,\n          ],\n          local_only: this._localOnly,\n        });\n        this._params?.refreshUsers();\n      }\n      const values: PersonMutableParams = {\n        name: this._name.trim(),\n        device_trackers: this._deviceTrackers,\n        user_id: this._userId || null,\n        picture: this._picture,\n      };\n      if (this._params!.entry) {\n        await this._params!.updateEntry(values);\n      } else {\n        await this._params!.createEntry(values);\n        this._personExists = true;\n      }\n      this._params = undefined;\n    } catch (err: any) {\n      this._error = err ? err.message : \"Unknown error\";\n    } finally {\n      this._submitting = false;\n    }\n  }\n\n  private async _deleteEntry() {\n    this._submitting = true;\n    try {\n      if (await this._params!.removeEntry()) {\n        if (this._params!.entry!.user_id) {\n          deleteUser(this.hass, this._params!.entry!.user_id);\n        }\n        this._params = undefined;\n      }\n    } finally {\n      this._submitting = false;\n    }\n  }\n\n  private _close(): void {\n    // If we do not have a person ID yet (= person creation dialog was just cancelled), but\n    // we already created a user ID for it, delete it now to not have it \"free floating\".\n    if (!this._personExists && this._userId) {\n      deleteUser(this.hass, this._userId);\n      this._params?.refreshUsers();\n      this._userId = undefined;\n    }\n\n    this._params = undefined;\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyleDialog,\n      css`\n        ha-picture-upload,\n        ha-textfield {\n          display: block;\n        }\n        ha-picture-upload {\n          margin-bottom: 16px;\n          --file-upload-image-border-radius: 50%;\n        }\n        ha-formfield {\n          display: block;\n          padding: 16px 0;\n        }\n        a {\n          color: var(--primary-color);\n        }\n        p {\n          color: var(--primary-text-color);\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"dialog-person-detail\": DialogPersonDetail;\n  }\n}\n\ncustomElements.define(\"dialog-person-detail\", DialogPersonDetail);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}