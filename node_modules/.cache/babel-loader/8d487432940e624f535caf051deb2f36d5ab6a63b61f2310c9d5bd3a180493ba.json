{"ast":null,"code":"export const searchPlaces = (address, hass, addressdetails, limit) => fetch(`https://nominatim.openstreetmap.org/search.php?q=${address}&format=jsonv2${limit ? `&limit=${limit}` : \"\"}${addressdetails ? \"&addressdetails=1\" : \"\"}&accept-language=${hass.locale.language}&email=abuse@home-assistant.io`, {\n  headers: {\n    \"User-Agent\": `HomeAssistant/${hass.config.version}`\n  }\n}).then(res => {\n  if (res.ok) {\n    return res.json();\n  }\n  throw new Error(res.statusText);\n});\nexport const reverseGeocode = (location, hass, zoom) => fetch(`https://nominatim.openstreetmap.org/reverse.php?lat=${location[0]}&lon=${location[1]}&accept-language=${hass.locale.language}&zoom=${zoom !== null && zoom !== void 0 ? zoom : 18}&format=jsonv2&email=abuse@home-assistant.io`, {\n  headers: {\n    \"User-Agent\": `HomeAssistant/${hass.config.version}`\n  }\n}).then(res => {\n  if (res.ok) {\n    return res.json();\n  }\n  throw new Error(res.statusText);\n});","map":{"version":3,"names":["searchPlaces","address","hass","addressdetails","limit","fetch","locale","language","headers","config","version","then","res","ok","json","Error","statusText","reverseGeocode","location","zoom"],"sources":["/workspaces/frontend/src/data/openstreetmap.ts"],"sourcesContent":["import { HomeAssistant } from \"../types\";\n\nexport interface OpenStreetMapPlace {\n  place_id: number;\n  licence: string;\n  osm_type: string;\n  osm_id: number;\n  lat: string;\n  lon: string;\n  place_rank: number;\n  category: string;\n  type: string;\n  importance: number;\n  addresstype: string;\n  name: string | null;\n  display_name: string;\n  address: {\n    house_number?: string;\n    road?: string;\n    neighbourhood?: string;\n    city?: string;\n    municipality?: string;\n    state?: string;\n    country?: string;\n    postcode?: string;\n    country_code: string;\n    [key: string]: string | undefined;\n  };\n  boundingbox: number[];\n}\n\nexport const searchPlaces = (\n  address: string,\n  hass: HomeAssistant,\n  addressdetails?: boolean,\n  limit?: number\n): Promise<OpenStreetMapPlace[]> =>\n  fetch(\n    `https://nominatim.openstreetmap.org/search.php?q=${address}&format=jsonv2${\n      limit ? `&limit=${limit}` : \"\"\n    }${addressdetails ? \"&addressdetails=1\" : \"\"}&accept-language=${\n      hass.locale.language\n    }&email=abuse@home-assistant.io`,\n    { headers: { \"User-Agent\": `HomeAssistant/${hass.config.version}` } }\n  ).then((res) => {\n    if (res.ok) {\n      return res.json();\n    }\n    throw new Error(res.statusText);\n  });\n\nexport const reverseGeocode = (\n  location: [number, number],\n  hass: HomeAssistant,\n  zoom?: number\n): Promise<OpenStreetMapPlace> =>\n  fetch(\n    `https://nominatim.openstreetmap.org/reverse.php?lat=${location[0]}&lon=${\n      location[1]\n    }&accept-language=${hass.locale.language}&zoom=${\n      zoom ?? 18\n    }&format=jsonv2&email=abuse@home-assistant.io`,\n    { headers: { \"User-Agent\": `HomeAssistant/${hass.config.version}` } }\n  ).then((res) => {\n    if (res.ok) {\n      return res.json();\n    }\n    throw new Error(res.statusText);\n  });\n"],"mappings":"AA+BA,OAAO,MAAMA,YAAY,GAAGA,CAC1BC,OAAe,EACfC,IAAmB,EACnBC,cAAwB,EACxBC,KAAc,KAEdC,KAAK,CACF,oDAAmDJ,OAAQ,iBAC1DG,KAAK,GAAI,UAASA,KAAM,EAAC,GAAG,EAC7B,GAAED,cAAc,GAAG,mBAAmB,GAAG,EAAG,oBAC3CD,IAAI,CAACI,MAAM,CAACC,QACb,gCAA+B,EAChC;EAAEC,OAAO,EAAE;IAAE,YAAY,EAAG,iBAAgBN,IAAI,CAACO,MAAM,CAACC,OAAQ;EAAE;AAAE,CACtE,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAK;EACd,IAAIA,GAAG,CAACC,EAAE,EAAE;IACV,OAAOD,GAAG,CAACE,IAAI,CAAC,CAAC;EACnB;EACA,MAAM,IAAIC,KAAK,CAACH,GAAG,CAACI,UAAU,CAAC;AACjC,CAAC,CAAC;AAEJ,OAAO,MAAMC,cAAc,GAAGA,CAC5BC,QAA0B,EAC1BhB,IAAmB,EACnBiB,IAAa,KAEbd,KAAK,CACF,uDAAsDa,QAAQ,CAAC,CAAC,CAAE,QACjEA,QAAQ,CAAC,CAAC,CACX,oBAAmBhB,IAAI,CAACI,MAAM,CAACC,QAAS,SACvCY,IAAI,aAAJA,IAAI,cAAJA,IAAI,GAAI,EACT,8CAA6C,EAC9C;EAAEX,OAAO,EAAE;IAAE,YAAY,EAAG,iBAAgBN,IAAI,CAACO,MAAM,CAACC,OAAQ;EAAE;AAAE,CACtE,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAK;EACd,IAAIA,GAAG,CAACC,EAAE,EAAE;IACV,OAAOD,GAAG,CAACE,IAAI,CAAC,CAAC;EACnB;EACA,MAAM,IAAIC,KAAK,CAACH,GAAG,CAACI,UAAU,CAAC;AACjC,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}