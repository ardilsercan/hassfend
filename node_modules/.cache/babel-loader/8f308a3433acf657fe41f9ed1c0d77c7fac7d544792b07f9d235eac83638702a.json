{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport { html, LitElement } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport \"../../../../../components/ha-form/ha-form\";\nconst SCHEMA = [{\n  name: \"wait_template\",\n  selector: {\n    template: {}\n  }\n}, {\n  name: \"timeout\",\n  required: false,\n  selector: {\n    text: {}\n  }\n}, {\n  name: \"continue_on_timeout\",\n  selector: {\n    boolean: {}\n  }\n}];\nexport let HaWaitAction = _decorate([customElement(\"ha-automation-action-wait_template\")], function (_initialize, _LitElement) {\n  class HaWaitAction extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaWaitAction,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"action\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"disabled\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"defaultConfig\",\n      value: function defaultConfig() {\n        return {\n          wait_template: \"\",\n          continue_on_timeout: true\n        };\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        return html`\n      <ha-form\n        .hass=${this.hass}\n        .data=${this.action}\n        .schema=${SCHEMA}\n        .disabled=${this.disabled}\n        .computeLabel=${this._computeLabelCallback}\n      ></ha-form>\n    `;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_computeLabelCallback\",\n      value() {\n        return schema => this.hass.localize(`ui.panel.config.automation.editor.actions.type.wait_template.${schema.name === \"continue_on_timeout\" ? \"continue_timeout\" : schema.name}`);\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["html","LitElement","customElement","property","SCHEMA","name","selector","template","required","text","boolean","HaWaitAction","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","type","Boolean","static","defaultConfig","wait_template","continue_on_timeout","render","hass","action","disabled","_computeLabelCallback","schema","localize"],"sources":["/workspaces/frontend/src/panels/config/automation/action/types/ha-automation-action-wait_template.ts"],"sourcesContent":["import { html, LitElement } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport type { WaitAction } from \"../../../../../data/script\";\nimport type { HomeAssistant } from \"../../../../../types\";\nimport type { ActionElement } from \"../ha-automation-action-row\";\nimport \"../../../../../components/ha-form/ha-form\";\nimport type { SchemaUnion } from \"../../../../../components/ha-form/types\";\n\nconst SCHEMA = [\n  {\n    name: \"wait_template\",\n    selector: {\n      template: {},\n    },\n  },\n  {\n    name: \"timeout\",\n    required: false,\n    selector: {\n      text: {},\n    },\n  },\n  {\n    name: \"continue_on_timeout\",\n    selector: { boolean: {} },\n  },\n] as const;\n\n@customElement(\"ha-automation-action-wait_template\")\nexport class HaWaitAction extends LitElement implements ActionElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public action!: WaitAction;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  public static get defaultConfig() {\n    return { wait_template: \"\", continue_on_timeout: true };\n  }\n\n  protected render() {\n    return html`\n      <ha-form\n        .hass=${this.hass}\n        .data=${this.action}\n        .schema=${SCHEMA}\n        .disabled=${this.disabled}\n        .computeLabel=${this._computeLabelCallback}\n      ></ha-form>\n    `;\n  }\n\n  private _computeLabelCallback = (\n    schema: SchemaUnion<typeof SCHEMA>\n  ): string =>\n    this.hass.localize(\n      `ui.panel.config.automation.editor.actions.type.wait_template.${\n        schema.name === \"continue_on_timeout\" ? \"continue_timeout\" : schema.name\n      }`\n    );\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-automation-action-wait_template\": HaWaitAction;\n  }\n}\n"],"mappings":";AAAA,SAASA,IAAI,EAAEC,UAAU,QAAQ,KAAK;AACtC,SAASC,aAAa,EAAEC,QAAQ,QAAQ,gBAAgB;AAIxD,OAAO,2CAA2C;AAGlD,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,eAAe;EACrBC,QAAQ,EAAE;IACRC,QAAQ,EAAE,CAAC;EACb;AACF,CAAC,EACD;EACEF,IAAI,EAAE,SAAS;EACfG,QAAQ,EAAE,KAAK;EACfF,QAAQ,EAAE;IACRG,IAAI,EAAE,CAAC;EACT;AACF,CAAC,EACD;EACEJ,IAAI,EAAE,qBAAqB;EAC3BC,QAAQ,EAAE;IAAEI,OAAO,EAAE,CAAC;EAAE;AAC1B,CAAC,CACO;AAEV,WACaC,YAAY,GAAAC,SAAA,EADxBV,aAAa,CAAC,oCAAoC,CAAC,aAAAW,WAAA,EAAAC,WAAA;EAApD,MACaH,YAAY,SAAAG,WAAA,CAA6C;IAAAC,YAAA,GAAAC,IAAA;MAAA,SAAAA,IAAA;MAAAH,WAAA;IAAA;EA+BtE;EAAC;IAAAI,CAAA,EA/BYN,YAAY;IAAAO,CAAA;MAAAC,IAAA;MAAAC,UAAA,GACtBjB,QAAQ,CAAC;QAAEkB,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAC,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAE9BjB,QAAQ,CAAC;QAAEkB,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAC,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAE9BjB,QAAQ,CAAC;QAAEqB,IAAI,EAAEC;MAAQ,CAAC,CAAC;MAAAH,GAAA;MAAAC,MAAA;QAAA,OAAmB,KAAK;MAAA;IAAA;MAAAJ,IAAA;MAAAO,MAAA;MAAAJ,GAAA;MAAAC,KAAA,EAEpD,SAAAI,cAAA,EAAkC;QAChC,OAAO;UAAEC,aAAa,EAAE,EAAE;UAAEC,mBAAmB,EAAE;QAAK,CAAC;MACzD;IAAC;MAAAV,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAO,OAAA,EAAmB;QACjB,OAAO9B,IAAK;AAChB;AACA,gBAAgB,IAAI,CAAC+B,IAAK;AAC1B,gBAAgB,IAAI,CAACC,MAAO;AAC5B,kBAAkB5B,MAAO;AACzB,oBAAoB,IAAI,CAAC6B,QAAS;AAClC,wBAAwB,IAAI,CAACC,qBAAsB;AACnD;AACA,KAAK;MACH;IAAC;MAAAf,IAAA;MAAAG,GAAA;MAAAC,MAAA;QAAA,OAGCY,MAAkC,IAElC,IAAI,CAACJ,IAAI,CAACK,QAAQ,CACf,gEACCD,MAAM,CAAC9B,IAAI,KAAK,qBAAqB,GAAG,kBAAkB,GAAG8B,MAAM,CAAC9B,IACrE,EACH,CAAC;MAAA;IAAA;EAAA;AAAA,GA9B6BJ,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}