{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { until } from \"lit/directives/until\";\nimport { formatNumber } from \"../common/number/format_number\";\nlet HaAttributeValue = _decorate([customElement(\"ha-attribute-value\")], function (_initialize, _LitElement) {\n  class HaAttributeValue extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaAttributeValue,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"stateObj\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"attribute\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        attribute: \"hide-unit\"\n      })],\n      key: \"hideUnit\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this.stateObj) {\n          return nothing;\n        }\n        const attributeValue = this.stateObj.attributes[this.attribute];\n        if (typeof attributeValue === \"number\" && this.hideUnit) {\n          return formatNumber(attributeValue, this.hass.locale);\n        }\n        if (typeof attributeValue === \"string\") {\n          // URL handling\n          if (attributeValue.startsWith(\"http\")) {\n            try {\n              // If invalid URL, exception will be raised\n              const url = new URL(attributeValue);\n              if (url.protocol === \"http:\" || url.protocol === \"https:\") return html`\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href=${attributeValue}\n              >\n                ${attributeValue}\n              </a>\n            `;\n            } catch (_unused) {\n              // Nothing to do here\n            }\n          }\n        }\n        if (Array.isArray(attributeValue) && attributeValue.some(val => val instanceof Object) || !Array.isArray(attributeValue) && attributeValue instanceof Object) {\n          const yaml = import(\"js-yaml\").then(({\n            dump\n          }) => dump(attributeValue));\n          return html`<pre>${until(yaml, \"\")}</pre>`;\n        }\n        return this.hass.formatEntityAttributeValue(this.stateObj, this.attribute);\n      }\n    }, {\n      kind: \"field\",\n      static: true,\n      key: \"styles\",\n      value() {\n        return css`\n    pre {\n      font-family: inherit;\n      font-size: inherit;\n      margin: 0;\n      overflow-wrap: break-word;\n      white-space: pre-line;\n    }\n  `;\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","nothing","customElement","property","until","formatNumber","HaAttributeValue","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","type","Boolean","render","stateObj","attributeValue","attributes","hideUnit","hass","locale","startsWith","url","URL","protocol","_unused","Array","isArray","some","val","Object","yaml","then","dump","formatEntityAttributeValue","static"],"sources":["/workspaces/frontend/src/components/ha-attribute-value.ts"],"sourcesContent":["import { HassEntity } from \"home-assistant-js-websocket\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { until } from \"lit/directives/until\";\nimport { formatNumber } from \"../common/number/format_number\";\nimport { HomeAssistant } from \"../types\";\n\n@customElement(\"ha-attribute-value\")\nclass HaAttributeValue extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public stateObj?: HassEntity;\n\n  @property() public attribute!: string;\n\n  @property({ type: Boolean, attribute: \"hide-unit\" }) public hideUnit = false;\n\n  protected render() {\n    if (!this.stateObj) {\n      return nothing;\n    }\n    const attributeValue = this.stateObj.attributes[this.attribute];\n\n    if (typeof attributeValue === \"number\" && this.hideUnit) {\n      return formatNumber(attributeValue, this.hass.locale);\n    }\n\n    if (typeof attributeValue === \"string\") {\n      // URL handling\n      if (attributeValue.startsWith(\"http\")) {\n        try {\n          // If invalid URL, exception will be raised\n          const url = new URL(attributeValue);\n          if (url.protocol === \"http:\" || url.protocol === \"https:\")\n            return html`\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href=${attributeValue}\n              >\n                ${attributeValue}\n              </a>\n            `;\n        } catch {\n          // Nothing to do here\n        }\n      }\n    }\n\n    if (\n      (Array.isArray(attributeValue) &&\n        attributeValue.some((val) => val instanceof Object)) ||\n      (!Array.isArray(attributeValue) && attributeValue instanceof Object)\n    ) {\n      const yaml = import(\"js-yaml\").then(({ dump }) => dump(attributeValue));\n      return html`<pre>${until(yaml, \"\")}</pre>`;\n    }\n\n    return this.hass.formatEntityAttributeValue(this.stateObj!, this.attribute);\n  }\n\n  static styles = css`\n    pre {\n      font-family: inherit;\n      font-size: inherit;\n      margin: 0;\n      overflow-wrap: break-word;\n      white-space: pre-line;\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-attribute-value\": HaAttributeValue;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}