{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport { css, LitElement, html, svg } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { NODE_SIZE, SPACING } from \"./hat-graph-const\";\nimport { isSafari } from \"../../util/is_safari\";\n\n/**\n * @attribute active\n * @attribute track\n */\nexport let HatGraphNode = _decorate([customElement(\"hat-graph-node\")], function (_initialize, _LitElement) {\n  class HatGraphNode extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HatGraphNode,\n    d: [{\n      kind: \"field\",\n      decorators: [property()],\n      key: \"iconPath\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        reflect: true\n      })],\n      key: \"disabled\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        reflect: true,\n        type: Boolean\n      })],\n      key: \"notEnabled\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        reflect: true,\n        type: Boolean\n      })],\n      key: \"graphStart\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        attribute: \"nofocus\"\n      })],\n      key: \"noFocus\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        reflect: true,\n        type: Number\n      })],\n      key: \"badge\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"updated\",\n      value: function updated(changedProps) {\n        if (changedProps.has(\"noFocus\")) {\n          if (!this.hasAttribute(\"tabindex\") && !this.noFocus) {\n            this.setAttribute(\"tabindex\", \"0\");\n          } else if (changedProps.get(\"noFocus\") !== undefined && this.noFocus) {\n            this.removeAttribute(\"tabindex\");\n          }\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        const height = NODE_SIZE + (this.graphStart ? 2 : SPACING + 1);\n        const width = SPACING + NODE_SIZE;\n        return html`\n      <svg\n        class=${isSafari ? \"safari\" : \"\"}\n        width=\"${width}px\"\n        height=\"${height}px\"\n        viewBox=\"-${Math.ceil(width / 2)} -${this.graphStart ? Math.ceil(height / 2) : Math.ceil((NODE_SIZE + SPACING * 2) / 2)} ${width} ${height}\"\n      >\n        ${this.graphStart ? `` : svg`\n          <path\n            class=\"connector\"\n            d=\"\n              M 0 ${-SPACING - NODE_SIZE / 2}\n              L 0 0\n            \"\n            line-caps=\"round\"\n          />\n          `}\n        <g class=\"node\">\n          <circle cx=\"0\" cy=\"0\" r=${NODE_SIZE / 2} />\n          }\n          ${this.badge ? svg`\n        <g class=\"number\">\n          <circle\n            cx=\"8\"\n            cy=${-NODE_SIZE / 2}\n            r=\"8\"\n          ></circle>\n          <text\n            x=\"8\"\n            y=${-NODE_SIZE / 2}\n            text-anchor=\"middle\"\n            alignment-baseline=\"middle\"\n          >${this.badge > 9 ? \"9+\" : this.badge}</text>\n        </g>\n      ` : \"\"}\n          <g style=\"pointer-events: none\" transform=\"translate(${-12} ${-12})\">\n            ${this.iconPath ? svg`<path class=\"icon\" d=${this.iconPath}/>` : \"\"}\n          </g>\n        </g>\n      </svg>\n    `;\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css`\n      :host {\n        display: flex;\n        flex-direction: column;\n        min-width: calc(var(--hat-graph-node-size) + var(--hat-graph-spacing));\n        height: calc(\n          var(--hat-graph-node-size) + var(--hat-graph-spacing) + 1px\n        );\n      }\n      :host([graphStart]) {\n        height: calc(var(--hat-graph-node-size) + 2px);\n      }\n      :host([track]) {\n        --stroke-clr: var(--track-clr);\n        --icon-clr: var(--default-icon-clr);\n      }\n      :host([active]) circle {\n        --stroke-clr: var(--active-clr);\n        --icon-clr: var(--default-icon-clr);\n      }\n      :host(:focus) {\n        outline: none;\n      }\n      :host(:hover) circle {\n        --stroke-clr: var(--hover-clr);\n        --icon-clr: var(--default-icon-clr);\n      }\n      :host([notEnabled]) circle {\n        --stroke-clr: var(--disabled-clr);\n      }\n      :host([notEnabled][active]) circle {\n        --stroke-clr: var(--disabled-active-clr);\n      }\n      :host([notEnabled]:hover) circle {\n        --stroke-clr: var(--disabled-hover-clr);\n      }\n      svg:not(.safari) {\n        width: 100%;\n        height: 100%;\n      }\n      circle,\n      path.connector {\n        stroke: var(--stroke-clr);\n        stroke-width: 2;\n        fill: none;\n      }\n      circle {\n        fill: var(--background-clr);\n        stroke: var(--circle-clr, var(--stroke-clr));\n      }\n      .number circle {\n        fill: var(--track-clr);\n        stroke: none;\n        stroke-width: 0;\n      }\n      .number text {\n        font-size: smaller;\n      }\n      path.icon {\n        fill: var(--icon-clr);\n      }\n    `;\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","LitElement","html","svg","customElement","property","NODE_SIZE","SPACING","isSafari","HatGraphNode","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","key","value","type","Boolean","reflect","attribute","Number","updated","changedProps","has","hasAttribute","noFocus","setAttribute","get","undefined","removeAttribute","render","height","graphStart","width","Math","ceil","badge","iconPath","static","styles"],"sources":["/workspaces/frontend/src/components/trace/hat-graph-node.ts"],"sourcesContent":["import {\n  css,\n  LitElement,\n  PropertyValues,\n  html,\n  TemplateResult,\n  svg,\n} from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { NODE_SIZE, SPACING } from \"./hat-graph-const\";\nimport { isSafari } from \"../../util/is_safari\";\n\n/**\n * @attribute active\n * @attribute track\n */\n@customElement(\"hat-graph-node\")\nexport class HatGraphNode extends LitElement {\n  @property() iconPath?: string;\n\n  @property({ type: Boolean, reflect: true }) public disabled = false;\n\n  @property({ reflect: true, type: Boolean }) notEnabled = false;\n\n  @property({ reflect: true, type: Boolean }) graphStart = false;\n\n  @property({ type: Boolean, attribute: \"nofocus\" }) noFocus = false;\n\n  @property({ reflect: true, type: Number }) badge?: number;\n\n  protected updated(changedProps: PropertyValues) {\n    if (changedProps.has(\"noFocus\")) {\n      if (!this.hasAttribute(\"tabindex\") && !this.noFocus) {\n        this.setAttribute(\"tabindex\", \"0\");\n      } else if (changedProps.get(\"noFocus\") !== undefined && this.noFocus) {\n        this.removeAttribute(\"tabindex\");\n      }\n    }\n  }\n\n  protected render(): TemplateResult {\n    const height = NODE_SIZE + (this.graphStart ? 2 : SPACING + 1);\n    const width = SPACING + NODE_SIZE;\n    return html`\n      <svg\n        class=${isSafari ? \"safari\" : \"\"}\n        width=\"${width}px\"\n        height=\"${height}px\"\n        viewBox=\"-${Math.ceil(width / 2)} -${this.graphStart\n          ? Math.ceil(height / 2)\n          : Math.ceil((NODE_SIZE + SPACING * 2) / 2)} ${width} ${height}\"\n      >\n        ${this.graphStart\n          ? ``\n          : svg`\n          <path\n            class=\"connector\"\n            d=\"\n              M 0 ${-SPACING - NODE_SIZE / 2}\n              L 0 0\n            \"\n            line-caps=\"round\"\n          />\n          `}\n        <g class=\"node\">\n          <circle cx=\"0\" cy=\"0\" r=${NODE_SIZE / 2} />\n          }\n          ${this.badge\n            ? svg`\n        <g class=\"number\">\n          <circle\n            cx=\"8\"\n            cy=${-NODE_SIZE / 2}\n            r=\"8\"\n          ></circle>\n          <text\n            x=\"8\"\n            y=${-NODE_SIZE / 2}\n            text-anchor=\"middle\"\n            alignment-baseline=\"middle\"\n          >${this.badge > 9 ? \"9+\" : this.badge}</text>\n        </g>\n      `\n            : \"\"}\n          <g style=\"pointer-events: none\" transform=\"translate(${-12} ${-12})\">\n            ${this.iconPath ? svg`<path class=\"icon\" d=${this.iconPath}/>` : \"\"}\n          </g>\n        </g>\n      </svg>\n    `;\n  }\n\n  static get styles() {\n    return css`\n      :host {\n        display: flex;\n        flex-direction: column;\n        min-width: calc(var(--hat-graph-node-size) + var(--hat-graph-spacing));\n        height: calc(\n          var(--hat-graph-node-size) + var(--hat-graph-spacing) + 1px\n        );\n      }\n      :host([graphStart]) {\n        height: calc(var(--hat-graph-node-size) + 2px);\n      }\n      :host([track]) {\n        --stroke-clr: var(--track-clr);\n        --icon-clr: var(--default-icon-clr);\n      }\n      :host([active]) circle {\n        --stroke-clr: var(--active-clr);\n        --icon-clr: var(--default-icon-clr);\n      }\n      :host(:focus) {\n        outline: none;\n      }\n      :host(:hover) circle {\n        --stroke-clr: var(--hover-clr);\n        --icon-clr: var(--default-icon-clr);\n      }\n      :host([notEnabled]) circle {\n        --stroke-clr: var(--disabled-clr);\n      }\n      :host([notEnabled][active]) circle {\n        --stroke-clr: var(--disabled-active-clr);\n      }\n      :host([notEnabled]:hover) circle {\n        --stroke-clr: var(--disabled-hover-clr);\n      }\n      svg:not(.safari) {\n        width: 100%;\n        height: 100%;\n      }\n      circle,\n      path.connector {\n        stroke: var(--stroke-clr);\n        stroke-width: 2;\n        fill: none;\n      }\n      circle {\n        fill: var(--background-clr);\n        stroke: var(--circle-clr, var(--stroke-clr));\n      }\n      .number circle {\n        fill: var(--track-clr);\n        stroke: none;\n        stroke-width: 0;\n      }\n      .number text {\n        font-size: smaller;\n      }\n      path.icon {\n        fill: var(--icon-clr);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hat-graph-node\": HatGraphNode;\n  }\n}\n"],"mappings":"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AACmC,KAAK,GAAG,CAAC,GAAG,IAAI,GAAG,IAAI,CAACA,KAAM;AAChD;AACA,OAAO,GACO,EAAG;AACjB,iEAAiE,CAAC,EAAG,IAAG,CAAC,EAAG;AAC5E,cAAc,IAAI,CAACC,QAAQ,GAAGvC,GAAI,wBAAuB,IAAI,CAACuC,QAAS,IAAG,GAAG,EAAG;AAChF;AACA;AACA;AACA,KAAK;MACH;IAAC;MAAAzB,IAAA;MAAA0B,MAAA;MAAAxB,GAAA;MAAAC,KAAA,EAED,SAAAwB,OAAA,EAAoB;QAClB,OAAO5C,GAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;MACH;IAAC;EAAA;AAAA,GA1I+BC,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}