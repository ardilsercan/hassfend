{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport \"@material/mwc-button\";\nconst mdiContentCopy = \"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\";\nconst mdiHelpCircle = \"M15.07,11.25L14.17,12.17C13.45,12.89 13,13.5 13,15H11V14.5C11,13.39 11.45,12.39 12.17,11.67L13.41,10.41C13.78,10.05 14,9.55 14,9C14,7.89 13.1,7 12,7A2,2 0 0,0 10,9H8A4,4 0 0,1 12,5A4,4 0 0,1 16,9C16,9.88 15.64,10.67 15.07,11.25M13,19H11V17H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12C22,6.47 17.5,2 12,2Z\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { copyToClipboard } from \"../../../../common/util/copy-clipboard\";\nimport \"../../../../components/ha-alert\";\nimport \"../../../../components/ha-card\";\nimport \"../../../../components/ha-switch\";\n// eslint-disable-next-line\n\nimport { connectCloudRemote, disconnectCloudRemote } from \"../../../../data/cloud\";\nimport { showToast } from \"../../../../util/toast\";\nimport { showCloudCertificateDialog } from \"../dialog-cloud-certificate/show-dialog-cloud-certificate\";\nexport let CloudRemotePref = _decorate([customElement(\"cloud-remote-pref\")], function (_initialize, _LitElement) {\n  class CloudRemotePref extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: CloudRemotePref,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"cloudStatus\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this.cloudStatus) {\n          return nothing;\n        }\n        const {\n          remote_enabled\n        } = this.cloudStatus.prefs;\n        const {\n          remote_connected,\n          remote_domain,\n          remote_certificate,\n          remote_certificate_status\n        } = this.cloudStatus;\n        if (!remote_certificate || remote_certificate_status !== \"ready\") {\n          return html`\n        <ha-card\n          outlined\n          header=${this.hass.localize(\"ui.panel.config.cloud.account.remote.title\")}\n        >\n          <div class=\"preparing\">\n            ${remote_certificate_status === \"error\" ? this.hass.localize(\"ui.panel.config.cloud.account.remote.cerificate_error\") : remote_certificate_status === \"loading\" ? this.hass.localize(\"ui.panel.config.cloud.account.remote.cerificate_loading\") : remote_certificate_status === \"loaded\" ? this.hass.localize(\"ui.panel.config.cloud.account.remote.cerificate_loaded\") : this.hass.localize(\"ui.panel.config.cloud.account.remote.access_is_being_prepared\")}\n          </div>\n        </ha-card>\n      `;\n        }\n        return html`\n      <ha-card\n        outlined\n        header=${this.hass.localize(\"ui.panel.config.cloud.account.remote.title\")}\n      >\n        <div class=\"header-actions\">\n          <a\n            href=\"https://www.nabucasa.com/config/remote/\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            class=\"icon-link\"\n          >\n            <ha-icon-button\n              .label=${this.hass.localize(\"ui.panel.config.cloud.account.remote.link_learn_how_it_works\")}\n              .path=${mdiHelpCircle}\n            ></ha-icon-button>\n          </a>\n          <ha-switch\n            .checked=${remote_enabled}\n            @change=${this._toggleChanged}\n          ></ha-switch>\n        </div>\n\n        <div class=\"card-content\">\n          ${!remote_connected && remote_enabled ? html`\n                <ha-alert\n                  .title=${this.hass.localize(`ui.panel.config.cloud.account.remote.reconnecting`)}\n                ></ha-alert>\n              ` : \"\"}\n          ${this.hass.localize(\"ui.panel.config.cloud.account.remote.info\")}\n          ${this.hass.localize(`ui.panel.config.cloud.account.remote.${remote_connected ? \"instance_is_available\" : \"instance_will_be_available\"}`)}\n          <a\n            href=\"https://${remote_domain}\"\n            target=\"_blank\"\n            class=\"break-word\"\n            rel=\"noreferrer\"\n            >${this.hass.localize(\"ui.panel.config.cloud.account.remote.nabu_casa_url\")}</a\n          >.\n          <ha-svg-icon\n            .url=${`https://${remote_domain}`}\n            .path=${mdiContentCopy}\n            @click=${this._copyURL}\n          ></ha-svg-icon>\n        </div>\n        <div class=\"card-actions\">\n          <mwc-button @click=${this._openCertInfo}>\n            ${this.hass.localize(\"ui.panel.config.cloud.account.remote.certificate_info\")}\n          </mwc-button>\n        </div>\n      </ha-card>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_openCertInfo\",\n      value: function _openCertInfo() {\n        showCloudCertificateDialog(this, {\n          certificateInfo: this.cloudStatus.remote_certificate\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_toggleChanged\",\n      value: async function _toggleChanged(ev) {\n        const toggle = ev.target;\n        try {\n          if (toggle.checked) {\n            await connectCloudRemote(this.hass);\n          } else {\n            await disconnectCloudRemote(this.hass);\n          }\n          fireEvent(this, \"ha-refresh-cloud-status\");\n        } catch (err) {\n          alert(err.message);\n          toggle.checked = !toggle.checked;\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_copyURL\",\n      value: async function _copyURL(ev) {\n        const url = ev.currentTarget.url;\n        await copyToClipboard(url);\n        showToast(this, {\n          message: this.hass.localize(\"ui.common.copied_clipboard\")\n        });\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css`\n      .preparing {\n        padding: 0 16px 16px;\n      }\n      a {\n        color: var(--primary-color);\n      }\n      .header-actions {\n        position: absolute;\n        right: 24px;\n        inset-inline-end: 24px;\n        inset-inline-start: initial;\n        top: 24px;\n        display: flex;\n        flex-direction: row;\n      }\n      .header-actions .icon-link {\n        margin-top: -16px;\n        margin-right: 8px;\n        margin-inline-end: 8px;\n        margin-inline-start: initial;\n        direction: var(--direction);\n        color: var(--secondary-text-color);\n      }\n      .warning {\n        font-weight: bold;\n        margin-bottom: 1em;\n      }\n      .break-word {\n        overflow-wrap: break-word;\n      }\n      .connection-status {\n        position: absolute;\n        right: 24px;\n        top: 24px;\n      }\n      .card-actions {\n        display: flex;\n      }\n      .card-actions a {\n        text-decoration: none;\n      }\n      ha-svg-icon {\n        --mdc-icon-size: 18px;\n        color: var(--secondary-text-color);\n        cursor: pointer;\n      }\n    `;\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["mdiContentCopy","mdiHelpCircle","css","html","LitElement","nothing","customElement","property","fireEvent","copyToClipboard","connectCloudRemote","disconnectCloudRemote","showToast","showCloudCertificateDialog","CloudRemotePref","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","render","cloudStatus","remote_enabled","prefs","remote_connected","remote_domain","remote_certificate","remote_certificate_status","hass","localize","_toggleChanged","_copyURL","_openCertInfo","certificateInfo","ev","toggle","target","checked","err","alert","message","url","currentTarget","static","styles"],"sources":["/workspaces/frontend/src/panels/config/cloud/account/cloud-remote-pref.ts"],"sourcesContent":["import \"@material/mwc-button\";\nimport { mdiContentCopy, mdiHelpCircle } from \"@mdi/js\";\nimport { css, CSSResultGroup, html, LitElement, nothing } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { copyToClipboard } from \"../../../../common/util/copy-clipboard\";\nimport \"../../../../components/ha-alert\";\nimport \"../../../../components/ha-card\";\nimport \"../../../../components/ha-switch\";\n// eslint-disable-next-line\nimport type { HaSwitch } from \"../../../../components/ha-switch\";\nimport {\n  CloudStatusLoggedIn,\n  connectCloudRemote,\n  disconnectCloudRemote,\n} from \"../../../../data/cloud\";\nimport type { HomeAssistant } from \"../../../../types\";\nimport { showToast } from \"../../../../util/toast\";\nimport { showCloudCertificateDialog } from \"../dialog-cloud-certificate/show-dialog-cloud-certificate\";\n\n@customElement(\"cloud-remote-pref\")\nexport class CloudRemotePref extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public cloudStatus?: CloudStatusLoggedIn;\n\n  protected render() {\n    if (!this.cloudStatus) {\n      return nothing;\n    }\n\n    const { remote_enabled } = this.cloudStatus.prefs;\n\n    const {\n      remote_connected,\n      remote_domain,\n      remote_certificate,\n      remote_certificate_status,\n    } = this.cloudStatus;\n\n    if (!remote_certificate || remote_certificate_status !== \"ready\") {\n      return html`\n        <ha-card\n          outlined\n          header=${this.hass.localize(\n            \"ui.panel.config.cloud.account.remote.title\"\n          )}\n        >\n          <div class=\"preparing\">\n            ${remote_certificate_status === \"error\"\n              ? this.hass.localize(\n                  \"ui.panel.config.cloud.account.remote.cerificate_error\"\n                )\n              : remote_certificate_status === \"loading\"\n                ? this.hass.localize(\n                    \"ui.panel.config.cloud.account.remote.cerificate_loading\"\n                  )\n                : remote_certificate_status === \"loaded\"\n                  ? this.hass.localize(\n                      \"ui.panel.config.cloud.account.remote.cerificate_loaded\"\n                    )\n                  : this.hass.localize(\n                      \"ui.panel.config.cloud.account.remote.access_is_being_prepared\"\n                    )}\n          </div>\n        </ha-card>\n      `;\n    }\n\n    return html`\n      <ha-card\n        outlined\n        header=${this.hass.localize(\n          \"ui.panel.config.cloud.account.remote.title\"\n        )}\n      >\n        <div class=\"header-actions\">\n          <a\n            href=\"https://www.nabucasa.com/config/remote/\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            class=\"icon-link\"\n          >\n            <ha-icon-button\n              .label=${this.hass.localize(\n                \"ui.panel.config.cloud.account.remote.link_learn_how_it_works\"\n              )}\n              .path=${mdiHelpCircle}\n            ></ha-icon-button>\n          </a>\n          <ha-switch\n            .checked=${remote_enabled}\n            @change=${this._toggleChanged}\n          ></ha-switch>\n        </div>\n\n        <div class=\"card-content\">\n          ${!remote_connected && remote_enabled\n            ? html`\n                <ha-alert\n                  .title=${this.hass.localize(\n                    `ui.panel.config.cloud.account.remote.reconnecting`\n                  )}\n                ></ha-alert>\n              `\n            : \"\"}\n          ${this.hass.localize(\"ui.panel.config.cloud.account.remote.info\")}\n          ${this.hass.localize(\n            `ui.panel.config.cloud.account.remote.${\n              remote_connected\n                ? \"instance_is_available\"\n                : \"instance_will_be_available\"\n            }`\n          )}\n          <a\n            href=\"https://${remote_domain}\"\n            target=\"_blank\"\n            class=\"break-word\"\n            rel=\"noreferrer\"\n            >${this.hass.localize(\n              \"ui.panel.config.cloud.account.remote.nabu_casa_url\"\n            )}</a\n          >.\n          <ha-svg-icon\n            .url=${`https://${remote_domain}`}\n            .path=${mdiContentCopy}\n            @click=${this._copyURL}\n          ></ha-svg-icon>\n        </div>\n        <div class=\"card-actions\">\n          <mwc-button @click=${this._openCertInfo}>\n            ${this.hass.localize(\n              \"ui.panel.config.cloud.account.remote.certificate_info\"\n            )}\n          </mwc-button>\n        </div>\n      </ha-card>\n    `;\n  }\n\n  private _openCertInfo() {\n    showCloudCertificateDialog(this, {\n      certificateInfo: this.cloudStatus!.remote_certificate!,\n    });\n  }\n\n  private async _toggleChanged(ev) {\n    const toggle = ev.target as HaSwitch;\n\n    try {\n      if (toggle.checked) {\n        await connectCloudRemote(this.hass);\n      } else {\n        await disconnectCloudRemote(this.hass);\n      }\n      fireEvent(this, \"ha-refresh-cloud-status\");\n    } catch (err: any) {\n      alert(err.message);\n      toggle.checked = !toggle.checked;\n    }\n  }\n\n  private async _copyURL(ev): Promise<void> {\n    const url = ev.currentTarget.url;\n    await copyToClipboard(url);\n    showToast(this, {\n      message: this.hass.localize(\"ui.common.copied_clipboard\"),\n    });\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      .preparing {\n        padding: 0 16px 16px;\n      }\n      a {\n        color: var(--primary-color);\n      }\n      .header-actions {\n        position: absolute;\n        right: 24px;\n        inset-inline-end: 24px;\n        inset-inline-start: initial;\n        top: 24px;\n        display: flex;\n        flex-direction: row;\n      }\n      .header-actions .icon-link {\n        margin-top: -16px;\n        margin-right: 8px;\n        margin-inline-end: 8px;\n        margin-inline-start: initial;\n        direction: var(--direction);\n        color: var(--secondary-text-color);\n      }\n      .warning {\n        font-weight: bold;\n        margin-bottom: 1em;\n      }\n      .break-word {\n        overflow-wrap: break-word;\n      }\n      .connection-status {\n        position: absolute;\n        right: 24px;\n        top: 24px;\n      }\n      .card-actions {\n        display: flex;\n      }\n      .card-actions a {\n        text-decoration: none;\n      }\n      ha-svg-icon {\n        --mdc-icon-size: 18px;\n        color: var(--secondary-text-color);\n        cursor: pointer;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"cloud-remote-pref\": CloudRemotePref;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}