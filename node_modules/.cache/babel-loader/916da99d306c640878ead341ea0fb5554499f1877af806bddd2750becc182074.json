{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/helpers/regeneratorRuntime\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _decorate from \"@babel/runtime/helpers/decorate\";\nvar _templateObject, _templateObject2;\nimport \"core-js/modules/es.array.concat.js\";\nimport \"@material/mwc-list/mwc-list\";\nvar mdiPencilOutline = \"M14.06,9L15,9.94L5.92,19H5V18.08L14.06,9M17.66,3C17.41,3 17.15,3.1 16.96,3.29L15.13,5.12L18.88,8.87L20.71,7.04C21.1,6.65 21.1,6 20.71,5.63L18.37,3.29C18.17,3.09 17.92,3 17.66,3M14.06,6.19L3,17.25V21H6.75L17.81,9.94L14.06,6.19Z\";\nvar mdiShape = \"M11,13.5V21.5H3V13.5H11M12,2L17.5,11H6.5L12,2M17.5,13C20,13 22,15 22,17.5C22,20 20,22 17.5,22C15,22 13,20 13,17.5C13,15 15,13 17.5,13Z\";\nimport { LitElement, css, html, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport { createCloseHeading } from \"../../../components/ha-dialog\";\nimport \"../../../components/ha-icon-next\";\nimport \"../../../components/ha-list-item\";\nimport { haStyle, haStyleDialog } from \"../../../resources/styles\";\nimport { shouldHandleRequestSelectedEvent } from \"../../../common/mwc/handle-request-selected-event\";\nvar EMPTY_CONFIG = {\n  views: [{\n    title: \"Home\"\n  }]\n};\nvar DialogNewDashboard = _decorate([customElement(\"ha-dialog-new-dashboard\")], function (_initialize, _LitElement) {\n  var DialogNewDashboard = /*#__PURE__*/function (_LitElement2) {\n    _inherits(DialogNewDashboard, _LitElement2);\n    function DialogNewDashboard() {\n      var _this;\n      _classCallCheck(this, DialogNewDashboard);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, DialogNewDashboard, [].concat(args));\n      _initialize(_assertThisInitialized(_this));\n      return _this;\n    }\n    return _createClass(DialogNewDashboard);\n  }(_LitElement);\n  return {\n    F: DialogNewDashboard,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_opened\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_params\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"showDialog\",\n      value: function showDialog(params) {\n        this._opened = true;\n        this._params = params;\n      }\n    }, {\n      kind: \"method\",\n      key: \"closeDialog\",\n      value: function closeDialog() {\n        if (this._opened) {\n          fireEvent(this, \"dialog-closed\", {\n            dialog: this.localName\n          });\n        }\n        this._opened = false;\n        this._params = undefined;\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this._opened) {\n          return nothing;\n        }\n        return html(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      <ha-dialog\\n        open\\n        hideActions\\n        @closed=\", \"\\n        .heading=\", \"\\n      >\\n        <mwc-list\\n          innerRole=\\\"listbox\\\"\\n          itemRoles=\\\"option\\\"\\n          innerAriaLabel=\", \"\\n          rootTabbable\\n          dialogInitialFocus\\n          @selected=\", \"\\n        >\\n          <ha-list-item\\n            hasmeta\\n            twoline\\n            graphic=\\\"icon\\\"\\n            .config=\", \"\\n            @request-selected=\", \"\\n          >\\n            <ha-svg-icon slot=\\\"graphic\\\" .path=\", \"></ha-svg-icon>\\n            \", \"\\n            <span slot=\\\"secondary\\\">\\n              \", \"\\n            </span>\\n            <ha-icon-next slot=\\\"meta\\\"></ha-icon-next>\\n          </ha-list-item>\\n          <li divider role=\\\"separator\\\"></li>\\n          <ha-list-item\\n            hasmeta\\n            twoline\\n            graphic=\\\"icon\\\"\\n            .config=\", \"\\n            @request-selected=\", \"\\n          >\\n            <ha-svg-icon slot=\\\"graphic\\\" .path=\", \"></ha-svg-icon>\\n            \", \"\\n            <span slot=\\\"secondary\\\"\\n              >\", \"</span\\n            >\\n            <ha-icon-next slot=\\\"meta\\\"></ha-icon-next>\\n          </ha-list-item>\\n        </mwc-list>\\n      </ha-dialog>\\n    \"])), this.closeDialog, createCloseHeading(this.hass, this.hass.localize(\"ui.panel.config.lovelace.dashboards.dialog_new.header\")), this.hass.localize(\"ui.panel.config.lovelace.dashboards.dialog_new.header\"), this._selected, EMPTY_CONFIG, this._selected, mdiPencilOutline, this.hass.localize(\"ui.panel.config.lovelace.dashboards.dialog_new.create_empty\"), this.hass.localize(\"ui.panel.config.lovelace.dashboards.dialog_new.create_empty_description\"), null, this._selected, mdiShape, this.hass.localize(\"ui.panel.config.lovelace.dashboards.dialog_new.default\"), this.hass.localize(\"ui.panel.config.lovelace.dashboards.dialog_new.default_description\"));\n      }\n    }, {\n      kind: \"method\",\n      key: \"_selected\",\n      value: function () {\n        var _selected2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(ev) {\n          var _this$_params;\n          var config;\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                if (shouldHandleRequestSelectedEvent(ev)) {\n                  _context.next = 2;\n                  break;\n                }\n                return _context.abrupt(\"return\");\n              case 2:\n                config = ev.currentTarget.config;\n                (_this$_params = this._params) === null || _this$_params === void 0 || _this$_params.selectConfig(config);\n                this.closeDialog();\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee, this);\n        }));\n        function _selected(_x) {\n          return _selected2.apply(this, arguments);\n        }\n        return _selected;\n      }()\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [haStyle, haStyleDialog, css(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n        ha-dialog {\\n          --dialog-content-padding: 0;\\n          --mdc-dialog-max-height: 60vh;\\n        }\\n        @media all and (min-width: 550px) {\\n          ha-dialog {\\n            --mdc-dialog-min-width: 500px;\\n          }\\n        }\\n        ha-icon-next {\\n          width: 24px;\\n        }\\n      \"])))];\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["mdiPencilOutline","mdiShape","LitElement","css","html","nothing","customElement","property","state","fireEvent","createCloseHeading","haStyle","haStyleDialog","shouldHandleRequestSelectedEvent","EMPTY_CONFIG","views","title","DialogNewDashboard","_decorate","_initialize","_LitElement","_LitElement2","_inherits","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_assertThisInitialized","_createClass","F","d","kind","decorators","attribute","key","value","showDialog","params","_opened","_params","closeDialog","dialog","localName","undefined","render","_templateObject","_taggedTemplateLiteral","hass","localize","_selected","_selected2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","ev","_this$_params","config","wrap","_callee$","_context","prev","next","abrupt","currentTarget","selectConfig","stop","_x","apply","static","styles","_templateObject2"],"sources":["/workspaces/frontend/src/panels/config/dashboard/dialog-new-dashboard.ts"],"sourcesContent":["import \"@material/mwc-list/mwc-list\";\nimport { mdiPencilOutline, mdiShape } from \"@mdi/js\";\nimport { CSSResultGroup, LitElement, css, html, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport { createCloseHeading } from \"../../../components/ha-dialog\";\nimport \"../../../components/ha-icon-next\";\nimport \"../../../components/ha-list-item\";\nimport { HassDialog } from \"../../../dialogs/make-dialog-manager\";\nimport { haStyle, haStyleDialog } from \"../../../resources/styles\";\nimport type { HomeAssistant } from \"../../../types\";\nimport { shouldHandleRequestSelectedEvent } from \"../../../common/mwc/handle-request-selected-event\";\nimport { NewDashboardDialogParams } from \"./show-dialog-new-dashboard\";\nimport { LovelaceRawConfig } from \"../../../data/lovelace/config/types\";\n\nconst EMPTY_CONFIG: LovelaceRawConfig = { views: [{ title: \"Home\" }] };\n\n@customElement(\"ha-dialog-new-dashboard\")\nclass DialogNewDashboard extends LitElement implements HassDialog {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @state() private _opened = false;\n\n  @state() private _params?: NewDashboardDialogParams;\n\n  public showDialog(params: NewDashboardDialogParams): void {\n    this._opened = true;\n    this._params = params;\n  }\n\n  public closeDialog(): void {\n    if (this._opened) {\n      fireEvent(this, \"dialog-closed\", { dialog: this.localName });\n    }\n    this._opened = false;\n    this._params = undefined;\n  }\n\n  protected render() {\n    if (!this._opened) {\n      return nothing;\n    }\n\n    return html`\n      <ha-dialog\n        open\n        hideActions\n        @closed=${this.closeDialog}\n        .heading=${createCloseHeading(\n          this.hass,\n          this.hass.localize(\n            `ui.panel.config.lovelace.dashboards.dialog_new.header`\n          )\n        )}\n      >\n        <mwc-list\n          innerRole=\"listbox\"\n          itemRoles=\"option\"\n          innerAriaLabel=${this.hass.localize(\n            `ui.panel.config.lovelace.dashboards.dialog_new.header`\n          )}\n          rootTabbable\n          dialogInitialFocus\n          @selected=${this._selected}\n        >\n          <ha-list-item\n            hasmeta\n            twoline\n            graphic=\"icon\"\n            .config=${EMPTY_CONFIG}\n            @request-selected=${this._selected}\n          >\n            <ha-svg-icon slot=\"graphic\" .path=${mdiPencilOutline}></ha-svg-icon>\n            ${this.hass.localize(\n              `ui.panel.config.lovelace.dashboards.dialog_new.create_empty`\n            )}\n            <span slot=\"secondary\">\n              ${this.hass.localize(\n                `ui.panel.config.lovelace.dashboards.dialog_new.create_empty_description`\n              )}\n            </span>\n            <ha-icon-next slot=\"meta\"></ha-icon-next>\n          </ha-list-item>\n          <li divider role=\"separator\"></li>\n          <ha-list-item\n            hasmeta\n            twoline\n            graphic=\"icon\"\n            .config=${null}\n            @request-selected=${this._selected}\n          >\n            <ha-svg-icon slot=\"graphic\" .path=${mdiShape}></ha-svg-icon>\n            ${this.hass.localize(\n              `ui.panel.config.lovelace.dashboards.dialog_new.default`\n            )}\n            <span slot=\"secondary\"\n              >${this.hass.localize(\n                `ui.panel.config.lovelace.dashboards.dialog_new.default_description`\n              )}</span\n            >\n            <ha-icon-next slot=\"meta\"></ha-icon-next>\n          </ha-list-item>\n        </mwc-list>\n      </ha-dialog>\n    `;\n  }\n\n  private async _selected(ev) {\n    if (!shouldHandleRequestSelectedEvent(ev)) {\n      return;\n    }\n    const config = (ev.currentTarget! as any).config;\n    this._params?.selectConfig(config);\n    this.closeDialog();\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyle,\n      haStyleDialog,\n      css`\n        ha-dialog {\n          --dialog-content-padding: 0;\n          --mdc-dialog-max-height: 60vh;\n        }\n        @media all and (min-width: 550px) {\n          ha-dialog {\n            --mdc-dialog-min-width: 500px;\n          }\n        }\n        ha-icon-next {\n          width: 24px;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-dialog-new-dashboard\": DialogNewDashboard;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}