{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport { css, html, LitElement } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport { styleMap } from \"lit/directives/style-map\";\nimport { clamp } from \"../../common/number/clamp\";\nimport { debounce } from \"../../common/util/debounce\";\nexport const MIN_TIME_BETWEEN_UPDATES = 60 * 5 * 1000;\nexport let HaChartBase = _decorate([customElement(\"ha-chart-base\")], function (_initialize, _LitElement) {\n  class HaChartBase extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaChartBase,\n    d: [{\n      kind: \"field\",\n      key: \"chart\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: \"chart-type\",\n        reflect: true\n      })],\n      key: \"chartType\",\n      value() {\n        return \"line\";\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"data\",\n      value() {\n        return {\n          datasets: []\n        };\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"options\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"plugins\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Number\n      })],\n      key: \"height\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Number\n      })],\n      key: \"paddingYAxis\",\n      value() {\n        return 0;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_chartHeight\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_tooltip\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_hiddenDatasets\",\n      value() {\n        return new Set();\n      }\n    }, {\n      kind: \"field\",\n      key: \"_paddingUpdateCount\",\n      value() {\n        return 0;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_paddingUpdateLock\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_paddingYAxisInternal\",\n      value() {\n        return 0;\n      }\n    }, {\n      kind: \"method\",\n      key: \"disconnectedCallback\",\n      value: function disconnectedCallback() {\n        _get(_getPrototypeOf(HaChartBase.prototype), \"disconnectedCallback\", this).call(this);\n        this._releaseCanvas();\n      }\n    }, {\n      kind: \"method\",\n      key: \"connectedCallback\",\n      value: function connectedCallback() {\n        _get(_getPrototypeOf(HaChartBase.prototype), \"connectedCallback\", this).call(this);\n        if (this.hasUpdated) {\n          this._releaseCanvas();\n          this._setupChart();\n        }\n      }\n    }, {\n      kind: \"field\",\n      key: \"updateChart\",\n      value() {\n        return mode => {\n          var _this$chart;\n          (_this$chart = this.chart) === null || _this$chart === void 0 || _this$chart.update(mode);\n        };\n      }\n    }, {\n      kind: \"field\",\n      key: \"resize\",\n      value() {\n        return options => {\n          var _this$chart2, _options$width2, _options$height2;\n          if (options !== null && options !== void 0 && options.aspectRatio && !options.height) {\n            var _options$width;\n            options.height = Math.round(((_options$width = options.width) !== null && _options$width !== void 0 ? _options$width : this.clientWidth) / options.aspectRatio);\n          } else if (options !== null && options !== void 0 && options.aspectRatio && !options.width) {\n            var _options$height;\n            options.width = Math.round(((_options$height = options.height) !== null && _options$height !== void 0 ? _options$height : this.clientHeight) * options.aspectRatio);\n          }\n          (_this$chart2 = this.chart) === null || _this$chart2 === void 0 || _this$chart2.resize((_options$width2 = options === null || options === void 0 ? void 0 : options.width) !== null && _options$width2 !== void 0 ? _options$width2 : this.clientWidth, (_options$height2 = options === null || options === void 0 ? void 0 : options.height) !== null && _options$height2 !== void 0 ? _options$height2 : this.clientHeight);\n        };\n      }\n    }, {\n      kind: \"method\",\n      key: \"firstUpdated\",\n      value: function firstUpdated() {\n        this._setupChart();\n        this.data.datasets.forEach((dataset, index) => {\n          if (dataset.hidden) {\n            this._hiddenDatasets.add(index);\n          }\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"shouldUpdate\",\n      value: function shouldUpdate(changedProps) {\n        if (this._paddingUpdateLock && changedProps.size === 1 && changedProps.has(\"paddingYAxis\")) {\n          return false;\n        }\n        return true;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_debouncedClearUpdates\",\n      value() {\n        return debounce(() => {\n          this._paddingUpdateCount = 0;\n        }, 2000, false);\n      }\n    }, {\n      kind: \"method\",\n      key: \"willUpdate\",\n      value: function willUpdate(changedProps) {\n        _get(_getPrototypeOf(HaChartBase.prototype), \"willUpdate\", this).call(this, changedProps);\n        if (!this._paddingUpdateLock) {\n          this._paddingYAxisInternal = this.paddingYAxis;\n          if (changedProps.size === 1 && changedProps.has(\"paddingYAxis\")) {\n            this._paddingUpdateCount++;\n            if (this._paddingUpdateCount > 300) {\n              this._paddingUpdateLock = true;\n              // eslint-disable-next-line\n              console.error(\"Detected excessive chart padding updates, possibly an infinite loop. Disabling axis padding.\");\n            } else {\n              this._debouncedClearUpdates();\n            }\n          }\n        }\n        if (!this.hasUpdated || !this.chart) {\n          return;\n        }\n        if (changedProps.has(\"plugins\") || changedProps.has(\"chartType\")) {\n          this._releaseCanvas();\n          this._setupChart();\n          return;\n        }\n        if (changedProps.has(\"data\")) {\n          if (this._hiddenDatasets.size) {\n            this.data.datasets.forEach((dataset, index) => {\n              dataset.hidden = this._hiddenDatasets.has(index);\n            });\n          }\n          this.chart.data = this.data;\n        }\n        if (changedProps.has(\"options\")) {\n          this.chart.options = this._createOptions();\n        }\n        this.chart.update(\"none\");\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var _this$options, _ref, _this$height;\n        return html`\n      ${((_this$options = this.options) === null || _this$options === void 0 || (_this$options = _this$options.plugins) === null || _this$options === void 0 || (_this$options = _this$options.legend) === null || _this$options === void 0 ? void 0 : _this$options.display) === true ? html`<div class=\"chartLegend\">\n            <ul>\n              ${this.data.datasets.map((dataset, index) => html`<li\n                    .datasetIndex=${index}\n                    @click=${this._legendClick}\n                    class=${classMap({\n          hidden: this._hiddenDatasets.has(index)\n        })}\n                    .title=${dataset.label}\n                  >\n                    <div\n                      class=\"bullet\"\n                      style=${styleMap({\n          backgroundColor: dataset.backgroundColor,\n          borderColor: dataset.borderColor\n        })}\n                    ></div>\n                    <div class=\"label\">${dataset.label}</div>\n                  </li>`)}\n            </ul>\n          </div>` : \"\"}\n      <div\n        class=\"animationContainer\"\n        style=${styleMap({\n          height: `${this.height || this._chartHeight || 0}px`,\n          overflow: this._chartHeight ? \"initial\" : \"hidden\"\n        })}\n      >\n        <div\n          class=\"chartContainer\"\n          style=${styleMap({\n          height: `${(_ref = (_this$height = this.height) !== null && _this$height !== void 0 ? _this$height : this._chartHeight) !== null && _ref !== void 0 ? _ref : this.clientWidth / 2}px`,\n          \"padding-left\": `${this._paddingYAxisInternal}`,\n          \"padding-right\": 0,\n          \"padding-inline-start\": `${this._paddingYAxisInternal}`,\n          \"padding-inline-end\": 0\n        })}\n        >\n          <canvas></canvas>\n          ${this._tooltip ? html`<div\n                class=\"chartTooltip ${classMap({\n          [this._tooltip.yAlign]: true\n        })}\"\n                style=${styleMap({\n          top: this._tooltip.top,\n          left: this._tooltip.left\n        })}\n              >\n                <div class=\"title\">${this._tooltip.title}</div>\n                ${this._tooltip.beforeBody ? html`<div class=\"beforeBody\">\n                      ${this._tooltip.beforeBody}\n                    </div>` : \"\"}\n                <div>\n                  <ul>\n                    ${this._tooltip.body.map((item, i) => html`<li>\n                          <div\n                            class=\"bullet\"\n                            style=${styleMap({\n          backgroundColor: this._tooltip.labelColors[i].backgroundColor,\n          borderColor: this._tooltip.labelColors[i].borderColor\n        })}\n                          ></div>\n                          ${item.lines.join(\"\\n\")}\n                        </li>`)}\n                  </ul>\n                </div>\n                ${this._tooltip.footer.length ? html`<div class=\"footer\">\n                      ${this._tooltip.footer.map(item => html`${item}<br />`)}\n                    </div>` : \"\"}\n              </div>` : \"\"}\n        </div>\n      </div>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_setupChart\",\n      value: async function _setupChart() {\n        const ctx = this.renderRoot.querySelector(\"canvas\").getContext(\"2d\");\n        const ChartConstructor = (await import(\"../../resources/chartjs\")).Chart;\n        const computedStyles = getComputedStyle(this);\n        ChartConstructor.defaults.borderColor = computedStyles.getPropertyValue(\"--divider-color\");\n        ChartConstructor.defaults.color = computedStyles.getPropertyValue(\"--secondary-text-color\");\n        ChartConstructor.defaults.font.family = computedStyles.getPropertyValue(\"--mdc-typography-body1-font-family\") || computedStyles.getPropertyValue(\"--mdc-typography-font-family\") || \"Roboto, Noto, sans-serif\";\n        this.chart = new ChartConstructor(ctx, {\n          type: this.chartType,\n          data: this.data,\n          options: this._createOptions(),\n          plugins: this._createPlugins()\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_createOptions\",\n      value: function _createOptions() {\n        var _this$options2, _this$options3, _this$options4;\n        return {\n          maintainAspectRatio: false,\n          ...this.options,\n          plugins: {\n            ...((_this$options2 = this.options) === null || _this$options2 === void 0 ? void 0 : _this$options2.plugins),\n            tooltip: {\n              ...((_this$options3 = this.options) === null || _this$options3 === void 0 || (_this$options3 = _this$options3.plugins) === null || _this$options3 === void 0 ? void 0 : _this$options3.tooltip),\n              enabled: false,\n              external: context => this._handleTooltip(context)\n            },\n            legend: {\n              ...((_this$options4 = this.options) === null || _this$options4 === void 0 || (_this$options4 = _this$options4.plugins) === null || _this$options4 === void 0 ? void 0 : _this$options4.legend),\n              display: false\n            }\n          }\n        };\n      }\n    }, {\n      kind: \"method\",\n      key: \"_createPlugins\",\n      value: function _createPlugins() {\n        var _this$options5;\n        return [...(this.plugins || []), {\n          id: \"resizeHook\",\n          resize: chart => {\n            var _this$_chartHeight;\n            const change = chart.height - ((_this$_chartHeight = this._chartHeight) !== null && _this$_chartHeight !== void 0 ? _this$_chartHeight : 0);\n            if (!this._chartHeight || change > 12 || change < -12) {\n              // hysteresis to prevent infinite render loops\n              this._chartHeight = chart.height;\n            }\n          },\n          legend: {\n            ...((_this$options5 = this.options) === null || _this$options5 === void 0 || (_this$options5 = _this$options5.plugins) === null || _this$options5 === void 0 ? void 0 : _this$options5.legend),\n            display: false\n          }\n        }];\n      }\n    }, {\n      kind: \"method\",\n      key: \"_legendClick\",\n      value: function _legendClick(ev) {\n        if (!this.chart) {\n          return;\n        }\n        const index = ev.currentTarget.datasetIndex;\n        if (this.chart.isDatasetVisible(index)) {\n          this.chart.setDatasetVisibility(index, false);\n          this._hiddenDatasets.add(index);\n        } else {\n          this.chart.setDatasetVisibility(index, true);\n          this._hiddenDatasets.delete(index);\n        }\n        this.chart.update(\"none\");\n        this.requestUpdate(\"_hiddenDatasets\");\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleTooltip\",\n      value: function _handleTooltip(context) {\n        if (context.tooltip.opacity === 0) {\n          this._tooltip = undefined;\n          return;\n        }\n        this._tooltip = {\n          ...context.tooltip,\n          top: this.chart.canvas.offsetTop + context.tooltip.caretY + 12 + \"px\",\n          left: this.chart.canvas.offsetLeft + clamp(context.tooltip.caretX, 100, this.clientWidth - 100 - this._paddingYAxisInternal) - 100 + \"px\"\n        };\n      }\n    }, {\n      kind: \"method\",\n      key: \"_releaseCanvas\",\n      value: function _releaseCanvas() {\n        // release the canvas memory to prevent\n        // safari from running out of memory.\n        if (this.chart) {\n          this.chart.destroy();\n        }\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css`\n      :host {\n        display: block;\n        position: var(--chart-base-position, relative);\n      }\n      .animationContainer {\n        overflow: hidden;\n        height: 0;\n        transition: height 300ms cubic-bezier(0.4, 0, 0.2, 1);\n      }\n      canvas {\n        max-height: var(--chart-max-height, 400px);\n      }\n      .chartLegend {\n        text-align: center;\n      }\n      .chartLegend li {\n        cursor: pointer;\n        display: inline-grid;\n        grid-auto-flow: column;\n        padding: 0 8px;\n        box-sizing: border-box;\n        align-items: center;\n        color: var(--secondary-text-color);\n      }\n      .chartLegend .hidden {\n        text-decoration: line-through;\n      }\n      .chartLegend .label {\n        text-overflow: ellipsis;\n        white-space: nowrap;\n        overflow: hidden;\n      }\n      .chartLegend .bullet,\n      .chartTooltip .bullet {\n        border-width: 1px;\n        border-style: solid;\n        border-radius: 50%;\n        display: inline-block;\n        height: 16px;\n        margin-right: 6px;\n        width: 16px;\n        flex-shrink: 0;\n        box-sizing: border-box;\n        margin-inline-end: 6px;\n        margin-inline-start: initial;\n        direction: var(--direction);\n      }\n      .chartTooltip .bullet {\n        align-self: baseline;\n      }\n      .chartTooltip {\n        padding: 8px;\n        font-size: 90%;\n        position: absolute;\n        background: rgba(80, 80, 80, 0.9);\n        color: white;\n        border-radius: 4px;\n        pointer-events: none;\n        z-index: 1;\n        -ms-user-select: none;\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        width: 200px;\n        box-sizing: border-box;\n        direction: var(--direction);\n      }\n      .chartLegend ul,\n      .chartTooltip ul {\n        display: inline-block;\n        padding: 0 0px;\n        margin: 8px 0 0 0;\n        width: 100%;\n      }\n      .chartTooltip ul {\n        margin: 0 4px;\n      }\n      .chartTooltip li {\n        display: flex;\n        white-space: pre-line;\n        word-break: break-word;\n        align-items: center;\n        line-height: 16px;\n        padding: 4px 0;\n      }\n      .chartTooltip .title {\n        text-align: center;\n        font-weight: 500;\n        word-break: break-word;\n        direction: ltr;\n      }\n      .chartTooltip .footer {\n        font-weight: 500;\n      }\n      .chartTooltip .beforeBody {\n        text-align: center;\n        font-weight: 300;\n        word-break: break-all;\n      }\n    `;\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","customElement","property","state","classMap","styleMap","clamp","debounce","MIN_TIME_BETWEEN_UPDATES","HaChartBase","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","key","value","decorators","attribute","reflect","datasets","type","Number","Set","disconnectedCallback","_get","_getPrototypeOf","prototype","call","_releaseCanvas","connectedCallback","hasUpdated","_setupChart","mode","_this$chart","chart","update","options","_this$chart2","_options$width2","_options$height2","aspectRatio","height","_options$width","Math","round","width","clientWidth","_options$height","clientHeight","resize","firstUpdated","data","forEach","dataset","index","hidden","_hiddenDatasets","add","shouldUpdate","changedProps","_paddingUpdateLock","size","has","_paddingUpdateCount","willUpdate","_paddingYAxisInternal","paddingYAxis","console","error","_debouncedClearUpdates","_createOptions","render","_this$options","_ref","_this$height","plugins","legend","display","map","_legendClick","label","backgroundColor","borderColor","_chartHeight","overflow","_tooltip","yAlign","top","left","title","beforeBody","body","item","i","labelColors","lines","join","footer","length","ctx","renderRoot","querySelector","getContext","ChartConstructor","Chart","computedStyles","getComputedStyle","defaults","getPropertyValue","color","font","family","chartType","_createPlugins","_this$options2","_this$options3","_this$options4","maintainAspectRatio","tooltip","enabled","external","context","_handleTooltip","_this$options5","id","_this$_chartHeight","change","ev","currentTarget","datasetIndex","isDatasetVisible","setDatasetVisibility","delete","requestUpdate","opacity","undefined","canvas","offsetTop","caretY","offsetLeft","caretX","destroy","static","styles"],"sources":["/workspaces/frontend/src/components/chart/ha-chart-base.ts"],"sourcesContent":["import type {\n  Chart,\n  ChartType,\n  ChartData,\n  ChartOptions,\n  TooltipModel,\n} from \"chart.js\";\nimport { css, CSSResultGroup, html, LitElement, PropertyValues } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport { styleMap } from \"lit/directives/style-map\";\nimport { clamp } from \"../../common/number/clamp\";\nimport { HomeAssistant } from \"../../types\";\nimport { debounce } from \"../../common/util/debounce\";\n\nexport const MIN_TIME_BETWEEN_UPDATES = 60 * 5 * 1000;\n\nexport interface ChartResizeOptions {\n  aspectRatio?: number;\n  height?: number;\n  width?: number;\n}\n\ninterface Tooltip\n  extends Omit<TooltipModel<any>, \"tooltipPosition\" | \"hasValue\" | \"getProps\"> {\n  top: string;\n  left: string;\n}\n\n@customElement(\"ha-chart-base\")\nexport class HaChartBase extends LitElement {\n  public chart?: Chart;\n\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: \"chart-type\", reflect: true })\n  public chartType: ChartType = \"line\";\n\n  @property({ attribute: false }) public data: ChartData = { datasets: [] };\n\n  @property({ attribute: false }) public options?: ChartOptions;\n\n  @property({ attribute: false }) public plugins?: any[];\n\n  @property({ type: Number }) public height?: number;\n\n  @property({ type: Number }) public paddingYAxis = 0;\n\n  @state() private _chartHeight?: number;\n\n  @state() private _tooltip?: Tooltip;\n\n  @state() private _hiddenDatasets: Set<number> = new Set();\n\n  private _paddingUpdateCount = 0;\n\n  private _paddingUpdateLock = false;\n\n  private _paddingYAxisInternal = 0;\n\n  public disconnectedCallback() {\n    super.disconnectedCallback();\n    this._releaseCanvas();\n  }\n\n  public connectedCallback() {\n    super.connectedCallback();\n    if (this.hasUpdated) {\n      this._releaseCanvas();\n      this._setupChart();\n    }\n  }\n\n  public updateChart = (\n    mode:\n      | \"resize\"\n      | \"reset\"\n      | \"none\"\n      | \"hide\"\n      | \"show\"\n      | \"default\"\n      | \"active\"\n      | undefined\n  ): void => {\n    this.chart?.update(mode);\n  };\n\n  public resize = (options?: ChartResizeOptions): void => {\n    if (options?.aspectRatio && !options.height) {\n      options.height = Math.round(\n        (options.width ?? this.clientWidth) / options.aspectRatio\n      );\n    } else if (options?.aspectRatio && !options.width) {\n      options.width = Math.round(\n        (options.height ?? this.clientHeight) * options.aspectRatio\n      );\n    }\n    this.chart?.resize(\n      options?.width ?? this.clientWidth,\n      options?.height ?? this.clientHeight\n    );\n  };\n\n  protected firstUpdated() {\n    this._setupChart();\n    this.data.datasets.forEach((dataset, index) => {\n      if (dataset.hidden) {\n        this._hiddenDatasets.add(index);\n      }\n    });\n  }\n\n  public shouldUpdate(changedProps: PropertyValues): boolean {\n    if (\n      this._paddingUpdateLock &&\n      changedProps.size === 1 &&\n      changedProps.has(\"paddingYAxis\")\n    ) {\n      return false;\n    }\n    return true;\n  }\n\n  private _debouncedClearUpdates = debounce(\n    () => {\n      this._paddingUpdateCount = 0;\n    },\n    2000,\n    false\n  );\n\n  public willUpdate(changedProps: PropertyValues): void {\n    super.willUpdate(changedProps);\n\n    if (!this._paddingUpdateLock) {\n      this._paddingYAxisInternal = this.paddingYAxis;\n      if (changedProps.size === 1 && changedProps.has(\"paddingYAxis\")) {\n        this._paddingUpdateCount++;\n        if (this._paddingUpdateCount > 300) {\n          this._paddingUpdateLock = true;\n          // eslint-disable-next-line\n          console.error(\n            \"Detected excessive chart padding updates, possibly an infinite loop. Disabling axis padding.\"\n          );\n        } else {\n          this._debouncedClearUpdates();\n        }\n      }\n    }\n\n    if (!this.hasUpdated || !this.chart) {\n      return;\n    }\n    if (changedProps.has(\"plugins\") || changedProps.has(\"chartType\")) {\n      this._releaseCanvas();\n      this._setupChart();\n      return;\n    }\n    if (changedProps.has(\"data\")) {\n      if (this._hiddenDatasets.size) {\n        this.data.datasets.forEach((dataset, index) => {\n          dataset.hidden = this._hiddenDatasets.has(index);\n        });\n      }\n      this.chart.data = this.data;\n    }\n    if (changedProps.has(\"options\")) {\n      this.chart.options = this._createOptions();\n    }\n    this.chart.update(\"none\");\n  }\n\n  protected render() {\n    return html`\n      ${this.options?.plugins?.legend?.display === true\n        ? html`<div class=\"chartLegend\">\n            <ul>\n              ${this.data.datasets.map(\n                (dataset, index) =>\n                  html`<li\n                    .datasetIndex=${index}\n                    @click=${this._legendClick}\n                    class=${classMap({\n                      hidden: this._hiddenDatasets.has(index),\n                    })}\n                    .title=${dataset.label}\n                  >\n                    <div\n                      class=\"bullet\"\n                      style=${styleMap({\n                        backgroundColor: dataset.backgroundColor as string,\n                        borderColor: dataset.borderColor as string,\n                      })}\n                    ></div>\n                    <div class=\"label\">${dataset.label}</div>\n                  </li>`\n              )}\n            </ul>\n          </div>`\n        : \"\"}\n      <div\n        class=\"animationContainer\"\n        style=${styleMap({\n          height: `${this.height || this._chartHeight || 0}px`,\n          overflow: this._chartHeight ? \"initial\" : \"hidden\",\n        })}\n      >\n        <div\n          class=\"chartContainer\"\n          style=${styleMap({\n            height: `${\n              this.height ?? this._chartHeight ?? this.clientWidth / 2\n            }px`,\n            \"padding-left\": `${this._paddingYAxisInternal}`,\n            \"padding-right\": 0,\n            \"padding-inline-start\": `${this._paddingYAxisInternal}`,\n            \"padding-inline-end\": 0,\n          })}\n        >\n          <canvas></canvas>\n          ${this._tooltip\n            ? html`<div\n                class=\"chartTooltip ${classMap({\n                  [this._tooltip.yAlign]: true,\n                })}\"\n                style=${styleMap({\n                  top: this._tooltip.top,\n                  left: this._tooltip.left,\n                })}\n              >\n                <div class=\"title\">${this._tooltip.title}</div>\n                ${this._tooltip.beforeBody\n                  ? html`<div class=\"beforeBody\">\n                      ${this._tooltip.beforeBody}\n                    </div>`\n                  : \"\"}\n                <div>\n                  <ul>\n                    ${this._tooltip.body.map(\n                      (item, i) =>\n                        html`<li>\n                          <div\n                            class=\"bullet\"\n                            style=${styleMap({\n                              backgroundColor: this._tooltip!.labelColors[i]\n                                .backgroundColor as string,\n                              borderColor: this._tooltip!.labelColors[i]\n                                .borderColor as string,\n                            })}\n                          ></div>\n                          ${item.lines.join(\"\\n\")}\n                        </li>`\n                    )}\n                  </ul>\n                </div>\n                ${this._tooltip.footer.length\n                  ? html`<div class=\"footer\">\n                      ${this._tooltip.footer.map((item) => html`${item}<br />`)}\n                    </div>`\n                  : \"\"}\n              </div>`\n            : \"\"}\n        </div>\n      </div>\n    `;\n  }\n\n  private async _setupChart() {\n    const ctx: CanvasRenderingContext2D = this.renderRoot\n      .querySelector(\"canvas\")!\n      .getContext(\"2d\")!;\n\n    const ChartConstructor = (await import(\"../../resources/chartjs\")).Chart;\n\n    const computedStyles = getComputedStyle(this);\n\n    ChartConstructor.defaults.borderColor =\n      computedStyles.getPropertyValue(\"--divider-color\");\n    ChartConstructor.defaults.color = computedStyles.getPropertyValue(\n      \"--secondary-text-color\"\n    );\n    ChartConstructor.defaults.font.family =\n      computedStyles.getPropertyValue(\"--mdc-typography-body1-font-family\") ||\n      computedStyles.getPropertyValue(\"--mdc-typography-font-family\") ||\n      \"Roboto, Noto, sans-serif\";\n\n    this.chart = new ChartConstructor(ctx, {\n      type: this.chartType,\n      data: this.data,\n      options: this._createOptions(),\n      plugins: this._createPlugins(),\n    });\n  }\n\n  private _createOptions() {\n    return {\n      maintainAspectRatio: false,\n      ...this.options,\n      plugins: {\n        ...this.options?.plugins,\n        tooltip: {\n          ...this.options?.plugins?.tooltip,\n          enabled: false,\n          external: (context) => this._handleTooltip(context),\n        },\n        legend: {\n          ...this.options?.plugins?.legend,\n          display: false,\n        },\n      },\n    };\n  }\n\n  private _createPlugins() {\n    return [\n      ...(this.plugins || []),\n      {\n        id: \"resizeHook\",\n        resize: (chart) => {\n          const change = chart.height - (this._chartHeight ?? 0);\n          if (!this._chartHeight || change > 12 || change < -12) {\n            // hysteresis to prevent infinite render loops\n            this._chartHeight = chart.height;\n          }\n        },\n        legend: {\n          ...this.options?.plugins?.legend,\n          display: false,\n        },\n      },\n    ];\n  }\n\n  private _legendClick(ev) {\n    if (!this.chart) {\n      return;\n    }\n    const index = ev.currentTarget.datasetIndex;\n    if (this.chart.isDatasetVisible(index)) {\n      this.chart.setDatasetVisibility(index, false);\n      this._hiddenDatasets.add(index);\n    } else {\n      this.chart.setDatasetVisibility(index, true);\n      this._hiddenDatasets.delete(index);\n    }\n    this.chart.update(\"none\");\n    this.requestUpdate(\"_hiddenDatasets\");\n  }\n\n  private _handleTooltip(context: {\n    chart: Chart;\n    tooltip: TooltipModel<any>;\n  }) {\n    if (context.tooltip.opacity === 0) {\n      this._tooltip = undefined;\n      return;\n    }\n    this._tooltip = {\n      ...context.tooltip,\n      top: this.chart!.canvas.offsetTop + context.tooltip.caretY + 12 + \"px\",\n      left:\n        this.chart!.canvas.offsetLeft +\n        clamp(\n          context.tooltip.caretX,\n          100,\n          this.clientWidth - 100 - this._paddingYAxisInternal\n        ) -\n        100 +\n        \"px\",\n    };\n  }\n\n  private _releaseCanvas() {\n    // release the canvas memory to prevent\n    // safari from running out of memory.\n    if (this.chart) {\n      this.chart.destroy();\n    }\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      :host {\n        display: block;\n        position: var(--chart-base-position, relative);\n      }\n      .animationContainer {\n        overflow: hidden;\n        height: 0;\n        transition: height 300ms cubic-bezier(0.4, 0, 0.2, 1);\n      }\n      canvas {\n        max-height: var(--chart-max-height, 400px);\n      }\n      .chartLegend {\n        text-align: center;\n      }\n      .chartLegend li {\n        cursor: pointer;\n        display: inline-grid;\n        grid-auto-flow: column;\n        padding: 0 8px;\n        box-sizing: border-box;\n        align-items: center;\n        color: var(--secondary-text-color);\n      }\n      .chartLegend .hidden {\n        text-decoration: line-through;\n      }\n      .chartLegend .label {\n        text-overflow: ellipsis;\n        white-space: nowrap;\n        overflow: hidden;\n      }\n      .chartLegend .bullet,\n      .chartTooltip .bullet {\n        border-width: 1px;\n        border-style: solid;\n        border-radius: 50%;\n        display: inline-block;\n        height: 16px;\n        margin-right: 6px;\n        width: 16px;\n        flex-shrink: 0;\n        box-sizing: border-box;\n        margin-inline-end: 6px;\n        margin-inline-start: initial;\n        direction: var(--direction);\n      }\n      .chartTooltip .bullet {\n        align-self: baseline;\n      }\n      .chartTooltip {\n        padding: 8px;\n        font-size: 90%;\n        position: absolute;\n        background: rgba(80, 80, 80, 0.9);\n        color: white;\n        border-radius: 4px;\n        pointer-events: none;\n        z-index: 1;\n        -ms-user-select: none;\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        width: 200px;\n        box-sizing: border-box;\n        direction: var(--direction);\n      }\n      .chartLegend ul,\n      .chartTooltip ul {\n        display: inline-block;\n        padding: 0 0px;\n        margin: 8px 0 0 0;\n        width: 100%;\n      }\n      .chartTooltip ul {\n        margin: 0 4px;\n      }\n      .chartTooltip li {\n        display: flex;\n        white-space: pre-line;\n        word-break: break-word;\n        align-items: center;\n        line-height: 16px;\n        padding: 4px 0;\n      }\n      .chartTooltip .title {\n        text-align: center;\n        font-weight: 500;\n        word-break: break-word;\n        direction: ltr;\n      }\n      .chartTooltip .footer {\n        font-weight: 500;\n      }\n      .chartTooltip .beforeBody {\n        text-align: center;\n        font-weight: 300;\n        word-break: break-all;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-chart-base\": HaChartBase;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}