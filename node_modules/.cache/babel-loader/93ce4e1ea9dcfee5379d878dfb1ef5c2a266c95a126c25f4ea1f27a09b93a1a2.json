{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport \"core-js/modules/es.error.cause.js\";\n/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { MDCLineRippleFoundation } from '@material/line-ripple/foundation.js';\nimport { directive, Directive, PartType } from 'lit/directive.js';\nvar createAdapter = function createAdapter(lineElement) {\n  return {\n    addClass: function addClass(className) {\n      return lineElement.classList.add(className);\n    },\n    removeClass: function removeClass(className) {\n      return lineElement.classList.remove(className);\n    },\n    hasClass: function hasClass(className) {\n      return lineElement.classList.contains(className);\n    },\n    setStyle: function setStyle(propertyName, value) {\n      return lineElement.style.setProperty(propertyName, value);\n    },\n    registerEventHandler: function registerEventHandler(evtType, handler) {\n      lineElement.addEventListener(evtType, handler);\n    },\n    deregisterEventHandler: function deregisterEventHandler(evtType, handler) {\n      lineElement.removeEventListener(evtType, handler);\n    }\n  };\n};\nexport var LineRippleDirective = /*#__PURE__*/function (_Directive) {\n  _inherits(LineRippleDirective, _Directive);\n  function LineRippleDirective(partInfo) {\n    var _this;\n    _classCallCheck(this, LineRippleDirective);\n    _this = _callSuper(this, LineRippleDirective, [partInfo]);\n    _this.previousPart = null;\n    _this.foundation = null;\n    switch (partInfo.type) {\n      case PartType.ATTRIBUTE:\n      case PartType.PROPERTY:\n        return _possibleConstructorReturn(_this);\n      default:\n        throw new Error('LineRipple only support attribute and property parts.');\n    }\n    return _this;\n  }\n  /**\n   * There is no PropertyPart in Lit 2 so far. For more info see:\n   * https://github.com/lit/lit/issues/1863\n   */\n  _createClass(LineRippleDirective, [{\n    key: \"update\",\n    value: function update(part, _params) {\n      if (this.previousPart !== part) {\n        if (this.foundation) {\n          this.foundation.destroy();\n        }\n        this.previousPart = part;\n        var lineElement = part.element;\n        lineElement.classList.add('mdc-line-ripple');\n        var adapter = createAdapter(lineElement);\n        this.foundation = new MDCLineRippleFoundation(adapter);\n        this.foundation.init();\n      }\n      return this.render();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.foundation;\n    }\n  }]);\n  return LineRippleDirective;\n}(Directive);\nexport var lineRipple = directive(LineRippleDirective);","map":{"version":3,"names":["MDCLineRippleFoundation","directive","Directive","PartType","createAdapter","lineElement","addClass","className","classList","add","removeClass","remove","hasClass","contains","setStyle","propertyName","value","style","setProperty","registerEventHandler","evtType","handler","addEventListener","deregisterEventHandler","removeEventListener","LineRippleDirective","_Directive","_inherits","partInfo","_this","_classCallCheck","_callSuper","previousPart","foundation","type","ATTRIBUTE","PROPERTY","_possibleConstructorReturn","Error","_createClass","key","update","part","_params","destroy","element","adapter","init","render","lineRipple"],"sources":["mwc-line-ripple-directive.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\n\nimport {MDCLineRippleAdapter} from '@material/line-ripple/adapter.js';\nimport {MDCLineRippleFoundation} from '@material/line-ripple/foundation.js';\nimport {AttributePart, directive, Directive, DirectiveParameters, PartInfo, PartType} from 'lit/directive.js';\n\nexport interface LineRipple extends HTMLElement {\n  lineRippleFoundation: MDCLineRippleFoundation;\n}\n\nconst createAdapter = (lineElement: HTMLElement): MDCLineRippleAdapter => {\n  return {\n    addClass: (className) => lineElement.classList.add(className),\n    removeClass: (className) => lineElement.classList.remove(className),\n    hasClass: (className) => lineElement.classList.contains(className),\n    setStyle: (propertyName, value) =>\n        lineElement.style.setProperty(propertyName, value),\n    registerEventHandler: (evtType, handler) => {\n      lineElement.addEventListener(evtType, handler);\n    },\n    deregisterEventHandler: (evtType, handler) => {\n      lineElement.removeEventListener(evtType, handler);\n    },\n  };\n};\n\nexport class LineRippleDirective extends Directive {\n  private previousPart: AttributePart|null = null;\n  protected foundation: MDCLineRippleFoundation|null = null;\n\n  constructor(partInfo: PartInfo) {\n    super(partInfo);\n\n    switch (partInfo.type) {\n      case PartType.ATTRIBUTE:\n      case PartType.PROPERTY:\n        return;\n      default:\n        throw new Error(\n            'LineRipple only support attribute and property parts.');\n    }\n  }\n\n  /**\n   * There is no PropertyPart in Lit 2 so far. For more info see:\n   * https://github.com/lit/lit/issues/1863\n   */\n  override update(part: AttributePart, _params: DirectiveParameters<this>) {\n    if (this.previousPart !== part) {\n      if (this.foundation) {\n        this.foundation.destroy();\n      }\n      this.previousPart = part;\n      const lineElement = part.element as LineRipple;\n      lineElement.classList.add('mdc-line-ripple');\n      const adapter = createAdapter(lineElement);\n      this.foundation = new MDCLineRippleFoundation(adapter);\n      this.foundation.init();\n    }\n    return this.render();\n  }\n\n  render(): MDCLineRippleFoundation|null {\n    return this.foundation;\n  }\n}\n\nexport const lineRipple = directive(LineRippleDirective);\n"],"mappings":";;;;;;AAAA;;;;;AAUA,SAAQA,uBAAuB,QAAO,qCAAqC;AAC3E,SAAuBC,SAAS,EAAEC,SAAS,EAAiCC,QAAQ,QAAO,kBAAkB;AAM7G,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAIC,WAAwB,EAA0B;EACvE,OAAO;IACLC,QAAQ,EAAE,SAAAA,SAACC,SAAS;MAAA,OAAKF,WAAW,CAACG,SAAS,CAACC,GAAG,CAACF,SAAS,CAAC;IAAA;IAC7DG,WAAW,EAAE,SAAAA,YAACH,SAAS;MAAA,OAAKF,WAAW,CAACG,SAAS,CAACG,MAAM,CAACJ,SAAS,CAAC;IAAA;IACnEK,QAAQ,EAAE,SAAAA,SAACL,SAAS;MAAA,OAAKF,WAAW,CAACG,SAAS,CAACK,QAAQ,CAACN,SAAS,CAAC;IAAA;IAClEO,QAAQ,EAAE,SAAAA,SAACC,YAAY,EAAEC,KAAK;MAAA,OAC1BX,WAAW,CAACY,KAAK,CAACC,WAAW,CAACH,YAAY,EAAEC,KAAK,CAAC;IAAA;IACtDG,oBAAoB,EAAE,SAAAA,qBAACC,OAAO,EAAEC,OAAO,EAAI;MACzChB,WAAW,CAACiB,gBAAgB,CAACF,OAAO,EAAEC,OAAO,CAAC;IAChD,CAAC;IACDE,sBAAsB,EAAE,SAAAA,uBAACH,OAAO,EAAEC,OAAO,EAAI;MAC3ChB,WAAW,CAACmB,mBAAmB,CAACJ,OAAO,EAAEC,OAAO,CAAC;IACnD;GACD;AACH,CAAC;AAED,WAAaI,mBAAoB,0BAAAC,UAAA;EAAAC,SAAA,CAAAF,mBAAA,EAAAC,UAAA;EAI/B,SAAAD,oBAAYG,QAAkB;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAL,mBAAA;IAC5BI,KAAA,GAAAE,UAAA,OAAAN,mBAAA,GAAMG,QAAQ;IAJRC,KAAA,CAAAG,YAAY,GAAuB,IAAI;IACrCH,KAAA,CAAAI,UAAU,GAAiC,IAAI;IAKvD,QAAQL,QAAQ,CAACM,IAAI;MACnB,KAAK/B,QAAQ,CAACgC,SAAS;MACvB,KAAKhC,QAAQ,CAACiC,QAAQ;QACpB,OAAAC,0BAAA,CAAAR,KAAA;MACF;QACE,MAAM,IAAIS,KAAK,CACX,uDAAuD,CAAC;;IAC/D,OAAAT,KAAA;EACH;EAEA;;;;EAAAU,YAAA,CAAAd,mBAAA;IAAAe,GAAA;IAAAxB,KAAA,EAIS,SAAAyB,OAAOC,IAAmB,EAAEC,OAAkC;MACrE,IAAI,IAAI,CAACX,YAAY,KAAKU,IAAI,EAAE;QAC9B,IAAI,IAAI,CAACT,UAAU,EAAE;UACnB,IAAI,CAACA,UAAU,CAACW,OAAO,EAAE;;QAE3B,IAAI,CAACZ,YAAY,GAAGU,IAAI;QACxB,IAAMrC,WAAW,GAAGqC,IAAI,CAACG,OAAqB;QAC9CxC,WAAW,CAACG,SAAS,CAACC,GAAG,CAAC,iBAAiB,CAAC;QAC5C,IAAMqC,OAAO,GAAG1C,aAAa,CAACC,WAAW,CAAC;QAC1C,IAAI,CAAC4B,UAAU,GAAG,IAAIjC,uBAAuB,CAAC8C,OAAO,CAAC;QACtD,IAAI,CAACb,UAAU,CAACc,IAAI,EAAE;;MAExB,OAAO,IAAI,CAACC,MAAM,EAAE;IACtB;EAAC;IAAAR,GAAA;IAAAxB,KAAA,EAED,SAAAgC,OAAA,EAAM;MACJ,OAAO,IAAI,CAACf,UAAU;IACxB;EAAC;EAAA,OAAAR,mBAAA;AAAA,EAtCsCvB,SAAS;AAyClD,OAAO,IAAM+C,UAAU,GAAGhD,SAAS,CAACwB,mBAAmB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}