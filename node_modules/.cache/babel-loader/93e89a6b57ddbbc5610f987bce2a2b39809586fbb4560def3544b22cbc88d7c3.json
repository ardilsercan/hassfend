{"ast":null,"code":"import { isStrategyView } from \"../../../data/lovelace/config/view\";\nimport { showAlertDialog } from \"../../../dialogs/generic/show-dialog-box\";\nimport { showDeleteSuccessToast } from \"../../../util/toast-deleted-success\";\nimport { showDeleteCardDialog } from \"./card-editor/show-delete-card-dialog\";\nimport { deleteCard, insertCard } from \"./config-util\";\nexport async function confDeleteCard(element, hass, lovelace, path) {\n  const view = lovelace.config.views[path[0]];\n  if (isStrategyView(view)) {\n    throw new Error(\"Deleting cards in a strategy view is not supported.\");\n  }\n  const cardConfig = view.cards[path[1]];\n  showDeleteCardDialog(element, {\n    cardConfig,\n    deleteCard: async () => {\n      try {\n        const newLovelace = deleteCard(lovelace.config, path);\n        await lovelace.saveConfig(newLovelace);\n        const action = async () => {\n          await lovelace.saveConfig(insertCard(newLovelace, path, cardConfig));\n        };\n        showDeleteSuccessToast(element, hass, action);\n      } catch (err) {\n        showAlertDialog(element, {\n          text: `Deleting failed: ${err.message}`\n        });\n      }\n    }\n  });\n}","map":{"version":3,"names":["isStrategyView","showAlertDialog","showDeleteSuccessToast","showDeleteCardDialog","deleteCard","insertCard","confDeleteCard","element","hass","lovelace","path","view","config","views","Error","cardConfig","cards","newLovelace","saveConfig","action","err","text","message"],"sources":["/Users/sercanardil/Desktop/frontend/src/panels/lovelace/editor/delete-card.ts"],"sourcesContent":["import { isStrategyView } from \"../../../data/lovelace/config/view\";\nimport { showAlertDialog } from \"../../../dialogs/generic/show-dialog-box\";\nimport { HomeAssistant } from \"../../../types\";\nimport { showDeleteSuccessToast } from \"../../../util/toast-deleted-success\";\nimport { Lovelace } from \"../types\";\nimport { showDeleteCardDialog } from \"./card-editor/show-delete-card-dialog\";\nimport { deleteCard, insertCard } from \"./config-util\";\n\nexport async function confDeleteCard(\n  element: HTMLElement,\n  hass: HomeAssistant,\n  lovelace: Lovelace,\n  path: [number, number]\n): Promise<void> {\n  const view = lovelace.config.views[path[0]];\n  if (isStrategyView(view)) {\n    throw new Error(\"Deleting cards in a strategy view is not supported.\");\n  }\n  const cardConfig = view.cards![path[1]];\n  showDeleteCardDialog(element, {\n    cardConfig,\n    deleteCard: async () => {\n      try {\n        const newLovelace = deleteCard(lovelace.config, path);\n        await lovelace.saveConfig(newLovelace);\n        const action = async () => {\n          await lovelace.saveConfig(insertCard(newLovelace, path, cardConfig));\n        };\n        showDeleteSuccessToast(element, hass!, action);\n      } catch (err: any) {\n        showAlertDialog(element, {\n          text: `Deleting failed: ${err.message}`,\n        });\n      }\n    },\n  });\n}\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,oCAAoC;AACnE,SAASC,eAAe,QAAQ,0CAA0C;AAE1E,SAASC,sBAAsB,QAAQ,qCAAqC;AAE5E,SAASC,oBAAoB,QAAQ,uCAAuC;AAC5E,SAASC,UAAU,EAAEC,UAAU,QAAQ,eAAe;AAEtD,OAAO,eAAeC,cAAcA,CAClCC,OAAoB,EACpBC,IAAmB,EACnBC,QAAkB,EAClBC,IAAsB,EACP;EACf,MAAMC,IAAI,GAAGF,QAAQ,CAACG,MAAM,CAACC,KAAK,CAACH,IAAI,CAAC,CAAC,CAAC,CAAC;EAC3C,IAAIV,cAAc,CAACW,IAAI,CAAC,EAAE;IACxB,MAAM,IAAIG,KAAK,CAAC,qDAAqD,CAAC;EACxE;EACA,MAAMC,UAAU,GAAGJ,IAAI,CAACK,KAAK,CAAEN,IAAI,CAAC,CAAC,CAAC,CAAC;EACvCP,oBAAoB,CAACI,OAAO,EAAE;IAC5BQ,UAAU;IACVX,UAAU,EAAE,MAAAA,CAAA,KAAY;MACtB,IAAI;QACF,MAAMa,WAAW,GAAGb,UAAU,CAACK,QAAQ,CAACG,MAAM,EAAEF,IAAI,CAAC;QACrD,MAAMD,QAAQ,CAACS,UAAU,CAACD,WAAW,CAAC;QACtC,MAAME,MAAM,GAAG,MAAAA,CAAA,KAAY;UACzB,MAAMV,QAAQ,CAACS,UAAU,CAACb,UAAU,CAACY,WAAW,EAAEP,IAAI,EAAEK,UAAU,CAAC,CAAC;QACtE,CAAC;QACDb,sBAAsB,CAACK,OAAO,EAAEC,IAAI,EAAGW,MAAM,CAAC;MAChD,CAAC,CAAC,OAAOC,GAAQ,EAAE;QACjBnB,eAAe,CAACM,OAAO,EAAE;UACvBc,IAAI,EAAG,oBAAmBD,GAAG,CAACE,OAAQ;QACxC,CAAC,CAAC;MACJ;IACF;EACF,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}