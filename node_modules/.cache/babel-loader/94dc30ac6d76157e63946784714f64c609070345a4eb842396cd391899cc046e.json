{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nconst mdiPower = \"M16.56,5.44L15.11,6.89C16.84,7.94 18,9.83 18,12A6,6 0 0,1 12,18A6,6 0 0,1 6,12C6,9.83 7.16,7.94 8.88,6.88L7.44,5.44C5.36,6.88 4,9.28 4,12A8,8 0 0,0 12,20A8,8 0 0,0 20,12C20,9.28 18.64,6.88 16.56,5.44M13,3H11V13H13\";\nconst mdiWaterPercent = \"M12,3.25C12,3.25 6,10 6,14C6,17.32 8.69,20 12,20A6,6 0 0,0 18,14C18,10 12,3.25 12,3.25M14.47,9.97L15.53,11.03L9.53,17.03L8.47,15.97M9.75,10A1.25,1.25 0 0,1 11,11.25A1.25,1.25 0 0,1 9.75,12.5A1.25,1.25 0 0,1 8.5,11.25A1.25,1.25 0 0,1 9.75,10M14.25,14.5A1.25,1.25 0 0,1 15.5,15.75A1.25,1.25 0 0,1 14.25,17A1.25,1.25 0 0,1 13,15.75A1.25,1.25 0 0,1 14.25,14.5Z\";\nimport { LitElement, css, html } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { styleMap } from \"lit/directives/style-map\";\nimport { computeDomain } from \"../../../common/entity/compute_domain\";\nimport { stateColorCss } from \"../../../common/entity/state_color\";\nimport \"../../../components/ha-control-select\";\nimport { UNAVAILABLE } from \"../../../data/entity\";\nexport const supportsHumidifierToggleCardFeature = stateObj => {\n  const domain = computeDomain(stateObj.entity_id);\n  return domain === \"humidifier\";\n};\nlet HuiHumidifierToggleCardFeature = _decorate([customElement(\"hui-humidifier-toggle-card-feature\")], function (_initialize, _LitElement) {\n  class HuiHumidifierToggleCardFeature extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HuiHumidifierToggleCardFeature,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"stateObj\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_config\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_currentState\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      static: true,\n      key: \"getStubConfig\",\n      value: function getStubConfig() {\n        return {\n          type: \"humidifier-toggle\"\n        };\n      }\n    }, {\n      kind: \"method\",\n      key: \"setConfig\",\n      value: function setConfig(config) {\n        if (!config) {\n          throw new Error(\"Invalid configuration\");\n        }\n        this._config = config;\n      }\n    }, {\n      kind: \"method\",\n      key: \"willUpdate\",\n      value: function willUpdate(changedProp) {\n        _get(_getPrototypeOf(HuiHumidifierToggleCardFeature.prototype), \"willUpdate\", this).call(this, changedProp);\n        if (changedProp.has(\"stateObj\") && this.stateObj) {\n          this._currentState = this.stateObj.state;\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_valueChanged\",\n      value: async function _valueChanged(ev) {\n        const newState = ev.detail.value;\n        if (newState === this.stateObj.state) return;\n        const oldState = this.stateObj.state;\n        this._currentState = newState;\n        try {\n          await this._setState(newState);\n        } catch (err) {\n          this._currentState = oldState;\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_setState\",\n      value: async function _setState(newState) {\n        await this.hass.callService(\"humidifier\", newState === \"on\" ? \"turn_on\" : \"turn_off\", {\n          entity_id: this.stateObj.entity_id\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this._config || !this.hass || !this.stateObj || !supportsHumidifierToggleCardFeature(this.stateObj)) {\n          return null;\n        }\n        const color = stateColorCss(this.stateObj);\n        const options = [\"on\", \"off\"].map(entityState => ({\n          value: entityState,\n          label: this.hass.formatEntityState(this.stateObj, entityState),\n          path: entityState === \"on\" ? mdiWaterPercent : mdiPower\n        }));\n        return html`\n      <div class=\"container\">\n        <ha-control-select\n          .options=${options}\n          .value=${this._currentState}\n          @value-changed=${this._valueChanged}\n          hide-label\n          .ariaLabel=${this.hass.localize(\"ui.card.humidifier.state\")}\n          style=${styleMap({\n          \"--control-select-color\": color\n        })}\n          .disabled=${this.stateObj.state === UNAVAILABLE}\n        >\n        </ha-control-select>\n      </div>\n    `;\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css`\n      ha-control-select {\n        --control-select-color: var(--feature-color);\n        --control-select-padding: 0;\n        --control-select-thickness: 40px;\n        --control-select-border-radius: 10px;\n        --control-select-button-border-radius: 10px;\n      }\n      .container {\n        padding: 0 12px 12px 12px;\n        width: auto;\n      }\n    `;\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["LitElement","css","html","customElement","property","state","styleMap","computeDomain","stateColorCss","UNAVAILABLE","supportsHumidifierToggleCardFeature","stateObj","domain","entity_id","HuiHumidifierToggleCardFeature","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","static","getStubConfig","type","setConfig","config","Error","_config","willUpdate","changedProp","_get","_getPrototypeOf","prototype","call","has","_currentState","_valueChanged","ev","newState","detail","oldState","_setState","err","hass","callService","render","color","options","map","entityState","label","formatEntityState","path","mdiWaterPercent","mdiPower","localize","styles"],"sources":["/Users/sercanardil/Desktop/frontend/src/panels/lovelace/card-features/hui-humidifier-toggle-card-feature.ts"],"sourcesContent":["import { mdiPower, mdiWaterPercent } from \"@mdi/js\";\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport { LitElement, PropertyValues, TemplateResult, css, html } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { styleMap } from \"lit/directives/style-map\";\nimport { computeDomain } from \"../../../common/entity/compute_domain\";\nimport { stateColorCss } from \"../../../common/entity/state_color\";\nimport \"../../../components/ha-control-select\";\nimport type { ControlSelectOption } from \"../../../components/ha-control-select\";\nimport { UNAVAILABLE } from \"../../../data/entity\";\nimport { HumidifierEntity, HumidifierState } from \"../../../data/humidifier\";\nimport { HomeAssistant } from \"../../../types\";\nimport { LovelaceCardFeature } from \"../types\";\nimport { HumidifierToggleCardFeatureConfig } from \"./types\";\n\nexport const supportsHumidifierToggleCardFeature = (stateObj: HassEntity) => {\n  const domain = computeDomain(stateObj.entity_id);\n  return domain === \"humidifier\";\n};\n\n@customElement(\"hui-humidifier-toggle-card-feature\")\nclass HuiHumidifierToggleCardFeature\n  extends LitElement\n  implements LovelaceCardFeature\n{\n  @property({ attribute: false }) public hass?: HomeAssistant;\n\n  @property({ attribute: false }) public stateObj?: HumidifierEntity;\n\n  @state() private _config?: HumidifierToggleCardFeatureConfig;\n\n  @state() _currentState?: HumidifierState;\n\n  static getStubConfig(): HumidifierToggleCardFeatureConfig {\n    return {\n      type: \"humidifier-toggle\",\n    };\n  }\n\n  public setConfig(config: HumidifierToggleCardFeatureConfig): void {\n    if (!config) {\n      throw new Error(\"Invalid configuration\");\n    }\n    this._config = config;\n  }\n\n  protected willUpdate(changedProp: PropertyValues): void {\n    super.willUpdate(changedProp);\n    if (changedProp.has(\"stateObj\") && this.stateObj) {\n      this._currentState = this.stateObj.state as HumidifierState;\n    }\n  }\n\n  private async _valueChanged(ev: CustomEvent) {\n    const newState = (ev.detail as any).value as HumidifierState;\n\n    if (newState === this.stateObj!.state) return;\n\n    const oldState = this.stateObj!.state as HumidifierState;\n    this._currentState = newState;\n\n    try {\n      await this._setState(newState);\n    } catch (err) {\n      this._currentState = oldState;\n    }\n  }\n\n  private async _setState(newState: HumidifierState) {\n    await this.hass!.callService(\n      \"humidifier\",\n      newState === \"on\" ? \"turn_on\" : \"turn_off\",\n      {\n        entity_id: this.stateObj!.entity_id,\n      }\n    );\n  }\n\n  protected render(): TemplateResult | null {\n    if (\n      !this._config ||\n      !this.hass ||\n      !this.stateObj ||\n      !supportsHumidifierToggleCardFeature(this.stateObj)\n    ) {\n      return null;\n    }\n\n    const color = stateColorCss(this.stateObj);\n\n    const options = [\"on\", \"off\"].map<ControlSelectOption>((entityState) => ({\n      value: entityState,\n      label: this.hass!.formatEntityState(this.stateObj!, entityState),\n      path: entityState === \"on\" ? mdiWaterPercent : mdiPower,\n    }));\n\n    return html`\n      <div class=\"container\">\n        <ha-control-select\n          .options=${options}\n          .value=${this._currentState}\n          @value-changed=${this._valueChanged}\n          hide-label\n          .ariaLabel=${this.hass.localize(\"ui.card.humidifier.state\")}\n          style=${styleMap({\n            \"--control-select-color\": color,\n          })}\n          .disabled=${this.stateObj!.state === UNAVAILABLE}\n        >\n        </ha-control-select>\n      </div>\n    `;\n  }\n\n  static get styles() {\n    return css`\n      ha-control-select {\n        --control-select-color: var(--feature-color);\n        --control-select-padding: 0;\n        --control-select-thickness: 40px;\n        --control-select-border-radius: 10px;\n        --control-select-button-border-radius: 10px;\n      }\n      .container {\n        padding: 0 12px 12px 12px;\n        width: auto;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-humidifier-toggle-card-feature\": HuiHumidifierToggleCardFeature;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}