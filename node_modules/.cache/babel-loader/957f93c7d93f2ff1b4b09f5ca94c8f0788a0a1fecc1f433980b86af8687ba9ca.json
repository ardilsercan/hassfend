{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nconst mdiDeleteOutline = \"M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19M8,9H16V19H8V9M15.5,4L14.5,3H9.5L8.5,4H5V6H19V4H15.5Z\";\nconst mdiPlus = \"M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z\";\nimport { LitElement, css, html } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { haStyle } from \"../resources/styles\";\nimport \"./ha-button\";\nimport \"./ha-icon-button\";\nimport \"./ha-textfield\";\nlet HaMultiTextField = _decorate([customElement(\"ha-multi-textfield\")], function (_initialize, _LitElement) {\n  class HaMultiTextField extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaMultiTextField,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"value\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"disabled\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"label\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"inputType\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"inputSuffix\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"inputPrefix\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"autocomplete\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"addLabel\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"removeLabel\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: \"item-index\",\n        type: Boolean\n      })],\n      key: \"itemIndex\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var _ref2, _this$addLabel, _this$hass2;\n        return html`\n      ${this._items.map((item, index) => {\n          var _ref, _this$removeLabel, _this$hass;\n          const indexSuffix = `${this.itemIndex ? ` ${index + 1}` : \"\"}`;\n          return html`\n          <div class=\"layout horizontal center-center row\">\n            <ha-textfield\n              .suffix=${this.inputSuffix}\n              .prefix=${this.inputPrefix}\n              .type=${this.inputType}\n              .autocomplete=${this.autocomplete}\n              .disabled=${this.disabled}\n              dialogInitialFocus=${index}\n              .index=${index}\n              class=\"flex-auto\"\n              .label=${`${this.label ? `${this.label}${indexSuffix}` : \"\"}`}\n              .value=${item}\n              ?data-last=${index === this._items.length - 1}\n              @input=${this._editItem}\n              @keydown=${this._keyDown}\n            ></ha-textfield>\n            <ha-icon-button\n              .disabled=${this.disabled}\n              .index=${index}\n              slot=\"navigationIcon\"\n              .label=${(_ref = (_this$removeLabel = this.removeLabel) !== null && _this$removeLabel !== void 0 ? _this$removeLabel : (_this$hass = this.hass) === null || _this$hass === void 0 ? void 0 : _this$hass.localize(\"ui.common.remove\")) !== null && _ref !== void 0 ? _ref : \"Remove\"}\n              @click=${this._removeItem}\n              .path=${mdiDeleteOutline}\n            ></ha-icon-button>\n          </div>\n        `;\n        })}\n      <div class=\"layout horizontal center-center\">\n        <ha-button @click=${this._addItem} .disabled=${this.disabled}>\n          ${(_ref2 = (_this$addLabel = this.addLabel) !== null && _this$addLabel !== void 0 ? _this$addLabel : (_this$hass2 = this.hass) === null || _this$hass2 === void 0 ? void 0 : _this$hass2.localize(\"ui.common.add\")) !== null && _ref2 !== void 0 ? _ref2 : \"Add\"}\n          <ha-svg-icon slot=\"icon\" .path=${mdiPlus}></ha-svg-icon>\n        </ha-button>\n      </div>\n    `;\n      }\n    }, {\n      kind: \"get\",\n      key: \"_items\",\n      value: function _items() {\n        var _this$value;\n        return (_this$value = this.value) !== null && _this$value !== void 0 ? _this$value : [];\n      }\n    }, {\n      kind: \"method\",\n      key: \"_addItem\",\n      value: async function _addItem() {\n        var _this$shadowRoot;\n        const items = [...this._items, \"\"];\n        this._fireChanged(items);\n        await this.updateComplete;\n        const field = (_this$shadowRoot = this.shadowRoot) === null || _this$shadowRoot === void 0 ? void 0 : _this$shadowRoot.querySelector(`ha-textfield[data-last]`);\n        field === null || field === void 0 || field.focus();\n      }\n    }, {\n      kind: \"method\",\n      key: \"_editItem\",\n      value: async function _editItem(ev) {\n        const index = ev.target.index;\n        const items = [...this._items];\n        items[index] = ev.target.value;\n        this._fireChanged(items);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_keyDown\",\n      value: async function _keyDown(ev) {\n        if (ev.key === \"Enter\") {\n          ev.stopPropagation();\n          this._addItem();\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_removeItem\",\n      value: async function _removeItem(ev) {\n        const index = ev.target.index;\n        const items = [...this._items];\n        items.splice(index, 1);\n        this._fireChanged(items);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_fireChanged\",\n      value: function _fireChanged(value) {\n        this.value = value;\n        fireEvent(this, \"value-changed\", {\n          value\n        });\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [haStyle, css`\n        .row {\n          margin-bottom: 8px;\n        }\n        ha-textfield {\n          display: block;\n        }\n        ha-icon-button {\n          display: block;\n        }\n        ha-button {\n          margin-left: 8px;\n          margin-inline-start: 8px;\n          margin-inline-end: initial;\n        }\n      `];\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["LitElement","css","html","customElement","property","fireEvent","haStyle","HaMultiTextField","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","type","Boolean","render","_ref2","_this$addLabel","_this$hass2","_items","map","item","index","_ref","_this$removeLabel","_this$hass","indexSuffix","itemIndex","inputSuffix","inputPrefix","inputType","autocomplete","disabled","label","length","_editItem","_keyDown","removeLabel","hass","localize","_removeItem","mdiDeleteOutline","_addItem","addLabel","mdiPlus","_this$value","_this$shadowRoot","items","_fireChanged","updateComplete","field","shadowRoot","querySelector","focus","ev","target","stopPropagation","splice","static","styles"],"sources":["/Users/sercanardil/Desktop/frontend/src/components/ha-multi-textfield.ts"],"sourcesContent":["import { mdiDeleteOutline, mdiPlus } from \"@mdi/js\";\nimport { CSSResultGroup, LitElement, css, html } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { haStyle } from \"../resources/styles\";\nimport type { HomeAssistant } from \"../types\";\nimport \"./ha-button\";\nimport \"./ha-icon-button\";\nimport \"./ha-textfield\";\nimport type { HaTextField } from \"./ha-textfield\";\n\n@customElement(\"ha-multi-textfield\")\nclass HaMultiTextField extends LitElement {\n  @property({ attribute: false }) public hass?: HomeAssistant;\n\n  @property({ attribute: false }) public value?: string[];\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @property() public label?: string;\n\n  @property() public inputType?: string;\n\n  @property() public inputSuffix?: string;\n\n  @property() public inputPrefix?: string;\n\n  @property() public autocomplete?: string;\n\n  @property() public addLabel?: string;\n\n  @property() public removeLabel?: string;\n\n  @property({ attribute: \"item-index\", type: Boolean })\n  public itemIndex = false;\n\n  protected render() {\n    return html`\n      ${this._items.map((item, index) => {\n        const indexSuffix = `${this.itemIndex ? ` ${index + 1}` : \"\"}`;\n        return html`\n          <div class=\"layout horizontal center-center row\">\n            <ha-textfield\n              .suffix=${this.inputSuffix}\n              .prefix=${this.inputPrefix}\n              .type=${this.inputType}\n              .autocomplete=${this.autocomplete}\n              .disabled=${this.disabled}\n              dialogInitialFocus=${index}\n              .index=${index}\n              class=\"flex-auto\"\n              .label=${`${this.label ? `${this.label}${indexSuffix}` : \"\"}`}\n              .value=${item}\n              ?data-last=${index === this._items.length - 1}\n              @input=${this._editItem}\n              @keydown=${this._keyDown}\n            ></ha-textfield>\n            <ha-icon-button\n              .disabled=${this.disabled}\n              .index=${index}\n              slot=\"navigationIcon\"\n              .label=${this.removeLabel ??\n              this.hass?.localize(\"ui.common.remove\") ??\n              \"Remove\"}\n              @click=${this._removeItem}\n              .path=${mdiDeleteOutline}\n            ></ha-icon-button>\n          </div>\n        `;\n      })}\n      <div class=\"layout horizontal center-center\">\n        <ha-button @click=${this._addItem} .disabled=${this.disabled}>\n          ${this.addLabel ?? this.hass?.localize(\"ui.common.add\") ?? \"Add\"}\n          <ha-svg-icon slot=\"icon\" .path=${mdiPlus}></ha-svg-icon>\n        </ha-button>\n      </div>\n    `;\n  }\n\n  private get _items() {\n    return this.value ?? [];\n  }\n\n  private async _addItem() {\n    const items = [...this._items, \"\"];\n    this._fireChanged(items);\n    await this.updateComplete;\n    const field = this.shadowRoot?.querySelector(`ha-textfield[data-last]`) as\n      | HaTextField\n      | undefined;\n    field?.focus();\n  }\n\n  private async _editItem(ev: Event) {\n    const index = (ev.target as any).index;\n    const items = [...this._items];\n    items[index] = (ev.target as any).value;\n    this._fireChanged(items);\n  }\n\n  private async _keyDown(ev: KeyboardEvent) {\n    if (ev.key === \"Enter\") {\n      ev.stopPropagation();\n      this._addItem();\n    }\n  }\n\n  private async _removeItem(ev: Event) {\n    const index = (ev.target as any).index;\n    const items = [...this._items];\n    items.splice(index, 1);\n    this._fireChanged(items);\n  }\n\n  private _fireChanged(value) {\n    this.value = value;\n    fireEvent(this, \"value-changed\", { value });\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyle,\n      css`\n        .row {\n          margin-bottom: 8px;\n        }\n        ha-textfield {\n          display: block;\n        }\n        ha-icon-button {\n          display: block;\n        }\n        ha-button {\n          margin-left: 8px;\n          margin-inline-start: 8px;\n          margin-inline-end: initial;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-multi-textfield\": HaMultiTextField;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}