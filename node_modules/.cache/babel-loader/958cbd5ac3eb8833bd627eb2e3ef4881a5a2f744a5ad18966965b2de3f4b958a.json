{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport \"./ha-markdown-element\";\nexport let HaMarkdown = _decorate([customElement(\"ha-markdown\")], function (_initialize, _LitElement) {\n  class HaMarkdown extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaMarkdown,\n    d: [{\n      kind: \"field\",\n      decorators: [property()],\n      key: \"content\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"allowSvg\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"breaks\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        attribute: \"lazy-images\"\n      })],\n      key: \"lazyImages\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this.content) {\n          return nothing;\n        }\n        return html`<ha-markdown-element\n      .content=${this.content}\n      .allowSvg=${this.allowSvg}\n      .breaks=${this.breaks}\n      .lazyImages=${this.lazyImages}\n    ></ha-markdown-element>`;\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css`\n      :host {\n        display: block;\n      }\n      ha-markdown-element {\n        -ms-user-select: text;\n        -webkit-user-select: text;\n        -moz-user-select: text;\n      }\n      ha-markdown-element > *:first-child {\n        margin-top: 0;\n      }\n      ha-markdown-element > *:last-child {\n        margin-bottom: 0;\n      }\n      ha-alert {\n        display: block;\n        margin: 4px 0;\n      }\n      a {\n        color: var(--primary-color);\n      }\n      img {\n        max-width: 100%;\n      }\n      code,\n      pre {\n        background-color: var(--markdown-code-background-color, none);\n        border-radius: 3px;\n      }\n      svg {\n        background-color: var(--markdown-svg-background-color, none);\n        color: var(--markdown-svg-color, none);\n      }\n      code {\n        font-size: 85%;\n        padding: 0.2em 0.4em;\n      }\n      pre code {\n        padding: 0;\n      }\n      pre {\n        padding: 16px;\n        overflow: auto;\n        line-height: 1.45;\n        font-family: var(--code-font-family, monospace);\n      }\n      h1,\n      h2,\n      h3,\n      h4,\n      h5,\n      h6 {\n        line-height: initial;\n      }\n      h2 {\n        font-size: 1.5em;\n        font-weight: bold;\n      }\n    `;\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","nothing","customElement","property","HaMarkdown","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","key","value","type","Boolean","attribute","render","content","allowSvg","breaks","lazyImages","static","styles"],"sources":["/Users/sercanardil/Desktop/frontend/src/components/ha-markdown.ts"],"sourcesContent":["import { css, CSSResultGroup, html, LitElement, nothing } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport \"./ha-markdown-element\";\n\n@customElement(\"ha-markdown\")\nexport class HaMarkdown extends LitElement {\n  @property() public content?;\n\n  @property({ type: Boolean }) public allowSvg = false;\n\n  @property({ type: Boolean }) public breaks = false;\n\n  @property({ type: Boolean, attribute: \"lazy-images\" }) public lazyImages =\n    false;\n\n  protected render() {\n    if (!this.content) {\n      return nothing;\n    }\n\n    return html`<ha-markdown-element\n      .content=${this.content}\n      .allowSvg=${this.allowSvg}\n      .breaks=${this.breaks}\n      .lazyImages=${this.lazyImages}\n    ></ha-markdown-element>`;\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      :host {\n        display: block;\n      }\n      ha-markdown-element {\n        -ms-user-select: text;\n        -webkit-user-select: text;\n        -moz-user-select: text;\n      }\n      ha-markdown-element > *:first-child {\n        margin-top: 0;\n      }\n      ha-markdown-element > *:last-child {\n        margin-bottom: 0;\n      }\n      ha-alert {\n        display: block;\n        margin: 4px 0;\n      }\n      a {\n        color: var(--primary-color);\n      }\n      img {\n        max-width: 100%;\n      }\n      code,\n      pre {\n        background-color: var(--markdown-code-background-color, none);\n        border-radius: 3px;\n      }\n      svg {\n        background-color: var(--markdown-svg-background-color, none);\n        color: var(--markdown-svg-color, none);\n      }\n      code {\n        font-size: 85%;\n        padding: 0.2em 0.4em;\n      }\n      pre code {\n        padding: 0;\n      }\n      pre {\n        padding: 16px;\n        overflow: auto;\n        line-height: 1.45;\n        font-family: var(--code-font-family, monospace);\n      }\n      h1,\n      h2,\n      h3,\n      h4,\n      h5,\n      h6 {\n        line-height: initial;\n      }\n      h2 {\n        font-size: 1.5em;\n        font-weight: bold;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-markdown\": HaMarkdown;\n  }\n}\n"],"mappings":";AAAA,SAASA,GAAG,EAAkBC,IAAI,EAAEC,UAAU,EAAEC,OAAO,QAAQ,KAAK;AACpE,SAASC,aAAa,EAAEC,QAAQ,QAAQ,gBAAgB;AACxD,OAAO,uBAAuB;AAE9B,WACaC,UAAU,GAAAC,SAAA,EADtBH,aAAa,CAAC,aAAa,CAAC,aAAAI,WAAA,EAAAC,WAAA;EAA7B,MACaH,UAAU,SAAAG,WAAA,CAAoB;IAAAC,YAAA,GAAAC,IAAA;MAAA,SAAAA,IAAA;MAAAH,WAAA;IAAA;EAqF3C;EAAC;IAAAI,CAAA,EArFYN,UAAU;IAAAO,CAAA;MAAAC,IAAA;MAAAC,UAAA,GACpBV,QAAQ,CAAC,CAAC;MAAAW,GAAA;MAAAC,KAAA;IAAA;MAAAH,IAAA;MAAAC,UAAA,GAEVV,QAAQ,CAAC;QAAEa,IAAI,EAAEC;MAAQ,CAAC,CAAC;MAAAH,GAAA;MAAAC,MAAA;QAAA,OAAmB,KAAK;MAAA;IAAA;MAAAH,IAAA;MAAAC,UAAA,GAEnDV,QAAQ,CAAC;QAAEa,IAAI,EAAEC;MAAQ,CAAC,CAAC;MAAAH,GAAA;MAAAC,MAAA;QAAA,OAAiB,KAAK;MAAA;IAAA;MAAAH,IAAA;MAAAC,UAAA,GAEjDV,QAAQ,CAAC;QAAEa,IAAI,EAAEC,OAAO;QAAEC,SAAS,EAAE;MAAc,CAAC,CAAC;MAAAJ,GAAA;MAAAC,MAAA;QAAA,OACpD,KAAK;MAAA;IAAA;MAAAH,IAAA;MAAAE,GAAA;MAAAC,KAAA,EAEP,SAAAI,OAAA,EAAmB;QACjB,IAAI,CAAC,IAAI,CAACC,OAAO,EAAE;UACjB,OAAOnB,OAAO;QAChB;QAEA,OAAOF,IAAK;AAChB,iBAAiB,IAAI,CAACqB,OAAQ;AAC9B,kBAAkB,IAAI,CAACC,QAAS;AAChC,gBAAgB,IAAI,CAACC,MAAO;AAC5B,oBAAoB,IAAI,CAACC,UAAW;AACpC,4BAA4B;MAC1B;IAAC;MAAAX,IAAA;MAAAY,MAAA;MAAAV,GAAA;MAAAC,KAAA,EAED,SAAAU,OAAA,EAAoC;QAClC,OAAO3B,GAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;MACH;IAAC;EAAA;AAAA,GApF6BE,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}