{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/helpers/regeneratorRuntime\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10;\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\n/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\nimport '@material/mwc-notched-outline/mwc-notched-outline.js';\nimport { addHasRemoveClass, FormElement } from '@material/mwc-base/form-element.js';\nimport { observer } from '@material/mwc-base/observer.js';\nimport { floatingLabel } from '@material/mwc-floating-label/mwc-floating-label-directive.js';\nimport { lineRipple } from '@material/mwc-line-ripple/mwc-line-ripple-directive.js';\nimport MDCTextFieldFoundation from '@material/textfield/foundation.js';\nimport { html } from 'lit';\nimport { eventOptions, property, query, state } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { live } from 'lit/directives/live.js';\nvar passiveEvents = ['touchstart', 'touchmove', 'scroll', 'mousewheel'];\nvar createValidityObj = function createValidityObj() {\n  var customValidity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  /*\n   * We need to make ValidityState an object because it is readonly and\n   * we cannot use the spread operator. Also, we don't export\n   * `CustomValidityState` because it is a leaky implementation and the user\n   * already has access to `ValidityState` in lib.dom.ts. Also an interface\n   * {a: Type} can be casted to {readonly a: Type} so passing any object\n   * should be fine.\n   */\n  var objectifiedCustomValidity = {};\n  // eslint-disable-next-line guard-for-in\n  for (var propName in customValidity) {\n    /*\n     * Casting is needed because ValidityState's props are all readonly and\n     * thus cannot be set on `onjectifiedCustomValidity`. In the end, the\n     * interface is the same as ValidityState (but not readonly), but the\n     * function signature casts the output to ValidityState (thus readonly).\n     */\n    objectifiedCustomValidity[propName] = customValidity[propName];\n  }\n  return Object.assign({\n    badInput: false,\n    customError: false,\n    patternMismatch: false,\n    rangeOverflow: false,\n    rangeUnderflow: false,\n    stepMismatch: false,\n    tooLong: false,\n    tooShort: false,\n    typeMismatch: false,\n    valid: true,\n    valueMissing: false\n  }, objectifiedCustomValidity);\n};\n/** @soyCompatible */\nexport var TextFieldBase = /*#__PURE__*/function (_FormElement) {\n  _inherits(TextFieldBase, _FormElement);\n  function TextFieldBase() {\n    var _this;\n    _classCallCheck(this, TextFieldBase);\n    _this = _callSuper(this, TextFieldBase, arguments);\n    _this.mdcFoundationClass = MDCTextFieldFoundation;\n    _this.value = '';\n    _this.type = 'text';\n    _this.placeholder = '';\n    _this.label = '';\n    _this.icon = '';\n    _this.iconTrailing = '';\n    _this.disabled = false;\n    _this.required = false;\n    _this.minLength = -1;\n    _this.maxLength = -1;\n    _this.outlined = false;\n    _this.helper = '';\n    _this.validateOnInitialRender = false;\n    _this.validationMessage = '';\n    _this.autoValidate = false;\n    _this.pattern = '';\n    _this.min = '';\n    _this.max = '';\n    /**\n     * step can be a number or the keyword \"any\".\n     *\n     * Use `String` typing to pass down the value as a string and let the native\n     * input cast internally as needed.\n     */\n    _this.step = null;\n    _this.size = null;\n    _this.helperPersistent = false;\n    _this.charCounter = false;\n    _this.endAligned = false;\n    _this.prefix = '';\n    _this.suffix = '';\n    _this.name = '';\n    _this.readOnly = false;\n    _this.autocapitalize = '';\n    _this.outlineOpen = false;\n    _this.outlineWidth = 0;\n    _this.isUiValid = true;\n    _this.focused = false;\n    _this._validity = createValidityObj();\n    _this.validityTransform = null;\n    return _this;\n  }\n  _createClass(TextFieldBase, [{\n    key: \"validity\",\n    get: function get() {\n      this._checkValidity(this.value);\n      return this._validity;\n    }\n  }, {\n    key: \"willValidate\",\n    get: function get() {\n      return this.formElement.willValidate;\n    }\n  }, {\n    key: \"selectionStart\",\n    get: function get() {\n      return this.formElement.selectionStart;\n    }\n  }, {\n    key: \"selectionEnd\",\n    get: function get() {\n      return this.formElement.selectionEnd;\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      var focusEvt = new CustomEvent('focus');\n      this.formElement.dispatchEvent(focusEvt);\n      this.formElement.focus();\n    }\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      var blurEvt = new CustomEvent('blur');\n      this.formElement.dispatchEvent(blurEvt);\n      this.formElement.blur();\n    }\n  }, {\n    key: \"select\",\n    value: function select() {\n      this.formElement.select();\n    }\n  }, {\n    key: \"setSelectionRange\",\n    value: function setSelectionRange(selectionStart, selectionEnd, selectionDirection) {\n      this.formElement.setSelectionRange(selectionStart, selectionEnd, selectionDirection);\n    }\n  }, {\n    key: \"update\",\n    value: function update(changedProperties) {\n      if (changedProperties.has('autoValidate') && this.mdcFoundation) {\n        this.mdcFoundation.setValidateOnValueChange(this.autoValidate);\n      }\n      if (changedProperties.has('value') && typeof this.value !== 'string') {\n        this.value = \"\".concat(this.value);\n      }\n      _get(_getPrototypeOf(TextFieldBase.prototype), \"update\", this).call(this, changedProperties);\n    }\n  }, {\n    key: \"setFormData\",\n    value: function setFormData(formData) {\n      if (this.name) {\n        formData.append(this.name, this.value);\n      }\n    }\n    /** @soyTemplate */\n  }, {\n    key: \"render\",\n    value: function render() {\n      var shouldRenderCharCounter = this.charCounter && this.maxLength !== -1;\n      var shouldRenderHelperText = !!this.helper || !!this.validationMessage || shouldRenderCharCounter;\n      /** @classMap */\n      var classes = {\n        'mdc-text-field--disabled': this.disabled,\n        'mdc-text-field--no-label': !this.label,\n        'mdc-text-field--filled': !this.outlined,\n        'mdc-text-field--outlined': this.outlined,\n        'mdc-text-field--with-leading-icon': this.icon,\n        'mdc-text-field--with-trailing-icon': this.iconTrailing,\n        'mdc-text-field--end-aligned': this.endAligned\n      };\n      return html(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      <label class=\\\"mdc-text-field \", \"\\\">\\n        \", \"\\n        \", \"\\n        \", \"\\n        \", \"\\n        \", \"\\n        \", \"\\n        \", \"\\n        \", \"\\n      </label>\\n      \", \"\\n    \"])), classMap(classes), this.renderRipple(), this.outlined ? this.renderOutline() : this.renderLabel(), this.renderLeadingIcon(), this.renderPrefix(), this.renderInput(shouldRenderHelperText), this.renderSuffix(), this.renderTrailingIcon(), this.renderLineRipple(), this.renderHelperText(shouldRenderHelperText, shouldRenderCharCounter));\n    }\n  }, {\n    key: \"updated\",\n    value: function updated(changedProperties) {\n      if (changedProperties.has('value') && changedProperties.get('value') !== undefined) {\n        this.mdcFoundation.setValue(this.value);\n        if (this.autoValidate) {\n          this.reportValidity();\n        }\n      }\n    }\n    /** @soyTemplate */\n  }, {\n    key: \"renderRipple\",\n    value: function renderRipple() {\n      return this.outlined ? '' : html(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n      <span class=\\\"mdc-text-field__ripple\\\"></span>\\n    \"])));\n    }\n    /** @soyTemplate */\n  }, {\n    key: \"renderOutline\",\n    value: function renderOutline() {\n      return !this.outlined ? '' : html(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n      <mwc-notched-outline\\n          .width=\", \"\\n          .open=\", \"\\n          class=\\\"mdc-notched-outline\\\">\\n        \", \"\\n      </mwc-notched-outline>\"])), this.outlineWidth, this.outlineOpen, this.renderLabel());\n    }\n    /** @soyTemplate */\n  }, {\n    key: \"renderLabel\",\n    value: function renderLabel() {\n      return !this.label ? '' : html(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n      <span\\n          .floatingLabelFoundation=\", \"\\n          id=\\\"label\\\">\", \"</span>\\n    \"])), floatingLabel(this.label), this.label);\n    }\n    /** @soyTemplate */\n  }, {\n    key: \"renderLeadingIcon\",\n    value: function renderLeadingIcon() {\n      return this.icon ? this.renderIcon(this.icon) : '';\n    }\n    /** @soyTemplate */\n  }, {\n    key: \"renderTrailingIcon\",\n    value: function renderTrailingIcon() {\n      return this.iconTrailing ? this.renderIcon(this.iconTrailing, true) : '';\n    }\n    /** @soyTemplate */\n  }, {\n    key: \"renderIcon\",\n    value: function renderIcon(icon) {\n      var isTrailingIcon = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      /** @classMap */\n      var classes = {\n        'mdc-text-field__icon--leading': !isTrailingIcon,\n        'mdc-text-field__icon--trailing': isTrailingIcon\n      };\n      return html(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"<i class=\\\"material-icons mdc-text-field__icon \", \"\\\">\", \"</i>\"])), classMap(classes), icon);\n    }\n    /** @soyTemplate */\n  }, {\n    key: \"renderPrefix\",\n    value: function renderPrefix() {\n      return this.prefix ? this.renderAffix(this.prefix) : '';\n    }\n    /** @soyTemplate */\n  }, {\n    key: \"renderSuffix\",\n    value: function renderSuffix() {\n      return this.suffix ? this.renderAffix(this.suffix, true) : '';\n    }\n    /** @soyTemplate */\n  }, {\n    key: \"renderAffix\",\n    value: function renderAffix(content) {\n      var isSuffix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      /** @classMap */\n      var classes = {\n        'mdc-text-field__affix--prefix': !isSuffix,\n        'mdc-text-field__affix--suffix': isSuffix\n      };\n      return html(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"<span class=\\\"mdc-text-field__affix \", \"\\\">\\n        \", \"</span>\"])), classMap(classes), content);\n    }\n    /** @soyTemplate */\n  }, {\n    key: \"renderInput\",\n    value: function renderInput(shouldRenderHelperText) {\n      var minOrUndef = this.minLength === -1 ? undefined : this.minLength;\n      var maxOrUndef = this.maxLength === -1 ? undefined : this.maxLength;\n      var autocapitalizeOrUndef = this.autocapitalize ? this.autocapitalize : undefined;\n      var showValidationMessage = this.validationMessage && !this.isUiValid;\n      var ariaLabelledbyOrUndef = !!this.label ? 'label' : undefined;\n      var ariaControlsOrUndef = shouldRenderHelperText ? 'helper-text' : undefined;\n      var ariaDescribedbyOrUndef = this.focused || this.helperPersistent || showValidationMessage ? 'helper-text' : undefined;\n      // TODO: live() directive needs casting for lit-analyzer\n      // https://github.com/runem/lit-analyzer/pull/91/files\n      // TODO: lit-analyzer labels min/max as (number|string) instead of string\n      return html(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral([\"\\n      <input\\n          aria-labelledby=\", \"\\n          aria-controls=\\\"\", \"\\\"\\n          aria-describedby=\\\"\", \"\\\"\\n          class=\\\"mdc-text-field__input\\\"\\n          type=\\\"\", \"\\\"\\n          .value=\\\"\", \"\\\"\\n          ?disabled=\\\"\", \"\\\"\\n          placeholder=\\\"\", \"\\\"\\n          ?required=\\\"\", \"\\\"\\n          ?readonly=\\\"\", \"\\\"\\n          minlength=\\\"\", \"\\\"\\n          maxlength=\\\"\", \"\\\"\\n          pattern=\\\"\", \"\\\"\\n          min=\\\"\", \"\\\"\\n          max=\\\"\", \"\\\"\\n          step=\\\"\", \"\\\"\\n          size=\\\"\", \"\\\"\\n          name=\\\"\", \"\\\"\\n          inputmode=\\\"\", \"\\\"\\n          autocapitalize=\\\"\", \"\\\"\\n          @input=\\\"\", \"\\\"\\n          @focus=\\\"\", \"\\\"\\n          @blur=\\\"\", \"\\\">\"])), ifDefined(ariaLabelledbyOrUndef), ifDefined(ariaControlsOrUndef), ifDefined(ariaDescribedbyOrUndef), this.type, live(this.value), this.disabled, this.placeholder, this.required, this.readOnly, ifDefined(minOrUndef), ifDefined(maxOrUndef), ifDefined(this.pattern ? this.pattern : undefined), ifDefined(this.min === '' ? undefined : this.min), ifDefined(this.max === '' ? undefined : this.max), ifDefined(this.step === null ? undefined : this.step), ifDefined(this.size === null ? undefined : this.size), ifDefined(this.name === '' ? undefined : this.name), ifDefined(this.inputMode), ifDefined(autocapitalizeOrUndef), this.handleInputChange, this.onInputFocus, this.onInputBlur);\n    }\n    /** @soyTemplate */\n  }, {\n    key: \"renderLineRipple\",\n    value: function renderLineRipple() {\n      return this.outlined ? '' : html(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral([\"\\n      <span .lineRippleFoundation=\", \"></span>\\n    \"])), lineRipple());\n    }\n    /** @soyTemplate */\n  }, {\n    key: \"renderHelperText\",\n    value: function renderHelperText(shouldRenderHelperText, shouldRenderCharCounter) {\n      var showValidationMessage = this.validationMessage && !this.isUiValid;\n      /** @classMap */\n      var classes = {\n        'mdc-text-field-helper-text--persistent': this.helperPersistent,\n        'mdc-text-field-helper-text--validation-msg': showValidationMessage\n      };\n      var ariaHiddenOrUndef = this.focused || this.helperPersistent || showValidationMessage ? undefined : 'true';\n      var helperText = showValidationMessage ? this.validationMessage : this.helper;\n      return !shouldRenderHelperText ? '' : html(_templateObject9 || (_templateObject9 = _taggedTemplateLiteral([\"\\n      <div class=\\\"mdc-text-field-helper-line\\\">\\n        <div id=\\\"helper-text\\\"\\n             aria-hidden=\\\"\", \"\\\"\\n             class=\\\"mdc-text-field-helper-text \", \"\\\"\\n             >\", \"</div>\\n        \", \"\\n      </div>\"])), ifDefined(ariaHiddenOrUndef), classMap(classes), helperText, this.renderCharCounter(shouldRenderCharCounter));\n    }\n    /** @soyTemplate */\n  }, {\n    key: \"renderCharCounter\",\n    value: function renderCharCounter(shouldRenderCharCounter) {\n      var length = Math.min(this.value.length, this.maxLength);\n      return !shouldRenderCharCounter ? '' : html(_templateObject10 || (_templateObject10 = _taggedTemplateLiteral([\"\\n      <span class=\\\"mdc-text-field-character-counter\\\"\\n            >\", \" / \", \"</span>\"])), length, this.maxLength);\n    }\n  }, {\n    key: \"onInputFocus\",\n    value: function onInputFocus() {\n      this.focused = true;\n    }\n  }, {\n    key: \"onInputBlur\",\n    value: function onInputBlur() {\n      this.focused = false;\n      this.reportValidity();\n    }\n  }, {\n    key: \"checkValidity\",\n    value: function checkValidity() {\n      var isValid = this._checkValidity(this.value);\n      if (!isValid) {\n        var invalidEvent = new Event('invalid', {\n          bubbles: false,\n          cancelable: true\n        });\n        this.dispatchEvent(invalidEvent);\n      }\n      return isValid;\n    }\n  }, {\n    key: \"reportValidity\",\n    value: function reportValidity() {\n      var isValid = this.checkValidity();\n      this.mdcFoundation.setValid(isValid);\n      this.isUiValid = isValid;\n      return isValid;\n    }\n  }, {\n    key: \"_checkValidity\",\n    value: function _checkValidity(value) {\n      var nativeValidity = this.formElement.validity;\n      var validity = createValidityObj(nativeValidity);\n      if (this.validityTransform) {\n        var customValidity = this.validityTransform(value, validity);\n        validity = Object.assign(Object.assign({}, validity), customValidity);\n        this.mdcFoundation.setUseNativeValidation(false);\n      } else {\n        this.mdcFoundation.setUseNativeValidation(true);\n      }\n      this._validity = validity;\n      return this._validity.valid;\n    }\n  }, {\n    key: \"setCustomValidity\",\n    value: function setCustomValidity(message) {\n      this.validationMessage = message;\n      this.formElement.setCustomValidity(message);\n    }\n  }, {\n    key: \"handleInputChange\",\n    value: function handleInputChange() {\n      this.value = this.formElement.value;\n    }\n  }, {\n    key: \"createAdapter\",\n    value: function createAdapter() {\n      return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, this.getRootAdapterMethods()), this.getInputAdapterMethods()), this.getLabelAdapterMethods()), this.getLineRippleAdapterMethods()), this.getOutlineAdapterMethods());\n    }\n  }, {\n    key: \"getRootAdapterMethods\",\n    value: function getRootAdapterMethods() {\n      var _this2 = this;\n      return Object.assign({\n        registerTextFieldInteractionHandler: function registerTextFieldInteractionHandler(evtType, handler) {\n          return _this2.addEventListener(evtType, handler);\n        },\n        deregisterTextFieldInteractionHandler: function deregisterTextFieldInteractionHandler(evtType, handler) {\n          return _this2.removeEventListener(evtType, handler);\n        },\n        registerValidationAttributeChangeHandler: function registerValidationAttributeChangeHandler(handler) {\n          var getAttributesList = function getAttributesList(mutationsList) {\n            return mutationsList.map(function (mutation) {\n              return mutation.attributeName;\n            }).filter(function (attributeName) {\n              return attributeName;\n            });\n          };\n          var observer = new MutationObserver(function (mutationsList) {\n            handler(getAttributesList(mutationsList));\n          });\n          var config = {\n            attributes: true\n          };\n          observer.observe(_this2.formElement, config);\n          return observer;\n        },\n        deregisterValidationAttributeChangeHandler: function deregisterValidationAttributeChangeHandler(observer) {\n          return observer.disconnect();\n        }\n      }, addHasRemoveClass(this.mdcRoot));\n    }\n  }, {\n    key: \"getInputAdapterMethods\",\n    value: function getInputAdapterMethods() {\n      var _this3 = this;\n      return {\n        getNativeInput: function getNativeInput() {\n          return _this3.formElement;\n        },\n        // since HelperTextFoundation is not used, aria-describedby a11y logic\n        // is implemented in render method instead of these adapter methods\n        setInputAttr: function setInputAttr() {\n          return undefined;\n        },\n        removeInputAttr: function removeInputAttr() {\n          return undefined;\n        },\n        isFocused: function isFocused() {\n          return _this3.shadowRoot ? _this3.shadowRoot.activeElement === _this3.formElement : false;\n        },\n        registerInputInteractionHandler: function registerInputInteractionHandler(evtType, handler) {\n          return _this3.formElement.addEventListener(evtType, handler, {\n            passive: evtType in passiveEvents\n          });\n        },\n        deregisterInputInteractionHandler: function deregisterInputInteractionHandler(evtType, handler) {\n          return _this3.formElement.removeEventListener(evtType, handler);\n        }\n      };\n    }\n  }, {\n    key: \"getLabelAdapterMethods\",\n    value: function getLabelAdapterMethods() {\n      var _this4 = this;\n      return {\n        floatLabel: function floatLabel(shouldFloat) {\n          return _this4.labelElement && _this4.labelElement.floatingLabelFoundation.float(shouldFloat);\n        },\n        getLabelWidth: function getLabelWidth() {\n          return _this4.labelElement ? _this4.labelElement.floatingLabelFoundation.getWidth() : 0;\n        },\n        hasLabel: function hasLabel() {\n          return Boolean(_this4.labelElement);\n        },\n        shakeLabel: function shakeLabel(shouldShake) {\n          return _this4.labelElement && _this4.labelElement.floatingLabelFoundation.shake(shouldShake);\n        },\n        setLabelRequired: function setLabelRequired(isRequired) {\n          if (_this4.labelElement) {\n            _this4.labelElement.floatingLabelFoundation.setRequired(isRequired);\n          }\n        }\n      };\n    }\n  }, {\n    key: \"getLineRippleAdapterMethods\",\n    value: function getLineRippleAdapterMethods() {\n      var _this5 = this;\n      return {\n        activateLineRipple: function activateLineRipple() {\n          if (_this5.lineRippleElement) {\n            _this5.lineRippleElement.lineRippleFoundation.activate();\n          }\n        },\n        deactivateLineRipple: function deactivateLineRipple() {\n          if (_this5.lineRippleElement) {\n            _this5.lineRippleElement.lineRippleFoundation.deactivate();\n          }\n        },\n        setLineRippleTransformOrigin: function setLineRippleTransformOrigin(normalizedX) {\n          if (_this5.lineRippleElement) {\n            _this5.lineRippleElement.lineRippleFoundation.setRippleCenter(normalizedX);\n          }\n        }\n      };\n    }\n    // tslint:disable:ban-ts-ignore\n  }, {\n    key: \"getUpdateComplete\",\n    value: function () {\n      var _getUpdateComplete = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _a, result;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _get(_getPrototypeOf(TextFieldBase.prototype), \"getUpdateComplete\", this).call(this);\n            case 2:\n              result = _context.sent;\n              _context.next = 5;\n              return (_a = this.outlineElement) === null || _a === void 0 ? void 0 : _a.updateComplete;\n            case 5:\n              return _context.abrupt(\"return\", result);\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function getUpdateComplete() {\n        return _getUpdateComplete.apply(this, arguments);\n      }\n      return getUpdateComplete;\n    }() // tslint:enable:ban-ts-ignore\n  }, {\n    key: \"firstUpdated\",\n    value: function firstUpdated() {\n      var _this6 = this;\n      var _a;\n      _get(_getPrototypeOf(TextFieldBase.prototype), \"firstUpdated\", this).call(this);\n      this.mdcFoundation.setValidateOnValueChange(this.autoValidate);\n      if (this.validateOnInitialRender) {\n        this.reportValidity();\n      }\n      // wait for the outline element to render to update the notch width\n      (_a = this.outlineElement) === null || _a === void 0 ? void 0 : _a.updateComplete.then(function () {\n        var _a;\n        // `foundation.notchOutline()` assumes the label isn't floating and\n        // multiplies by a constant, but the label is already is floating at this\n        // stage, therefore directly set the outline width to the label width\n        _this6.outlineWidth = ((_a = _this6.labelElement) === null || _a === void 0 ? void 0 : _a.floatingLabelFoundation.getWidth()) || 0;\n      });\n    }\n  }, {\n    key: \"getOutlineAdapterMethods\",\n    value: function getOutlineAdapterMethods() {\n      var _this7 = this;\n      return {\n        closeOutline: function closeOutline() {\n          return _this7.outlineElement && (_this7.outlineOpen = false);\n        },\n        hasOutline: function hasOutline() {\n          return Boolean(_this7.outlineElement);\n        },\n        notchOutline: function notchOutline(labelWidth) {\n          var outlineElement = _this7.outlineElement;\n          if (outlineElement && !_this7.outlineOpen) {\n            _this7.outlineWidth = labelWidth;\n            _this7.outlineOpen = true;\n          }\n        }\n      };\n    }\n  }, {\n    key: \"layout\",\n    value: function () {\n      var _layout = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var labelElement, shouldFloat, labelWidth;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return this.updateComplete;\n            case 2:\n              labelElement = this.labelElement;\n              if (labelElement) {\n                _context2.next = 6;\n                break;\n              }\n              this.outlineOpen = false;\n              return _context2.abrupt(\"return\");\n            case 6:\n              shouldFloat = !!this.label && !!this.value;\n              labelElement.floatingLabelFoundation.float(shouldFloat);\n              if (this.outlined) {\n                _context2.next = 10;\n                break;\n              }\n              return _context2.abrupt(\"return\");\n            case 10:\n              this.outlineOpen = shouldFloat;\n              _context2.next = 13;\n              return this.updateComplete;\n            case 13:\n              /* When the textfield automatically notches due to a value and label\n               * being defined, the textfield may be set to `display: none` by the user.\n               * this means that the notch is of size 0px. We provide this function so\n               * that the user may manually resize the notch to the floated label's\n               * width.\n               */\n              labelWidth = labelElement.floatingLabelFoundation.getWidth();\n              if (!this.outlineOpen) {\n                _context2.next = 18;\n                break;\n              }\n              this.outlineWidth = labelWidth;\n              _context2.next = 18;\n              return this.updateComplete;\n            case 18:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function layout() {\n        return _layout.apply(this, arguments);\n      }\n      return layout;\n    }()\n  }]);\n  return TextFieldBase;\n}(FormElement);\n__decorate([query('.mdc-text-field')], TextFieldBase.prototype, \"mdcRoot\", void 0);\n__decorate([query('input')], TextFieldBase.prototype, \"formElement\", void 0);\n__decorate([query('.mdc-floating-label')], TextFieldBase.prototype, \"labelElement\", void 0);\n__decorate([query('.mdc-line-ripple')], TextFieldBase.prototype, \"lineRippleElement\", void 0);\n__decorate([query('mwc-notched-outline')], TextFieldBase.prototype, \"outlineElement\", void 0);\n__decorate([query('.mdc-notched-outline__notch')], TextFieldBase.prototype, \"notchElement\", void 0);\n__decorate([property({\n  type: String\n})], TextFieldBase.prototype, \"value\", void 0);\n__decorate([property({\n  type: String\n})], TextFieldBase.prototype, \"type\", void 0);\n__decorate([property({\n  type: String\n})], TextFieldBase.prototype, \"placeholder\", void 0);\n__decorate([property({\n  type: String\n}), observer(function (_newVal, oldVal) {\n  if (oldVal !== undefined && this.label !== oldVal) {\n    this.layout();\n  }\n})], TextFieldBase.prototype, \"label\", void 0);\n__decorate([property({\n  type: String\n})], TextFieldBase.prototype, \"icon\", void 0);\n__decorate([property({\n  type: String\n})], TextFieldBase.prototype, \"iconTrailing\", void 0);\n__decorate([property({\n  type: Boolean,\n  reflect: true\n})], TextFieldBase.prototype, \"disabled\", void 0);\n__decorate([property({\n  type: Boolean\n})], TextFieldBase.prototype, \"required\", void 0);\n__decorate([property({\n  type: Number\n})], TextFieldBase.prototype, \"minLength\", void 0);\n__decorate([property({\n  type: Number\n})], TextFieldBase.prototype, \"maxLength\", void 0);\n__decorate([property({\n  type: Boolean,\n  reflect: true\n}), observer(function (_newVal, oldVal) {\n  if (oldVal !== undefined && this.outlined !== oldVal) {\n    this.layout();\n  }\n})], TextFieldBase.prototype, \"outlined\", void 0);\n__decorate([property({\n  type: String\n})], TextFieldBase.prototype, \"helper\", void 0);\n__decorate([property({\n  type: Boolean\n})], TextFieldBase.prototype, \"validateOnInitialRender\", void 0);\n__decorate([property({\n  type: String\n})], TextFieldBase.prototype, \"validationMessage\", void 0);\n__decorate([property({\n  type: Boolean\n})], TextFieldBase.prototype, \"autoValidate\", void 0);\n__decorate([property({\n  type: String\n})], TextFieldBase.prototype, \"pattern\", void 0);\n__decorate([property({\n  type: String\n})], TextFieldBase.prototype, \"min\", void 0);\n__decorate([property({\n  type: String\n})], TextFieldBase.prototype, \"max\", void 0);\n__decorate([property({\n  type: String\n})], TextFieldBase.prototype, \"step\", void 0);\n__decorate([property({\n  type: Number\n})], TextFieldBase.prototype, \"size\", void 0);\n__decorate([property({\n  type: Boolean\n})], TextFieldBase.prototype, \"helperPersistent\", void 0);\n__decorate([property({\n  type: Boolean\n})], TextFieldBase.prototype, \"charCounter\", void 0);\n__decorate([property({\n  type: Boolean\n})], TextFieldBase.prototype, \"endAligned\", void 0);\n__decorate([property({\n  type: String\n})], TextFieldBase.prototype, \"prefix\", void 0);\n__decorate([property({\n  type: String\n})], TextFieldBase.prototype, \"suffix\", void 0);\n__decorate([property({\n  type: String\n})], TextFieldBase.prototype, \"name\", void 0);\n__decorate([property({\n  type: String\n})], TextFieldBase.prototype, \"inputMode\", void 0);\n__decorate([property({\n  type: Boolean\n})], TextFieldBase.prototype, \"readOnly\", void 0);\n__decorate([property({\n  type: String\n})], TextFieldBase.prototype, \"autocapitalize\", void 0);\n__decorate([state()], TextFieldBase.prototype, \"outlineOpen\", void 0);\n__decorate([state()], TextFieldBase.prototype, \"outlineWidth\", void 0);\n__decorate([state()], TextFieldBase.prototype, \"isUiValid\", void 0);\n__decorate([state()], TextFieldBase.prototype, \"focused\", void 0);\n__decorate([eventOptions({\n  passive: true\n})], TextFieldBase.prototype, \"handleInputChange\", null);","map":{"version":3,"names":["addHasRemoveClass","FormElement","observer","floatingLabel","lineRipple","MDCTextFieldFoundation","html","eventOptions","property","query","state","classMap","ifDefined","live","passiveEvents","createValidityObj","customValidity","arguments","length","undefined","objectifiedCustomValidity","propName","Object","assign","badInput","customError","patternMismatch","rangeOverflow","rangeUnderflow","stepMismatch","tooLong","tooShort","typeMismatch","valid","valueMissing","TextFieldBase","_FormElement","_inherits","_this","_classCallCheck","mdcFoundationClass","value","type","placeholder","label","icon","iconTrailing","disabled","required","minLength","maxLength","outlined","helper","validateOnInitialRender","validationMessage","autoValidate","pattern","min","max","step","size","helperPersistent","charCounter","endAligned","prefix","suffix","name","readOnly","autocapitalize","outlineOpen","outlineWidth","isUiValid","focused","_validity","validityTransform","_createClass","key","get","_checkValidity","formElement","willValidate","selectionStart","selectionEnd","focus","focusEvt","CustomEvent","dispatchEvent","blur","blurEvt","select","setSelectionRange","selectionDirection","update","changedProperties","has","mdcFoundation","setValidateOnValueChange","concat","_get","_getPrototypeOf","prototype","call","setFormData","formData","append","render","shouldRenderCharCounter","shouldRenderHelperText","classes","_templateObject","_taggedTemplateLiteral","renderRipple","renderOutline","renderLabel","renderLeadingIcon","renderPrefix","renderInput","renderSuffix","renderTrailingIcon","renderLineRipple","renderHelperText","updated","setValue","reportValidity","_templateObject2","_templateObject3","_templateObject4","renderIcon","isTrailingIcon","_templateObject5","renderAffix","content","isSuffix","_templateObject6","minOrUndef","maxOrUndef","autocapitalizeOrUndef","showValidationMessage","ariaLabelledbyOrUndef","ariaControlsOrUndef","ariaDescribedbyOrUndef","_templateObject7","inputMode","handleInputChange","onInputFocus","onInputBlur","_templateObject8","ariaHiddenOrUndef","helperText","_templateObject9","renderCharCounter","Math","_templateObject10","checkValidity","isValid","invalidEvent","Event","bubbles","cancelable","setValid","nativeValidity","validity","setUseNativeValidation","setCustomValidity","message","createAdapter","getRootAdapterMethods","getInputAdapterMethods","getLabelAdapterMethods","getLineRippleAdapterMethods","getOutlineAdapterMethods","_this2","registerTextFieldInteractionHandler","evtType","handler","addEventListener","deregisterTextFieldInteractionHandler","removeEventListener","registerValidationAttributeChangeHandler","getAttributesList","mutationsList","map","mutation","attributeName","filter","MutationObserver","config","attributes","observe","deregisterValidationAttributeChangeHandler","disconnect","mdcRoot","_this3","getNativeInput","setInputAttr","removeInputAttr","isFocused","shadowRoot","activeElement","registerInputInteractionHandler","passive","deregisterInputInteractionHandler","_this4","floatLabel","shouldFloat","labelElement","floatingLabelFoundation","float","getLabelWidth","getWidth","hasLabel","Boolean","shakeLabel","shouldShake","shake","setLabelRequired","isRequired","setRequired","_this5","activateLineRipple","lineRippleElement","lineRippleFoundation","activate","deactivateLineRipple","deactivate","setLineRippleTransformOrigin","normalizedX","setRippleCenter","_getUpdateComplete","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_a","result","wrap","_callee$","_context","prev","next","sent","outlineElement","updateComplete","abrupt","stop","getUpdateComplete","apply","firstUpdated","_this6","then","_this7","closeOutline","hasOutline","notchOutline","labelWidth","_layout","_callee2","_callee2$","_context2","layout","__decorate","String","_newVal","oldVal","reflect","Number"],"sources":["mwc-textfield-base.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\n\nimport '@material/mwc-notched-outline/mwc-notched-outline.js';\n\nimport {MDCFloatingLabelFoundation} from '@material/floating-label/foundation.js';\nimport {MDCLineRippleFoundation} from '@material/line-ripple/foundation.js';\nimport {addHasRemoveClass, FormElement} from '@material/mwc-base/form-element.js';\nimport {observer} from '@material/mwc-base/observer.js';\nimport {floatingLabel, FloatingLabel} from '@material/mwc-floating-label/mwc-floating-label-directive.js';\nimport {lineRipple, LineRipple} from '@material/mwc-line-ripple/mwc-line-ripple-directive.js';\nimport {NotchedOutline} from '@material/mwc-notched-outline/mwc-notched-outline.js';\nimport {MDCTextFieldAdapter, MDCTextFieldInputAdapter, MDCTextFieldLabelAdapter, MDCTextFieldLineRippleAdapter, MDCTextFieldOutlineAdapter, MDCTextFieldRootAdapter} from '@material/textfield/adapter.js';\nimport MDCTextFieldFoundation from '@material/textfield/foundation.js';\nimport {html, PropertyValues, TemplateResult} from 'lit';\nimport {eventOptions, property, query, state} from 'lit/decorators.js';\nimport {classMap} from 'lit/directives/class-map.js';\nimport {ifDefined} from 'lit/directives/if-defined.js';\nimport {live} from 'lit/directives/live.js';\n\n// must be done to get past lit-analyzer checks\ndeclare global {\n  interface HTMLElement {\n    floatingLabelFoundation?: MDCFloatingLabelFoundation;\n    lineRippleFoundation?: MDCLineRippleFoundation;\n  }\n  interface Element {\n    floatingLabelFoundation?: MDCFloatingLabelFoundation;\n    lineRippleFoundation?: MDCLineRippleFoundation;\n  }\n}\n\ntype CustomValidityState = {\n  -readonly[P in keyof ValidityState]: ValidityState[P]\n};\n\n\nconst passiveEvents = ['touchstart', 'touchmove', 'scroll', 'mousewheel'];\n\nconst createValidityObj =\n    (customValidity: Partial<ValidityState> = {}): ValidityState => {\n      /*\n       * We need to make ValidityState an object because it is readonly and\n       * we cannot use the spread operator. Also, we don't export\n       * `CustomValidityState` because it is a leaky implementation and the user\n       * already has access to `ValidityState` in lib.dom.ts. Also an interface\n       * {a: Type} can be casted to {readonly a: Type} so passing any object\n       * should be fine.\n       */\n      const objectifiedCustomValidity: Partial<CustomValidityState> = {};\n\n      // eslint-disable-next-line guard-for-in\n      for (const propName in customValidity) {\n        /*\n         * Casting is needed because ValidityState's props are all readonly and\n         * thus cannot be set on `onjectifiedCustomValidity`. In the end, the\n         * interface is the same as ValidityState (but not readonly), but the\n         * function signature casts the output to ValidityState (thus readonly).\n         */\n        objectifiedCustomValidity[propName as keyof CustomValidityState] =\n            customValidity[propName as keyof ValidityState];\n      }\n\n      return {\n        badInput: false,\n        customError: false,\n        patternMismatch: false,\n        rangeOverflow: false,\n        rangeUnderflow: false,\n        stepMismatch: false,\n        tooLong: false,\n        tooShort: false,\n        typeMismatch: false,\n        valid: true,\n        valueMissing: false,\n        ...objectifiedCustomValidity\n      };\n    };\n\n/**\n * This is the enumerated typeof HTMLInputElement.type as declared by\n * lit-analyzer.\n */\nexport type TextFieldType = 'text'|'search'|'tel'|'url'|'email'|'password'|\n    'date'|'month'|'week'|'time'|'datetime-local'|'number'|'color';\n\n/**\n * This is the enumerated typeof HTMLInputElement.inputMode as declared by\n * lit-analyzer.\n */\nexport type TextFieldInputMode =\n    'verbatim'|'latin'|'latin-name'|'latin-prose'|'full-width-latin'|'kana'|\n    'kana-name'|'katakana'|'numeric'|'tel'|'email'|'url';\n\nexport type TextAreaCharCounter = 'external'|'internal';\n\n/** @soyCompatible */\nexport abstract class TextFieldBase extends FormElement {\n  protected mdcFoundation!: MDCTextFieldFoundation;\n\n  protected readonly mdcFoundationClass = MDCTextFieldFoundation;\n\n  @query('.mdc-text-field') protected mdcRoot!: HTMLElement;\n\n  @query('input') protected formElement!: HTMLInputElement;\n\n  @query('.mdc-floating-label') protected labelElement!: FloatingLabel|null;\n\n  @query('.mdc-line-ripple') protected lineRippleElement!: LineRipple|null;\n\n  @query('mwc-notched-outline') protected outlineElement!: NotchedOutline|null;\n\n  @query('.mdc-notched-outline__notch') protected notchElement!: HTMLElement;\n\n  @property({type: String}) value = '';\n\n  @property({type: String}) type: TextFieldType = 'text';\n\n  @property({type: String}) placeholder = '';\n\n  @property({type: String})\n  @observer(function(this: TextFieldBase, _newVal: string, oldVal: string) {\n    if (oldVal !== undefined && this.label !== oldVal) {\n      this.layout();\n    }\n  })\n  label = '';\n\n  @property({type: String}) icon = '';\n\n  @property({type: String}) iconTrailing = '';\n\n  @property({type: Boolean, reflect: true}) override disabled = false;\n\n  @property({type: Boolean}) required = false;\n\n  @property({type: Number}) minLength = -1;\n\n  @property({type: Number}) maxLength = -1;\n\n  @property({type: Boolean, reflect: true})\n  @observer(function(this: TextFieldBase, _newVal: boolean, oldVal: boolean) {\n    if (oldVal !== undefined && this.outlined !== oldVal) {\n      this.layout();\n    }\n  })\n  outlined = false;\n\n  @property({type: String}) helper = '';\n\n  @property({type: Boolean}) validateOnInitialRender = false;\n\n  @property({type: String}) validationMessage = '';\n\n  @property({type: Boolean}) autoValidate = false;\n\n  @property({type: String}) pattern = '';\n\n  @property({type: String}) min: number|string = '';\n\n  @property({type: String}) max: number|string = '';\n\n  /**\n   * step can be a number or the keyword \"any\".\n   *\n   * Use `String` typing to pass down the value as a string and let the native\n   * input cast internally as needed.\n   */\n  @property({type: String}) step: number|'any'|null = null;\n\n  @property({type: Number}) size: number|null = null;\n\n  @property({type: Boolean}) helperPersistent = false;\n\n  @property({type: Boolean}) charCounter: boolean|TextAreaCharCounter = false;\n\n  @property({type: Boolean}) endAligned = false;\n\n  @property({type: String}) override prefix = '';\n\n  @property({type: String}) suffix = '';\n\n  @property({type: String}) name = '';\n\n  // lit-analyzer requires specific string types, but TS does not compile since\n  // base class is unspecific \"string\". It also needs non-null coercion (!)\n  // since we don't want to provide a default value, but the base class is not\n  // typed to allow undefined.\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  @property({type: String}) override inputMode!: TextFieldInputMode;\n\n  @property({type: Boolean}) readOnly = false;\n\n  @property({type: String}) override autocapitalize = '';\n\n  @state() protected outlineOpen = false;\n  @state() protected outlineWidth = 0;\n  @state() protected isUiValid = true;\n  @state() protected focused = false;\n\n  protected _validity: ValidityState = createValidityObj();\n\n  get validity(): ValidityState {\n    this._checkValidity(this.value);\n\n    return this._validity;\n  }\n\n  get willValidate(): boolean {\n    return this.formElement.willValidate;\n  }\n\n  get selectionStart(): number|null {\n    return this.formElement.selectionStart;\n  }\n\n  get selectionEnd(): number|null {\n    return this.formElement.selectionEnd;\n  }\n\n  validityTransform:\n      ((value: string,\n        nativeValidity: ValidityState) => Partial<ValidityState>)|null = null;\n\n  override focus() {\n    const focusEvt = new CustomEvent('focus');\n    this.formElement.dispatchEvent(focusEvt);\n    this.formElement.focus();\n  }\n\n  override blur() {\n    const blurEvt = new CustomEvent('blur');\n    this.formElement.dispatchEvent(blurEvt);\n    this.formElement.blur();\n  }\n\n  select() {\n    this.formElement.select();\n  }\n\n  setSelectionRange(\n      selectionStart: number, selectionEnd: number,\n      selectionDirection?: 'forward'|'backward'|'none') {\n    this.formElement.setSelectionRange(\n        selectionStart, selectionEnd, selectionDirection);\n  }\n\n  override update(changedProperties: PropertyValues) {\n    if (changedProperties.has('autoValidate') && this.mdcFoundation) {\n      this.mdcFoundation.setValidateOnValueChange(this.autoValidate);\n    }\n\n    if (changedProperties.has('value') && typeof this.value !== 'string') {\n      this.value = `${this.value}`;\n    }\n\n    super.update(changedProperties);\n  }\n\n  protected setFormData(formData: FormData) {\n    if (this.name) {\n      formData.append(this.name, this.value);\n    }\n  }\n\n  /** @soyTemplate */\n  override render(): TemplateResult {\n    const shouldRenderCharCounter = this.charCounter && this.maxLength !== -1;\n    const shouldRenderHelperText =\n        !!this.helper || !!this.validationMessage || shouldRenderCharCounter;\n\n    /** @classMap */\n    const classes = {\n      'mdc-text-field--disabled': this.disabled,\n      'mdc-text-field--no-label': !this.label,\n      'mdc-text-field--filled': !this.outlined,\n      'mdc-text-field--outlined': this.outlined,\n      'mdc-text-field--with-leading-icon': this.icon,\n      'mdc-text-field--with-trailing-icon': this.iconTrailing,\n      'mdc-text-field--end-aligned': this.endAligned,\n    };\n\n    return html`\n      <label class=\"mdc-text-field ${classMap(classes)}\">\n        ${this.renderRipple()}\n        ${this.outlined ? this.renderOutline() : this.renderLabel()}\n        ${this.renderLeadingIcon()}\n        ${this.renderPrefix()}\n        ${this.renderInput(shouldRenderHelperText)}\n        ${this.renderSuffix()}\n        ${this.renderTrailingIcon()}\n        ${this.renderLineRipple()}\n      </label>\n      ${this.renderHelperText(shouldRenderHelperText, shouldRenderCharCounter)}\n    `;\n  }\n\n  override updated(changedProperties: PropertyValues) {\n    if (changedProperties.has('value') &&\n        changedProperties.get('value') !== undefined) {\n      this.mdcFoundation.setValue(this.value);\n\n      if (this.autoValidate) {\n        this.reportValidity();\n      }\n    }\n  }\n\n  /** @soyTemplate */\n  protected renderRipple(): TemplateResult|string {\n    return this.outlined ? '' : html`\n      <span class=\"mdc-text-field__ripple\"></span>\n    `;\n  }\n\n  /** @soyTemplate */\n  protected renderOutline(): TemplateResult|string {\n    return !this.outlined ? '' : html`\n      <mwc-notched-outline\n          .width=${this.outlineWidth}\n          .open=${this.outlineOpen}\n          class=\"mdc-notched-outline\">\n        ${this.renderLabel()}\n      </mwc-notched-outline>`;\n  }\n\n  /** @soyTemplate */\n  protected renderLabel(): TemplateResult|string {\n    return !this.label ?\n        '' :\n        html`\n      <span\n          .floatingLabelFoundation=${\n            floatingLabel(this.label) as unknown as MDCFloatingLabelFoundation}\n          id=\"label\">${this.label}</span>\n    `;\n  }\n\n  /** @soyTemplate */\n  protected renderLeadingIcon(): TemplateResult|string {\n    return this.icon ? this.renderIcon(this.icon) : '';\n  }\n\n  /** @soyTemplate */\n  protected renderTrailingIcon(): TemplateResult|string {\n    return this.iconTrailing ? this.renderIcon(this.iconTrailing, true) : '';\n  }\n\n  /** @soyTemplate */\n  protected renderIcon(icon: string, isTrailingIcon: boolean = false):\n      TemplateResult {\n    /** @classMap */\n    const classes = {\n      'mdc-text-field__icon--leading': !isTrailingIcon,\n      'mdc-text-field__icon--trailing': isTrailingIcon\n    };\n\n    return html`<i class=\"material-icons mdc-text-field__icon ${\n        classMap(classes)}\">${icon}</i>`;\n  }\n\n  /** @soyTemplate */\n  protected renderPrefix(): TemplateResult|string {\n    return this.prefix ? this.renderAffix(this.prefix) : '';\n  }\n\n  /** @soyTemplate */\n  protected renderSuffix(): TemplateResult|string {\n    return this.suffix ? this.renderAffix(this.suffix, true) : '';\n  }\n\n  /** @soyTemplate */\n  protected renderAffix(content: string, isSuffix: boolean = false):\n      TemplateResult|string {\n    /** @classMap */\n    const classes = {\n      'mdc-text-field__affix--prefix': !isSuffix,\n      'mdc-text-field__affix--suffix': isSuffix\n    };\n\n    return html`<span class=\"mdc-text-field__affix ${classMap(classes)}\">\n        ${content}</span>`;\n  }\n\n  /** @soyTemplate */\n  protected renderInput(shouldRenderHelperText: boolean): TemplateResult {\n    const minOrUndef = this.minLength === -1 ? undefined : this.minLength;\n    const maxOrUndef = this.maxLength === -1 ? undefined : this.maxLength;\n    const autocapitalizeOrUndef = this.autocapitalize ?\n        this.autocapitalize as (\n            'off' | 'none' | 'on' | 'sentences' | 'words' | 'characters') :\n        undefined;\n    const showValidationMessage = this.validationMessage && !this.isUiValid;\n    const ariaLabelledbyOrUndef = !!this.label ? 'label' : undefined;\n    const ariaControlsOrUndef =\n        shouldRenderHelperText ? 'helper-text' : undefined;\n    const ariaDescribedbyOrUndef =\n        this.focused || this.helperPersistent || showValidationMessage ?\n        'helper-text' :\n        undefined;\n    // TODO: live() directive needs casting for lit-analyzer\n    // https://github.com/runem/lit-analyzer/pull/91/files\n    // TODO: lit-analyzer labels min/max as (number|string) instead of string\n    return html`\n      <input\n          aria-labelledby=${ifDefined(ariaLabelledbyOrUndef)}\n          aria-controls=\"${ifDefined(ariaControlsOrUndef)}\"\n          aria-describedby=\"${ifDefined(ariaDescribedbyOrUndef)}\"\n          class=\"mdc-text-field__input\"\n          type=\"${this.type}\"\n          .value=\"${live(this.value) as unknown as string}\"\n          ?disabled=\"${this.disabled}\"\n          placeholder=\"${this.placeholder}\"\n          ?required=\"${this.required}\"\n          ?readonly=\"${this.readOnly}\"\n          minlength=\"${ifDefined(minOrUndef)}\"\n          maxlength=\"${ifDefined(maxOrUndef)}\"\n          pattern=\"${ifDefined(this.pattern ? this.pattern : undefined)}\"\n          min=\"${ifDefined(this.min === '' ? undefined : this.min as number)}\"\n          max=\"${ifDefined(this.max === '' ? undefined : this.max as number)}\"\n          step=\"${\n        ifDefined(this.step === null ? undefined : this.step as number)}\"\n          size=\"${ifDefined(this.size === null ? undefined : this.size)}\"\n          name=\"${ifDefined(this.name === '' ? undefined : this.name)}\"\n          inputmode=\"${ifDefined(this.inputMode)}\"\n          autocapitalize=\"${ifDefined(autocapitalizeOrUndef)}\"\n          @input=\"${this.handleInputChange}\"\n          @focus=\"${this.onInputFocus}\"\n          @blur=\"${this.onInputBlur}\">`;\n  }\n\n  /** @soyTemplate */\n  protected renderLineRipple(): TemplateResult|string {\n    return this.outlined ?\n        '' :\n        html`\n      <span .lineRippleFoundation=${\n            lineRipple() as unknown as MDCLineRippleFoundation}></span>\n    `;\n  }\n\n  /** @soyTemplate */\n  protected renderHelperText(\n      shouldRenderHelperText: boolean,\n      shouldRenderCharCounter: boolean): TemplateResult|string {\n    const showValidationMessage = this.validationMessage && !this.isUiValid;\n    /** @classMap */\n    const classes = {\n      'mdc-text-field-helper-text--persistent': this.helperPersistent,\n      'mdc-text-field-helper-text--validation-msg': showValidationMessage,\n    };\n\n    const ariaHiddenOrUndef =\n        this.focused || this.helperPersistent || showValidationMessage ?\n        undefined :\n        'true';\n    const helperText =\n        showValidationMessage ? this.validationMessage : this.helper;\n    return !shouldRenderHelperText ? '' : html`\n      <div class=\"mdc-text-field-helper-line\">\n        <div id=\"helper-text\"\n             aria-hidden=\"${ifDefined(ariaHiddenOrUndef)}\"\n             class=\"mdc-text-field-helper-text ${classMap(classes)}\"\n             >${helperText}</div>\n        ${this.renderCharCounter(shouldRenderCharCounter)}\n      </div>`;\n  }\n\n  /** @soyTemplate */\n  protected renderCharCounter(shouldRenderCharCounter: boolean): TemplateResult\n      |string {\n    const length = Math.min(this.value.length, this.maxLength);\n    return !shouldRenderCharCounter ? '' : html`\n      <span class=\"mdc-text-field-character-counter\"\n            >${length} / ${this.maxLength}</span>`;\n  }\n\n  protected onInputFocus() {\n    this.focused = true;\n  }\n\n  protected onInputBlur() {\n    this.focused = false;\n    this.reportValidity();\n  }\n\n  checkValidity(): boolean {\n    const isValid = this._checkValidity(this.value);\n\n    if (!isValid) {\n      const invalidEvent =\n          new Event('invalid', {bubbles: false, cancelable: true});\n      this.dispatchEvent(invalidEvent);\n    }\n\n    return isValid;\n  }\n\n  reportValidity(): boolean {\n    const isValid = this.checkValidity();\n\n    this.mdcFoundation.setValid(isValid);\n    this.isUiValid = isValid;\n\n    return isValid;\n  }\n\n  protected _checkValidity(value: string) {\n    const nativeValidity = this.formElement.validity;\n\n    let validity = createValidityObj(nativeValidity);\n\n    if (this.validityTransform) {\n      const customValidity = this.validityTransform(value, validity);\n      validity = {...validity, ...customValidity};\n      this.mdcFoundation.setUseNativeValidation(false);\n    } else {\n      this.mdcFoundation.setUseNativeValidation(true);\n    }\n\n    this._validity = validity;\n\n    return this._validity.valid;\n  }\n\n  setCustomValidity(message: string) {\n    this.validationMessage = message;\n    this.formElement.setCustomValidity(message);\n  }\n\n  @eventOptions({passive: true})\n  protected handleInputChange() {\n    this.value = this.formElement.value;\n  }\n\n\n  protected createAdapter(): MDCTextFieldAdapter {\n    return {\n      ...this.getRootAdapterMethods(),\n      ...this.getInputAdapterMethods(),\n      ...this.getLabelAdapterMethods(),\n      ...this.getLineRippleAdapterMethods(),\n      ...this.getOutlineAdapterMethods(),\n    };\n  }\n\n  protected getRootAdapterMethods(): MDCTextFieldRootAdapter {\n    return {\n      registerTextFieldInteractionHandler: (evtType, handler) =>\n          this.addEventListener(evtType, handler),\n      deregisterTextFieldInteractionHandler: (evtType, handler) =>\n          this.removeEventListener(evtType, handler),\n      registerValidationAttributeChangeHandler: (handler) => {\n        const getAttributesList =\n            (mutationsList: MutationRecord[]): string[] => {\n              return mutationsList.map((mutation) => mutation.attributeName)\n                         .filter((attributeName) => attributeName) as string[];\n            };\n        const observer = new MutationObserver((mutationsList) => {\n          handler(getAttributesList(mutationsList));\n        });\n        const config = {attributes: true};\n        observer.observe(this.formElement, config);\n        return observer;\n      },\n      deregisterValidationAttributeChangeHandler:\n          (observer: MutationObserver) => observer.disconnect(),\n      ...addHasRemoveClass(this.mdcRoot),\n    };\n  }\n\n  protected getInputAdapterMethods(): MDCTextFieldInputAdapter {\n    return {\n      getNativeInput: () => this.formElement,\n      // since HelperTextFoundation is not used, aria-describedby a11y logic\n      // is implemented in render method instead of these adapter methods\n      setInputAttr: () => undefined,\n      removeInputAttr: () => undefined,\n      isFocused: () => this.shadowRoot ?\n          this.shadowRoot.activeElement === this.formElement :\n          false,\n      registerInputInteractionHandler: (evtType, handler) =>\n          this.formElement.addEventListener(\n              evtType, handler, {passive: evtType in passiveEvents}),\n      deregisterInputInteractionHandler: (evtType, handler) =>\n          this.formElement.removeEventListener(evtType, handler),\n    };\n  }\n\n  protected getLabelAdapterMethods(): MDCTextFieldLabelAdapter {\n    return {\n      floatLabel: (shouldFloat: boolean) => this.labelElement &&\n          this.labelElement.floatingLabelFoundation.float(shouldFloat),\n      getLabelWidth: () => {\n        return this.labelElement ?\n            this.labelElement.floatingLabelFoundation.getWidth() :\n            0;\n      },\n      hasLabel: () => Boolean(this.labelElement),\n      shakeLabel: (shouldShake: boolean) => this.labelElement &&\n          this.labelElement.floatingLabelFoundation.shake(shouldShake),\n      setLabelRequired: (isRequired: boolean) => {\n        if (this.labelElement) {\n          this.labelElement.floatingLabelFoundation.setRequired(isRequired);\n        }\n      },\n    };\n  }\n\n  protected getLineRippleAdapterMethods(): MDCTextFieldLineRippleAdapter {\n    return {\n      activateLineRipple: () => {\n        if (this.lineRippleElement) {\n          this.lineRippleElement.lineRippleFoundation.activate();\n        }\n      },\n      deactivateLineRipple: () => {\n        if (this.lineRippleElement) {\n          this.lineRippleElement.lineRippleFoundation.deactivate();\n        }\n      },\n      setLineRippleTransformOrigin: (normalizedX: number) => {\n        if (this.lineRippleElement) {\n          this.lineRippleElement.lineRippleFoundation.setRippleCenter(\n              normalizedX);\n        }\n      },\n    };\n  }\n\n  // tslint:disable:ban-ts-ignore\n  protected override async getUpdateComplete() {\n    // @ts-ignore\n    const result = await super.getUpdateComplete();\n    await this.outlineElement?.updateComplete;\n    return result;\n  }\n  // tslint:enable:ban-ts-ignore\n\n  override firstUpdated() {\n    super.firstUpdated();\n\n    this.mdcFoundation.setValidateOnValueChange(this.autoValidate);\n\n    if (this.validateOnInitialRender) {\n      this.reportValidity();\n    }\n\n    // wait for the outline element to render to update the notch width\n    this.outlineElement?.updateComplete.then(() => {\n      // `foundation.notchOutline()` assumes the label isn't floating and\n      // multiplies by a constant, but the label is already is floating at this\n      // stage, therefore directly set the outline width to the label width\n      this.outlineWidth =\n          this.labelElement?.floatingLabelFoundation.getWidth() || 0;\n    });\n  }\n\n  protected getOutlineAdapterMethods(): MDCTextFieldOutlineAdapter {\n    return {\n      closeOutline: () => this.outlineElement && (this.outlineOpen = false),\n      hasOutline: () => Boolean(this.outlineElement),\n      notchOutline: (labelWidth) => {\n        const outlineElement = this.outlineElement;\n        if (outlineElement && !this.outlineOpen) {\n          this.outlineWidth = labelWidth;\n          this.outlineOpen = true;\n        }\n      }\n    };\n  }\n\n  async layout() {\n    await this.updateComplete;\n\n    const labelElement = this.labelElement;\n\n    if (!labelElement) {\n      this.outlineOpen = false;\n      return;\n    }\n\n    const shouldFloat = !!this.label && !!this.value;\n    labelElement.floatingLabelFoundation.float(shouldFloat);\n\n    if (!this.outlined) {\n      return;\n    }\n\n    this.outlineOpen = shouldFloat;\n    await this.updateComplete;\n\n    /* When the textfield automatically notches due to a value and label\n     * being defined, the textfield may be set to `display: none` by the user.\n     * this means that the notch is of size 0px. We provide this function so\n     * that the user may manually resize the notch to the floated label's\n     * width.\n     */\n    const labelWidth = labelElement.floatingLabelFoundation.getWidth();\n    if (this.outlineOpen) {\n      this.outlineWidth = labelWidth;\n      await this.updateComplete;\n    }\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;;;;;AAMA;AACA;AAEA,OAAO,sDAAsD;AAI7D,SAAQA,iBAAiB,EAAEC,WAAW,QAAO,oCAAoC;AACjF,SAAQC,QAAQ,QAAO,gCAAgC;AACvD,SAAQC,aAAa,QAAsB,8DAA8D;AACzG,SAAQC,UAAU,QAAmB,wDAAwD;AAG7F,OAAOC,sBAAsB,MAAM,mCAAmC;AACtE,SAAQC,IAAI,QAAuC,KAAK;AACxD,SAAQC,YAAY,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,KAAK,QAAO,mBAAmB;AACtE,SAAQC,QAAQ,QAAO,6BAA6B;AACpD,SAAQC,SAAS,QAAO,8BAA8B;AACtD,SAAQC,IAAI,QAAO,wBAAwB;AAmB3C,IAAMC,aAAa,GAAG,CAAC,YAAY,EAAE,WAAW,EAAE,QAAQ,EAAE,YAAY,CAAC;AAEzE,IAAMC,iBAAiB,GACnB,SADEA,iBAAiBA,CAAA,EAC4C;EAAA,IAA9DC,cAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAyC,EAAE;EAC1C;;;;;;;;EAQA,IAAMG,yBAAyB,GAAiC,EAAE;EAElE;EACA,KAAK,IAAMC,QAAQ,IAAIL,cAAc,EAAE;IACrC;;;;;;IAMAI,yBAAyB,CAACC,QAAqC,CAAC,GAC5DL,cAAc,CAACK,QAA+B,CAAC;;EAGrD,OAAAC,MAAA,CAAAC,MAAA;IACEC,QAAQ,EAAE,KAAK;IACfC,WAAW,EAAE,KAAK;IAClBC,eAAe,EAAE,KAAK;IACtBC,aAAa,EAAE,KAAK;IACpBC,cAAc,EAAE,KAAK;IACrBC,YAAY,EAAE,KAAK;IACnBC,OAAO,EAAE,KAAK;IACdC,QAAQ,EAAE,KAAK;IACfC,YAAY,EAAE,KAAK;IACnBC,KAAK,EAAE,IAAI;IACXC,YAAY,EAAE;EAAK,GAChBd,yBAAyB;AAEhC,CAAC;AAmBL;AACA,WAAsBe,aAAc,0BAAAC,YAAA;EAAAC,SAAA,CAAAF,aAAA,EAAAC,YAAA;EAApC,SAAAD,cAAA;IAAA,IAAAG,KAAA;IAAAC,eAAA,OAAAJ,aAAA;;IAGqBG,KAAA,CAAAE,kBAAkB,GAAGnC,sBAAsB;IAcpCiC,KAAA,CAAAG,KAAK,GAAG,EAAE;IAEVH,KAAA,CAAAI,IAAI,GAAkB,MAAM;IAE5BJ,KAAA,CAAAK,WAAW,GAAG,EAAE;IAQ1CL,KAAA,CAAAM,KAAK,GAAG,EAAE;IAEgBN,KAAA,CAAAO,IAAI,GAAG,EAAE;IAETP,KAAA,CAAAQ,YAAY,GAAG,EAAE;IAEQR,KAAA,CAAAS,QAAQ,GAAG,KAAK;IAExCT,KAAA,CAAAU,QAAQ,GAAG,KAAK;IAEjBV,KAAA,CAAAW,SAAS,GAAG,CAAC,CAAC;IAEdX,KAAA,CAAAY,SAAS,GAAG,CAAC,CAAC;IAQxCZ,KAAA,CAAAa,QAAQ,GAAG,KAAK;IAEUb,KAAA,CAAAc,MAAM,GAAG,EAAE;IAEVd,KAAA,CAAAe,uBAAuB,GAAG,KAAK;IAEhCf,KAAA,CAAAgB,iBAAiB,GAAG,EAAE;IAErBhB,KAAA,CAAAiB,YAAY,GAAG,KAAK;IAErBjB,KAAA,CAAAkB,OAAO,GAAG,EAAE;IAEZlB,KAAA,CAAAmB,GAAG,GAAkB,EAAE;IAEvBnB,KAAA,CAAAoB,GAAG,GAAkB,EAAE;IAEjD;;;;;;IAM0BpB,KAAA,CAAAqB,IAAI,GAAsB,IAAI;IAE9BrB,KAAA,CAAAsB,IAAI,GAAgB,IAAI;IAEvBtB,KAAA,CAAAuB,gBAAgB,GAAG,KAAK;IAExBvB,KAAA,CAAAwB,WAAW,GAAgC,KAAK;IAEhDxB,KAAA,CAAAyB,UAAU,GAAG,KAAK;IAEVzB,KAAA,CAAA0B,MAAM,GAAG,EAAE;IAEpB1B,KAAA,CAAA2B,MAAM,GAAG,EAAE;IAEX3B,KAAA,CAAA4B,IAAI,GAAG,EAAE;IAUR5B,KAAA,CAAA6B,QAAQ,GAAG,KAAK;IAER7B,KAAA,CAAA8B,cAAc,GAAG,EAAE;IAEnC9B,KAAA,CAAA+B,WAAW,GAAG,KAAK;IACnB/B,KAAA,CAAAgC,YAAY,GAAG,CAAC;IAChBhC,KAAA,CAAAiC,SAAS,GAAG,IAAI;IAChBjC,KAAA,CAAAkC,OAAO,GAAG,KAAK;IAExBlC,KAAA,CAAAmC,SAAS,GAAkB1D,iBAAiB,EAAE;IAoBxDuB,KAAA,CAAAoC,iBAAiB,GAEsD,IAAI;IAAC,OAAApC,KAAA;EAke9E;EAACqC,YAAA,CAAAxC,aAAA;IAAAyC,GAAA;IAAAC,GAAA,EAtfC,SAAAA,IAAA,EAAY;MACV,IAAI,CAACC,cAAc,CAAC,IAAI,CAACrC,KAAK,CAAC;MAE/B,OAAO,IAAI,CAACgC,SAAS;IACvB;EAAC;IAAAG,GAAA;IAAAC,GAAA,EAED,SAAAA,IAAA,EAAgB;MACd,OAAO,IAAI,CAACE,WAAW,CAACC,YAAY;IACtC;EAAC;IAAAJ,GAAA;IAAAC,GAAA,EAED,SAAAA,IAAA,EAAkB;MAChB,OAAO,IAAI,CAACE,WAAW,CAACE,cAAc;IACxC;EAAC;IAAAL,GAAA;IAAAC,GAAA,EAED,SAAAA,IAAA,EAAgB;MACd,OAAO,IAAI,CAACE,WAAW,CAACG,YAAY;IACtC;EAAC;IAAAN,GAAA;IAAAnC,KAAA,EAMQ,SAAA0C,MAAA,EAAK;MACZ,IAAMC,QAAQ,GAAG,IAAIC,WAAW,CAAC,OAAO,CAAC;MACzC,IAAI,CAACN,WAAW,CAACO,aAAa,CAACF,QAAQ,CAAC;MACxC,IAAI,CAACL,WAAW,CAACI,KAAK,EAAE;IAC1B;EAAC;IAAAP,GAAA;IAAAnC,KAAA,EAEQ,SAAA8C,KAAA,EAAI;MACX,IAAMC,OAAO,GAAG,IAAIH,WAAW,CAAC,MAAM,CAAC;MACvC,IAAI,CAACN,WAAW,CAACO,aAAa,CAACE,OAAO,CAAC;MACvC,IAAI,CAACT,WAAW,CAACQ,IAAI,EAAE;IACzB;EAAC;IAAAX,GAAA;IAAAnC,KAAA,EAED,SAAAgD,OAAA,EAAM;MACJ,IAAI,CAACV,WAAW,CAACU,MAAM,EAAE;IAC3B;EAAC;IAAAb,GAAA;IAAAnC,KAAA,EAED,SAAAiD,kBACIT,cAAsB,EAAEC,YAAoB,EAC5CS,kBAAgD;MAClD,IAAI,CAACZ,WAAW,CAACW,iBAAiB,CAC9BT,cAAc,EAAEC,YAAY,EAAES,kBAAkB,CAAC;IACvD;EAAC;IAAAf,GAAA;IAAAnC,KAAA,EAEQ,SAAAmD,OAAOC,iBAAiC;MAC/C,IAAIA,iBAAiB,CAACC,GAAG,CAAC,cAAc,CAAC,IAAI,IAAI,CAACC,aAAa,EAAE;QAC/D,IAAI,CAACA,aAAa,CAACC,wBAAwB,CAAC,IAAI,CAACzC,YAAY,CAAC;;MAGhE,IAAIsC,iBAAiB,CAACC,GAAG,CAAC,OAAO,CAAC,IAAI,OAAO,IAAI,CAACrD,KAAK,KAAK,QAAQ,EAAE;QACpE,IAAI,CAACA,KAAK,MAAAwD,MAAA,CAAM,IAAI,CAACxD,KAAK,CAAE;;MAG9ByD,IAAA,CAAAC,eAAA,CAAAhE,aAAA,CAAAiE,SAAA,mBAAAC,IAAA,OAAaR,iBAAiB;IAChC;EAAC;IAAAjB,GAAA;IAAAnC,KAAA,EAES,SAAA6D,YAAYC,QAAkB;MACtC,IAAI,IAAI,CAACrC,IAAI,EAAE;QACbqC,QAAQ,CAACC,MAAM,CAAC,IAAI,CAACtC,IAAI,EAAE,IAAI,CAACzB,KAAK,CAAC;;IAE1C;IAEA;EAAA;IAAAmC,GAAA;IAAAnC,KAAA,EACS,SAAAgE,OAAA,EAAM;MACb,IAAMC,uBAAuB,GAAG,IAAI,CAAC5C,WAAW,IAAI,IAAI,CAACZ,SAAS,KAAK,CAAC,CAAC;MACzE,IAAMyD,sBAAsB,GACxB,CAAC,CAAC,IAAI,CAACvD,MAAM,IAAI,CAAC,CAAC,IAAI,CAACE,iBAAiB,IAAIoD,uBAAuB;MAExE;MACA,IAAME,OAAO,GAAG;QACd,0BAA0B,EAAE,IAAI,CAAC7D,QAAQ;QACzC,0BAA0B,EAAE,CAAC,IAAI,CAACH,KAAK;QACvC,wBAAwB,EAAE,CAAC,IAAI,CAACO,QAAQ;QACxC,0BAA0B,EAAE,IAAI,CAACA,QAAQ;QACzC,mCAAmC,EAAE,IAAI,CAACN,IAAI;QAC9C,oCAAoC,EAAE,IAAI,CAACC,YAAY;QACvD,6BAA6B,EAAE,IAAI,CAACiB;OACrC;MAED,OAAOzD,IAAI,CAAAuG,eAAA,KAAAA,eAAA,GAAAC,sBAAA,wMACsBnG,QAAQ,CAACiG,OAAO,CAAC,EAC5C,IAAI,CAACG,YAAY,EAAE,EACnB,IAAI,CAAC5D,QAAQ,GAAG,IAAI,CAAC6D,aAAa,EAAE,GAAG,IAAI,CAACC,WAAW,EAAE,EACzD,IAAI,CAACC,iBAAiB,EAAE,EACxB,IAAI,CAACC,YAAY,EAAE,EACnB,IAAI,CAACC,WAAW,CAACT,sBAAsB,CAAC,EACxC,IAAI,CAACU,YAAY,EAAE,EACnB,IAAI,CAACC,kBAAkB,EAAE,EACzB,IAAI,CAACC,gBAAgB,EAAE,EAEzB,IAAI,CAACC,gBAAgB,CAACb,sBAAsB,EAAED,uBAAuB,CAAC;IAE5E;EAAC;IAAA9B,GAAA;IAAAnC,KAAA,EAEQ,SAAAgF,QAAQ5B,iBAAiC;MAChD,IAAIA,iBAAiB,CAACC,GAAG,CAAC,OAAO,CAAC,IAC9BD,iBAAiB,CAAChB,GAAG,CAAC,OAAO,CAAC,KAAK1D,SAAS,EAAE;QAChD,IAAI,CAAC4E,aAAa,CAAC2B,QAAQ,CAAC,IAAI,CAACjF,KAAK,CAAC;QAEvC,IAAI,IAAI,CAACc,YAAY,EAAE;UACrB,IAAI,CAACoE,cAAc,EAAE;;;IAG3B;IAEA;EAAA;IAAA/C,GAAA;IAAAnC,KAAA,EACU,SAAAsE,aAAA,EAAY;MACpB,OAAO,IAAI,CAAC5D,QAAQ,GAAG,EAAE,GAAG7C,IAAI,CAAAsH,gBAAA,KAAAA,gBAAA,GAAAd,sBAAA,oEAE/B;IACH;IAEA;EAAA;IAAAlC,GAAA;IAAAnC,KAAA,EACU,SAAAuE,cAAA,EAAa;MACrB,OAAO,CAAC,IAAI,CAAC7D,QAAQ,GAAG,EAAE,GAAG7C,IAAI,CAAAuH,gBAAA,KAAAA,gBAAA,GAAAf,sBAAA,wKAElB,IAAI,CAACxC,YAAY,EAClB,IAAI,CAACD,WAAW,EAExB,IAAI,CAAC4C,WAAW,EAAE,CACC;IAC3B;IAEA;EAAA;IAAArC,GAAA;IAAAnC,KAAA,EACU,SAAAwE,YAAA,EAAW;MACnB,OAAO,CAAC,IAAI,CAACrE,KAAK,GACd,EAAE,GACFtC,IAAI,CAAAwH,gBAAA,KAAAA,gBAAA,GAAAhB,sBAAA,yGAGA3G,aAAa,CAAC,IAAI,CAACyC,KAAK,CAA0C,EACvD,IAAI,CAACA,KAAK,CAC5B;IACH;IAEA;EAAA;IAAAgC,GAAA;IAAAnC,KAAA,EACU,SAAAyE,kBAAA,EAAiB;MACzB,OAAO,IAAI,CAACrE,IAAI,GAAG,IAAI,CAACkF,UAAU,CAAC,IAAI,CAAClF,IAAI,CAAC,GAAG,EAAE;IACpD;IAEA;EAAA;IAAA+B,GAAA;IAAAnC,KAAA,EACU,SAAA6E,mBAAA,EAAkB;MAC1B,OAAO,IAAI,CAACxE,YAAY,GAAG,IAAI,CAACiF,UAAU,CAAC,IAAI,CAACjF,YAAY,EAAE,IAAI,CAAC,GAAG,EAAE;IAC1E;IAEA;EAAA;IAAA8B,GAAA;IAAAnC,KAAA,EACU,SAAAsF,WAAWlF,IAAY,EAAiC;MAAA,IAA/BmF,cAAA,GAAA/G,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAA0B,KAAK;MAEhE;MACA,IAAM2F,OAAO,GAAG;QACd,+BAA+B,EAAE,CAACoB,cAAc;QAChD,gCAAgC,EAAEA;OACnC;MAED,OAAO1H,IAAI,CAAA2H,gBAAA,KAAAA,gBAAA,GAAAnB,sBAAA,uEACPnG,QAAQ,CAACiG,OAAO,CAAC,EAAK/D,IAAI;IAChC;IAEA;EAAA;IAAA+B,GAAA;IAAAnC,KAAA,EACU,SAAA0E,aAAA,EAAY;MACpB,OAAO,IAAI,CAACnD,MAAM,GAAG,IAAI,CAACkE,WAAW,CAAC,IAAI,CAAClE,MAAM,CAAC,GAAG,EAAE;IACzD;IAEA;EAAA;IAAAY,GAAA;IAAAnC,KAAA,EACU,SAAA4E,aAAA,EAAY;MACpB,OAAO,IAAI,CAACpD,MAAM,GAAG,IAAI,CAACiE,WAAW,CAAC,IAAI,CAACjE,MAAM,EAAE,IAAI,CAAC,GAAG,EAAE;IAC/D;IAEA;EAAA;IAAAW,GAAA;IAAAnC,KAAA,EACU,SAAAyF,YAAYC,OAAe,EAA2B;MAAA,IAAzBC,QAAA,GAAAnH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAoB,KAAK;MAE9D;MACA,IAAM2F,OAAO,GAAG;QACd,+BAA+B,EAAE,CAACwB,QAAQ;QAC1C,+BAA+B,EAAEA;OAClC;MAED,OAAO9H,IAAI,CAAA+H,gBAAA,KAAAA,gBAAA,GAAAvB,sBAAA,yEAAsCnG,QAAQ,CAACiG,OAAO,CAAC,EAC5DuB,OAAO;IACf;IAEA;EAAA;IAAAvD,GAAA;IAAAnC,KAAA,EACU,SAAA2E,YAAYT,sBAA+B;MACnD,IAAM2B,UAAU,GAAG,IAAI,CAACrF,SAAS,KAAK,CAAC,CAAC,GAAG9B,SAAS,GAAG,IAAI,CAAC8B,SAAS;MACrE,IAAMsF,UAAU,GAAG,IAAI,CAACrF,SAAS,KAAK,CAAC,CAAC,GAAG/B,SAAS,GAAG,IAAI,CAAC+B,SAAS;MACrE,IAAMsF,qBAAqB,GAAG,IAAI,CAACpE,cAAc,GAC7C,IAAI,CAACA,cAC4D,GACjEjD,SAAS;MACb,IAAMsH,qBAAqB,GAAG,IAAI,CAACnF,iBAAiB,IAAI,CAAC,IAAI,CAACiB,SAAS;MACvE,IAAMmE,qBAAqB,GAAG,CAAC,CAAC,IAAI,CAAC9F,KAAK,GAAG,OAAO,GAAGzB,SAAS;MAChE,IAAMwH,mBAAmB,GACrBhC,sBAAsB,GAAG,aAAa,GAAGxF,SAAS;MACtD,IAAMyH,sBAAsB,GACxB,IAAI,CAACpE,OAAO,IAAI,IAAI,CAACX,gBAAgB,IAAI4E,qBAAqB,GAC9D,aAAa,GACbtH,SAAS;MACb;MACA;MACA;MACA,OAAOb,IAAI,CAAAuI,gBAAA,KAAAA,gBAAA,GAAA/B,sBAAA,4rBAEalG,SAAS,CAAC8H,qBAAqB,CAAC,EACjC9H,SAAS,CAAC+H,mBAAmB,CAAC,EAC3B/H,SAAS,CAACgI,sBAAsB,CAAC,EAE7C,IAAI,CAAClG,IAAI,EACP7B,IAAI,CAAC,IAAI,CAAC4B,KAAK,CAAsB,EAClC,IAAI,CAACM,QAAQ,EACX,IAAI,CAACJ,WAAW,EAClB,IAAI,CAACK,QAAQ,EACb,IAAI,CAACmB,QAAQ,EACbvD,SAAS,CAAC0H,UAAU,CAAC,EACrB1H,SAAS,CAAC2H,UAAU,CAAC,EACvB3H,SAAS,CAAC,IAAI,CAAC4C,OAAO,GAAG,IAAI,CAACA,OAAO,GAAGrC,SAAS,CAAC,EACtDP,SAAS,CAAC,IAAI,CAAC6C,GAAG,KAAK,EAAE,GAAGtC,SAAS,GAAG,IAAI,CAACsC,GAAa,CAAC,EAC3D7C,SAAS,CAAC,IAAI,CAAC8C,GAAG,KAAK,EAAE,GAAGvC,SAAS,GAAG,IAAI,CAACuC,GAAa,CAAC,EAEpE9C,SAAS,CAAC,IAAI,CAAC+C,IAAI,KAAK,IAAI,GAAGxC,SAAS,GAAG,IAAI,CAACwC,IAAc,CAAC,EACrD/C,SAAS,CAAC,IAAI,CAACgD,IAAI,KAAK,IAAI,GAAGzC,SAAS,GAAG,IAAI,CAACyC,IAAI,CAAC,EACrDhD,SAAS,CAAC,IAAI,CAACsD,IAAI,KAAK,EAAE,GAAG/C,SAAS,GAAG,IAAI,CAAC+C,IAAI,CAAC,EAC9CtD,SAAS,CAAC,IAAI,CAACkI,SAAS,CAAC,EACpBlI,SAAS,CAAC4H,qBAAqB,CAAC,EACxC,IAAI,CAACO,iBAAiB,EACtB,IAAI,CAACC,YAAY,EAClB,IAAI,CAACC,WAAW;IACjC;IAEA;EAAA;IAAArE,GAAA;IAAAnC,KAAA,EACU,SAAA8E,iBAAA,EAAgB;MACxB,OAAO,IAAI,CAACpE,QAAQ,GAChB,EAAE,GACF7C,IAAI,CAAA4I,gBAAA,KAAAA,gBAAA,GAAApC,sBAAA,+DAEA1G,UAAU,EAAwC,CACzD;IACH;IAEA;EAAA;IAAAwE,GAAA;IAAAnC,KAAA,EACU,SAAA+E,iBACNb,sBAA+B,EAC/BD,uBAAgC;MAClC,IAAM+B,qBAAqB,GAAG,IAAI,CAACnF,iBAAiB,IAAI,CAAC,IAAI,CAACiB,SAAS;MACvE;MACA,IAAMqC,OAAO,GAAG;QACd,wCAAwC,EAAE,IAAI,CAAC/C,gBAAgB;QAC/D,4CAA4C,EAAE4E;OAC/C;MAED,IAAMU,iBAAiB,GACnB,IAAI,CAAC3E,OAAO,IAAI,IAAI,CAACX,gBAAgB,IAAI4E,qBAAqB,GAC9DtH,SAAS,GACT,MAAM;MACV,IAAMiI,UAAU,GACZX,qBAAqB,GAAG,IAAI,CAACnF,iBAAiB,GAAG,IAAI,CAACF,MAAM;MAChE,OAAO,CAACuD,sBAAsB,GAAG,EAAE,GAAGrG,IAAI,CAAA+I,gBAAA,KAAAA,gBAAA,GAAAvC,sBAAA,6OAGlBlG,SAAS,CAACuI,iBAAiB,CAAC,EACPxI,QAAQ,CAACiG,OAAO,CAAC,EAClDwC,UAAU,EAChB,IAAI,CAACE,iBAAiB,CAAC5C,uBAAuB,CAAC,CAC5C;IACX;IAEA;EAAA;IAAA9B,GAAA;IAAAnC,KAAA,EACU,SAAA6G,kBAAkB5C,uBAAgC;MAE1D,IAAMxF,MAAM,GAAGqI,IAAI,CAAC9F,GAAG,CAAC,IAAI,CAAChB,KAAK,CAACvB,MAAM,EAAE,IAAI,CAACgC,SAAS,CAAC;MAC1D,OAAO,CAACwD,uBAAuB,GAAG,EAAE,GAAGpG,IAAI,CAAAkJ,iBAAA,KAAAA,iBAAA,GAAA1C,sBAAA,kGAEhC5F,MAAM,EAAM,IAAI,CAACgC,SAAS,CAAS;IAChD;EAAC;IAAA0B,GAAA;IAAAnC,KAAA,EAES,SAAAuG,aAAA,EAAY;MACpB,IAAI,CAACxE,OAAO,GAAG,IAAI;IACrB;EAAC;IAAAI,GAAA;IAAAnC,KAAA,EAES,SAAAwG,YAAA,EAAW;MACnB,IAAI,CAACzE,OAAO,GAAG,KAAK;MACpB,IAAI,CAACmD,cAAc,EAAE;IACvB;EAAC;IAAA/C,GAAA;IAAAnC,KAAA,EAED,SAAAgH,cAAA,EAAa;MACX,IAAMC,OAAO,GAAG,IAAI,CAAC5E,cAAc,CAAC,IAAI,CAACrC,KAAK,CAAC;MAE/C,IAAI,CAACiH,OAAO,EAAE;QACZ,IAAMC,YAAY,GACd,IAAIC,KAAK,CAAC,SAAS,EAAE;UAACC,OAAO,EAAE,KAAK;UAAEC,UAAU,EAAE;QAAI,CAAC,CAAC;QAC5D,IAAI,CAACxE,aAAa,CAACqE,YAAY,CAAC;;MAGlC,OAAOD,OAAO;IAChB;EAAC;IAAA9E,GAAA;IAAAnC,KAAA,EAED,SAAAkF,eAAA,EAAc;MACZ,IAAM+B,OAAO,GAAG,IAAI,CAACD,aAAa,EAAE;MAEpC,IAAI,CAAC1D,aAAa,CAACgE,QAAQ,CAACL,OAAO,CAAC;MACpC,IAAI,CAACnF,SAAS,GAAGmF,OAAO;MAExB,OAAOA,OAAO;IAChB;EAAC;IAAA9E,GAAA;IAAAnC,KAAA,EAES,SAAAqC,eAAerC,KAAa;MACpC,IAAMuH,cAAc,GAAG,IAAI,CAACjF,WAAW,CAACkF,QAAQ;MAEhD,IAAIA,QAAQ,GAAGlJ,iBAAiB,CAACiJ,cAAc,CAAC;MAEhD,IAAI,IAAI,CAACtF,iBAAiB,EAAE;QAC1B,IAAM1D,cAAc,GAAG,IAAI,CAAC0D,iBAAiB,CAACjC,KAAK,EAAEwH,QAAQ,CAAC;QAC9DA,QAAQ,GAAA3I,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAAO0I,QAAQ,GAAKjJ,cAAc,CAAC;QAC3C,IAAI,CAAC+E,aAAa,CAACmE,sBAAsB,CAAC,KAAK,CAAC;OACjD,MAAM;QACL,IAAI,CAACnE,aAAa,CAACmE,sBAAsB,CAAC,IAAI,CAAC;;MAGjD,IAAI,CAACzF,SAAS,GAAGwF,QAAQ;MAEzB,OAAO,IAAI,CAACxF,SAAS,CAACxC,KAAK;IAC7B;EAAC;IAAA2C,GAAA;IAAAnC,KAAA,EAED,SAAA0H,kBAAkBC,OAAe;MAC/B,IAAI,CAAC9G,iBAAiB,GAAG8G,OAAO;MAChC,IAAI,CAACrF,WAAW,CAACoF,iBAAiB,CAACC,OAAO,CAAC;IAC7C;EAAC;IAAAxF,GAAA;IAAAnC,KAAA,EAGS,SAAAsG,kBAAA,EAAiB;MACzB,IAAI,CAACtG,KAAK,GAAG,IAAI,CAACsC,WAAW,CAACtC,KAAK;IACrC;EAAC;IAAAmC,GAAA;IAAAnC,KAAA,EAGS,SAAA4H,cAAA,EAAa;MACrB,OAAA/I,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACK,IAAI,CAAC+I,qBAAqB,EAAE,GAC5B,IAAI,CAACC,sBAAsB,EAAE,GAC7B,IAAI,CAACC,sBAAsB,EAAE,GAC7B,IAAI,CAACC,2BAA2B,EAAE,GAClC,IAAI,CAACC,wBAAwB,EAAE;IAEtC;EAAC;IAAA9F,GAAA;IAAAnC,KAAA,EAES,SAAA6H,sBAAA,EAAqB;MAAA,IAAAK,MAAA;MAC7B,OAAArJ,MAAA,CAAAC,MAAA;QACEqJ,mCAAmC,EAAE,SAAAA,oCAACC,OAAO,EAAEC,OAAO;UAAA,OAClDH,MAAI,CAACI,gBAAgB,CAACF,OAAO,EAAEC,OAAO,CAAC;QAAA;QAC3CE,qCAAqC,EAAE,SAAAA,sCAACH,OAAO,EAAEC,OAAO;UAAA,OACpDH,MAAI,CAACM,mBAAmB,CAACJ,OAAO,EAAEC,OAAO,CAAC;QAAA;QAC9CI,wCAAwC,EAAE,SAAAA,yCAACJ,OAAO,EAAI;UACpD,IAAMK,iBAAiB,GACnB,SADEA,iBAAiBA,CAClBC,aAA+B,EAAc;YAC5C,OAAOA,aAAa,CAACC,GAAG,CAAC,UAACC,QAAQ;cAAA,OAAKA,QAAQ,CAACC,aAAa;YAAA,EAAC,CAClDC,MAAM,CAAC,UAACD,aAAa;cAAA,OAAKA,aAAa;YAAA,EAAa;UAClE,CAAC;UACL,IAAMrL,QAAQ,GAAG,IAAIuL,gBAAgB,CAAC,UAACL,aAAa,EAAI;YACtDN,OAAO,CAACK,iBAAiB,CAACC,aAAa,CAAC,CAAC;UAC3C,CAAC,CAAC;UACF,IAAMM,MAAM,GAAG;YAACC,UAAU,EAAE;UAAI,CAAC;UACjCzL,QAAQ,CAAC0L,OAAO,CAACjB,MAAI,CAAC5F,WAAW,EAAE2G,MAAM,CAAC;UAC1C,OAAOxL,QAAQ;QACjB,CAAC;QACD2L,0CAA0C,EACtC,SAAAA,2CAAC3L,QAA0B;UAAA,OAAKA,QAAQ,CAAC4L,UAAU,EAAE;QAAA;MAAA,GACtD9L,iBAAiB,CAAC,IAAI,CAAC+L,OAAO,CAAC;IAEtC;EAAC;IAAAnH,GAAA;IAAAnC,KAAA,EAES,SAAA8H,uBAAA,EAAsB;MAAA,IAAAyB,MAAA;MAC9B,OAAO;QACLC,cAAc,EAAE,SAAAA,eAAA;UAAA,OAAMD,MAAI,CAACjH,WAAW;QAAA;QACtC;QACA;QACAmH,YAAY,EAAE,SAAAA,aAAA;UAAA,OAAM/K,SAAS;QAAA;QAC7BgL,eAAe,EAAE,SAAAA,gBAAA;UAAA,OAAMhL,SAAS;QAAA;QAChCiL,SAAS,EAAE,SAAAA,UAAA;UAAA,OAAMJ,MAAI,CAACK,UAAU,GAC5BL,MAAI,CAACK,UAAU,CAACC,aAAa,KAAKN,MAAI,CAACjH,WAAW,GAClD,KAAK;QAAA;QACTwH,+BAA+B,EAAE,SAAAA,gCAAC1B,OAAO,EAAEC,OAAO;UAAA,OAC9CkB,MAAI,CAACjH,WAAW,CAACgG,gBAAgB,CAC7BF,OAAO,EAAEC,OAAO,EAAE;YAAC0B,OAAO,EAAE3B,OAAO,IAAI/J;UAAa,CAAC,CAAC;QAAA;QAC9D2L,iCAAiC,EAAE,SAAAA,kCAAC5B,OAAO,EAAEC,OAAO;UAAA,OAChDkB,MAAI,CAACjH,WAAW,CAACkG,mBAAmB,CAACJ,OAAO,EAAEC,OAAO,CAAC;QAAA;OAC3D;IACH;EAAC;IAAAlG,GAAA;IAAAnC,KAAA,EAES,SAAA+H,uBAAA,EAAsB;MAAA,IAAAkC,MAAA;MAC9B,OAAO;QACLC,UAAU,EAAE,SAAAA,WAACC,WAAoB;UAAA,OAAKF,MAAI,CAACG,YAAY,IACnDH,MAAI,CAACG,YAAY,CAACC,uBAAuB,CAACC,KAAK,CAACH,WAAW,CAAC;QAAA;QAChEI,aAAa,EAAE,SAAAA,cAAA,EAAK;UAClB,OAAON,MAAI,CAACG,YAAY,GACpBH,MAAI,CAACG,YAAY,CAACC,uBAAuB,CAACG,QAAQ,EAAE,GACpD,CAAC;QACP,CAAC;QACDC,QAAQ,EAAE,SAAAA,SAAA;UAAA,OAAMC,OAAO,CAACT,MAAI,CAACG,YAAY,CAAC;QAAA;QAC1CO,UAAU,EAAE,SAAAA,WAACC,WAAoB;UAAA,OAAKX,MAAI,CAACG,YAAY,IACnDH,MAAI,CAACG,YAAY,CAACC,uBAAuB,CAACQ,KAAK,CAACD,WAAW,CAAC;QAAA;QAChEE,gBAAgB,EAAE,SAAAA,iBAACC,UAAmB,EAAI;UACxC,IAAId,MAAI,CAACG,YAAY,EAAE;YACrBH,MAAI,CAACG,YAAY,CAACC,uBAAuB,CAACW,WAAW,CAACD,UAAU,CAAC;;QAErE;OACD;IACH;EAAC;IAAA5I,GAAA;IAAAnC,KAAA,EAES,SAAAgI,4BAAA,EAA2B;MAAA,IAAAiD,MAAA;MACnC,OAAO;QACLC,kBAAkB,EAAE,SAAAA,mBAAA,EAAK;UACvB,IAAID,MAAI,CAACE,iBAAiB,EAAE;YAC1BF,MAAI,CAACE,iBAAiB,CAACC,oBAAoB,CAACC,QAAQ,EAAE;;QAE1D,CAAC;QACDC,oBAAoB,EAAE,SAAAA,qBAAA,EAAK;UACzB,IAAIL,MAAI,CAACE,iBAAiB,EAAE;YAC1BF,MAAI,CAACE,iBAAiB,CAACC,oBAAoB,CAACG,UAAU,EAAE;;QAE5D,CAAC;QACDC,4BAA4B,EAAE,SAAAA,6BAACC,WAAmB,EAAI;UACpD,IAAIR,MAAI,CAACE,iBAAiB,EAAE;YAC1BF,MAAI,CAACE,iBAAiB,CAACC,oBAAoB,CAACM,eAAe,CACvDD,WAAW,CAAC;;QAEpB;OACD;IACH;IAEA;EAAA;IAAAtJ,GAAA;IAAAnC,KAAA;MAAA,IAAA2L,kBAAA,GAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CACmB,SAAAC,QAAA;QAAA,IAAAC,EAAA,EAAAC,MAAA;QAAA,OAAAJ,mBAAA,GAAAK,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAE,IAAA;cAAA,OAAA7I,IAAA,CAAAC,eAAA,CAAAhE,aAAA,CAAAiE,SAAA,8BAAAC,IAAA;YAAA;cAEXqI,MAAM,GAAAG,QAAA,CAAAG,IAAA;cAAAH,QAAA,CAAAE,IAAA;cAAA,OACN,CAAAN,EAAA,OAAI,CAACQ,cAAc,cAAAR,EAAA,uBAAAA,EAAA,CAAES,cAAc;YAAA;cAAA,OAAAL,QAAA,CAAAM,MAAA,WAClCT,MAAM;YAAA;YAAA;cAAA,OAAAG,QAAA,CAAAO,IAAA;UAAA;QAAA,GAAAZ,OAAA;MAAA,CACd;MAAA,SAAAa,kBAAA;QAAA,OAAAjB,kBAAA,CAAAkB,KAAA,OAAArO,SAAA;MAAA;MAAA,OAAAoO,iBAAA;IAAA,IACD;EAAA;IAAAzK,GAAA;IAAAnC,KAAA,EAES,SAAA8M,aAAA,EAAY;MAAA,IAAAC,MAAA;;MACnBtJ,IAAA,CAAAC,eAAA,CAAAhE,aAAA,CAAAiE,SAAA,yBAAAC,IAAA;MAEA,IAAI,CAACN,aAAa,CAACC,wBAAwB,CAAC,IAAI,CAACzC,YAAY,CAAC;MAE9D,IAAI,IAAI,CAACF,uBAAuB,EAAE;QAChC,IAAI,CAACsE,cAAc,EAAE;;MAGvB;MACA,CAAA8G,EAAA,OAAI,CAACQ,cAAc,cAAAR,EAAA,uBAAAA,EAAA,CAAES,cAAc,CAACO,IAAI,CAAC,YAAK;;QAC5C;QACA;QACA;QACAD,MAAI,CAAClL,YAAY,GACb,EAAAmK,EAAA,GAAAe,MAAI,CAAC3C,YAAY,cAAA4B,EAAA,uBAAAA,EAAA,CAAE3B,uBAAuB,CAACG,QAAQ,EAAE,KAAI,CAAC;MAChE,CAAC,CAAC;IACJ;EAAC;IAAArI,GAAA;IAAAnC,KAAA,EAES,SAAAiI,yBAAA,EAAwB;MAAA,IAAAgF,MAAA;MAChC,OAAO;QACLC,YAAY,EAAE,SAAAA,aAAA;UAAA,OAAMD,MAAI,CAACT,cAAc,KAAKS,MAAI,CAACrL,WAAW,GAAG,KAAK,CAAC;QAAA;QACrEuL,UAAU,EAAE,SAAAA,WAAA;UAAA,OAAMzC,OAAO,CAACuC,MAAI,CAACT,cAAc,CAAC;QAAA;QAC9CY,YAAY,EAAE,SAAAA,aAACC,UAAU,EAAI;UAC3B,IAAMb,cAAc,GAAGS,MAAI,CAACT,cAAc;UAC1C,IAAIA,cAAc,IAAI,CAACS,MAAI,CAACrL,WAAW,EAAE;YACvCqL,MAAI,CAACpL,YAAY,GAAGwL,UAAU;YAC9BJ,MAAI,CAACrL,WAAW,GAAG,IAAI;;QAE3B;OACD;IACH;EAAC;IAAAO,GAAA;IAAAnC,KAAA;MAAA,IAAAsN,OAAA,GAAA1B,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAED,SAAAyB,SAAA;QAAA,IAAAnD,YAAA,EAAAD,WAAA,EAAAkD,UAAA;QAAA,OAAAxB,mBAAA,GAAAK,IAAA,UAAAsB,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAApB,IAAA,GAAAoB,SAAA,CAAAnB,IAAA;YAAA;cAAAmB,SAAA,CAAAnB,IAAA;cAAA,OACQ,IAAI,CAACG,cAAc;YAAA;cAEnBrC,YAAY,GAAG,IAAI,CAACA,YAAY;cAAA,IAEjCA,YAAY;gBAAAqD,SAAA,CAAAnB,IAAA;gBAAA;cAAA;cACf,IAAI,CAAC1K,WAAW,GAAG,KAAK;cAAC,OAAA6L,SAAA,CAAAf,MAAA;YAAA;cAIrBvC,WAAW,GAAG,CAAC,CAAC,IAAI,CAAChK,KAAK,IAAI,CAAC,CAAC,IAAI,CAACH,KAAK;cAChDoK,YAAY,CAACC,uBAAuB,CAACC,KAAK,CAACH,WAAW,CAAC;cAAC,IAEnD,IAAI,CAACzJ,QAAQ;gBAAA+M,SAAA,CAAAnB,IAAA;gBAAA;cAAA;cAAA,OAAAmB,SAAA,CAAAf,MAAA;YAAA;cAIlB,IAAI,CAAC9K,WAAW,GAAGuI,WAAW;cAACsD,SAAA,CAAAnB,IAAA;cAAA,OACzB,IAAI,CAACG,cAAc;YAAA;cAEzB;;;;;;cAMMY,UAAU,GAAGjD,YAAY,CAACC,uBAAuB,CAACG,QAAQ,EAAE;cAAA,KAC9D,IAAI,CAAC5I,WAAW;gBAAA6L,SAAA,CAAAnB,IAAA;gBAAA;cAAA;cAClB,IAAI,CAACzK,YAAY,GAAGwL,UAAU;cAACI,SAAA,CAAAnB,IAAA;cAAA,OACzB,IAAI,CAACG,cAAc;YAAA;YAAA;cAAA,OAAAgB,SAAA,CAAAd,IAAA;UAAA;QAAA,GAAAY,QAAA;MAAA,CAE5B;MAAA,SAAAG,OAAA;QAAA,OAAAJ,OAAA,CAAAT,KAAA,OAAArO,SAAA;MAAA;MAAA,OAAAkP,MAAA;IAAA;EAAA;EAAA,OAAAhO,aAAA;AAAA,EA/lByClC,WAAW;AAK3BmQ,UAAA,EAAzB3P,KAAK,CAAC,iBAAiB,CAAC,C,6CAAiC;AAE1C2P,UAAA,EAAf3P,KAAK,CAAC,OAAO,CAAC,C,iDAA0C;AAE3B2P,UAAA,EAA7B3P,KAAK,CAAC,qBAAqB,CAAC,C,kDAA6C;AAE/C2P,UAAA,EAA1B3P,KAAK,CAAC,kBAAkB,CAAC,C,uDAA+C;AAE3C2P,UAAA,EAA7B3P,KAAK,CAAC,qBAAqB,CAAC,C,oDAAgD;AAEvC2P,UAAA,EAArC3P,KAAK,CAAC,6BAA6B,CAAC,C,kDAAsC;AAEjD2P,UAAA,EAAzB5P,QAAQ,CAAC;EAACkC,IAAI,EAAE2N;AAAM,CAAC,CAAC,C,2CAAY;AAEXD,UAAA,EAAzB5P,QAAQ,CAAC;EAACkC,IAAI,EAAE2N;AAAM,CAAC,CAAC,C,0CAA8B;AAE7BD,UAAA,EAAzB5P,QAAQ,CAAC;EAACkC,IAAI,EAAE2N;AAAM,CAAC,CAAC,C,iDAAkB;AAQ3CD,UAAA,EANC5P,QAAQ,CAAC;EAACkC,IAAI,EAAE2N;AAAM,CAAC,CAAC,EACxBnQ,QAAQ,CAAC,UAA8BoQ,OAAe,EAAEC,MAAc;EACrE,IAAIA,MAAM,KAAKpP,SAAS,IAAI,IAAI,CAACyB,KAAK,KAAK2N,MAAM,EAAE;IACjD,IAAI,CAACJ,MAAM,EAAE;;AAEjB,CAAC,CAAC,C,2CACS;AAEeC,UAAA,EAAzB5P,QAAQ,CAAC;EAACkC,IAAI,EAAE2N;AAAM,CAAC,CAAC,C,0CAAW;AAEVD,UAAA,EAAzB5P,QAAQ,CAAC;EAACkC,IAAI,EAAE2N;AAAM,CAAC,CAAC,C,kDAAmB;AAEFD,UAAA,EAAzC5P,QAAQ,CAAC;EAACkC,IAAI,EAAEyK,OAAO;EAAEqD,OAAO,EAAE;AAAI,CAAC,CAAC,C,8CAA2B;AAEzCJ,UAAA,EAA1B5P,QAAQ,CAAC;EAACkC,IAAI,EAAEyK;AAAO,CAAC,CAAC,C,8CAAkB;AAElBiD,UAAA,EAAzB5P,QAAQ,CAAC;EAACkC,IAAI,EAAE+N;AAAM,CAAC,CAAC,C,+CAAgB;AAEfL,UAAA,EAAzB5P,QAAQ,CAAC;EAACkC,IAAI,EAAE+N;AAAM,CAAC,CAAC,C,+CAAgB;AAQzCL,UAAA,EANC5P,QAAQ,CAAC;EAACkC,IAAI,EAAEyK,OAAO;EAAEqD,OAAO,EAAE;AAAI,CAAC,CAAC,EACxCtQ,QAAQ,CAAC,UAA8BoQ,OAAgB,EAAEC,MAAe;EACvE,IAAIA,MAAM,KAAKpP,SAAS,IAAI,IAAI,CAACgC,QAAQ,KAAKoN,MAAM,EAAE;IACpD,IAAI,CAACJ,MAAM,EAAE;;AAEjB,CAAC,CAAC,C,8CACe;AAESC,UAAA,EAAzB5P,QAAQ,CAAC;EAACkC,IAAI,EAAE2N;AAAM,CAAC,CAAC,C,4CAAa;AAEXD,UAAA,EAA1B5P,QAAQ,CAAC;EAACkC,IAAI,EAAEyK;AAAO,CAAC,CAAC,C,6DAAiC;AAEjCiD,UAAA,EAAzB5P,QAAQ,CAAC;EAACkC,IAAI,EAAE2N;AAAM,CAAC,CAAC,C,uDAAwB;AAEtBD,UAAA,EAA1B5P,QAAQ,CAAC;EAACkC,IAAI,EAAEyK;AAAO,CAAC,CAAC,C,kDAAsB;AAEtBiD,UAAA,EAAzB5P,QAAQ,CAAC;EAACkC,IAAI,EAAE2N;AAAM,CAAC,CAAC,C,6CAAc;AAEbD,UAAA,EAAzB5P,QAAQ,CAAC;EAACkC,IAAI,EAAE2N;AAAM,CAAC,CAAC,C,yCAAyB;AAExBD,UAAA,EAAzB5P,QAAQ,CAAC;EAACkC,IAAI,EAAE2N;AAAM,CAAC,CAAC,C,yCAAyB;AAQxBD,UAAA,EAAzB5P,QAAQ,CAAC;EAACkC,IAAI,EAAE2N;AAAM,CAAC,CAAC,C,0CAAgC;AAE/BD,UAAA,EAAzB5P,QAAQ,CAAC;EAACkC,IAAI,EAAE+N;AAAM,CAAC,CAAC,C,0CAA0B;AAExBL,UAAA,EAA1B5P,QAAQ,CAAC;EAACkC,IAAI,EAAEyK;AAAO,CAAC,CAAC,C,sDAA0B;AAEzBiD,UAAA,EAA1B5P,QAAQ,CAAC;EAACkC,IAAI,EAAEyK;AAAO,CAAC,CAAC,C,iDAAkD;AAEjDiD,UAAA,EAA1B5P,QAAQ,CAAC;EAACkC,IAAI,EAAEyK;AAAO,CAAC,CAAC,C,gDAAoB;AAEpBiD,UAAA,EAAzB5P,QAAQ,CAAC;EAACkC,IAAI,EAAE2N;AAAM,CAAC,CAAC,C,4CAAsB;AAErBD,UAAA,EAAzB5P,QAAQ,CAAC;EAACkC,IAAI,EAAE2N;AAAM,CAAC,CAAC,C,4CAAa;AAEZD,UAAA,EAAzB5P,QAAQ,CAAC;EAACkC,IAAI,EAAE2N;AAAM,CAAC,CAAC,C,0CAAW;AAQVD,UAAA,EAAzB5P,QAAQ,CAAC;EAACkC,IAAI,EAAE2N;AAAM,CAAC,CAAC,C,+CAAyC;AAEvCD,UAAA,EAA1B5P,QAAQ,CAAC;EAACkC,IAAI,EAAEyK;AAAO,CAAC,CAAC,C,8CAAkB;AAElBiD,UAAA,EAAzB5P,QAAQ,CAAC;EAACkC,IAAI,EAAE2N;AAAM,CAAC,CAAC,C,oDAA8B;AAE9CD,UAAA,EAAR1P,KAAK,EAAE,C,iDAA+B;AAC9B0P,UAAA,EAAR1P,KAAK,EAAE,C,kDAA4B;AAC3B0P,UAAA,EAAR1P,KAAK,EAAE,C,+CAA4B;AAC3B0P,UAAA,EAAR1P,KAAK,EAAE,C,6CAA2B;AA6UnC0P,UAAA,EADC7P,YAAY,CAAC;EAACiM,OAAO,EAAE;AAAI,CAAC,CAAC,C,qDAG7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}