{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/helpers/regeneratorRuntime\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport \"unfetch/polyfill\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"core-js/modules/es.string.ends-with.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nexport var hassUrl = \"\".concat(location.protocol, \"//\").concat(location.host);\nexport var autocompleteLoginFields = function autocompleteLoginFields(schema) {\n  return schema.map(function (field) {\n    if (field.type !== \"string\") return field;\n    switch (field.name) {\n      case \"username\":\n        return Object.assign(Object.assign({}, field), {}, {\n          autocomplete: \"username\"\n        });\n      case \"password\":\n        return Object.assign(Object.assign({}, field), {}, {\n          autocomplete: \"current-password\"\n        });\n      case \"code\":\n        return Object.assign(Object.assign({}, field), {}, {\n          autocomplete: \"one-time-code\"\n        });\n      default:\n        return field;\n    }\n  });\n};\nexport var getSignedPath = function getSignedPath(hass, path) {\n  return hass.callWS({\n    type: \"auth/sign_path\",\n    path: path\n  });\n};\nexport var fetchAuthProviders = function fetchAuthProviders() {\n  return fetch(\"/auth/providers\", {\n    credentials: \"same-origin\"\n  });\n};\nexport var createLoginFlow = function createLoginFlow(client_id, redirect_uri, handler) {\n  return fetch(\"/auth/login_flow\", {\n    method: \"POST\",\n    credentials: \"same-origin\",\n    body: JSON.stringify({\n      client_id: client_id,\n      handler: handler,\n      redirect_uri: redirect_uri\n    })\n  });\n};\nexport var submitLoginFlow = function submitLoginFlow(flow_id, data) {\n  return fetch(\"/auth/login_flow/\".concat(flow_id), {\n    method: \"POST\",\n    credentials: \"same-origin\",\n    body: JSON.stringify(data)\n  });\n};\nexport var deleteLoginFlow = function deleteLoginFlow(flow_id) {\n  return fetch(\"/auth/login_flow/\".concat(flow_id), {\n    method: \"DELETE\",\n    credentials: \"same-origin\"\n  });\n};\nexport var redirectWithAuthCode = function redirectWithAuthCode(url, authCode, oauth2State, storeToken) {\n  // OAuth 2: 3.1.2 we need to retain query component of a redirect URI\n  if (!url.includes(\"?\")) {\n    url += \"?\";\n  } else if (!url.endsWith(\"&\")) {\n    url += \"&\";\n  }\n  url += \"code=\".concat(encodeURIComponent(authCode));\n  if (oauth2State) {\n    url += \"&state=\".concat(encodeURIComponent(oauth2State));\n  }\n  if (storeToken) {\n    url += \"&storeToken=true\";\n  }\n  document.location.assign(url);\n};\nexport var createAuthForUser = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(hass, userId, username, password) {\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          return _context.abrupt(\"return\", hass.callWS({\n            type: \"config/auth_provider/homeassistant/create\",\n            user_id: userId,\n            username: username,\n            password: password\n          }));\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function createAuthForUser(_x, _x2, _x3, _x4) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var changePassword = function changePassword(hass, current_password, new_password) {\n  return hass.callWS({\n    type: \"config/auth_provider/homeassistant/change_password\",\n    current_password: current_password,\n    new_password: new_password\n  });\n};\nexport var adminChangePassword = function adminChangePassword(hass, userId, password) {\n  return hass.callWS({\n    type: \"config/auth_provider/homeassistant/admin_change_password\",\n    user_id: userId,\n    password: password\n  });\n};\nexport var deleteAllRefreshTokens = function deleteAllRefreshTokens(hass, token_type, delete_current_token) {\n  return hass.callWS({\n    type: \"auth/delete_all_refresh_tokens\",\n    token_type: token_type,\n    delete_current_token: delete_current_token\n  });\n};","map":{"version":3,"names":["hassUrl","concat","location","protocol","host","autocompleteLoginFields","schema","map","field","type","name","Object","assign","autocomplete","getSignedPath","hass","path","callWS","fetchAuthProviders","fetch","credentials","createLoginFlow","client_id","redirect_uri","handler","method","body","JSON","stringify","submitLoginFlow","flow_id","data","deleteLoginFlow","redirectWithAuthCode","url","authCode","oauth2State","storeToken","includes","endsWith","encodeURIComponent","document","createAuthForUser","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","userId","username","password","wrap","_callee$","_context","prev","next","abrupt","user_id","stop","_x","_x2","_x3","_x4","apply","arguments","changePassword","current_password","new_password","adminChangePassword","deleteAllRefreshTokens","token_type","delete_current_token"],"sources":["/Users/sercanardil/Desktop/frontend/src/data/auth.ts"],"sourcesContent":["import { HaFormSchema } from \"../components/ha-form/types\";\nimport { HomeAssistant } from \"../types\";\nimport { RefreshTokenType } from \"./refresh_token\";\n\nexport interface AuthUrlSearchParams {\n  client_id?: string;\n  redirect_uri?: string;\n  state?: string;\n}\n\nexport interface AuthProvider {\n  name: string;\n  id: string;\n  type: string;\n  users?: Record<string, string>;\n}\n\nexport interface Credential {\n  type: string;\n}\n\nexport interface SignedPath {\n  path: string;\n}\n\nexport const hassUrl = `${location.protocol}//${location.host}`;\n\nexport const autocompleteLoginFields = (schema: HaFormSchema[]) =>\n  schema.map((field) => {\n    if (field.type !== \"string\") return field;\n    switch (field.name) {\n      case \"username\":\n        return { ...field, autocomplete: \"username\" };\n      case \"password\":\n        return { ...field, autocomplete: \"current-password\" };\n      case \"code\":\n        return { ...field, autocomplete: \"one-time-code\" };\n      default:\n        return field;\n    }\n  });\n\nexport const getSignedPath = (\n  hass: HomeAssistant,\n  path: string\n): Promise<SignedPath> => hass.callWS({ type: \"auth/sign_path\", path });\n\nexport const fetchAuthProviders = () =>\n  fetch(\"/auth/providers\", {\n    credentials: \"same-origin\",\n  });\n\nexport const createLoginFlow = (\n  client_id: string | undefined,\n  redirect_uri: string | undefined,\n  handler: (string | null)[]\n) =>\n  fetch(\"/auth/login_flow\", {\n    method: \"POST\",\n    credentials: \"same-origin\",\n    body: JSON.stringify({\n      client_id,\n      handler,\n      redirect_uri,\n    }),\n  });\n\nexport const submitLoginFlow = (flow_id: string, data: Record<string, any>) =>\n  fetch(`/auth/login_flow/${flow_id}`, {\n    method: \"POST\",\n    credentials: \"same-origin\",\n    body: JSON.stringify(data),\n  });\n\nexport const deleteLoginFlow = (flow_id) =>\n  fetch(`/auth/login_flow/${flow_id}`, {\n    method: \"DELETE\",\n    credentials: \"same-origin\",\n  });\n\nexport const redirectWithAuthCode = (\n  url: string,\n  authCode: string,\n  oauth2State: string | undefined,\n  storeToken: boolean\n) => {\n  // OAuth 2: 3.1.2 we need to retain query component of a redirect URI\n  if (!url.includes(\"?\")) {\n    url += \"?\";\n  } else if (!url.endsWith(\"&\")) {\n    url += \"&\";\n  }\n\n  url += `code=${encodeURIComponent(authCode)}`;\n\n  if (oauth2State) {\n    url += `&state=${encodeURIComponent(oauth2State)}`;\n  }\n  if (storeToken) {\n    url += `&storeToken=true`;\n  }\n\n  document.location.assign(url);\n};\n\nexport const createAuthForUser = async (\n  hass: HomeAssistant,\n  userId: string,\n  username: string,\n  password: string\n) =>\n  hass.callWS({\n    type: \"config/auth_provider/homeassistant/create\",\n    user_id: userId,\n    username,\n    password,\n  });\n\nexport const changePassword = (\n  hass: HomeAssistant,\n  current_password: string,\n  new_password: string\n) =>\n  hass.callWS({\n    type: \"config/auth_provider/homeassistant/change_password\",\n    current_password,\n    new_password,\n  });\n\nexport const adminChangePassword = (\n  hass: HomeAssistant,\n  userId: string,\n  password: string\n) =>\n  hass.callWS<void>({\n    type: \"config/auth_provider/homeassistant/admin_change_password\",\n    user_id: userId,\n    password,\n  });\n\nexport const deleteAllRefreshTokens = (\n  hass: HomeAssistant,\n  token_type?: RefreshTokenType,\n  delete_current_token?: boolean\n) =>\n  hass.callWS({\n    type: \"auth/delete_all_refresh_tokens\",\n    token_type,\n    delete_current_token,\n  });\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}