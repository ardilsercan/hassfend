{"ast":null,"code":"import \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/esnext.set.difference.v2.js\";\nimport \"core-js/modules/esnext.set.intersection.v2.js\";\nimport \"core-js/modules/esnext.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/esnext.set.is-subset-of.v2.js\";\nimport \"core-js/modules/esnext.set.is-superset-of.v2.js\";\nimport \"core-js/modules/esnext.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/esnext.set.union.v2.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport { formatDuration } from \"../common/datetime/duration\";\nexport var STATE_ATTRIBUTES = [\"entity_id\", \"assumed_state\", \"attribution\", \"custom_ui_more_info\", \"custom_ui_state_card\", \"device_class\", \"editable\", \"emulated_hue_name\", \"emulated_hue\", \"entity_picture\", \"event_types\", \"friendly_name\", \"haaska_hidden\", \"haaska_name\", \"icon\", \"initial_state\", \"last_reset\", \"restored\", \"state_class\", \"supported_features\", \"unit_of_measurement\"];\nexport var TEMPERATURE_ATTRIBUTES = new Set([\"temperature\", \"current_temperature\", \"target_temperature\", \"target_temp_temp\", \"target_temp_high\", \"target_temp_low\", \"target_temp_step\", \"min_temp\", \"max_temp\"]);\nexport var DOMAIN_ATTRIBUTES_UNITS = {\n  climate: {\n    humidity: \"%\",\n    current_humidity: \"%\",\n    target_humidity_low: \"%\",\n    target_humidity_high: \"%\",\n    target_humidity_step: \"%\",\n    min_humidity: \"%\",\n    max_humidity: \"%\"\n  },\n  cover: {\n    current_position: \"%\",\n    current_tilt_position: \"%\"\n  },\n  fan: {\n    percentage: \"%\"\n  },\n  humidifier: {\n    humidity: \"%\",\n    current_humidity: \"%\",\n    min_humidity: \"%\",\n    max_humidity: \"%\"\n  },\n  light: {\n    color_temp: \"mired\",\n    max_mireds: \"mired\",\n    min_mireds: \"mired\",\n    color_temp_kelvin: \"K\",\n    min_color_temp_kelvin: \"K\",\n    max_color_temp_kelvin: \"K\",\n    brightness: \"%\"\n  },\n  sun: {\n    elevation: \"°\"\n  },\n  vacuum: {\n    battery_level: \"%\"\n  },\n  valve: {\n    current_position: \"%\"\n  },\n  sensor: {\n    battery_level: \"%\"\n  },\n  media_player: {\n    volume_level: \"%\"\n  }\n};\nexport var DOMAIN_ATTRIBUTES_FORMATERS = {\n  light: {\n    brightness: function brightness(value) {\n      return Math.round(value / 255 * 100).toString();\n    }\n  },\n  media_player: {\n    volume_level: function volume_level(value) {\n      return Math.round(value * 100).toString();\n    },\n    media_duration: function media_duration(value) {\n      return formatDuration(value.toString(), \"s\");\n    }\n  }\n};","map":{"version":3,"names":["formatDuration","STATE_ATTRIBUTES","TEMPERATURE_ATTRIBUTES","Set","DOMAIN_ATTRIBUTES_UNITS","climate","humidity","current_humidity","target_humidity_low","target_humidity_high","target_humidity_step","min_humidity","max_humidity","cover","current_position","current_tilt_position","fan","percentage","humidifier","light","color_temp","max_mireds","min_mireds","color_temp_kelvin","min_color_temp_kelvin","max_color_temp_kelvin","brightness","sun","elevation","vacuum","battery_level","valve","sensor","media_player","volume_level","DOMAIN_ATTRIBUTES_FORMATERS","value","Math","round","toString","media_duration"],"sources":["/Users/sercanardil/Desktop/frontend/src/data/entity_attributes.ts"],"sourcesContent":["import { formatDuration } from \"../common/datetime/duration\";\nimport { FrontendLocaleData } from \"./translation\";\n\nexport const STATE_ATTRIBUTES = [\n  \"entity_id\",\n  \"assumed_state\",\n  \"attribution\",\n  \"custom_ui_more_info\",\n  \"custom_ui_state_card\",\n  \"device_class\",\n  \"editable\",\n  \"emulated_hue_name\",\n  \"emulated_hue\",\n  \"entity_picture\",\n  \"event_types\",\n  \"friendly_name\",\n  \"haaska_hidden\",\n  \"haaska_name\",\n  \"icon\",\n  \"initial_state\",\n  \"last_reset\",\n  \"restored\",\n  \"state_class\",\n  \"supported_features\",\n  \"unit_of_measurement\",\n];\n\nexport const TEMPERATURE_ATTRIBUTES = new Set([\n  \"temperature\",\n  \"current_temperature\",\n  \"target_temperature\",\n  \"target_temp_temp\",\n  \"target_temp_high\",\n  \"target_temp_low\",\n  \"target_temp_step\",\n  \"min_temp\",\n  \"max_temp\",\n]);\n\nexport const DOMAIN_ATTRIBUTES_UNITS = {\n  climate: {\n    humidity: \"%\",\n    current_humidity: \"%\",\n    target_humidity_low: \"%\",\n    target_humidity_high: \"%\",\n    target_humidity_step: \"%\",\n    min_humidity: \"%\",\n    max_humidity: \"%\",\n  },\n  cover: {\n    current_position: \"%\",\n    current_tilt_position: \"%\",\n  },\n  fan: {\n    percentage: \"%\",\n  },\n  humidifier: {\n    humidity: \"%\",\n    current_humidity: \"%\",\n    min_humidity: \"%\",\n    max_humidity: \"%\",\n  },\n  light: {\n    color_temp: \"mired\",\n    max_mireds: \"mired\",\n    min_mireds: \"mired\",\n    color_temp_kelvin: \"K\",\n    min_color_temp_kelvin: \"K\",\n    max_color_temp_kelvin: \"K\",\n    brightness: \"%\",\n  },\n  sun: {\n    elevation: \"°\",\n  },\n  vacuum: {\n    battery_level: \"%\",\n  },\n  valve: {\n    current_position: \"%\",\n  },\n  sensor: {\n    battery_level: \"%\",\n  },\n  media_player: {\n    volume_level: \"%\",\n  },\n} as const satisfies Record<string, Record<string, string>>;\n\ntype Formatter = (value: number, locale: FrontendLocaleData) => string;\n\nexport const DOMAIN_ATTRIBUTES_FORMATERS: Record<\n  string,\n  Record<string, Formatter>\n> = {\n  light: {\n    brightness: (value) => Math.round((value / 255) * 100).toString(),\n  },\n  media_player: {\n    volume_level: (value) => Math.round(value * 100).toString(),\n    media_duration: (value) => formatDuration(value.toString(), \"s\"),\n  },\n};\n"],"mappings":";;;;;;;;;;;;;AAAA,SAASA,cAAc,QAAQ,6BAA6B;AAG5D,OAAO,IAAMC,gBAAgB,GAAG,CAC9B,WAAW,EACX,eAAe,EACf,aAAa,EACb,qBAAqB,EACrB,sBAAsB,EACtB,cAAc,EACd,UAAU,EACV,mBAAmB,EACnB,cAAc,EACd,gBAAgB,EAChB,aAAa,EACb,eAAe,EACf,eAAe,EACf,aAAa,EACb,MAAM,EACN,eAAe,EACf,YAAY,EACZ,UAAU,EACV,aAAa,EACb,oBAAoB,EACpB,qBAAqB,CACtB;AAED,OAAO,IAAMC,sBAAsB,GAAG,IAAIC,GAAG,CAAC,CAC5C,aAAa,EACb,qBAAqB,EACrB,oBAAoB,EACpB,kBAAkB,EAClB,kBAAkB,EAClB,iBAAiB,EACjB,kBAAkB,EAClB,UAAU,EACV,UAAU,CACX,CAAC;AAEF,OAAO,IAAMC,uBAAuB,GAAG;EACrCC,OAAO,EAAE;IACPC,QAAQ,EAAE,GAAG;IACbC,gBAAgB,EAAE,GAAG;IACrBC,mBAAmB,EAAE,GAAG;IACxBC,oBAAoB,EAAE,GAAG;IACzBC,oBAAoB,EAAE,GAAG;IACzBC,YAAY,EAAE,GAAG;IACjBC,YAAY,EAAE;EAChB,CAAC;EACDC,KAAK,EAAE;IACLC,gBAAgB,EAAE,GAAG;IACrBC,qBAAqB,EAAE;EACzB,CAAC;EACDC,GAAG,EAAE;IACHC,UAAU,EAAE;EACd,CAAC;EACDC,UAAU,EAAE;IACVZ,QAAQ,EAAE,GAAG;IACbC,gBAAgB,EAAE,GAAG;IACrBI,YAAY,EAAE,GAAG;IACjBC,YAAY,EAAE;EAChB,CAAC;EACDO,KAAK,EAAE;IACLC,UAAU,EAAE,OAAO;IACnBC,UAAU,EAAE,OAAO;IACnBC,UAAU,EAAE,OAAO;IACnBC,iBAAiB,EAAE,GAAG;IACtBC,qBAAqB,EAAE,GAAG;IAC1BC,qBAAqB,EAAE,GAAG;IAC1BC,UAAU,EAAE;EACd,CAAC;EACDC,GAAG,EAAE;IACHC,SAAS,EAAE;EACb,CAAC;EACDC,MAAM,EAAE;IACNC,aAAa,EAAE;EACjB,CAAC;EACDC,KAAK,EAAE;IACLjB,gBAAgB,EAAE;EACpB,CAAC;EACDkB,MAAM,EAAE;IACNF,aAAa,EAAE;EACjB,CAAC;EACDG,YAAY,EAAE;IACZC,YAAY,EAAE;EAChB;AACF,CAA2D;AAI3D,OAAO,IAAMC,2BAGZ,GAAG;EACFhB,KAAK,EAAE;IACLO,UAAU,EAAE,SAAAA,WAACU,KAAK;MAAA,OAAKC,IAAI,CAACC,KAAK,CAAEF,KAAK,GAAG,GAAG,GAAI,GAAG,CAAC,CAACG,QAAQ,CAAC,CAAC;IAAA;EACnE,CAAC;EACDN,YAAY,EAAE;IACZC,YAAY,EAAE,SAAAA,aAACE,KAAK;MAAA,OAAKC,IAAI,CAACC,KAAK,CAACF,KAAK,GAAG,GAAG,CAAC,CAACG,QAAQ,CAAC,CAAC;IAAA;IAC3DC,cAAc,EAAE,SAAAA,eAACJ,KAAK;MAAA,OAAKpC,cAAc,CAACoC,KAAK,CAACG,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IAAA;EAClE;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}