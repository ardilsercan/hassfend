{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _decorate from \"@babel/runtime/helpers/decorate\";\nvar _templateObject, _templateObject2, _templateObject3;\nimport \"core-js/modules/es.array.concat.js\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nexport var HaCard = _decorate([customElement(\"ha-card\")], function (_initialize, _LitElement) {\n  var HaCard = /*#__PURE__*/function (_LitElement2) {\n    _inherits(HaCard, _LitElement2);\n    function HaCard() {\n      var _this;\n      _classCallCheck(this, HaCard);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, HaCard, [].concat(args));\n      _initialize(_assertThisInitialized(_this));\n      return _this;\n    }\n    return _createClass(HaCard);\n  }(_LitElement);\n  return {\n    F: HaCard,\n    d: [{\n      kind: \"field\",\n      decorators: [property()],\n      key: \"header\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        reflect: true\n      })],\n      key: \"raised\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      :host {\\n        background: var(\\n          --ha-card-background,\\n          var(--card-background-color, white)\\n        );\\n        box-shadow: var(--ha-card-box-shadow, none);\\n        box-sizing: border-box;\\n        border-radius: var(--ha-card-border-radius, 12px);\\n        border-width: var(--ha-card-border-width, 1px);\\n        border-style: solid;\\n        border-color: var(\\n          --ha-card-border-color,\\n          var(--divider-color, #e0e0e0)\\n        );\\n        color: var(--primary-text-color);\\n        display: block;\\n        transition: all 0.3s ease-out;\\n        position: relative;\\n      }\\n\\n      :host([raised]) {\\n        border: none;\\n        box-shadow: var(\\n          --ha-card-box-shadow,\\n          0px 2px 1px -1px rgba(0, 0, 0, 0.2),\\n          0px 1px 1px 0px rgba(0, 0, 0, 0.14),\\n          0px 1px 3px 0px rgba(0, 0, 0, 0.12)\\n        );\\n      }\\n\\n      .card-header,\\n      :host ::slotted(.card-header) {\\n        color: var(--ha-card-header-color, --primary-text-color);\\n        font-family: var(--ha-card-header-font-family, inherit);\\n        font-size: var(--ha-card-header-font-size, 24px);\\n        letter-spacing: -0.012em;\\n        line-height: 48px;\\n        padding: 12px 16px 16px;\\n        display: block;\\n        margin-block-start: 0px;\\n        margin-block-end: 0px;\\n        font-weight: normal;\\n      }\\n\\n      :host ::slotted(.card-content:not(:first-child)),\\n      slot:not(:first-child)::slotted(.card-content) {\\n        padding-top: 0px;\\n        margin-top: -8px;\\n      }\\n\\n      :host ::slotted(.card-content) {\\n        padding: 16px;\\n      }\\n\\n      :host ::slotted(.card-actions) {\\n        border-top: 1px solid var(--divider-color, #e8e8e8);\\n        padding: 5px 16px;\\n      }\\n    \"])));\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        return html(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n      \", \"\\n      <slot></slot>\\n    \"])), this.header ? html(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"<h1 class=\\\"card-header\\\">\", \"</h1>\"])), this.header) : nothing);\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","nothing","customElement","property","HaCard","_decorate","_initialize","_LitElement","_LitElement2","_inherits","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_assertThisInitialized","_createClass","F","d","kind","decorators","key","value","type","Boolean","reflect","static","styles","_templateObject","_taggedTemplateLiteral","render","_templateObject2","header","_templateObject3"],"sources":["/workspaces/frontend/src/components/ha-card.ts"],"sourcesContent":["import { css, CSSResultGroup, html, LitElement, nothing } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\n\n@customElement(\"ha-card\")\nexport class HaCard extends LitElement {\n  @property() public header?: string;\n\n  @property({ type: Boolean, reflect: true }) public raised = false;\n\n  static get styles(): CSSResultGroup {\n    return css`\n      :host {\n        background: var(\n          --ha-card-background,\n          var(--card-background-color, white)\n        );\n        box-shadow: var(--ha-card-box-shadow, none);\n        box-sizing: border-box;\n        border-radius: var(--ha-card-border-radius, 12px);\n        border-width: var(--ha-card-border-width, 1px);\n        border-style: solid;\n        border-color: var(\n          --ha-card-border-color,\n          var(--divider-color, #e0e0e0)\n        );\n        color: var(--primary-text-color);\n        display: block;\n        transition: all 0.3s ease-out;\n        position: relative;\n      }\n\n      :host([raised]) {\n        border: none;\n        box-shadow: var(\n          --ha-card-box-shadow,\n          0px 2px 1px -1px rgba(0, 0, 0, 0.2),\n          0px 1px 1px 0px rgba(0, 0, 0, 0.14),\n          0px 1px 3px 0px rgba(0, 0, 0, 0.12)\n        );\n      }\n\n      .card-header,\n      :host ::slotted(.card-header) {\n        color: var(--ha-card-header-color, --primary-text-color);\n        font-family: var(--ha-card-header-font-family, inherit);\n        font-size: var(--ha-card-header-font-size, 24px);\n        letter-spacing: -0.012em;\n        line-height: 48px;\n        padding: 12px 16px 16px;\n        display: block;\n        margin-block-start: 0px;\n        margin-block-end: 0px;\n        font-weight: normal;\n      }\n\n      :host ::slotted(.card-content:not(:first-child)),\n      slot:not(:first-child)::slotted(.card-content) {\n        padding-top: 0px;\n        margin-top: -8px;\n      }\n\n      :host ::slotted(.card-content) {\n        padding: 16px;\n      }\n\n      :host ::slotted(.card-actions) {\n        border-top: 1px solid var(--divider-color, #e8e8e8);\n        padding: 5px 16px;\n      }\n    `;\n  }\n\n  protected render() {\n    return html`\n      ${this.header\n        ? html`<h1 class=\"card-header\">${this.header}</h1>`\n        : nothing}\n      <slot></slot>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-card\": HaCard;\n  }\n}\n"],"mappings":";;;;;;;;;AAAA,SAASA,GAAG,EAAkBC,IAAI,EAAEC,UAAU,EAAEC,OAAO,QAAQ,KAAK;AACpE,SAASC,aAAa,EAAEC,QAAQ,QAAQ,gBAAgB;AAExD,WACaC,MAAM,GAAAC,SAAA,EADlBH,aAAa,CAAC,SAAS,CAAC,aAAAI,WAAA,EAAAC,WAAA;EAAA,IACZH,MAAM,0BAAAI,YAAA;IAAAC,SAAA,CAAAL,MAAA,EAAAI,YAAA;IAAA,SAAAJ,OAAA;MAAA,IAAAM,KAAA;MAAAC,eAAA,OAAAP,MAAA;MAAA,SAAAQ,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAAC,IAAA,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;QAAAF,IAAA,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;MAAA;MAAAP,KAAA,GAAAQ,UAAA,OAAAd,MAAA,KAAAe,MAAA,CAAAJ,IAAA;MAAAT,WAAA,CAAAc,sBAAA,CAAAV,KAAA;MAAA,OAAAA,KAAA;IAAA;IAAA,OAAAW,YAAA,CAAAjB,MAAA;EAAA,EAAAG,WAAA;EAAA;IAAAe,CAAA,EAANlB,MAAM;IAAAmB,CAAA;MAAAC,IAAA;MAAAC,UAAA,GAChBtB,QAAQ,CAAC,CAAC;MAAAuB,GAAA;MAAAC,KAAA;IAAA;MAAAH,IAAA;MAAAC,UAAA,GAEVtB,QAAQ,CAAC;QAAEyB,IAAI,EAAEC,OAAO;QAAEC,OAAO,EAAE;MAAK,CAAC,CAAC;MAAAJ,GAAA;MAAAC,KAAA,WAAAA,MAAA;QAAA,OAAiB,KAAK;MAAA;IAAA;MAAAH,IAAA;MAAAO,MAAA;MAAAL,GAAA;MAAAC,KAAA,EAEjE,SAAAK,OAAA,EAAoC;QAClC,OAAOlC,GAAG,CAAAmC,eAAA,KAAAA,eAAA,GAAAC,sBAAA;MA4DZ;IAAC;MAAAV,IAAA;MAAAE,GAAA;MAAAC,KAAA,EAED,SAAAQ,OAAA,EAAmB;QACjB,OAAOpC,IAAI,CAAAqC,gBAAA,KAAAA,gBAAA,GAAAF,sBAAA,gDACP,IAAI,CAACG,MAAM,GACTtC,IAAI,CAAAuC,gBAAA,KAAAA,gBAAA,GAAAJ,sBAAA,4CAA2B,IAAI,CAACG,MAAM,IAC1CpC,OAAO;MAGf;IAAC;EAAA;AAAA,GA3EyBD,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}