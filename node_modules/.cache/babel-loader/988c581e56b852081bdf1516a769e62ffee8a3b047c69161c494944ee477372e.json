{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _decorate from \"@babel/runtime/helpers/decorate\";\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5;\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport { css, LitElement, html, svg } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { NODE_SIZE, SPACING } from \"./hat-graph-const\";\nimport { isSafari } from \"../../util/is_safari\";\n\n/**\n * @attribute active\n * @attribute track\n */\nexport var HatGraphNode = _decorate([customElement(\"hat-graph-node\")], function (_initialize, _LitElement) {\n  var HatGraphNode = /*#__PURE__*/function (_LitElement2) {\n    _inherits(HatGraphNode, _LitElement2);\n    function HatGraphNode() {\n      var _this;\n      _classCallCheck(this, HatGraphNode);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, HatGraphNode, [].concat(args));\n      _initialize(_assertThisInitialized(_this));\n      return _this;\n    }\n    return _createClass(HatGraphNode);\n  }(_LitElement);\n  return {\n    F: HatGraphNode,\n    d: [{\n      kind: \"field\",\n      decorators: [property()],\n      key: \"iconPath\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        reflect: true\n      })],\n      key: \"disabled\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        reflect: true,\n        type: Boolean\n      })],\n      key: \"notEnabled\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        reflect: true,\n        type: Boolean\n      })],\n      key: \"graphStart\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        attribute: \"nofocus\"\n      })],\n      key: \"noFocus\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        reflect: true,\n        type: Number\n      })],\n      key: \"badge\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"updated\",\n      value: function updated(changedProps) {\n        if (changedProps.has(\"noFocus\")) {\n          if (!this.hasAttribute(\"tabindex\") && !this.noFocus) {\n            this.setAttribute(\"tabindex\", \"0\");\n          } else if (changedProps.get(\"noFocus\") !== undefined && this.noFocus) {\n            this.removeAttribute(\"tabindex\");\n          }\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var height = NODE_SIZE + (this.graphStart ? 2 : SPACING + 1);\n        var width = SPACING + NODE_SIZE;\n        return html(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      <svg\\n        class=\", \"\\n        width=\\\"\", \"px\\\"\\n        height=\\\"\", \"px\\\"\\n        viewBox=\\\"-\", \" -\", \" \", \" \", \"\\\"\\n      >\\n        \", \"\\n        <g class=\\\"node\\\">\\n          <circle cx=\\\"0\\\" cy=\\\"0\\\" r=\", \" />\\n          }\\n          \", \"\\n          <g style=\\\"pointer-events: none\\\" transform=\\\"translate(\", \" \", \")\\\">\\n            \", \"\\n          </g>\\n        </g>\\n      </svg>\\n    \"])), isSafari ? \"safari\" : \"\", width, height, Math.ceil(width / 2), this.graphStart ? Math.ceil(height / 2) : Math.ceil((NODE_SIZE + SPACING * 2) / 2), width, height, this.graphStart ? \"\" : svg(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n          <path\\n            class=\\\"connector\\\"\\n            d=\\\"\\n              M 0 \", \"\\n              L 0 0\\n            \\\"\\n            line-caps=\\\"round\\\"\\n          />\\n          \"])), -SPACING - NODE_SIZE / 2), NODE_SIZE / 2, this.badge ? svg(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n        <g class=\\\"number\\\">\\n          <circle\\n            cx=\\\"8\\\"\\n            cy=\", \"\\n            r=\\\"8\\\"\\n          ></circle>\\n          <text\\n            x=\\\"8\\\"\\n            y=\", \"\\n            text-anchor=\\\"middle\\\"\\n            alignment-baseline=\\\"middle\\\"\\n          >\", \"</text>\\n        </g>\\n      \"])), -NODE_SIZE / 2, -NODE_SIZE / 2, this.badge > 9 ? \"9+\" : this.badge) : \"\", -12, -12, this.iconPath ? svg(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"<path class=\\\"icon\\\" d=\", \"/>\"])), this.iconPath) : \"\");\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"\\n      :host {\\n        display: flex;\\n        flex-direction: column;\\n        min-width: calc(var(--hat-graph-node-size) + var(--hat-graph-spacing));\\n        height: calc(\\n          var(--hat-graph-node-size) + var(--hat-graph-spacing) + 1px\\n        );\\n      }\\n      :host([graphStart]) {\\n        height: calc(var(--hat-graph-node-size) + 2px);\\n      }\\n      :host([track]) {\\n        --stroke-clr: var(--track-clr);\\n        --icon-clr: var(--default-icon-clr);\\n      }\\n      :host([active]) circle {\\n        --stroke-clr: var(--active-clr);\\n        --icon-clr: var(--default-icon-clr);\\n      }\\n      :host(:focus) {\\n        outline: none;\\n      }\\n      :host(:hover) circle {\\n        --stroke-clr: var(--hover-clr);\\n        --icon-clr: var(--default-icon-clr);\\n      }\\n      :host([notEnabled]) circle {\\n        --stroke-clr: var(--disabled-clr);\\n      }\\n      :host([notEnabled][active]) circle {\\n        --stroke-clr: var(--disabled-active-clr);\\n      }\\n      :host([notEnabled]:hover) circle {\\n        --stroke-clr: var(--disabled-hover-clr);\\n      }\\n      svg:not(.safari) {\\n        width: 100%;\\n        height: 100%;\\n      }\\n      circle,\\n      path.connector {\\n        stroke: var(--stroke-clr);\\n        stroke-width: 2;\\n        fill: none;\\n      }\\n      circle {\\n        fill: var(--background-clr);\\n        stroke: var(--circle-clr, var(--stroke-clr));\\n      }\\n      .number circle {\\n        fill: var(--track-clr);\\n        stroke: none;\\n        stroke-width: 0;\\n      }\\n      .number text {\\n        font-size: smaller;\\n      }\\n      path.icon {\\n        fill: var(--icon-clr);\\n      }\\n    \"])));\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","LitElement","html","svg","customElement","property","NODE_SIZE","SPACING","isSafari","HatGraphNode","_decorate","_initialize","_LitElement","_LitElement2","_inherits","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_assertThisInitialized","_createClass","F","d","kind","decorators","key","value","type","Boolean","reflect","attribute","Number","updated","changedProps","has","hasAttribute","noFocus","setAttribute","get","undefined","removeAttribute","render","height","graphStart","width","_templateObject","_taggedTemplateLiteral","Math","ceil","_templateObject2","badge","_templateObject3","iconPath","_templateObject4","static","styles","_templateObject5"],"sources":["/Users/sercanardil/Desktop/frontend/src/components/trace/hat-graph-node.ts"],"sourcesContent":["import {\n  css,\n  LitElement,\n  PropertyValues,\n  html,\n  TemplateResult,\n  svg,\n} from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { NODE_SIZE, SPACING } from \"./hat-graph-const\";\nimport { isSafari } from \"../../util/is_safari\";\n\n/**\n * @attribute active\n * @attribute track\n */\n@customElement(\"hat-graph-node\")\nexport class HatGraphNode extends LitElement {\n  @property() iconPath?: string;\n\n  @property({ type: Boolean, reflect: true }) public disabled = false;\n\n  @property({ reflect: true, type: Boolean }) notEnabled = false;\n\n  @property({ reflect: true, type: Boolean }) graphStart = false;\n\n  @property({ type: Boolean, attribute: \"nofocus\" }) noFocus = false;\n\n  @property({ reflect: true, type: Number }) badge?: number;\n\n  protected updated(changedProps: PropertyValues) {\n    if (changedProps.has(\"noFocus\")) {\n      if (!this.hasAttribute(\"tabindex\") && !this.noFocus) {\n        this.setAttribute(\"tabindex\", \"0\");\n      } else if (changedProps.get(\"noFocus\") !== undefined && this.noFocus) {\n        this.removeAttribute(\"tabindex\");\n      }\n    }\n  }\n\n  protected render(): TemplateResult {\n    const height = NODE_SIZE + (this.graphStart ? 2 : SPACING + 1);\n    const width = SPACING + NODE_SIZE;\n    return html`\n      <svg\n        class=${isSafari ? \"safari\" : \"\"}\n        width=\"${width}px\"\n        height=\"${height}px\"\n        viewBox=\"-${Math.ceil(width / 2)} -${this.graphStart\n          ? Math.ceil(height / 2)\n          : Math.ceil((NODE_SIZE + SPACING * 2) / 2)} ${width} ${height}\"\n      >\n        ${this.graphStart\n          ? ``\n          : svg`\n          <path\n            class=\"connector\"\n            d=\"\n              M 0 ${-SPACING - NODE_SIZE / 2}\n              L 0 0\n            \"\n            line-caps=\"round\"\n          />\n          `}\n        <g class=\"node\">\n          <circle cx=\"0\" cy=\"0\" r=${NODE_SIZE / 2} />\n          }\n          ${this.badge\n            ? svg`\n        <g class=\"number\">\n          <circle\n            cx=\"8\"\n            cy=${-NODE_SIZE / 2}\n            r=\"8\"\n          ></circle>\n          <text\n            x=\"8\"\n            y=${-NODE_SIZE / 2}\n            text-anchor=\"middle\"\n            alignment-baseline=\"middle\"\n          >${this.badge > 9 ? \"9+\" : this.badge}</text>\n        </g>\n      `\n            : \"\"}\n          <g style=\"pointer-events: none\" transform=\"translate(${-12} ${-12})\">\n            ${this.iconPath ? svg`<path class=\"icon\" d=${this.iconPath}/>` : \"\"}\n          </g>\n        </g>\n      </svg>\n    `;\n  }\n\n  static get styles() {\n    return css`\n      :host {\n        display: flex;\n        flex-direction: column;\n        min-width: calc(var(--hat-graph-node-size) + var(--hat-graph-spacing));\n        height: calc(\n          var(--hat-graph-node-size) + var(--hat-graph-spacing) + 1px\n        );\n      }\n      :host([graphStart]) {\n        height: calc(var(--hat-graph-node-size) + 2px);\n      }\n      :host([track]) {\n        --stroke-clr: var(--track-clr);\n        --icon-clr: var(--default-icon-clr);\n      }\n      :host([active]) circle {\n        --stroke-clr: var(--active-clr);\n        --icon-clr: var(--default-icon-clr);\n      }\n      :host(:focus) {\n        outline: none;\n      }\n      :host(:hover) circle {\n        --stroke-clr: var(--hover-clr);\n        --icon-clr: var(--default-icon-clr);\n      }\n      :host([notEnabled]) circle {\n        --stroke-clr: var(--disabled-clr);\n      }\n      :host([notEnabled][active]) circle {\n        --stroke-clr: var(--disabled-active-clr);\n      }\n      :host([notEnabled]:hover) circle {\n        --stroke-clr: var(--disabled-hover-clr);\n      }\n      svg:not(.safari) {\n        width: 100%;\n        height: 100%;\n      }\n      circle,\n      path.connector {\n        stroke: var(--stroke-clr);\n        stroke-width: 2;\n        fill: none;\n      }\n      circle {\n        fill: var(--background-clr);\n        stroke: var(--circle-clr, var(--stroke-clr));\n      }\n      .number circle {\n        fill: var(--track-clr);\n        stroke: none;\n        stroke-width: 0;\n      }\n      .number text {\n        font-size: smaller;\n      }\n      path.icon {\n        fill: var(--icon-clr);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hat-graph-node\": HatGraphNode;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}