{"ast":null,"code":"/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __assign, __extends, __values } from \"tslib\";\nimport { MDCFoundation } from '@material/base/foundation';\nimport { ALWAYS_FLOAT_TYPES, cssClasses, numbers, strings, VALIDATION_ATTR_WHITELIST } from './constants';\nvar POINTERDOWN_EVENTS = ['mousedown', 'touchstart'];\nvar INTERACTION_EVENTS = ['click', 'keydown'];\nvar MDCTextFieldFoundation = /** @class */function (_super) {\n  __extends(MDCTextFieldFoundation, _super);\n  /**\n   * @param adapter\n   * @param foundationMap Map from subcomponent names to their subfoundations.\n   */\n  function MDCTextFieldFoundation(adapter, foundationMap) {\n    if (foundationMap === void 0) {\n      foundationMap = {};\n    }\n    var _this = _super.call(this, __assign(__assign({}, MDCTextFieldFoundation.defaultAdapter), adapter)) || this;\n    _this.isFocused = false;\n    _this.receivedUserInput = false;\n    _this.valid = true;\n    _this.useNativeValidation = true;\n    _this.validateOnValueChange = true;\n    _this.helperText = foundationMap.helperText;\n    _this.characterCounter = foundationMap.characterCounter;\n    _this.leadingIcon = foundationMap.leadingIcon;\n    _this.trailingIcon = foundationMap.trailingIcon;\n    _this.inputFocusHandler = function () {\n      _this.activateFocus();\n    };\n    _this.inputBlurHandler = function () {\n      _this.deactivateFocus();\n    };\n    _this.inputInputHandler = function () {\n      _this.handleInput();\n    };\n    _this.setPointerXOffset = function (evt) {\n      _this.setTransformOrigin(evt);\n    };\n    _this.textFieldInteractionHandler = function () {\n      _this.handleTextFieldInteraction();\n    };\n    _this.validationAttributeChangeHandler = function (attributesList) {\n      _this.handleValidationAttributeChange(attributesList);\n    };\n    return _this;\n  }\n  Object.defineProperty(MDCTextFieldFoundation, \"cssClasses\", {\n    get: function () {\n      return cssClasses;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MDCTextFieldFoundation, \"strings\", {\n    get: function () {\n      return strings;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MDCTextFieldFoundation, \"numbers\", {\n    get: function () {\n      return numbers;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MDCTextFieldFoundation.prototype, \"shouldAlwaysFloat\", {\n    get: function () {\n      var type = this.getNativeInput().type;\n      return ALWAYS_FLOAT_TYPES.indexOf(type) >= 0;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MDCTextFieldFoundation.prototype, \"shouldFloat\", {\n    get: function () {\n      return this.shouldAlwaysFloat || this.isFocused || !!this.getValue() || this.isBadInput();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MDCTextFieldFoundation.prototype, \"shouldShake\", {\n    get: function () {\n      return !this.isFocused && !this.isValid() && !!this.getValue();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MDCTextFieldFoundation, \"defaultAdapter\", {\n    /**\n     * See {@link MDCTextFieldAdapter} for typing information on parameters and\n     * return types.\n     */\n    get: function () {\n      // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n      return {\n        addClass: function () {\n          return undefined;\n        },\n        removeClass: function () {\n          return undefined;\n        },\n        hasClass: function () {\n          return true;\n        },\n        setInputAttr: function () {\n          return undefined;\n        },\n        removeInputAttr: function () {\n          return undefined;\n        },\n        registerTextFieldInteractionHandler: function () {\n          return undefined;\n        },\n        deregisterTextFieldInteractionHandler: function () {\n          return undefined;\n        },\n        registerInputInteractionHandler: function () {\n          return undefined;\n        },\n        deregisterInputInteractionHandler: function () {\n          return undefined;\n        },\n        registerValidationAttributeChangeHandler: function () {\n          return new MutationObserver(function () {\n            return undefined;\n          });\n        },\n        deregisterValidationAttributeChangeHandler: function () {\n          return undefined;\n        },\n        getNativeInput: function () {\n          return null;\n        },\n        isFocused: function () {\n          return false;\n        },\n        activateLineRipple: function () {\n          return undefined;\n        },\n        deactivateLineRipple: function () {\n          return undefined;\n        },\n        setLineRippleTransformOrigin: function () {\n          return undefined;\n        },\n        shakeLabel: function () {\n          return undefined;\n        },\n        floatLabel: function () {\n          return undefined;\n        },\n        setLabelRequired: function () {\n          return undefined;\n        },\n        hasLabel: function () {\n          return false;\n        },\n        getLabelWidth: function () {\n          return 0;\n        },\n        hasOutline: function () {\n          return false;\n        },\n        notchOutline: function () {\n          return undefined;\n        },\n        closeOutline: function () {\n          return undefined;\n        }\n      };\n      // tslint:enable:object-literal-sort-keys\n    },\n    enumerable: false,\n    configurable: true\n  });\n  MDCTextFieldFoundation.prototype.init = function () {\n    var e_1, _a, e_2, _b;\n    if (this.adapter.hasLabel() && this.getNativeInput().required) {\n      this.adapter.setLabelRequired(true);\n    }\n    if (this.adapter.isFocused()) {\n      this.inputFocusHandler();\n    } else if (this.adapter.hasLabel() && this.shouldFloat) {\n      this.notchOutline(true);\n      this.adapter.floatLabel(true);\n      this.styleFloating(true);\n    }\n    this.adapter.registerInputInteractionHandler('focus', this.inputFocusHandler);\n    this.adapter.registerInputInteractionHandler('blur', this.inputBlurHandler);\n    this.adapter.registerInputInteractionHandler('input', this.inputInputHandler);\n    try {\n      for (var POINTERDOWN_EVENTS_1 = __values(POINTERDOWN_EVENTS), POINTERDOWN_EVENTS_1_1 = POINTERDOWN_EVENTS_1.next(); !POINTERDOWN_EVENTS_1_1.done; POINTERDOWN_EVENTS_1_1 = POINTERDOWN_EVENTS_1.next()) {\n        var evtType = POINTERDOWN_EVENTS_1_1.value;\n        this.adapter.registerInputInteractionHandler(evtType, this.setPointerXOffset);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (POINTERDOWN_EVENTS_1_1 && !POINTERDOWN_EVENTS_1_1.done && (_a = POINTERDOWN_EVENTS_1.return)) _a.call(POINTERDOWN_EVENTS_1);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n    try {\n      for (var INTERACTION_EVENTS_1 = __values(INTERACTION_EVENTS), INTERACTION_EVENTS_1_1 = INTERACTION_EVENTS_1.next(); !INTERACTION_EVENTS_1_1.done; INTERACTION_EVENTS_1_1 = INTERACTION_EVENTS_1.next()) {\n        var evtType = INTERACTION_EVENTS_1_1.value;\n        this.adapter.registerTextFieldInteractionHandler(evtType, this.textFieldInteractionHandler);\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (INTERACTION_EVENTS_1_1 && !INTERACTION_EVENTS_1_1.done && (_b = INTERACTION_EVENTS_1.return)) _b.call(INTERACTION_EVENTS_1);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n    this.validationObserver = this.adapter.registerValidationAttributeChangeHandler(this.validationAttributeChangeHandler);\n    this.setcharacterCounter(this.getValue().length);\n  };\n  MDCTextFieldFoundation.prototype.destroy = function () {\n    var e_3, _a, e_4, _b;\n    this.adapter.deregisterInputInteractionHandler('focus', this.inputFocusHandler);\n    this.adapter.deregisterInputInteractionHandler('blur', this.inputBlurHandler);\n    this.adapter.deregisterInputInteractionHandler('input', this.inputInputHandler);\n    try {\n      for (var POINTERDOWN_EVENTS_2 = __values(POINTERDOWN_EVENTS), POINTERDOWN_EVENTS_2_1 = POINTERDOWN_EVENTS_2.next(); !POINTERDOWN_EVENTS_2_1.done; POINTERDOWN_EVENTS_2_1 = POINTERDOWN_EVENTS_2.next()) {\n        var evtType = POINTERDOWN_EVENTS_2_1.value;\n        this.adapter.deregisterInputInteractionHandler(evtType, this.setPointerXOffset);\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (POINTERDOWN_EVENTS_2_1 && !POINTERDOWN_EVENTS_2_1.done && (_a = POINTERDOWN_EVENTS_2.return)) _a.call(POINTERDOWN_EVENTS_2);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n    try {\n      for (var INTERACTION_EVENTS_2 = __values(INTERACTION_EVENTS), INTERACTION_EVENTS_2_1 = INTERACTION_EVENTS_2.next(); !INTERACTION_EVENTS_2_1.done; INTERACTION_EVENTS_2_1 = INTERACTION_EVENTS_2.next()) {\n        var evtType = INTERACTION_EVENTS_2_1.value;\n        this.adapter.deregisterTextFieldInteractionHandler(evtType, this.textFieldInteractionHandler);\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (INTERACTION_EVENTS_2_1 && !INTERACTION_EVENTS_2_1.done && (_b = INTERACTION_EVENTS_2.return)) _b.call(INTERACTION_EVENTS_2);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n    this.adapter.deregisterValidationAttributeChangeHandler(this.validationObserver);\n  };\n  /**\n   * Handles user interactions with the Text Field.\n   */\n  MDCTextFieldFoundation.prototype.handleTextFieldInteraction = function () {\n    var nativeInput = this.adapter.getNativeInput();\n    if (nativeInput && nativeInput.disabled) {\n      return;\n    }\n    this.receivedUserInput = true;\n  };\n  /**\n   * Handles validation attribute changes\n   */\n  MDCTextFieldFoundation.prototype.handleValidationAttributeChange = function (attributesList) {\n    var _this = this;\n    attributesList.some(function (attributeName) {\n      if (VALIDATION_ATTR_WHITELIST.indexOf(attributeName) > -1) {\n        _this.styleValidity(true);\n        _this.adapter.setLabelRequired(_this.getNativeInput().required);\n        return true;\n      }\n      return false;\n    });\n    if (attributesList.indexOf('maxlength') > -1) {\n      this.setcharacterCounter(this.getValue().length);\n    }\n  };\n  /**\n   * Opens/closes the notched outline.\n   */\n  MDCTextFieldFoundation.prototype.notchOutline = function (openNotch) {\n    if (!this.adapter.hasOutline() || !this.adapter.hasLabel()) {\n      return;\n    }\n    if (openNotch) {\n      var labelWidth = this.adapter.getLabelWidth() * numbers.LABEL_SCALE;\n      this.adapter.notchOutline(labelWidth);\n    } else {\n      this.adapter.closeOutline();\n    }\n  };\n  /**\n   * Activates the text field focus state.\n   */\n  MDCTextFieldFoundation.prototype.activateFocus = function () {\n    this.isFocused = true;\n    this.styleFocused(this.isFocused);\n    this.adapter.activateLineRipple();\n    if (this.adapter.hasLabel()) {\n      this.notchOutline(this.shouldFloat);\n      this.adapter.floatLabel(this.shouldFloat);\n      this.styleFloating(this.shouldFloat);\n      this.adapter.shakeLabel(this.shouldShake);\n    }\n    if (this.helperText && (this.helperText.isPersistent() || !this.helperText.isValidation() || !this.valid)) {\n      this.helperText.showToScreenReader();\n    }\n  };\n  /**\n   * Sets the line ripple's transform origin, so that the line ripple activate\n   * animation will animate out from the user's click location.\n   */\n  MDCTextFieldFoundation.prototype.setTransformOrigin = function (evt) {\n    if (this.isDisabled() || this.adapter.hasOutline()) {\n      return;\n    }\n    var touches = evt.touches;\n    var targetEvent = touches ? touches[0] : evt;\n    var targetClientRect = targetEvent.target.getBoundingClientRect();\n    var normalizedX = targetEvent.clientX - targetClientRect.left;\n    this.adapter.setLineRippleTransformOrigin(normalizedX);\n  };\n  /**\n   * Handles input change of text input and text area.\n   */\n  MDCTextFieldFoundation.prototype.handleInput = function () {\n    this.autoCompleteFocus();\n    this.setcharacterCounter(this.getValue().length);\n  };\n  /**\n   * Activates the Text Field's focus state in cases when the input value\n   * changes without user input (e.g. programmatically).\n   */\n  MDCTextFieldFoundation.prototype.autoCompleteFocus = function () {\n    if (!this.receivedUserInput) {\n      this.activateFocus();\n    }\n  };\n  /**\n   * Deactivates the Text Field's focus state.\n   */\n  MDCTextFieldFoundation.prototype.deactivateFocus = function () {\n    this.isFocused = false;\n    this.adapter.deactivateLineRipple();\n    var isValid = this.isValid();\n    this.styleValidity(isValid);\n    this.styleFocused(this.isFocused);\n    if (this.adapter.hasLabel()) {\n      this.notchOutline(this.shouldFloat);\n      this.adapter.floatLabel(this.shouldFloat);\n      this.styleFloating(this.shouldFloat);\n      this.adapter.shakeLabel(this.shouldShake);\n    }\n    if (!this.shouldFloat) {\n      this.receivedUserInput = false;\n    }\n  };\n  MDCTextFieldFoundation.prototype.getValue = function () {\n    return this.getNativeInput().value;\n  };\n  /**\n   * @param value The value to set on the input Element.\n   */\n  MDCTextFieldFoundation.prototype.setValue = function (value) {\n    // Prevent Safari from moving the caret to the end of the input when the\n    // value has not changed.\n    if (this.getValue() !== value) {\n      this.getNativeInput().value = value;\n    }\n    this.setcharacterCounter(value.length);\n    if (this.validateOnValueChange) {\n      var isValid = this.isValid();\n      this.styleValidity(isValid);\n    }\n    if (this.adapter.hasLabel()) {\n      this.notchOutline(this.shouldFloat);\n      this.adapter.floatLabel(this.shouldFloat);\n      this.styleFloating(this.shouldFloat);\n      if (this.validateOnValueChange) {\n        this.adapter.shakeLabel(this.shouldShake);\n      }\n    }\n  };\n  /**\n   * @return The custom validity state, if set; otherwise, the result of a\n   *     native validity check.\n   */\n  MDCTextFieldFoundation.prototype.isValid = function () {\n    return this.useNativeValidation ? this.isNativeInputValid() : this.valid;\n  };\n  /**\n   * @param isValid Sets the custom validity state of the Text Field.\n   */\n  MDCTextFieldFoundation.prototype.setValid = function (isValid) {\n    this.valid = isValid;\n    this.styleValidity(isValid);\n    var shouldShake = !isValid && !this.isFocused && !!this.getValue();\n    if (this.adapter.hasLabel()) {\n      this.adapter.shakeLabel(shouldShake);\n    }\n  };\n  /**\n   * @param shouldValidate Whether or not validity should be updated on\n   *     value change.\n   */\n  MDCTextFieldFoundation.prototype.setValidateOnValueChange = function (shouldValidate) {\n    this.validateOnValueChange = shouldValidate;\n  };\n  /**\n   * @return Whether or not validity should be updated on value change. `true`\n   *     by default.\n   */\n  MDCTextFieldFoundation.prototype.getValidateOnValueChange = function () {\n    return this.validateOnValueChange;\n  };\n  /**\n   * Enables or disables the use of native validation. Use this for custom\n   * validation.\n   * @param useNativeValidation Set this to false to ignore native input\n   *     validation.\n   */\n  MDCTextFieldFoundation.prototype.setUseNativeValidation = function (useNativeValidation) {\n    this.useNativeValidation = useNativeValidation;\n  };\n  MDCTextFieldFoundation.prototype.isDisabled = function () {\n    return this.getNativeInput().disabled;\n  };\n  /**\n   * @param disabled Sets the text-field disabled or enabled.\n   */\n  MDCTextFieldFoundation.prototype.setDisabled = function (disabled) {\n    this.getNativeInput().disabled = disabled;\n    this.styleDisabled(disabled);\n  };\n  /**\n   * @param content Sets the content of the helper text.\n   */\n  MDCTextFieldFoundation.prototype.setHelperTextContent = function (content) {\n    if (this.helperText) {\n      this.helperText.setContent(content);\n    }\n  };\n  /**\n   * Sets the aria label of the leading icon.\n   */\n  MDCTextFieldFoundation.prototype.setLeadingIconAriaLabel = function (label) {\n    if (this.leadingIcon) {\n      this.leadingIcon.setAriaLabel(label);\n    }\n  };\n  /**\n   * Sets the text content of the leading icon.\n   */\n  MDCTextFieldFoundation.prototype.setLeadingIconContent = function (content) {\n    if (this.leadingIcon) {\n      this.leadingIcon.setContent(content);\n    }\n  };\n  /**\n   * Sets the aria label of the trailing icon.\n   */\n  MDCTextFieldFoundation.prototype.setTrailingIconAriaLabel = function (label) {\n    if (this.trailingIcon) {\n      this.trailingIcon.setAriaLabel(label);\n    }\n  };\n  /**\n   * Sets the text content of the trailing icon.\n   */\n  MDCTextFieldFoundation.prototype.setTrailingIconContent = function (content) {\n    if (this.trailingIcon) {\n      this.trailingIcon.setContent(content);\n    }\n  };\n  /**\n   * Sets character counter values that shows characters used and the total\n   * character limit.\n   */\n  MDCTextFieldFoundation.prototype.setcharacterCounter = function (currentLength) {\n    if (!this.characterCounter) {\n      return;\n    }\n    var maxLength = this.getNativeInput().maxLength;\n    if (maxLength === -1) {\n      throw new Error('MDCTextFieldFoundation: Expected maxlength html property on text input or textarea.');\n    }\n    this.characterCounter.setCounterValue(currentLength, maxLength);\n  };\n  /**\n   * @return True if the Text Field input fails in converting the user-supplied\n   *     value.\n   */\n  MDCTextFieldFoundation.prototype.isBadInput = function () {\n    // The badInput property is not supported in IE 11 💩.\n    return this.getNativeInput().validity.badInput || false;\n  };\n  /**\n   * @return The result of native validity checking (ValidityState.valid).\n   */\n  MDCTextFieldFoundation.prototype.isNativeInputValid = function () {\n    return this.getNativeInput().validity.valid;\n  };\n  /**\n   * Styles the component based on the validity state.\n   */\n  MDCTextFieldFoundation.prototype.styleValidity = function (isValid) {\n    var INVALID = MDCTextFieldFoundation.cssClasses.INVALID;\n    if (isValid) {\n      this.adapter.removeClass(INVALID);\n    } else {\n      this.adapter.addClass(INVALID);\n    }\n    if (this.helperText) {\n      this.helperText.setValidity(isValid);\n      // We dynamically set or unset aria-describedby for validation helper text\n      // only, based on whether the field is valid\n      var helperTextValidation = this.helperText.isValidation();\n      if (!helperTextValidation) {\n        return;\n      }\n      var helperTextVisible = this.helperText.isVisible();\n      var helperTextId = this.helperText.getId();\n      if (helperTextVisible && helperTextId) {\n        this.adapter.setInputAttr(strings.ARIA_DESCRIBEDBY, helperTextId);\n      } else {\n        this.adapter.removeInputAttr(strings.ARIA_DESCRIBEDBY);\n      }\n    }\n  };\n  /**\n   * Styles the component based on the focused state.\n   */\n  MDCTextFieldFoundation.prototype.styleFocused = function (isFocused) {\n    var FOCUSED = MDCTextFieldFoundation.cssClasses.FOCUSED;\n    if (isFocused) {\n      this.adapter.addClass(FOCUSED);\n    } else {\n      this.adapter.removeClass(FOCUSED);\n    }\n  };\n  /**\n   * Styles the component based on the disabled state.\n   */\n  MDCTextFieldFoundation.prototype.styleDisabled = function (isDisabled) {\n    var _a = MDCTextFieldFoundation.cssClasses,\n      DISABLED = _a.DISABLED,\n      INVALID = _a.INVALID;\n    if (isDisabled) {\n      this.adapter.addClass(DISABLED);\n      this.adapter.removeClass(INVALID);\n    } else {\n      this.adapter.removeClass(DISABLED);\n    }\n    if (this.leadingIcon) {\n      this.leadingIcon.setDisabled(isDisabled);\n    }\n    if (this.trailingIcon) {\n      this.trailingIcon.setDisabled(isDisabled);\n    }\n  };\n  /**\n   * Styles the component based on the label floating state.\n   */\n  MDCTextFieldFoundation.prototype.styleFloating = function (isFloating) {\n    var LABEL_FLOATING = MDCTextFieldFoundation.cssClasses.LABEL_FLOATING;\n    if (isFloating) {\n      this.adapter.addClass(LABEL_FLOATING);\n    } else {\n      this.adapter.removeClass(LABEL_FLOATING);\n    }\n  };\n  /**\n   * @return The native text input element from the host environment, or an\n   *     object with the same shape for unit tests.\n   */\n  MDCTextFieldFoundation.prototype.getNativeInput = function () {\n    // this.adapter may be undefined in foundation unit tests. This happens when\n    // testdouble is creating a mock object and invokes the\n    // shouldShake/shouldFloat getters (which in turn call getValue(), which\n    // calls this method) before init() has been called from the MDCTextField\n    // constructor. To work around that issue, we return a dummy object.\n    var nativeInput = this.adapter ? this.adapter.getNativeInput() : null;\n    return nativeInput || {\n      disabled: false,\n      maxLength: -1,\n      required: false,\n      type: 'input',\n      validity: {\n        badInput: false,\n        valid: true\n      },\n      value: ''\n    };\n  };\n  return MDCTextFieldFoundation;\n}(MDCFoundation);\nexport { MDCTextFieldFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCTextFieldFoundation;","map":{"version":3,"names":["MDCFoundation","ALWAYS_FLOAT_TYPES","cssClasses","numbers","strings","VALIDATION_ATTR_WHITELIST","POINTERDOWN_EVENTS","INTERACTION_EVENTS","MDCTextFieldFoundation","_super","__extends","adapter","foundationMap","_this","call","__assign","defaultAdapter","isFocused","receivedUserInput","valid","useNativeValidation","validateOnValueChange","helperText","characterCounter","leadingIcon","trailingIcon","inputFocusHandler","activateFocus","inputBlurHandler","deactivateFocus","inputInputHandler","handleInput","setPointerXOffset","evt","setTransformOrigin","textFieldInteractionHandler","handleTextFieldInteraction","validationAttributeChangeHandler","attributesList","handleValidationAttributeChange","Object","defineProperty","get","prototype","type","getNativeInput","indexOf","shouldAlwaysFloat","getValue","isBadInput","isValid","addClass","undefined","removeClass","hasClass","setInputAttr","removeInputAttr","registerTextFieldInteractionHandler","deregisterTextFieldInteractionHandler","registerInputInteractionHandler","deregisterInputInteractionHandler","registerValidationAttributeChangeHandler","MutationObserver","deregisterValidationAttributeChangeHandler","activateLineRipple","deactivateLineRipple","setLineRippleTransformOrigin","shakeLabel","floatLabel","setLabelRequired","hasLabel","getLabelWidth","hasOutline","notchOutline","closeOutline","init","required","shouldFloat","styleFloating","POINTERDOWN_EVENTS_1","__values","POINTERDOWN_EVENTS_1_1","next","done","evtType","value","INTERACTION_EVENTS_1","INTERACTION_EVENTS_1_1","validationObserver","setcharacterCounter","length","destroy","POINTERDOWN_EVENTS_2","POINTERDOWN_EVENTS_2_1","INTERACTION_EVENTS_2","INTERACTION_EVENTS_2_1","nativeInput","disabled","some","attributeName","styleValidity","openNotch","labelWidth","LABEL_SCALE","styleFocused","shouldShake","isPersistent","isValidation","showToScreenReader","isDisabled","touches","targetEvent","targetClientRect","target","getBoundingClientRect","normalizedX","clientX","left","autoCompleteFocus","setValue","isNativeInputValid","setValid","setValidateOnValueChange","shouldValidate","getValidateOnValueChange","setUseNativeValidation","setDisabled","styleDisabled","setHelperTextContent","content","setContent","setLeadingIconAriaLabel","label","setAriaLabel","setLeadingIconContent","setTrailingIconAriaLabel","setTrailingIconContent","currentLength","maxLength","Error","setCounterValue","validity","badInput","INVALID","setValidity","helperTextValidation","helperTextVisible","isVisible","helperTextId","getId","ARIA_DESCRIBEDBY","FOCUSED","_a","DISABLED","isFloating","LABEL_FLOATING"],"sources":["foundation.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}