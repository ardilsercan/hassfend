{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport { html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { array, assert, assign, number, object, optional, string } from \"superstruct\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport \"../../../../components/entity/ha-entities-picker\";\nimport \"../../../../components/ha-form/ha-form\";\nimport { filterLogbookCompatibleEntities } from \"../../../../data/logbook\";\nimport { baseLovelaceCardConfig } from \"../structs/base-card-struct\";\nimport { DEFAULT_HOURS_TO_SHOW } from \"../../cards/hui-logbook-card\";\nconst cardConfigStruct = assign(baseLovelaceCardConfig, object({\n  entities: optional(array(string())),\n  title: optional(string()),\n  hours_to_show: optional(number()),\n  theme: optional(string())\n}));\nconst SCHEMA = [{\n  name: \"title\",\n  selector: {\n    text: {}\n  }\n}, {\n  name: \"\",\n  type: \"grid\",\n  schema: [{\n    name: \"theme\",\n    selector: {\n      theme: {}\n    }\n  }, {\n    name: \"hours_to_show\",\n    default: DEFAULT_HOURS_TO_SHOW,\n    selector: {\n      number: {\n        mode: \"box\",\n        min: 1\n      }\n    }\n  }]\n}];\nexport let HuiLogbookCardEditor = _decorate([customElement(\"hui-logbook-card-editor\")], function (_initialize, _LitElement) {\n  class HuiLogbookCardEditor extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HuiLogbookCardEditor,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_config\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"setConfig\",\n      value: function setConfig(config) {\n        assert(config, cardConfigStruct);\n        this._config = config;\n      }\n    }, {\n      kind: \"get\",\n      key: \"_entities\",\n      value: function _entities() {\n        return this._config.entities || [];\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this.hass || !this._config) {\n          return nothing;\n        }\n        return html`\n      <ha-form\n        .hass=${this.hass}\n        .data=${this._config}\n        .schema=${SCHEMA}\n        .computeLabel=${this._computeLabelCallback}\n        @value-changed=${this._valueChanged}\n      ></ha-form>\n      <h3>\n        ${`${this.hass.localize(\"ui.panel.lovelace.editor.card.generic.entities\")} (${this.hass.localize(\"ui.panel.lovelace.editor.card.config.required\")})`}\n      </h3>\n      <ha-entities-picker\n        .hass=${this.hass}\n        .value=${this._entities}\n        .entityFilter=${filterLogbookCompatibleEntities}\n        @value-changed=${this._entitiesChanged}\n      >\n      </ha-entities-picker>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_entitiesChanged\",\n      value: function _entitiesChanged(ev) {\n        this._config = {\n          ...this._config,\n          entities: ev.detail.value\n        };\n        fireEvent(this, \"config-changed\", {\n          config: this._config\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_valueChanged\",\n      value: function _valueChanged(ev) {\n        fireEvent(this, \"config-changed\", {\n          config: ev.detail.value\n        });\n      }\n    }, {\n      kind: \"field\",\n      key: \"_computeLabelCallback\",\n      value() {\n        return schema => {\n          switch (schema.name) {\n            case \"theme\":\n              return `${this.hass.localize(\"ui.panel.lovelace.editor.card.generic.theme\")} (${this.hass.localize(\"ui.panel.lovelace.editor.card.config.optional\")})`;\n            default:\n              return this.hass.localize(`ui.panel.lovelace.editor.card.generic.${schema.name}`);\n          }\n        };\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["html","LitElement","nothing","customElement","property","state","array","assert","assign","number","object","optional","string","fireEvent","filterLogbookCompatibleEntities","baseLovelaceCardConfig","DEFAULT_HOURS_TO_SHOW","cardConfigStruct","entities","title","hours_to_show","theme","SCHEMA","name","selector","text","type","schema","default","mode","min","HuiLogbookCardEditor","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","setConfig","config","_config","_entities","render","hass","_computeLabelCallback","_valueChanged","localize","_entitiesChanged","ev","detail"],"sources":["/Users/sercanardil/Desktop/frontend/src/panels/lovelace/editor/config-elements/hui-logbook-card-editor.ts"],"sourcesContent":["import { html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport {\n  array,\n  assert,\n  assign,\n  number,\n  object,\n  optional,\n  string,\n} from \"superstruct\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport \"../../../../components/entity/ha-entities-picker\";\nimport \"../../../../components/ha-form/ha-form\";\nimport type { SchemaUnion } from \"../../../../components/ha-form/types\";\nimport { filterLogbookCompatibleEntities } from \"../../../../data/logbook\";\nimport type { HomeAssistant } from \"../../../../types\";\nimport type { LogbookCardConfig } from \"../../cards/types\";\nimport type { LovelaceCardEditor } from \"../../types\";\nimport { baseLovelaceCardConfig } from \"../structs/base-card-struct\";\nimport { DEFAULT_HOURS_TO_SHOW } from \"../../cards/hui-logbook-card\";\n\nconst cardConfigStruct = assign(\n  baseLovelaceCardConfig,\n  object({\n    entities: optional(array(string())),\n    title: optional(string()),\n    hours_to_show: optional(number()),\n    theme: optional(string()),\n  })\n);\n\nconst SCHEMA = [\n  { name: \"title\", selector: { text: {} } },\n  {\n    name: \"\",\n    type: \"grid\",\n    schema: [\n      { name: \"theme\", selector: { theme: {} } },\n      {\n        name: \"hours_to_show\",\n        default: DEFAULT_HOURS_TO_SHOW,\n        selector: { number: { mode: \"box\", min: 1 } },\n      },\n    ],\n  },\n] as const;\n\n@customElement(\"hui-logbook-card-editor\")\nexport class HuiLogbookCardEditor\n  extends LitElement\n  implements LovelaceCardEditor\n{\n  @property({ attribute: false }) public hass?: HomeAssistant;\n\n  @state() private _config?: LogbookCardConfig;\n\n  public setConfig(config: LogbookCardConfig): void {\n    assert(config, cardConfigStruct);\n    this._config = config;\n  }\n\n  get _entities(): string[] {\n    return this._config!.entities || [];\n  }\n\n  protected render() {\n    if (!this.hass || !this._config) {\n      return nothing;\n    }\n\n    return html`\n      <ha-form\n        .hass=${this.hass}\n        .data=${this._config}\n        .schema=${SCHEMA}\n        .computeLabel=${this._computeLabelCallback}\n        @value-changed=${this._valueChanged}\n      ></ha-form>\n      <h3>\n        ${`${this.hass!.localize(\n          \"ui.panel.lovelace.editor.card.generic.entities\"\n        )} (${this.hass!.localize(\n          \"ui.panel.lovelace.editor.card.config.required\"\n        )})`}\n      </h3>\n      <ha-entities-picker\n        .hass=${this.hass}\n        .value=${this._entities}\n        .entityFilter=${filterLogbookCompatibleEntities}\n        @value-changed=${this._entitiesChanged}\n      >\n      </ha-entities-picker>\n    `;\n  }\n\n  private _entitiesChanged(ev: CustomEvent): void {\n    this._config = { ...this._config!, entities: ev.detail.value };\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n\n  private _valueChanged(ev: CustomEvent): void {\n    fireEvent(this, \"config-changed\", { config: ev.detail.value });\n  }\n\n  private _computeLabelCallback = (schema: SchemaUnion<typeof SCHEMA>) => {\n    switch (schema.name) {\n      case \"theme\":\n        return `${this.hass!.localize(\n          \"ui.panel.lovelace.editor.card.generic.theme\"\n        )} (${this.hass!.localize(\n          \"ui.panel.lovelace.editor.card.config.optional\"\n        )})`;\n      default:\n        return this.hass!.localize(\n          `ui.panel.lovelace.editor.card.generic.${schema.name}`\n        );\n    }\n  };\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-logbook-card-editor\": HuiLogbookCardEditor;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}