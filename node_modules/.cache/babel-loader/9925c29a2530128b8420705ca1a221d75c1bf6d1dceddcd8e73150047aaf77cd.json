{"ast":null,"code":"import { getCollection } from \"./collection.js\";\nimport { getServices } from \"./commands.js\";\nimport { debounce } from \"./util.js\";\nfunction processServiceRegistered(conn, store, event) {\n  var _a;\n  const state = store.state;\n  if (state === undefined) return;\n  const {\n    domain,\n    service\n  } = event.data;\n  if (!((_a = state.domain) === null || _a === void 0 ? void 0 : _a.service)) {\n    const domainInfo = Object.assign(Object.assign({}, state[domain]), {\n      [service]: {\n        description: \"\",\n        fields: {}\n      }\n    });\n    store.setState({\n      [domain]: domainInfo\n    });\n  }\n  debouncedFetchServices(conn, store);\n}\nfunction processServiceRemoved(state, event) {\n  if (state === undefined) return null;\n  const {\n    domain,\n    service\n  } = event.data;\n  const curDomainInfo = state[domain];\n  if (!curDomainInfo || !(service in curDomainInfo)) return null;\n  const domainInfo = {};\n  Object.keys(curDomainInfo).forEach(sKey => {\n    if (sKey !== service) domainInfo[sKey] = curDomainInfo[sKey];\n  });\n  return {\n    [domain]: domainInfo\n  };\n}\nconst debouncedFetchServices = debounce((conn, store) => fetchServices(conn).then(services => store.setState(services, true)), 5000);\nconst fetchServices = conn => getServices(conn);\nconst subscribeUpdates = (conn, store) => Promise.all([conn.subscribeEvents(ev => processServiceRegistered(conn, store, ev), \"service_registered\"), conn.subscribeEvents(store.action(processServiceRemoved), \"service_removed\")]).then(unsubs => () => unsubs.forEach(fn => fn()));\nexport const servicesColl = conn => getCollection(conn, \"_srv\", fetchServices, subscribeUpdates);\nexport const subscribeServices = (conn, onChange) => servicesColl(conn).subscribe(onChange);","map":{"version":3,"names":["getCollection","getServices","debounce","processServiceRegistered","conn","store","event","_a","state","undefined","domain","service","data","domainInfo","Object","assign","description","fields","setState","debouncedFetchServices","processServiceRemoved","curDomainInfo","keys","forEach","sKey","fetchServices","then","services","subscribeUpdates","Promise","all","subscribeEvents","ev","action","unsubs","fn","servicesColl","subscribeServices","onChange","subscribe"],"sources":["/Users/sercanardil/Desktop/frontend/node_modules/home-assistant-js-websocket/dist/services.js"],"sourcesContent":["import { getCollection } from \"./collection.js\";\nimport { getServices } from \"./commands.js\";\nimport { debounce } from \"./util.js\";\nfunction processServiceRegistered(conn, store, event) {\n    var _a;\n    const state = store.state;\n    if (state === undefined)\n        return;\n    const { domain, service } = event.data;\n    if (!((_a = state.domain) === null || _a === void 0 ? void 0 : _a.service)) {\n        const domainInfo = Object.assign(Object.assign({}, state[domain]), { [service]: { description: \"\", fields: {} } });\n        store.setState({ [domain]: domainInfo });\n    }\n    debouncedFetchServices(conn, store);\n}\nfunction processServiceRemoved(state, event) {\n    if (state === undefined)\n        return null;\n    const { domain, service } = event.data;\n    const curDomainInfo = state[domain];\n    if (!curDomainInfo || !(service in curDomainInfo))\n        return null;\n    const domainInfo = {};\n    Object.keys(curDomainInfo).forEach((sKey) => {\n        if (sKey !== service)\n            domainInfo[sKey] = curDomainInfo[sKey];\n    });\n    return { [domain]: domainInfo };\n}\nconst debouncedFetchServices = debounce((conn, store) => fetchServices(conn).then((services) => store.setState(services, true)), 5000);\nconst fetchServices = (conn) => getServices(conn);\nconst subscribeUpdates = (conn, store) => Promise.all([\n    conn.subscribeEvents((ev) => processServiceRegistered(conn, store, ev), \"service_registered\"),\n    conn.subscribeEvents(store.action(processServiceRemoved), \"service_removed\"),\n]).then((unsubs) => () => unsubs.forEach((fn) => fn()));\nexport const servicesColl = (conn) => getCollection(conn, \"_srv\", fetchServices, subscribeUpdates);\nexport const subscribeServices = (conn, onChange) => servicesColl(conn).subscribe(onChange);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}