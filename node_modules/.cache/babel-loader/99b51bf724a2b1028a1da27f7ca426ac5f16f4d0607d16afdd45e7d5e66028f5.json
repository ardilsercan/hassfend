{"ast":null,"code":"import { getExtendedEntityRegistryEntry } from \"./entity_registry\";\nimport { showEnterCodeDialogDialog } from \"../dialogs/enter-code/show-enter-code-dialog\";\nexport const FORMAT_TEXT = \"text\";\nexport const FORMAT_NUMBER = \"number\";\nexport let LockEntityFeature = /*#__PURE__*/function (LockEntityFeature) {\n  LockEntityFeature[LockEntityFeature[\"OPEN\"] = 1] = \"OPEN\";\n  return LockEntityFeature;\n}({});\nexport const callProtectedLockService = async (element, hass, stateObj, service) => {\n  var _lockRegistryEntry$op;\n  let code;\n  const lockRegistryEntry = await getExtendedEntityRegistryEntry(hass, stateObj.entity_id).catch(() => undefined);\n  const defaultCode = lockRegistryEntry === null || lockRegistryEntry === void 0 || (_lockRegistryEntry$op = lockRegistryEntry.options) === null || _lockRegistryEntry$op === void 0 || (_lockRegistryEntry$op = _lockRegistryEntry$op.lock) === null || _lockRegistryEntry$op === void 0 ? void 0 : _lockRegistryEntry$op.default_code;\n  if (stateObj.attributes.code_format && !defaultCode) {\n    const response = await showEnterCodeDialogDialog(element, {\n      codeFormat: \"text\",\n      codePattern: stateObj.attributes.code_format,\n      title: hass.localize(`ui.card.lock.${service}`),\n      submitText: hass.localize(`ui.card.lock.${service}`)\n    });\n    if (response == null) {\n      throw new Error(\"Code dialog closed\");\n    }\n    code = response;\n  }\n  await hass.callService(\"lock\", service, {\n    entity_id: stateObj.entity_id,\n    code\n  });\n};","map":{"version":3,"names":["getExtendedEntityRegistryEntry","showEnterCodeDialogDialog","FORMAT_TEXT","FORMAT_NUMBER","LockEntityFeature","callProtectedLockService","element","hass","stateObj","service","_lockRegistryEntry$op","code","lockRegistryEntry","entity_id","catch","undefined","defaultCode","options","lock","default_code","attributes","code_format","response","codeFormat","codePattern","title","localize","submitText","Error","callService"],"sources":["/Users/sercanardil/Desktop/frontend/src/data/lock.ts"],"sourcesContent":["import {\n  HassEntityAttributeBase,\n  HassEntityBase,\n} from \"home-assistant-js-websocket\";\nimport { getExtendedEntityRegistryEntry } from \"./entity_registry\";\nimport { showEnterCodeDialogDialog } from \"../dialogs/enter-code/show-enter-code-dialog\";\nimport { HomeAssistant } from \"../types\";\n\nexport const FORMAT_TEXT = \"text\";\nexport const FORMAT_NUMBER = \"number\";\n\nexport const enum LockEntityFeature {\n  OPEN = 1,\n}\n\ninterface LockEntityAttributes extends HassEntityAttributeBase {\n  code_format?: string;\n  changed_by?: string | null;\n}\n\nexport interface LockEntity extends HassEntityBase {\n  attributes: LockEntityAttributes;\n}\n\ntype ProtectedLockService = \"lock\" | \"unlock\" | \"open\";\n\nexport const callProtectedLockService = async (\n  element: HTMLElement,\n  hass: HomeAssistant,\n  stateObj: LockEntity,\n  service: ProtectedLockService\n) => {\n  let code: string | undefined;\n  const lockRegistryEntry = await getExtendedEntityRegistryEntry(\n    hass,\n    stateObj.entity_id\n  ).catch(() => undefined);\n  const defaultCode = lockRegistryEntry?.options?.lock?.default_code;\n\n  if (stateObj!.attributes.code_format && !defaultCode) {\n    const response = await showEnterCodeDialogDialog(element, {\n      codeFormat: \"text\",\n      codePattern: stateObj!.attributes.code_format,\n      title: hass.localize(`ui.card.lock.${service}`),\n      submitText: hass.localize(`ui.card.lock.${service}`),\n    });\n    if (response == null) {\n      throw new Error(\"Code dialog closed\");\n    }\n    code = response;\n  }\n\n  await hass.callService(\"lock\", service, {\n    entity_id: stateObj!.entity_id,\n    code,\n  });\n};\n"],"mappings":"AAIA,SAASA,8BAA8B,QAAQ,mBAAmB;AAClE,SAASC,yBAAyB,QAAQ,8CAA8C;AAGxF,OAAO,MAAMC,WAAW,GAAG,MAAM;AACjC,OAAO,MAAMC,aAAa,GAAG,QAAQ;AAErC,WAAkBC,iBAAiB,0BAAjBA,iBAAiB;EAAjBA,iBAAiB,CAAjBA,iBAAiB;EAAA,OAAjBA,iBAAiB;AAAA;AAenC,OAAO,MAAMC,wBAAwB,GAAG,MAAAA,CACtCC,OAAoB,EACpBC,IAAmB,EACnBC,QAAoB,EACpBC,OAA6B,KAC1B;EAAA,IAAAC,qBAAA;EACH,IAAIC,IAAwB;EAC5B,MAAMC,iBAAiB,GAAG,MAAMZ,8BAA8B,CAC5DO,IAAI,EACJC,QAAQ,CAACK,SACX,CAAC,CAACC,KAAK,CAAC,MAAMC,SAAS,CAAC;EACxB,MAAMC,WAAW,GAAGJ,iBAAiB,aAAjBA,iBAAiB,gBAAAF,qBAAA,GAAjBE,iBAAiB,CAAEK,OAAO,cAAAP,qBAAA,gBAAAA,qBAAA,GAA1BA,qBAAA,CAA4BQ,IAAI,cAAAR,qBAAA,uBAAhCA,qBAAA,CAAkCS,YAAY;EAElE,IAAIX,QAAQ,CAAEY,UAAU,CAACC,WAAW,IAAI,CAACL,WAAW,EAAE;IACpD,MAAMM,QAAQ,GAAG,MAAMrB,yBAAyB,CAACK,OAAO,EAAE;MACxDiB,UAAU,EAAE,MAAM;MAClBC,WAAW,EAAEhB,QAAQ,CAAEY,UAAU,CAACC,WAAW;MAC7CI,KAAK,EAAElB,IAAI,CAACmB,QAAQ,CAAE,gBAAejB,OAAQ,EAAC,CAAC;MAC/CkB,UAAU,EAAEpB,IAAI,CAACmB,QAAQ,CAAE,gBAAejB,OAAQ,EAAC;IACrD,CAAC,CAAC;IACF,IAAIa,QAAQ,IAAI,IAAI,EAAE;MACpB,MAAM,IAAIM,KAAK,CAAC,oBAAoB,CAAC;IACvC;IACAjB,IAAI,GAAGW,QAAQ;EACjB;EAEA,MAAMf,IAAI,CAACsB,WAAW,CAAC,MAAM,EAAEpB,OAAO,EAAE;IACtCI,SAAS,EAAEL,QAAQ,CAAEK,SAAS;IAC9BF;EACF,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}