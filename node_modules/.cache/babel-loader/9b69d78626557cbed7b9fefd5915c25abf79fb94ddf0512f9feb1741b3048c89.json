{"ast":null,"code":"import { getWeekNumber } from './helpers/get-week-number.js';\nimport { normalizeWeekday } from './helpers/normalize-weekday.js';\nimport { toUTCDate } from './helpers/to-utc-date.js';\nimport { toValidWeekday } from './helpers/to-valid-weekday.js';\nexport function calendar(init) {\n  const {\n    date,\n    dayFormat,\n    disabledDates = [],\n    disabledDays = [],\n    firstDayOfWeek = 0,\n    fullDateFormat,\n    locale = 'en-US',\n    max,\n    min,\n    showWeekNumber = false,\n    weekLabel = 'Week',\n    weekNumberType = 'first-4-day-week'\n  } = init || {};\n  const firstDayOfWeek2 = toValidWeekday(firstDayOfWeek);\n  const dateYear = date.getUTCFullYear();\n  const dateMonth = date.getUTCMonth();\n  const firstDateOfMonth = toUTCDate(dateYear, dateMonth, 1);\n  const disabledDaysSet = new Set(disabledDays.map(n => normalizeWeekday(n, firstDayOfWeek2, showWeekNumber)));\n  const disabledDatesSet = new Set(disabledDates.map(n => +n));\n  const calendarKey = [firstDateOfMonth.toJSON(), firstDayOfWeek2, locale, null == max ? '' : max.toJSON(), null == min ? '' : min.toJSON(), Array.from(disabledDaysSet).join(','), Array.from(disabledDatesSet).join(','), weekNumberType].filter(Boolean).join(':');\n  const firstDayOfWeekOffset = normalizeWeekday(firstDateOfMonth.getUTCDay(), firstDayOfWeek2, showWeekNumber);\n  const minTime = null == min ? +new Date('2000-01-01') : +min;\n  const maxTime = null == max ? +new Date('2100-12-31') : +max;\n  const colNum = showWeekNumber ? 8 : 7;\n  const totalDays = toUTCDate(dateYear, 1 + dateMonth, 0).getUTCDate();\n  const rows = [];\n  let cols = [];\n  let calendarComplete = false;\n  let curDay = 1;\n  for (const row of [0, 1, 2, 3, 4, 5]) {\n    for (const col of [0, 1, 2, 3, 4, 5, 6].concat(colNum === 7 ? [] : [7])) {\n      const idx = col + row * colNum;\n      if (!calendarComplete && showWeekNumber && col === 0) {\n        const weekNumberOffset = row < 1 ? firstDayOfWeek2 : 0;\n        const weekNumber = getWeekNumber(weekNumberType, toUTCDate(dateYear, dateMonth, curDay - weekNumberOffset));\n        const wkLabel = `${weekLabel} ${weekNumber}`;\n        cols.push({\n          fullDate: null,\n          label: wkLabel,\n          value: `${weekNumber}`,\n          key: `${calendarKey}:${wkLabel}`,\n          disabled: true\n        });\n        continue;\n      }\n      if (calendarComplete || idx < firstDayOfWeekOffset) {\n        cols.push({\n          fullDate: null,\n          label: '',\n          value: '',\n          key: `${calendarKey}:${idx}`,\n          disabled: true\n        });\n        continue;\n      }\n      const curDate = toUTCDate(dateYear, dateMonth, curDay);\n      const curTime = +curDate;\n      const isDisabledDay = disabledDaysSet.has(col) || disabledDatesSet.has(curTime) || curTime < minTime || curTime > maxTime;\n      if (isDisabledDay) disabledDatesSet.add(curTime);\n      cols.push({\n        fullDate: curDate,\n        label: fullDateFormat(curDate),\n        value: dayFormat(curDate),\n        key: `${calendarKey}:${curDate.toJSON()}`,\n        disabled: isDisabledDay\n      });\n      curDay += 1;\n      if (curDay > totalDays) calendarComplete = true;\n    }\n    rows.push(cols);\n    cols = [];\n  }\n  return {\n    disabledDatesSet,\n    calendar: rows,\n    disabledDaysSet: new Set(disabledDays.map(n => toValidWeekday(n))),\n    key: calendarKey\n  };\n}","map":{"version":3,"names":["getWeekNumber","normalizeWeekday","toUTCDate","toValidWeekday","calendar","init","date","dayFormat","disabledDates","disabledDays","firstDayOfWeek","fullDateFormat","locale","max","min","showWeekNumber","weekLabel","weekNumberType","firstDayOfWeek2","dateYear","getUTCFullYear","dateMonth","getUTCMonth","firstDateOfMonth","disabledDaysSet","Set","map","n","disabledDatesSet","calendarKey","toJSON","Array","from","join","filter","Boolean","firstDayOfWeekOffset","getUTCDay","minTime","Date","maxTime","colNum","totalDays","getUTCDate","rows","cols","calendarComplete","curDay","row","col","concat","idx","weekNumberOffset","weekNumber","wkLabel","push","fullDate","label","value","key","disabled","curDate","curTime","isDisabledDay","has","add"],"sources":["../../src/calendar/calendar.ts"],"sourcesContent":["import { getWeekNumber } from './helpers/get-week-number.js';\nimport { normalizeWeekday } from './helpers/normalize-weekday.js';\nimport { toUTCDate } from './helpers/to-utc-date.js';\nimport { toValidWeekday } from './helpers/to-valid-weekday.js';\nimport type { Calendar, CalendarDay, CalendarInit } from './typings.js';\n\n//  Month Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec\n//  Days   31  28  31  30  31  30  31  31  30  31  30  31\n//   31?    0       2       4       6   7       9      11\n//   30?                3       5           8      10\n//  Feb?        1\n//  Su Mo Tu We Th Fr Sa    startDay - _firstDayOfWeek\n//                  1  2        5 - 0 < 0 ? 6 : 5 - 0;\n//  Mo Tu We Th Fr Sa Su\n//               1  2  3        5 - 1 < 0 ? 6 : 5 - 1;\n//  Tu We Th Fr Sa Su Mo\n//            1  2  3  4        5 - 2 < 0 ? 6 : 5 - 2;\n//  We Th Fr Sa Su Mo Tu\n//         1  2  3  4  5        5 - 3 < 0 ? 6 : 5 - 3;\n//  Th Fr Sa Su Mo Tu We\n//      1  2  3  4  5  6        5 - 4 < 0 ? 6 : 5 - 4;\n//  Fr Sa Su Mo Tu We Th\n//   1  2  3  4  5  6  7        5 - 5 < 0 ? 6 : 5 - 5;\n//  Sa Su Mo Tu We Th Fr\n//                     1        5 - 6 < 0 ? 6 : 5 - 6;\nexport function calendar(init: CalendarInit): Calendar {\n  const {\n    date,\n    dayFormat,\n    disabledDates = [],\n    disabledDays = [],\n    firstDayOfWeek = 0,\n    fullDateFormat,\n    locale = 'en-US',\n    max,\n    min,\n    showWeekNumber = false,\n    weekLabel = 'Week',\n    weekNumberType = 'first-4-day-week',\n  }: CalendarInit = init || {};\n\n  const firstDayOfWeek2 = toValidWeekday(firstDayOfWeek);\n\n  const dateYear = date.getUTCFullYear();\n  const dateMonth = date.getUTCMonth();\n  const firstDateOfMonth = toUTCDate(dateYear, dateMonth, 1);\n\n  const disabledDaysSet = new Set(\n    disabledDays.map(n => normalizeWeekday(n, firstDayOfWeek2, showWeekNumber))\n  );\n  const disabledDatesSet = new Set(disabledDates.map(n => +n));\n  const calendarKey = [\n    firstDateOfMonth.toJSON(),\n    firstDayOfWeek2,\n    locale,\n    null == max ? '' : max.toJSON(),\n    null == min ? '' : min.toJSON(),\n    Array.from(disabledDaysSet).join(','),\n    Array.from(disabledDatesSet).join(','),\n    weekNumberType,\n  ].filter(Boolean).join(':');\n\n  const firstDayOfWeekOffset =\n    normalizeWeekday(firstDateOfMonth.getUTCDay(), firstDayOfWeek2, showWeekNumber);\n  const minTime = null == min ? +new Date('2000-01-01') : +min;\n  const maxTime = null == max ? +new Date('2100-12-31') : +max;\n  const colNum = showWeekNumber ? 8 : 7;\n  const totalDays = toUTCDate(dateYear, 1 + dateMonth, 0).getUTCDate();\n  const rows: CalendarDay[][] = [];\n\n  let cols: CalendarDay[] = [];\n  let calendarComplete = false;\n  let curDay = 1;\n\n  /**\n   * This would be constant since there are only in total of 6x7 cells in calendar month.\n   * Only some cells will be filled with day depends on the value of `totalDays`.\n   * Others will be empty (not-filled cells).\n   */\n  for (const row of [0, 1, 2, 3, 4, 5]) {\n    for (const col of ([0, 1, 2, 3, 4, 5, 6].concat(colNum === 7 ? [] : [7]))) {\n      const idx = col + (row * colNum);\n\n      // Week label when week number needs to be shown\n      if (!calendarComplete && showWeekNumber && col === 0) {\n        const weekNumberOffset = row < 1 ? firstDayOfWeek2 : 0;\n\n        const weekNumber = getWeekNumber(\n          weekNumberType,\n          toUTCDate(dateYear, dateMonth, curDay - weekNumberOffset)\n        );\n        const wkLabel = `${weekLabel} ${weekNumber}`;\n\n        cols.push({\n          fullDate: null,\n          label: wkLabel,\n          value: `${weekNumber}`,\n          key: `${calendarKey}:${wkLabel}`,\n          disabled: true,\n        });\n\n        continue;\n      }\n\n      // Empty days before and after the actual calendar days of the month\n      if (calendarComplete || idx < firstDayOfWeekOffset) {\n        cols.push({\n          fullDate: null,\n          label: '',\n          value: '',\n          key: `${calendarKey}:${idx}`,\n          disabled: true,\n        });\n\n        continue;\n      }\n\n      const curDate = toUTCDate(dateYear, dateMonth, curDay);\n      const curTime = +curDate;\n      const isDisabledDay =\n        disabledDaysSet.has(col) ||\n        disabledDatesSet.has(curTime) ||\n        (curTime < minTime || curTime > maxTime);\n\n      if (isDisabledDay) disabledDatesSet.add(curTime);\n\n      cols.push({\n        fullDate: curDate,\n        /** NOTE: Stripping LTR mark away for x-browser compatibilities and consistency reason */\n        label: fullDateFormat(curDate),\n        value: dayFormat(curDate),\n        key: `${calendarKey}:${curDate.toJSON()}`,\n        disabled: isDisabledDay,\n      });\n\n      curDay += 1;\n\n      if (curDay > totalDays) calendarComplete = true;\n    }\n\n    rows.push(cols);\n    cols = [];\n  }\n\n  return {\n    disabledDatesSet,\n    calendar: rows,\n    disabledDaysSet: new Set(disabledDays.map(n => toValidWeekday(n))),\n    key: calendarKey,\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}