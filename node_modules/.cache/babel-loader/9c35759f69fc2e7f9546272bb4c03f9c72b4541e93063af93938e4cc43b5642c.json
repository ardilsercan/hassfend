{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { computeAttributeNameDisplay } from \"../common/entity/compute_attribute_display\";\nimport { STATE_ATTRIBUTES } from \"../data/entity_attributes\";\nimport { haStyle } from \"../resources/styles\";\nimport \"./ha-attribute-value\";\nimport \"./ha-expansion-panel\";\nlet HaAttributes = _decorate([customElement(\"ha-attributes\")], function (_initialize, _LitElement) {\n  class HaAttributes extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaAttributes,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"stateObj\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: \"extra-filters\"\n      })],\n      key: \"extraFilters\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_expanded\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"get\",\n      key: \"_filteredAttributes\",\n      value: function _filteredAttributes() {\n        return this.computeDisplayAttributes(STATE_ATTRIBUTES.concat(this.extraFilters ? this.extraFilters.split(\",\") : []));\n      }\n    }, {\n      kind: \"method\",\n      key: \"willUpdate\",\n      value: function willUpdate(changedProperties) {\n        if (changedProperties.has(\"extraFilters\") || changedProperties.has(\"stateObj\")) {\n          this.toggleAttribute(\"empty\", this._filteredAttributes.length === 0);\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this.stateObj) {\n          return nothing;\n        }\n        const attributes = this._filteredAttributes;\n        if (attributes.length === 0) {\n          return nothing;\n        }\n        return html`\n      <ha-expansion-panel\n        .header=${this.hass.localize(\"ui.components.attributes.expansion_header\")}\n        outlined\n        @expanded-will-change=${this.expandedChanged}\n      >\n        <div class=\"attribute-container\">\n          ${this._expanded ? html`\n                ${attributes.map(attribute => html`\n                    <div class=\"data-entry\">\n                      <div class=\"key\">\n                        ${computeAttributeNameDisplay(this.hass.localize, this.stateObj, this.hass.entities, attribute)}\n                      </div>\n                      <div class=\"value\">\n                        <ha-attribute-value\n                          .hass=${this.hass}\n                          .attribute=${attribute}\n                          .stateObj=${this.stateObj}\n                        ></ha-attribute-value>\n                      </div>\n                    </div>\n                  `)}\n              ` : \"\"}\n        </div>\n      </ha-expansion-panel>\n      ${this.stateObj.attributes.attribution ? html`\n            <div class=\"attribution\">\n              ${this.stateObj.attributes.attribution}\n            </div>\n          ` : \"\"}\n    `;\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [haStyle, css`\n        .attribute-container {\n          margin-bottom: 8px;\n          direction: ltr;\n        }\n        .data-entry {\n          display: flex;\n          flex-direction: row;\n          justify-content: space-between;\n        }\n        .data-entry .value {\n          max-width: 60%;\n          overflow-wrap: break-word;\n          text-align: right;\n        }\n        .key {\n          flex-grow: 1;\n        }\n        .attribution {\n          color: var(--secondary-text-color);\n          text-align: center;\n          margin-top: 16px;\n        }\n        hr {\n          border-color: var(--divider-color);\n          border-bottom: none;\n          margin: 16px 0;\n        }\n      `];\n      }\n    }, {\n      kind: \"method\",\n      key: \"computeDisplayAttributes\",\n      value: function computeDisplayAttributes(filtersArray) {\n        if (!this.stateObj) {\n          return [];\n        }\n        return Object.keys(this.stateObj.attributes).filter(key => filtersArray.indexOf(key) === -1);\n      }\n    }, {\n      kind: \"method\",\n      key: \"expandedChanged\",\n      value: function expandedChanged(ev) {\n        this._expanded = ev.detail.expanded;\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","nothing","customElement","property","state","computeAttributeNameDisplay","STATE_ATTRIBUTES","haStyle","HaAttributes","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","_filteredAttributes","computeDisplayAttributes","concat","extraFilters","split","willUpdate","changedProperties","has","toggleAttribute","length","render","stateObj","attributes","hass","localize","expandedChanged","_expanded","map","entities","attribution","static","styles","filtersArray","Object","keys","filter","indexOf","ev","detail","expanded"],"sources":["/workspaces/frontend/src/components/ha-attributes.ts"],"sourcesContent":["import { HassEntity } from \"home-assistant-js-websocket\";\nimport {\n  css,\n  CSSResultGroup,\n  html,\n  LitElement,\n  nothing,\n  PropertyValues,\n} from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { computeAttributeNameDisplay } from \"../common/entity/compute_attribute_display\";\nimport { STATE_ATTRIBUTES } from \"../data/entity_attributes\";\nimport { haStyle } from \"../resources/styles\";\nimport { HomeAssistant } from \"../types\";\nimport \"./ha-attribute-value\";\nimport \"./ha-expansion-panel\";\n\n@customElement(\"ha-attributes\")\nclass HaAttributes extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public stateObj?: HassEntity;\n\n  @property({ attribute: \"extra-filters\" }) public extraFilters?: string;\n\n  @state() private _expanded = false;\n\n  private get _filteredAttributes() {\n    return this.computeDisplayAttributes(\n      STATE_ATTRIBUTES.concat(\n        this.extraFilters ? this.extraFilters.split(\",\") : []\n      )\n    );\n  }\n\n  protected willUpdate(changedProperties: PropertyValues): void {\n    if (\n      changedProperties.has(\"extraFilters\") ||\n      changedProperties.has(\"stateObj\")\n    ) {\n      this.toggleAttribute(\"empty\", this._filteredAttributes.length === 0);\n    }\n  }\n\n  protected render() {\n    if (!this.stateObj) {\n      return nothing;\n    }\n\n    const attributes = this._filteredAttributes;\n\n    if (attributes.length === 0) {\n      return nothing;\n    }\n\n    return html`\n      <ha-expansion-panel\n        .header=${this.hass.localize(\n          \"ui.components.attributes.expansion_header\"\n        )}\n        outlined\n        @expanded-will-change=${this.expandedChanged}\n      >\n        <div class=\"attribute-container\">\n          ${this._expanded\n            ? html`\n                ${attributes.map(\n                  (attribute) => html`\n                    <div class=\"data-entry\">\n                      <div class=\"key\">\n                        ${computeAttributeNameDisplay(\n                          this.hass.localize,\n                          this.stateObj!,\n                          this.hass.entities,\n                          attribute\n                        )}\n                      </div>\n                      <div class=\"value\">\n                        <ha-attribute-value\n                          .hass=${this.hass}\n                          .attribute=${attribute}\n                          .stateObj=${this.stateObj}\n                        ></ha-attribute-value>\n                      </div>\n                    </div>\n                  `\n                )}\n              `\n            : \"\"}\n        </div>\n      </ha-expansion-panel>\n      ${this.stateObj.attributes.attribution\n        ? html`\n            <div class=\"attribution\">\n              ${this.stateObj.attributes.attribution}\n            </div>\n          `\n        : \"\"}\n    `;\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyle,\n      css`\n        .attribute-container {\n          margin-bottom: 8px;\n          direction: ltr;\n        }\n        .data-entry {\n          display: flex;\n          flex-direction: row;\n          justify-content: space-between;\n        }\n        .data-entry .value {\n          max-width: 60%;\n          overflow-wrap: break-word;\n          text-align: right;\n        }\n        .key {\n          flex-grow: 1;\n        }\n        .attribution {\n          color: var(--secondary-text-color);\n          text-align: center;\n          margin-top: 16px;\n        }\n        hr {\n          border-color: var(--divider-color);\n          border-bottom: none;\n          margin: 16px 0;\n        }\n      `,\n    ];\n  }\n\n  private computeDisplayAttributes(filtersArray: string[]): string[] {\n    if (!this.stateObj) {\n      return [];\n    }\n    return Object.keys(this.stateObj.attributes).filter(\n      (key) => filtersArray.indexOf(key) === -1\n    );\n  }\n\n  private expandedChanged(ev) {\n    this._expanded = ev.detail.expanded;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-attributes\": HaAttributes;\n  }\n}\n"],"mappings":";AACA,SACEA,GAAG,EAEHC,IAAI,EACJC,UAAU,EACVC,OAAO,QAEF,KAAK;AACZ,SAASC,aAAa,EAAEC,QAAQ,EAAEC,KAAK,QAAQ,gBAAgB;AAC/D,SAASC,2BAA2B,QAAQ,4CAA4C;AACxF,SAASC,gBAAgB,QAAQ,2BAA2B;AAC5D,SAASC,OAAO,QAAQ,qBAAqB;AAE7C,OAAO,sBAAsB;AAC7B,OAAO,sBAAsB;AAAC,IAGxBC,YAAY,GAAAC,SAAA,EADjBP,aAAa,CAAC,eAAe,CAAC,aAAAQ,WAAA,EAAAC,WAAA;EAA/B,MACMH,YAAY,SAAAG,WAAA,CAAoB;IAAAC,YAAA,GAAAC,IAAA;MAAA,SAAAA,IAAA;MAAAH,WAAA;IAAA;EAkItC;EAAC;IAAAI,CAAA,EAlIKN,YAAY;IAAAO,CAAA;MAAAC,IAAA;MAAAC,UAAA,GACfd,QAAQ,CAAC;QAAEe,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAC,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAE9Bd,QAAQ,CAAC;QAAEe,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAC,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAE9Bd,QAAQ,CAAC;QAAEe,SAAS,EAAE;MAAgB,CAAC,CAAC;MAAAC,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAExCb,KAAK,CAAC,CAAC;MAAAe,GAAA;MAAAC,MAAA;QAAA,OAAqB,KAAK;MAAA;IAAA;MAAAJ,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAElC,SAAAC,oBAAA,EAAkC;QAChC,OAAO,IAAI,CAACC,wBAAwB,CAClChB,gBAAgB,CAACiB,MAAM,CACrB,IAAI,CAACC,YAAY,GAAG,IAAI,CAACA,YAAY,CAACC,KAAK,CAAC,GAAG,CAAC,GAAG,EACrD,CACF,CAAC;MACH;IAAC;MAAAT,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAM,WAAqBC,iBAAiC,EAAQ;QAC5D,IACEA,iBAAiB,CAACC,GAAG,CAAC,cAAc,CAAC,IACrCD,iBAAiB,CAACC,GAAG,CAAC,UAAU,CAAC,EACjC;UACA,IAAI,CAACC,eAAe,CAAC,OAAO,EAAE,IAAI,CAACR,mBAAmB,CAACS,MAAM,KAAK,CAAC,CAAC;QACtE;MACF;IAAC;MAAAd,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAW,OAAA,EAAmB;QACjB,IAAI,CAAC,IAAI,CAACC,QAAQ,EAAE;UAClB,OAAO/B,OAAO;QAChB;QAEA,MAAMgC,UAAU,GAAG,IAAI,CAACZ,mBAAmB;QAE3C,IAAIY,UAAU,CAACH,MAAM,KAAK,CAAC,EAAE;UAC3B,OAAO7B,OAAO;QAChB;QAEA,OAAOF,IAAK;AAChB;AACA,kBAAkB,IAAI,CAACmC,IAAI,CAACC,QAAQ,CAC1B,2CACF,CAAE;AACV;AACA,gCAAgC,IAAI,CAACC,eAAgB;AACrD;AACA;AACA,YAAY,IAAI,CAACC,SAAS,GACZtC,IAAK;AACnB,kBAAkBkC,UAAU,CAACK,GAAG,CACbpB,SAAS,IAAKnB,IAAK;AACtC;AACA;AACA,0BAA0BM,2BAA2B,CAC3B,IAAI,CAAC6B,IAAI,CAACC,QAAQ,EAClB,IAAI,CAACH,QAAQ,EACb,IAAI,CAACE,IAAI,CAACK,QAAQ,EAClBrB,SACF,CAAE;AAC1B;AACA;AACA;AACA,kCAAkC,IAAI,CAACgB,IAAK;AAC5C,uCAAuChB,SAAU;AACjD,sCAAsC,IAAI,CAACc,QAAS;AACpD;AACA;AACA;AACA,mBACgB,CAAE;AAClB,eAAe,GACD,EAAG;AACjB;AACA;AACA,QAAQ,IAAI,CAACA,QAAQ,CAACC,UAAU,CAACO,WAAW,GAClCzC,IAAK;AACf;AACA,gBAAgB,IAAI,CAACiC,QAAQ,CAACC,UAAU,CAACO,WAAY;AACrD;AACA,WAAW,GACD,EAAG;AACb,KAAK;MACH;IAAC;MAAAxB,IAAA;MAAAyB,MAAA;MAAAtB,GAAA;MAAAC,KAAA,EAED,SAAAsB,OAAA,EAAoC;QAClC,OAAO,CACLnC,OAAO,EACPT,GAAI;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,CACF;MACH;IAAC;MAAAkB,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAE,yBAAiCqB,YAAsB,EAAY;QACjE,IAAI,CAAC,IAAI,CAACX,QAAQ,EAAE;UAClB,OAAO,EAAE;QACX;QACA,OAAOY,MAAM,CAACC,IAAI,CAAC,IAAI,CAACb,QAAQ,CAACC,UAAU,CAAC,CAACa,MAAM,CAChD3B,GAAG,IAAKwB,YAAY,CAACI,OAAO,CAAC5B,GAAG,CAAC,KAAK,CAAC,CAC1C,CAAC;MACH;IAAC;MAAAH,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAgB,gBAAwBY,EAAE,EAAE;QAC1B,IAAI,CAACX,SAAS,GAAGW,EAAE,CAACC,MAAM,CAACC,QAAQ;MACrC;IAAC;EAAA;AAAA,GAjIwBlD,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}