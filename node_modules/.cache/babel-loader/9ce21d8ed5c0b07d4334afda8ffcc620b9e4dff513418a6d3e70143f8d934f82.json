{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport \"@material/mwc-button/mwc-button\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport \"../../../../components/ha-alert\";\nimport \"../../../../components/ha-area-picker\";\nimport \"../../../../components/ha-dialog\";\nimport \"../../../../components/ha-textfield\";\nimport { computeDeviceName } from \"../../../../data/device_registry\";\nimport { haStyle, haStyleDialog } from \"../../../../resources/styles\";\nlet DialogDeviceRegistryDetail = _decorate([customElement(\"dialog-device-registry-detail\")], function (_initialize, _LitElement) {\n  class DialogDeviceRegistryDetail extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: DialogDeviceRegistryDetail,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_nameByUser\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_error\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_params\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_areaId\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_disabledBy\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_submitting\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"method\",\n      key: \"showDialog\",\n      value: async function showDialog(params) {\n        this._params = params;\n        this._error = undefined;\n        this._nameByUser = this._params.device.name_by_user || \"\";\n        this._areaId = this._params.device.area_id || \"\";\n        this._disabledBy = this._params.device.disabled_by;\n        await this.updateComplete;\n      }\n    }, {\n      kind: \"method\",\n      key: \"closeDialog\",\n      value: function closeDialog() {\n        this._error = \"\";\n        this._params = undefined;\n        fireEvent(this, \"dialog-closed\", {\n          dialog: this.localName\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this._params) {\n          return nothing;\n        }\n        const device = this._params.device;\n        return html`\n      <ha-dialog\n        open\n        @closed=${this.closeDialog}\n        .heading=${computeDeviceName(device, this.hass)}\n      >\n        <div>\n          ${this._error ? html`<ha-alert alert-type=\"error\">${this._error}</ha-alert> ` : \"\"}\n          <div class=\"form\">\n            <ha-textfield\n              .value=${this._nameByUser}\n              @input=${this._nameChanged}\n              .label=${this.hass.localize(\"ui.dialogs.device-registry-detail.name\")}\n              .placeholder=${device.name || \"\"}\n              .disabled=${this._submitting}\n              dialogInitialFocus\n            ></ha-textfield>\n            <ha-area-picker\n              .hass=${this.hass}\n              .value=${this._areaId}\n              @value-changed=${this._areaPicked}\n            ></ha-area-picker>\n            <div class=\"row\">\n              <ha-switch\n                .checked=${!this._disabledBy}\n                .disabled=${this._params.device.disabled_by === \"config_entry\"}\n                @change=${this._disabledByChanged}\n              >\n              </ha-switch>\n              <div>\n                <div>\n                  ${this.hass.localize(\"ui.dialogs.device-registry-detail.enabled_label\", {\n          type: this.hass.localize(`ui.dialogs.device-registry-detail.type.${device.entry_type || \"device\"}`)\n        })}\n                </div>\n                <div class=\"secondary\">\n                  ${this._disabledBy && this._disabledBy !== \"user\" ? this.hass.localize(\"ui.dialogs.device-registry-detail.enabled_cause\", {\n          type: this.hass.localize(`ui.dialogs.device-registry-detail.type.${device.entry_type || \"device\"}`),\n          cause: this.hass.localize(`config_entry.disabled_by.${this._disabledBy}`)\n        }) : \"\"}\n                  ${this.hass.localize(\"ui.dialogs.device-registry-detail.enabled_description\")}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <mwc-button\n          slot=\"secondaryAction\"\n          @click=${this.closeDialog}\n          .disabled=${this._submitting}\n        >\n          ${this.hass.localize(\"ui.common.cancel\")}\n        </mwc-button>\n        <mwc-button\n          slot=\"primaryAction\"\n          @click=${this._updateEntry}\n          .disabled=${this._submitting}\n        >\n          ${this.hass.localize(\"ui.dialogs.device-registry-detail.update\")}\n        </mwc-button>\n      </ha-dialog>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_nameChanged\",\n      value: function _nameChanged(ev) {\n        this._error = undefined;\n        this._nameByUser = ev.target.value;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_areaPicked\",\n      value: function _areaPicked(event) {\n        this._areaId = event.detail.value;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_disabledByChanged\",\n      value: function _disabledByChanged(ev) {\n        this._disabledBy = ev.target.checked ? null : \"user\";\n      }\n    }, {\n      kind: \"method\",\n      key: \"_updateEntry\",\n      value: async function _updateEntry() {\n        this._submitting = true;\n        try {\n          await this._params.updateEntry({\n            name_by_user: this._nameByUser.trim() || null,\n            area_id: this._areaId || null,\n            disabled_by: this._disabledBy || null\n          });\n          this.closeDialog();\n        } catch (err) {\n          this._error = err.message || this.hass.localize(\"ui.dialogs.device-registry-detail.unknown_error\");\n        } finally {\n          this._submitting = false;\n        }\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [haStyle, haStyleDialog, css`\n        mwc-button.warning {\n          margin-right: auto;\n          margin-inline-end: auto;\n          margin-inline-start: initial;\n        }\n        ha-textfield {\n          display: block;\n          margin-bottom: 16px;\n        }\n        ha-switch {\n          margin-right: 16px;\n          margin-inline-end: 16px;\n          margin-inline-start: initial;\n          direction: var(--direction);\n        }\n        .row {\n          margin-top: 8px;\n          color: var(--primary-text-color);\n          display: flex;\n          align-items: center;\n        }\n      `];\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","nothing","customElement","property","state","fireEvent","computeDeviceName","haStyle","haStyleDialog","DialogDeviceRegistryDetail","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","showDialog","params","_params","_error","undefined","_nameByUser","device","name_by_user","_areaId","area_id","_disabledBy","disabled_by","updateComplete","closeDialog","dialog","localName","render","hass","_nameChanged","localize","name","_submitting","_areaPicked","_disabledByChanged","type","entry_type","cause","_updateEntry","ev","target","event","detail","checked","updateEntry","trim","err","message","static","styles"],"sources":["/workspaces/frontend/src/panels/config/devices/device-registry-detail/dialog-device-registry-detail.ts"],"sourcesContent":["import \"@material/mwc-button/mwc-button\";\nimport { css, CSSResultGroup, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport \"../../../../components/ha-alert\";\nimport \"../../../../components/ha-area-picker\";\nimport \"../../../../components/ha-dialog\";\nimport type { HaSwitch } from \"../../../../components/ha-switch\";\nimport \"../../../../components/ha-textfield\";\nimport {\n  computeDeviceName,\n  DeviceRegistryEntry,\n} from \"../../../../data/device_registry\";\nimport { haStyle, haStyleDialog } from \"../../../../resources/styles\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { DeviceRegistryDetailDialogParams } from \"./show-dialog-device-registry-detail\";\n\n@customElement(\"dialog-device-registry-detail\")\nclass DialogDeviceRegistryDetail extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @state() private _nameByUser!: string;\n\n  @state() private _error?: string;\n\n  @state() private _params?: DeviceRegistryDetailDialogParams;\n\n  @state() private _areaId!: string;\n\n  @state() private _disabledBy!: DeviceRegistryEntry[\"disabled_by\"];\n\n  @state() private _submitting = false;\n\n  public async showDialog(\n    params: DeviceRegistryDetailDialogParams\n  ): Promise<void> {\n    this._params = params;\n    this._error = undefined;\n    this._nameByUser = this._params.device.name_by_user || \"\";\n    this._areaId = this._params.device.area_id || \"\";\n    this._disabledBy = this._params.device.disabled_by;\n    await this.updateComplete;\n  }\n\n  public closeDialog(): void {\n    this._error = \"\";\n    this._params = undefined;\n    fireEvent(this, \"dialog-closed\", { dialog: this.localName });\n  }\n\n  protected render() {\n    if (!this._params) {\n      return nothing;\n    }\n    const device = this._params.device;\n    return html`\n      <ha-dialog\n        open\n        @closed=${this.closeDialog}\n        .heading=${computeDeviceName(device, this.hass)}\n      >\n        <div>\n          ${this._error\n            ? html`<ha-alert alert-type=\"error\">${this._error}</ha-alert> `\n            : \"\"}\n          <div class=\"form\">\n            <ha-textfield\n              .value=${this._nameByUser}\n              @input=${this._nameChanged}\n              .label=${this.hass.localize(\n                \"ui.dialogs.device-registry-detail.name\"\n              )}\n              .placeholder=${device.name || \"\"}\n              .disabled=${this._submitting}\n              dialogInitialFocus\n            ></ha-textfield>\n            <ha-area-picker\n              .hass=${this.hass}\n              .value=${this._areaId}\n              @value-changed=${this._areaPicked}\n            ></ha-area-picker>\n            <div class=\"row\">\n              <ha-switch\n                .checked=${!this._disabledBy}\n                .disabled=${this._params.device.disabled_by === \"config_entry\"}\n                @change=${this._disabledByChanged}\n              >\n              </ha-switch>\n              <div>\n                <div>\n                  ${this.hass.localize(\n                    \"ui.dialogs.device-registry-detail.enabled_label\",\n                    {\n                      type: this.hass.localize(\n                        `ui.dialogs.device-registry-detail.type.${\n                          device.entry_type || \"device\"\n                        }`\n                      ),\n                    }\n                  )}\n                </div>\n                <div class=\"secondary\">\n                  ${this._disabledBy && this._disabledBy !== \"user\"\n                    ? this.hass.localize(\n                        \"ui.dialogs.device-registry-detail.enabled_cause\",\n                        {\n                          type: this.hass.localize(\n                            `ui.dialogs.device-registry-detail.type.${\n                              device.entry_type || \"device\"\n                            }`\n                          ),\n                          cause: this.hass.localize(\n                            `config_entry.disabled_by.${this._disabledBy}`\n                          ),\n                        }\n                      )\n                    : \"\"}\n                  ${this.hass.localize(\n                    \"ui.dialogs.device-registry-detail.enabled_description\"\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <mwc-button\n          slot=\"secondaryAction\"\n          @click=${this.closeDialog}\n          .disabled=${this._submitting}\n        >\n          ${this.hass.localize(\"ui.common.cancel\")}\n        </mwc-button>\n        <mwc-button\n          slot=\"primaryAction\"\n          @click=${this._updateEntry}\n          .disabled=${this._submitting}\n        >\n          ${this.hass.localize(\"ui.dialogs.device-registry-detail.update\")}\n        </mwc-button>\n      </ha-dialog>\n    `;\n  }\n\n  private _nameChanged(ev): void {\n    this._error = undefined;\n    this._nameByUser = ev.target.value;\n  }\n\n  private _areaPicked(event: CustomEvent): void {\n    this._areaId = event.detail.value;\n  }\n\n  private _disabledByChanged(ev: Event): void {\n    this._disabledBy = (ev.target as HaSwitch).checked ? null : \"user\";\n  }\n\n  private async _updateEntry(): Promise<void> {\n    this._submitting = true;\n    try {\n      await this._params!.updateEntry({\n        name_by_user: this._nameByUser.trim() || null,\n        area_id: this._areaId || null,\n        disabled_by: this._disabledBy || null,\n      });\n      this.closeDialog();\n    } catch (err: any) {\n      this._error =\n        err.message ||\n        this.hass.localize(\"ui.dialogs.device-registry-detail.unknown_error\");\n    } finally {\n      this._submitting = false;\n    }\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyle,\n      haStyleDialog,\n      css`\n        mwc-button.warning {\n          margin-right: auto;\n          margin-inline-end: auto;\n          margin-inline-start: initial;\n        }\n        ha-textfield {\n          display: block;\n          margin-bottom: 16px;\n        }\n        ha-switch {\n          margin-right: 16px;\n          margin-inline-end: 16px;\n          margin-inline-start: initial;\n          direction: var(--direction);\n        }\n        .row {\n          margin-top: 8px;\n          color: var(--primary-text-color);\n          display: flex;\n          align-items: center;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"dialog-device-registry-detail\": DialogDeviceRegistryDetail;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}