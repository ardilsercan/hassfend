{"ast":null,"code":"/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\nimport { IronMeta } from '@polymer/iron-meta/iron-meta.js';\nimport { Polymer } from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport { dom } from '@polymer/polymer/lib/legacy/polymer.dom.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { Base } from '@polymer/polymer/polymer-legacy.js';\n\n/**\n\nThe `iron-icon` element displays an icon. By default an icon renders as a 24px\nsquare.\n\nExample using src:\n\n    <iron-icon src=\"star.png\"></iron-icon>\n\nExample setting size to 32px x 32px:\n\n    <iron-icon class=\"big\" src=\"big_star.png\"></iron-icon>\n\n    <style is=\"custom-style\">\n      .big {\n        --iron-icon-height: 32px;\n        --iron-icon-width: 32px;\n      }\n    </style>\n\nThe iron elements include several sets of icons. To use the default set of\nicons, import `iron-icons.js` and use the `icon` attribute to specify an icon:\n\n    <script type=\"module\">\n      import \"@polymer/iron-icons/iron-icons.js\";\n    </script>\n\n    <iron-icon icon=\"menu\"></iron-icon>\n\nTo use a different built-in set of icons, import the specific\n`iron-icons/<iconset>-icons.js`, and specify the icon as `<iconset>:<icon>`.\nFor example, to use a communication icon, you would use:\n\n    <script type=\"module\">\n      import \"@polymer/iron-icons/communication-icons.js\";\n    </script>\n\n    <iron-icon icon=\"communication:email\"></iron-icon>\n\nYou can also create custom icon sets of bitmap or SVG icons.\n\nExample of using an icon named `cherry` from a custom iconset with the ID\n`fruit`:\n\n    <iron-icon icon=\"fruit:cherry\"></iron-icon>\n\nSee `<iron-iconset>` and `<iron-iconset-svg>` for more information about how to\ncreate a custom iconset.\n\nSee the `iron-icons` demo to see the icons available in the various iconsets.\n\n### Styling\n\nThe following custom properties are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--iron-icon` | Mixin applied to the icon | {}\n`--iron-icon-width` | Width of the icon | `24px`\n`--iron-icon-height` | Height of the icon | `24px`\n`--iron-icon-fill-color` | Fill color of the svg icon | `currentcolor`\n`--iron-icon-stroke-color` | Stroke color of the svg icon | none\n\n@group Iron Elements\n@element iron-icon\n@demo demo/index.html\n@hero hero.svg\n@homepage polymer.github.io\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        @apply --layout-inline;\n        @apply --layout-center-center;\n        position: relative;\n\n        vertical-align: middle;\n\n        fill: var(--iron-icon-fill-color, currentcolor);\n        stroke: var(--iron-icon-stroke-color, none);\n\n        width: var(--iron-icon-width, 24px);\n        height: var(--iron-icon-height, 24px);\n        @apply --iron-icon;\n      }\n\n      :host([hidden]) {\n        display: none;\n      }\n    </style>\n`,\n  is: 'iron-icon',\n  properties: {\n    /**\n     * The name of the icon to use. The name should be of the form:\n     * `iconset_name:icon_name`.\n     */\n    icon: {\n      type: String\n    },\n    /**\n     * The name of the theme to used, if one is specified by the\n     * iconset.\n     */\n    theme: {\n      type: String\n    },\n    /**\n     * If using iron-icon without an iconset, you can set the src to be\n     * the URL of an individual icon image file. Note that this will take\n     * precedence over a given icon attribute.\n     */\n    src: {\n      type: String\n    },\n    /**\n     * @type {!IronMeta}\n     */\n    _meta: {\n      value: Base.create('iron-meta', {\n        type: 'iconset'\n      })\n    }\n  },\n  observers: ['_updateIcon(_meta, isAttached)', '_updateIcon(theme, isAttached)', '_srcChanged(src, isAttached)', '_iconChanged(icon, isAttached)'],\n  _DEFAULT_ICONSET: 'icons',\n  _iconChanged: function (icon) {\n    var parts = (icon || '').split(':');\n    this._iconName = parts.pop();\n    this._iconsetName = parts.pop() || this._DEFAULT_ICONSET;\n    this._updateIcon();\n  },\n  _srcChanged: function (src) {\n    this._updateIcon();\n  },\n  _usesIconset: function () {\n    return this.icon || !this.src;\n  },\n  /** @suppress {visibility} */\n  _updateIcon: function () {\n    if (this._usesIconset()) {\n      if (this._img && this._img.parentNode) {\n        dom(this.root).removeChild(this._img);\n      }\n      if (this._iconName === '') {\n        if (this._iconset) {\n          this._iconset.removeIcon(this);\n        }\n      } else if (this._iconsetName && this._meta) {\n        this._iconset = /** @type {?Polymer.Iconset} */\n        this._meta.byKey(this._iconsetName);\n        if (this._iconset) {\n          this._iconset.applyIcon(this, this._iconName, this.theme);\n          this.unlisten(window, 'iron-iconset-added', '_updateIcon');\n        } else {\n          this.listen(window, 'iron-iconset-added', '_updateIcon');\n        }\n      }\n    } else {\n      if (this._iconset) {\n        this._iconset.removeIcon(this);\n      }\n      if (!this._img) {\n        this._img = document.createElement('img');\n        this._img.style.width = '100%';\n        this._img.style.height = '100%';\n        this._img.draggable = false;\n      }\n      this._img.src = this.src;\n      dom(this.root).appendChild(this._img);\n    }\n  }\n});","map":{"version":3,"names":["IronMeta","Polymer","dom","html","Base","_template","is","properties","icon","type","String","theme","src","_meta","value","create","observers","_DEFAULT_ICONSET","_iconChanged","parts","split","_iconName","pop","_iconsetName","_updateIcon","_srcChanged","_usesIconset","_img","parentNode","root","removeChild","_iconset","removeIcon","byKey","applyIcon","unlisten","window","listen","document","createElement","style","width","height","draggable","appendChild"],"sources":["/workspaces/frontend/node_modules/@polymer/iron-icon/iron-icon.js"],"sourcesContent":["/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\n\nimport {IronMeta} from '@polymer/iron-meta/iron-meta.js';\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {dom} from '@polymer/polymer/lib/legacy/polymer.dom.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\nimport {Base} from '@polymer/polymer/polymer-legacy.js';\n\n/**\n\nThe `iron-icon` element displays an icon. By default an icon renders as a 24px\nsquare.\n\nExample using src:\n\n    <iron-icon src=\"star.png\"></iron-icon>\n\nExample setting size to 32px x 32px:\n\n    <iron-icon class=\"big\" src=\"big_star.png\"></iron-icon>\n\n    <style is=\"custom-style\">\n      .big {\n        --iron-icon-height: 32px;\n        --iron-icon-width: 32px;\n      }\n    </style>\n\nThe iron elements include several sets of icons. To use the default set of\nicons, import `iron-icons.js` and use the `icon` attribute to specify an icon:\n\n    <script type=\"module\">\n      import \"@polymer/iron-icons/iron-icons.js\";\n    </script>\n\n    <iron-icon icon=\"menu\"></iron-icon>\n\nTo use a different built-in set of icons, import the specific\n`iron-icons/<iconset>-icons.js`, and specify the icon as `<iconset>:<icon>`.\nFor example, to use a communication icon, you would use:\n\n    <script type=\"module\">\n      import \"@polymer/iron-icons/communication-icons.js\";\n    </script>\n\n    <iron-icon icon=\"communication:email\"></iron-icon>\n\nYou can also create custom icon sets of bitmap or SVG icons.\n\nExample of using an icon named `cherry` from a custom iconset with the ID\n`fruit`:\n\n    <iron-icon icon=\"fruit:cherry\"></iron-icon>\n\nSee `<iron-iconset>` and `<iron-iconset-svg>` for more information about how to\ncreate a custom iconset.\n\nSee the `iron-icons` demo to see the icons available in the various iconsets.\n\n### Styling\n\nThe following custom properties are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--iron-icon` | Mixin applied to the icon | {}\n`--iron-icon-width` | Width of the icon | `24px`\n`--iron-icon-height` | Height of the icon | `24px`\n`--iron-icon-fill-color` | Fill color of the svg icon | `currentcolor`\n`--iron-icon-stroke-color` | Stroke color of the svg icon | none\n\n@group Iron Elements\n@element iron-icon\n@demo demo/index.html\n@hero hero.svg\n@homepage polymer.github.io\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        @apply --layout-inline;\n        @apply --layout-center-center;\n        position: relative;\n\n        vertical-align: middle;\n\n        fill: var(--iron-icon-fill-color, currentcolor);\n        stroke: var(--iron-icon-stroke-color, none);\n\n        width: var(--iron-icon-width, 24px);\n        height: var(--iron-icon-height, 24px);\n        @apply --iron-icon;\n      }\n\n      :host([hidden]) {\n        display: none;\n      }\n    </style>\n`,\n\n  is: 'iron-icon',\n\n  properties: {\n\n    /**\n     * The name of the icon to use. The name should be of the form:\n     * `iconset_name:icon_name`.\n     */\n    icon: {type: String},\n\n    /**\n     * The name of the theme to used, if one is specified by the\n     * iconset.\n     */\n    theme: {type: String},\n\n    /**\n     * If using iron-icon without an iconset, you can set the src to be\n     * the URL of an individual icon image file. Note that this will take\n     * precedence over a given icon attribute.\n     */\n    src: {type: String},\n\n    /**\n     * @type {!IronMeta}\n     */\n    _meta: {value: Base.create('iron-meta', {type: 'iconset'})}\n\n  },\n\n  observers: [\n    '_updateIcon(_meta, isAttached)',\n    '_updateIcon(theme, isAttached)',\n    '_srcChanged(src, isAttached)',\n    '_iconChanged(icon, isAttached)'\n  ],\n\n  _DEFAULT_ICONSET: 'icons',\n\n  _iconChanged: function(icon) {\n    var parts = (icon || '').split(':');\n    this._iconName = parts.pop();\n    this._iconsetName = parts.pop() || this._DEFAULT_ICONSET;\n    this._updateIcon();\n  },\n\n  _srcChanged: function(src) {\n    this._updateIcon();\n  },\n\n  _usesIconset: function() {\n    return this.icon || !this.src;\n  },\n\n  /** @suppress {visibility} */\n  _updateIcon: function() {\n    if (this._usesIconset()) {\n      if (this._img && this._img.parentNode) {\n        dom(this.root).removeChild(this._img);\n      }\n      if (this._iconName === '') {\n        if (this._iconset) {\n          this._iconset.removeIcon(this);\n        }\n      } else if (this._iconsetName && this._meta) {\n        this._iconset = /** @type {?Polymer.Iconset} */ (\n            this._meta.byKey(this._iconsetName));\n        if (this._iconset) {\n          this._iconset.applyIcon(this, this._iconName, this.theme);\n          this.unlisten(window, 'iron-iconset-added', '_updateIcon');\n        } else {\n          this.listen(window, 'iron-iconset-added', '_updateIcon');\n        }\n      }\n    } else {\n      if (this._iconset) {\n        this._iconset.removeIcon(this);\n      }\n      if (!this._img) {\n        this._img = document.createElement('img');\n        this._img.style.width = '100%';\n        this._img.style.height = '100%';\n        this._img.draggable = false;\n      }\n      this._img.src = this.src;\n      dom(this.root).appendChild(this._img);\n    }\n  }\n});\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,+CAA+C;AAEtD,SAAQA,QAAQ,QAAO,iCAAiC;AACxD,SAAQC,OAAO,QAAO,2CAA2C;AACjE,SAAQC,GAAG,QAAO,4CAA4C;AAC9D,SAAQC,IAAI,QAAO,wCAAwC;AAC3D,SAAQC,IAAI,QAAO,oCAAoC;;AAEvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAH,OAAO,CAAC;EACNI,SAAS,EAAEF,IAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;EAECG,EAAE,EAAE,WAAW;EAEfC,UAAU,EAAE;IAEV;AACJ;AACA;AACA;IACIC,IAAI,EAAE;MAACC,IAAI,EAAEC;IAAM,CAAC;IAEpB;AACJ;AACA;AACA;IACIC,KAAK,EAAE;MAACF,IAAI,EAAEC;IAAM,CAAC;IAErB;AACJ;AACA;AACA;AACA;IACIE,GAAG,EAAE;MAACH,IAAI,EAAEC;IAAM,CAAC;IAEnB;AACJ;AACA;IACIG,KAAK,EAAE;MAACC,KAAK,EAAEV,IAAI,CAACW,MAAM,CAAC,WAAW,EAAE;QAACN,IAAI,EAAE;MAAS,CAAC;IAAC;EAE5D,CAAC;EAEDO,SAAS,EAAE,CACT,gCAAgC,EAChC,gCAAgC,EAChC,8BAA8B,EAC9B,gCAAgC,CACjC;EAEDC,gBAAgB,EAAE,OAAO;EAEzBC,YAAY,EAAE,SAAAA,CAASV,IAAI,EAAE;IAC3B,IAAIW,KAAK,GAAG,CAACX,IAAI,IAAI,EAAE,EAAEY,KAAK,CAAC,GAAG,CAAC;IACnC,IAAI,CAACC,SAAS,GAAGF,KAAK,CAACG,GAAG,CAAC,CAAC;IAC5B,IAAI,CAACC,YAAY,GAAGJ,KAAK,CAACG,GAAG,CAAC,CAAC,IAAI,IAAI,CAACL,gBAAgB;IACxD,IAAI,CAACO,WAAW,CAAC,CAAC;EACpB,CAAC;EAEDC,WAAW,EAAE,SAAAA,CAASb,GAAG,EAAE;IACzB,IAAI,CAACY,WAAW,CAAC,CAAC;EACpB,CAAC;EAEDE,YAAY,EAAE,SAAAA,CAAA,EAAW;IACvB,OAAO,IAAI,CAAClB,IAAI,IAAI,CAAC,IAAI,CAACI,GAAG;EAC/B,CAAC;EAED;EACAY,WAAW,EAAE,SAAAA,CAAA,EAAW;IACtB,IAAI,IAAI,CAACE,YAAY,CAAC,CAAC,EAAE;MACvB,IAAI,IAAI,CAACC,IAAI,IAAI,IAAI,CAACA,IAAI,CAACC,UAAU,EAAE;QACrC1B,GAAG,CAAC,IAAI,CAAC2B,IAAI,CAAC,CAACC,WAAW,CAAC,IAAI,CAACH,IAAI,CAAC;MACvC;MACA,IAAI,IAAI,CAACN,SAAS,KAAK,EAAE,EAAE;QACzB,IAAI,IAAI,CAACU,QAAQ,EAAE;UACjB,IAAI,CAACA,QAAQ,CAACC,UAAU,CAAC,IAAI,CAAC;QAChC;MACF,CAAC,MAAM,IAAI,IAAI,CAACT,YAAY,IAAI,IAAI,CAACV,KAAK,EAAE;QAC1C,IAAI,CAACkB,QAAQ,GAAG;QACZ,IAAI,CAAClB,KAAK,CAACoB,KAAK,CAAC,IAAI,CAACV,YAAY,CAAE;QACxC,IAAI,IAAI,CAACQ,QAAQ,EAAE;UACjB,IAAI,CAACA,QAAQ,CAACG,SAAS,CAAC,IAAI,EAAE,IAAI,CAACb,SAAS,EAAE,IAAI,CAACV,KAAK,CAAC;UACzD,IAAI,CAACwB,QAAQ,CAACC,MAAM,EAAE,oBAAoB,EAAE,aAAa,CAAC;QAC5D,CAAC,MAAM;UACL,IAAI,CAACC,MAAM,CAACD,MAAM,EAAE,oBAAoB,EAAE,aAAa,CAAC;QAC1D;MACF;IACF,CAAC,MAAM;MACL,IAAI,IAAI,CAACL,QAAQ,EAAE;QACjB,IAAI,CAACA,QAAQ,CAACC,UAAU,CAAC,IAAI,CAAC;MAChC;MACA,IAAI,CAAC,IAAI,CAACL,IAAI,EAAE;QACd,IAAI,CAACA,IAAI,GAAGW,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;QACzC,IAAI,CAACZ,IAAI,CAACa,KAAK,CAACC,KAAK,GAAG,MAAM;QAC9B,IAAI,CAACd,IAAI,CAACa,KAAK,CAACE,MAAM,GAAG,MAAM;QAC/B,IAAI,CAACf,IAAI,CAACgB,SAAS,GAAG,KAAK;MAC7B;MACA,IAAI,CAAChB,IAAI,CAACf,GAAG,GAAG,IAAI,CAACA,GAAG;MACxBV,GAAG,CAAC,IAAI,CAAC2B,IAAI,CAAC,CAACe,WAAW,CAAC,IAAI,CAACjB,IAAI,CAAC;IACvC;EACF;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}