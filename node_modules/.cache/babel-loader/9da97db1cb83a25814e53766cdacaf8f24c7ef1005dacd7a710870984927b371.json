{"ast":null,"code":"import { supportsFeature } from \"../common/entity/supports-feature\";\nimport { cleanupMediaTitle } from \"../data/media-player\";\nexport default class MediaPlayerEntity {\n  constructor(hass, stateObj) {\n    this.hass = void 0;\n    this.stateObj = void 0;\n    this._attr = void 0;\n    this.hass = hass;\n    this.stateObj = stateObj;\n    this._attr = stateObj.attributes;\n  }\n  get isOff() {\n    return this.stateObj.state === \"off\";\n  }\n  get isIdle() {\n    return this.stateObj.state === \"idle\";\n  }\n  get isMuted() {\n    return this._attr.is_volume_muted;\n  }\n  get isPaused() {\n    return this.stateObj.state === \"paused\";\n  }\n  get isPlaying() {\n    return this.stateObj.state === \"playing\";\n  }\n  get isMusic() {\n    return this._attr.media_content_type === \"music\";\n  }\n  get isTVShow() {\n    return this._attr.media_content_type === \"tvshow\";\n  }\n  get hasMediaControl() {\n    return [\"playing\", \"paused\", \"unknown\", \"on\"].indexOf(this.stateObj.state) !== -1;\n  }\n  get volumeSliderValue() {\n    return this._attr.volume_level * 100;\n  }\n  get showProgress() {\n    return (this.isPlaying || this.isPaused) && \"media_duration\" in this.stateObj.attributes && \"media_position\" in this.stateObj.attributes && \"media_position_updated_at\" in this.stateObj.attributes;\n  }\n  get currentProgress() {\n    let progress = this._attr.media_position;\n    if (this.isPlaying) {\n      progress += (Date.now() - new Date(this._attr.media_position_updated_at).getTime()) / 1000.0;\n    }\n    return progress;\n  }\n  get supportsPause() {\n    return supportsFeature(this.stateObj, 1);\n  }\n  get supportsVolumeSet() {\n    return supportsFeature(this.stateObj, 4);\n  }\n  get supportsVolumeMute() {\n    return supportsFeature(this.stateObj, 8);\n  }\n  get supportsPreviousTrack() {\n    return supportsFeature(this.stateObj, 16);\n  }\n  get supportsNextTrack() {\n    return supportsFeature(this.stateObj, 32);\n  }\n  get supportsTurnOn() {\n    return supportsFeature(this.stateObj, 128);\n  }\n  get supportsTurnOff() {\n    return supportsFeature(this.stateObj, 256);\n  }\n  get supportsPlayMedia() {\n    return supportsFeature(this.stateObj, 512);\n  }\n  get supportsVolumeButtons() {\n    return supportsFeature(this.stateObj, 1024);\n  }\n  get supportsSelectSource() {\n    return supportsFeature(this.stateObj, 2048);\n  }\n  get supportsSelectSoundMode() {\n    return supportsFeature(this.stateObj, 65536);\n  }\n  get supportsPlay() {\n    return supportsFeature(this.stateObj, 16384);\n  }\n  get primaryTitle() {\n    return cleanupMediaTitle(this._attr.media_title);\n  }\n  get secondaryTitle() {\n    if (this.isMusic) {\n      return this._attr.media_artist;\n    }\n    if (this.isTVShow) {\n      let text = this._attr.media_series_title;\n      if (this._attr.media_season) {\n        text += \" S\" + this._attr.media_season;\n        if (this._attr.media_episode) {\n          text += \"E\" + this._attr.media_episode;\n        }\n      }\n      return text;\n    }\n    if (this._attr.app_name) {\n      return this._attr.app_name;\n    }\n    return \"\";\n  }\n  get source() {\n    return this._attr.source;\n  }\n  get sourceList() {\n    return this._attr.source_list;\n  }\n  get soundMode() {\n    return this._attr.sound_mode;\n  }\n  get soundModeList() {\n    return this._attr.sound_mode_list;\n  }\n  mediaPlayPause() {\n    this.callService(\"media_play_pause\");\n  }\n  nextTrack() {\n    this.callService(\"media_next_track\");\n  }\n  playbackControl() {\n    this.callService(\"media_play_pause\");\n  }\n  previousTrack() {\n    this.callService(\"media_previous_track\");\n  }\n  setVolume(volume) {\n    this.callService(\"volume_set\", {\n      volume_level: volume\n    });\n  }\n  togglePower() {\n    if (this.isOff) {\n      this.turnOn();\n    } else {\n      this.turnOff();\n    }\n  }\n  turnOff() {\n    this.callService(\"turn_off\");\n  }\n  turnOn() {\n    this.callService(\"turn_on\");\n  }\n  volumeDown() {\n    this.callService(\"volume_down\");\n  }\n  volumeMute(mute) {\n    if (!this.supportsVolumeMute) {\n      throw new Error(\"Muting volume not supported\");\n    }\n    this.callService(\"volume_mute\", {\n      is_volume_muted: mute\n    });\n  }\n  volumeUp() {\n    this.callService(\"volume_up\");\n  }\n  selectSource(source) {\n    this.callService(\"select_source\", {\n      source\n    });\n  }\n  selectSoundMode(soundMode) {\n    this.callService(\"select_sound_mode\", {\n      sound_mode: soundMode\n    });\n  }\n\n  // helper method\n\n  callService(service, data = {}) {\n    data.entity_id = this.stateObj.entity_id;\n    this.hass.callService(\"media_player\", service, data);\n  }\n}","map":{"version":3,"names":["supportsFeature","cleanupMediaTitle","MediaPlayerEntity","constructor","hass","stateObj","_attr","attributes","isOff","state","isIdle","isMuted","is_volume_muted","isPaused","isPlaying","isMusic","media_content_type","isTVShow","hasMediaControl","indexOf","volumeSliderValue","volume_level","showProgress","currentProgress","progress","media_position","Date","now","media_position_updated_at","getTime","supportsPause","supportsVolumeSet","supportsVolumeMute","supportsPreviousTrack","supportsNextTrack","supportsTurnOn","supportsTurnOff","supportsPlayMedia","supportsVolumeButtons","supportsSelectSource","supportsSelectSoundMode","supportsPlay","primaryTitle","media_title","secondaryTitle","media_artist","text","media_series_title","media_season","media_episode","app_name","source","sourceList","source_list","soundMode","sound_mode","soundModeList","sound_mode_list","mediaPlayPause","callService","nextTrack","playbackControl","previousTrack","setVolume","volume","togglePower","turnOn","turnOff","volumeDown","volumeMute","mute","Error","volumeUp","selectSource","selectSoundMode","service","data","entity_id"],"sources":["/workspaces/frontend/src/util/hass-media-player-model.ts"],"sourcesContent":["import { HassEntity } from \"home-assistant-js-websocket\";\nimport { supportsFeature } from \"../common/entity/supports-feature\";\nimport { cleanupMediaTitle } from \"../data/media-player\";\nimport { HomeAssistant } from \"../types\";\n\nexport default class MediaPlayerEntity {\n  public hass: HomeAssistant;\n\n  public stateObj: HassEntity;\n\n  private _attr: { [key: string]: any };\n\n  constructor(hass: HomeAssistant, stateObj: HassEntity) {\n    this.hass = hass;\n    this.stateObj = stateObj;\n    this._attr = stateObj.attributes;\n  }\n\n  get isOff() {\n    return this.stateObj.state === \"off\";\n  }\n\n  get isIdle() {\n    return this.stateObj.state === \"idle\";\n  }\n\n  get isMuted() {\n    return this._attr.is_volume_muted;\n  }\n\n  get isPaused() {\n    return this.stateObj.state === \"paused\";\n  }\n\n  get isPlaying() {\n    return this.stateObj.state === \"playing\";\n  }\n\n  get isMusic() {\n    return this._attr.media_content_type === \"music\";\n  }\n\n  get isTVShow() {\n    return this._attr.media_content_type === \"tvshow\";\n  }\n\n  get hasMediaControl() {\n    return (\n      [\"playing\", \"paused\", \"unknown\", \"on\"].indexOf(this.stateObj.state) !== -1\n    );\n  }\n\n  get volumeSliderValue() {\n    return this._attr.volume_level * 100;\n  }\n\n  get showProgress() {\n    return (\n      (this.isPlaying || this.isPaused) &&\n      \"media_duration\" in this.stateObj.attributes &&\n      \"media_position\" in this.stateObj.attributes &&\n      \"media_position_updated_at\" in this.stateObj.attributes\n    );\n  }\n\n  get currentProgress() {\n    let progress = this._attr.media_position;\n    if (this.isPlaying) {\n      progress +=\n        (Date.now() -\n          new Date(this._attr.media_position_updated_at).getTime()) /\n        1000.0;\n    }\n    return progress;\n  }\n\n  get supportsPause() {\n    return supportsFeature(this.stateObj, 1);\n  }\n\n  get supportsVolumeSet() {\n    return supportsFeature(this.stateObj, 4);\n  }\n\n  get supportsVolumeMute() {\n    return supportsFeature(this.stateObj, 8);\n  }\n\n  get supportsPreviousTrack() {\n    return supportsFeature(this.stateObj, 16);\n  }\n\n  get supportsNextTrack() {\n    return supportsFeature(this.stateObj, 32);\n  }\n\n  get supportsTurnOn() {\n    return supportsFeature(this.stateObj, 128);\n  }\n\n  get supportsTurnOff() {\n    return supportsFeature(this.stateObj, 256);\n  }\n\n  get supportsPlayMedia() {\n    return supportsFeature(this.stateObj, 512);\n  }\n\n  get supportsVolumeButtons() {\n    return supportsFeature(this.stateObj, 1024);\n  }\n\n  get supportsSelectSource() {\n    return supportsFeature(this.stateObj, 2048);\n  }\n\n  get supportsSelectSoundMode() {\n    return supportsFeature(this.stateObj, 65536);\n  }\n\n  get supportsPlay() {\n    return supportsFeature(this.stateObj, 16384);\n  }\n\n  get primaryTitle() {\n    return cleanupMediaTitle(this._attr.media_title);\n  }\n\n  get secondaryTitle() {\n    if (this.isMusic) {\n      return this._attr.media_artist;\n    }\n    if (this.isTVShow) {\n      let text = this._attr.media_series_title;\n\n      if (this._attr.media_season) {\n        text += \" S\" + this._attr.media_season;\n\n        if (this._attr.media_episode) {\n          text += \"E\" + this._attr.media_episode;\n        }\n      }\n\n      return text;\n    }\n    if (this._attr.app_name) {\n      return this._attr.app_name;\n    }\n    return \"\";\n  }\n\n  get source() {\n    return this._attr.source;\n  }\n\n  get sourceList() {\n    return this._attr.source_list;\n  }\n\n  get soundMode() {\n    return this._attr.sound_mode;\n  }\n\n  get soundModeList() {\n    return this._attr.sound_mode_list;\n  }\n\n  mediaPlayPause() {\n    this.callService(\"media_play_pause\");\n  }\n\n  nextTrack() {\n    this.callService(\"media_next_track\");\n  }\n\n  playbackControl() {\n    this.callService(\"media_play_pause\");\n  }\n\n  previousTrack() {\n    this.callService(\"media_previous_track\");\n  }\n\n  setVolume(volume) {\n    this.callService(\"volume_set\", { volume_level: volume });\n  }\n\n  togglePower() {\n    if (this.isOff) {\n      this.turnOn();\n    } else {\n      this.turnOff();\n    }\n  }\n\n  turnOff() {\n    this.callService(\"turn_off\");\n  }\n\n  turnOn() {\n    this.callService(\"turn_on\");\n  }\n\n  volumeDown() {\n    this.callService(\"volume_down\");\n  }\n\n  volumeMute(mute) {\n    if (!this.supportsVolumeMute) {\n      throw new Error(\"Muting volume not supported\");\n    }\n    this.callService(\"volume_mute\", { is_volume_muted: mute });\n  }\n\n  volumeUp() {\n    this.callService(\"volume_up\");\n  }\n\n  selectSource(source) {\n    this.callService(\"select_source\", { source });\n  }\n\n  selectSoundMode(soundMode) {\n    this.callService(\"select_sound_mode\", { sound_mode: soundMode });\n  }\n\n  // helper method\n\n  callService(service, data: any = {}) {\n    data.entity_id = this.stateObj.entity_id;\n    this.hass.callService(\"media_player\", service, data);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}