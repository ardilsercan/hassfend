{"ast":null,"code":"import _createForOfIteratorHelper from \"@babel/runtime/helpers/createForOfIteratorHelper\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/helpers/regeneratorRuntime\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _typeof from \"@babel/runtime/helpers/typeof\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.parse-float.js\";\nimport \"core-js/modules/es.parse-int.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.ends-with.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.every.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.url.js\";\nimport \"core-js/modules/web.url-search-params.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nvar e = /*#__PURE__*/function () {\n  function e(a, b, c, d, f) {\n    var _this = this;\n    _classCallCheck(this, e);\n    this._legacyCanvasSize = e.DEFAULT_CANVAS_SIZE;\n    this._preferredCamera = \"environment\";\n    this._maxScansPerSecond = 25;\n    this._lastScanTimestamp = -1;\n    this._destroyed = this._flashOn = this._paused = this._active = !1;\n    this.$video = a;\n    this.$canvas = document.createElement(\"canvas\");\n    c && \"object\" === _typeof(c) ? this._onDecode = b : (c || d || f ? console.warn(\"You're using a deprecated version of the QrScanner constructor which will be removed in the future\") : console.warn(\"Note that the type of the scan result passed to onDecode will change in the future. To already switch to the new api today, you can pass returnDetailedScanResult: true.\"), this._legacyOnDecode = b);\n    b = \"object\" === _typeof(c) ? c : {};\n    this._onDecodeError = b.onDecodeError || (\"function\" === typeof c ? c : this._onDecodeError);\n    this._calculateScanRegion = b.calculateScanRegion || (\"function\" === typeof d ? d : this._calculateScanRegion);\n    this._preferredCamera = b.preferredCamera || f || this._preferredCamera;\n    this._legacyCanvasSize = \"number\" === typeof c ? c : \"number\" === typeof d ? d : this._legacyCanvasSize;\n    this._maxScansPerSecond = b.maxScansPerSecond || this._maxScansPerSecond;\n    this._onPlay = this._onPlay.bind(this);\n    this._onLoadedMetaData = this._onLoadedMetaData.bind(this);\n    this._onVisibilityChange = this._onVisibilityChange.bind(this);\n    this._updateOverlay = this._updateOverlay.bind(this);\n    a.disablePictureInPicture = !0;\n    a.playsInline = !0;\n    a.muted = !0;\n    var h = !1;\n    a.hidden && (a.hidden = !1, h = !0);\n    document.body.contains(a) || (document.body.appendChild(a), h = !0);\n    c = a.parentElement;\n    if (b.highlightScanRegion || b.highlightCodeOutline) {\n      d = !!b.overlay;\n      this.$overlay = b.overlay || document.createElement(\"div\");\n      f = this.$overlay.style;\n      f.position = \"absolute\";\n      f.display = \"none\";\n      f.pointerEvents = \"none\";\n      this.$overlay.classList.add(\"scan-region-highlight\");\n      if (!d && b.highlightScanRegion) {\n        this.$overlay.innerHTML = '<svg class=\"scan-region-highlight-svg\" viewBox=\"0 0 238 238\" preserveAspectRatio=\"none\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;fill:none;stroke:#e9b213;stroke-width:4;stroke-linecap:round;stroke-linejoin:round\"><path d=\"M31 2H10a8 8 0 0 0-8 8v21M207 2h21a8 8 0 0 1 8 8v21m0 176v21a8 8 0 0 1-8 8h-21m-176 0H10a8 8 0 0 1-8-8v-21\"/></svg>';\n        try {\n          this.$overlay.firstElementChild.animate({\n            transform: [\"scale(.98)\", \"scale(1.01)\"]\n          }, {\n            duration: 400,\n            iterations: Infinity,\n            direction: \"alternate\",\n            easing: \"ease-in-out\"\n          });\n        } catch (m) {}\n        c.insertBefore(this.$overlay, this.$video.nextSibling);\n      }\n      b.highlightCodeOutline && (this.$overlay.insertAdjacentHTML(\"beforeend\", '<svg class=\"code-outline-highlight\" preserveAspectRatio=\"none\" style=\"display:none;width:100%;height:100%;fill:none;stroke:#e9b213;stroke-width:5;stroke-dasharray:25;stroke-linecap:round;stroke-linejoin:round\"><polygon/></svg>'), this.$codeOutlineHighlight = this.$overlay.lastElementChild);\n    }\n    this._scanRegion = this._calculateScanRegion(a);\n    requestAnimationFrame(function () {\n      var m = window.getComputedStyle(a);\n      \"none\" === m.display && (a.style.setProperty(\"display\", \"block\", \"important\"), h = !0);\n      \"visible\" !== m.visibility && (a.style.setProperty(\"visibility\", \"visible\", \"important\"), h = !0);\n      h && (console.warn(\"QrScanner has overwritten the video hiding style to avoid Safari stopping the playback.\"), a.style.opacity = \"0\", a.style.width = \"0\", a.style.height = \"0\", _this.$overlay && _this.$overlay.parentElement && _this.$overlay.parentElement.removeChild(_this.$overlay), delete _this.$overlay, delete _this.$codeOutlineHighlight);\n      _this.$overlay && _this._updateOverlay();\n    });\n    a.addEventListener(\"play\", this._onPlay);\n    a.addEventListener(\"loadedmetadata\", this._onLoadedMetaData);\n    document.addEventListener(\"visibilitychange\", this._onVisibilityChange);\n    window.addEventListener(\"resize\", this._updateOverlay);\n    this._qrEnginePromise = e.createQrEngine();\n  }\n  _createClass(e, [{\n    key: \"hasFlash\",\n    value: function () {\n      var _hasFlash = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var a;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              if (!this.$video.srcObject) {\n                _context.next = 7;\n                break;\n              }\n              if (this.$video.srcObject instanceof MediaStream) {\n                _context.next = 4;\n                break;\n              }\n              return _context.abrupt(\"return\", !1);\n            case 4:\n              a = this.$video.srcObject;\n              _context.next = 10;\n              break;\n            case 7:\n              _context.next = 9;\n              return this._getCameraStream();\n            case 9:\n              a = _context.sent.stream;\n            case 10:\n              return _context.abrupt(\"return\", \"torch\" in a.getVideoTracks()[0].getSettings());\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](0);\n              return _context.abrupt(\"return\", !1);\n            case 16:\n              _context.prev = 16;\n              a && a !== this.$video.srcObject && (console.warn(\"Call hasFlash after successfully starting the scanner to avoid creating a temporary video stream\"), e._stopVideoStream(a));\n              return _context.finish(16);\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[0, 13, 16, 19]]);\n      }));\n      function hasFlash() {\n        return _hasFlash.apply(this, arguments);\n      }\n      return hasFlash;\n    }()\n  }, {\n    key: \"isFlashOn\",\n    value: function isFlashOn() {\n      return this._flashOn;\n    }\n  }, {\n    key: \"toggleFlash\",\n    value: function () {\n      var _toggleFlash = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!this._flashOn) {\n                _context2.next = 5;\n                break;\n              }\n              _context2.next = 3;\n              return this.turnFlashOff();\n            case 3:\n              _context2.next = 7;\n              break;\n            case 5:\n              _context2.next = 7;\n              return this.turnFlashOn();\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function toggleFlash() {\n        return _toggleFlash.apply(this, arguments);\n      }\n      return toggleFlash;\n    }()\n  }, {\n    key: \"turnFlashOn\",\n    value: function () {\n      var _turnFlashOn = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!(!this._flashOn && !this._destroyed && (this._flashOn = !0, this._active && !this._paused))) {\n                _context3.next = 13;\n                break;\n              }\n              _context3.prev = 1;\n              _context3.next = 4;\n              return this.hasFlash();\n            case 4:\n              if (_context3.sent) {\n                _context3.next = 6;\n                break;\n              }\n              throw \"No flash available\";\n            case 6:\n              _context3.next = 8;\n              return this.$video.srcObject.getVideoTracks()[0].applyConstraints({\n                advanced: [{\n                  torch: !0\n                }]\n              });\n            case 8:\n              _context3.next = 13;\n              break;\n            case 10:\n              _context3.prev = 10;\n              _context3.t0 = _context3[\"catch\"](1);\n              throw this._flashOn = !1, _context3.t0;\n            case 13:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this, [[1, 10]]);\n      }));\n      function turnFlashOn() {\n        return _turnFlashOn.apply(this, arguments);\n      }\n      return turnFlashOn;\n    }()\n  }, {\n    key: \"turnFlashOff\",\n    value: function () {\n      var _turnFlashOff = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.t0 = this._flashOn;\n              if (!_context4.t0) {\n                _context4.next = 5;\n                break;\n              }\n              this._flashOn = !1;\n              _context4.next = 5;\n              return this._restartVideoStream();\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n      function turnFlashOff() {\n        return _turnFlashOff.apply(this, arguments);\n      }\n      return turnFlashOff;\n    }()\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.$video.removeEventListener(\"loadedmetadata\", this._onLoadedMetaData);\n      this.$video.removeEventListener(\"play\", this._onPlay);\n      document.removeEventListener(\"visibilitychange\", this._onVisibilityChange);\n      window.removeEventListener(\"resize\", this._updateOverlay);\n      this._destroyed = !0;\n      this._flashOn = !1;\n      this.stop();\n      e._postWorkerMessage(this._qrEnginePromise, \"close\");\n    }\n  }, {\n    key: \"start\",\n    value: function () {\n      var _start = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var _yield$this$_getCamer, a, b;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              if (!this._destroyed) {\n                _context5.next = 2;\n                break;\n              }\n              throw Error(\"The QR scanner can not be started as it had been destroyed.\");\n            case 2:\n              if (!(!this._active || this._paused)) {\n                _context5.next = 30;\n                break;\n              }\n              if (!(\"https:\" !== window.location.protocol && console.warn(\"The camera stream is only accessible if the page is transferred via https.\"), this._active = !0, !document.hidden)) {\n                _context5.next = 30;\n                break;\n              }\n              if (!(this._paused = !1, this.$video.srcObject)) {\n                _context5.next = 9;\n                break;\n              }\n              _context5.next = 7;\n              return this.$video.play();\n            case 7:\n              _context5.next = 30;\n              break;\n            case 9:\n              _context5.prev = 9;\n              _context5.next = 12;\n              return this._getCameraStream();\n            case 12:\n              _yield$this$_getCamer = _context5.sent;\n              a = _yield$this$_getCamer.stream;\n              b = _yield$this$_getCamer.facingMode;\n              if (!(!this._active || this._paused)) {\n                _context5.next = 19;\n                break;\n              }\n              e._stopVideoStream(a);\n              _context5.next = 24;\n              break;\n            case 19:\n              this._setVideoMirror(b);\n              this.$video.srcObject = a;\n              _context5.next = 23;\n              return this.$video.play();\n            case 23:\n              this._flashOn && (this._flashOn = !1, this.turnFlashOn().catch(function () {}));\n            case 24:\n              _context5.next = 30;\n              break;\n            case 26:\n              _context5.prev = 26;\n              _context5.t0 = _context5[\"catch\"](9);\n              if (this._paused) {\n                _context5.next = 30;\n                break;\n              }\n              throw this._active = !1, _context5.t0;\n            case 30:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this, [[9, 26]]);\n      }));\n      function start() {\n        return _start.apply(this, arguments);\n      }\n      return start;\n    }()\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this.pause();\n      this._active = !1;\n    }\n  }, {\n    key: \"pause\",\n    value: function () {\n      var _pause = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var _this2 = this;\n        var a,\n          b,\n          _args6 = arguments;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              a = _args6.length > 0 && _args6[0] !== undefined ? _args6[0] : !1;\n              this._paused = !0;\n              if (this._active) {\n                _context6.next = 4;\n                break;\n              }\n              return _context6.abrupt(\"return\", !0);\n            case 4:\n              this.$video.pause();\n              this.$overlay && (this.$overlay.style.display = \"none\");\n              b = function b() {\n                _this2.$video.srcObject instanceof MediaStream && (e._stopVideoStream(_this2.$video.srcObject), _this2.$video.srcObject = null);\n              };\n              if (!a) {\n                _context6.next = 9;\n                break;\n              }\n              return _context6.abrupt(\"return\", (b(), !0));\n            case 9:\n              _context6.next = 11;\n              return new Promise(function (c) {\n                return setTimeout(c, 300);\n              });\n            case 11:\n              if (this._paused) {\n                _context6.next = 13;\n                break;\n              }\n              return _context6.abrupt(\"return\", !1);\n            case 13:\n              b();\n              return _context6.abrupt(\"return\", !0);\n            case 15:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this);\n      }));\n      function pause() {\n        return _pause.apply(this, arguments);\n      }\n      return pause;\n    }()\n  }, {\n    key: \"setCamera\",\n    value: function () {\n      var _setCamera = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(a) {\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.t0 = a !== this._preferredCamera;\n              if (!_context7.t0) {\n                _context7.next = 5;\n                break;\n              }\n              this._preferredCamera = a;\n              _context7.next = 5;\n              return this._restartVideoStream();\n            case 5:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, this);\n      }));\n      function setCamera(_x) {\n        return _setCamera.apply(this, arguments);\n      }\n      return setCamera;\n    }()\n  }, {\n    key: \"setGrayscaleWeights\",\n    value: function setGrayscaleWeights(a, b, c) {\n      var d = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : !0;\n      e._postWorkerMessage(this._qrEnginePromise, \"grayscaleWeights\", {\n        red: a,\n        green: b,\n        blue: c,\n        useIntegerApproximation: d\n      });\n    }\n  }, {\n    key: \"setInversionMode\",\n    value: function setInversionMode(a) {\n      e._postWorkerMessage(this._qrEnginePromise, \"inversionMode\", a);\n    }\n  }, {\n    key: \"_onPlay\",\n    value: function _onPlay() {\n      this._scanRegion = this._calculateScanRegion(this.$video);\n      this._updateOverlay();\n      this.$overlay && (this.$overlay.style.display = \"\");\n      this._scanFrame();\n    }\n  }, {\n    key: \"_onLoadedMetaData\",\n    value: function _onLoadedMetaData() {\n      this._scanRegion = this._calculateScanRegion(this.$video);\n      this._updateOverlay();\n    }\n  }, {\n    key: \"_onVisibilityChange\",\n    value: function _onVisibilityChange() {\n      document.hidden ? this.pause() : this._active && this.start();\n    }\n  }, {\n    key: \"_calculateScanRegion\",\n    value: function _calculateScanRegion(a) {\n      var b = Math.round(2 / 3 * Math.min(a.videoWidth, a.videoHeight));\n      return {\n        x: Math.round((a.videoWidth - b) / 2),\n        y: Math.round((a.videoHeight - b) / 2),\n        width: b,\n        height: b,\n        downScaledWidth: this._legacyCanvasSize,\n        downScaledHeight: this._legacyCanvasSize\n      };\n    }\n  }, {\n    key: \"_updateOverlay\",\n    value: function _updateOverlay() {\n      var _this3 = this;\n      requestAnimationFrame(function () {\n        if (_this3.$overlay) {\n          var a = _this3.$video,\n            b = a.videoWidth,\n            c = a.videoHeight,\n            d = a.offsetWidth,\n            f = a.offsetHeight,\n            h = a.offsetLeft,\n            m = a.offsetTop,\n            n = window.getComputedStyle(a),\n            p = n.objectFit,\n            k = b / c,\n            q = d / f;\n          switch (p) {\n            case \"none\":\n              var g = b;\n              var l = c;\n              break;\n            case \"fill\":\n              g = d;\n              l = f;\n              break;\n            default:\n              (\"cover\" === p ? k > q : k < q) ? (l = f, g = l * k) : (g = d, l = g / k), \"scale-down\" === p && (g = Math.min(g, b), l = Math.min(l, c));\n          }\n          var _n$objectPosition$spl = n.objectPosition.split(\" \").map(function (r, y) {\n              var x = parseFloat(r);\n              return r.endsWith(\"%\") ? (y ? f - l : d - g) * x / 100 : x;\n            }),\n            _n$objectPosition$spl2 = _slicedToArray(_n$objectPosition$spl, 2),\n            v = _n$objectPosition$spl2[0],\n            w = _n$objectPosition$spl2[1];\n          n = _this3._scanRegion.width || b;\n          q = _this3._scanRegion.height || c;\n          p = _this3._scanRegion.x || 0;\n          var u = _this3._scanRegion.y || 0;\n          k = _this3.$overlay.style;\n          k.width = \"\".concat(n / b * g, \"px\");\n          k.height = \"\".concat(q / c * l, \"px\");\n          k.top = \"\".concat(m + w + u / c * l, \"px\");\n          c = /scaleX\\(-1\\)/.test(a.style.transform);\n          k.left = \"\".concat(h + (c ? d - v - g : v) + (c ? b - p - n : p) / b * g, \"px\");\n          k.transform = a.style.transform;\n        }\n      });\n    }\n  }, {\n    key: \"_scanFrame\",\n    value: function _scanFrame() {\n      var _this4 = this;\n      !this._active || this.$video.paused || this.$video.ended || (\"requestVideoFrameCallback\" in this.$video ? this.$video.requestVideoFrameCallback.bind(this.$video) : requestAnimationFrame)( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n        var a, b, c;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              if (1 >= _this4.$video.readyState) {\n                _context8.next = 29;\n                break;\n              }\n              a = Date.now() - _this4._lastScanTimestamp, b = 1E3 / _this4._maxScansPerSecond;\n              _context8.t0 = a < b;\n              if (!_context8.t0) {\n                _context8.next = 6;\n                break;\n              }\n              _context8.next = 6;\n              return new Promise(function (d) {\n                return setTimeout(d, b - a);\n              });\n            case 6:\n              _this4._lastScanTimestamp = Date.now();\n              _context8.prev = 7;\n              _context8.next = 10;\n              return e.scanImage(_this4.$video, {\n                scanRegion: _this4._scanRegion,\n                qrEngine: _this4._qrEnginePromise,\n                canvas: _this4.$canvas\n              });\n            case 10:\n              c = _context8.sent;\n              _context8.next = 18;\n              break;\n            case 13:\n              _context8.prev = 13;\n              _context8.t1 = _context8[\"catch\"](7);\n              if (_this4._active) {\n                _context8.next = 17;\n                break;\n              }\n              return _context8.abrupt(\"return\");\n            case 17:\n              _this4._onDecodeError(_context8.t1);\n            case 18:\n              _context8.t2 = !e._disableBarcodeDetector;\n              if (_context8.t2) {\n                _context8.next = 25;\n                break;\n              }\n              _context8.next = 22;\n              return _this4._qrEnginePromise;\n            case 22:\n              _context8.t3 = _context8.sent;\n              _context8.t4 = Worker;\n              _context8.t2 = _context8.t3 instanceof _context8.t4;\n            case 25:\n              _context8.t5 = _context8.t2;\n              if (_context8.t5) {\n                _context8.next = 28;\n                break;\n              }\n              _this4._qrEnginePromise = e.createQrEngine();\n            case 28:\n              c ? (_this4._onDecode ? _this4._onDecode(c) : _this4._legacyOnDecode && _this4._legacyOnDecode(c.data), _this4.$codeOutlineHighlight && (clearTimeout(_this4._codeOutlineHighlightRemovalTimeout), _this4._codeOutlineHighlightRemovalTimeout = void 0, _this4.$codeOutlineHighlight.setAttribute(\"viewBox\", \"\".concat(_this4._scanRegion.x || 0, \" \") + \"\".concat(_this4._scanRegion.y || 0, \" \") + \"\".concat(_this4._scanRegion.width || _this4.$video.videoWidth, \" \") + \"\".concat(_this4._scanRegion.height || _this4.$video.videoHeight)), _this4.$codeOutlineHighlight.firstElementChild.setAttribute(\"points\", c.cornerPoints.map(function (_ref2) {\n                var d = _ref2.x,\n                  f = _ref2.y;\n                return \"\".concat(d, \",\").concat(f);\n              }).join(\" \")), _this4.$codeOutlineHighlight.style.display = \"\")) : _this4.$codeOutlineHighlight && !_this4._codeOutlineHighlightRemovalTimeout && (_this4._codeOutlineHighlightRemovalTimeout = setTimeout(function () {\n                return _this4.$codeOutlineHighlight.style.display = \"none\";\n              }, 100));\n            case 29:\n              _this4._scanFrame();\n            case 30:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8, null, [[7, 13]]);\n      })));\n    }\n  }, {\n    key: \"_onDecodeError\",\n    value: function _onDecodeError(a) {\n      a !== e.NO_QR_CODE_FOUND && console.log(a);\n    }\n  }, {\n    key: \"_getCameraStream\",\n    value: function () {\n      var _getCameraStream2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n        var _this5 = this;\n        var a, b, c, _i, _arr, d, f, h;\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              if (navigator.mediaDevices) {\n                _context9.next = 2;\n                break;\n              }\n              throw \"Camera not found.\";\n            case 2:\n              a = /^(environment|user)$/.test(this._preferredCamera) ? \"facingMode\" : \"deviceId\", b = [{\n                width: {\n                  min: 1024\n                }\n              }, {\n                width: {\n                  min: 768\n                }\n              }, {}], c = b.map(function (d) {\n                return Object.assign({}, d, _defineProperty({}, a, {\n                  exact: _this5._preferredCamera\n                }));\n              });\n              _i = 0, _arr = [].concat(_toConsumableArray(c), b);\n            case 4:\n              if (!(_i < _arr.length)) {\n                _context9.next = 19;\n                break;\n              }\n              d = _arr[_i];\n              _context9.prev = 6;\n              _context9.next = 9;\n              return navigator.mediaDevices.getUserMedia({\n                video: d,\n                audio: !1\n              });\n            case 9:\n              f = _context9.sent;\n              h = this._getFacingMode(f) || (d.facingMode ? this._preferredCamera : \"environment\" === this._preferredCamera ? \"user\" : \"environment\");\n              return _context9.abrupt(\"return\", {\n                stream: f,\n                facingMode: h\n              });\n            case 14:\n              _context9.prev = 14;\n              _context9.t0 = _context9[\"catch\"](6);\n            case 16:\n              _i++;\n              _context9.next = 4;\n              break;\n            case 19:\n              throw \"Camera not found.\";\n            case 20:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee9, this, [[6, 14]]);\n      }));\n      function _getCameraStream() {\n        return _getCameraStream2.apply(this, arguments);\n      }\n      return _getCameraStream;\n    }()\n  }, {\n    key: \"_restartVideoStream\",\n    value: function () {\n      var _restartVideoStream2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10() {\n        var a;\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) switch (_context10.prev = _context10.next) {\n            case 0:\n              a = this._paused;\n              _context10.next = 3;\n              return this.pause(!0);\n            case 3:\n              _context10.t1 = _context10.sent;\n              if (!_context10.t1) {\n                _context10.next = 6;\n                break;\n              }\n              _context10.t1 = !a;\n            case 6:\n              _context10.t0 = _context10.t1;\n              if (!_context10.t0) {\n                _context10.next = 9;\n                break;\n              }\n              _context10.t0 = this._active;\n            case 9:\n              _context10.t2 = _context10.t0;\n              if (!_context10.t2) {\n                _context10.next = 13;\n                break;\n              }\n              _context10.next = 13;\n              return this.start();\n            case 13:\n            case \"end\":\n              return _context10.stop();\n          }\n        }, _callee10, this);\n      }));\n      function _restartVideoStream() {\n        return _restartVideoStream2.apply(this, arguments);\n      }\n      return _restartVideoStream;\n    }()\n  }, {\n    key: \"_setVideoMirror\",\n    value: function _setVideoMirror(a) {\n      this.$video.style.transform = \"scaleX(\" + (\"user\" === a ? -1 : 1) + \")\";\n    }\n  }, {\n    key: \"_getFacingMode\",\n    value: function _getFacingMode(a) {\n      return (a = a.getVideoTracks()[0]) ? /rear|back|environment/i.test(a.label) ? \"environment\" : /front|user|face/i.test(a.label) ? \"user\" : null : null;\n    }\n  }], [{\n    key: \"WORKER_PATH\",\n    set: function set(a) {\n      console.warn(\"Setting QrScanner.WORKER_PATH is not required and not supported anymore. Have a look at the README for new setup instructions.\");\n    }\n  }, {\n    key: \"hasCamera\",\n    value: function () {\n      var _hasCamera = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11() {\n        return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n          while (1) switch (_context11.prev = _context11.next) {\n            case 0:\n              _context11.prev = 0;\n              _context11.next = 3;\n              return e.listCameras(!1);\n            case 3:\n              return _context11.abrupt(\"return\", !!_context11.sent.length);\n            case 6:\n              _context11.prev = 6;\n              _context11.t0 = _context11[\"catch\"](0);\n              return _context11.abrupt(\"return\", !1);\n            case 9:\n            case \"end\":\n              return _context11.stop();\n          }\n        }, _callee11, null, [[0, 6]]);\n      }));\n      function hasCamera() {\n        return _hasCamera.apply(this, arguments);\n      }\n      return hasCamera;\n    }()\n  }, {\n    key: \"listCameras\",\n    value: function () {\n      var _listCameras = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee13() {\n        var a,\n          b,\n          c,\n          _args13 = arguments;\n        return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n          while (1) switch (_context13.prev = _context13.next) {\n            case 0:\n              a = _args13.length > 0 && _args13[0] !== undefined ? _args13[0] : !1;\n              if (navigator.mediaDevices) {\n                _context13.next = 3;\n                break;\n              }\n              return _context13.abrupt(\"return\", []);\n            case 3:\n              b = /*#__PURE__*/function () {\n                var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12() {\n                  return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n                    while (1) switch (_context12.prev = _context12.next) {\n                      case 0:\n                        _context12.next = 2;\n                        return navigator.mediaDevices.enumerateDevices();\n                      case 2:\n                        return _context12.abrupt(\"return\", _context12.sent.filter(function (d) {\n                          return \"videoinput\" === d.kind;\n                        }));\n                      case 3:\n                      case \"end\":\n                        return _context12.stop();\n                    }\n                  }, _callee12);\n                }));\n                return function b() {\n                  return _ref3.apply(this, arguments);\n                };\n              }();\n              _context13.prev = 4;\n              _context13.t0 = a;\n              if (!_context13.t0) {\n                _context13.next = 10;\n                break;\n              }\n              _context13.next = 9;\n              return b();\n            case 9:\n              _context13.t0 = _context13.sent.every(function (d) {\n                return !d.label;\n              });\n            case 10:\n              _context13.t1 = _context13.t0;\n              if (!_context13.t1) {\n                _context13.next = 15;\n                break;\n              }\n              _context13.next = 14;\n              return navigator.mediaDevices.getUserMedia({\n                audio: !1,\n                video: !0\n              });\n            case 14:\n              c = _context13.sent;\n            case 15:\n              _context13.next = 19;\n              break;\n            case 17:\n              _context13.prev = 17;\n              _context13.t2 = _context13[\"catch\"](4);\n            case 19:\n              _context13.prev = 19;\n              _context13.next = 22;\n              return b();\n            case 22:\n              return _context13.abrupt(\"return\", _context13.sent.map(function (d, f) {\n                return {\n                  id: d.deviceId,\n                  label: d.label || (0 === f ? \"Default Camera\" : \"Camera \".concat(f + 1))\n                };\n              }));\n            case 23:\n              _context13.prev = 23;\n              c && (console.warn(\"Call listCameras after successfully starting a QR scanner to avoid creating a temporary video stream\"), e._stopVideoStream(c));\n              return _context13.finish(23);\n            case 26:\n            case \"end\":\n              return _context13.stop();\n          }\n        }, _callee13, null, [[4, 17], [19,, 23, 26]]);\n      }));\n      function listCameras() {\n        return _listCameras.apply(this, arguments);\n      }\n      return listCameras;\n    }()\n  }, {\n    key: \"scanImage\",\n    value: function () {\n      var _scanImage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee15(a, b, c, d) {\n        var f,\n          h,\n          m,\n          n,\n          p,\n          k,\n          _yield$Promise$all,\n          _yield$Promise$all2,\n          _e$_drawToCanvas,\n          _e$_drawToCanvas2,\n          q,\n          g,\n          _k,\n          _args15 = arguments;\n        return _regeneratorRuntime().wrap(function _callee15$(_context15) {\n          while (1) switch (_context15.prev = _context15.next) {\n            case 0:\n              f = _args15.length > 4 && _args15[4] !== undefined ? _args15[4] : !1;\n              h = _args15.length > 5 && _args15[5] !== undefined ? _args15[5] : !1;\n              n = !1;\n              b && (\"scanRegion\" in b || \"qrEngine\" in b || \"canvas\" in b || \"disallowCanvasResizing\" in b || \"alsoTryWithoutScanRegion\" in b || \"returnDetailedScanResult\" in b) ? (m = b.scanRegion, c = b.qrEngine, d = b.canvas, f = b.disallowCanvasResizing || !1, h = b.alsoTryWithoutScanRegion || !1, n = !0) : b || c || d || f || h ? console.warn(\"You're using a deprecated api for scanImage which will be removed in the future.\") : console.warn(\"Note that the return type of scanImage will change in the future. To already switch to the new api today, you can pass returnDetailedScanResult: true.\");\n              b = !!c;\n              _context15.prev = 5;\n              _context15.next = 8;\n              return Promise.all([c || e.createQrEngine(), e._loadImage(a)]);\n            case 8:\n              _yield$Promise$all = _context15.sent;\n              _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2);\n              c = _yield$Promise$all2[0];\n              p = _yield$Promise$all2[1];\n              _e$_drawToCanvas = e._drawToCanvas(p, m, d, f);\n              _e$_drawToCanvas2 = _slicedToArray(_e$_drawToCanvas, 2);\n              d = _e$_drawToCanvas2[0];\n              k = _e$_drawToCanvas2[1];\n              if (!(c instanceof Worker)) {\n                _context15.next = 24;\n                break;\n              }\n              g = c;\n              b || e._postWorkerMessageSync(g, \"inversionMode\", \"both\");\n              _context15.next = 21;\n              return new Promise(function (l, v) {\n                var w,\n                  _u,\n                  _r,\n                  y = -1;\n                _u = function u(t) {\n                  t.data.id === y && (g.removeEventListener(\"message\", _u), g.removeEventListener(\"error\", _r), clearTimeout(w), null !== t.data.data ? l({\n                    data: t.data.data,\n                    cornerPoints: e._convertPoints(t.data.cornerPoints, m)\n                  }) : v(e.NO_QR_CODE_FOUND));\n                };\n                _r = function r(t) {\n                  g.removeEventListener(\"message\", _u);\n                  g.removeEventListener(\"error\", _r);\n                  clearTimeout(w);\n                  v(\"Scanner error: \" + (t ? t.message || t : \"Unknown Error\"));\n                };\n                g.addEventListener(\"message\", _u);\n                g.addEventListener(\"error\", _r);\n                w = setTimeout(function () {\n                  return _r(\"timeout\");\n                }, 1E4);\n                var x = k.getImageData(0, 0, d.width, d.height);\n                y = e._postWorkerMessageSync(g, \"decode\", x, [x.data.buffer]);\n              });\n            case 21:\n              q = _context15.sent;\n              _context15.next = 27;\n              break;\n            case 24:\n              _context15.next = 26;\n              return Promise.race([new Promise(function (g, l) {\n                return window.setTimeout(function () {\n                  return l(\"Scanner error: timeout\");\n                }, 1E4);\n              }), _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee14() {\n                var _yield$c$detect, _yield$c$detect2, g;\n                return _regeneratorRuntime().wrap(function _callee14$(_context14) {\n                  while (1) switch (_context14.prev = _context14.next) {\n                    case 0:\n                      _context14.prev = 0;\n                      _context14.next = 3;\n                      return c.detect(d);\n                    case 3:\n                      _yield$c$detect = _context14.sent;\n                      _yield$c$detect2 = _slicedToArray(_yield$c$detect, 1);\n                      g = _yield$c$detect2[0];\n                      if (g) {\n                        _context14.next = 8;\n                        break;\n                      }\n                      throw e.NO_QR_CODE_FOUND;\n                    case 8:\n                      return _context14.abrupt(\"return\", {\n                        data: g.rawValue,\n                        cornerPoints: e._convertPoints(g.cornerPoints, m)\n                      });\n                    case 11:\n                      _context14.prev = 11;\n                      _context14.t0 = _context14[\"catch\"](0);\n                      g = _context14.t0.message || _context14.t0;\n                      if (!/not implemented|service unavailable/.test(g)) {\n                        _context14.next = 16;\n                        break;\n                      }\n                      return _context14.abrupt(\"return\", (e._disableBarcodeDetector = !0, e.scanImage(a, {\n                        scanRegion: m,\n                        canvas: d,\n                        disallowCanvasResizing: f,\n                        alsoTryWithoutScanRegion: h\n                      })));\n                    case 16:\n                      throw \"Scanner error: \".concat(g);\n                    case 17:\n                    case \"end\":\n                      return _context14.stop();\n                  }\n                }, _callee14, null, [[0, 11]]);\n              }))()]);\n            case 26:\n              q = _context15.sent;\n            case 27:\n              return _context15.abrupt(\"return\", n ? q : q.data);\n            case 30:\n              _context15.prev = 30;\n              _context15.t0 = _context15[\"catch\"](5);\n              if (!(!m || !h)) {\n                _context15.next = 34;\n                break;\n              }\n              throw _context15.t0;\n            case 34:\n              _context15.next = 36;\n              return e.scanImage(a, {\n                qrEngine: c,\n                canvas: d,\n                disallowCanvasResizing: f\n              });\n            case 36:\n              _k = _context15.sent;\n              return _context15.abrupt(\"return\", n ? _k : _k.data);\n            case 38:\n              _context15.prev = 38;\n              b || e._postWorkerMessage(c, \"close\");\n              return _context15.finish(38);\n            case 41:\n            case \"end\":\n              return _context15.stop();\n          }\n        }, _callee15, null, [[5, 30, 38, 41]]);\n      }));\n      function scanImage(_x2, _x3, _x4, _x5) {\n        return _scanImage.apply(this, arguments);\n      }\n      return scanImage;\n    }()\n  }, {\n    key: \"createQrEngine\",\n    value: function () {\n      var _createQrEngine = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee16(a) {\n        var b;\n        return _regeneratorRuntime().wrap(function _callee16$(_context16) {\n          while (1) switch (_context16.prev = _context16.next) {\n            case 0:\n              a && console.warn(\"Specifying a worker path is not required and not supported anymore.\");\n              a = function a() {\n                return import(\"./qr-scanner-worker.min.js\").then(function (c) {\n                  return c.createWorker();\n                });\n              };\n              _context16.t0 = !e._disableBarcodeDetector && \"BarcodeDetector\" in window && BarcodeDetector.getSupportedFormats;\n              if (!_context16.t0) {\n                _context16.next = 7;\n                break;\n              }\n              _context16.next = 6;\n              return BarcodeDetector.getSupportedFormats();\n            case 6:\n              _context16.t0 = _context16.sent.includes(\"qr_code\");\n            case 7:\n              if (_context16.t0) {\n                _context16.next = 9;\n                break;\n              }\n              return _context16.abrupt(\"return\", a());\n            case 9:\n              b = navigator.userAgentData;\n              _context16.t1 = b && b.brands.some(function (_ref5) {\n                var c = _ref5.brand;\n                return /Chromium/i.test(c);\n              }) && /mac ?OS/i.test(b.platform);\n              if (!_context16.t1) {\n                _context16.next = 15;\n                break;\n              }\n              _context16.next = 14;\n              return b.getHighEntropyValues([\"architecture\", \"platformVersion\"]).then(function (_ref6) {\n                var c = _ref6.architecture,\n                  d = _ref6.platformVersion;\n                return /arm/i.test(c || \"arm\") && 13 <= parseInt(d || \"13\");\n              }).catch(function () {\n                return !0;\n              });\n            case 14:\n              _context16.t1 = _context16.sent;\n            case 15:\n              if (!_context16.t1) {\n                _context16.next = 19;\n                break;\n              }\n              _context16.t2 = a();\n              _context16.next = 20;\n              break;\n            case 19:\n              _context16.t2 = new BarcodeDetector({\n                formats: [\"qr_code\"]\n              });\n            case 20:\n              return _context16.abrupt(\"return\", _context16.t2);\n            case 21:\n            case \"end\":\n              return _context16.stop();\n          }\n        }, _callee16);\n      }));\n      function createQrEngine(_x6) {\n        return _createQrEngine.apply(this, arguments);\n      }\n      return createQrEngine;\n    }()\n  }, {\n    key: \"_convertPoints\",\n    value: function _convertPoints(a, b) {\n      if (!b) return a;\n      var c = b.x || 0,\n        d = b.y || 0,\n        f = b.width && b.downScaledWidth ? b.width / b.downScaledWidth : 1;\n      b = b.height && b.downScaledHeight ? b.height / b.downScaledHeight : 1;\n      var _iterator = _createForOfIteratorHelper(a),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var h = _step.value;\n          h.x = h.x * f + c, h.y = h.y * b + d;\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      return a;\n    }\n  }, {\n    key: \"_stopVideoStream\",\n    value: function _stopVideoStream(a) {\n      var _iterator2 = _createForOfIteratorHelper(a.getTracks()),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var b = _step2.value;\n          b.stop(), a.removeTrack(b);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  }, {\n    key: \"_drawToCanvas\",\n    value: function _drawToCanvas(a, b, c) {\n      var d = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : !1;\n      c = c || document.createElement(\"canvas\");\n      var f = b && b.x ? b.x : 0,\n        h = b && b.y ? b.y : 0,\n        m = b && b.width ? b.width : a.videoWidth || a.width,\n        n = b && b.height ? b.height : a.videoHeight || a.height;\n      d || (d = b && b.downScaledWidth ? b.downScaledWidth : m, b = b && b.downScaledHeight ? b.downScaledHeight : n, c.width !== d && (c.width = d), c.height !== b && (c.height = b));\n      b = c.getContext(\"2d\", {\n        alpha: !1\n      });\n      b.imageSmoothingEnabled = !1;\n      b.drawImage(a, f, h, m, n, 0, 0, c.width, c.height);\n      return [c, b];\n    }\n  }, {\n    key: \"_loadImage\",\n    value: function () {\n      var _loadImage2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee17(a) {\n        var b;\n        return _regeneratorRuntime().wrap(function _callee17$(_context17) {\n          while (1) switch (_context17.prev = _context17.next) {\n            case 0:\n              if (!(a instanceof Image)) {\n                _context17.next = 4;\n                break;\n              }\n              _context17.next = 3;\n              return e._awaitImageLoad(a);\n            case 3:\n              return _context17.abrupt(\"return\", a);\n            case 4:\n              if (!(a instanceof HTMLVideoElement || a instanceof HTMLCanvasElement || a instanceof SVGImageElement || \"OffscreenCanvas\" in window && a instanceof OffscreenCanvas || \"ImageBitmap\" in window && a instanceof ImageBitmap)) {\n                _context17.next = 6;\n                break;\n              }\n              return _context17.abrupt(\"return\", a);\n            case 6:\n              if (!(a instanceof File || a instanceof Blob || a instanceof URL || \"string\" === typeof a)) {\n                _context17.next = 18;\n                break;\n              }\n              b = new Image();\n              b.src = a instanceof File || a instanceof Blob ? URL.createObjectURL(a) : a.toString();\n              _context17.prev = 9;\n              _context17.next = 12;\n              return e._awaitImageLoad(b);\n            case 12:\n              return _context17.abrupt(\"return\", b);\n            case 13:\n              _context17.prev = 13;\n              (a instanceof File || a instanceof Blob) && URL.revokeObjectURL(b.src);\n              return _context17.finish(13);\n            case 16:\n              _context17.next = 19;\n              break;\n            case 18:\n              throw \"Unsupported image type.\";\n            case 19:\n            case \"end\":\n              return _context17.stop();\n          }\n        }, _callee17, null, [[9,, 13, 16]]);\n      }));\n      function _loadImage(_x7) {\n        return _loadImage2.apply(this, arguments);\n      }\n      return _loadImage;\n    }()\n  }, {\n    key: \"_awaitImageLoad\",\n    value: function () {\n      var _awaitImageLoad2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee18(a) {\n        return _regeneratorRuntime().wrap(function _callee18$(_context18) {\n          while (1) switch (_context18.prev = _context18.next) {\n            case 0:\n              _context18.t0 = a.complete && 0 !== a.naturalWidth;\n              if (_context18.t0) {\n                _context18.next = 4;\n                break;\n              }\n              _context18.next = 4;\n              return new Promise(function (b, c) {\n                var d = function d(f) {\n                  a.removeEventListener(\"load\", d);\n                  a.removeEventListener(\"error\", d);\n                  f instanceof ErrorEvent ? c(\"Image load error\") : b();\n                };\n                a.addEventListener(\"load\", d);\n                a.addEventListener(\"error\", d);\n              });\n            case 4:\n            case \"end\":\n              return _context18.stop();\n          }\n        }, _callee18);\n      }));\n      function _awaitImageLoad(_x8) {\n        return _awaitImageLoad2.apply(this, arguments);\n      }\n      return _awaitImageLoad;\n    }()\n  }, {\n    key: \"_postWorkerMessage\",\n    value: function () {\n      var _postWorkerMessage2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee19(a, b, c, d) {\n        return _regeneratorRuntime().wrap(function _callee19$(_context19) {\n          while (1) switch (_context19.prev = _context19.next) {\n            case 0:\n              _context19.t0 = e;\n              _context19.next = 3;\n              return a;\n            case 3:\n              _context19.t1 = _context19.sent;\n              _context19.t2 = b;\n              _context19.t3 = c;\n              _context19.t4 = d;\n              return _context19.abrupt(\"return\", _context19.t0._postWorkerMessageSync.call(_context19.t0, _context19.t1, _context19.t2, _context19.t3, _context19.t4));\n            case 8:\n            case \"end\":\n              return _context19.stop();\n          }\n        }, _callee19);\n      }));\n      function _postWorkerMessage(_x9, _x10, _x11, _x12) {\n        return _postWorkerMessage2.apply(this, arguments);\n      }\n      return _postWorkerMessage;\n    }()\n  }, {\n    key: \"_postWorkerMessageSync\",\n    value: function _postWorkerMessageSync(a, b, c, d) {\n      if (!(a instanceof Worker)) return -1;\n      var f = e._workerMessageId++;\n      a.postMessage({\n        id: f,\n        type: b,\n        data: c\n      }, d);\n      return f;\n    }\n  }]);\n  return e;\n}();\ne.DEFAULT_CANVAS_SIZE = 400;\ne.NO_QR_CODE_FOUND = \"No QR code found\";\ne._disableBarcodeDetector = !1;\ne._workerMessageId = 0;\nexport default e;","map":{"version":3,"names":["a","b","c","d","f","_this","_classCallCheck","e","_legacyCanvasSize","DEFAULT_CANVAS_SIZE","_preferredCamera","_maxScansPerSecond","_lastScanTimestamp","_destroyed","_flashOn","_paused","_active","$video","$canvas","document","createElement","_typeof","_onDecode","console","warn","_legacyOnDecode","_onDecodeError","onDecodeError","_calculateScanRegion","calculateScanRegion","preferredCamera","maxScansPerSecond","_onPlay","bind","_onLoadedMetaData","_onVisibilityChange","_updateOverlay","disablePictureInPicture","playsInline","muted","h","hidden","body","contains","appendChild","parentElement","highlightScanRegion","highlightCodeOutline","overlay","$overlay","style","position","display","pointerEvents","classList","add","innerHTML","firstElementChild","animate","transform","duration","iterations","Infinity","direction","easing","m","insertBefore","nextSibling","insertAdjacentHTML","$codeOutlineHighlight","lastElementChild","_scanRegion","requestAnimationFrame","window","getComputedStyle","setProperty","visibility","opacity","width","height","removeChild","addEventListener","_qrEnginePromise","createQrEngine","_createClass","key","value","_hasFlash","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","srcObject","MediaStream","abrupt","_getCameraStream","sent","stream","getVideoTracks","getSettings","t0","_stopVideoStream","finish","stop","hasFlash","apply","arguments","isFlashOn","_toggleFlash","_callee2","_callee2$","_context2","turnFlashOff","turnFlashOn","toggleFlash","_turnFlashOn","_callee3","_callee3$","_context3","applyConstraints","advanced","torch","_turnFlashOff","_callee4","_callee4$","_context4","_restartVideoStream","destroy","removeEventListener","_postWorkerMessage","_start","_callee5","_yield$this$_getCamer","_callee5$","_context5","Error","location","protocol","play","facingMode","_setVideoMirror","catch","start","pause","_pause","_callee6","_this2","_args6","_callee6$","_context6","length","undefined","Promise","setTimeout","_setCamera","_callee7","_callee7$","_context7","setCamera","_x","setGrayscaleWeights","red","green","blue","useIntegerApproximation","setInversionMode","_scanFrame","Math","round","min","videoWidth","videoHeight","x","y","downScaledWidth","downScaledHeight","_this3","offsetWidth","offsetHeight","offsetLeft","n","p","objectFit","k","q","g","l","_n$objectPosition$spl","objectPosition","split","map","r","parseFloat","endsWith","_n$objectPosition$spl2","_slicedToArray","v","w","u","concat","top","test","left","_this4","paused","ended","requestVideoFrameCallback","_callee8","_callee8$","_context8","readyState","Date","now","scanImage","scanRegion","qrEngine","canvas","t1","t2","_disableBarcodeDetector","t3","t4","Worker","t5","data","clearTimeout","_codeOutlineHighlightRemovalTimeout","setAttribute","cornerPoints","_ref2","join","NO_QR_CODE_FOUND","log","_getCameraStream2","_callee9","_this5","_i","_arr","_callee9$","_context9","navigator","mediaDevices","Object","assign","_defineProperty","exact","_toConsumableArray","getUserMedia","video","audio","_getFacingMode","_restartVideoStream2","_callee10","_callee10$","_context10","label","set","_hasCamera","_callee11","_callee11$","_context11","listCameras","hasCamera","_listCameras","_callee13","_args13","_callee13$","_context13","_ref3","_callee12","_callee12$","_context12","enumerateDevices","filter","kind","every","id","deviceId","_scanImage","_callee15","_yield$Promise$all","_yield$Promise$all2","_e$_drawToCanvas","_e$_drawToCanvas2","_k","_args15","_callee15$","_context15","disallowCanvasResizing","alsoTryWithoutScanRegion","all","_loadImage","_drawToCanvas","_postWorkerMessageSync","t","_convertPoints","getImageData","buffer","race","_callee14","_yield$c$detect","_yield$c$detect2","_callee14$","_context14","detect","rawValue","message","_x2","_x3","_x4","_x5","_createQrEngine","_callee16","_callee16$","_context16","then","createWorker","BarcodeDetector","getSupportedFormats","includes","userAgentData","brands","some","_ref5","brand","platform","getHighEntropyValues","_ref6","architecture","platformVersion","parseInt","formats","_x6","_iterator","_createForOfIteratorHelper","_step","s","done","err","_iterator2","getTracks","_step2","removeTrack","getContext","alpha","imageSmoothingEnabled","drawImage","_loadImage2","_callee17","_callee17$","_context17","Image","_awaitImageLoad","HTMLVideoElement","HTMLCanvasElement","SVGImageElement","OffscreenCanvas","ImageBitmap","File","Blob","URL","src","createObjectURL","toString","revokeObjectURL","_x7","_awaitImageLoad2","_callee18","_callee18$","_context18","complete","naturalWidth","ErrorEvent","_x8","_postWorkerMessage2","_callee19","_callee19$","_context19","call","_x9","_x10","_x11","_x12","_workerMessageId","postMessage","type"],"sources":["src/qr-scanner.ts"],"sourcesContent":["class QrScanner {\n    static readonly DEFAULT_CANVAS_SIZE = 400;\n    static readonly NO_QR_CODE_FOUND = 'No QR code found';\n    private static _disableBarcodeDetector = false;\n    private static _workerMessageId = 0;\n\n    /** @deprecated */\n    static set WORKER_PATH(workerPath: string) {\n        console.warn('Setting QrScanner.WORKER_PATH is not required and not supported anymore. '\n            + 'Have a look at the README for new setup instructions.');\n    }\n\n    static async hasCamera(): Promise<boolean> {\n        try {\n            return !!(await QrScanner.listCameras(false)).length;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    static async listCameras(requestLabels = false): Promise<Array<QrScanner.Camera>> {\n        if (!navigator.mediaDevices) return [];\n\n        const enumerateCameras = async (): Promise<Array<MediaDeviceInfo>> =>\n            (await navigator.mediaDevices.enumerateDevices()).filter((device) => device.kind === 'videoinput');\n\n        // Note that enumerateDevices can always be called and does not prompt the user for permission.\n        // However, enumerateDevices only includes device labels if served via https and an active media stream exists\n        // or permission to access the camera was given. Therefore, if we're not getting labels but labels are requested\n        // ask for camera permission by opening a stream.\n        let openedStream: MediaStream | undefined;\n        try {\n            if (requestLabels && (await enumerateCameras()).every((camera) => !camera.label)) {\n                openedStream = await navigator.mediaDevices.getUserMedia({ audio: false, video: true });\n            }\n        } catch (e) {\n            // Fail gracefully, especially if the device has no camera or on mobile when the camera is already in use\n            // and some browsers disallow a second stream.\n        }\n\n        try {\n            return (await enumerateCameras()).map((camera, i) => ({\n                id: camera.deviceId,\n                label: camera.label || (i === 0 ? 'Default Camera' : `Camera ${i + 1}`),\n            }));\n        } finally {\n            // close the stream we just opened for getting camera access for listing the device labels\n            if (openedStream) {\n                console.warn('Call listCameras after successfully starting a QR scanner to avoid creating '\n                    + 'a temporary video stream');\n                QrScanner._stopVideoStream(openedStream);\n            }\n        }\n    }\n\n    readonly $video: HTMLVideoElement;\n    readonly $canvas: HTMLCanvasElement;\n    readonly $overlay?: HTMLDivElement;\n    private readonly $codeOutlineHighlight?: SVGSVGElement;\n    private readonly _onDecode?: (result: QrScanner.ScanResult) => void;\n    private readonly _legacyOnDecode?: (result: string) => void;\n    private readonly _legacyCanvasSize: number = QrScanner.DEFAULT_CANVAS_SIZE;\n    private _preferredCamera: QrScanner.FacingMode | QrScanner.DeviceId = 'environment';\n    private readonly _maxScansPerSecond: number = 25;\n    private _lastScanTimestamp: number = -1;\n    private _scanRegion: QrScanner.ScanRegion;\n    private _codeOutlineHighlightRemovalTimeout?: number;\n    private _qrEnginePromise: Promise<Worker | BarcodeDetector>\n    private _active: boolean = false;\n    private _paused: boolean = false;\n    private _flashOn: boolean = false;\n    private _destroyed: boolean = false;\n\n    constructor(\n        video: HTMLVideoElement,\n        onDecode: (result: QrScanner.ScanResult) => void,\n        options: {\n            onDecodeError?: (error: Error | string) => void,\n            calculateScanRegion?: (video: HTMLVideoElement) => QrScanner.ScanRegion,\n            preferredCamera?: QrScanner.FacingMode | QrScanner.DeviceId,\n            maxScansPerSecond?: number;\n            highlightScanRegion?: boolean,\n            highlightCodeOutline?: boolean,\n            overlay?: HTMLDivElement,\n            /** just a temporary flag until we switch entirely to the new api */\n            returnDetailedScanResult?: true,\n        },\n    );\n    /** @deprecated */\n    constructor(\n        video: HTMLVideoElement,\n        onDecode: (result: string) => void,\n        onDecodeError?: (error: Error | string) => void,\n        calculateScanRegion?: (video: HTMLVideoElement) => QrScanner.ScanRegion,\n        preferredCamera?: QrScanner.FacingMode | QrScanner.DeviceId,\n    );\n    /** @deprecated */\n    constructor(\n        video: HTMLVideoElement,\n        onDecode: (result: string) => void,\n        onDecodeError?: (error: Error | string) => void,\n        canvasSize?: number,\n        preferredCamera?: QrScanner.FacingMode | QrScanner.DeviceId,\n    );\n    /** @deprecated */\n    constructor(video: HTMLVideoElement, onDecode: (result: string) => void, canvasSize?: number);\n    constructor(\n        video: HTMLVideoElement,\n        onDecode: ((result: QrScanner.ScanResult) => void) | ((result: string) => void),\n        canvasSizeOrOnDecodeErrorOrOptions?: number | ((error: Error | string) => void) | {\n            onDecodeError?: (error: Error | string) => void,\n            calculateScanRegion?: (video: HTMLVideoElement) => QrScanner.ScanRegion,\n            preferredCamera?: QrScanner.FacingMode | QrScanner.DeviceId,\n            maxScansPerSecond?: number;\n            highlightScanRegion?: boolean,\n            highlightCodeOutline?: boolean,\n            overlay?: HTMLDivElement,\n            /** just a temporary flag until we switch entirely to the new api */\n            returnDetailedScanResult?: true,\n        },\n        canvasSizeOrCalculateScanRegion?: number | ((video: HTMLVideoElement) => QrScanner.ScanRegion),\n        preferredCamera?: QrScanner.FacingMode | QrScanner.DeviceId,\n    ) {\n        this.$video = video;\n        this.$canvas = document.createElement('canvas');\n\n        if (canvasSizeOrOnDecodeErrorOrOptions && typeof canvasSizeOrOnDecodeErrorOrOptions === 'object') {\n            // we got an options object using the new api\n            this._onDecode = onDecode as QrScanner['_onDecode'];\n        } else {\n            if (canvasSizeOrOnDecodeErrorOrOptions || canvasSizeOrCalculateScanRegion || preferredCamera) {\n                console.warn('You\\'re using a deprecated version of the QrScanner constructor which will be removed in '\n                    + 'the future');\n            } else {\n                // Only video and onDecode were specified and we can't distinguish between new or old api usage. For\n                // backwards compatibility we have to assume the old api for now. The options object is marked as non-\n                // optional in the parameter list above to make clear that ScanResult instead of string is only passed\n                // if an options object was provided. However, in the future once legacy support is removed, the options\n                // object should become optional.\n                console.warn('Note that the type of the scan result passed to onDecode will change in the future. '\n                    + 'To already switch to the new api today, you can pass returnDetailedScanResult: true.');\n            }\n            this._legacyOnDecode = onDecode as QrScanner['_legacyOnDecode'];\n        }\n\n        const options = typeof canvasSizeOrOnDecodeErrorOrOptions === 'object'\n            ? canvasSizeOrOnDecodeErrorOrOptions\n            : {};\n        this._onDecodeError = options.onDecodeError || (typeof canvasSizeOrOnDecodeErrorOrOptions === 'function'\n            ? canvasSizeOrOnDecodeErrorOrOptions\n            : this._onDecodeError);\n        this._calculateScanRegion = options.calculateScanRegion || (typeof canvasSizeOrCalculateScanRegion==='function'\n            ? canvasSizeOrCalculateScanRegion\n            : this._calculateScanRegion);\n        this._preferredCamera = options.preferredCamera || preferredCamera || this._preferredCamera;\n        this._legacyCanvasSize = typeof canvasSizeOrOnDecodeErrorOrOptions === 'number'\n            ? canvasSizeOrOnDecodeErrorOrOptions\n            : typeof canvasSizeOrCalculateScanRegion === 'number'\n                ? canvasSizeOrCalculateScanRegion\n                : this._legacyCanvasSize;\n        this._maxScansPerSecond = options.maxScansPerSecond || this._maxScansPerSecond;\n\n        this._onPlay = this._onPlay.bind(this);\n        this._onLoadedMetaData = this._onLoadedMetaData.bind(this);\n        this._onVisibilityChange = this._onVisibilityChange.bind(this);\n        this._updateOverlay = this._updateOverlay.bind(this);\n\n        // @ts-ignore\n        video.disablePictureInPicture = true;\n        // Allow inline playback on iPhone instead of requiring full screen playback,\n        // see https://webkit.org/blog/6784/new-video-policies-for-ios/\n        // @ts-ignore\n        video.playsInline = true;\n        // Allow play() on iPhone without requiring a user gesture. Should not really be needed as camera stream\n        // includes no audio, but just to be safe.\n        video.muted = true;\n\n        // Avoid Safari stopping the video stream on a hidden video.\n        // See https://github.com/cozmo/jsQR/issues/185\n        let shouldHideVideo = false;\n        if (video.hidden) {\n            video.hidden = false;\n            shouldHideVideo = true;\n        }\n        if (!document.body.contains(video)) {\n            document.body.appendChild(video);\n            shouldHideVideo = true;\n        }\n        const videoContainer = video.parentElement!;\n\n        if (options.highlightScanRegion || options.highlightCodeOutline) {\n            const gotExternalOverlay = !!options.overlay;\n            this.$overlay = options.overlay || document.createElement('div');\n            const overlayStyle = this.$overlay.style;\n            overlayStyle.position = 'absolute';\n            overlayStyle.display = 'none';\n            overlayStyle.pointerEvents = 'none';\n            this.$overlay.classList.add('scan-region-highlight');\n            if (!gotExternalOverlay && options.highlightScanRegion) {\n                // default style; can be overwritten via css, e.g. by changing the svg's stroke color, hiding the\n                // .scan-region-highlight-svg, setting a border, outline, background, etc.\n                this.$overlay.innerHTML = '<svg class=\"scan-region-highlight-svg\" viewBox=\"0 0 238 238\" '\n                    + 'preserveAspectRatio=\"none\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;'\n                    + 'fill:none;stroke:#e9b213;stroke-width:4;stroke-linecap:round;stroke-linejoin:round\">'\n                    + '<path d=\"M31 2H10a8 8 0 0 0-8 8v21M207 2h21a8 8 0 0 1 8 8v21m0 176v21a8 8 0 0 1-8 8h-21m-176 '\n                    + '0H10a8 8 0 0 1-8-8v-21\"/></svg>';\n                try {\n                    this.$overlay.firstElementChild!.animate({ transform: ['scale(.98)', 'scale(1.01)'] }, {\n                        duration: 400,\n                        iterations: Infinity,\n                        direction: 'alternate',\n                        easing: 'ease-in-out',\n                    });\n                } catch (e) {}\n                videoContainer.insertBefore(this.$overlay, this.$video.nextSibling);\n            }\n            if (options.highlightCodeOutline) {\n                // default style; can be overwritten via css\n                this.$overlay.insertAdjacentHTML(\n                    'beforeend',\n                    '<svg class=\"code-outline-highlight\" preserveAspectRatio=\"none\" style=\"display:none;width:100%;'\n                        + 'height:100%;fill:none;stroke:#e9b213;stroke-width:5;stroke-dasharray:25;'\n                        + 'stroke-linecap:round;stroke-linejoin:round\"><polygon/></svg>',\n                );\n                this.$codeOutlineHighlight = this.$overlay.lastElementChild as SVGSVGElement;\n            }\n        }\n        this._scanRegion = this._calculateScanRegion(video);\n\n        requestAnimationFrame(() => {\n            // Checking in requestAnimationFrame which should avoid a potential additional re-flow for getComputedStyle.\n            const videoStyle = window.getComputedStyle(video);\n            if (videoStyle.display === 'none') {\n                video.style.setProperty('display', 'block', 'important');\n                shouldHideVideo = true;\n            }\n            if (videoStyle.visibility !== 'visible') {\n                video.style.setProperty('visibility', 'visible', 'important');\n                shouldHideVideo = true;\n            }\n            if (shouldHideVideo) {\n                // Hide the video in a way that doesn't cause Safari to stop the playback.\n                console.warn('QrScanner has overwritten the video hiding style to avoid Safari stopping the playback.');\n                video.style.opacity = '0';\n                video.style.width = '0';\n                video.style.height = '0';\n                if (this.$overlay && this.$overlay.parentElement) {\n                    this.$overlay.parentElement.removeChild(this.$overlay);\n                }\n                // @ts-ignore\n                delete this.$overlay!;\n                // @ts-ignore\n                delete this.$codeOutlineHighlight!;\n            }\n\n            if (this.$overlay) {\n                this._updateOverlay();\n            }\n        });\n\n        video.addEventListener('play', this._onPlay);\n        video.addEventListener('loadedmetadata', this._onLoadedMetaData);\n        document.addEventListener('visibilitychange', this._onVisibilityChange);\n        window.addEventListener('resize', this._updateOverlay);\n\n        this._qrEnginePromise = QrScanner.createQrEngine();\n    }\n\n    async hasFlash(): Promise<boolean> {\n        let stream: MediaStream | undefined;\n        try {\n            if (this.$video.srcObject) {\n                if (!(this.$video.srcObject instanceof MediaStream)) return false; // srcObject is not a camera stream\n                stream = this.$video.srcObject;\n            } else {\n                stream = (await this._getCameraStream()).stream;\n            }\n            return 'torch' in stream.getVideoTracks()[0].getSettings();\n        } catch (e) {\n            return false;\n        } finally {\n            // close the stream we just opened for detecting whether it supports flash\n            if (stream && stream !== this.$video.srcObject) {\n                console.warn('Call hasFlash after successfully starting the scanner to avoid creating '\n                    + 'a temporary video stream');\n                QrScanner._stopVideoStream(stream);\n            }\n        }\n    }\n\n    isFlashOn(): boolean {\n        return this._flashOn;\n    }\n\n    async toggleFlash(): Promise<void> {\n        if (this._flashOn) {\n            await this.turnFlashOff();\n        } else {\n            await this.turnFlashOn();\n        }\n    }\n\n    async turnFlashOn(): Promise<void> {\n        if (this._flashOn || this._destroyed) return;\n        this._flashOn = true;\n        if (!this._active || this._paused) return; // flash will be turned on later on .start()\n        try {\n            if (!await this.hasFlash()) throw 'No flash available';\n            // Note that the video track is guaranteed to exist and to be a MediaStream due to the check in hasFlash\n            await (this.$video.srcObject as MediaStream).getVideoTracks()[0].applyConstraints({\n                // @ts-ignore: constraint 'torch' is unknown to ts\n                advanced: [{ torch: true }],\n            });\n        } catch (e) {\n            this._flashOn = false;\n            throw e;\n        }\n    }\n\n    async turnFlashOff(): Promise<void> {\n        if (!this._flashOn) return;\n        // applyConstraints with torch: false does not work to turn the flashlight off, as a stream's torch stays\n        // continuously on, see https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints#torch. Therefore,\n        // we have to stop the stream to turn the flashlight off.\n        this._flashOn = false;\n        await this._restartVideoStream();\n    }\n\n    destroy(): void {\n        this.$video.removeEventListener('loadedmetadata', this._onLoadedMetaData);\n        this.$video.removeEventListener('play', this._onPlay);\n        document.removeEventListener('visibilitychange', this._onVisibilityChange);\n        window.removeEventListener('resize', this._updateOverlay);\n\n        this._destroyed = true;\n        this._flashOn = false;\n        this.stop(); // sets this._paused = true and this._active = false\n        QrScanner._postWorkerMessage(this._qrEnginePromise, 'close');\n    }\n\n    async start(): Promise<void> {\n        if (this._destroyed) throw new Error('The QR scanner can not be started as it had been destroyed.');\n        if (this._active && !this._paused) return;\n\n        if (window.location.protocol !== 'https:') {\n            // warn but try starting the camera anyways\n            console.warn('The camera stream is only accessible if the page is transferred via https.');\n        }\n\n        this._active = true;\n        if (document.hidden) return; // camera will be started as soon as tab is in foreground\n        this._paused = false;\n        if (this.$video.srcObject) {\n            // camera stream already/still set\n            await this.$video.play();\n            return;\n        }\n\n        try {\n            const { stream, facingMode } = await this._getCameraStream();\n            if (!this._active || this._paused) {\n                // was stopped in the meantime\n                QrScanner._stopVideoStream(stream);\n                return;\n            }\n            this._setVideoMirror(facingMode);\n            this.$video.srcObject = stream;\n            await this.$video.play();\n\n            // Restart the flash if it was previously on\n            if (this._flashOn) {\n                this._flashOn = false; // force turnFlashOn to restart the flash\n                this.turnFlashOn().catch(() => {});\n            }\n        } catch (e) {\n            if (this._paused) return;\n            this._active = false;\n            throw e;\n        }\n    }\n\n    stop(): void {\n        this.pause();\n        this._active = false;\n    }\n\n    async pause(stopStreamImmediately = false): Promise<boolean> {\n        this._paused = true;\n        if (!this._active) return true;\n        this.$video.pause();\n\n        if (this.$overlay) {\n            this.$overlay.style.display = 'none';\n        }\n\n        const stopStream = () => {\n            if (this.$video.srcObject instanceof MediaStream) {\n                // revoke srcObject only if it's a stream which was likely set by us\n                QrScanner._stopVideoStream(this.$video.srcObject);\n                this.$video.srcObject = null;\n            }\n        };\n\n        if (stopStreamImmediately) {\n            stopStream();\n            return true;\n        }\n\n        await new Promise((resolve) => setTimeout(resolve, 300));\n        if (!this._paused) return false;\n        stopStream();\n        return true;\n    }\n\n    async setCamera(facingModeOrDeviceId: QrScanner.FacingMode | QrScanner.DeviceId): Promise<void> {\n        if (facingModeOrDeviceId === this._preferredCamera) return;\n        this._preferredCamera = facingModeOrDeviceId;\n        // Restart the scanner with the new camera which will also update the video mirror and the scan region.\n        await this._restartVideoStream();\n    }\n\n    static async scanImage(\n        imageOrFileOrBlobOrUrl: HTMLImageElement | HTMLVideoElement | HTMLCanvasElement | OffscreenCanvas | ImageBitmap\n            | SVGImageElement | File | Blob | URL | String,\n        options: {\n            scanRegion?: QrScanner.ScanRegion | null,\n            qrEngine?: Worker | BarcodeDetector | Promise<Worker | BarcodeDetector> | null,\n            canvas?: HTMLCanvasElement | null,\n            disallowCanvasResizing?: boolean,\n            alsoTryWithoutScanRegion?: boolean,\n            /** just a temporary flag until we switch entirely to the new api */\n            returnDetailedScanResult?: true,\n        },\n    ): Promise<QrScanner.ScanResult>;\n    /** @deprecated */\n    static async scanImage(\n        imageOrFileOrBlobOrUrl: HTMLImageElement | HTMLVideoElement | HTMLCanvasElement | OffscreenCanvas | ImageBitmap\n            | SVGImageElement | File | Blob | URL | String,\n        scanRegion?: QrScanner.ScanRegion | null,\n        qrEngine?: Worker | BarcodeDetector | Promise<Worker | BarcodeDetector> | null,\n        canvas?: HTMLCanvasElement | null,\n        disallowCanvasResizing?: boolean,\n        alsoTryWithoutScanRegion?: boolean,\n    ): Promise<string>;\n    static async scanImage(\n        imageOrFileOrBlobOrUrl: HTMLImageElement | HTMLVideoElement | HTMLCanvasElement | OffscreenCanvas | ImageBitmap\n            | SVGImageElement | File | Blob | URL | String,\n        scanRegionOrOptions?: QrScanner.ScanRegion | {\n            scanRegion?: QrScanner.ScanRegion | null,\n            qrEngine?: Worker | BarcodeDetector | Promise<Worker | BarcodeDetector> | null,\n            canvas?: HTMLCanvasElement | null,\n            disallowCanvasResizing?: boolean,\n            alsoTryWithoutScanRegion?: boolean,\n            /** just a temporary flag until we switch entirely to the new api */\n            returnDetailedScanResult?: true,\n        } | null,\n        qrEngine?: Worker | BarcodeDetector | Promise<Worker | BarcodeDetector> | null,\n        canvas?: HTMLCanvasElement | null,\n        disallowCanvasResizing: boolean = false,\n        alsoTryWithoutScanRegion: boolean = false,\n    ): Promise<string | QrScanner.ScanResult> {\n        let scanRegion: QrScanner.ScanRegion | null | undefined;\n        let returnDetailedScanResult = false;\n        if (scanRegionOrOptions && (\n            'scanRegion' in scanRegionOrOptions\n            || 'qrEngine' in scanRegionOrOptions\n            || 'canvas' in scanRegionOrOptions\n            || 'disallowCanvasResizing' in scanRegionOrOptions\n            || 'alsoTryWithoutScanRegion' in scanRegionOrOptions\n            || 'returnDetailedScanResult' in scanRegionOrOptions\n        )) {\n            // we got an options object using the new api\n            scanRegion = scanRegionOrOptions.scanRegion;\n            qrEngine = scanRegionOrOptions.qrEngine;\n            canvas = scanRegionOrOptions.canvas;\n            disallowCanvasResizing = scanRegionOrOptions.disallowCanvasResizing || false;\n            alsoTryWithoutScanRegion = scanRegionOrOptions.alsoTryWithoutScanRegion || false;\n            returnDetailedScanResult = true;\n        } else if (scanRegionOrOptions || qrEngine || canvas || disallowCanvasResizing || alsoTryWithoutScanRegion) {\n            console.warn('You\\'re using a deprecated api for scanImage which will be removed in the future.');\n        } else {\n            // Only imageOrFileOrBlobOrUrl was specified and we can't distinguish between new or old api usage. For\n            // backwards compatibility we have to assume the old api for now. The options object is marked as non-\n            // optional in the parameter list above to make clear that ScanResult instead of string is only returned if\n            // an options object was provided. However, in the future once legacy support is removed, the options object\n            // should become optional.\n            console.warn('Note that the return type of scanImage will change in the future. To already switch to the '\n                + 'new api today, you can pass returnDetailedScanResult: true.');\n        }\n\n        const gotExternalEngine = !!qrEngine;\n\n        try {\n            let image: HTMLImageElement | HTMLVideoElement | HTMLCanvasElement | OffscreenCanvas | ImageBitmap\n                | SVGImageElement;\n            let canvasContext: CanvasRenderingContext2D;\n            [qrEngine, image] = await Promise.all([\n                qrEngine || QrScanner.createQrEngine(),\n                QrScanner._loadImage(imageOrFileOrBlobOrUrl),\n            ]);\n            [canvas, canvasContext] = QrScanner._drawToCanvas(image, scanRegion, canvas, disallowCanvasResizing);\n            let detailedScanResult: QrScanner.ScanResult;\n\n            if (qrEngine instanceof Worker) {\n                const qrEngineWorker = qrEngine; // for ts to know that it's still a worker later in the event listeners\n                if (!gotExternalEngine) {\n                    // Enable scanning of inverted color qr codes.\n                    QrScanner._postWorkerMessageSync(qrEngineWorker, 'inversionMode', 'both');\n                }\n                detailedScanResult = await new Promise((resolve, reject) => {\n                    let timeout: number;\n                    let onMessage: (event: MessageEvent) => void;\n                    let onError: (error: ErrorEvent | string) => void;\n                    let expectedResponseId = -1;\n                    onMessage = (event: MessageEvent) => {\n                        if (event.data.id !== expectedResponseId) {\n                            return;\n                        }\n                        qrEngineWorker.removeEventListener('message', onMessage);\n                        qrEngineWorker.removeEventListener('error', onError);\n                        clearTimeout(timeout);\n                        if (event.data.data !== null) {\n                            resolve({\n                                data: event.data.data,\n                                cornerPoints: QrScanner._convertPoints(event.data.cornerPoints, scanRegion),\n                            });\n                        } else {\n                            reject(QrScanner.NO_QR_CODE_FOUND);\n                        }\n                    };\n                    onError = (error: ErrorEvent | string) => {\n                        qrEngineWorker.removeEventListener('message', onMessage);\n                        qrEngineWorker.removeEventListener('error', onError);\n                        clearTimeout(timeout);\n                        const errorMessage = !error ? 'Unknown Error' : ((error as ErrorEvent).message || error);\n                        reject('Scanner error: ' + errorMessage);\n                    };\n                    qrEngineWorker.addEventListener('message', onMessage);\n                    qrEngineWorker.addEventListener('error', onError);\n                    timeout = setTimeout(() => onError('timeout'), 10000);\n                    const imageData = canvasContext.getImageData(0, 0, canvas!.width, canvas!.height);\n                    expectedResponseId = QrScanner._postWorkerMessageSync(\n                        qrEngineWorker,\n                        'decode',\n                        imageData,\n                        [imageData.data.buffer],\n                    );\n                });\n            } else {\n                detailedScanResult = await Promise.race([\n                    new Promise<QrScanner.ScanResult>((resolve, reject) => window.setTimeout(\n                        () => reject('Scanner error: timeout'),\n                        10000,\n                    )),\n                    (async (): Promise<QrScanner.ScanResult> => {\n                        try {\n                            const [scanResult] = await qrEngine.detect(canvas!);\n                            if (!scanResult) throw QrScanner.NO_QR_CODE_FOUND;\n                            return {\n                                data: scanResult.rawValue,\n                                cornerPoints: QrScanner._convertPoints(scanResult.cornerPoints, scanRegion),\n                            };\n                        } catch (e) {\n                            const errorMessage = (e as Error).message || e as string;\n                            if (/not implemented|service unavailable/.test(errorMessage)) {\n                                // Not implemented can apparently for some reason happen even though getSupportedFormats\n                                // in createQrScanner reported that it's supported, see issue #98.\n                                // Service unavailable can happen after some time when the BarcodeDetector crashed and\n                                // can theoretically be recovered from by creating a new BarcodeDetector. However, in\n                                // newer browsers this issue does not seem to be present anymore and therefore we do not\n                                // apply this optimization anymore but just set _disableBarcodeDetector in both cases.\n                                // Also note that if we got an external qrEngine that crashed, we should possibly notify\n                                // the caller about it, but we also don't do this here, as it's such an unlikely case.\n                                QrScanner._disableBarcodeDetector = true;\n                                // retry without passing the broken BarcodeScanner instance\n                                return QrScanner.scanImage(imageOrFileOrBlobOrUrl, {\n                                    scanRegion,\n                                    canvas,\n                                    disallowCanvasResizing,\n                                    alsoTryWithoutScanRegion,\n                                });\n                            }\n                            throw `Scanner error: ${errorMessage}`;\n                        }\n                    })(),\n                ]);\n            }\n            return returnDetailedScanResult ? detailedScanResult : detailedScanResult.data;\n        } catch (e) {\n            if (!scanRegion || !alsoTryWithoutScanRegion) throw e;\n            const detailedScanResult = await QrScanner.scanImage(\n                imageOrFileOrBlobOrUrl,\n                { qrEngine, canvas, disallowCanvasResizing },\n            );\n            return returnDetailedScanResult ? detailedScanResult : detailedScanResult.data;\n        } finally {\n            if (!gotExternalEngine) {\n                QrScanner._postWorkerMessage(qrEngine!, 'close');\n            }\n        }\n    }\n\n    setGrayscaleWeights(red: number, green: number, blue: number, useIntegerApproximation: boolean = true): void {\n        // Note that for the native BarcodeDecoder or if the worker was destroyed, this is a no-op. However, the native\n        // implementations work also well with colored qr codes.\n        QrScanner._postWorkerMessage(\n            this._qrEnginePromise,\n            'grayscaleWeights',\n            { red, green, blue, useIntegerApproximation }\n        );\n    }\n\n    setInversionMode(inversionMode: QrScanner.InversionMode): void {\n        // Note that for the native BarcodeDecoder or if the worker was destroyed, this is a no-op. However, the native\n        // implementations scan normal and inverted qr codes by default\n        QrScanner._postWorkerMessage(this._qrEnginePromise, 'inversionMode', inversionMode);\n    }\n\n    static async createQrEngine(): Promise<Worker | BarcodeDetector>;\n    /** @deprecated */\n    static async createQrEngine(workerPath: string): Promise<Worker | BarcodeDetector>;\n    static async createQrEngine(workerPath?: string): Promise<Worker | BarcodeDetector> {\n        if (workerPath) {\n            console.warn('Specifying a worker path is not required and not supported anymore.');\n        }\n\n        // @ts-ignore no types defined for import\n        const createWorker = () => (import('./qr-scanner-worker.min.js') as Promise<{ createWorker: () => Worker }>)\n            .then((module) => module.createWorker());\n\n        const useBarcodeDetector = !QrScanner._disableBarcodeDetector\n            && 'BarcodeDetector' in window\n            && BarcodeDetector.getSupportedFormats\n            && (await BarcodeDetector.getSupportedFormats()).includes('qr_code');\n\n        if (!useBarcodeDetector) return createWorker();\n\n        // On Macs with an M1/M2 processor and macOS Ventura (macOS version 13), the BarcodeDetector is broken in\n        // Chromium based browsers, regardless of the version. For that constellation, the BarcodeDetector does not\n        // error but does not detect QR codes. Macs without an M1/M2 or before Ventura are fine.\n        // See issue #209 and https://bugs.chromium.org/p/chromium/issues/detail?id=1382442\n        // TODO update this once the issue in macOS is fixed\n        const userAgentData = navigator.userAgentData;\n        const isChromiumOnMacWithArmVentura = userAgentData // all Chromium browsers support userAgentData\n            && userAgentData.brands.some(({ brand }) => /Chromium/i.test(brand))\n            && /mac ?OS/i.test(userAgentData.platform)\n            // Does it have an ARM chip (e.g. M1/M2) and Ventura? Check this last as getHighEntropyValues can\n            // theoretically trigger a browser prompt, although no browser currently does seem to show one.\n            // If browser or user refused to return the requested values, assume broken ARM Ventura, to be safe.\n            && await userAgentData.getHighEntropyValues(['architecture', 'platformVersion'])\n                .then(({ architecture, platformVersion }) =>\n                    /arm/i.test(architecture || 'arm') && parseInt(platformVersion || '13') >= /* Ventura */ 13)\n                .catch(() => true);\n        if (isChromiumOnMacWithArmVentura) return createWorker();\n\n        return new BarcodeDetector({ formats: ['qr_code'] });\n    }\n\n    private _onPlay(): void {\n        this._scanRegion = this._calculateScanRegion(this.$video);\n        this._updateOverlay();\n        if (this.$overlay) {\n            this.$overlay.style.display = '';\n        }\n        this._scanFrame();\n    }\n\n    private _onLoadedMetaData(): void {\n        this._scanRegion = this._calculateScanRegion(this.$video);\n        this._updateOverlay();\n    }\n\n    private _onVisibilityChange(): void {\n        if (document.hidden) {\n            this.pause();\n        } else if (this._active) {\n            this.start();\n        }\n    }\n\n    private _calculateScanRegion(video: HTMLVideoElement): QrScanner.ScanRegion {\n        // Default scan region calculation. Note that this can be overwritten in the constructor.\n        const smallestDimension = Math.min(video.videoWidth, video.videoHeight);\n        const scanRegionSize = Math.round(2 / 3 * smallestDimension);\n        return {\n            x: Math.round((video.videoWidth - scanRegionSize) / 2),\n            y: Math.round((video.videoHeight - scanRegionSize) / 2),\n            width: scanRegionSize,\n            height: scanRegionSize,\n            downScaledWidth: this._legacyCanvasSize,\n            downScaledHeight: this._legacyCanvasSize,\n        };\n    }\n\n    private _updateOverlay(): void {\n        requestAnimationFrame(() => {\n            // Running in requestAnimationFrame which should avoid a potential additional re-flow for getComputedStyle\n            // and offsetWidth, offsetHeight, offsetLeft, offsetTop.\n            if (!this.$overlay) return;\n            const video = this.$video;\n            const videoWidth = video.videoWidth;\n            const videoHeight = video.videoHeight;\n            const elementWidth = video.offsetWidth;\n            const elementHeight = video.offsetHeight;\n            const elementX = video.offsetLeft;\n            const elementY = video.offsetTop;\n\n            const videoStyle = window.getComputedStyle(video);\n            const videoObjectFit = videoStyle.objectFit;\n            const videoAspectRatio = videoWidth / videoHeight;\n            const elementAspectRatio = elementWidth / elementHeight;\n            let videoScaledWidth: number;\n            let videoScaledHeight: number;\n            switch (videoObjectFit) {\n                case 'none':\n                    videoScaledWidth = videoWidth;\n                    videoScaledHeight = videoHeight;\n                    break;\n                case 'fill':\n                    videoScaledWidth = elementWidth;\n                    videoScaledHeight = elementHeight;\n                    break;\n                default: // 'cover', 'contains', 'scale-down'\n                    if (videoObjectFit === 'cover'\n                        ? videoAspectRatio > elementAspectRatio\n                        : videoAspectRatio < elementAspectRatio) {\n                        // The scaled height is the element height\n                        // - for 'cover' if the video aspect ratio is wider than the element aspect ratio\n                        //   (scaled height matches element height and scaled width overflows element width)\n                        // - for 'contains'/'scale-down' if element aspect ratio is wider than the video aspect ratio\n                        //   (scaled height matched element height and element width overflows scaled width)\n                        videoScaledHeight = elementHeight;\n                        videoScaledWidth = videoScaledHeight * videoAspectRatio;\n                    } else {\n                        videoScaledWidth = elementWidth;\n                        videoScaledHeight = videoScaledWidth / videoAspectRatio;\n                    }\n                    if (videoObjectFit === 'scale-down') {\n                        // for 'scale-down' the dimensions are the minimum of 'contains' and 'none'\n                        videoScaledWidth = Math.min(videoScaledWidth, videoWidth);\n                        videoScaledHeight = Math.min(videoScaledHeight, videoHeight);\n                    }\n            }\n\n            // getComputedStyle is so nice to convert keywords (left, center, right, top, bottom) to percent and makes\n            // sure to set the default of 50% if only one or no component was provided, therefore we can be sure that\n            // both components are set. Additionally, it converts units other than px (e.g. rem) to px.\n            const [videoX, videoY] = videoStyle.objectPosition.split(' ').map((length, i) => {\n                const lengthValue = parseFloat(length);\n                return length.endsWith('%')\n                    ? (!i ? elementWidth - videoScaledWidth : elementHeight - videoScaledHeight) * lengthValue / 100\n                    : lengthValue;\n            });\n\n            const regionWidth = this._scanRegion.width || videoWidth;\n            const regionHeight = this._scanRegion.height || videoHeight;\n            const regionX = this._scanRegion.x || 0;\n            const regionY = this._scanRegion.y || 0;\n\n            const overlayStyle = this.$overlay.style;\n            overlayStyle.width = `${regionWidth / videoWidth * videoScaledWidth}px`;\n            overlayStyle.height = `${regionHeight / videoHeight * videoScaledHeight}px`;\n            overlayStyle.top = `${elementY + videoY + regionY / videoHeight * videoScaledHeight}px`;\n            const isVideoMirrored = /scaleX\\(-1\\)/.test(video.style.transform!);\n            overlayStyle.left = `${elementX\n                + (isVideoMirrored ? elementWidth - videoX - videoScaledWidth : videoX)\n                + (isVideoMirrored ? videoWidth - regionX - regionWidth : regionX) / videoWidth * videoScaledWidth}px`;\n            // apply same mirror as on video\n            overlayStyle.transform = video.style.transform;\n        });\n    }\n\n    private static _convertPoints(\n        points: QrScanner.Point[],\n        scanRegion?: QrScanner.ScanRegion | null,\n    ): QrScanner.Point[] {\n        if (!scanRegion) return points;\n        const offsetX = scanRegion.x || 0;\n        const offsetY = scanRegion.y || 0;\n        const scaleFactorX = scanRegion.width && scanRegion.downScaledWidth\n            ? scanRegion.width / scanRegion.downScaledWidth\n            : 1;\n        const scaleFactorY = scanRegion.height && scanRegion.downScaledHeight\n            ? scanRegion.height / scanRegion.downScaledHeight\n            : 1;\n        for (const point of points) {\n            point.x = point.x * scaleFactorX + offsetX;\n            point.y = point.y * scaleFactorY + offsetY;\n        }\n        return points;\n    }\n\n    private _scanFrame(): void {\n        if (!this._active || this.$video.paused || this.$video.ended) return;\n        // If requestVideoFrameCallback is available use that to avoid unnecessary scans on the same frame as the\n        // camera's framerate can be lower than the screen refresh rate and this._maxScansPerSecond, especially in dark\n        // settings where the exposure time is longer. Both, requestVideoFrameCallback and requestAnimationFrame are not\n        // being fired if the tab is in the background, which is what we want.\n        const requestFrame = 'requestVideoFrameCallback' in this.$video\n            // @ts-ignore\n            ? this.$video.requestVideoFrameCallback.bind(this.$video)\n            : requestAnimationFrame;\n        requestFrame(async () => {\n            if (this.$video.readyState <= 1) {\n                // Skip scans until the video is ready as drawImage() only works correctly on a video with readyState\n                // > 1, see https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/drawImage#Notes.\n                // This also avoids false positives for videos paused after a successful scan which remains visible on\n                // the canvas until the video is started again and ready.\n                this._scanFrame();\n                return;\n            }\n\n            const timeSinceLastScan = Date.now() - this._lastScanTimestamp;\n            const minimumTimeBetweenScans = 1000 / this._maxScansPerSecond;\n            if (timeSinceLastScan < minimumTimeBetweenScans) {\n                await new Promise((resolve) => setTimeout(resolve, minimumTimeBetweenScans - timeSinceLastScan));\n            }\n            // console.log('Scan rate:', Math.round(1000 / (Date.now() - this._lastScanTimestamp)));\n            this._lastScanTimestamp = Date.now();\n\n            let result: QrScanner.ScanResult | undefined;\n            try {\n                result = await QrScanner.scanImage(this.$video, {\n                    scanRegion: this._scanRegion,\n                    qrEngine: this._qrEnginePromise,\n                    canvas: this.$canvas,\n                });\n            } catch (error) {\n                if (!this._active) return;\n                this._onDecodeError(error as Error | string);\n            }\n\n            if (QrScanner._disableBarcodeDetector && !(await this._qrEnginePromise instanceof Worker)) {\n                // replace the disabled BarcodeDetector\n                this._qrEnginePromise = QrScanner.createQrEngine();\n            }\n\n            if (result) {\n                if (this._onDecode) {\n                    this._onDecode(result);\n                } else if (this._legacyOnDecode) {\n                    this._legacyOnDecode(result.data);\n                }\n\n                if (this.$codeOutlineHighlight) {\n                    clearTimeout(this._codeOutlineHighlightRemovalTimeout);\n                    this._codeOutlineHighlightRemovalTimeout = undefined;\n                    this.$codeOutlineHighlight.setAttribute(\n                        'viewBox',\n                        `${this._scanRegion.x || 0} `\n                            + `${this._scanRegion.y || 0} `\n                            + `${this._scanRegion.width || this.$video.videoWidth} `\n                            + `${this._scanRegion.height || this.$video.videoHeight}`,\n                    );\n                    const polygon = this.$codeOutlineHighlight.firstElementChild!;\n                    polygon.setAttribute('points', result.cornerPoints.map(({x, y}) => `${x},${y}`).join(' '));\n                    this.$codeOutlineHighlight.style.display = '';\n                }\n            } else if (this.$codeOutlineHighlight && !this._codeOutlineHighlightRemovalTimeout) {\n                // hide after timeout to make it flash less when on some frames the QR code is detected and on some not\n                this._codeOutlineHighlightRemovalTimeout = setTimeout(\n                    () => this.$codeOutlineHighlight!.style.display = 'none',\n                    100,\n                );\n            }\n\n            this._scanFrame();\n        });\n    }\n\n    private _onDecodeError(error: Error | string): void {\n        // default error handler; can be overwritten in the constructor\n        if (error === QrScanner.NO_QR_CODE_FOUND) return;\n        console.log(error);\n    }\n\n    private async _getCameraStream(): Promise<{ stream: MediaStream, facingMode: QrScanner.FacingMode }> {\n        if (!navigator.mediaDevices) throw 'Camera not found.';\n\n        const preferenceType = /^(environment|user)$/.test(this._preferredCamera)\n            ? 'facingMode'\n            : 'deviceId';\n        const constraintsWithoutCamera: Array<MediaTrackConstraints> = [{\n            width: { min: 1024 }\n        }, {\n            width: { min: 768 }\n        }, {}];\n        const constraintsWithCamera = constraintsWithoutCamera.map((constraint) => Object.assign({}, constraint, {\n            [preferenceType]: { exact: this._preferredCamera },\n        }));\n\n        for (const constraints of [...constraintsWithCamera, ...constraintsWithoutCamera]) {\n            try {\n                const stream = await navigator.mediaDevices.getUserMedia({ video: constraints, audio: false });\n                // Try to determine the facing mode from the stream, otherwise use a guess or 'environment' as\n                // default. Note that the guess is not always accurate as Safari returns cameras of different facing\n                // mode, even for exact facingMode constraints.\n                const facingMode = this._getFacingMode(stream)\n                    || (constraints.facingMode\n                        ? this._preferredCamera as QrScanner.FacingMode // a facing mode we were able to fulfill\n                        : (this._preferredCamera === 'environment'\n                            ? 'user' // switch as _preferredCamera was environment but we are not able to fulfill it\n                            : 'environment' // switch from unfulfilled user facingMode or default to environment\n                        )\n                    );\n                return { stream, facingMode };\n            } catch (e) {}\n        }\n\n        throw 'Camera not found.';\n    }\n\n    private async _restartVideoStream(): Promise<void> {\n        // Note that we always pause the stream and not only if !this._paused as even if this._paused === true, the\n        // stream might still be running, as it's by default only stopped after a delay of 300ms.\n        const wasPaused = this._paused;\n        const paused = await this.pause(true);\n        if (!paused || wasPaused || !this._active) return;\n        await this.start();\n    }\n\n    private static _stopVideoStream(stream : MediaStream): void {\n        for (const track of stream.getTracks()) {\n            track.stop(); //  note that this will also automatically turn the flashlight off\n            stream.removeTrack(track);\n        }\n    }\n\n    private _setVideoMirror(facingMode: QrScanner.FacingMode): void {\n        // in user facing mode mirror the video to make it easier for the user to position the QR code\n        const scaleFactor = facingMode === 'user'? -1 : 1;\n        this.$video.style.transform = 'scaleX(' + scaleFactor + ')';\n    }\n\n    private _getFacingMode(videoStream: MediaStream): QrScanner.FacingMode | null {\n        const videoTrack = videoStream.getVideoTracks()[0];\n        if (!videoTrack) return null; // unknown\n        // inspired by https://github.com/JodusNodus/react-qr-reader/blob/master/src/getDeviceId.js#L13\n        return /rear|back|environment/i.test(videoTrack.label)\n            ? 'environment'\n            : /front|user|face/i.test(videoTrack.label)\n                ? 'user'\n                : null; // unknown\n    }\n\n    private static _drawToCanvas(\n        image: HTMLImageElement | HTMLVideoElement | HTMLCanvasElement | OffscreenCanvas | ImageBitmap\n            | SVGImageElement,\n        scanRegion?: QrScanner.ScanRegion | null,\n        canvas?: HTMLCanvasElement | null,\n        disallowCanvasResizing= false,\n    ): [HTMLCanvasElement, CanvasRenderingContext2D] {\n        canvas = canvas || document.createElement('canvas');\n        const scanRegionX = scanRegion && scanRegion.x ? scanRegion.x : 0;\n        const scanRegionY = scanRegion && scanRegion.y ? scanRegion.y : 0;\n        const scanRegionWidth = scanRegion && scanRegion.width\n            ? scanRegion.width\n            : (image as HTMLVideoElement).videoWidth || image.width as number;\n        const scanRegionHeight = scanRegion && scanRegion.height\n            ? scanRegion.height\n            : (image as HTMLVideoElement).videoHeight || image.height as number;\n\n        if (!disallowCanvasResizing) {\n            const canvasWidth = scanRegion && scanRegion.downScaledWidth\n                ? scanRegion.downScaledWidth\n                : scanRegionWidth;\n            const canvasHeight = scanRegion && scanRegion.downScaledHeight\n                ? scanRegion.downScaledHeight\n                : scanRegionHeight;\n            // Setting the canvas width or height clears the canvas, even if the values didn't change, therefore only\n            // set them if they actually changed.\n            if (canvas.width !== canvasWidth) {\n                canvas.width = canvasWidth;\n            }\n            if (canvas.height !== canvasHeight) {\n                canvas.height = canvasHeight;\n            }\n        }\n\n        const context = canvas.getContext('2d', { alpha: false })!;\n        context.imageSmoothingEnabled = false; // gives less blurry images\n        context.drawImage(\n            image,\n            scanRegionX, scanRegionY, scanRegionWidth, scanRegionHeight,\n            0, 0, canvas.width, canvas.height,\n        );\n        return [canvas, context];\n    }\n\n    private static async _loadImage(\n        imageOrFileOrBlobOrUrl: HTMLImageElement | HTMLVideoElement | HTMLCanvasElement | OffscreenCanvas | ImageBitmap\n            | SVGImageElement | File | Blob | URL | String,\n    ): Promise<HTMLImageElement | HTMLVideoElement | HTMLCanvasElement | OffscreenCanvas | ImageBitmap\n        | SVGImageElement > {\n        if (imageOrFileOrBlobOrUrl instanceof Image) {\n            await QrScanner._awaitImageLoad(imageOrFileOrBlobOrUrl);\n            return imageOrFileOrBlobOrUrl;\n        } else if (imageOrFileOrBlobOrUrl instanceof HTMLVideoElement\n            || imageOrFileOrBlobOrUrl instanceof HTMLCanvasElement\n            || imageOrFileOrBlobOrUrl instanceof SVGImageElement\n            || 'OffscreenCanvas' in window && imageOrFileOrBlobOrUrl instanceof OffscreenCanvas\n            || 'ImageBitmap' in window && imageOrFileOrBlobOrUrl instanceof ImageBitmap) {\n            return imageOrFileOrBlobOrUrl;\n        } else if (imageOrFileOrBlobOrUrl instanceof File || imageOrFileOrBlobOrUrl instanceof Blob\n            || imageOrFileOrBlobOrUrl instanceof URL || typeof imageOrFileOrBlobOrUrl === 'string') {\n            const image = new Image();\n            if (imageOrFileOrBlobOrUrl instanceof File || imageOrFileOrBlobOrUrl instanceof Blob) {\n                image.src = URL.createObjectURL(imageOrFileOrBlobOrUrl);\n            } else {\n                image.src = imageOrFileOrBlobOrUrl.toString();\n            }\n            try {\n                await QrScanner._awaitImageLoad(image);\n                return image;\n            } finally {\n                if (imageOrFileOrBlobOrUrl instanceof File || imageOrFileOrBlobOrUrl instanceof Blob) {\n                    URL.revokeObjectURL(image.src);\n                }\n            }\n        } else {\n            throw 'Unsupported image type.';\n        }\n    }\n\n    private static async _awaitImageLoad(image: HTMLImageElement): Promise<void> {\n        if (image.complete && image.naturalWidth !== 0) return; // already loaded\n        await new Promise<void>((resolve, reject) => {\n            const listener = (event: ErrorEvent | Event) => {\n                image.removeEventListener('load', listener);\n                image.removeEventListener('error', listener);\n                if (event instanceof ErrorEvent) {\n                    reject('Image load error');\n                } else {\n                    resolve();\n                }\n            };\n            image.addEventListener('load', listener);\n            image.addEventListener('error', listener);\n        });\n    }\n\n    private static async _postWorkerMessage(\n        qrEngineOrQrEnginePromise: Worker | BarcodeDetector | Promise<Worker | BarcodeDetector>,\n        type: string,\n        data?: any,\n        transfer?: Transferable[],\n    ): Promise<number> {\n        return QrScanner._postWorkerMessageSync(await qrEngineOrQrEnginePromise, type, data, transfer);\n    }\n\n    // sync version of _postWorkerMessage without performance overhead of async functions\n    private static _postWorkerMessageSync(\n        qrEngine: Worker | BarcodeDetector,\n        type: string,\n        data?: any,\n        transfer?: Transferable[],\n    ): number {\n        if (!(qrEngine instanceof Worker)) return -1;\n        const id = QrScanner._workerMessageId++;\n        qrEngine.postMessage({\n            id,\n            type,\n            data,\n        }, transfer);\n        return id;\n    }\n}\n\ndeclare namespace QrScanner {\n    export interface ScanRegion {\n        x?: number;\n        y?: number;\n        width?: number;\n        height?: number;\n        downScaledWidth?: number;\n        downScaledHeight?: number;\n    }\n\n    export type FacingMode = 'environment' | 'user';\n    export type DeviceId = string;\n\n    export interface Camera {\n        id: DeviceId;\n        label: string;\n    }\n\n    export type InversionMode = 'original' | 'invert' | 'both';\n\n    export interface Point {\n        x: number;\n        y: number;\n    }\n\n    export interface ScanResult {\n        data: string;\n        // In clockwise order, starting at top left, but this might not be guaranteed in the future.\n        cornerPoints: QrScanner.Point[];\n    }\n}\n\n// simplified from https://wicg.github.io/shape-detection-api/#barcode-detection-api\ndeclare class BarcodeDetector {\n    constructor(options?: { formats: string[] });\n    static getSupportedFormats(): Promise<string[]>;\n    detect(image: ImageBitmapSource): Promise<Array<{ rawValue: string, cornerPoints: QrScanner.Point[] }>>;\n}\n\n// simplified from https://github.com/lukewarlow/user-agent-data-types/blob/master/index.d.ts\ndeclare global {\n    interface Navigator {\n        readonly userAgentData?: {\n            readonly platform: string;\n            readonly brands: Array<{\n                readonly brand: string;\n                readonly version: string;\n            }>;\n            getHighEntropyValues(hints: string[]): Promise<{\n                readonly architecture?: string;\n                readonly platformVersion?: string;\n            }>;\n        };\n    }\n}\n\nexport default QrScanner;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}