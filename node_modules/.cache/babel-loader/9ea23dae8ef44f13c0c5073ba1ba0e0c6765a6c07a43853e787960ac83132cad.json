{"ast":null,"code":"/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport { dim1, dim2 } from './shared/BaseLayout.js';\nimport { GridBaseLayout } from './shared/GridBaseLayout.js';\nexport const grid = config => Object.assign({\n  type: GridLayout\n}, config);\nexport class GridLayout extends GridBaseLayout {\n  /**\n   * Returns the average size (precise or estimated) of an item in the scrolling direction,\n   * including any surrounding space.\n   */\n  get _delta() {\n    return this._metrics.itemSize1 + this._metrics.gap1;\n  }\n  _getItemSize(_idx) {\n    return {\n      [this._sizeDim]: this._metrics.itemSize1,\n      [this._secondarySizeDim]: this._metrics.itemSize2\n    };\n  }\n  _getActiveItems() {\n    const metrics = this._metrics;\n    const {\n      rolumns\n    } = metrics;\n    if (rolumns === 0) {\n      this._first = -1;\n      this._last = -1;\n      this._physicalMin = 0;\n      this._physicalMax = 0;\n    } else {\n      const {\n        padding1\n      } = metrics;\n      const min = Math.max(0, this._scrollPosition - this._overhang);\n      const max = Math.min(this._scrollSize, this._scrollPosition + this._viewDim1 + this._overhang);\n      const firstCow = Math.max(0, Math.floor((min - padding1.start) / this._delta));\n      const lastCow = Math.max(0, Math.ceil((max - padding1.start) / this._delta));\n      this._first = firstCow * rolumns;\n      this._last = Math.min(lastCow * rolumns - 1, this.items.length - 1);\n      this._physicalMin = padding1.start + this._delta * firstCow;\n      this._physicalMax = padding1.start + this._delta * lastCow;\n    }\n  }\n  _getItemPosition(idx) {\n    const {\n      rolumns,\n      padding1,\n      positions,\n      itemSize1,\n      itemSize2\n    } = this._metrics;\n    return {\n      [this._positionDim]: padding1.start + Math.floor(idx / rolumns) * this._delta,\n      [this._secondaryPositionDim]: positions[idx % rolumns],\n      [dim1(this.direction)]: itemSize1,\n      [dim2(this.direction)]: itemSize2\n    };\n  }\n  _updateScrollSize() {\n    const {\n      rolumns,\n      gap1,\n      padding1,\n      itemSize1\n    } = this._metrics;\n    let size = 1;\n    if (rolumns > 0) {\n      const cows = Math.ceil(this.items.length / rolumns);\n      size = padding1.start + cows * itemSize1 + (cows - 1) * gap1 + padding1.end;\n    }\n    this._scrollSize = size;\n  }\n}","map":{"version":3,"names":["dim1","dim2","GridBaseLayout","grid","config","Object","assign","type","GridLayout","_delta","_metrics","itemSize1","gap1","_getItemSize","_idx","_sizeDim","_secondarySizeDim","itemSize2","_getActiveItems","metrics","rolumns","_first","_last","_physicalMin","_physicalMax","padding1","min","Math","max","_scrollPosition","_overhang","_scrollSize","_viewDim1","firstCow","floor","start","lastCow","ceil","items","length","_getItemPosition","idx","positions","_positionDim","_secondaryPositionDim","direction","_updateScrollSize","size","cows","end"],"sources":["../src/layouts/grid.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {LayoutHostSink, Positions, Size} from './shared/Layout.js';\nimport {dim1, dim2} from './shared/BaseLayout.js';\nimport {GridBaseLayout, GridBaseLayoutConfig} from './shared/GridBaseLayout.js';\n\ntype GridLayoutSpecifier = GridBaseLayoutConfig & {\n  type: new (\n    hostSink: LayoutHostSink,\n    config?: GridBaseLayoutConfig\n  ) => GridLayout;\n};\n\ntype GridLayoutSpecifierFactory = (\n  config?: GridBaseLayoutConfig\n) => GridLayoutSpecifier;\n\nexport const grid: GridLayoutSpecifierFactory = (\n  config?: GridBaseLayoutConfig\n) =>\n  Object.assign(\n    {\n      type: GridLayout,\n    },\n    config\n  );\n\nexport class GridLayout extends GridBaseLayout<GridBaseLayoutConfig> {\n  /**\n   * Returns the average size (precise or estimated) of an item in the scrolling direction,\n   * including any surrounding space.\n   */\n  protected get _delta() {\n    return this._metrics!.itemSize1 + this._metrics!.gap1;\n  }\n\n  protected _getItemSize(_idx: number): Size {\n    return {\n      [this._sizeDim]: this._metrics!.itemSize1,\n      [this._secondarySizeDim]: this._metrics!.itemSize2,\n    } as unknown as Size;\n  }\n\n  _getActiveItems() {\n    const metrics = this._metrics!;\n    const {rolumns} = metrics;\n    if (rolumns === 0) {\n      this._first = -1;\n      this._last = -1;\n      this._physicalMin = 0;\n      this._physicalMax = 0;\n    } else {\n      const {padding1} = metrics;\n      const min = Math.max(0, this._scrollPosition - this._overhang);\n      const max = Math.min(\n        this._scrollSize,\n        this._scrollPosition + this._viewDim1 + this._overhang\n      );\n      const firstCow = Math.max(\n        0,\n        Math.floor((min - padding1.start) / this._delta)\n      );\n      const lastCow = Math.max(\n        0,\n        Math.ceil((max - padding1.start) / this._delta)\n      );\n\n      this._first = firstCow * rolumns;\n      this._last = Math.min(lastCow * rolumns - 1, this.items.length - 1);\n      this._physicalMin = padding1.start + this._delta * firstCow;\n      this._physicalMax = padding1.start + this._delta * lastCow;\n    }\n  }\n\n  _getItemPosition(idx: number): Positions {\n    const {rolumns, padding1, positions, itemSize1, itemSize2} = this._metrics!;\n    return {\n      [this._positionDim]:\n        padding1.start + Math.floor(idx / rolumns) * this._delta,\n      [this._secondaryPositionDim]: positions[idx % rolumns],\n      [dim1(this.direction)]: itemSize1,\n      [dim2(this.direction)]: itemSize2,\n    } as unknown as {top: number; left: number};\n  }\n\n  _updateScrollSize() {\n    const {rolumns, gap1, padding1, itemSize1} = this._metrics!;\n    let size = 1;\n    if (rolumns > 0) {\n      const cows = Math.ceil(this.items.length / rolumns);\n      size =\n        padding1.start + cows * itemSize1 + (cows - 1) * gap1 + padding1.end;\n    }\n    this._scrollSize = size;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}