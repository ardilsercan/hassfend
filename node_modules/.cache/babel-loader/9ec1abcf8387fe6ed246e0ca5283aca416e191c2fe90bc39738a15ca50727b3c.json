{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nconst mdiGrid = \"M10,4V8H14V4H10M16,4V8H20V4H16M16,10V14H20V10H16M16,16V20H20V16H16M14,20V16H10V20H14M8,20V16H4V20H8M8,14V10H4V14H8M8,8V4H4V8H8M10,14H14V10H10V14M4,2H20A2,2 0 0,1 22,4V20A2,2 0 0,1 20,22H4C2.92,22 2,21.1 2,20V4A2,2 0 0,1 4,2Z\";\nconst mdiListBoxOutline = \"M11 15H17V17H11V15M9 7H7V9H9V7M11 13H17V11H11V13M11 9H17V7H11V9M9 11H7V13H9V11M21 5V19C21 20.1 20.1 21 19 21H5C3.9 21 3 20.1 3 19V5C3 3.9 3.9 3 5 3H19C20.1 3 21 3.9 21 5M19 5H5V19H19V5M9 15H7V17H9V15Z\";\nconst mdiArrowLeft = \"M20,11V13H8L13.5,18.5L12.08,19.92L4.16,12L12.08,4.08L13.5,5.5L8,11H20Z\";\nconst mdiAlphaABoxOutline = \"M3,5A2,2 0 0,1 5,3H19A2,2 0 0,1 21,5V19A2,2 0 0,1 19,21H5C3.89,21 3,20.1 3,19V5M5,5V19H19V5H5M11,7H13A2,2 0 0,1 15,9V17H13V13H11V17H9V9A2,2 0 0,1 11,7M11,9V11H13V9H11Z\";\nconst mdiDotsVertical = \"M12,16A2,2 0 0,1 14,18A2,2 0 0,1 12,20A2,2 0 0,1 10,18A2,2 0 0,1 12,16M12,10A2,2 0 0,1 14,12A2,2 0 0,1 12,14A2,2 0 0,1 10,12A2,2 0 0,1 12,10M12,4A2,2 0 0,1 14,6A2,2 0 0,1 12,8A2,2 0 0,1 10,6A2,2 0 0,1 12,4Z\";\nimport \"@material/mwc-button\";\nimport { css, html, LitElement } from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators\";\nimport { storage } from \"../../common/decorators/storage\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { navigate } from \"../../common/navigate\";\nimport \"../../components/ha-menu-button\";\nimport \"../../components/ha-icon-button\";\nimport \"../../components/ha-icon-button-arrow-prev\";\nimport \"../../components/media-player/ha-media-player-browse\";\nimport \"../../components/media-player/ha-media-manage-button\";\nimport { BROWSER_PLAYER, mediaPlayerPlayMedia } from \"../../data/media-player\";\nimport { resolveMediaSource } from \"../../data/media_source\";\nimport { haStyle } from \"../../resources/styles\";\nimport \"./ha-bar-media-player\";\nimport { showWebBrowserPlayMediaDialog } from \"./show-media-player-dialog\";\nimport { showAlertDialog } from \"../../dialogs/generic/show-dialog-box\";\nimport { getEntityIdFromCameraMediaSource, isCameraMediaSource } from \"../../data/camera\";\nimport \"../../components/ha-top-app-bar-fixed\";\nconst createMediaPanelUrl = (entityId, items) => {\n  let path = `/media-browser/${entityId}`;\n  for (const item of items.slice(1)) {\n    path += \"/\" + encodeURIComponent(`${item.media_content_type},${item.media_content_id}`);\n  }\n  return path;\n};\nlet PanelMediaBrowser = _decorate([customElement(\"ha-panel-media-browser\")], function (_initialize, _LitElement) {\n  class PanelMediaBrowser extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: PanelMediaBrowser,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        reflect: true\n      })],\n      key: \"narrow\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"route\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_currentItem\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_preferredLayout\",\n      value() {\n        return \"auto\";\n      }\n    }, {\n      kind: \"field\",\n      key: \"_navigateIds\",\n      value() {\n        return [{\n          media_content_id: undefined,\n          media_content_type: undefined\n        }];\n      }\n    }, {\n      kind: \"field\",\n      decorators: [storage({\n        key: \"mediaBrowseEntityId\",\n        state: true,\n        subscribe: false\n      })],\n      key: \"_entityId\",\n      value() {\n        return BROWSER_PLAYER;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [query(\"ha-media-player-browse\")],\n      key: \"_browser\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [query(\"ha-bar-media-player\")],\n      key: \"_player\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        return html`\n      <ha-top-app-bar-fixed>\n        ${this._navigateIds.length > 1 ? html`\n              <ha-icon-button-arrow-prev\n                slot=\"navigationIcon\"\n                .path=${mdiArrowLeft}\n                @click=${this._goBack}\n              ></ha-icon-button-arrow-prev>\n            ` : html`\n              <ha-menu-button\n                slot=\"navigationIcon\"\n                .hass=${this.hass}\n                .narrow=${this.narrow}\n              ></ha-menu-button>\n            `}\n        <div slot=\"title\">\n          ${!this._currentItem ? this.hass.localize(\"ui.components.media-browser.media-player-browser\") : this._currentItem.title}\n        </div>\n        <ha-media-manage-button\n          slot=\"actionItems\"\n          .hass=${this.hass}\n          .currentItem=${this._currentItem}\n          @media-refresh=${this._refreshMedia}\n        ></ha-media-manage-button>\n        <ha-button-menu slot=\"actionItems\" @action=${this._handleMenuAction}>\n          <ha-icon-button\n            slot=\"trigger\"\n            .label=${this.hass.localize(\"ui.common.menu\")}\n            .path=${mdiDotsVertical}\n          ></ha-icon-button>\n          <mwc-list-item graphic=\"icon\">\n            ${this.hass.localize(\"ui.components.media-browser.auto\")}\n            <ha-svg-icon\n              class=${this._preferredLayout === \"auto\" ? \"selected_menu_item\" : \"\"}\n              slot=\"graphic\"\n              .path=${mdiAlphaABoxOutline}\n            ></ha-svg-icon>\n          </mwc-list-item>\n          <mwc-list-item graphic=\"icon\">\n            ${this.hass.localize(\"ui.components.media-browser.grid\")}\n            <ha-svg-icon\n              class=${this._preferredLayout === \"grid\" ? \"selected_menu_item\" : \"\"}\n              slot=\"graphic\"\n              .path=${mdiGrid}\n            ></ha-svg-icon>\n          </mwc-list-item>\n          <mwc-list-item graphic=\"icon\">\n            ${this.hass.localize(\"ui.components.media-browser.list\")}\n            <ha-svg-icon\n              slot=\"graphic\"\n              class=${this._preferredLayout === \"list\" ? \"selected_menu_item\" : \"\"}\n              .path=${mdiListBoxOutline}\n            ></ha-svg-icon>\n          </mwc-list-item>\n        </ha-button-menu>\n        <ha-media-player-browse\n          .hass=${this.hass}\n          .entityId=${this._entityId}\n          .navigateIds=${this._navigateIds}\n          .preferredLayout=${this._preferredLayout}\n          @media-picked=${this._mediaPicked}\n          @media-browsed=${this._mediaBrowsed}\n        ></ha-media-player-browse>\n      </ha-top-app-bar-fixed>\n      <ha-bar-media-player\n        .hass=${this.hass}\n        .entityId=${this._entityId}\n        .narrow=${this.narrow}\n        @player-picked=${this._playerPicked}\n      ></ha-bar-media-player>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleMenuAction\",\n      value: async function _handleMenuAction(ev) {\n        switch (ev.detail.index) {\n          case 0:\n            this._preferredLayout = \"auto\";\n            break;\n          case 1:\n            this._preferredLayout = \"grid\";\n            break;\n          case 2:\n            this._preferredLayout = \"list\";\n            break;\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"willUpdate\",\n      value: function willUpdate(changedProps) {\n        _get(_getPrototypeOf(PanelMediaBrowser.prototype), \"willUpdate\", this).call(this, changedProps);\n        if (!changedProps.has(\"route\")) {\n          return;\n        }\n        if (this.route.path === \"\") {\n          navigate(`/media-browser/${this._entityId}`, {\n            replace: true\n          });\n          return;\n        }\n        const [routePlayer, ...navigateIdsEncoded] = this.route.path.substring(1).split(\"/\");\n        if (routePlayer !== this._entityId) {\n          // Detect if picked player doesn't exist (anymore)\n          // Can happen if URL bookmarked or stored in local storage\n          if (routePlayer !== BROWSER_PLAYER && this.hass.states[routePlayer] === undefined) {\n            navigate(`/media-browser/${BROWSER_PLAYER}`, {\n              replace: true\n            });\n            showAlertDialog(this, {\n              text: this.hass.localize(\"ui.panel.media-browser.error.player_not_exist\", {\n                name: routePlayer\n              })\n            });\n            return;\n          }\n          this._entityId = routePlayer;\n        }\n        this._navigateIds = [{\n          media_content_type: undefined,\n          media_content_id: undefined\n        }, ...navigateIdsEncoded.map(navigateId => {\n          const decoded = decodeURIComponent(navigateId);\n          // Don't use split because media_content_id could contain commas\n          const delimiter = decoded.indexOf(\",\");\n          return {\n            media_content_type: decoded.substring(0, delimiter),\n            media_content_id: decoded.substring(delimiter + 1)\n          };\n        })];\n        this._currentItem = undefined;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_goBack\",\n      value: function _goBack() {\n        navigate(createMediaPanelUrl(this._entityId, this._navigateIds.slice(0, -1)));\n      }\n    }, {\n      kind: \"method\",\n      key: \"_mediaBrowsed\",\n      value: function _mediaBrowsed(ev) {\n        if (ev.detail.ids === this._navigateIds) {\n          this._currentItem = ev.detail.current;\n          return;\n        }\n        navigate(createMediaPanelUrl(this._entityId, ev.detail.ids), {\n          replace: ev.detail.replace\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_mediaPicked\",\n      value: async function _mediaPicked(ev) {\n        const item = ev.detail.item;\n        if (this._entityId !== BROWSER_PLAYER) {\n          this._player.showResolvingNewMediaPicked();\n          try {\n            await mediaPlayerPlayMedia(this.hass, this._entityId, item.media_content_id, item.media_content_type);\n          } catch (err) {\n            this._player.hideResolvingNewMediaPicked();\n          }\n          return;\n        }\n\n        // We won't cancel current media being played if we're going to\n        // open a camera.\n        if (isCameraMediaSource(item.media_content_id)) {\n          fireEvent(this, \"hass-more-info\", {\n            entityId: getEntityIdFromCameraMediaSource(item.media_content_id)\n          });\n          return;\n        }\n        this._player.showResolvingNewMediaPicked();\n        let resolvedUrl;\n        try {\n          resolvedUrl = await resolveMediaSource(this.hass, item.media_content_id);\n        } catch (err) {\n          showAlertDialog(this, {\n            title: this.hass.localize(\"ui.components.media-browser.media_browsing_error\"),\n            text: err.message\n          });\n          this._player.hideResolvingNewMediaPicked();\n          return;\n        }\n        if (resolvedUrl.mime_type.startsWith(\"audio/\")) {\n          this._player.playItem(item, resolvedUrl);\n          return;\n        }\n        showWebBrowserPlayMediaDialog(this, {\n          sourceUrl: resolvedUrl.url,\n          sourceType: resolvedUrl.mime_type,\n          title: item.title,\n          can_play: item.can_play\n        });\n        this._player.hideResolvingNewMediaPicked();\n      }\n    }, {\n      kind: \"method\",\n      key: \"_playerPicked\",\n      value: function _playerPicked(ev) {\n        const entityId = ev.detail.entityId;\n        if (entityId === this._entityId) {\n          return;\n        }\n        navigate(createMediaPanelUrl(entityId, this._navigateIds));\n      }\n    }, {\n      kind: \"method\",\n      key: \"_refreshMedia\",\n      value: function _refreshMedia() {\n        this._browser.refresh();\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [haStyle, css`\n        ha-media-manage-button {\n          --mdc-theme-primary: var(--app-header-text-color);\n        }\n\n        ha-media-player-browse {\n          height: calc(100vh - (100px + var(--header-height)));\n          direction: ltr;\n        }\n\n        :host([narrow]) ha-media-player-browse {\n          height: calc(100vh - (57px + var(--header-height)));\n        }\n        .selected_menu_item {\n          color: var(--primary-color);\n        }\n\n        ha-bar-media-player {\n          position: fixed;\n          width: var(--mdc-top-app-bar-width, 100%);\n        }\n      `];\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","customElement","property","query","state","storage","fireEvent","navigate","BROWSER_PLAYER","mediaPlayerPlayMedia","resolveMediaSource","haStyle","showWebBrowserPlayMediaDialog","showAlertDialog","getEntityIdFromCameraMediaSource","isCameraMediaSource","createMediaPanelUrl","entityId","items","path","item","slice","encodeURIComponent","media_content_type","media_content_id","PanelMediaBrowser","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","type","Boolean","reflect","undefined","subscribe","render","_navigateIds","length","mdiArrowLeft","_goBack","hass","narrow","_currentItem","localize","title","_refreshMedia","_handleMenuAction","mdiDotsVertical","_preferredLayout","mdiAlphaABoxOutline","mdiGrid","mdiListBoxOutline","_entityId","_mediaPicked","_mediaBrowsed","_playerPicked","ev","detail","index","willUpdate","changedProps","_get","_getPrototypeOf","prototype","call","has","route","replace","routePlayer","navigateIdsEncoded","substring","split","states","text","name","map","navigateId","decoded","decodeURIComponent","delimiter","indexOf","ids","current","_player","showResolvingNewMediaPicked","err","hideResolvingNewMediaPicked","resolvedUrl","message","mime_type","startsWith","playItem","sourceUrl","url","sourceType","can_play","_browser","refresh","static","styles"],"sources":["/workspaces/frontend/src/panels/media-browser/ha-panel-media-browser.ts"],"sourcesContent":["import {\n  mdiGrid,\n  mdiListBoxOutline,\n  mdiArrowLeft,\n  mdiAlphaABoxOutline,\n  mdiDotsVertical,\n} from \"@mdi/js\";\nimport { ActionDetail } from \"@material/mwc-list\";\nimport \"@material/mwc-button\";\nimport {\n  css,\n  CSSResultGroup,\n  html,\n  LitElement,\n  PropertyValues,\n  TemplateResult,\n} from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators\";\nimport { storage } from \"../../common/decorators/storage\";\nimport { fireEvent, HASSDomEvent } from \"../../common/dom/fire_event\";\nimport { navigate } from \"../../common/navigate\";\nimport \"../../components/ha-menu-button\";\nimport \"../../components/ha-icon-button\";\nimport \"../../components/ha-icon-button-arrow-prev\";\nimport \"../../components/media-player/ha-media-player-browse\";\nimport \"../../components/media-player/ha-media-manage-button\";\nimport type {\n  HaMediaPlayerBrowse,\n  MediaPlayerItemId,\n} from \"../../components/media-player/ha-media-player-browse\";\nimport {\n  BROWSER_PLAYER,\n  MediaPickedEvent,\n  MediaPlayerItem,\n  mediaPlayerPlayMedia,\n  MediaPlayerLayoutType,\n} from \"../../data/media-player\";\nimport {\n  ResolvedMediaSource,\n  resolveMediaSource,\n} from \"../../data/media_source\";\nimport { haStyle } from \"../../resources/styles\";\nimport type { HomeAssistant, Route } from \"../../types\";\nimport \"./ha-bar-media-player\";\nimport type { BarMediaPlayer } from \"./ha-bar-media-player\";\nimport { showWebBrowserPlayMediaDialog } from \"./show-media-player-dialog\";\nimport { showAlertDialog } from \"../../dialogs/generic/show-dialog-box\";\nimport {\n  getEntityIdFromCameraMediaSource,\n  isCameraMediaSource,\n} from \"../../data/camera\";\nimport \"../../components/ha-top-app-bar-fixed\";\n\nconst createMediaPanelUrl = (entityId: string, items: MediaPlayerItemId[]) => {\n  let path = `/media-browser/${entityId}`;\n  for (const item of items.slice(1)) {\n    path +=\n      \"/\" +\n      encodeURIComponent(`${item.media_content_type},${item.media_content_id}`);\n  }\n  return path;\n};\n\n@customElement(\"ha-panel-media-browser\")\nclass PanelMediaBrowser extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ type: Boolean, reflect: true }) public narrow = false;\n\n  @property({ attribute: false }) public route!: Route;\n\n  @state() _currentItem?: MediaPlayerItem;\n\n  @state() _preferredLayout: MediaPlayerLayoutType = \"auto\";\n\n  private _navigateIds: MediaPlayerItemId[] = [\n    {\n      media_content_id: undefined,\n      media_content_type: undefined,\n    },\n  ];\n\n  @storage({\n    key: \"mediaBrowseEntityId\",\n    state: true,\n    subscribe: false,\n  })\n  private _entityId = BROWSER_PLAYER;\n\n  @query(\"ha-media-player-browse\") private _browser!: HaMediaPlayerBrowse;\n\n  @query(\"ha-bar-media-player\") private _player!: BarMediaPlayer;\n\n  protected render(): TemplateResult {\n    return html`\n      <ha-top-app-bar-fixed>\n        ${this._navigateIds.length > 1\n          ? html`\n              <ha-icon-button-arrow-prev\n                slot=\"navigationIcon\"\n                .path=${mdiArrowLeft}\n                @click=${this._goBack}\n              ></ha-icon-button-arrow-prev>\n            `\n          : html`\n              <ha-menu-button\n                slot=\"navigationIcon\"\n                .hass=${this.hass}\n                .narrow=${this.narrow}\n              ></ha-menu-button>\n            `}\n        <div slot=\"title\">\n          ${!this._currentItem\n            ? this.hass.localize(\n                \"ui.components.media-browser.media-player-browser\"\n              )\n            : this._currentItem.title}\n        </div>\n        <ha-media-manage-button\n          slot=\"actionItems\"\n          .hass=${this.hass}\n          .currentItem=${this._currentItem}\n          @media-refresh=${this._refreshMedia}\n        ></ha-media-manage-button>\n        <ha-button-menu slot=\"actionItems\" @action=${this._handleMenuAction}>\n          <ha-icon-button\n            slot=\"trigger\"\n            .label=${this.hass.localize(\"ui.common.menu\")}\n            .path=${mdiDotsVertical}\n          ></ha-icon-button>\n          <mwc-list-item graphic=\"icon\">\n            ${this.hass.localize(\"ui.components.media-browser.auto\")}\n            <ha-svg-icon\n              class=${this._preferredLayout === \"auto\"\n                ? \"selected_menu_item\"\n                : \"\"}\n              slot=\"graphic\"\n              .path=${mdiAlphaABoxOutline}\n            ></ha-svg-icon>\n          </mwc-list-item>\n          <mwc-list-item graphic=\"icon\">\n            ${this.hass.localize(\"ui.components.media-browser.grid\")}\n            <ha-svg-icon\n              class=${this._preferredLayout === \"grid\"\n                ? \"selected_menu_item\"\n                : \"\"}\n              slot=\"graphic\"\n              .path=${mdiGrid}\n            ></ha-svg-icon>\n          </mwc-list-item>\n          <mwc-list-item graphic=\"icon\">\n            ${this.hass.localize(\"ui.components.media-browser.list\")}\n            <ha-svg-icon\n              slot=\"graphic\"\n              class=${this._preferredLayout === \"list\"\n                ? \"selected_menu_item\"\n                : \"\"}\n              .path=${mdiListBoxOutline}\n            ></ha-svg-icon>\n          </mwc-list-item>\n        </ha-button-menu>\n        <ha-media-player-browse\n          .hass=${this.hass}\n          .entityId=${this._entityId}\n          .navigateIds=${this._navigateIds}\n          .preferredLayout=${this._preferredLayout}\n          @media-picked=${this._mediaPicked}\n          @media-browsed=${this._mediaBrowsed}\n        ></ha-media-player-browse>\n      </ha-top-app-bar-fixed>\n      <ha-bar-media-player\n        .hass=${this.hass}\n        .entityId=${this._entityId}\n        .narrow=${this.narrow}\n        @player-picked=${this._playerPicked}\n      ></ha-bar-media-player>\n    `;\n  }\n\n  private async _handleMenuAction(ev: CustomEvent<ActionDetail>) {\n    switch (ev.detail.index) {\n      case 0:\n        this._preferredLayout = \"auto\";\n        break;\n      case 1:\n        this._preferredLayout = \"grid\";\n        break;\n      case 2:\n        this._preferredLayout = \"list\";\n        break;\n    }\n  }\n\n  public willUpdate(changedProps: PropertyValues): void {\n    super.willUpdate(changedProps);\n\n    if (!changedProps.has(\"route\")) {\n      return;\n    }\n\n    if (this.route.path === \"\") {\n      navigate(`/media-browser/${this._entityId}`, { replace: true });\n      return;\n    }\n\n    const [routePlayer, ...navigateIdsEncoded] = this.route.path\n      .substring(1)\n      .split(\"/\");\n\n    if (routePlayer !== this._entityId) {\n      // Detect if picked player doesn't exist (anymore)\n      // Can happen if URL bookmarked or stored in local storage\n      if (\n        routePlayer !== BROWSER_PLAYER &&\n        this.hass.states[routePlayer] === undefined\n      ) {\n        navigate(`/media-browser/${BROWSER_PLAYER}`, { replace: true });\n        showAlertDialog(this, {\n          text: this.hass.localize(\n            \"ui.panel.media-browser.error.player_not_exist\",\n            {\n              name: routePlayer,\n            }\n          ),\n        });\n        return;\n      }\n      this._entityId = routePlayer;\n    }\n\n    this._navigateIds = [\n      {\n        media_content_type: undefined,\n        media_content_id: undefined,\n      },\n      ...navigateIdsEncoded.map((navigateId) => {\n        const decoded = decodeURIComponent(navigateId);\n        // Don't use split because media_content_id could contain commas\n        const delimiter = decoded.indexOf(\",\");\n        return {\n          media_content_type: decoded.substring(0, delimiter),\n          media_content_id: decoded.substring(delimiter + 1),\n        };\n      }),\n    ];\n    this._currentItem = undefined;\n  }\n\n  private _goBack() {\n    navigate(\n      createMediaPanelUrl(this._entityId, this._navigateIds.slice(0, -1))\n    );\n  }\n\n  private _mediaBrowsed(ev: { detail: HASSDomEvents[\"media-browsed\"] }) {\n    if (ev.detail.ids === this._navigateIds) {\n      this._currentItem = ev.detail.current;\n      return;\n    }\n\n    navigate(createMediaPanelUrl(this._entityId, ev.detail.ids), {\n      replace: ev.detail.replace,\n    });\n  }\n\n  private async _mediaPicked(\n    ev: HASSDomEvent<MediaPickedEvent>\n  ): Promise<void> {\n    const item = ev.detail.item;\n\n    if (this._entityId !== BROWSER_PLAYER) {\n      this._player.showResolvingNewMediaPicked();\n      try {\n        await mediaPlayerPlayMedia(\n          this.hass,\n          this._entityId,\n          item.media_content_id,\n          item.media_content_type\n        );\n      } catch (err) {\n        this._player.hideResolvingNewMediaPicked();\n      }\n      return;\n    }\n\n    // We won't cancel current media being played if we're going to\n    // open a camera.\n    if (isCameraMediaSource(item.media_content_id)) {\n      fireEvent(this, \"hass-more-info\", {\n        entityId: getEntityIdFromCameraMediaSource(item.media_content_id),\n      });\n      return;\n    }\n\n    this._player.showResolvingNewMediaPicked();\n    let resolvedUrl: ResolvedMediaSource;\n    try {\n      resolvedUrl = await resolveMediaSource(this.hass, item.media_content_id);\n    } catch (err: any) {\n      showAlertDialog(this, {\n        title: this.hass.localize(\n          \"ui.components.media-browser.media_browsing_error\"\n        ),\n        text: err.message,\n      });\n      this._player.hideResolvingNewMediaPicked();\n      return;\n    }\n\n    if (resolvedUrl.mime_type.startsWith(\"audio/\")) {\n      this._player.playItem(item, resolvedUrl);\n      return;\n    }\n\n    showWebBrowserPlayMediaDialog(this, {\n      sourceUrl: resolvedUrl.url,\n      sourceType: resolvedUrl.mime_type,\n      title: item.title,\n      can_play: item.can_play,\n    });\n    this._player.hideResolvingNewMediaPicked();\n  }\n\n  private _playerPicked(ev) {\n    const entityId: string = ev.detail.entityId;\n    if (entityId === this._entityId) {\n      return;\n    }\n    navigate(createMediaPanelUrl(entityId, this._navigateIds));\n  }\n\n  private _refreshMedia() {\n    this._browser.refresh();\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyle,\n      css`\n        ha-media-manage-button {\n          --mdc-theme-primary: var(--app-header-text-color);\n        }\n\n        ha-media-player-browse {\n          height: calc(100vh - (100px + var(--header-height)));\n          direction: ltr;\n        }\n\n        :host([narrow]) ha-media-player-browse {\n          height: calc(100vh - (57px + var(--header-height)));\n        }\n        .selected_menu_item {\n          color: var(--primary-color);\n        }\n\n        ha-bar-media-player {\n          position: fixed;\n          width: var(--mdc-top-app-bar-width, 100%);\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-panel-media-browser\": PanelMediaBrowser;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}