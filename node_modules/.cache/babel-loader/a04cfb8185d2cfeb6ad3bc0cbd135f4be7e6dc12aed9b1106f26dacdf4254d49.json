{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nconst mdiCog = \"M12,15.5A3.5,3.5 0 0,1 8.5,12A3.5,3.5 0 0,1 12,8.5A3.5,3.5 0 0,1 15.5,12A3.5,3.5 0 0,1 12,15.5M19.43,12.97C19.47,12.65 19.5,12.33 19.5,12C19.5,11.67 19.47,11.34 19.43,11L21.54,9.37C21.73,9.22 21.78,8.95 21.66,8.73L19.66,5.27C19.54,5.05 19.27,4.96 19.05,5.05L16.56,6.05C16.04,5.66 15.5,5.32 14.87,5.07L14.5,2.42C14.46,2.18 14.25,2 14,2H10C9.75,2 9.54,2.18 9.5,2.42L9.13,5.07C8.5,5.32 7.96,5.66 7.44,6.05L4.95,5.05C4.73,4.96 4.46,5.05 4.34,5.27L2.34,8.73C2.21,8.95 2.27,9.22 2.46,9.37L4.57,11C4.53,11.34 4.5,11.67 4.5,12C4.5,12.33 4.53,12.65 4.57,12.97L2.46,14.63C2.27,14.78 2.21,15.05 2.34,15.27L4.34,18.73C4.46,18.95 4.73,19.03 4.95,18.95L7.44,17.94C7.96,18.34 8.5,18.68 9.13,18.93L9.5,21.58C9.54,21.82 9.75,22 10,22H14C14.25,22 14.46,21.82 14.5,21.58L14.87,18.93C15.5,18.67 16.04,18.34 16.56,17.94L19.05,18.95C19.27,19.03 19.54,18.95 19.66,18.73L21.66,15.27C21.78,15.05 21.73,14.78 21.54,14.63L19.43,12.97Z\";\nconst mdiPencil = \"M20.71,7.04C21.1,6.65 21.1,6 20.71,5.63L18.37,3.29C18,2.9 17.35,2.9 16.96,3.29L15.12,5.12L18.87,8.87M3,17.25V21H6.75L17.81,9.93L14.06,6.18L3,17.25Z\";\nconst mdiPencilOff = \"M18.66,2C18.4,2 18.16,2.09 17.97,2.28L16.13,4.13L19.88,7.88L21.72,6.03C22.11,5.64 22.11,5 21.72,4.63L19.38,2.28C19.18,2.09 18.91,2 18.66,2M3.28,4L2,5.28L8.5,11.75L4,16.25V20H7.75L12.25,15.5L18.72,22L20,20.72L13.5,14.25L9.75,10.5L3.28,4M15.06,5.19L11.03,9.22L14.78,12.97L18.81,8.94L15.06,5.19Z\";\nconst mdiPlus = \"M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z\";\nimport \"@polymer/paper-item/paper-icon-item\";\nimport \"@polymer/paper-item/paper-item-body\";\nimport \"@polymer/paper-listbox/paper-listbox\";\nimport \"@lrnwebcomponents/simple-tooltip/simple-tooltip\";\nimport { css, html, LitElement } from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { computeStateDomain } from \"../../../common/entity/compute_state_domain\";\nimport { navigate } from \"../../../common/navigate\";\nimport { stringCompare } from \"../../../common/string/compare\";\nimport \"../../../components/ha-card\";\nimport \"../../../components/ha-fab\";\nimport \"../../../components/ha-icon-button\";\nimport \"../../../components/ha-svg-icon\";\nimport \"../../../components/map/ha-locations-editor\";\nimport { saveCoreConfig } from \"../../../data/core\";\nimport { subscribeEntityRegistry } from \"../../../data/entity_registry\";\nimport { createZone, deleteZone, fetchZones, updateZone } from \"../../../data/zone\";\nimport { showAlertDialog, showConfirmationDialog } from \"../../../dialogs/generic/show-dialog-box\";\nimport \"../../../layouts/hass-loading-screen\";\nimport \"../../../layouts/hass-tabs-subpage\";\nimport { SubscribeMixin } from \"../../../mixins/subscribe-mixin\";\nimport \"../ha-config-section\";\nimport { configSections } from \"../ha-panel-config\";\nimport { showZoneDetailDialog } from \"./show-dialog-zone-detail\";\nexport let HaConfigZone = _decorate([customElement(\"ha-config-zone\")], function (_initialize, _SubscribeMixin) {\n  class HaConfigZone extends _SubscribeMixin {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaConfigZone,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"isWide\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"narrow\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"route\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_storageItems\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_stateItems\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_activeEntry\",\n      value() {\n        return \"\";\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_canEditCore\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [query(\"ha-locations-editor\")],\n      key: \"_map\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_regEntities\",\n      value() {\n        return [];\n      }\n    }, {\n      kind: \"field\",\n      key: \"_getZones\",\n      value() {\n        return memoizeOne((storageItems, stateItems) => {\n          const computedStyles = getComputedStyle(this);\n          const zoneRadiusColor = computedStyles.getPropertyValue(\"--accent-color\");\n          const passiveRadiusColor = computedStyles.getPropertyValue(\"--secondary-text-color\");\n          const homeRadiusColor = computedStyles.getPropertyValue(\"--primary-color\");\n          const stateLocations = stateItems.map(entityState => ({\n            id: entityState.entity_id,\n            icon: entityState.attributes.icon,\n            name: entityState.attributes.friendly_name || entityState.entity_id,\n            latitude: entityState.attributes.latitude,\n            longitude: entityState.attributes.longitude,\n            radius: entityState.attributes.radius,\n            radius_color: entityState.entity_id === \"zone.home\" ? homeRadiusColor : entityState.attributes.passive ? passiveRadiusColor : zoneRadiusColor,\n            location_editable: entityState.entity_id === \"zone.home\" && this._canEditCore,\n            radius_editable: false\n          }));\n          const storageLocations = storageItems.map(zone => ({\n            ...zone,\n            radius_color: zone.passive ? passiveRadiusColor : zoneRadiusColor,\n            location_editable: true,\n            radius_editable: true\n          }));\n          return storageLocations.concat(stateLocations);\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"hassSubscribe\",\n      value: function hassSubscribe() {\n        return [subscribeEntityRegistry(this.hass.connection, entities => {\n          this._regEntities = entities.map(registryEntry => registryEntry.entity_id);\n          this._filterStates();\n        })];\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this.hass || this._storageItems === undefined || this._stateItems === undefined) {\n          return html`<hass-loading-screen></hass-loading-screen>`;\n        }\n        const hass = this.hass;\n        const listBox = this._storageItems.length === 0 && this._stateItems.length === 0 ? html`\n            <div class=\"empty\">\n              ${hass.localize(\"ui.panel.config.zone.no_zones_created_yet\")}\n              <br />\n              <mwc-button @click=${this._createZone}>\n                ${hass.localize(\"ui.panel.config.zone.create_zone\")}</mwc-button\n              >\n            </div>\n          ` : html`\n            <paper-listbox\n              attr-for-selected=\"data-id\"\n              .selected=${this._activeEntry || \"\"}\n            >\n              ${this._storageItems.map(entry => html`\n                  <paper-icon-item\n                    data-id=${entry.id}\n                    @click=${this._itemClicked}\n                    .entry=${entry}\n                  >\n                    <ha-icon .icon=${entry.icon} slot=\"item-icon\"></ha-icon>\n                    <paper-item-body>${entry.name}</paper-item-body>\n                    ${!this.narrow ? html`\n                          <ha-icon-button\n                            .entry=${entry}\n                            @click=${this._openEditEntry}\n                            .path=${mdiPencil}\n                            .label=${hass.localize(\"ui.panel.config.zone.edit_zone\")}\n                          ></ha-icon-button>\n                        ` : \"\"}\n                  </paper-icon-item>\n                `)}\n              ${this._stateItems.map(stateObject => html`\n                  <paper-icon-item\n                    data-id=${stateObject.entity_id}\n                    @click=${this._stateItemClicked}\n                  >\n                    <ha-icon\n                      .icon=${stateObject.attributes.icon}\n                      slot=\"item-icon\"\n                    >\n                    </ha-icon>\n                    <paper-item-body>\n                      ${stateObject.attributes.friendly_name || stateObject.entity_id}\n                    </paper-item-body>\n                    <div style=\"display:inline-block\">\n                      <ha-icon-button\n                        .entityId=${stateObject.entity_id}\n                        .noEdit=${stateObject.entity_id !== \"zone.home\" || !this._canEditCore}\n                        .path=${stateObject.entity_id === \"zone.home\" && this._canEditCore ? mdiCog : mdiPencilOff}\n                        .label=${stateObject.entity_id === \"zone.home\" ? hass.localize(\"ui.panel.config.zone.edit_home\") : hass.localize(\"ui.panel.config.zone.edit_zone\")}\n                        @click=${this._openCoreConfig}\n                      ></ha-icon-button>\n                      ${stateObject.entity_id !== \"zone.home\" ? html`\n                            <simple-tooltip animation-delay=\"0\" position=\"left\">\n                              ${hass.localize(\"ui.panel.config.zone.configured_in_yaml\")}\n                            </simple-tooltip>\n                          ` : \"\"}\n                    </div>\n                  </paper-icon-item>\n                `)}\n            </paper-listbox>\n          `;\n        return html`\n      <hass-tabs-subpage\n        .hass=${this.hass}\n        .narrow=${this.narrow}\n        .route=${this.route}\n        back-path=\"/config\"\n        .tabs=${configSections.areas}\n      >\n        ${this.narrow ? html`\n              <ha-config-section .isWide=${this.isWide}>\n                <span slot=\"introduction\">\n                  ${hass.localize(\"ui.panel.config.zone.introduction\")}\n                </span>\n                <ha-card outlined>${listBox}</ha-card>\n              </ha-config-section>\n            ` : \"\"}\n        ${!this.narrow ? html`\n              <div class=\"flex\">\n                <ha-locations-editor\n                  .hass=${this.hass}\n                  .locations=${this._getZones(this._storageItems, this._stateItems)}\n                  @location-updated=${this._locationUpdated}\n                  @radius-updated=${this._radiusUpdated}\n                  @marker-clicked=${this._markerClicked}\n                ></ha-locations-editor>\n                <div class=\"overflow\">${listBox}</div>\n              </div>\n            ` : \"\"}\n        <ha-fab\n          slot=\"fab\"\n          .label=${hass.localize(\"ui.panel.config.zone.add_zone\")}\n          extended\n          @click=${this._createZone}\n        >\n          <ha-svg-icon slot=\"icon\" .path=${mdiPlus}></ha-svg-icon>\n        </ha-fab>\n      </hass-tabs-subpage>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"firstUpdated\",\n      value: function firstUpdated(changedProps) {\n        var _this$hass$user;\n        _get(_getPrototypeOf(HaConfigZone.prototype), \"firstUpdated\", this).call(this, changedProps);\n        this._canEditCore = Boolean((_this$hass$user = this.hass.user) === null || _this$hass$user === void 0 ? void 0 : _this$hass$user.is_admin) && [\"storage\", \"default\"].includes(this.hass.config.config_source);\n        this._fetchData();\n        if (this.route.path === \"/new\") {\n          navigate(\"/config/zone\", {\n            replace: true\n          });\n          this._createZone();\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"updated\",\n      value: function updated() {\n        if (!this.route.path.startsWith(\"/edit/\") || !this._stateItems || !this._storageItems) {\n          return;\n        }\n        const id = this.route.path.slice(6);\n        navigate(\"/config/zone\", {\n          replace: true\n        });\n        this._zoomZone(id);\n      }\n    }, {\n      kind: \"method\",\n      key: \"willUpdate\",\n      value: function willUpdate(changedProps) {\n        _get(_getPrototypeOf(HaConfigZone.prototype), \"updated\", this).call(this, changedProps);\n        const oldHass = changedProps.get(\"hass\");\n        if (oldHass && this._stateItems) {\n          this._getStates(oldHass);\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_fetchData\",\n      value: async function _fetchData() {\n        this._storageItems = (await fetchZones(this.hass)).sort((ent1, ent2) => stringCompare(ent1.name, ent2.name, this.hass.locale.language));\n        this._getStates();\n      }\n    }, {\n      kind: \"method\",\n      key: \"_getStates\",\n      value: function _getStates(oldHass) {\n        let changed = false;\n        const tempStates = Object.values(this.hass.states).filter(entity => {\n          if (computeStateDomain(entity) !== \"zone\") {\n            return false;\n          }\n          if ((oldHass === null || oldHass === void 0 ? void 0 : oldHass.states[entity.entity_id]) !== entity) {\n            changed = true;\n          }\n          if (this._regEntities.includes(entity.entity_id)) {\n            return false;\n          }\n          return true;\n        });\n        if (changed) {\n          this._stateItems = tempStates;\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_filterStates\",\n      value: function _filterStates() {\n        if (!this._stateItems) {\n          return;\n        }\n        const tempStates = this._stateItems.filter(entity => !this._regEntities.includes(entity.entity_id));\n        if (tempStates.length !== this._stateItems.length) {\n          this._stateItems = tempStates;\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_locationUpdated\",\n      value: async function _locationUpdated(ev) {\n        this._activeEntry = ev.detail.id;\n        if (ev.detail.id === \"zone.home\" && this._canEditCore) {\n          await saveCoreConfig(this.hass, {\n            latitude: ev.detail.location[0],\n            longitude: ev.detail.location[1]\n          });\n          return;\n        }\n        const entry = this._storageItems.find(item => item.id === ev.detail.id);\n        if (!entry) {\n          return;\n        }\n        this._updateEntry(entry, {\n          latitude: ev.detail.location[0],\n          longitude: ev.detail.location[1]\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_radiusUpdated\",\n      value: function _radiusUpdated(ev) {\n        this._activeEntry = ev.detail.id;\n        const entry = this._storageItems.find(item => item.id === ev.detail.id);\n        if (!entry) {\n          return;\n        }\n        this._updateEntry(entry, {\n          radius: ev.detail.radius\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_markerClicked\",\n      value: function _markerClicked(ev) {\n        this._activeEntry = ev.detail.id;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_createZone\",\n      value: function _createZone() {\n        this._openDialog();\n      }\n    }, {\n      kind: \"method\",\n      key: \"_itemClicked\",\n      value: function _itemClicked(ev) {\n        if (this.narrow) {\n          this._openEditEntry(ev);\n          return;\n        }\n        const entry = ev.currentTarget.entry;\n        this._zoomZone(entry.id);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_stateItemClicked\",\n      value: function _stateItemClicked(ev) {\n        const entityId = ev.currentTarget.getAttribute(\"data-id\");\n        this._zoomZone(entityId);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_zoomZone\",\n      value: async function _zoomZone(id) {\n        var _this$_map;\n        (_this$_map = this._map) === null || _this$_map === void 0 || _this$_map.fitMarker(id);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_openEditEntry\",\n      value: function _openEditEntry(ev) {\n        const entry = ev.currentTarget.entry;\n        this._openDialog(entry);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_openCoreConfig\",\n      value: async function _openCoreConfig(ev) {\n        if (ev.currentTarget.noEdit) {\n          showAlertDialog(this, {\n            title: this.hass.localize(\"ui.panel.config.zone.can_not_edit\"),\n            text: this.hass.localize(\"ui.panel.config.zone.configured_in_yaml\"),\n            confirm: () => {}\n          });\n          return;\n        }\n        navigate(\"/config/general\");\n      }\n    }, {\n      kind: \"method\",\n      key: \"_createEntry\",\n      value: async function _createEntry(values) {\n        var _this$_map2, _this$_map3;\n        const created = await createZone(this.hass, values);\n        this._storageItems = this._storageItems.concat(created).sort((ent1, ent2) => stringCompare(ent1.name, ent2.name, this.hass.locale.language));\n        if (this.narrow) {\n          return;\n        }\n        this._activeEntry = created.id;\n        await this.updateComplete;\n        await ((_this$_map2 = this._map) === null || _this$_map2 === void 0 ? void 0 : _this$_map2.updateComplete);\n        (_this$_map3 = this._map) === null || _this$_map3 === void 0 || _this$_map3.fitMarker(created.id);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_updateEntry\",\n      value: async function _updateEntry(entry, values, fitMap = false) {\n        var _this$_map4, _this$_map5;\n        const updated = await updateZone(this.hass, entry.id, values);\n        this._storageItems = this._storageItems.map(ent => ent === entry ? updated : ent);\n        if (this.narrow || !fitMap) {\n          return;\n        }\n        this._activeEntry = entry.id;\n        await this.updateComplete;\n        await ((_this$_map4 = this._map) === null || _this$_map4 === void 0 ? void 0 : _this$_map4.updateComplete);\n        (_this$_map5 = this._map) === null || _this$_map5 === void 0 || _this$_map5.fitMarker(entry.id);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_removeEntry\",\n      value: async function _removeEntry(entry) {\n        if (!(await showConfirmationDialog(this, {\n          title: this.hass.localize(\"ui.panel.config.zone.confirm_delete\"),\n          dismissText: this.hass.localize(\"ui.common.cancel\"),\n          confirmText: this.hass.localize(\"ui.common.delete\")\n        }))) {\n          return false;\n        }\n        try {\n          await deleteZone(this.hass, entry.id);\n          this._storageItems = this._storageItems.filter(ent => ent !== entry);\n          if (!this.narrow) {\n            var _this$_map6;\n            (_this$_map6 = this._map) === null || _this$_map6 === void 0 || _this$_map6.fitMap();\n          }\n          return true;\n        } catch (err) {\n          return false;\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_openDialog\",\n      value: async function _openDialog(entry) {\n        showZoneDetailDialog(this, {\n          entry,\n          createEntry: values => this._createEntry(values),\n          updateEntry: entry ? values => this._updateEntry(entry, values, true) : undefined,\n          removeEntry: entry ? () => this._removeEntry(entry) : undefined\n        });\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css`\n      hass-loading-screen {\n        --app-header-background-color: var(--sidebar-background-color);\n        --app-header-text-color: var(--sidebar-text-color);\n      }\n      a {\n        color: var(--primary-color);\n      }\n      ha-card {\n        margin: 16px auto;\n        overflow: hidden;\n      }\n      ha-icon,\n      ha-icon-button:not([disabled]) {\n        color: var(--secondary-text-color);\n      }\n      ha-icon-button {\n        --mdc-theme-text-disabled-on-light: var(--disabled-text-color);\n      }\n      .empty {\n        text-align: center;\n        padding: 8px;\n      }\n      .flex {\n        display: flex;\n        height: 100%;\n      }\n      .overflow {\n        height: 100%;\n        overflow: auto;\n      }\n      ha-locations-editor {\n        flex-grow: 1;\n        height: 100%;\n      }\n      .flex paper-listbox,\n      .flex .empty {\n        border-left: 1px solid var(--divider-color);\n        width: 250px;\n        min-height: 100%;\n        box-sizing: border-box;\n      }\n      paper-icon-item {\n        padding-top: 4px;\n        padding-bottom: 4px;\n        cursor: pointer;\n      }\n      .overflow paper-icon-item:last-child {\n        margin-bottom: 80px;\n      }\n      paper-icon-item.iron-selected:before {\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        pointer-events: none;\n        content: \"\";\n        background-color: var(--sidebar-selected-icon-color);\n        opacity: 0.12;\n        transition: opacity 15ms linear;\n        will-change: opacity;\n      }\n      ha-card {\n        margin-bottom: 100px;\n      }\n      ha-card paper-item {\n        cursor: pointer;\n      }\n    `;\n      }\n    }]\n  };\n}, SubscribeMixin(LitElement));","map":{"version":3,"names":["css","html","LitElement","customElement","property","query","state","memoizeOne","computeStateDomain","navigate","stringCompare","saveCoreConfig","subscribeEntityRegistry","createZone","deleteZone","fetchZones","updateZone","showAlertDialog","showConfirmationDialog","SubscribeMixin","configSections","showZoneDetailDialog","HaConfigZone","_decorate","_initialize","_SubscribeMixin","constructor","args","F","d","kind","decorators","attribute","key","value","type","Boolean","storageItems","stateItems","computedStyles","getComputedStyle","zoneRadiusColor","getPropertyValue","passiveRadiusColor","homeRadiusColor","stateLocations","map","entityState","id","entity_id","icon","attributes","name","friendly_name","latitude","longitude","radius","radius_color","passive","location_editable","_canEditCore","radius_editable","storageLocations","zone","concat","hassSubscribe","hass","connection","entities","_regEntities","registryEntry","_filterStates","render","_storageItems","undefined","_stateItems","listBox","length","localize","_createZone","_activeEntry","entry","_itemClicked","narrow","_openEditEntry","mdiPencil","stateObject","_stateItemClicked","mdiCog","mdiPencilOff","_openCoreConfig","route","areas","isWide","_getZones","_locationUpdated","_radiusUpdated","_markerClicked","mdiPlus","firstUpdated","changedProps","_this$hass$user","_get","_getPrototypeOf","prototype","call","user","is_admin","includes","config","config_source","_fetchData","path","replace","updated","startsWith","slice","_zoomZone","willUpdate","oldHass","get","_getStates","sort","ent1","ent2","locale","language","changed","tempStates","Object","values","states","filter","entity","ev","detail","location","find","item","_updateEntry","_openDialog","currentTarget","entityId","getAttribute","_this$_map","_map","fitMarker","noEdit","title","text","confirm","_createEntry","_this$_map2","_this$_map3","created","updateComplete","fitMap","_this$_map4","_this$_map5","ent","_removeEntry","dismissText","confirmText","_this$_map6","err","createEntry","updateEntry","removeEntry","static","styles"],"sources":["/workspaces/frontend/src/panels/config/zone/ha-config-zone.ts"],"sourcesContent":["import { mdiCog, mdiPencil, mdiPencilOff, mdiPlus } from \"@mdi/js\";\nimport \"@polymer/paper-item/paper-icon-item\";\nimport \"@polymer/paper-item/paper-item-body\";\nimport \"@polymer/paper-listbox/paper-listbox\";\nimport \"@lrnwebcomponents/simple-tooltip/simple-tooltip\";\nimport { HassEntity, UnsubscribeFunc } from \"home-assistant-js-websocket\";\nimport {\n  css,\n  CSSResultGroup,\n  html,\n  LitElement,\n  PropertyValues,\n  TemplateResult,\n} from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { computeStateDomain } from \"../../../common/entity/compute_state_domain\";\nimport { navigate } from \"../../../common/navigate\";\nimport { stringCompare } from \"../../../common/string/compare\";\nimport \"../../../components/ha-card\";\nimport \"../../../components/ha-fab\";\nimport \"../../../components/ha-icon-button\";\nimport \"../../../components/ha-svg-icon\";\nimport \"../../../components/map/ha-locations-editor\";\nimport type {\n  HaLocationsEditor,\n  MarkerLocation,\n} from \"../../../components/map/ha-locations-editor\";\nimport { saveCoreConfig } from \"../../../data/core\";\nimport { subscribeEntityRegistry } from \"../../../data/entity_registry\";\nimport {\n  createZone,\n  deleteZone,\n  fetchZones,\n  updateZone,\n  Zone,\n  ZoneMutableParams,\n} from \"../../../data/zone\";\nimport {\n  showAlertDialog,\n  showConfirmationDialog,\n} from \"../../../dialogs/generic/show-dialog-box\";\nimport \"../../../layouts/hass-loading-screen\";\nimport \"../../../layouts/hass-tabs-subpage\";\nimport { SubscribeMixin } from \"../../../mixins/subscribe-mixin\";\nimport type { HomeAssistant, Route } from \"../../../types\";\nimport \"../ha-config-section\";\nimport { configSections } from \"../ha-panel-config\";\nimport { showZoneDetailDialog } from \"./show-dialog-zone-detail\";\n\n@customElement(\"ha-config-zone\")\nexport class HaConfigZone extends SubscribeMixin(LitElement) {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ type: Boolean }) public isWide = false;\n\n  @property({ type: Boolean }) public narrow = false;\n\n  @property({ attribute: false }) public route!: Route;\n\n  @state() private _storageItems?: Zone[];\n\n  @state() private _stateItems?: HassEntity[];\n\n  @state() private _activeEntry = \"\";\n\n  @state() private _canEditCore = false;\n\n  @query(\"ha-locations-editor\") private _map?: HaLocationsEditor;\n\n  private _regEntities: string[] = [];\n\n  private _getZones = memoizeOne(\n    (storageItems: Zone[], stateItems: HassEntity[]): MarkerLocation[] => {\n      const computedStyles = getComputedStyle(this);\n      const zoneRadiusColor = computedStyles.getPropertyValue(\"--accent-color\");\n      const passiveRadiusColor = computedStyles.getPropertyValue(\n        \"--secondary-text-color\"\n      );\n      const homeRadiusColor =\n        computedStyles.getPropertyValue(\"--primary-color\");\n\n      const stateLocations: MarkerLocation[] = stateItems.map(\n        (entityState) => ({\n          id: entityState.entity_id,\n          icon: entityState.attributes.icon,\n          name: entityState.attributes.friendly_name || entityState.entity_id,\n          latitude: entityState.attributes.latitude,\n          longitude: entityState.attributes.longitude,\n          radius: entityState.attributes.radius,\n          radius_color:\n            entityState.entity_id === \"zone.home\"\n              ? homeRadiusColor\n              : entityState.attributes.passive\n                ? passiveRadiusColor\n                : zoneRadiusColor,\n          location_editable:\n            entityState.entity_id === \"zone.home\" && this._canEditCore,\n          radius_editable: false,\n        })\n      );\n      const storageLocations: MarkerLocation[] = storageItems.map((zone) => ({\n        ...zone,\n        radius_color: zone.passive ? passiveRadiusColor : zoneRadiusColor,\n        location_editable: true,\n        radius_editable: true,\n      }));\n      return storageLocations.concat(stateLocations);\n    }\n  );\n\n  public hassSubscribe(): UnsubscribeFunc[] {\n    return [\n      subscribeEntityRegistry(this.hass.connection!, (entities) => {\n        this._regEntities = entities.map(\n          (registryEntry) => registryEntry.entity_id\n        );\n        this._filterStates();\n      }),\n    ];\n  }\n\n  protected render(): TemplateResult {\n    if (\n      !this.hass ||\n      this._storageItems === undefined ||\n      this._stateItems === undefined\n    ) {\n      return html`<hass-loading-screen></hass-loading-screen>`;\n    }\n    const hass = this.hass;\n    const listBox =\n      this._storageItems.length === 0 && this._stateItems.length === 0\n        ? html`\n            <div class=\"empty\">\n              ${hass.localize(\"ui.panel.config.zone.no_zones_created_yet\")}\n              <br />\n              <mwc-button @click=${this._createZone}>\n                ${hass.localize(\"ui.panel.config.zone.create_zone\")}</mwc-button\n              >\n            </div>\n          `\n        : html`\n            <paper-listbox\n              attr-for-selected=\"data-id\"\n              .selected=${this._activeEntry || \"\"}\n            >\n              ${this._storageItems.map(\n                (entry) => html`\n                  <paper-icon-item\n                    data-id=${entry.id}\n                    @click=${this._itemClicked}\n                    .entry=${entry}\n                  >\n                    <ha-icon .icon=${entry.icon} slot=\"item-icon\"></ha-icon>\n                    <paper-item-body>${entry.name}</paper-item-body>\n                    ${!this.narrow\n                      ? html`\n                          <ha-icon-button\n                            .entry=${entry}\n                            @click=${this._openEditEntry}\n                            .path=${mdiPencil}\n                            .label=${hass.localize(\n                              \"ui.panel.config.zone.edit_zone\"\n                            )}\n                          ></ha-icon-button>\n                        `\n                      : \"\"}\n                  </paper-icon-item>\n                `\n              )}\n              ${this._stateItems.map(\n                (stateObject) => html`\n                  <paper-icon-item\n                    data-id=${stateObject.entity_id}\n                    @click=${this._stateItemClicked}\n                  >\n                    <ha-icon\n                      .icon=${stateObject.attributes.icon}\n                      slot=\"item-icon\"\n                    >\n                    </ha-icon>\n                    <paper-item-body>\n                      ${stateObject.attributes.friendly_name ||\n                      stateObject.entity_id}\n                    </paper-item-body>\n                    <div style=\"display:inline-block\">\n                      <ha-icon-button\n                        .entityId=${stateObject.entity_id}\n                        .noEdit=${stateObject.entity_id !== \"zone.home\" ||\n                        !this._canEditCore}\n                        .path=${stateObject.entity_id === \"zone.home\" &&\n                        this._canEditCore\n                          ? mdiCog\n                          : mdiPencilOff}\n                        .label=${stateObject.entity_id === \"zone.home\"\n                          ? hass.localize(\"ui.panel.config.zone.edit_home\")\n                          : hass.localize(\"ui.panel.config.zone.edit_zone\")}\n                        @click=${this._openCoreConfig}\n                      ></ha-icon-button>\n                      ${stateObject.entity_id !== \"zone.home\"\n                        ? html`\n                            <simple-tooltip animation-delay=\"0\" position=\"left\">\n                              ${hass.localize(\n                                \"ui.panel.config.zone.configured_in_yaml\"\n                              )}\n                            </simple-tooltip>\n                          `\n                        : \"\"}\n                    </div>\n                  </paper-icon-item>\n                `\n              )}\n            </paper-listbox>\n          `;\n\n    return html`\n      <hass-tabs-subpage\n        .hass=${this.hass}\n        .narrow=${this.narrow}\n        .route=${this.route}\n        back-path=\"/config\"\n        .tabs=${configSections.areas}\n      >\n        ${this.narrow\n          ? html`\n              <ha-config-section .isWide=${this.isWide}>\n                <span slot=\"introduction\">\n                  ${hass.localize(\"ui.panel.config.zone.introduction\")}\n                </span>\n                <ha-card outlined>${listBox}</ha-card>\n              </ha-config-section>\n            `\n          : \"\"}\n        ${!this.narrow\n          ? html`\n              <div class=\"flex\">\n                <ha-locations-editor\n                  .hass=${this.hass}\n                  .locations=${this._getZones(\n                    this._storageItems,\n                    this._stateItems\n                  )}\n                  @location-updated=${this._locationUpdated}\n                  @radius-updated=${this._radiusUpdated}\n                  @marker-clicked=${this._markerClicked}\n                ></ha-locations-editor>\n                <div class=\"overflow\">${listBox}</div>\n              </div>\n            `\n          : \"\"}\n        <ha-fab\n          slot=\"fab\"\n          .label=${hass.localize(\"ui.panel.config.zone.add_zone\")}\n          extended\n          @click=${this._createZone}\n        >\n          <ha-svg-icon slot=\"icon\" .path=${mdiPlus}></ha-svg-icon>\n        </ha-fab>\n      </hass-tabs-subpage>\n    `;\n  }\n\n  protected firstUpdated(changedProps: PropertyValues) {\n    super.firstUpdated(changedProps);\n    this._canEditCore =\n      Boolean(this.hass.user?.is_admin) &&\n      [\"storage\", \"default\"].includes(this.hass.config.config_source);\n    this._fetchData();\n    if (this.route.path === \"/new\") {\n      navigate(\"/config/zone\", { replace: true });\n      this._createZone();\n    }\n  }\n\n  protected updated() {\n    if (\n      !this.route.path.startsWith(\"/edit/\") ||\n      !this._stateItems ||\n      !this._storageItems\n    ) {\n      return;\n    }\n    const id = this.route.path.slice(6);\n    navigate(\"/config/zone\", { replace: true });\n    this._zoomZone(id);\n  }\n\n  public willUpdate(changedProps: PropertyValues) {\n    super.updated(changedProps);\n    const oldHass = changedProps.get(\"hass\") as HomeAssistant | undefined;\n    if (oldHass && this._stateItems) {\n      this._getStates(oldHass);\n    }\n  }\n\n  private async _fetchData() {\n    this._storageItems = (await fetchZones(this.hass!)).sort((ent1, ent2) =>\n      stringCompare(ent1.name, ent2.name, this.hass!.locale.language)\n    );\n    this._getStates();\n  }\n\n  private _getStates(oldHass?: HomeAssistant) {\n    let changed = false;\n    const tempStates = Object.values(this.hass!.states).filter((entity) => {\n      if (computeStateDomain(entity) !== \"zone\") {\n        return false;\n      }\n      if (oldHass?.states[entity.entity_id] !== entity) {\n        changed = true;\n      }\n      if (this._regEntities.includes(entity.entity_id)) {\n        return false;\n      }\n      return true;\n    });\n\n    if (changed) {\n      this._stateItems = tempStates;\n    }\n  }\n\n  private _filterStates() {\n    if (!this._stateItems) {\n      return;\n    }\n    const tempStates = this._stateItems.filter(\n      (entity) => !this._regEntities.includes(entity.entity_id)\n    );\n    if (tempStates.length !== this._stateItems.length) {\n      this._stateItems = tempStates;\n    }\n  }\n\n  private async _locationUpdated(ev: CustomEvent) {\n    this._activeEntry = ev.detail.id;\n    if (ev.detail.id === \"zone.home\" && this._canEditCore) {\n      await saveCoreConfig(this.hass, {\n        latitude: ev.detail.location[0],\n        longitude: ev.detail.location[1],\n      });\n      return;\n    }\n    const entry = this._storageItems!.find((item) => item.id === ev.detail.id);\n    if (!entry) {\n      return;\n    }\n    this._updateEntry(entry, {\n      latitude: ev.detail.location[0],\n      longitude: ev.detail.location[1],\n    });\n  }\n\n  private _radiusUpdated(ev: CustomEvent) {\n    this._activeEntry = ev.detail.id;\n    const entry = this._storageItems!.find((item) => item.id === ev.detail.id);\n    if (!entry) {\n      return;\n    }\n    this._updateEntry(entry, {\n      radius: ev.detail.radius,\n    });\n  }\n\n  private _markerClicked(ev: CustomEvent) {\n    this._activeEntry = ev.detail.id;\n  }\n\n  private _createZone() {\n    this._openDialog();\n  }\n\n  private _itemClicked(ev: Event) {\n    if (this.narrow) {\n      this._openEditEntry(ev);\n      return;\n    }\n    const entry: Zone = (ev.currentTarget! as any).entry;\n    this._zoomZone(entry.id);\n  }\n\n  private _stateItemClicked(ev: Event) {\n    const entityId = (ev.currentTarget! as HTMLElement).getAttribute(\n      \"data-id\"\n    )!;\n    this._zoomZone(entityId);\n  }\n\n  private async _zoomZone(id: string) {\n    this._map?.fitMarker(id);\n  }\n\n  private _openEditEntry(ev: Event) {\n    const entry: Zone = (ev.currentTarget! as any).entry;\n    this._openDialog(entry);\n  }\n\n  private async _openCoreConfig(ev) {\n    if (ev.currentTarget.noEdit) {\n      showAlertDialog(this, {\n        title: this.hass.localize(\"ui.panel.config.zone.can_not_edit\"),\n        text: this.hass.localize(\"ui.panel.config.zone.configured_in_yaml\"),\n        confirm: () => {},\n      });\n      return;\n    }\n    navigate(\"/config/general\");\n  }\n\n  private async _createEntry(values: ZoneMutableParams) {\n    const created = await createZone(this.hass!, values);\n    this._storageItems = this._storageItems!.concat(created).sort(\n      (ent1, ent2) =>\n        stringCompare(ent1.name, ent2.name, this.hass!.locale.language)\n    );\n    if (this.narrow) {\n      return;\n    }\n    this._activeEntry = created.id;\n    await this.updateComplete;\n    await this._map?.updateComplete;\n    this._map?.fitMarker(created.id);\n  }\n\n  private async _updateEntry(\n    entry: Zone,\n    values: Partial<ZoneMutableParams>,\n    fitMap = false\n  ) {\n    const updated = await updateZone(this.hass!, entry!.id, values);\n    this._storageItems = this._storageItems!.map((ent) =>\n      ent === entry ? updated : ent\n    );\n    if (this.narrow || !fitMap) {\n      return;\n    }\n    this._activeEntry = entry.id;\n    await this.updateComplete;\n    await this._map?.updateComplete;\n    this._map?.fitMarker(entry.id);\n  }\n\n  private async _removeEntry(entry: Zone) {\n    if (\n      !(await showConfirmationDialog(this, {\n        title: this.hass!.localize(\"ui.panel.config.zone.confirm_delete\"),\n        dismissText: this.hass!.localize(\"ui.common.cancel\"),\n        confirmText: this.hass!.localize(\"ui.common.delete\"),\n      }))\n    ) {\n      return false;\n    }\n\n    try {\n      await deleteZone(this.hass!, entry!.id);\n      this._storageItems = this._storageItems!.filter((ent) => ent !== entry);\n      if (!this.narrow) {\n        this._map?.fitMap();\n      }\n      return true;\n    } catch (err: any) {\n      return false;\n    }\n  }\n\n  private async _openDialog(entry?: Zone) {\n    showZoneDetailDialog(this, {\n      entry,\n      createEntry: (values) => this._createEntry(values),\n      updateEntry: entry\n        ? (values) => this._updateEntry(entry, values, true)\n        : undefined,\n      removeEntry: entry ? () => this._removeEntry(entry) : undefined,\n    });\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      hass-loading-screen {\n        --app-header-background-color: var(--sidebar-background-color);\n        --app-header-text-color: var(--sidebar-text-color);\n      }\n      a {\n        color: var(--primary-color);\n      }\n      ha-card {\n        margin: 16px auto;\n        overflow: hidden;\n      }\n      ha-icon,\n      ha-icon-button:not([disabled]) {\n        color: var(--secondary-text-color);\n      }\n      ha-icon-button {\n        --mdc-theme-text-disabled-on-light: var(--disabled-text-color);\n      }\n      .empty {\n        text-align: center;\n        padding: 8px;\n      }\n      .flex {\n        display: flex;\n        height: 100%;\n      }\n      .overflow {\n        height: 100%;\n        overflow: auto;\n      }\n      ha-locations-editor {\n        flex-grow: 1;\n        height: 100%;\n      }\n      .flex paper-listbox,\n      .flex .empty {\n        border-left: 1px solid var(--divider-color);\n        width: 250px;\n        min-height: 100%;\n        box-sizing: border-box;\n      }\n      paper-icon-item {\n        padding-top: 4px;\n        padding-bottom: 4px;\n        cursor: pointer;\n      }\n      .overflow paper-icon-item:last-child {\n        margin-bottom: 80px;\n      }\n      paper-icon-item.iron-selected:before {\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        pointer-events: none;\n        content: \"\";\n        background-color: var(--sidebar-selected-icon-color);\n        opacity: 0.12;\n        transition: opacity 15ms linear;\n        will-change: opacity;\n      }\n      ha-card {\n        margin-bottom: 100px;\n      }\n      ha-card paper-item {\n        cursor: pointer;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-config-zone\": HaConfigZone;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}