{"ast":null,"code":"const mdiChatQuestion = \"M12 3C6.5 3 2 6.6 2 11C2 13.1 3 15.1 4.8 16.5C4.8 17.1 4.4 18.7 2 21C2 21 5.5 21 8.5 18.5C9.6 18.8 10.8 19 12 19C17.5 19 22 15.4 22 11S17.5 3 12 3M13 15H11V13H13V15M14.8 10C14.5 10.4 14.1 10.6 13.7 10.8C13.4 11 13.3 11.1 13.2 11.3C13 11.5 13 11.7 13 12H11C11 11.5 11.1 11.2 11.3 10.9C11.5 10.7 11.9 10.4 12.4 10.1C12.7 10 12.9 9.8 13 9.6C13.1 9.4 13.2 9.1 13.2 8.9C13.2 8.6 13.1 8.4 12.9 8.2C12.7 8 12.4 7.9 12.1 7.9C11.8 7.9 11.6 8 11.4 8.1C11.2 8.2 11.1 8.4 11.1 8.7H9.1C9.2 8 9.5 7.4 10 7C10.5 6.6 11.2 6.5 12.1 6.5C13 6.5 13.8 6.7 14.3 7.1C14.8 7.5 15.1 8.1 15.1 8.8C15.2 9.2 15.1 9.6 14.8 10Z\";\nconst mdiCog = \"M12,15.5A3.5,3.5 0 0,1 8.5,12A3.5,3.5 0 0,1 12,8.5A3.5,3.5 0 0,1 15.5,12A3.5,3.5 0 0,1 12,15.5M19.43,12.97C19.47,12.65 19.5,12.33 19.5,12C19.5,11.67 19.47,11.34 19.43,11L21.54,9.37C21.73,9.22 21.78,8.95 21.66,8.73L19.66,5.27C19.54,5.05 19.27,4.96 19.05,5.05L16.56,6.05C16.04,5.66 15.5,5.32 14.87,5.07L14.5,2.42C14.46,2.18 14.25,2 14,2H10C9.75,2 9.54,2.18 9.5,2.42L9.13,5.07C8.5,5.32 7.96,5.66 7.44,6.05L4.95,5.05C4.73,4.96 4.46,5.05 4.34,5.27L2.34,8.73C2.21,8.95 2.27,9.22 2.46,9.37L4.57,11C4.53,11.34 4.5,11.67 4.5,12C4.5,12.33 4.53,12.65 4.57,12.97L2.46,14.63C2.27,14.78 2.21,15.05 2.34,15.27L4.34,18.73C4.46,18.95 4.73,19.03 4.95,18.95L7.44,17.94C7.96,18.34 8.5,18.68 9.13,18.93L9.5,21.58C9.54,21.82 9.75,22 10,22H14C14.25,22 14.46,21.82 14.5,21.58L14.87,18.93C15.5,18.67 16.04,18.34 16.56,17.94L19.05,18.95C19.27,19.03 19.54,18.95 19.66,18.73L21.66,15.27C21.78,15.05 21.73,14.78 21.54,14.63L19.43,12.97Z\";\nconst mdiDeleteForever = \"M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19M8.46,11.88L9.87,10.47L12,12.59L14.12,10.47L15.53,11.88L13.41,14L15.53,16.12L14.12,17.53L12,15.41L9.88,17.53L8.47,16.12L10.59,14L8.46,11.88M15.5,4L14.5,3H9.5L8.5,4H5V6H19V4H15.5Z\";\nconst mdiHospitalBox = \"M18,14H14V18H10V14H6V10H10V6H14V10H18M19,3H5C3.89,3 3,3.89 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5C21,3.89 20.1,3 19,3Z\";\nconst mdiInformation = \"M13,9H11V7H13M13,17H11V11H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z\";\nconst mdiUpload = \"M9,16V10H5L12,3L19,10H15V16H9M5,20V18H19V20H5Z\";\nimport { getConfigEntries } from \"../../../../../../data/config_entries\";\nimport { fetchZwaveIsAnyOTAFirmwareUpdateInProgress, fetchZwaveIsNodeFirmwareUpdateInProgress, fetchZwaveNodeStatus } from \"../../../../../../data/zwave_js\";\nimport { showConfirmationDialog } from \"../../../../../../dialogs/generic/show-dialog-box\";\nimport { showZWaveJSRebuildNodeRoutesDialog } from \"../../../../integrations/integration-panels/zwave_js/show-dialog-zwave_js-rebuild-node-routes\";\nimport { showZWaveJSNodeStatisticsDialog } from \"../../../../integrations/integration-panels/zwave_js/show-dialog-zwave_js-node-statistics\";\nimport { showZWaveJSReinterviewNodeDialog } from \"../../../../integrations/integration-panels/zwave_js/show-dialog-zwave_js-reinterview-node\";\nimport { showZWaveJSRemoveFailedNodeDialog } from \"../../../../integrations/integration-panels/zwave_js/show-dialog-zwave_js-remove-failed-node\";\nimport { showZWaveJSUpdateFirmwareNodeDialog } from \"../../../../integrations/integration-panels/zwave_js/show-dialog-zwave_js-update-firmware-node\";\nimport { showZWaveJSHardResetControllerDialog } from \"../../../../integrations/integration-panels/zwave_js/show-dialog-zwave_js-hard-reset-controller\";\nexport const getZwaveDeviceActions = async (el, hass, device) => {\n  const configEntries = await getConfigEntries(hass, {\n    domain: \"zwave_js\"\n  });\n  const configEntry = configEntries.find(entry => device.config_entries.includes(entry.entry_id));\n  if (!configEntry) {\n    return [];\n  }\n  const entryId = configEntry.entry_id;\n  const nodeStatus = await fetchZwaveNodeStatus(hass, device.id);\n  if (!nodeStatus) {\n    return [];\n  }\n  const actions = [];\n  if (!nodeStatus.is_controller_node) {\n    actions.push({\n      label: hass.localize(\"ui.panel.config.zwave_js.device_info.device_config\"),\n      icon: mdiCog,\n      href: `/config/zwave_js/node_config/${device.id}?config_entry=${entryId}`\n    }, {\n      label: hass.localize(\"ui.panel.config.zwave_js.device_info.reinterview_device\"),\n      icon: mdiChatQuestion,\n      action: () => showZWaveJSReinterviewNodeDialog(el, {\n        device_id: device.id\n      })\n    }, {\n      label: hass.localize(\"ui.panel.config.zwave_js.device_info.rebuild_routes\"),\n      icon: mdiHospitalBox,\n      action: () => showZWaveJSRebuildNodeRoutesDialog(el, {\n        device\n      })\n    }, {\n      label: hass.localize(\"ui.panel.config.zwave_js.device_info.remove_failed\"),\n      icon: mdiDeleteForever,\n      action: () => showZWaveJSRemoveFailedNodeDialog(el, {\n        device_id: device.id\n      })\n    }, {\n      label: hass.localize(\"ui.panel.config.zwave_js.device_info.node_statistics\"),\n      icon: mdiInformation,\n      action: () => showZWaveJSNodeStatisticsDialog(el, {\n        device\n      })\n    });\n  }\n  if (!(nodeStatus.ready && (nodeStatus.is_controller_node || nodeStatus.has_firmware_update_cc))) {\n    return actions;\n  }\n  const [isAnyFirmwareUpdateInProgress, isNodeFirmwareUpdateInProgress] = await Promise.all([fetchZwaveIsAnyOTAFirmwareUpdateInProgress(hass, entryId), fetchZwaveIsNodeFirmwareUpdateInProgress(hass, device.id)]);\n  if (!isAnyFirmwareUpdateInProgress || isNodeFirmwareUpdateInProgress) {\n    actions.push({\n      label: hass.localize(\"ui.panel.config.zwave_js.device_info.update_firmware\"),\n      icon: mdiUpload,\n      action: async () => {\n        if (isNodeFirmwareUpdateInProgress || (await fetchZwaveIsNodeFirmwareUpdateInProgress(hass, device.id)) || (await showConfirmationDialog(el, {\n          text: hass.localize(`ui.panel.config.zwave_js.update_firmware.${nodeStatus.is_controller_node ? \"warning_controller\" : \"warning\"}`),\n          dismissText: hass.localize(\"ui.common.no\"),\n          confirmText: hass.localize(\"ui.common.yes\")\n        }))) {\n          showZWaveJSUpdateFirmwareNodeDialog(el, {\n            device\n          });\n        }\n      }\n    });\n  }\n  if (nodeStatus.is_controller_node) {\n    actions.push({\n      label: hass.localize(\"ui.panel.config.zwave_js.device_info.hard_reset_controller\"),\n      icon: mdiDeleteForever,\n      action: async () => {\n        showZWaveJSHardResetControllerDialog(el, {\n          entryId\n        });\n      }\n    });\n  }\n  return actions;\n};","map":{"version":3,"names":["getConfigEntries","fetchZwaveIsAnyOTAFirmwareUpdateInProgress","fetchZwaveIsNodeFirmwareUpdateInProgress","fetchZwaveNodeStatus","showConfirmationDialog","showZWaveJSRebuildNodeRoutesDialog","showZWaveJSNodeStatisticsDialog","showZWaveJSReinterviewNodeDialog","showZWaveJSRemoveFailedNodeDialog","showZWaveJSUpdateFirmwareNodeDialog","showZWaveJSHardResetControllerDialog","getZwaveDeviceActions","el","hass","device","configEntries","domain","configEntry","find","entry","config_entries","includes","entry_id","entryId","nodeStatus","id","actions","is_controller_node","push","label","localize","icon","mdiCog","href","mdiChatQuestion","action","device_id","mdiHospitalBox","mdiDeleteForever","mdiInformation","ready","has_firmware_update_cc","isAnyFirmwareUpdateInProgress","isNodeFirmwareUpdateInProgress","Promise","all","mdiUpload","text","dismissText","confirmText"],"sources":["/workspaces/frontend/src/panels/config/devices/device-detail/integration-elements/zwave_js/device-actions.ts"],"sourcesContent":["import {\n  mdiChatQuestion,\n  mdiCog,\n  mdiDeleteForever,\n  mdiHospitalBox,\n  mdiInformation,\n  mdiUpload,\n} from \"@mdi/js\";\nimport { getConfigEntries } from \"../../../../../../data/config_entries\";\nimport { DeviceRegistryEntry } from \"../../../../../../data/device_registry\";\nimport {\n  fetchZwaveIsAnyOTAFirmwareUpdateInProgress,\n  fetchZwaveIsNodeFirmwareUpdateInProgress,\n  fetchZwaveNodeStatus,\n} from \"../../../../../../data/zwave_js\";\nimport { showConfirmationDialog } from \"../../../../../../dialogs/generic/show-dialog-box\";\nimport type { HomeAssistant } from \"../../../../../../types\";\nimport { showZWaveJSRebuildNodeRoutesDialog } from \"../../../../integrations/integration-panels/zwave_js/show-dialog-zwave_js-rebuild-node-routes\";\nimport { showZWaveJSNodeStatisticsDialog } from \"../../../../integrations/integration-panels/zwave_js/show-dialog-zwave_js-node-statistics\";\nimport { showZWaveJSReinterviewNodeDialog } from \"../../../../integrations/integration-panels/zwave_js/show-dialog-zwave_js-reinterview-node\";\nimport { showZWaveJSRemoveFailedNodeDialog } from \"../../../../integrations/integration-panels/zwave_js/show-dialog-zwave_js-remove-failed-node\";\nimport { showZWaveJSUpdateFirmwareNodeDialog } from \"../../../../integrations/integration-panels/zwave_js/show-dialog-zwave_js-update-firmware-node\";\nimport type { DeviceAction } from \"../../../ha-config-device-page\";\nimport { showZWaveJSHardResetControllerDialog } from \"../../../../integrations/integration-panels/zwave_js/show-dialog-zwave_js-hard-reset-controller\";\n\nexport const getZwaveDeviceActions = async (\n  el: HTMLElement,\n  hass: HomeAssistant,\n  device: DeviceRegistryEntry\n): Promise<DeviceAction[]> => {\n  const configEntries = await getConfigEntries(hass, {\n    domain: \"zwave_js\",\n  });\n\n  const configEntry = configEntries.find((entry) =>\n    device.config_entries.includes(entry.entry_id)\n  );\n\n  if (!configEntry) {\n    return [];\n  }\n\n  const entryId = configEntry.entry_id;\n\n  const nodeStatus = await fetchZwaveNodeStatus(hass, device.id);\n\n  if (!nodeStatus) {\n    return [];\n  }\n\n  const actions: DeviceAction[] = [];\n\n  if (!nodeStatus.is_controller_node) {\n    actions.push(\n      {\n        label: hass.localize(\n          \"ui.panel.config.zwave_js.device_info.device_config\"\n        ),\n        icon: mdiCog,\n        href: `/config/zwave_js/node_config/${device.id}?config_entry=${entryId}`,\n      },\n      {\n        label: hass.localize(\n          \"ui.panel.config.zwave_js.device_info.reinterview_device\"\n        ),\n        icon: mdiChatQuestion,\n        action: () =>\n          showZWaveJSReinterviewNodeDialog(el, {\n            device_id: device.id,\n          }),\n      },\n      {\n        label: hass.localize(\n          \"ui.panel.config.zwave_js.device_info.rebuild_routes\"\n        ),\n        icon: mdiHospitalBox,\n        action: () =>\n          showZWaveJSRebuildNodeRoutesDialog(el, {\n            device,\n          }),\n      },\n      {\n        label: hass.localize(\n          \"ui.panel.config.zwave_js.device_info.remove_failed\"\n        ),\n        icon: mdiDeleteForever,\n        action: () =>\n          showZWaveJSRemoveFailedNodeDialog(el, {\n            device_id: device.id,\n          }),\n      },\n      {\n        label: hass.localize(\n          \"ui.panel.config.zwave_js.device_info.node_statistics\"\n        ),\n        icon: mdiInformation,\n        action: () =>\n          showZWaveJSNodeStatisticsDialog(el, {\n            device,\n          }),\n      }\n    );\n  }\n\n  if (\n    !(\n      nodeStatus.ready &&\n      (nodeStatus.is_controller_node || nodeStatus.has_firmware_update_cc)\n    )\n  ) {\n    return actions;\n  }\n\n  const [isAnyFirmwareUpdateInProgress, isNodeFirmwareUpdateInProgress] =\n    await Promise.all([\n      fetchZwaveIsAnyOTAFirmwareUpdateInProgress(hass, entryId),\n      fetchZwaveIsNodeFirmwareUpdateInProgress(hass, device.id),\n    ]);\n\n  if (!isAnyFirmwareUpdateInProgress || isNodeFirmwareUpdateInProgress) {\n    actions.push({\n      label: hass.localize(\n        \"ui.panel.config.zwave_js.device_info.update_firmware\"\n      ),\n      icon: mdiUpload,\n      action: async () => {\n        if (\n          isNodeFirmwareUpdateInProgress ||\n          (await fetchZwaveIsNodeFirmwareUpdateInProgress(hass, device.id)) ||\n          (await showConfirmationDialog(el, {\n            text: hass.localize(\n              `ui.panel.config.zwave_js.update_firmware.${\n                nodeStatus.is_controller_node ? \"warning_controller\" : \"warning\"\n              }`\n            ),\n            dismissText: hass.localize(\"ui.common.no\"),\n            confirmText: hass.localize(\"ui.common.yes\"),\n          }))\n        ) {\n          showZWaveJSUpdateFirmwareNodeDialog(el, {\n            device,\n          });\n        }\n      },\n    });\n  }\n\n  if (nodeStatus.is_controller_node) {\n    actions.push({\n      label: hass.localize(\n        \"ui.panel.config.zwave_js.device_info.hard_reset_controller\"\n      ),\n      icon: mdiDeleteForever,\n      action: async () => {\n        showZWaveJSHardResetControllerDialog(el, {\n          entryId,\n        });\n      },\n    });\n  }\n\n  return actions;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}