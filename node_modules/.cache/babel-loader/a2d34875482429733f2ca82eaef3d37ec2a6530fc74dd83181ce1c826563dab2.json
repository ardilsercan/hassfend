{"ast":null,"code":"import _typeof from \"@babel/runtime/helpers/typeof\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4;\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.weak-map.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nvar mdiDrag = \"M7,19V17H9V19H7M11,19V17H13V19H11M15,19V17H17V19H15M7,15V13H9V15H7M11,15V13H13V15H11M15,15V13H17V15H15M7,11V9H9V11H7M11,11V9H13V11H11M15,11V9H17V11H15M7,7V5H9V7H7M11,7V5H13V7H11M15,7V5H17V7H15Z\";\nvar mdiPlus = \"M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z\";\nimport deepClone from \"deep-clone-simple\";\nimport { LitElement, css, html, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { repeat } from \"lit/directives/repeat\";\nimport { storage } from \"../../../../common/decorators/storage\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { listenMediaQuery } from \"../../../../common/dom/media_query\";\nimport { nestedArrayMove } from \"../../../../common/util/array-move\";\nimport \"../../../../components/ha-button\";\nimport \"../../../../components/ha-button-menu\";\nimport \"../../../../components/ha-sortable\";\nimport \"../../../../components/ha-svg-icon\";\nimport { PASTE_VALUE, showAddAutomationElementDialog } from \"../show-add-automation-element-dialog\";\nimport \"./ha-automation-condition-row\";\nvar HaAutomationCondition = _decorate([customElement(\"ha-automation-condition\")], function (_initialize, _LitElement) {\n  var HaAutomationCondition = /*#__PURE__*/function (_LitElement2) {\n    _inherits(HaAutomationCondition, _LitElement2);\n    function HaAutomationCondition() {\n      var _this;\n      _classCallCheck(this, HaAutomationCondition);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, HaAutomationCondition, [].concat(args));\n      _initialize(_assertThisInitialized(_this));\n      return _this;\n    }\n    return _createClass(HaAutomationCondition);\n  }(_LitElement);\n  return {\n    F: HaAutomationCondition,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"conditions\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"disabled\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Array\n      })],\n      key: \"path\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_showReorder\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [storage({\n        key: \"automationClipboard\",\n        state: true,\n        subscribe: true,\n        storage: \"sessionStorage\"\n      })],\n      key: \"_clipboard\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_focusLastConditionOnChange\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_conditionKeys\",\n      value: function value() {\n        return new WeakMap();\n      }\n    }, {\n      kind: \"field\",\n      key: \"_unsubMql\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"connectedCallback\",\n      value: function connectedCallback() {\n        var _this2 = this;\n        _get(_getPrototypeOf(HaAutomationCondition.prototype), \"connectedCallback\", this).call(this);\n        this._unsubMql = listenMediaQuery(\"(min-width: 600px)\", function (matches) {\n          _this2._showReorder = matches;\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"disconnectedCallback\",\n      value: function disconnectedCallback() {\n        var _this$_unsubMql;\n        _get(_getPrototypeOf(HaAutomationCondition.prototype), \"disconnectedCallback\", this).call(this);\n        (_this$_unsubMql = this._unsubMql) === null || _this$_unsubMql === void 0 || _this$_unsubMql.call(this);\n        this._unsubMql = undefined;\n      }\n    }, {\n      kind: \"method\",\n      key: \"updated\",\n      value: function updated(changedProperties) {\n        var _this3 = this;\n        if (!changedProperties.has(\"conditions\")) {\n          return;\n        }\n        var updatedConditions;\n        if (!Array.isArray(this.conditions)) {\n          updatedConditions = [this.conditions];\n        }\n        (updatedConditions || this.conditions).forEach(function (condition, index) {\n          if (typeof condition === \"string\") {\n            updatedConditions = updatedConditions || _toConsumableArray(_this3.conditions);\n            updatedConditions[index] = {\n              condition: \"template\",\n              value_template: condition\n            };\n          }\n        });\n        if (updatedConditions) {\n          fireEvent(this, \"value-changed\", {\n            value: updatedConditions\n          });\n        } else if (this._focusLastConditionOnChange) {\n          this._focusLastConditionOnChange = false;\n          var row = this.shadowRoot.querySelector(\"ha-automation-condition-row:last-of-type\");\n          row.updateComplete.then(function () {\n            row.expand();\n            row.scrollIntoView();\n            row.focus();\n          });\n        }\n      }\n    }, {\n      kind: \"get\",\n      key: \"nested\",\n      value: function nested() {\n        return this.path !== undefined;\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var _this4 = this;\n        if (!Array.isArray(this.conditions)) {\n          return nothing;\n        }\n        return html(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      <ha-sortable\\n        handle-selector=\\\".handle\\\"\\n        .disabled=\", \"\\n        @item-moved=\", \"\\n        group=\\\"conditions\\\"\\n        .path=\", \"\\n        invert-swap\\n      >\\n        <div class=\\\"conditions\\\">\\n          \", \"\\n        </div>\\n      </ha-sortable>\\n      <div class=\\\"buttons\\\">\\n        <ha-button\\n          outlined\\n          .disabled=\", \"\\n          .label=\", \"\\n          @click=\", \"\\n        >\\n          <ha-svg-icon .path=\", \" slot=\\\"icon\\\"></ha-svg-icon>\\n        </ha-button>\\n        <ha-button\\n          .disabled=\", \"\\n          .label=\", \"\\n          @click=\", \"\\n        >\\n          <ha-svg-icon .path=\", \" slot=\\\"icon\\\"></ha-svg-icon>\\n        </ha-button>\\n      </div>\\n    \"])), !this._showReorder || this.disabled, this._conditionMoved, this.path, repeat(this.conditions.filter(function (c) {\n          return _typeof(c) === \"object\";\n        }), function (condition) {\n          return _this4._getKey(condition);\n        }, function (cond, idx) {\n          var _this4$path;\n          return html(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n              <ha-automation-condition-row\\n                .path=\", \"\\n                .index=\", \"\\n                .first=\", \"\\n                .last=\", \"\\n                .totalConditions=\", \"\\n                .condition=\", \"\\n                .disabled=\", \"\\n                @duplicate=\", \"\\n                @move-down=\", \"\\n                @move-up=\", \"\\n                @value-changed=\", \"\\n                .hass=\", \"\\n              >\\n                \", \"\\n              </ha-automation-condition-row>\\n            \"])), [].concat(_toConsumableArray((_this4$path = _this4.path) !== null && _this4$path !== void 0 ? _this4$path : []), [idx]), idx, idx === 0, idx === _this4.conditions.length - 1, _this4.conditions.length, cond, _this4.disabled, _this4._duplicateCondition, _this4._moveDown, _this4._moveUp, _this4._conditionChanged, _this4.hass, _this4._showReorder && !_this4.disabled ? html(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n                      <div class=\\\"handle\\\" slot=\\\"icons\\\">\\n                        <ha-svg-icon .path=\", \"></ha-svg-icon>\\n                      </div>\\n                    \"])), mdiDrag) : nothing);\n        }), this.disabled, this.hass.localize(\"ui.panel.config.automation.editor.conditions.add\"), this._addConditionDialog, mdiPlus, this.disabled, this.hass.localize(\"ui.panel.config.automation.editor.conditions.add_building_block\"), this._addConditionBuildingBlockDialog, mdiPlus);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_addConditionDialog\",\n      value: function _addConditionDialog() {\n        var _this$_clipboard;\n        showAddAutomationElementDialog(this, {\n          type: \"condition\",\n          add: this._addCondition,\n          clipboardItem: (_this$_clipboard = this._clipboard) === null || _this$_clipboard === void 0 || (_this$_clipboard = _this$_clipboard.condition) === null || _this$_clipboard === void 0 ? void 0 : _this$_clipboard.condition\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_addConditionBuildingBlockDialog\",\n      value: function _addConditionBuildingBlockDialog() {\n        var _this$_clipboard2;\n        showAddAutomationElementDialog(this, {\n          type: \"condition\",\n          add: this._addCondition,\n          clipboardItem: (_this$_clipboard2 = this._clipboard) === null || _this$_clipboard2 === void 0 || (_this$_clipboard2 = _this$_clipboard2.condition) === null || _this$_clipboard2 === void 0 ? void 0 : _this$_clipboard2.condition,\n          group: \"building_blocks\"\n        });\n      }\n    }, {\n      kind: \"field\",\n      key: \"_addCondition\",\n      value: function value() {\n        var _this5 = this;\n        return function (value) {\n          var conditions;\n          if (value === PASTE_VALUE) {\n            conditions = _this5.conditions.concat(deepClone(_this5._clipboard.condition));\n          } else {\n            var condition = value;\n            var elClass = customElements.get(\"ha-automation-condition-\".concat(condition));\n            conditions = _this5.conditions.concat(Object.assign({\n              condition: condition\n            }, elClass.defaultConfig));\n          }\n          _this5._focusLastConditionOnChange = true;\n          fireEvent(_this5, \"value-changed\", {\n            value: conditions\n          });\n        };\n      }\n    }, {\n      kind: \"method\",\n      key: \"_getKey\",\n      value: function _getKey(condition) {\n        if (!this._conditionKeys.has(condition)) {\n          this._conditionKeys.set(condition, Math.random().toString());\n        }\n        return this._conditionKeys.get(condition);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_moveUp\",\n      value: function _moveUp(ev) {\n        var index = ev.target.index;\n        var newIndex = index - 1;\n        this._move(index, newIndex);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_moveDown\",\n      value: function _moveDown(ev) {\n        var index = ev.target.index;\n        var newIndex = index + 1;\n        this._move(index, newIndex);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_move\",\n      value: function _move(oldIndex, newIndex, oldPath, newPath) {\n        var conditions = nestedArrayMove(this.conditions, oldIndex, newIndex, oldPath, newPath);\n        fireEvent(this, \"value-changed\", {\n          value: conditions\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_conditionMoved\",\n      value: function _conditionMoved(ev) {\n        if (this.nested) return;\n        ev.stopPropagation();\n        var _ev$detail = ev.detail,\n          oldIndex = _ev$detail.oldIndex,\n          newIndex = _ev$detail.newIndex,\n          oldPath = _ev$detail.oldPath,\n          newPath = _ev$detail.newPath;\n        this._move(oldIndex, newIndex, oldPath, newPath);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_conditionChanged\",\n      value: function _conditionChanged(ev) {\n        ev.stopPropagation();\n        var conditions = _toConsumableArray(this.conditions);\n        var newValue = ev.detail.value;\n        var index = ev.target.index;\n        if (newValue === null) {\n          conditions.splice(index, 1);\n        } else {\n          // Store key on new value.\n          var key = this._getKey(conditions[index]);\n          this._conditionKeys.set(newValue, key);\n          conditions[index] = newValue;\n        }\n        this.conditions = conditions;\n        fireEvent(this, \"value-changed\", {\n          value: conditions\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_duplicateCondition\",\n      value: function _duplicateCondition(ev) {\n        ev.stopPropagation();\n        var index = ev.target.index;\n        fireEvent(this, \"value-changed\", {\n          value: this.conditions.concat(deepClone(this.conditions[index]))\n        });\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n      .conditions {\\n        padding: 16px;\\n        margin: -16px -16px 0px -16px;\\n        display: flex;\\n        flex-direction: column;\\n        gap: 16px;\\n      }\\n      .conditions:not(:has(ha-automation-condition-row)) {\\n        margin: -16px;\\n      }\\n      .sortable-ghost {\\n        background: none;\\n        border-radius: var(--ha-card-border-radius, 12px);\\n      }\\n      .sortable-drag {\\n        background: none;\\n      }\\n      ha-automation-condition-row {\\n        display: block;\\n        scroll-margin-top: 48px;\\n      }\\n      ha-svg-icon {\\n        height: 20px;\\n      }\\n      .handle {\\n        padding: 12px;\\n        cursor: move; /* fallback if grab cursor is unsupported */\\n        cursor: grab;\\n      }\\n      .handle ha-svg-icon {\\n        pointer-events: none;\\n        height: 24px;\\n      }\\n      .buttons {\\n        display: flex;\\n        flex-wrap: wrap;\\n        gap: 8px;\\n      }\\n    \"])));\n      }\n    }]\n  };\n}, LitElement);\nexport { HaAutomationCondition as default };","map":{"version":3,"names":["deepClone","LitElement","css","html","nothing","customElement","property","state","repeat","storage","fireEvent","listenMediaQuery","nestedArrayMove","PASTE_VALUE","showAddAutomationElementDialog","HaAutomationCondition","_decorate","_initialize","_LitElement","_LitElement2","_inherits","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_assertThisInitialized","_createClass","F","d","kind","decorators","attribute","key","value","type","Boolean","subscribe","WeakMap","connectedCallback","_this2","_get","_getPrototypeOf","prototype","call","_unsubMql","matches","_showReorder","disconnectedCallback","_this$_unsubMql","undefined","updated","changedProperties","_this3","has","updatedConditions","isArray","conditions","forEach","condition","index","_toConsumableArray","value_template","_focusLastConditionOnChange","row","shadowRoot","querySelector","updateComplete","then","expand","scrollIntoView","focus","nested","path","render","_this4","_templateObject","_taggedTemplateLiteral","disabled","_conditionMoved","filter","c","_typeof","_getKey","cond","idx","_this4$path","_templateObject2","_duplicateCondition","_moveDown","_moveUp","_conditionChanged","hass","_templateObject3","mdiDrag","localize","_addConditionDialog","mdiPlus","_addConditionBuildingBlockDialog","_this$_clipboard","add","_addCondition","clipboardItem","_clipboard","_this$_clipboard2","group","_this5","elClass","customElements","get","Object","assign","defaultConfig","_conditionKeys","set","Math","random","toString","ev","target","newIndex","_move","oldIndex","oldPath","newPath","stopPropagation","_ev$detail","detail","newValue","splice","static","styles","_templateObject4","default"],"sources":["/workspaces/frontend/src/panels/config/automation/condition/ha-automation-condition.ts"],"sourcesContent":["import { mdiDrag, mdiPlus } from \"@mdi/js\";\nimport deepClone from \"deep-clone-simple\";\nimport {\n  CSSResultGroup,\n  LitElement,\n  PropertyValues,\n  css,\n  html,\n  nothing,\n} from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { repeat } from \"lit/directives/repeat\";\nimport { storage } from \"../../../../common/decorators/storage\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { listenMediaQuery } from \"../../../../common/dom/media_query\";\nimport { nestedArrayMove } from \"../../../../common/util/array-move\";\nimport \"../../../../components/ha-button\";\nimport \"../../../../components/ha-button-menu\";\nimport \"../../../../components/ha-sortable\";\nimport \"../../../../components/ha-svg-icon\";\nimport type {\n  AutomationClipboard,\n  Condition,\n} from \"../../../../data/automation\";\nimport type { HomeAssistant, ItemPath } from \"../../../../types\";\nimport {\n  PASTE_VALUE,\n  showAddAutomationElementDialog,\n} from \"../show-add-automation-element-dialog\";\nimport \"./ha-automation-condition-row\";\nimport type HaAutomationConditionRow from \"./ha-automation-condition-row\";\n\n@customElement(\"ha-automation-condition\")\nexport default class HaAutomationCondition extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public conditions!: Condition[];\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @property({ type: Array }) public path?: ItemPath;\n\n  @state() private _showReorder: boolean = false;\n\n  @storage({\n    key: \"automationClipboard\",\n    state: true,\n    subscribe: true,\n    storage: \"sessionStorage\",\n  })\n  public _clipboard?: AutomationClipboard;\n\n  private _focusLastConditionOnChange = false;\n\n  private _conditionKeys = new WeakMap<Condition, string>();\n\n  private _unsubMql?: () => void;\n\n  public connectedCallback() {\n    super.connectedCallback();\n    this._unsubMql = listenMediaQuery(\"(min-width: 600px)\", (matches) => {\n      this._showReorder = matches;\n    });\n  }\n\n  public disconnectedCallback() {\n    super.disconnectedCallback();\n    this._unsubMql?.();\n    this._unsubMql = undefined;\n  }\n\n  protected updated(changedProperties: PropertyValues) {\n    if (!changedProperties.has(\"conditions\")) {\n      return;\n    }\n\n    let updatedConditions: Condition[] | undefined;\n    if (!Array.isArray(this.conditions)) {\n      updatedConditions = [this.conditions];\n    }\n\n    (updatedConditions || this.conditions).forEach((condition, index) => {\n      if (typeof condition === \"string\") {\n        updatedConditions = updatedConditions || [...this.conditions];\n        updatedConditions[index] = {\n          condition: \"template\",\n          value_template: condition,\n        };\n      }\n    });\n\n    if (updatedConditions) {\n      fireEvent(this, \"value-changed\", {\n        value: updatedConditions,\n      });\n    } else if (this._focusLastConditionOnChange) {\n      this._focusLastConditionOnChange = false;\n      const row = this.shadowRoot!.querySelector<HaAutomationConditionRow>(\n        \"ha-automation-condition-row:last-of-type\"\n      )!;\n      row.updateComplete.then(() => {\n        row.expand();\n        row.scrollIntoView();\n        row.focus();\n      });\n    }\n  }\n\n  private get nested() {\n    return this.path !== undefined;\n  }\n\n  protected render() {\n    if (!Array.isArray(this.conditions)) {\n      return nothing;\n    }\n    return html`\n      <ha-sortable\n        handle-selector=\".handle\"\n        .disabled=${!this._showReorder || this.disabled}\n        @item-moved=${this._conditionMoved}\n        group=\"conditions\"\n        .path=${this.path}\n        invert-swap\n      >\n        <div class=\"conditions\">\n          ${repeat(\n            this.conditions.filter((c) => typeof c === \"object\"),\n            (condition) => this._getKey(condition),\n            (cond, idx) => html`\n              <ha-automation-condition-row\n                .path=${[...(this.path ?? []), idx]}\n                .index=${idx}\n                .first=${idx === 0}\n                .last=${idx === this.conditions.length - 1}\n                .totalConditions=${this.conditions.length}\n                .condition=${cond}\n                .disabled=${this.disabled}\n                @duplicate=${this._duplicateCondition}\n                @move-down=${this._moveDown}\n                @move-up=${this._moveUp}\n                @value-changed=${this._conditionChanged}\n                .hass=${this.hass}\n              >\n                ${this._showReorder && !this.disabled\n                  ? html`\n                      <div class=\"handle\" slot=\"icons\">\n                        <ha-svg-icon .path=${mdiDrag}></ha-svg-icon>\n                      </div>\n                    `\n                  : nothing}\n              </ha-automation-condition-row>\n            `\n          )}\n        </div>\n      </ha-sortable>\n      <div class=\"buttons\">\n        <ha-button\n          outlined\n          .disabled=${this.disabled}\n          .label=${this.hass.localize(\n            \"ui.panel.config.automation.editor.conditions.add\"\n          )}\n          @click=${this._addConditionDialog}\n        >\n          <ha-svg-icon .path=${mdiPlus} slot=\"icon\"></ha-svg-icon>\n        </ha-button>\n        <ha-button\n          .disabled=${this.disabled}\n          .label=${this.hass.localize(\n            \"ui.panel.config.automation.editor.conditions.add_building_block\"\n          )}\n          @click=${this._addConditionBuildingBlockDialog}\n        >\n          <ha-svg-icon .path=${mdiPlus} slot=\"icon\"></ha-svg-icon>\n        </ha-button>\n      </div>\n    `;\n  }\n\n  private _addConditionDialog() {\n    showAddAutomationElementDialog(this, {\n      type: \"condition\",\n      add: this._addCondition,\n      clipboardItem: this._clipboard?.condition?.condition,\n    });\n  }\n\n  private _addConditionBuildingBlockDialog() {\n    showAddAutomationElementDialog(this, {\n      type: \"condition\",\n      add: this._addCondition,\n      clipboardItem: this._clipboard?.condition?.condition,\n      group: \"building_blocks\",\n    });\n  }\n\n  private _addCondition = (value) => {\n    let conditions: Condition[];\n    if (value === PASTE_VALUE) {\n      conditions = this.conditions.concat(\n        deepClone(this._clipboard!.condition)\n      );\n    } else {\n      const condition = value as Condition[\"condition\"];\n      const elClass = customElements.get(\n        `ha-automation-condition-${condition}`\n      ) as CustomElementConstructor & {\n        defaultConfig: Omit<Condition, \"condition\">;\n      };\n      conditions = this.conditions.concat({\n        condition: condition as any,\n        ...elClass.defaultConfig,\n      });\n    }\n    this._focusLastConditionOnChange = true;\n    fireEvent(this, \"value-changed\", { value: conditions });\n  };\n\n  private _getKey(condition: Condition) {\n    if (!this._conditionKeys.has(condition)) {\n      this._conditionKeys.set(condition, Math.random().toString());\n    }\n\n    return this._conditionKeys.get(condition)!;\n  }\n\n  private _moveUp(ev) {\n    const index = (ev.target as any).index;\n    const newIndex = index - 1;\n    this._move(index, newIndex);\n  }\n\n  private _moveDown(ev) {\n    const index = (ev.target as any).index;\n    const newIndex = index + 1;\n    this._move(index, newIndex);\n  }\n\n  private _move(\n    oldIndex: number,\n    newIndex: number,\n    oldPath?: ItemPath,\n    newPath?: ItemPath\n  ) {\n    const conditions = nestedArrayMove(\n      this.conditions,\n      oldIndex,\n      newIndex,\n      oldPath,\n      newPath\n    );\n\n    fireEvent(this, \"value-changed\", { value: conditions });\n  }\n\n  private _conditionMoved(ev: CustomEvent): void {\n    if (this.nested) return;\n    ev.stopPropagation();\n    const { oldIndex, newIndex, oldPath, newPath } = ev.detail;\n    this._move(oldIndex, newIndex, oldPath, newPath);\n  }\n\n  private _conditionChanged(ev: CustomEvent) {\n    ev.stopPropagation();\n    const conditions = [...this.conditions];\n    const newValue = ev.detail.value;\n    const index = (ev.target as any).index;\n\n    if (newValue === null) {\n      conditions.splice(index, 1);\n    } else {\n      // Store key on new value.\n      const key = this._getKey(conditions[index]);\n      this._conditionKeys.set(newValue, key);\n\n      conditions[index] = newValue;\n    }\n\n    this.conditions = conditions;\n\n    fireEvent(this, \"value-changed\", { value: conditions });\n  }\n\n  private _duplicateCondition(ev: CustomEvent) {\n    ev.stopPropagation();\n    const index = (ev.target as any).index;\n    fireEvent(this, \"value-changed\", {\n      value: this.conditions.concat(deepClone(this.conditions[index])),\n    });\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      .conditions {\n        padding: 16px;\n        margin: -16px -16px 0px -16px;\n        display: flex;\n        flex-direction: column;\n        gap: 16px;\n      }\n      .conditions:not(:has(ha-automation-condition-row)) {\n        margin: -16px;\n      }\n      .sortable-ghost {\n        background: none;\n        border-radius: var(--ha-card-border-radius, 12px);\n      }\n      .sortable-drag {\n        background: none;\n      }\n      ha-automation-condition-row {\n        display: block;\n        scroll-margin-top: 48px;\n      }\n      ha-svg-icon {\n        height: 20px;\n      }\n      .handle {\n        padding: 12px;\n        cursor: move; /* fallback if grab cursor is unsupported */\n        cursor: grab;\n      }\n      .handle ha-svg-icon {\n        pointer-events: none;\n        height: 24px;\n      }\n      .buttons {\n        display: flex;\n        flex-wrap: wrap;\n        gap: 8px;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-automation-condition\": HaAutomationCondition;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}