{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _templateObject, _templateObject2;\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nvar mdiTelevision = \"M21,17H3V5H21M21,3H3A2,2 0 0,0 1,5V17A2,2 0 0,0 3,19H8V21H16V19H21A2,2 0 0,0 23,17V5A2,2 0 0,0 21,3Z\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, state } from \"lit/decorators\";\nimport { castSendShowDemo } from \"../../../src/cast/receiver_messages\";\nimport \"../../../src/components/ha-icon\";\nvar CastDemoRow = _decorate([customElement(\"cast-demo-row\")], function (_initialize, _LitElement) {\n  var CastDemoRow = /*#__PURE__*/function (_LitElement2) {\n    _inherits(CastDemoRow, _LitElement2);\n    function CastDemoRow() {\n      var _this;\n      _classCallCheck(this, CastDemoRow);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, CastDemoRow, [].concat(args));\n      _initialize(_assertThisInitialized(_this));\n      return _this;\n    }\n    return _createClass(CastDemoRow);\n  }(_LitElement);\n  return {\n    F: CastDemoRow,\n    d: [{\n      kind: \"field\",\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_castManager\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"setConfig\",\n      value: function setConfig(_config) {\n        // No config possible.\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this._castManager || this._castManager.castState === \"NO_DEVICES_AVAILABLE\") {\n          return nothing;\n        }\n        return html(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      <ha-svg-icon .path=\", \"></ha-svg-icon>\\n      <div class=\\\"flex\\\">\\n        <div class=\\\"name\\\">Show Chromecast interface</div>\\n        <google-cast-launcher></google-cast-launcher>\\n      </div>\\n    \"])), mdiTelevision);\n      }\n    }, {\n      kind: \"method\",\n      key: \"firstUpdated\",\n      value: function firstUpdated(changedProps) {\n        var _this2 = this;\n        _get(_getPrototypeOf(CastDemoRow.prototype), \"firstUpdated\", this).call(this, changedProps);\n        import(\"../../../src/cast/cast_manager\").then(function (_ref) {\n          var getCastManager = _ref.getCastManager;\n          return getCastManager().then(function (mgr) {\n            _this2._castManager = mgr;\n            mgr.addEventListener(\"state-changed\", function () {\n              _this2.requestUpdate();\n            });\n            mgr.castContext.addEventListener(\n            // eslint-disable-next-line no-undef\n            cast.framework.CastContextEventType.SESSION_STATE_CHANGED, function (ev) {\n              // On Android, opening a new session always results in SESSION_RESUMED.\n              // So treat both as the same.\n              if (ev.sessionState === \"SESSION_STARTED\" || ev.sessionState === \"SESSION_RESUMED\") {\n                castSendShowDemo(mgr);\n              }\n            });\n          });\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"updated\",\n      value: function updated(changedProps) {\n        _get(_getPrototypeOf(CastDemoRow.prototype), \"updated\", this).call(this, changedProps);\n        this.style.display = this._castManager ? \"\" : \"none\";\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n      :host {\\n        display: flex;\\n        align-items: center;\\n      }\\n      ha-svg-icon {\\n        padding: 8px;\\n        color: var(--paper-item-icon-color);\\n      }\\n      .flex {\\n        flex: 1;\\n        overflow: hidden;\\n        margin-left: 16px;\\n        display: flex;\\n        justify-content: space-between;\\n        align-items: center;\\n      }\\n      .name {\\n        white-space: nowrap;\\n        overflow: hidden;\\n        text-overflow: ellipsis;\\n      }\\n      google-cast-launcher {\\n        cursor: pointer;\\n        display: inline-block;\\n        height: 24px;\\n        width: 24px;\\n      }\\n    \"])));\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","nothing","customElement","state","castSendShowDemo","CastDemoRow","_decorate","_initialize","_LitElement","_LitElement2","_inherits","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_assertThisInitialized","_createClass","F","d","kind","key","value","decorators","setConfig","_config","render","_castManager","castState","_templateObject","_taggedTemplateLiteral","mdiTelevision","firstUpdated","changedProps","_this2","_get","_getPrototypeOf","prototype","call","then","_ref","getCastManager","mgr","addEventListener","requestUpdate","castContext","cast","framework","CastContextEventType","SESSION_STATE_CHANGED","ev","sessionState","updated","style","display","static","styles","_templateObject2"],"sources":["/Users/sercanardil/Desktop/frontend/demo/src/custom-cards/cast-demo-row.ts"],"sourcesContent":["import { mdiTelevision } from \"@mdi/js\";\nimport { css, CSSResultGroup, html, LitElement, nothing } from \"lit\";\nimport { customElement, state } from \"lit/decorators\";\nimport { CastManager } from \"../../../src/cast/cast_manager\";\nimport { castSendShowDemo } from \"../../../src/cast/receiver_messages\";\nimport \"../../../src/components/ha-icon\";\nimport {\n  CastConfig,\n  LovelaceRow,\n} from \"../../../src/panels/lovelace/entity-rows/types\";\nimport { HomeAssistant } from \"../../../src/types\";\n\n@customElement(\"cast-demo-row\")\nclass CastDemoRow extends LitElement implements LovelaceRow {\n  public hass!: HomeAssistant;\n\n  @state() private _castManager?: CastManager | null;\n\n  public setConfig(_config: CastConfig): void {\n    // No config possible.\n  }\n\n  protected render() {\n    if (\n      !this._castManager ||\n      this._castManager.castState === \"NO_DEVICES_AVAILABLE\"\n    ) {\n      return nothing;\n    }\n    return html`\n      <ha-svg-icon .path=${mdiTelevision}></ha-svg-icon>\n      <div class=\"flex\">\n        <div class=\"name\">Show Chromecast interface</div>\n        <google-cast-launcher></google-cast-launcher>\n      </div>\n    `;\n  }\n\n  protected firstUpdated(changedProps) {\n    super.firstUpdated(changedProps);\n    import(\"../../../src/cast/cast_manager\").then(({ getCastManager }) =>\n      getCastManager().then((mgr) => {\n        this._castManager = mgr;\n        mgr.addEventListener(\"state-changed\", () => {\n          this.requestUpdate();\n        });\n        mgr.castContext.addEventListener(\n          // eslint-disable-next-line no-undef\n          cast.framework.CastContextEventType.SESSION_STATE_CHANGED,\n          (ev) => {\n            // On Android, opening a new session always results in SESSION_RESUMED.\n            // So treat both as the same.\n            if (\n              ev.sessionState === \"SESSION_STARTED\" ||\n              ev.sessionState === \"SESSION_RESUMED\"\n            ) {\n              castSendShowDemo(mgr);\n            }\n          }\n        );\n      })\n    );\n  }\n\n  protected updated(changedProps) {\n    super.updated(changedProps);\n    this.style.display = this._castManager ? \"\" : \"none\";\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      :host {\n        display: flex;\n        align-items: center;\n      }\n      ha-svg-icon {\n        padding: 8px;\n        color: var(--paper-item-icon-color);\n      }\n      .flex {\n        flex: 1;\n        overflow: hidden;\n        margin-left: 16px;\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n      }\n      .name {\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n      }\n      google-cast-launcher {\n        cursor: pointer;\n        display: inline-block;\n        height: 24px;\n        width: 24px;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"cast-demo-row\": CastDemoRow;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}