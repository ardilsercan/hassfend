{"ast":null,"code":"import \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n/**\n * Specifies an observer callback that is run when the decorated property\n * changes. The observer receives the current and old value as arguments.\n */\nexport var observer = function observer(_observer) {\n  return (\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    function (proto, propName) {\n      // if we haven't wrapped `updated` in this class, do so\n      if (!proto.constructor._observers) {\n        proto.constructor._observers = new Map();\n        var userUpdated = proto.updated;\n        proto.updated = function (changedProperties) {\n          var _this = this;\n          userUpdated.call(this, changedProperties);\n          changedProperties.forEach(function (v, k) {\n            var observers = _this.constructor._observers;\n            var observer = observers.get(k);\n            if (observer !== undefined) {\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              observer.call(_this, _this[k], v);\n            }\n          });\n        };\n        // clone any existing observers (superclasses)\n        // eslint-disable-next-line no-prototype-builtins\n      } else if (!proto.constructor.hasOwnProperty('_observers')) {\n        var observers = proto.constructor._observers;\n        proto.constructor._observers = new Map();\n        observers.forEach(\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        function (v, k) {\n          return proto.constructor._observers.set(k, v);\n        });\n      }\n      // set this method\n      proto.constructor._observers.set(propName, _observer);\n    }\n  );\n};","map":{"version":3,"names":["observer","proto","propName","constructor","_observers","Map","userUpdated","updated","changedProperties","_this","call","forEach","v","k","observers","get","undefined","hasOwnProperty","set"],"sources":["observer.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\n// tslint:disable:no-any\n\nimport {PropertyValues, ReactiveElement} from '@lit/reactive-element';\n\n/**\n * Observer function type.\n */\nexport interface Observer {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  (value: any, old: any): void;\n}\n\ntype ReactiveElementClass = typeof ReactiveElement;\ninterface ReactiveElementClassWithObservers extends ReactiveElementClass {\n  // tslint:disable-next-line:enforce-name-casing\n  _observers: Map<PropertyKey, Observer>;\n}\n\n/**\n * Specifies an observer callback that is run when the decorated property\n * changes. The observer receives the current and old value as arguments.\n */\nexport const observer = (observer: Observer) =>\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (proto: any, propName: PropertyKey) => {\n      // if we haven't wrapped `updated` in this class, do so\n      if (!(proto.constructor as ReactiveElementClassWithObservers)\n               ._observers) {\n        proto.constructor._observers = new Map<PropertyKey, Observer>();\n        const userUpdated = proto.updated;\n        proto.updated = function(\n            this: ReactiveElement, changedProperties: PropertyValues) {\n          userUpdated.call(this, changedProperties);\n          changedProperties.forEach((v, k) => {\n            const observers =\n                (this.constructor as ReactiveElementClassWithObservers)\n                    ._observers;\n            const observer = observers.get(k);\n            if (observer !== undefined) {\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              observer.call(this, (this as any)[k], v);\n            }\n          });\n        };\n        // clone any existing observers (superclasses)\n        // eslint-disable-next-line no-prototype-builtins\n      } else if (!proto.constructor.hasOwnProperty('_observers')) {\n        const observers = proto.constructor._observers;\n        proto.constructor._observers = new Map();\n        observers.forEach(\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            (v: any, k: PropertyKey) => proto.constructor._observers.set(k, v));\n      }\n      // set this method\n      proto.constructor._observers.set(propName, observer);\n    };\n"],"mappings":";;;;;;;;AAAA;;;;;AA0BA;;;;AAIA,OAAO,IAAMA,QAAQ,GAAG,SAAAA,SAACA,SAAkB;EAAA;IACvC;IACA,UAACC,KAAU,EAAEC,QAAqB,EAAI;MACpC;MACA,IAAI,CAAED,KAAK,CAACE,WAAiD,CACnDC,UAAU,EAAE;QACpBH,KAAK,CAACE,WAAW,CAACC,UAAU,GAAG,IAAIC,GAAG,EAAyB;QAC/D,IAAMC,WAAW,GAAGL,KAAK,CAACM,OAAO;QACjCN,KAAK,CAACM,OAAO,GAAG,UACWC,iBAAiC;UAAA,IAAAC,KAAA;UAC1DH,WAAW,CAACI,IAAI,CAAC,IAAI,EAAEF,iBAAiB,CAAC;UACzCA,iBAAiB,CAACG,OAAO,CAAC,UAACC,CAAC,EAAEC,CAAC,EAAI;YACjC,IAAMC,SAAS,GACVL,KAAI,CAACN,WAAiD,CAClDC,UAAU;YACnB,IAAMJ,QAAQ,GAAGc,SAAS,CAACC,GAAG,CAACF,CAAC,CAAC;YACjC,IAAIb,QAAQ,KAAKgB,SAAS,EAAE;cAC1B;cACAhB,QAAQ,CAACU,IAAI,CAACD,KAAI,EAAGA,KAAY,CAACI,CAAC,CAAC,EAAED,CAAC,CAAC;;UAE5C,CAAC,CAAC;QACJ,CAAC;QACD;QACA;OACD,MAAM,IAAI,CAACX,KAAK,CAACE,WAAW,CAACc,cAAc,CAAC,YAAY,CAAC,EAAE;QAC1D,IAAMH,SAAS,GAAGb,KAAK,CAACE,WAAW,CAACC,UAAU;QAC9CH,KAAK,CAACE,WAAW,CAACC,UAAU,GAAG,IAAIC,GAAG,EAAE;QACxCS,SAAS,CAACH,OAAO;QACb;QACA,UAACC,CAAM,EAAEC,CAAc;UAAA,OAAKZ,KAAK,CAACE,WAAW,CAACC,UAAU,CAACc,GAAG,CAACL,CAAC,EAAED,CAAC,CAAC;QAAA,EAAC;;MAEzE;MACAX,KAAK,CAACE,WAAW,CAACC,UAAU,CAACc,GAAG,CAAChB,QAAQ,EAAEF,SAAQ,CAAC;IACtD;EAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}