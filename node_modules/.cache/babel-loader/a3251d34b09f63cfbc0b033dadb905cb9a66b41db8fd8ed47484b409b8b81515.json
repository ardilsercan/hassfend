{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/helpers/regeneratorRuntime\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _createForOfIteratorHelper from \"@babel/runtime/helpers/createForOfIteratorHelper\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _decorate from \"@babel/runtime/helpers/decorate\";\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4;\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.object.entries.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.object.values.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\nimport \"core-js/modules/esnext.set.difference.v2.js\";\nimport \"core-js/modules/esnext.set.intersection.v2.js\";\nimport \"core-js/modules/esnext.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/esnext.set.is-subset-of.v2.js\";\nimport \"core-js/modules/esnext.set.is-superset-of.v2.js\";\nimport \"core-js/modules/esnext.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/esnext.set.union.v2.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport { endOfToday, isToday, startOfToday } from \"date-fns/esm\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport memoizeOne from \"memoize-one\";\nimport { hex2rgb, lab2rgb, rgb2hex, rgb2lab } from \"../../../../common/color/convert-color\";\nimport { labBrighten, labDarken } from \"../../../../common/color/lab\";\nimport { formatNumber } from \"../../../../common/number/format_number\";\nimport \"../../../../components/chart/ha-chart-base\";\nimport \"../../../../components/ha-card\";\nimport { getEnergyDataCollection } from \"../../../../data/energy\";\nimport { getStatisticLabel } from \"../../../../data/recorder\";\nimport { SubscribeMixin } from \"../../../../mixins/subscribe-mixin\";\nimport { hasConfigChanged } from \"../../common/has-changed\";\nimport { getCommonOptions } from \"./common/energy-chart-options\";\nexport var HuiEnergyUsageGraphCard = _decorate([customElement(\"hui-energy-usage-graph-card\")], function (_initialize, _SubscribeMixin) {\n  var HuiEnergyUsageGraphCard = /*#__PURE__*/function (_SubscribeMixin2) {\n    _inherits(HuiEnergyUsageGraphCard, _SubscribeMixin2);\n    function HuiEnergyUsageGraphCard() {\n      var _this;\n      _classCallCheck(this, HuiEnergyUsageGraphCard);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, HuiEnergyUsageGraphCard, [].concat(args));\n      _initialize(_assertThisInitialized(_this));\n      return _this;\n    }\n    return _createClass(HuiEnergyUsageGraphCard);\n  }(_SubscribeMixin);\n  return {\n    F: HuiEnergyUsageGraphCard,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_config\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_chartData\",\n      value: function value() {\n        return {\n          datasets: []\n        };\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_start\",\n      value: function value() {\n        return startOfToday();\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_end\",\n      value: function value() {\n        return endOfToday();\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_compareStart\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_compareEnd\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"hassSubscribeRequiredHostProps\",\n      value: function value() {\n        return [\"_config\"];\n      }\n    }, {\n      kind: \"method\",\n      key: \"hassSubscribe\",\n      value: function hassSubscribe() {\n        var _this$_config,\n          _this2 = this;\n        return [getEnergyDataCollection(this.hass, {\n          key: (_this$_config = this._config) === null || _this$_config === void 0 ? void 0 : _this$_config.collection_key\n        }).subscribe(function (data) {\n          return _this2._getStatistics(data);\n        })];\n      }\n    }, {\n      kind: \"method\",\n      key: \"getCardSize\",\n      value: function getCardSize() {\n        return 3;\n      }\n    }, {\n      kind: \"method\",\n      key: \"setConfig\",\n      value: function setConfig(config) {\n        this._config = config;\n      }\n    }, {\n      kind: \"method\",\n      key: \"shouldUpdate\",\n      value: function shouldUpdate(changedProps) {\n        return hasConfigChanged(this, changedProps) || changedProps.size > 1 || !changedProps.has(\"hass\");\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this.hass || !this._config) {\n          return nothing;\n        }\n        return html(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      <ha-card>\\n        \", \"\\n        <div\\n          class=\\\"content \", \"\\\"\\n        >\\n          <ha-chart-base\\n            .hass=\", \"\\n            .data=\", \"\\n            .options=\", \"\\n            chart-type=\\\"bar\\\"\\n          ></ha-chart-base>\\n          \", \"\\n        </div>\\n      </ha-card>\\n    \"])), this._config.title ? html(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"<h1 class=\\\"card-header\\\">\", \"</h1>\"])), this._config.title) : \"\", classMap({\n          \"has-header\": !!this._config.title\n        }), this.hass, this._chartData, this._createOptions(this._start, this._end, this.hass.locale, this.hass.config, this._compareStart, this._compareEnd), !this._chartData.datasets.some(function (dataset) {\n          return dataset.data.length;\n        }) ? html(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"<div class=\\\"no-data\\\">\\n                \", \"\\n              </div>\"])), isToday(this._start) ? this.hass.localize(\"ui.panel.lovelace.cards.energy.no_data\") : this.hass.localize(\"ui.panel.lovelace.cards.energy.no_data_period\")) : \"\");\n      }\n    }, {\n      kind: \"field\",\n      key: \"_createOptions\",\n      value: function value() {\n        var _this3 = this;\n        return memoizeOne(function (start, end, locale, config, compareStart, compareEnd) {\n          var commonOptions = getCommonOptions(start, end, locale, config, \"kWh\", compareStart, compareEnd);\n          var options = Object.assign(Object.assign({}, commonOptions), {}, {\n            plugins: Object.assign(Object.assign({}, commonOptions.plugins), {}, {\n              tooltip: Object.assign(Object.assign({}, commonOptions.plugins.tooltip), {}, {\n                itemSort: function itemSort(a, b) {\n                  var _a$raw, _b$raw, _b$raw2, _a$raw2, _a$raw3;\n                  if (((_a$raw = a.raw) === null || _a$raw === void 0 ? void 0 : _a$raw.y) > 0 && ((_b$raw = b.raw) === null || _b$raw === void 0 ? void 0 : _b$raw.y) < 0) {\n                    return -1;\n                  }\n                  if (((_b$raw2 = b.raw) === null || _b$raw2 === void 0 ? void 0 : _b$raw2.y) > 0 && ((_a$raw2 = a.raw) === null || _a$raw2 === void 0 ? void 0 : _a$raw2.y) < 0) {\n                    return 1;\n                  }\n                  if (((_a$raw3 = a.raw) === null || _a$raw3 === void 0 ? void 0 : _a$raw3.y) > 0) {\n                    return b.datasetIndex - a.datasetIndex;\n                  }\n                  return a.datasetIndex - b.datasetIndex;\n                },\n                callbacks: Object.assign(Object.assign({}, commonOptions.plugins.tooltip.callbacks), {}, {\n                  footer: function footer(contexts) {\n                    var totalConsumed = 0;\n                    var totalReturned = 0;\n                    var _iterator = _createForOfIteratorHelper(contexts),\n                      _step;\n                    try {\n                      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                        var context = _step.value;\n                        var value = context.dataset.data[context.dataIndex].y;\n                        if (value > 0) {\n                          totalConsumed += value;\n                        } else {\n                          totalReturned += Math.abs(value);\n                        }\n                      }\n                    } catch (err) {\n                      _iterator.e(err);\n                    } finally {\n                      _iterator.f();\n                    }\n                    return [totalConsumed ? _this3.hass.localize(\"ui.panel.lovelace.cards.energy.energy_usage_graph.total_consumed\", {\n                      num: formatNumber(totalConsumed, locale)\n                    }) : \"\", totalReturned ? _this3.hass.localize(\"ui.panel.lovelace.cards.energy.energy_usage_graph.total_returned\", {\n                      num: formatNumber(totalReturned, locale)\n                    }) : \"\"].filter(Boolean);\n                  }\n                })\n              })\n            })\n          });\n          return options;\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_getStatistics\",\n      value: function () {\n        var _getStatistics2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(energyData) {\n          var datasets, statIds, _iterator2, _step2, source, _iterator3, _step3, flowFrom, _iterator4, _step4, flowTo, computedStyles, colorPropertyMap, colors, labels;\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                datasets = [];\n                statIds = {};\n                _iterator2 = _createForOfIteratorHelper(energyData.prefs.energy_sources);\n                _context.prev = 3;\n                _iterator2.s();\n              case 5:\n                if ((_step2 = _iterator2.n()).done) {\n                  _context.next = 21;\n                  break;\n                }\n                source = _step2.value;\n                if (!(source.type === \"solar\")) {\n                  _context.next = 10;\n                  break;\n                }\n                if (statIds.solar) {\n                  statIds.solar.push(source.stat_energy_from);\n                } else {\n                  statIds.solar = [source.stat_energy_from];\n                }\n                return _context.abrupt(\"continue\", 19);\n              case 10:\n                if (!(source.type === \"battery\")) {\n                  _context.next = 13;\n                  break;\n                }\n                if (statIds.to_battery) {\n                  statIds.to_battery.push(source.stat_energy_to);\n                  statIds.from_battery.push(source.stat_energy_from);\n                } else {\n                  statIds.to_battery = [source.stat_energy_to];\n                  statIds.from_battery = [source.stat_energy_from];\n                }\n                return _context.abrupt(\"continue\", 19);\n              case 13:\n                if (!(source.type !== \"grid\")) {\n                  _context.next = 15;\n                  break;\n                }\n                return _context.abrupt(\"continue\", 19);\n              case 15:\n                // grid source\n                _iterator3 = _createForOfIteratorHelper(source.flow_from);\n                try {\n                  for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                    flowFrom = _step3.value;\n                    if (statIds.from_grid) {\n                      statIds.from_grid.push(flowFrom.stat_energy_from);\n                    } else {\n                      statIds.from_grid = [flowFrom.stat_energy_from];\n                    }\n                  }\n                } catch (err) {\n                  _iterator3.e(err);\n                } finally {\n                  _iterator3.f();\n                }\n                _iterator4 = _createForOfIteratorHelper(source.flow_to);\n                try {\n                  for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                    flowTo = _step4.value;\n                    if (statIds.to_grid) {\n                      statIds.to_grid.push(flowTo.stat_energy_to);\n                    } else {\n                      statIds.to_grid = [flowTo.stat_energy_to];\n                    }\n                  }\n                } catch (err) {\n                  _iterator4.e(err);\n                } finally {\n                  _iterator4.f();\n                }\n              case 19:\n                _context.next = 5;\n                break;\n              case 21:\n                _context.next = 26;\n                break;\n              case 23:\n                _context.prev = 23;\n                _context.t0 = _context[\"catch\"](3);\n                _iterator2.e(_context.t0);\n              case 26:\n                _context.prev = 26;\n                _iterator2.f();\n                return _context.finish(26);\n              case 29:\n                computedStyles = getComputedStyle(this);\n                colorPropertyMap = {\n                  to_grid: \"--energy-grid-return-color\",\n                  to_battery: \"--energy-battery-in-color\",\n                  from_grid: \"--energy-grid-consumption-color\",\n                  used_grid: \"--energy-grid-consumption-color\",\n                  used_solar: \"--energy-solar-color\",\n                  used_battery: \"--energy-battery-out-color\"\n                };\n                colors = {\n                  to_grid: {\n                    base: computedStyles.getPropertyValue(colorPropertyMap.to_grid).trim()\n                  },\n                  to_battery: {\n                    base: computedStyles.getPropertyValue(colorPropertyMap.to_battery).trim()\n                  },\n                  from_grid: {\n                    base: computedStyles.getPropertyValue(colorPropertyMap.from_grid).trim()\n                  },\n                  used_grid: {\n                    base: computedStyles.getPropertyValue(colorPropertyMap.used_grid).trim()\n                  },\n                  used_solar: {\n                    base: computedStyles.getPropertyValue(colorPropertyMap.used_solar).trim()\n                  },\n                  used_battery: {\n                    base: computedStyles.getPropertyValue(colorPropertyMap.used_battery).trim()\n                  }\n                };\n                Object.entries(colorPropertyMap).forEach(function (_ref) {\n                  var _ref2 = _slicedToArray(_ref, 2),\n                    key = _ref2[0],\n                    colorProp = _ref2[1];\n                  if (key === \"used_grid\" || key === \"used_solar\" || key === \"used_battery\") {\n                    return;\n                  }\n                  colors[key].overrides = [];\n                  if (statIds[key]) {\n                    Object.values(statIds[key]).forEach(function (id, idx) {\n                      var override = computedStyles.getPropertyValue(colorProp + \"-\" + idx).trim();\n                      if (override.length > 0) {\n                        colors[key].overrides[id] = override;\n                      }\n                    });\n                  }\n                });\n                labels = {\n                  used_grid: this.hass.localize(\"ui.panel.lovelace.cards.energy.energy_usage_graph.combined_from_grid\"),\n                  used_solar: this.hass.localize(\"ui.panel.lovelace.cards.energy.energy_usage_graph.consumed_solar\"),\n                  used_battery: this.hass.localize(\"ui.panel.lovelace.cards.energy.energy_usage_graph.consumed_battery\")\n                };\n                this._start = energyData.start;\n                this._end = energyData.end || endOfToday();\n                this._compareStart = energyData.startCompare;\n                this._compareEnd = energyData.endCompare;\n                datasets.push.apply(datasets, _toConsumableArray(this._processDataSet(energyData.stats, energyData.statsMetadata, statIds, colors, labels, false)));\n                if (energyData.statsCompare) {\n                  // Add empty dataset to align the bars\n                  datasets.push({\n                    order: 0,\n                    data: []\n                  });\n                  datasets.push({\n                    order: 999,\n                    data: [],\n                    xAxisID: \"xAxisCompare\"\n                  });\n                  datasets.push.apply(datasets, _toConsumableArray(this._processDataSet(energyData.statsCompare, energyData.statsMetadata, statIds, colors, labels, true)));\n                }\n                this._chartData = {\n                  datasets: datasets\n                };\n              case 41:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee, this, [[3, 23, 26, 29]]);\n        }));\n        function _getStatistics(_x) {\n          return _getStatistics2.apply(this, arguments);\n        }\n        return _getStatistics;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"_processDataSet\",\n      value: function _processDataSet(statistics, statisticsMetaData, statIdsByCat, colors, labels) {\n        var _this4 = this;\n        var compare = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n        var data = [];\n        var combinedData = {};\n        var summedData = {};\n        var pointEndTime;\n        Object.entries(statIdsByCat).forEach(function (_ref3) {\n          var _ref4 = _slicedToArray(_ref3, 2),\n            key = _ref4[0],\n            statIds = _ref4[1];\n          var sum = [\"solar\", \"to_grid\", \"from_grid\", \"to_battery\", \"from_battery\"].includes(key);\n          var add = ![\"solar\", \"from_battery\"].includes(key);\n          var totalStats = {};\n          var sets = {};\n          statIds.forEach(function (id) {\n            var stats = statistics[id];\n            if (!stats) {\n              return;\n            }\n            var set = {};\n            stats.forEach(function (stat) {\n              if (stat.change === null || stat.change === undefined) {\n                return;\n              }\n              var val = stat.change;\n              // Get total of solar and to grid to calculate the solar energy used\n              if (sum) {\n                totalStats[stat.start] = stat.start in totalStats ? totalStats[stat.start] + val : val;\n                pointEndTime = stat.end;\n              }\n              if (add && !(stat.start in set)) {\n                set[stat.start] = val;\n                pointEndTime = stat.end;\n              }\n            });\n            sets[id] = set;\n          });\n          if (sum) {\n            summedData[key] = totalStats;\n          }\n          if (add) {\n            combinedData[key] = sets;\n          }\n        });\n        var grid_to_battery = {};\n        var battery_to_grid = {};\n        if ((summedData.to_grid || summedData.to_battery) && summedData.solar) {\n          var used_solar = {};\n          for (var _i = 0, _Object$keys = Object.keys(summedData.solar); _i < _Object$keys.length; _i++) {\n            var _summedData$to_grid, _summedData$to_batter;\n            var _start = _Object$keys[_i];\n            used_solar[_start] = (summedData.solar[_start] || 0) - (((_summedData$to_grid = summedData.to_grid) === null || _summedData$to_grid === void 0 ? void 0 : _summedData$to_grid[_start]) || 0) - (((_summedData$to_batter = summedData.to_battery) === null || _summedData$to_batter === void 0 ? void 0 : _summedData$to_batter[_start]) || 0);\n            if (used_solar[_start] < 0) {\n              if (summedData.to_battery) {\n                var _summedData$from_grid;\n                grid_to_battery[_start] = used_solar[_start] * -1;\n                if (grid_to_battery[_start] > (((_summedData$from_grid = summedData.from_grid) === null || _summedData$from_grid === void 0 ? void 0 : _summedData$from_grid[_start]) || 0)) {\n                  var _summedData$from_grid2, _summedData$from_grid3;\n                  battery_to_grid[_start] = Math.min(0, grid_to_battery[_start] - (((_summedData$from_grid2 = summedData.from_grid) === null || _summedData$from_grid2 === void 0 ? void 0 : _summedData$from_grid2[_start]) || 0));\n                  grid_to_battery[_start] = (_summedData$from_grid3 = summedData.from_grid) === null || _summedData$from_grid3 === void 0 ? void 0 : _summedData$from_grid3[_start];\n                }\n              }\n              used_solar[_start] = 0;\n            }\n          }\n          combinedData.used_solar = {\n            used_solar: used_solar\n          };\n        }\n        if (summedData.from_battery) {\n          if (summedData.to_grid) {\n            var used_battery = {};\n            for (var _i2 = 0, _Object$keys2 = Object.keys(summedData.from_battery); _i2 < _Object$keys2.length; _i2++) {\n              var _start2 = _Object$keys2[_i2];\n              used_battery[_start2] = (summedData.from_battery[_start2] || 0) - (battery_to_grid[_start2] || 0);\n            }\n            combinedData.used_battery = {\n              used_battery: used_battery\n            };\n          } else {\n            combinedData.used_battery = {\n              used_battery: summedData.from_battery\n            };\n          }\n        }\n        if (combinedData.from_grid && summedData.to_battery) {\n          var used_grid = {};\n          var _loop = function _loop() {\n            var start = _Object$keys3[_i3];\n            var noOfSources = 0;\n            var source;\n            for (var _i4 = 0, _Object$entries = Object.entries(combinedData.from_grid); _i4 < _Object$entries.length; _i4++) {\n              var _Object$entries$_i = _slicedToArray(_Object$entries[_i4], 2),\n                key = _Object$entries$_i[0],\n                stats = _Object$entries$_i[1];\n              if (stats[start]) {\n                source = key;\n                noOfSources++;\n              }\n              if (noOfSources > 1) {\n                break;\n              }\n            }\n            if (noOfSources === 1) {\n              combinedData.from_grid[source][start] -= grid_to_battery[start] || 0;\n            } else {\n              var total_from_grid = 0;\n              Object.values(combinedData.from_grid).forEach(function (stats) {\n                total_from_grid += stats[start] || 0;\n                delete stats[start];\n              });\n              used_grid[start] = total_from_grid - (grid_to_battery[start] || 0);\n            }\n          };\n          for (var _i3 = 0, _Object$keys3 = Object.keys(grid_to_battery); _i3 < _Object$keys3.length; _i3++) {\n            _loop();\n          }\n          combinedData.used_grid = {\n            used_grid: used_grid\n          };\n        }\n        var allKeys = [];\n        Object.values(combinedData).forEach(function (sources) {\n          Object.values(sources).forEach(function (source) {\n            allKeys = allKeys.concat(Object.keys(source));\n          });\n        });\n        var uniqueKeys = Array.from(new Set(allKeys)).sort(function (a, b) {\n          return Number(a) - Number(b);\n        });\n        Object.entries(combinedData).forEach(function (_ref5) {\n          var _ref6 = _slicedToArray(_ref5, 2),\n            type = _ref6[0],\n            sources = _ref6[1];\n          Object.entries(sources).forEach(function (_ref7, idx) {\n            var _colors$type$override;\n            var _ref8 = _slicedToArray(_ref7, 2),\n              statId = _ref8[0],\n              source = _ref8[1];\n            var borderColor = (_colors$type$override = colors[type].overrides) === null || _colors$type$override === void 0 ? void 0 : _colors$type$override[statId];\n            if (!borderColor) {\n              var modifiedColor = idx > 0 ? _this4.hass.themes.darkMode ? labBrighten(rgb2lab(hex2rgb(colors[type].base)), idx) : labDarken(rgb2lab(hex2rgb(colors[type].base)), idx) : undefined;\n              borderColor = modifiedColor ? rgb2hex(lab2rgb(modifiedColor)) : colors[type].base;\n            }\n            var points = [];\n            // Process chart data.\n            var _iterator5 = _createForOfIteratorHelper(uniqueKeys),\n              _step5;\n            try {\n              for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n                var key = _step5.value;\n                var value = source[key] || 0;\n                points.push({\n                  x: Number(key),\n                  y: value && [\"to_grid\", \"to_battery\"].includes(type) ? -1 * value : value\n                });\n              }\n            } catch (err) {\n              _iterator5.e(err);\n            } finally {\n              _iterator5.f();\n            }\n            if (points.length === 1) {\n              points.push({\n                x: pointEndTime,\n                y: 0\n              });\n            }\n            data.push({\n              label: type in labels ? labels[type] : getStatisticLabel(_this4.hass, statId, statisticsMetaData[statId]),\n              order: type === \"used_solar\" ? 1 : type === \"to_battery\" ? Object.keys(combinedData).length : idx + 2,\n              borderColor: compare ? borderColor + \"7F\" : borderColor,\n              backgroundColor: compare ? borderColor + \"32\" : borderColor + \"7F\",\n              stack: \"stack\",\n              data: points,\n              xAxisID: compare ? \"xAxisCompare\" : undefined\n            });\n          });\n        });\n        return data;\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n      ha-card {\\n        height: 100%;\\n      }\\n      .card-header {\\n        padding-bottom: 0;\\n      }\\n      .content {\\n        padding: 16px;\\n      }\\n      .has-header {\\n        padding-top: 0;\\n      }\\n      .no-data {\\n        position: absolute;\\n        height: 100%;\\n        top: 0;\\n        left: 0;\\n        right: 0;\\n        display: flex;\\n        justify-content: center;\\n        align-items: center;\\n        padding: 20%;\\n        margin-left: 32px;\\n        margin-inline-start: 32px;\\n        margin-inline-end: initial;\\n        box-sizing: border-box;\\n      }\\n    \"])));\n      }\n    }]\n  };\n}, SubscribeMixin(LitElement));","map":{"version":3,"names":["endOfToday","isToday","startOfToday","css","html","LitElement","nothing","customElement","property","state","classMap","memoizeOne","hex2rgb","lab2rgb","rgb2hex","rgb2lab","labBrighten","labDarken","formatNumber","getEnergyDataCollection","getStatisticLabel","SubscribeMixin","hasConfigChanged","getCommonOptions","HuiEnergyUsageGraphCard","_decorate","_initialize","_SubscribeMixin","_SubscribeMixin2","_inherits","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_assertThisInitialized","_createClass","F","d","kind","decorators","attribute","key","value","datasets","hassSubscribe","_this$_config","_this2","hass","_config","collection_key","subscribe","data","_getStatistics","getCardSize","setConfig","config","shouldUpdate","changedProps","size","has","render","_templateObject","_taggedTemplateLiteral","title","_templateObject2","_chartData","_createOptions","_start","_end","locale","_compareStart","_compareEnd","some","dataset","_templateObject3","localize","_this3","start","end","compareStart","compareEnd","commonOptions","options","Object","assign","plugins","tooltip","itemSort","a","b","_a$raw","_b$raw","_b$raw2","_a$raw2","_a$raw3","raw","y","datasetIndex","callbacks","footer","contexts","totalConsumed","totalReturned","_iterator","_createForOfIteratorHelper","_step","s","n","done","context","dataIndex","Math","abs","err","e","f","num","filter","Boolean","_getStatistics2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","energyData","statIds","_iterator2","_step2","source","_iterator3","_step3","flowFrom","_iterator4","_step4","flowTo","computedStyles","colorPropertyMap","colors","labels","wrap","_callee$","_context","prev","next","prefs","energy_sources","type","solar","push","stat_energy_from","abrupt","to_battery","stat_energy_to","from_battery","flow_from","from_grid","flow_to","to_grid","t0","finish","getComputedStyle","used_grid","used_solar","used_battery","base","getPropertyValue","trim","entries","forEach","_ref","_ref2","_slicedToArray","colorProp","overrides","values","id","idx","override","startCompare","endCompare","apply","_toConsumableArray","_processDataSet","stats","statsMetadata","statsCompare","order","xAxisID","stop","_x","statistics","statisticsMetaData","statIdsByCat","_this4","compare","undefined","combinedData","summedData","pointEndTime","_ref3","_ref4","sum","includes","add","totalStats","sets","set","stat","change","val","grid_to_battery","battery_to_grid","_i","_Object$keys","keys","_summedData$to_grid","_summedData$to_batter","_summedData$from_grid","_summedData$from_grid2","_summedData$from_grid3","min","_i2","_Object$keys2","_loop","_Object$keys3","_i3","noOfSources","_i4","_Object$entries","_Object$entries$_i","total_from_grid","allKeys","sources","uniqueKeys","from","Set","sort","Number","_ref5","_ref6","_ref7","_colors$type$override","_ref8","statId","borderColor","modifiedColor","themes","darkMode","points","_iterator5","_step5","x","label","backgroundColor","stack","static","styles","_templateObject4"],"sources":["/workspaces/frontend/src/panels/lovelace/cards/energy/hui-energy-usage-graph-card.ts"],"sourcesContent":["import {\n  ChartData,\n  ChartDataset,\n  ChartOptions,\n  ScatterDataPoint,\n} from \"chart.js\";\nimport { endOfToday, isToday, startOfToday } from \"date-fns/esm\";\nimport { HassConfig, UnsubscribeFunc } from \"home-assistant-js-websocket\";\nimport {\n  css,\n  CSSResultGroup,\n  html,\n  LitElement,\n  nothing,\n  PropertyValues,\n} from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport memoizeOne from \"memoize-one\";\nimport {\n  hex2rgb,\n  lab2rgb,\n  rgb2hex,\n  rgb2lab,\n} from \"../../../../common/color/convert-color\";\nimport { labBrighten, labDarken } from \"../../../../common/color/lab\";\nimport { formatNumber } from \"../../../../common/number/format_number\";\nimport \"../../../../components/chart/ha-chart-base\";\nimport \"../../../../components/ha-card\";\nimport { EnergyData, getEnergyDataCollection } from \"../../../../data/energy\";\nimport {\n  getStatisticLabel,\n  Statistics,\n  StatisticsMetaData,\n} from \"../../../../data/recorder\";\nimport { FrontendLocaleData } from \"../../../../data/translation\";\nimport { SubscribeMixin } from \"../../../../mixins/subscribe-mixin\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { LovelaceCard } from \"../../types\";\nimport { EnergyUsageGraphCardConfig } from \"../types\";\nimport { hasConfigChanged } from \"../../common/has-changed\";\nimport { getCommonOptions } from \"./common/energy-chart-options\";\n\ninterface ColorSet {\n  base: string;\n  overrides?: Record<string, string>;\n}\n\n@customElement(\"hui-energy-usage-graph-card\")\nexport class HuiEnergyUsageGraphCard\n  extends SubscribeMixin(LitElement)\n  implements LovelaceCard\n{\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @state() private _config?: EnergyUsageGraphCardConfig;\n\n  @state() private _chartData: ChartData = {\n    datasets: [],\n  };\n\n  @state() private _start = startOfToday();\n\n  @state() private _end = endOfToday();\n\n  @state() private _compareStart?: Date;\n\n  @state() private _compareEnd?: Date;\n\n  protected hassSubscribeRequiredHostProps = [\"_config\"];\n\n  public hassSubscribe(): UnsubscribeFunc[] {\n    return [\n      getEnergyDataCollection(this.hass, {\n        key: this._config?.collection_key,\n      }).subscribe((data) => this._getStatistics(data)),\n    ];\n  }\n\n  public getCardSize(): Promise<number> | number {\n    return 3;\n  }\n\n  public setConfig(config: EnergyUsageGraphCardConfig): void {\n    this._config = config;\n  }\n\n  protected shouldUpdate(changedProps: PropertyValues): boolean {\n    return (\n      hasConfigChanged(this, changedProps) ||\n      changedProps.size > 1 ||\n      !changedProps.has(\"hass\")\n    );\n  }\n\n  protected render() {\n    if (!this.hass || !this._config) {\n      return nothing;\n    }\n\n    return html`\n      <ha-card>\n        ${this._config.title\n          ? html`<h1 class=\"card-header\">${this._config.title}</h1>`\n          : \"\"}\n        <div\n          class=\"content ${classMap({\n            \"has-header\": !!this._config.title,\n          })}\"\n        >\n          <ha-chart-base\n            .hass=${this.hass}\n            .data=${this._chartData}\n            .options=${this._createOptions(\n              this._start,\n              this._end,\n              this.hass.locale,\n              this.hass.config,\n              this._compareStart,\n              this._compareEnd\n            )}\n            chart-type=\"bar\"\n          ></ha-chart-base>\n          ${!this._chartData.datasets.some((dataset) => dataset.data.length)\n            ? html`<div class=\"no-data\">\n                ${isToday(this._start)\n                  ? this.hass.localize(\"ui.panel.lovelace.cards.energy.no_data\")\n                  : this.hass.localize(\n                      \"ui.panel.lovelace.cards.energy.no_data_period\"\n                    )}\n              </div>`\n            : \"\"}\n        </div>\n      </ha-card>\n    `;\n  }\n\n  private _createOptions = memoizeOne(\n    (\n      start: Date,\n      end: Date,\n      locale: FrontendLocaleData,\n      config: HassConfig,\n      compareStart?: Date,\n      compareEnd?: Date\n    ): ChartOptions => {\n      const commonOptions = getCommonOptions(\n        start,\n        end,\n        locale,\n        config,\n        \"kWh\",\n        compareStart,\n        compareEnd\n      );\n      const options: ChartOptions = {\n        ...commonOptions,\n        plugins: {\n          ...commonOptions.plugins,\n          tooltip: {\n            ...commonOptions.plugins!.tooltip,\n            itemSort: function (a: any, b: any) {\n              if (a.raw?.y > 0 && b.raw?.y < 0) {\n                return -1;\n              }\n              if (b.raw?.y > 0 && a.raw?.y < 0) {\n                return 1;\n              }\n              if (a.raw?.y > 0) {\n                return b.datasetIndex - a.datasetIndex;\n              }\n              return a.datasetIndex - b.datasetIndex;\n            },\n            callbacks: {\n              ...commonOptions.plugins!.tooltip!.callbacks,\n              footer: (contexts) => {\n                let totalConsumed = 0;\n                let totalReturned = 0;\n                for (const context of contexts) {\n                  const value = (context.dataset.data[context.dataIndex] as any)\n                    .y;\n                  if (value > 0) {\n                    totalConsumed += value;\n                  } else {\n                    totalReturned += Math.abs(value);\n                  }\n                }\n                return [\n                  totalConsumed\n                    ? this.hass.localize(\n                        \"ui.panel.lovelace.cards.energy.energy_usage_graph.total_consumed\",\n                        { num: formatNumber(totalConsumed, locale) }\n                      )\n                    : \"\",\n                  totalReturned\n                    ? this.hass.localize(\n                        \"ui.panel.lovelace.cards.energy.energy_usage_graph.total_returned\",\n                        { num: formatNumber(totalReturned, locale) }\n                      )\n                    : \"\",\n                ].filter(Boolean);\n              },\n            },\n          },\n        },\n      };\n      return options;\n    }\n  );\n\n  private async _getStatistics(energyData: EnergyData): Promise<void> {\n    const datasets: ChartDataset<\"bar\", ScatterDataPoint[]>[] = [];\n\n    const statIds: {\n      to_grid?: string[];\n      from_grid?: string[];\n      solar?: string[];\n      to_battery?: string[];\n      from_battery?: string[];\n    } = {};\n\n    for (const source of energyData.prefs.energy_sources) {\n      if (source.type === \"solar\") {\n        if (statIds.solar) {\n          statIds.solar.push(source.stat_energy_from);\n        } else {\n          statIds.solar = [source.stat_energy_from];\n        }\n        continue;\n      }\n\n      if (source.type === \"battery\") {\n        if (statIds.to_battery) {\n          statIds.to_battery.push(source.stat_energy_to);\n          statIds.from_battery!.push(source.stat_energy_from);\n        } else {\n          statIds.to_battery = [source.stat_energy_to];\n          statIds.from_battery = [source.stat_energy_from];\n        }\n        continue;\n      }\n\n      if (source.type !== \"grid\") {\n        continue;\n      }\n\n      // grid source\n      for (const flowFrom of source.flow_from) {\n        if (statIds.from_grid) {\n          statIds.from_grid.push(flowFrom.stat_energy_from);\n        } else {\n          statIds.from_grid = [flowFrom.stat_energy_from];\n        }\n      }\n      for (const flowTo of source.flow_to) {\n        if (statIds.to_grid) {\n          statIds.to_grid.push(flowTo.stat_energy_to);\n        } else {\n          statIds.to_grid = [flowTo.stat_energy_to];\n        }\n      }\n    }\n\n    const computedStyles = getComputedStyle(this);\n\n    const colorPropertyMap = {\n      to_grid: \"--energy-grid-return-color\",\n      to_battery: \"--energy-battery-in-color\",\n      from_grid: \"--energy-grid-consumption-color\",\n      used_grid: \"--energy-grid-consumption-color\",\n      used_solar: \"--energy-solar-color\",\n      used_battery: \"--energy-battery-out-color\",\n    };\n\n    const colors = {\n      to_grid: {\n        base: computedStyles.getPropertyValue(colorPropertyMap.to_grid).trim(),\n      },\n      to_battery: {\n        base: computedStyles\n          .getPropertyValue(colorPropertyMap.to_battery)\n          .trim(),\n      },\n      from_grid: {\n        base: computedStyles\n          .getPropertyValue(colorPropertyMap.from_grid)\n          .trim(),\n      },\n      used_grid: {\n        base: computedStyles\n          .getPropertyValue(colorPropertyMap.used_grid)\n          .trim(),\n      },\n      used_solar: {\n        base: computedStyles\n          .getPropertyValue(colorPropertyMap.used_solar)\n          .trim(),\n      },\n      used_battery: {\n        base: computedStyles\n          .getPropertyValue(colorPropertyMap.used_battery)\n          .trim(),\n      },\n    };\n\n    Object.entries(colorPropertyMap).forEach(([key, colorProp]) => {\n      if (\n        key === \"used_grid\" ||\n        key === \"used_solar\" ||\n        key === \"used_battery\"\n      ) {\n        return;\n      }\n      colors[key].overrides = [];\n      if (statIds[key]) {\n        Object.values(statIds[key]).forEach((id, idx) => {\n          const override = computedStyles\n            .getPropertyValue(colorProp + \"-\" + idx)\n            .trim();\n          if (override.length > 0) {\n            colors[key].overrides[id] = override;\n          }\n        });\n      }\n    });\n\n    const labels = {\n      used_grid: this.hass.localize(\n        \"ui.panel.lovelace.cards.energy.energy_usage_graph.combined_from_grid\"\n      ),\n      used_solar: this.hass.localize(\n        \"ui.panel.lovelace.cards.energy.energy_usage_graph.consumed_solar\"\n      ),\n      used_battery: this.hass.localize(\n        \"ui.panel.lovelace.cards.energy.energy_usage_graph.consumed_battery\"\n      ),\n    };\n\n    this._start = energyData.start;\n    this._end = energyData.end || endOfToday();\n\n    this._compareStart = energyData.startCompare;\n    this._compareEnd = energyData.endCompare;\n\n    datasets.push(\n      ...this._processDataSet(\n        energyData.stats,\n        energyData.statsMetadata,\n        statIds,\n        colors,\n        labels,\n        false\n      )\n    );\n\n    if (energyData.statsCompare) {\n      // Add empty dataset to align the bars\n      datasets.push({\n        order: 0,\n        data: [],\n      });\n      datasets.push({\n        order: 999,\n        data: [],\n        xAxisID: \"xAxisCompare\",\n      });\n\n      datasets.push(\n        ...this._processDataSet(\n          energyData.statsCompare,\n          energyData.statsMetadata,\n          statIds,\n          colors,\n          labels,\n          true\n        )\n      );\n    }\n\n    this._chartData = {\n      datasets,\n    };\n  }\n\n  private _processDataSet(\n    statistics: Statistics,\n    statisticsMetaData: Record<string, StatisticsMetaData>,\n    statIdsByCat: {\n      to_grid?: string[] | undefined;\n      from_grid?: string[] | undefined;\n      solar?: string[] | undefined;\n      to_battery?: string[] | undefined;\n      from_battery?: string[] | undefined;\n    },\n    colors: {\n      to_grid: ColorSet;\n      to_battery: ColorSet;\n      from_grid: ColorSet;\n      used_grid: ColorSet;\n      used_solar: ColorSet;\n      used_battery: ColorSet;\n    },\n    labels: {\n      used_grid: string;\n      used_solar: string;\n      used_battery: string;\n    },\n    compare = false\n  ) {\n    const data: ChartDataset<\"bar\", ScatterDataPoint[]>[] = [];\n\n    const combinedData: {\n      to_grid?: { [statId: string]: { [start: number]: number } };\n      to_battery?: { [statId: string]: { [start: number]: number } };\n      from_grid?: { [statId: string]: { [start: number]: number } };\n      used_grid?: { [statId: string]: { [start: number]: number } };\n      used_solar?: { [statId: string]: { [start: number]: number } };\n      used_battery?: { [statId: string]: { [start: number]: number } };\n    } = {};\n\n    const summedData: {\n      to_grid?: { [start: number]: number };\n      from_grid?: { [start: number]: number };\n      to_battery?: { [start: number]: number };\n      from_battery?: { [start: number]: number };\n      solar?: { [start: number]: number };\n    } = {};\n\n    let pointEndTime;\n    Object.entries(statIdsByCat).forEach(([key, statIds]) => {\n      const sum = [\n        \"solar\",\n        \"to_grid\",\n        \"from_grid\",\n        \"to_battery\",\n        \"from_battery\",\n      ].includes(key);\n      const add = ![\"solar\", \"from_battery\"].includes(key);\n      const totalStats: { [start: number]: number } = {};\n      const sets: { [statId: string]: { [start: number]: number } } = {};\n      statIds!.forEach((id) => {\n        const stats = statistics[id];\n        if (!stats) {\n          return;\n        }\n\n        const set = {};\n        stats.forEach((stat) => {\n          if (stat.change === null || stat.change === undefined) {\n            return;\n          }\n          const val = stat.change;\n          // Get total of solar and to grid to calculate the solar energy used\n          if (sum) {\n            totalStats[stat.start] =\n              stat.start in totalStats ? totalStats[stat.start] + val : val;\n            pointEndTime = stat.end;\n          }\n          if (add && !(stat.start in set)) {\n            set[stat.start] = val;\n            pointEndTime = stat.end;\n          }\n        });\n        sets[id] = set;\n      });\n      if (sum) {\n        summedData[key] = totalStats;\n      }\n      if (add) {\n        combinedData[key] = sets;\n      }\n    });\n\n    const grid_to_battery = {};\n    const battery_to_grid = {};\n    if ((summedData.to_grid || summedData.to_battery) && summedData.solar) {\n      const used_solar = {};\n      for (const start of Object.keys(summedData.solar)) {\n        used_solar[start] =\n          (summedData.solar[start] || 0) -\n          (summedData.to_grid?.[start] || 0) -\n          (summedData.to_battery?.[start] || 0);\n        if (used_solar[start] < 0) {\n          if (summedData.to_battery) {\n            grid_to_battery[start] = used_solar[start] * -1;\n            if (grid_to_battery[start] > (summedData.from_grid?.[start] || 0)) {\n              battery_to_grid[start] = Math.min(\n                0,\n                grid_to_battery[start] - (summedData.from_grid?.[start] || 0)\n              );\n              grid_to_battery[start] = summedData.from_grid?.[start];\n            }\n          }\n          used_solar[start] = 0;\n        }\n      }\n      combinedData.used_solar = { used_solar };\n    }\n\n    if (summedData.from_battery) {\n      if (summedData.to_grid) {\n        const used_battery = {};\n        for (const start of Object.keys(summedData.from_battery)) {\n          used_battery[start] =\n            (summedData.from_battery![start] || 0) -\n            (battery_to_grid[start] || 0);\n        }\n        combinedData.used_battery = { used_battery };\n      } else {\n        combinedData.used_battery = { used_battery: summedData.from_battery };\n      }\n    }\n\n    if (combinedData.from_grid && summedData.to_battery) {\n      const used_grid = {};\n      for (const start of Object.keys(grid_to_battery)) {\n        let noOfSources = 0;\n        let source: string;\n        for (const [key, stats] of Object.entries(combinedData.from_grid)) {\n          if (stats[start]) {\n            source = key;\n            noOfSources++;\n          }\n          if (noOfSources > 1) {\n            break;\n          }\n        }\n        if (noOfSources === 1) {\n          combinedData.from_grid[source!][start] -= grid_to_battery[start] || 0;\n        } else {\n          let total_from_grid = 0;\n          Object.values(combinedData.from_grid).forEach((stats) => {\n            total_from_grid += stats[start] || 0;\n            delete stats[start];\n          });\n          used_grid[start] = total_from_grid - (grid_to_battery[start] || 0);\n        }\n      }\n      combinedData.used_grid = { used_grid };\n    }\n\n    let allKeys: string[] = [];\n\n    Object.values(combinedData).forEach((sources) => {\n      Object.values(sources).forEach((source) => {\n        allKeys = allKeys.concat(Object.keys(source));\n      });\n    });\n\n    const uniqueKeys = Array.from(new Set(allKeys)).sort(\n      (a, b) => Number(a) - Number(b)\n    );\n\n    Object.entries(combinedData).forEach(([type, sources]) => {\n      Object.entries(sources).forEach(([statId, source], idx) => {\n        let borderColor = colors[type].overrides?.[statId];\n        if (!borderColor) {\n          const modifiedColor =\n            idx > 0\n              ? this.hass.themes.darkMode\n                ? labBrighten(rgb2lab(hex2rgb(colors[type].base)), idx)\n                : labDarken(rgb2lab(hex2rgb(colors[type].base)), idx)\n              : undefined;\n          borderColor = modifiedColor\n            ? rgb2hex(lab2rgb(modifiedColor))\n            : colors[type].base;\n        }\n\n        const points: ScatterDataPoint[] = [];\n        // Process chart data.\n        for (const key of uniqueKeys) {\n          const value = source[key] || 0;\n          points.push({\n            x: Number(key),\n            y:\n              value && [\"to_grid\", \"to_battery\"].includes(type)\n                ? -1 * value\n                : value,\n          });\n        }\n        if (points.length === 1) {\n          points.push({\n            x: pointEndTime,\n            y: 0,\n          });\n        }\n\n        data.push({\n          label:\n            type in labels\n              ? labels[type]\n              : getStatisticLabel(\n                  this.hass,\n                  statId,\n                  statisticsMetaData[statId]\n                ),\n          order:\n            type === \"used_solar\"\n              ? 1\n              : type === \"to_battery\"\n                ? Object.keys(combinedData).length\n                : idx + 2,\n          borderColor: compare ? borderColor + \"7F\" : borderColor,\n          backgroundColor: compare ? borderColor + \"32\" : borderColor + \"7F\",\n          stack: \"stack\",\n          data: points,\n          xAxisID: compare ? \"xAxisCompare\" : undefined,\n        });\n      });\n    });\n    return data;\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      ha-card {\n        height: 100%;\n      }\n      .card-header {\n        padding-bottom: 0;\n      }\n      .content {\n        padding: 16px;\n      }\n      .has-header {\n        padding-top: 0;\n      }\n      .no-data {\n        position: absolute;\n        height: 100%;\n        top: 0;\n        left: 0;\n        right: 0;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        padding: 20%;\n        margin-left: 32px;\n        margin-inline-start: 32px;\n        margin-inline-end: initial;\n        box-sizing: border-box;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-energy-usage-graph-card\": HuiEnergyUsageGraphCard;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}