{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport { html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { array, assert, assign, boolean, number, object, optional, string, union } from \"superstruct\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport \"../../../../components/ha-form/ha-form\";\nimport \"../../components/hui-entity-editor\";\nimport { processEditorEntities } from \"../process-editor-entities\";\nimport { baseLovelaceCardConfig } from \"../structs/base-card-struct\";\nimport { entitiesConfigStruct } from \"../structs/entities-struct\";\nconst cardConfigStruct = assign(baseLovelaceCardConfig, object({\n  title: optional(union([string(), number()])),\n  theme: optional(string()),\n  columns: optional(number()),\n  show_name: optional(boolean()),\n  show_state: optional(boolean()),\n  show_icon: optional(boolean()),\n  state_color: optional(boolean()),\n  entities: array(entitiesConfigStruct)\n}));\nconst SCHEMA = [{\n  name: \"title\",\n  selector: {\n    text: {}\n  }\n}, {\n  name: \"\",\n  type: \"grid\",\n  schema: [{\n    name: \"columns\",\n    selector: {\n      number: {\n        min: 1,\n        mode: \"box\"\n      }\n    }\n  }, {\n    name: \"theme\",\n    selector: {\n      theme: {}\n    }\n  }]\n}, {\n  name: \"\",\n  type: \"grid\",\n  column_min_width: \"100px\",\n  schema: [{\n    name: \"show_name\",\n    selector: {\n      boolean: {}\n    }\n  }, {\n    name: \"show_icon\",\n    selector: {\n      boolean: {}\n    }\n  }, {\n    name: \"show_state\",\n    selector: {\n      boolean: {}\n    }\n  }]\n}, {\n  name: \"state_color\",\n  selector: {\n    boolean: {}\n  }\n}];\nexport let HuiGlanceCardEditor = _decorate([customElement(\"hui-glance-card-editor\")], function (_initialize, _LitElement) {\n  class HuiGlanceCardEditor extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HuiGlanceCardEditor,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_config\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_configEntities\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"setConfig\",\n      value: function setConfig(config) {\n        assert(config, cardConfigStruct);\n        this._config = config;\n        this._configEntities = processEditorEntities(config.entities);\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this.hass || !this._config) {\n          return nothing;\n        }\n        const data = {\n          show_name: true,\n          show_icon: true,\n          show_state: true,\n          ...this._config\n        };\n        return html`\n      <ha-form\n        .hass=${this.hass}\n        .data=${data}\n        .schema=${SCHEMA}\n        .computeLabel=${this._computeLabelCallback}\n        @value-changed=${this._valueChanged}\n      ></ha-form>\n      <hui-entity-editor\n        .hass=${this.hass}\n        .entities=${this._configEntities}\n        @entities-changed=${this._entitiesChanged}\n      ></hui-entity-editor>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_valueChanged\",\n      value: function _valueChanged(ev) {\n        const config = ev.detail.value;\n        fireEvent(this, \"config-changed\", {\n          config\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_entitiesChanged\",\n      value: function _entitiesChanged(ev) {\n        let config = this._config;\n        config = {\n          ...config,\n          entities: ev.detail.entities\n        };\n        this._configEntities = processEditorEntities(this._config.entities);\n        fireEvent(this, \"config-changed\", {\n          config\n        });\n      }\n    }, {\n      kind: \"field\",\n      key: \"_computeLabelCallback\",\n      value() {\n        return schema => {\n          switch (schema.name) {\n            case \"theme\":\n              return `${this.hass.localize(\"ui.panel.lovelace.editor.card.generic.theme\")} (${this.hass.localize(\"ui.panel.lovelace.editor.card.config.optional\")})`;\n            case \"columns\":\n              return this.hass.localize(`ui.panel.lovelace.editor.card.glance.${schema.name}`);\n            default:\n              return this.hass.localize(`ui.panel.lovelace.editor.card.generic.${schema.name}`);\n          }\n        };\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["html","LitElement","nothing","customElement","property","state","array","assert","assign","boolean","number","object","optional","string","union","fireEvent","processEditorEntities","baseLovelaceCardConfig","entitiesConfigStruct","cardConfigStruct","title","theme","columns","show_name","show_state","show_icon","state_color","entities","SCHEMA","name","selector","text","type","schema","min","mode","column_min_width","HuiGlanceCardEditor","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","setConfig","config","_config","_configEntities","render","hass","data","_computeLabelCallback","_valueChanged","_entitiesChanged","ev","detail","localize"],"sources":["/Users/sercanardil/Desktop/frontend/src/panels/lovelace/editor/config-elements/hui-glance-card-editor.ts"],"sourcesContent":["import { html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport {\n  array,\n  assert,\n  assign,\n  boolean,\n  number,\n  object,\n  optional,\n  string,\n  union,\n} from \"superstruct\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport \"../../../../components/ha-form/ha-form\";\nimport type { SchemaUnion } from \"../../../../components/ha-form/types\";\nimport type { HomeAssistant } from \"../../../../types\";\nimport { ConfigEntity, GlanceCardConfig } from \"../../cards/types\";\nimport \"../../components/hui-entity-editor\";\nimport type { LovelaceCardEditor } from \"../../types\";\nimport { processEditorEntities } from \"../process-editor-entities\";\nimport { baseLovelaceCardConfig } from \"../structs/base-card-struct\";\nimport { entitiesConfigStruct } from \"../structs/entities-struct\";\n\nconst cardConfigStruct = assign(\n  baseLovelaceCardConfig,\n  object({\n    title: optional(union([string(), number()])),\n    theme: optional(string()),\n    columns: optional(number()),\n    show_name: optional(boolean()),\n    show_state: optional(boolean()),\n    show_icon: optional(boolean()),\n    state_color: optional(boolean()),\n    entities: array(entitiesConfigStruct),\n  })\n);\n\nconst SCHEMA = [\n  { name: \"title\", selector: { text: {} } },\n  {\n    name: \"\",\n    type: \"grid\",\n    schema: [\n      { name: \"columns\", selector: { number: { min: 1, mode: \"box\" } } },\n      { name: \"theme\", selector: { theme: {} } },\n    ],\n  },\n  {\n    name: \"\",\n    type: \"grid\",\n    column_min_width: \"100px\",\n    schema: [\n      { name: \"show_name\", selector: { boolean: {} } },\n      { name: \"show_icon\", selector: { boolean: {} } },\n      { name: \"show_state\", selector: { boolean: {} } },\n    ],\n  },\n  { name: \"state_color\", selector: { boolean: {} } },\n] as const;\n\n@customElement(\"hui-glance-card-editor\")\nexport class HuiGlanceCardEditor\n  extends LitElement\n  implements LovelaceCardEditor\n{\n  @property({ attribute: false }) public hass?: HomeAssistant;\n\n  @state() private _config?: GlanceCardConfig;\n\n  @state() private _configEntities?: ConfigEntity[];\n\n  public setConfig(config: GlanceCardConfig): void {\n    assert(config, cardConfigStruct);\n    this._config = config;\n    this._configEntities = processEditorEntities(config.entities);\n  }\n\n  protected render() {\n    if (!this.hass || !this._config) {\n      return nothing;\n    }\n\n    const data = {\n      show_name: true,\n      show_icon: true,\n      show_state: true,\n      ...this._config,\n    };\n\n    return html`\n      <ha-form\n        .hass=${this.hass}\n        .data=${data}\n        .schema=${SCHEMA}\n        .computeLabel=${this._computeLabelCallback}\n        @value-changed=${this._valueChanged}\n      ></ha-form>\n      <hui-entity-editor\n        .hass=${this.hass}\n        .entities=${this._configEntities}\n        @entities-changed=${this._entitiesChanged}\n      ></hui-entity-editor>\n    `;\n  }\n\n  private _valueChanged(ev: CustomEvent): void {\n    const config = ev.detail.value;\n    fireEvent(this, \"config-changed\", { config });\n  }\n\n  private _entitiesChanged(ev: CustomEvent): void {\n    let config = this._config!;\n    config = { ...config, entities: ev.detail.entities! };\n\n    this._configEntities = processEditorEntities(this._config!.entities);\n    fireEvent(this, \"config-changed\", { config });\n  }\n\n  private _computeLabelCallback = (schema: SchemaUnion<typeof SCHEMA>) => {\n    switch (schema.name) {\n      case \"theme\":\n        return `${this.hass!.localize(\n          \"ui.panel.lovelace.editor.card.generic.theme\"\n        )} (${this.hass!.localize(\n          \"ui.panel.lovelace.editor.card.config.optional\"\n        )})`;\n      case \"columns\":\n        return this.hass!.localize(\n          `ui.panel.lovelace.editor.card.glance.${schema.name}`\n        );\n      default:\n        return this.hass!.localize(\n          `ui.panel.lovelace.editor.card.generic.${schema.name}`\n        );\n    }\n  };\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-glance-card-editor\": HuiGlanceCardEditor;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}