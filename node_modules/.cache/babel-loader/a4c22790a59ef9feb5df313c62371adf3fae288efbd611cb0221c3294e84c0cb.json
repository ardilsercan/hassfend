{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport \"core-js/modules/es.object.values.js\";\nvar DiscoveryStream = /*#__PURE__*/function () {\n  function DiscoveryStream() {\n    _classCallCheck(this, DiscoveryStream);\n    this.routers = void 0;\n    this.routers = {};\n  }\n  _createClass(DiscoveryStream, [{\n    key: \"processEvent\",\n    value: function processEvent(streamMessage) {\n      if (streamMessage.type === \"router_discovered\") {\n        this.routers[streamMessage.key] = streamMessage.data;\n      } else if (streamMessage.type === \"router_removed\") {\n        delete this.routers[streamMessage.key];\n      }\n      return Object.values(this.routers);\n    }\n  }]);\n  return DiscoveryStream;\n}();\nexport var subscribeDiscoverThreadRouters = function subscribeDiscoverThreadRouters(hass, callbackFunction) {\n  var stream = new DiscoveryStream();\n  return hass.connection.subscribeMessage(function (message) {\n    return callbackFunction(stream.processEvent(message));\n  }, {\n    type: \"thread/discover_routers\"\n  });\n};\nexport var listThreadDataSets = function listThreadDataSets(hass) {\n  return hass.callWS({\n    type: \"thread/list_datasets\"\n  });\n};\nexport var getThreadDataSetTLV = function getThreadDataSetTLV(hass, dataset_id) {\n  return hass.callWS({\n    type: \"thread/get_dataset_tlv\",\n    dataset_id: dataset_id\n  });\n};\nexport var addThreadDataSet = function addThreadDataSet(hass, source, tlv) {\n  return hass.callWS({\n    type: \"thread/add_dataset_tlv\",\n    source: source,\n    tlv: tlv\n  });\n};\nexport var removeThreadDataSet = function removeThreadDataSet(hass, dataset_id) {\n  return hass.callWS({\n    type: \"thread/delete_dataset\",\n    dataset_id: dataset_id\n  });\n};\nexport var setPreferredThreadDataSet = function setPreferredThreadDataSet(hass, dataset_id) {\n  return hass.callWS({\n    type: \"thread/set_preferred_dataset\",\n    dataset_id: dataset_id\n  });\n};\nexport var setPreferredBorderAgent = function setPreferredBorderAgent(hass, dataset_id, border_agent_id, extended_address) {\n  return hass.callWS({\n    type: \"thread/set_preferred_border_agent\",\n    dataset_id: dataset_id,\n    border_agent_id: border_agent_id,\n    extended_address: extended_address\n  });\n};","map":{"version":3,"names":["DiscoveryStream","_classCallCheck","routers","_createClass","key","value","processEvent","streamMessage","type","data","Object","values","subscribeDiscoverThreadRouters","hass","callbackFunction","stream","connection","subscribeMessage","message","listThreadDataSets","callWS","getThreadDataSetTLV","dataset_id","addThreadDataSet","source","tlv","removeThreadDataSet","setPreferredThreadDataSet","setPreferredBorderAgent","border_agent_id","extended_address"],"sources":["/workspaces/frontend/src/data/thread.ts"],"sourcesContent":["import { HomeAssistant } from \"../types\";\n\nexport interface ThreadRouter {\n  addresses: [string];\n  border_agent_id: string | null;\n  brand: \"google\" | \"apple\" | \"homeassistant\";\n  extended_address: string;\n  extended_pan_id: string;\n  model_name: string | null;\n  network_name: string | null;\n  server: string | null;\n  thread_version: string | null;\n  unconfigured: boolean | null;\n  vendor_name: string | null;\n}\n\nexport interface ThreadDataSet {\n  channel: number | null;\n  created: string;\n  dataset_id: string;\n  extended_pan_id: string | null;\n  network_name: string;\n  pan_id: string | null;\n  preferred_border_agent_id: string | null;\n  preferred_extended_address: string | null;\n  preferred: boolean;\n  source: string;\n}\n\nexport interface ThreadRouterDiscoveryEvent {\n  key: string;\n  type: \"router_discovered\" | \"router_removed\";\n  data: ThreadRouter;\n}\n\nclass DiscoveryStream {\n  routers: { [key: string]: ThreadRouter };\n\n  constructor() {\n    this.routers = {};\n  }\n\n  processEvent(streamMessage: ThreadRouterDiscoveryEvent): ThreadRouter[] {\n    if (streamMessage.type === \"router_discovered\") {\n      this.routers[streamMessage.key] = streamMessage.data;\n    } else if (streamMessage.type === \"router_removed\") {\n      delete this.routers[streamMessage.key];\n    }\n    return Object.values(this.routers);\n  }\n}\n\nexport const subscribeDiscoverThreadRouters = (\n  hass: HomeAssistant,\n  callbackFunction: (routers: ThreadRouter[]) => void\n) => {\n  const stream = new DiscoveryStream();\n  return hass.connection.subscribeMessage<ThreadRouterDiscoveryEvent>(\n    (message) => callbackFunction(stream.processEvent(message)),\n    {\n      type: \"thread/discover_routers\",\n    }\n  );\n};\n\nexport const listThreadDataSets = (\n  hass: HomeAssistant\n): Promise<{ datasets: ThreadDataSet[] }> =>\n  hass.callWS({\n    type: \"thread/list_datasets\",\n  });\n\nexport const getThreadDataSetTLV = (\n  hass: HomeAssistant,\n  dataset_id: string\n): Promise<{ tlv: string }> =>\n  hass.callWS({ type: \"thread/get_dataset_tlv\", dataset_id });\n\nexport const addThreadDataSet = (\n  hass: HomeAssistant,\n  source: string,\n  tlv: string\n): Promise<void> =>\n  hass.callWS({\n    type: \"thread/add_dataset_tlv\",\n    source,\n    tlv,\n  });\n\nexport const removeThreadDataSet = (\n  hass: HomeAssistant,\n  dataset_id: string\n): Promise<void> =>\n  hass.callWS({\n    type: \"thread/delete_dataset\",\n    dataset_id,\n  });\n\nexport const setPreferredThreadDataSet = (\n  hass: HomeAssistant,\n  dataset_id: string\n): Promise<void> =>\n  hass.callWS({\n    type: \"thread/set_preferred_dataset\",\n    dataset_id,\n  });\n\nexport const setPreferredBorderAgent = (\n  hass: HomeAssistant,\n  dataset_id: string,\n  border_agent_id: string | null,\n  extended_address: string\n): Promise<void> =>\n  hass.callWS({\n    type: \"thread/set_preferred_border_agent\",\n    dataset_id,\n    border_agent_id,\n    extended_address,\n  });\n"],"mappings":";;;IAmCMA,eAAe;EAGnB,SAAAA,gBAAA,EAAc;IAAAC,eAAA,OAAAD,eAAA;IAAA,KAFdE,OAAO;IAGL,IAAI,CAACA,OAAO,GAAG,CAAC,CAAC;EACnB;EAACC,YAAA,CAAAH,eAAA;IAAAI,GAAA;IAAAC,KAAA,EAED,SAAAC,aAAaC,aAAyC,EAAkB;MACtE,IAAIA,aAAa,CAACC,IAAI,KAAK,mBAAmB,EAAE;QAC9C,IAAI,CAACN,OAAO,CAACK,aAAa,CAACH,GAAG,CAAC,GAAGG,aAAa,CAACE,IAAI;MACtD,CAAC,MAAM,IAAIF,aAAa,CAACC,IAAI,KAAK,gBAAgB,EAAE;QAClD,OAAO,IAAI,CAACN,OAAO,CAACK,aAAa,CAACH,GAAG,CAAC;MACxC;MACA,OAAOM,MAAM,CAACC,MAAM,CAAC,IAAI,CAACT,OAAO,CAAC;IACpC;EAAC;EAAA,OAAAF,eAAA;AAAA;AAGH,OAAO,IAAMY,8BAA8B,GAAG,SAAjCA,8BAA8BA,CACzCC,IAAmB,EACnBC,gBAAmD,EAChD;EACH,IAAMC,MAAM,GAAG,IAAIf,eAAe,CAAC,CAAC;EACpC,OAAOa,IAAI,CAACG,UAAU,CAACC,gBAAgB,CACrC,UAACC,OAAO;IAAA,OAAKJ,gBAAgB,CAACC,MAAM,CAACT,YAAY,CAACY,OAAO,CAAC,CAAC;EAAA,GAC3D;IACEV,IAAI,EAAE;EACR,CACF,CAAC;AACH,CAAC;AAED,OAAO,IAAMW,kBAAkB,GAAG,SAArBA,kBAAkBA,CAC7BN,IAAmB;EAAA,OAEnBA,IAAI,CAACO,MAAM,CAAC;IACVZ,IAAI,EAAE;EACR,CAAC,CAAC;AAAA;AAEJ,OAAO,IAAMa,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAC9BR,IAAmB,EACnBS,UAAkB;EAAA,OAElBT,IAAI,CAACO,MAAM,CAAC;IAAEZ,IAAI,EAAE,wBAAwB;IAAEc,UAAU,EAAVA;EAAW,CAAC,CAAC;AAAA;AAE7D,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAC3BV,IAAmB,EACnBW,MAAc,EACdC,GAAW;EAAA,OAEXZ,IAAI,CAACO,MAAM,CAAC;IACVZ,IAAI,EAAE,wBAAwB;IAC9BgB,MAAM,EAANA,MAAM;IACNC,GAAG,EAAHA;EACF,CAAC,CAAC;AAAA;AAEJ,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAC9Bb,IAAmB,EACnBS,UAAkB;EAAA,OAElBT,IAAI,CAACO,MAAM,CAAC;IACVZ,IAAI,EAAE,uBAAuB;IAC7Bc,UAAU,EAAVA;EACF,CAAC,CAAC;AAAA;AAEJ,OAAO,IAAMK,yBAAyB,GAAG,SAA5BA,yBAAyBA,CACpCd,IAAmB,EACnBS,UAAkB;EAAA,OAElBT,IAAI,CAACO,MAAM,CAAC;IACVZ,IAAI,EAAE,8BAA8B;IACpCc,UAAU,EAAVA;EACF,CAAC,CAAC;AAAA;AAEJ,OAAO,IAAMM,uBAAuB,GAAG,SAA1BA,uBAAuBA,CAClCf,IAAmB,EACnBS,UAAkB,EAClBO,eAA8B,EAC9BC,gBAAwB;EAAA,OAExBjB,IAAI,CAACO,MAAM,CAAC;IACVZ,IAAI,EAAE,mCAAmC;IACzCc,UAAU,EAAVA,UAAU;IACVO,eAAe,EAAfA,eAAe;IACfC,gBAAgB,EAAhBA;EACF,CAAC,CAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}