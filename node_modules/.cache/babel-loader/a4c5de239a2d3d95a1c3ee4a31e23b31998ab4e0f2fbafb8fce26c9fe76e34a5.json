{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _regeneratorRuntime from \"@babel/runtime/helpers/regeneratorRuntime\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _createForOfIteratorHelper from \"@babel/runtime/helpers/createForOfIteratorHelper\";\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8;\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.object.values.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.every.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/esnext.set.difference.v2.js\";\nimport \"core-js/modules/esnext.set.intersection.v2.js\";\nimport \"core-js/modules/esnext.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/esnext.set.is-subset-of.v2.js\";\nimport \"core-js/modules/esnext.set.is-superset-of.v2.js\";\nimport \"core-js/modules/esnext.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/esnext.set.union.v2.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"@lrnwebcomponents/simple-tooltip/simple-tooltip\";\nvar mdiAlertCircle = \"M13,13H11V7H13M13,17H11V15H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z\";\nvar mdiPencilOff = \"M18.66,2C18.4,2 18.16,2.09 17.97,2.28L16.13,4.13L19.88,7.88L21.72,6.03C22.11,5.64 22.11,5 21.72,4.63L19.38,2.28C19.18,2.09 18.91,2 18.66,2M3.28,4L2,5.28L8.5,11.75L4,16.25V20H7.75L12.25,15.5L18.72,22L20,20.72L13.5,14.25L9.75,10.5L3.28,4M15.06,5.19L11.03,9.22L14.78,12.97L18.81,8.94L15.06,5.19Z\";\nvar mdiPlus = \"M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z\";\nimport { LitElement, html } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { computeStateDomain } from \"../../../common/entity/compute_state_domain\";\nimport { navigate } from \"../../../common/navigate\";\nimport { extractSearchParam } from \"../../../common/url/search-params\";\nimport \"../../../components/ha-fab\";\nimport \"../../../components/ha-icon\";\nimport \"../../../components/ha-state-icon\";\nimport \"../../../components/ha-svg-icon\";\nimport { subscribeConfigEntries } from \"../../../data/config_entries\";\nimport { getConfigFlowHandlers } from \"../../../data/config_flow\";\nimport { subscribeEntityRegistry } from \"../../../data/entity_registry\";\nimport { domainToName } from \"../../../data/integration\";\nimport { showConfigFlowDialog } from \"../../../dialogs/config-flow/show-dialog-config-flow\";\nimport { showOptionsFlowDialog } from \"../../../dialogs/config-flow/show-dialog-options-flow\";\nimport { showAlertDialog, showConfirmationDialog } from \"../../../dialogs/generic/show-dialog-box\";\nimport { showMoreInfoDialog } from \"../../../dialogs/more-info/show-ha-more-info-dialog\";\nimport \"../../../layouts/hass-loading-screen\";\nimport \"../../../layouts/hass-tabs-subpage-data-table\";\nimport { SubscribeMixin } from \"../../../mixins/subscribe-mixin\";\nimport { configSections } from \"../ha-panel-config\";\nimport \"../integrations/ha-integration-overflow-menu\";\nimport { isHelperDomain } from \"./const\";\nimport { showHelperDetailDialog } from \"./show-dialog-helper-detail\";\n// This groups items by a key but only returns last entry per key.\nvar groupByOne = function groupByOne(items, keySelector) {\n  var result = {};\n  var _iterator = _createForOfIteratorHelper(items),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var _item = _step.value;\n      result[keySelector(_item)] = _item;\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return result;\n};\nvar getConfigEntry = function getConfigEntry(entityEntries, configEntries, entityId) {\n  var _entityId;\n  var configEntryId = (_entityId = entityEntries[entityId]) === null || _entityId === void 0 ? void 0 : _entityId.config_entry_id;\n  return configEntryId ? configEntries[configEntryId] : undefined;\n};\nexport var HaConfigHelpers = _decorate([customElement(\"ha-config-helpers\")], function (_initialize, _SubscribeMixin) {\n  var HaConfigHelpers = /*#__PURE__*/function (_SubscribeMixin2) {\n    _inherits(HaConfigHelpers, _SubscribeMixin2);\n    function HaConfigHelpers() {\n      var _this;\n      _classCallCheck(this, HaConfigHelpers);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, HaConfigHelpers, [].concat(args));\n      _initialize(_assertThisInitialized(_this));\n      return _this;\n    }\n    return _createClass(HaConfigHelpers);\n  }(_SubscribeMixin);\n  return {\n    F: HaConfigHelpers,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"isWide\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"narrow\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"route\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_stateItems\",\n      value: function value() {\n        return [];\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_entityEntries\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_configEntries\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"hassSubscribe\",\n      value: function hassSubscribe() {\n        var _this2 = this;\n        return [subscribeConfigEntries(this.hass, /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(messages) {\n            var newEntries;\n            return _regeneratorRuntime().wrap(function _callee$(_context) {\n              while (1) switch (_context.prev = _context.next) {\n                case 0:\n                  newEntries = _this2._configEntries ? Object.assign({}, _this2._configEntries) : {};\n                  messages.forEach(function (message) {\n                    if (message.type === null || message.type === \"added\") {\n                      newEntries[message.entry.entry_id] = message.entry;\n                    } else if (message.type === \"removed\") {\n                      delete newEntries[message.entry.entry_id];\n                    } else if (message.type === \"updated\") {\n                      newEntries[message.entry.entry_id] = message.entry;\n                    }\n                  });\n                  _this2._configEntries = newEntries;\n                case 3:\n                case \"end\":\n                  return _context.stop();\n              }\n            }, _callee);\n          }));\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }(), {\n          type: [\"helper\"]\n        }), subscribeEntityRegistry(this.hass.connection, function (entries) {\n          _this2._entityEntries = groupByOne(entries, function (entry) {\n            return entry.entity_id;\n          });\n        })];\n      }\n    }, {\n      kind: \"field\",\n      key: \"_columns\",\n      value: function value() {\n        var _this3 = this;\n        return memoizeOne(function (narrow, localize) {\n          var columns = {\n            icon: {\n              title: \"\",\n              label: localize(\"ui.panel.config.helpers.picker.headers.icon\"),\n              type: \"icon\",\n              template: function template(helper) {\n                return helper.entity ? html(_templateObject || (_templateObject = _taggedTemplateLiteral([\"<ha-state-icon\\n                  .hass=\", \"\\n                  .stateObj=\", \"\\n                ></ha-state-icon>\"])), _this3.hass, helper.entity) : html(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"<ha-svg-icon\\n                  .path=\", \"\\n                  style=\\\"color: var(--error-color)\\\"\\n                ></ha-svg-icon>\"])), helper.icon);\n              }\n            },\n            name: {\n              title: localize(\"ui.panel.config.helpers.picker.headers.name\"),\n              main: true,\n              sortable: true,\n              filterable: true,\n              grows: true,\n              direction: \"asc\",\n              template: function template(helper) {\n                return html(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n            \", \"\\n            \", \"\\n          \"])), helper.name, narrow ? html(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"<div class=\\\"secondary\\\">\", \"</div> \"])), helper.entity_id) : \"\");\n              }\n            }\n          };\n          if (!narrow) {\n            columns.entity_id = {\n              title: localize(\"ui.panel.config.helpers.picker.headers.entity_id\"),\n              sortable: true,\n              filterable: true,\n              width: \"25%\"\n            };\n          }\n          columns.localized_type = {\n            title: localize(\"ui.panel.config.helpers.picker.headers.type\"),\n            sortable: true,\n            width: \"25%\",\n            filterable: true\n          };\n          columns.editable = {\n            title: \"\",\n            label: _this3.hass.localize(\"ui.panel.config.helpers.picker.headers.editable\"),\n            type: \"icon\",\n            template: function template(helper) {\n              return html(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"\\n          \", \"\\n        \"])), !helper.editable ? html(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"\\n                <div\\n                  tabindex=\\\"0\\\"\\n                  style=\\\"display:inline-block; position: relative;\\\"\\n                >\\n                  <ha-svg-icon .path=\", \"></ha-svg-icon>\\n                  <simple-tooltip animation-delay=\\\"0\\\" position=\\\"left\\\">\\n                    \", \"\\n                  </simple-tooltip>\\n                </div>\\n              \"])), mdiPencilOff, _this3.hass.localize(\"ui.panel.config.entities.picker.status.readonly\")) : \"\");\n            }\n          };\n          return columns;\n        });\n      }\n    }, {\n      kind: \"field\",\n      key: \"_getItems\",\n      value: function value() {\n        return memoizeOne(function (localize, stateItems, entityEntries, configEntries) {\n          var configEntriesCopy = Object.assign({}, configEntries);\n          var states = stateItems.map(function (entityState) {\n            var configEntry = getConfigEntry(entityEntries, configEntries, entityState.entity_id);\n            if (configEntry) {\n              delete configEntriesCopy[configEntry.entry_id];\n            }\n            return {\n              id: entityState.entity_id,\n              name: entityState.attributes.friendly_name || \"\",\n              entity_id: entityState.entity_id,\n              editable: configEntry !== undefined || entityState.attributes.editable,\n              type: configEntry ? configEntry.domain : computeStateDomain(entityState),\n              configEntry: configEntry,\n              entity: entityState\n            };\n          });\n          var entries = Object.values(configEntriesCopy).map(function (configEntry) {\n            return {\n              id: configEntry.entry_id,\n              entity_id: \"\",\n              icon: mdiAlertCircle,\n              name: configEntry.title || \"\",\n              editable: true,\n              type: configEntry.domain,\n              configEntry: configEntry,\n              entity: undefined\n            };\n          });\n          return [].concat(_toConsumableArray(states), _toConsumableArray(entries)).map(function (item) {\n            return Object.assign(Object.assign({}, item), {}, {\n              localized_type: item.configEntry ? domainToName(localize, item.type) : localize(\"ui.panel.config.helpers.types.\".concat(item.type)) || item.type\n            });\n          });\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this.hass || this._stateItems === undefined || this._entityEntries === undefined || this._configEntries === undefined) {\n          return html(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral([\" <hass-loading-screen></hass-loading-screen> \"])));\n        }\n        return html(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral([\"\\n      <hass-tabs-subpage-data-table\\n        .hass=\", \"\\n        .narrow=\", \"\\n        back-path=\\\"/config\\\"\\n        .route=\", \"\\n        .tabs=\", \"\\n        .columns=\", \"\\n        .data=\", \"\\n        @row-click=\", \"\\n        hasFab\\n        clickable\\n        .noDataText=\", \"\\n      >\\n        <ha-integration-overflow-menu\\n          .hass=\", \"\\n          slot=\\\"toolbar-icon\\\"\\n        ></ha-integration-overflow-menu>\\n        <ha-fab\\n          slot=\\\"fab\\\"\\n          .label=\", \"\\n          extended\\n          @click=\", \"\\n        >\\n          <ha-svg-icon slot=\\\"icon\\\" .path=\", \"></ha-svg-icon>\\n        </ha-fab>\\n      </hass-tabs-subpage-data-table>\\n    \"])), this.hass, this.narrow, this.route, configSections.devices, this._columns(this.narrow, this.hass.localize), this._getItems(this.hass.localize, this._stateItems, this._entityEntries, this._configEntries), this._openEditDialog, this.hass.localize(\"ui.panel.config.helpers.picker.no_helpers\"), this.hass, this.hass.localize(\"ui.panel.config.helpers.picker.create_helper\"), this._createHelpler, mdiPlus);\n      }\n    }, {\n      kind: \"method\",\n      key: \"firstUpdated\",\n      value: function firstUpdated(changedProps) {\n        _get(_getPrototypeOf(HaConfigHelpers.prototype), \"firstUpdated\", this).call(this, changedProps);\n        if (this.route.path === \"/add\") {\n          this._handleAdd();\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleAdd\",\n      value: function () {\n        var _handleAdd2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n          var _this$hass$userData;\n          var domain, handlers, integrations, localize;\n          return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n            while (1) switch (_context2.prev = _context2.next) {\n              case 0:\n                domain = extractSearchParam(\"domain\");\n                navigate(\"/config/helpers\", {\n                  replace: true\n                });\n                if (domain) {\n                  _context2.next = 4;\n                  break;\n                }\n                return _context2.abrupt(\"return\");\n              case 4:\n                if (!isHelperDomain(domain)) {\n                  _context2.next = 7;\n                  break;\n                }\n                showHelperDetailDialog(this, {\n                  domain: domain\n                });\n                return _context2.abrupt(\"return\");\n              case 7:\n                _context2.next = 9;\n                return getConfigFlowHandlers(this.hass, [\"helper\"]);\n              case 9:\n                handlers = _context2.sent;\n                if (handlers.includes(domain)) {\n                  _context2.next = 19;\n                  break;\n                }\n                _context2.next = 13;\n                return getConfigFlowHandlers(this.hass, [\"device\", \"hub\", \"service\"]);\n              case 13:\n                integrations = _context2.sent;\n                if (!integrations.includes(domain)) {\n                  _context2.next = 17;\n                  break;\n                }\n                navigate(\"/config/integrations/add?domain=\".concat(domain), {\n                  replace: true\n                });\n                return _context2.abrupt(\"return\");\n              case 17:\n                showAlertDialog(this, {\n                  title: this.hass.localize(\"ui.panel.config.integrations.config_flow.error\"),\n                  text: this.hass.localize(\"ui.panel.config.integrations.config_flow.no_config_flow\")\n                });\n                return _context2.abrupt(\"return\");\n              case 19:\n                _context2.next = 21;\n                return this.hass.loadBackendTranslation(\"title\", domain, true);\n              case 21:\n                localize = _context2.sent;\n                _context2.next = 24;\n                return showConfirmationDialog(this, {\n                  title: this.hass.localize(\"ui.panel.config.integrations.confirm_new\", {\n                    integration: domainToName(localize, domain)\n                  })\n                });\n              case 24:\n                if (_context2.sent) {\n                  _context2.next = 26;\n                  break;\n                }\n                return _context2.abrupt(\"return\");\n              case 26:\n                showConfigFlowDialog(this, {\n                  startFlowHandler: domain,\n                  showAdvanced: (_this$hass$userData = this.hass.userData) === null || _this$hass$userData === void 0 ? void 0 : _this$hass$userData.showAdvanced\n                });\n              case 27:\n              case \"end\":\n                return _context2.stop();\n            }\n          }, _callee2, this);\n        }));\n        function _handleAdd() {\n          return _handleAdd2.apply(this, arguments);\n        }\n        return _handleAdd;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"willUpdate\",\n      value: function willUpdate(changedProps) {\n        _get(_getPrototypeOf(HaConfigHelpers.prototype), \"willUpdate\", this).call(this, changedProps);\n        if (!this._entityEntries || !this._configEntries) {\n          return;\n        }\n        var changed = !this._stateItems || changedProps.has(\"_entityEntries\") || changedProps.has(\"_configEntries\");\n        if (!changed && changedProps.has(\"hass\")) {\n          var oldHass = changedProps.get(\"hass\");\n          changed = !oldHass || oldHass.states !== this.hass.states;\n        }\n        if (!changed) {\n          return;\n        }\n        var extraEntities = new Set();\n        for (var _i = 0, _Object$values = Object.values(this._entityEntries); _i < _Object$values.length; _i++) {\n          var entityEntry = _Object$values[_i];\n          if (entityEntry.config_entry_id && entityEntry.config_entry_id in this._configEntries) {\n            extraEntities.add(entityEntry.entity_id);\n          }\n        }\n        var newStates = Object.values(this.hass.states).filter(function (entity) {\n          return extraEntities.has(entity.entity_id) || isHelperDomain(computeStateDomain(entity));\n        });\n        if (this._stateItems.length !== newStates.length || !this._stateItems.every(function (val, idx) {\n          return newStates[idx] === val;\n        })) {\n          this._stateItems = newStates;\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_openEditDialog\",\n      value: function () {\n        var _openEditDialog2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(ev) {\n          var id;\n          return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n            while (1) switch (_context3.prev = _context3.next) {\n              case 0:\n                id = ev.detail.id;\n                if (id.includes(\".\")) {\n                  showMoreInfoDialog(this, {\n                    entityId: id\n                  });\n                } else {\n                  showOptionsFlowDialog(this, this._configEntries[id]);\n                }\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }, _callee3, this);\n        }));\n        function _openEditDialog(_x2) {\n          return _openEditDialog2.apply(this, arguments);\n        }\n        return _openEditDialog;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"_createHelpler\",\n      value: function _createHelpler() {\n        showHelperDetailDialog(this, {});\n      }\n    }]\n  };\n}, SubscribeMixin(LitElement));","map":{"version":3,"names":["mdiAlertCircle","mdiPencilOff","mdiPlus","LitElement","html","customElement","property","state","memoizeOne","computeStateDomain","navigate","extractSearchParam","subscribeConfigEntries","getConfigFlowHandlers","subscribeEntityRegistry","domainToName","showConfigFlowDialog","showOptionsFlowDialog","showAlertDialog","showConfirmationDialog","showMoreInfoDialog","SubscribeMixin","configSections","isHelperDomain","showHelperDetailDialog","groupByOne","items","keySelector","result","_iterator","_createForOfIteratorHelper","_step","s","n","done","item","value","err","e","f","getConfigEntry","entityEntries","configEntries","entityId","_entityId","configEntryId","config_entry_id","undefined","HaConfigHelpers","_decorate","_initialize","_SubscribeMixin","_SubscribeMixin2","_inherits","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_assertThisInitialized","_createClass","F","d","kind","decorators","attribute","key","type","Boolean","hassSubscribe","_this2","hass","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","messages","newEntries","wrap","_callee$","_context","prev","next","_configEntries","Object","assign","forEach","message","entry","entry_id","stop","_x","apply","connection","entries","_entityEntries","entity_id","_this3","narrow","localize","columns","icon","title","label","template","helper","entity","_templateObject","_taggedTemplateLiteral","_templateObject2","name","main","sortable","filterable","grows","direction","_templateObject3","_templateObject4","width","localized_type","editable","_templateObject5","_templateObject6","stateItems","configEntriesCopy","states","map","entityState","configEntry","id","attributes","friendly_name","domain","values","_toConsumableArray","render","_stateItems","_templateObject7","_templateObject8","route","devices","_columns","_getItems","_openEditDialog","_createHelpler","firstUpdated","changedProps","_get","_getPrototypeOf","prototype","call","path","_handleAdd","_handleAdd2","_callee2","_this$hass$userData","handlers","integrations","_callee2$","_context2","replace","abrupt","sent","includes","text","loadBackendTranslation","integration","startFlowHandler","showAdvanced","userData","willUpdate","changed","has","oldHass","get","extraEntities","Set","_i","_Object$values","entityEntry","add","newStates","filter","every","val","idx","_openEditDialog2","_callee3","ev","_callee3$","_context3","detail","_x2"],"sources":["/Users/sercanardil/Desktop/frontend/src/panels/config/helpers/ha-config-helpers.ts"],"sourcesContent":["import \"@lrnwebcomponents/simple-tooltip/simple-tooltip\";\nimport { mdiAlertCircle, mdiPencilOff, mdiPlus } from \"@mdi/js\";\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport { LitElement, PropertyValues, TemplateResult, html } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { computeStateDomain } from \"../../../common/entity/compute_state_domain\";\nimport { navigate } from \"../../../common/navigate\";\nimport {\n  LocalizeFunc,\n  LocalizeKeys,\n} from \"../../../common/translations/localize\";\nimport { extractSearchParam } from \"../../../common/url/search-params\";\nimport {\n  DataTableColumnContainer,\n  RowClickedEvent,\n} from \"../../../components/data-table/ha-data-table\";\nimport \"../../../components/ha-fab\";\nimport \"../../../components/ha-icon\";\nimport \"../../../components/ha-state-icon\";\nimport \"../../../components/ha-svg-icon\";\nimport {\n  ConfigEntry,\n  subscribeConfigEntries,\n} from \"../../../data/config_entries\";\nimport { getConfigFlowHandlers } from \"../../../data/config_flow\";\nimport {\n  EntityRegistryEntry,\n  subscribeEntityRegistry,\n} from \"../../../data/entity_registry\";\nimport { domainToName } from \"../../../data/integration\";\nimport { showConfigFlowDialog } from \"../../../dialogs/config-flow/show-dialog-config-flow\";\nimport { showOptionsFlowDialog } from \"../../../dialogs/config-flow/show-dialog-options-flow\";\nimport {\n  showAlertDialog,\n  showConfirmationDialog,\n} from \"../../../dialogs/generic/show-dialog-box\";\nimport { showMoreInfoDialog } from \"../../../dialogs/more-info/show-ha-more-info-dialog\";\nimport \"../../../layouts/hass-loading-screen\";\nimport \"../../../layouts/hass-tabs-subpage-data-table\";\nimport { SubscribeMixin } from \"../../../mixins/subscribe-mixin\";\nimport { HomeAssistant, Route } from \"../../../types\";\nimport { configSections } from \"../ha-panel-config\";\nimport \"../integrations/ha-integration-overflow-menu\";\nimport { isHelperDomain } from \"./const\";\nimport { showHelperDetailDialog } from \"./show-dialog-helper-detail\";\n\ntype HelperItem = {\n  id: string;\n  name: string;\n  icon?: string;\n  entity_id: string;\n  editable?: boolean;\n  type: string;\n  configEntry?: ConfigEntry;\n  entity?: HassEntity;\n};\n\n// This groups items by a key but only returns last entry per key.\nconst groupByOne = <T>(\n  items: T[],\n  keySelector: (item: T) => string\n): Record<string, T> => {\n  const result: Record<string, T> = {};\n  for (const item of items) {\n    result[keySelector(item)] = item;\n  }\n  return result;\n};\n\nconst getConfigEntry = (\n  entityEntries: Record<string, EntityRegistryEntry>,\n  configEntries: Record<string, ConfigEntry>,\n  entityId: string\n) => {\n  const configEntryId = entityEntries![entityId]?.config_entry_id;\n  return configEntryId ? configEntries![configEntryId] : undefined;\n};\n\n@customElement(\"ha-config-helpers\")\nexport class HaConfigHelpers extends SubscribeMixin(LitElement) {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ type: Boolean }) public isWide = false;\n\n  @property({ type: Boolean }) public narrow = false;\n\n  @property({ attribute: false }) public route!: Route;\n\n  @state() private _stateItems: HassEntity[] = [];\n\n  @state() private _entityEntries?: Record<string, EntityRegistryEntry>;\n\n  @state() private _configEntries?: Record<string, ConfigEntry>;\n\n  public hassSubscribe() {\n    return [\n      subscribeConfigEntries(\n        this.hass,\n        async (messages) => {\n          const newEntries = this._configEntries\n            ? { ...this._configEntries }\n            : {};\n          messages.forEach((message) => {\n            if (message.type === null || message.type === \"added\") {\n              newEntries[message.entry.entry_id] = message.entry;\n            } else if (message.type === \"removed\") {\n              delete newEntries[message.entry.entry_id];\n            } else if (message.type === \"updated\") {\n              newEntries[message.entry.entry_id] = message.entry;\n            }\n          });\n          this._configEntries = newEntries;\n        },\n        { type: [\"helper\"] }\n      ),\n      subscribeEntityRegistry(this.hass.connection!, (entries) => {\n        this._entityEntries = groupByOne(entries, (entry) => entry.entity_id);\n      }),\n    ];\n  }\n\n  private _columns = memoizeOne(\n    (narrow: boolean, localize: LocalizeFunc): DataTableColumnContainer => {\n      const columns: DataTableColumnContainer<HelperItem> = {\n        icon: {\n          title: \"\",\n          label: localize(\"ui.panel.config.helpers.picker.headers.icon\"),\n          type: \"icon\",\n          template: (helper) =>\n            helper.entity\n              ? html`<ha-state-icon\n                  .hass=${this.hass}\n                  .stateObj=${helper.entity}\n                ></ha-state-icon>`\n              : html`<ha-svg-icon\n                  .path=${helper.icon}\n                  style=\"color: var(--error-color)\"\n                ></ha-svg-icon>`,\n        },\n        name: {\n          title: localize(\"ui.panel.config.helpers.picker.headers.name\"),\n          main: true,\n          sortable: true,\n          filterable: true,\n          grows: true,\n          direction: \"asc\",\n          template: (helper) => html`\n            ${helper.name}\n            ${narrow\n              ? html`<div class=\"secondary\">${helper.entity_id}</div> `\n              : \"\"}\n          `,\n        },\n      };\n      if (!narrow) {\n        columns.entity_id = {\n          title: localize(\"ui.panel.config.helpers.picker.headers.entity_id\"),\n          sortable: true,\n          filterable: true,\n          width: \"25%\",\n        };\n      }\n      columns.localized_type = {\n        title: localize(\"ui.panel.config.helpers.picker.headers.type\"),\n        sortable: true,\n        width: \"25%\",\n        filterable: true,\n      };\n      columns.editable = {\n        title: \"\",\n        label: this.hass.localize(\n          \"ui.panel.config.helpers.picker.headers.editable\"\n        ),\n        type: \"icon\",\n        template: (helper) => html`\n          ${!helper.editable\n            ? html`\n                <div\n                  tabindex=\"0\"\n                  style=\"display:inline-block; position: relative;\"\n                >\n                  <ha-svg-icon .path=${mdiPencilOff}></ha-svg-icon>\n                  <simple-tooltip animation-delay=\"0\" position=\"left\">\n                    ${this.hass.localize(\n                      \"ui.panel.config.entities.picker.status.readonly\"\n                    )}\n                  </simple-tooltip>\n                </div>\n              `\n            : \"\"}\n        `,\n      };\n      return columns;\n    }\n  );\n\n  private _getItems = memoizeOne(\n    (\n      localize: LocalizeFunc,\n      stateItems: HassEntity[],\n      entityEntries: Record<string, EntityRegistryEntry>,\n      configEntries: Record<string, ConfigEntry>\n    ): HelperItem[] => {\n      const configEntriesCopy = { ...configEntries };\n\n      const states = stateItems.map((entityState) => {\n        const configEntry = getConfigEntry(\n          entityEntries,\n          configEntries,\n          entityState.entity_id\n        );\n\n        if (configEntry) {\n          delete configEntriesCopy[configEntry!.entry_id];\n        }\n\n        return {\n          id: entityState.entity_id,\n          name: entityState.attributes.friendly_name || \"\",\n          entity_id: entityState.entity_id,\n          editable:\n            configEntry !== undefined || entityState.attributes.editable,\n          type: configEntry\n            ? configEntry.domain\n            : computeStateDomain(entityState),\n          configEntry,\n          entity: entityState,\n        };\n      });\n\n      const entries = Object.values(configEntriesCopy).map((configEntry) => ({\n        id: configEntry.entry_id,\n        entity_id: \"\",\n        icon: mdiAlertCircle,\n        name: configEntry.title || \"\",\n        editable: true,\n        type: configEntry.domain,\n        configEntry,\n        entity: undefined,\n      }));\n\n      return [...states, ...entries].map((item) => ({\n        ...item,\n        localized_type: item.configEntry\n          ? domainToName(localize, item.type)\n          : localize(\n              `ui.panel.config.helpers.types.${item.type}` as LocalizeKeys\n            ) || item.type,\n      }));\n    }\n  );\n\n  protected render(): TemplateResult {\n    if (\n      !this.hass ||\n      this._stateItems === undefined ||\n      this._entityEntries === undefined ||\n      this._configEntries === undefined\n    ) {\n      return html` <hass-loading-screen></hass-loading-screen> `;\n    }\n\n    return html`\n      <hass-tabs-subpage-data-table\n        .hass=${this.hass}\n        .narrow=${this.narrow}\n        back-path=\"/config\"\n        .route=${this.route}\n        .tabs=${configSections.devices}\n        .columns=${this._columns(this.narrow, this.hass.localize)}\n        .data=${this._getItems(\n          this.hass.localize,\n          this._stateItems,\n          this._entityEntries,\n          this._configEntries\n        )}\n        @row-click=${this._openEditDialog}\n        hasFab\n        clickable\n        .noDataText=${this.hass.localize(\n          \"ui.panel.config.helpers.picker.no_helpers\"\n        )}\n      >\n        <ha-integration-overflow-menu\n          .hass=${this.hass}\n          slot=\"toolbar-icon\"\n        ></ha-integration-overflow-menu>\n        <ha-fab\n          slot=\"fab\"\n          .label=${this.hass.localize(\n            \"ui.panel.config.helpers.picker.create_helper\"\n          )}\n          extended\n          @click=${this._createHelpler}\n        >\n          <ha-svg-icon slot=\"icon\" .path=${mdiPlus}></ha-svg-icon>\n        </ha-fab>\n      </hass-tabs-subpage-data-table>\n    `;\n  }\n\n  protected firstUpdated(changedProps: PropertyValues) {\n    super.firstUpdated(changedProps);\n    if (this.route.path === \"/add\") {\n      this._handleAdd();\n    }\n  }\n\n  private async _handleAdd() {\n    const domain = extractSearchParam(\"domain\");\n    navigate(\"/config/helpers\", { replace: true });\n    if (!domain) {\n      return;\n    }\n    if (isHelperDomain(domain)) {\n      showHelperDetailDialog(this, {\n        domain,\n      });\n      return;\n    }\n    const handlers = await getConfigFlowHandlers(this.hass, [\"helper\"]);\n\n    if (!handlers.includes(domain)) {\n      const integrations = await getConfigFlowHandlers(this.hass, [\n        \"device\",\n        \"hub\",\n        \"service\",\n      ]);\n      if (integrations.includes(domain)) {\n        navigate(`/config/integrations/add?domain=${domain}`, {\n          replace: true,\n        });\n        return;\n      }\n      showAlertDialog(this, {\n        title: this.hass.localize(\n          \"ui.panel.config.integrations.config_flow.error\"\n        ),\n        text: this.hass.localize(\n          \"ui.panel.config.integrations.config_flow.no_config_flow\"\n        ),\n      });\n      return;\n    }\n    const localize = await this.hass.loadBackendTranslation(\n      \"title\",\n      domain,\n      true\n    );\n    if (\n      !(await showConfirmationDialog(this, {\n        title: this.hass.localize(\"ui.panel.config.integrations.confirm_new\", {\n          integration: domainToName(localize, domain),\n        }),\n      }))\n    ) {\n      return;\n    }\n    showConfigFlowDialog(this, {\n      startFlowHandler: domain,\n      showAdvanced: this.hass.userData?.showAdvanced,\n    });\n  }\n\n  protected willUpdate(changedProps: PropertyValues) {\n    super.willUpdate(changedProps);\n\n    if (!this._entityEntries || !this._configEntries) {\n      return;\n    }\n\n    let changed =\n      !this._stateItems ||\n      changedProps.has(\"_entityEntries\") ||\n      changedProps.has(\"_configEntries\");\n\n    if (!changed && changedProps.has(\"hass\")) {\n      const oldHass = changedProps.get(\"hass\") as HomeAssistant | undefined;\n      changed = !oldHass || oldHass.states !== this.hass.states;\n    }\n    if (!changed) {\n      return;\n    }\n\n    const extraEntities = new Set<string>();\n\n    for (const entityEntry of Object.values(this._entityEntries)) {\n      if (\n        entityEntry.config_entry_id &&\n        entityEntry.config_entry_id in this._configEntries\n      ) {\n        extraEntities.add(entityEntry.entity_id);\n      }\n    }\n\n    const newStates = Object.values(this.hass!.states).filter(\n      (entity) =>\n        extraEntities.has(entity.entity_id) ||\n        isHelperDomain(computeStateDomain(entity))\n    );\n\n    if (\n      this._stateItems.length !== newStates.length ||\n      !this._stateItems.every((val, idx) => newStates[idx] === val)\n    ) {\n      this._stateItems = newStates;\n    }\n  }\n\n  private async _openEditDialog(ev: CustomEvent): Promise<void> {\n    const id = (ev.detail as RowClickedEvent).id;\n    if (id.includes(\".\")) {\n      showMoreInfoDialog(this, { entityId: id });\n    } else {\n      showOptionsFlowDialog(this, this._configEntries![id]);\n    }\n  }\n\n  private _createHelpler() {\n    showHelperDetailDialog(this, {});\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-config-helpers\": HaConfigHelpers;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}