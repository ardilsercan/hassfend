{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nconst mdiBug = \"M14,12H10V10H14M14,16H10V14H14M20,8H17.19C16.74,7.22 16.12,6.55 15.37,6.04L17,4.41L15.59,3L13.42,5.17C12.96,5.06 12.5,5 12,5C11.5,5 11.04,5.06 10.59,5.17L8.41,3L7,4.41L8.62,6.04C7.88,6.55 7.26,7.22 6.81,8H4V10H6.09C6.04,10.33 6,10.66 6,11V12H4V14H6V15C6,15.34 6.04,15.67 6.09,16H4V18H6.81C7.85,19.79 9.78,21 12,21C14.22,21 16.15,19.79 17.19,18H20V16H17.91C17.96,15.67 18,15.34 18,15V14H20V12H18V11C18,10.66 17.96,10.33 17.91,10H20V8Z\";\nconst mdiClose = \"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\";\nconst mdiDotsVertical = \"M12,16A2,2 0 0,1 14,18A2,2 0 0,1 12,20A2,2 0 0,1 10,18A2,2 0 0,1 12,16M12,10A2,2 0 0,1 14,12A2,2 0 0,1 12,14A2,2 0 0,1 10,12A2,2 0 0,1 12,10M12,4A2,2 0 0,1 14,6A2,2 0 0,1 12,8A2,2 0 0,1 10,6A2,2 0 0,1 12,4Z\";\nconst mdiStar = \"M12,17.27L18.18,21L16.54,13.97L22,9.24L14.81,8.62L12,2L9.19,8.62L2,9.24L7.45,13.97L5.82,21L12,17.27Z\";\nconst mdiStarOutline = \"M12,15.39L8.24,17.66L9.23,13.38L5.91,10.5L10.29,10.13L12,6.09L13.71,10.13L18.09,10.5L14.77,13.38L15.76,17.66M22,9.24L14.81,8.63L12,2L9.19,8.63L2,9.24L7.45,13.97L5.82,21L12,17.27L18.18,21L16.54,13.97L22,9.24Z\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport { stopPropagation } from \"../../../common/dom/stop_propagation\";\nimport { shouldHandleRequestSelectedEvent } from \"../../../common/mwc/handle-request-selected-event\";\nimport { navigate } from \"../../../common/navigate\";\nimport \"../../../components/ha-button\";\nimport \"../../../components/ha-dialog-header\";\nimport \"../../../components/ha-form/ha-form\";\nimport { fetchAssistPipelineLanguages } from \"../../../data/assist_pipeline\";\nimport { haStyleDialog } from \"../../../resources/styles\";\nimport \"./assist-pipeline-detail/assist-pipeline-detail-config\";\nimport \"./assist-pipeline-detail/assist-pipeline-detail-conversation\";\nimport \"./assist-pipeline-detail/assist-pipeline-detail-stt\";\nimport \"./assist-pipeline-detail/assist-pipeline-detail-tts\";\nimport \"./assist-pipeline-detail/assist-pipeline-detail-wakeword\";\nimport \"./debug/assist-render-pipeline-events\";\nexport let DialogVoiceAssistantPipelineDetail = _decorate([customElement(\"dialog-voice-assistant-pipeline-detail\")], function (_initialize, _LitElement) {\n  class DialogVoiceAssistantPipelineDetail extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: DialogVoiceAssistantPipelineDetail,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_params\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_data\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_preferred\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_cloudActive\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_error\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_submitting\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_supportedLanguages\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"showDialog\",\n      value: function showDialog(params) {\n        this._params = params;\n        this._error = undefined;\n        this._cloudActive = this._params.cloudActiveSubscription;\n        if (this._params.pipeline) {\n          this._data = this._params.pipeline;\n          this._preferred = this._params.preferred;\n        } else {\n          this._data = {\n            language: (this.hass.config.language || this.hass.locale.language).substring(0, 2),\n            stt_engine: this._cloudActive ? \"cloud\" : undefined,\n            tts_engine: this._cloudActive ? \"cloud\" : undefined\n          };\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"closeDialog\",\n      value: function closeDialog() {\n        this._params = undefined;\n        this._data = undefined;\n        fireEvent(this, \"dialog-closed\", {\n          dialog: this.localName\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"firstUpdated\",\n      value: function firstUpdated() {\n        this._getSupportedLanguages();\n      }\n    }, {\n      kind: \"method\",\n      key: \"_getSupportedLanguages\",\n      value: async function _getSupportedLanguages() {\n        const {\n          languages\n        } = await fetchAssistPipelineLanguages(this.hass);\n        this._supportedLanguages = languages;\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var _this$_params$pipelin, _this$_params$pipelin2, _this$_params$pipelin3, _this$_params$pipelin4;\n        if (!this._params || !this._data) {\n          return nothing;\n        }\n        const title = (_this$_params$pipelin = this._params.pipeline) !== null && _this$_params$pipelin !== void 0 && _this$_params$pipelin.id ? this._params.pipeline.name : this.hass.localize(\"ui.panel.config.voice_assistants.assistants.pipeline.detail.add_assistant_title\");\n        return html`\n      <ha-dialog\n        open\n        @closed=${this.closeDialog}\n        scrimClickAction\n        escapeKeyAction\n        .heading=${title}\n      >\n        <ha-dialog-header slot=\"heading\">\n          <ha-icon-button\n            slot=\"navigationIcon\"\n            dialogAction=\"cancel\"\n            .label=${this.hass.localize(\"ui.common.close\")}\n            .path=${mdiClose}\n          ></ha-icon-button>\n          <span slot=\"title\" .title=${title}>${title}</span>\n          ${(_this$_params$pipelin2 = this._params.pipeline) !== null && _this$_params$pipelin2 !== void 0 && _this$_params$pipelin2.id ? html`\n                <ha-icon-button\n                  slot=\"actionItems\"\n                  .label=${this.hass.localize(\"ui.panel.config.voice_assistants.assistants.pipeline.detail.set_as_preferred\")}\n                  .path=${this._preferred ? mdiStar : mdiStarOutline}\n                  @click=${this._setPreferred}\n                  .disabled=${Boolean(this._preferred)}\n                ></ha-icon-button>\n\n                <ha-button-menu\n                  corner=\"BOTTOM_END\"\n                  menuCorner=\"END\"\n                  slot=\"actionItems\"\n                  @closed=${stopPropagation}\n                  fixed\n                >\n                  <ha-icon-button\n                    slot=\"trigger\"\n                    .label=${this.hass.localize(\"ui.common.menu\")}\n                    .path=${mdiDotsVertical}\n                  ></ha-icon-button>\n                  <ha-list-item graphic=\"icon\" @request-selected=${this._debug}>\n                    ${this.hass.localize(\"ui.panel.config.voice_assistants.assistants.pipeline.detail.debug\")}\n                    <ha-svg-icon slot=\"graphic\" .path=${mdiBug}></ha-svg-icon>\n                  </ha-list-item>\n                </ha-button-menu>\n              ` : nothing}\n        </ha-dialog-header>\n        <div class=\"content\">\n          ${this._error ? html`<ha-alert alert-type=\"error\">${this._error}</ha-alert>` : nothing}\n          <assist-pipeline-detail-config\n            .hass=${this.hass}\n            .data=${this._data}\n            .supportedLanguages=${this._supportedLanguages}\n            keys=\"name,language\"\n            @value-changed=${this._valueChanged}\n            dialogInitialFocus\n          ></assist-pipeline-detail-config>\n          <assist-pipeline-detail-conversation\n            .hass=${this.hass}\n            .data=${this._data}\n            keys=\"conversation_engine,conversation_language\"\n            @value-changed=${this._valueChanged}\n          ></assist-pipeline-detail-conversation>\n          ${!this._cloudActive && (this._data.tts_engine === \"cloud\" || this._data.stt_engine === \"cloud\") ? html`\n                <ha-alert alert-type=\"warning\">\n                  ${this.hass.localize(\"ui.panel.config.voice_assistants.assistants.pipeline.detail.no_cloud_message\")}\n                  <a\n                    href=\"/config/cloud\"\n                    slot=\"action\"\n                    @click=${this.closeDialog}\n                  >\n                    <ha-button>\n                      ${this.hass.localize(\"ui.panel.config.voice_assistants.assistants.pipeline.detail.no_cloud_action\")}\n                    </ha-button>\n                  </a>\n                </ha-alert>\n              ` : nothing}\n          <assist-pipeline-detail-stt\n            .hass=${this.hass}\n            .data=${this._data}\n            keys=\"stt_engine,stt_language\"\n            @value-changed=${this._valueChanged}\n          ></assist-pipeline-detail-stt>\n          <assist-pipeline-detail-tts\n            .hass=${this.hass}\n            .data=${this._data}\n            keys=\"tts_engine,tts_language,tts_voice\"\n            @value-changed=${this._valueChanged}\n          ></assist-pipeline-detail-tts>\n          <assist-pipeline-detail-wakeword\n            .hass=${this.hass}\n            .data=${this._data}\n            keys=\"wake_word_entity,wake_word_id\"\n            @value-changed=${this._valueChanged}\n          ></assist-pipeline-detail-wakeword>\n        </div>\n        ${(_this$_params$pipelin3 = this._params.pipeline) !== null && _this$_params$pipelin3 !== void 0 && _this$_params$pipelin3.id ? html`\n              <ha-button\n                slot=\"secondaryAction\"\n                class=\"warning\"\n                .disabled=${this._preferred || this._submitting}\n                @click=${this._deletePipeline}\n              >\n                ${this.hass.localize(\"ui.common.delete\")}\n              </ha-button>\n            ` : nothing}\n        <ha-button\n          slot=\"primaryAction\"\n          @click=${this._updatePipeline}\n          .disabled=${this._submitting}\n          dialogInitialFocus\n        >\n          ${(_this$_params$pipelin4 = this._params.pipeline) !== null && _this$_params$pipelin4 !== void 0 && _this$_params$pipelin4.id ? this.hass.localize(\"ui.panel.config.voice_assistants.assistants.pipeline.detail.update_assistant_action\") : this.hass.localize(\"ui.panel.config.voice_assistants.assistants.pipeline.detail.add_assistant_action\")}\n        </ha-button>\n      </ha-dialog>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_valueChanged\",\n      value: function _valueChanged(ev) {\n        this._error = undefined;\n        const value = {};\n        ev.currentTarget.getAttribute(\"keys\").split(\",\").forEach(key => {\n          value[key] = ev.detail.value[key];\n        });\n        this._data = {\n          ...this._data,\n          ...value\n        };\n      }\n    }, {\n      kind: \"method\",\n      key: \"_updatePipeline\",\n      value: async function _updatePipeline() {\n        this._submitting = true;\n        try {\n          var _data$conversation_la, _data$stt_engine, _data$stt_language, _data$tts_engine, _data$tts_language, _data$tts_voice, _data$wake_word_entit, _data$wake_word_id, _pipeline;\n          const data = this._data;\n          const values = {\n            name: data.name,\n            language: data.language,\n            conversation_engine: data.conversation_engine,\n            conversation_language: (_data$conversation_la = data.conversation_language) !== null && _data$conversation_la !== void 0 ? _data$conversation_la : null,\n            stt_engine: (_data$stt_engine = data.stt_engine) !== null && _data$stt_engine !== void 0 ? _data$stt_engine : null,\n            stt_language: (_data$stt_language = data.stt_language) !== null && _data$stt_language !== void 0 ? _data$stt_language : null,\n            tts_engine: (_data$tts_engine = data.tts_engine) !== null && _data$tts_engine !== void 0 ? _data$tts_engine : null,\n            tts_language: (_data$tts_language = data.tts_language) !== null && _data$tts_language !== void 0 ? _data$tts_language : null,\n            tts_voice: (_data$tts_voice = data.tts_voice) !== null && _data$tts_voice !== void 0 ? _data$tts_voice : null,\n            wake_word_entity: (_data$wake_word_entit = data.wake_word_entity) !== null && _data$wake_word_entit !== void 0 ? _data$wake_word_entit : null,\n            wake_word_id: (_data$wake_word_id = data.wake_word_id) !== null && _data$wake_word_id !== void 0 ? _data$wake_word_id : null\n          };\n          if ((_pipeline = this._params.pipeline) !== null && _pipeline !== void 0 && _pipeline.id) {\n            await this._params.updatePipeline(values);\n          } else {\n            await this._params.createPipeline(values);\n          }\n          this.closeDialog();\n        } catch (err) {\n          this._error = (err === null || err === void 0 ? void 0 : err.message) || \"Unknown error\";\n        } finally {\n          this._submitting = false;\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_setPreferred\",\n      value: async function _setPreferred() {\n        this._submitting = true;\n        try {\n          await this._params.setPipelinePreferred();\n          this._preferred = true;\n        } catch (err) {\n          this._error = (err === null || err === void 0 ? void 0 : err.message) || \"Unknown error\";\n        } finally {\n          this._submitting = false;\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_debug\",\n      value: function _debug(ev) {\n        if (!shouldHandleRequestSelectedEvent(ev)) return;\n        navigate(`/config/voice-assistants/debug/${this._params.pipeline.id}`);\n        this.closeDialog();\n      }\n    }, {\n      kind: \"method\",\n      key: \"_deletePipeline\",\n      value: async function _deletePipeline() {\n        this._submitting = true;\n        try {\n          if (await this._params.deletePipeline()) {\n            this.closeDialog();\n          }\n        } catch (err) {\n          this._error = (err === null || err === void 0 ? void 0 : err.message) || \"Unknown error\";\n        } finally {\n          this._submitting = false;\n        }\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [haStyleDialog, css`\n        .content > *:not(:last-child) {\n          margin-bottom: 16px;\n          display: block;\n        }\n        ha-alert {\n          margin-bottom: 16px;\n          display: block;\n        }\n        a {\n          text-decoration: none;\n        }\n      `];\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","nothing","customElement","property","state","fireEvent","stopPropagation","shouldHandleRequestSelectedEvent","navigate","fetchAssistPipelineLanguages","haStyleDialog","DialogVoiceAssistantPipelineDetail","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","showDialog","params","_params","_error","undefined","_cloudActive","cloudActiveSubscription","pipeline","_data","_preferred","preferred","language","hass","config","locale","substring","stt_engine","tts_engine","closeDialog","dialog","localName","firstUpdated","_getSupportedLanguages","languages","_supportedLanguages","render","_this$_params$pipelin","_this$_params$pipelin2","_this$_params$pipelin3","_this$_params$pipelin4","title","id","name","localize","mdiClose","mdiStar","mdiStarOutline","_setPreferred","Boolean","mdiDotsVertical","_debug","mdiBug","_valueChanged","_submitting","_deletePipeline","_updatePipeline","ev","currentTarget","getAttribute","split","forEach","detail","_data$conversation_la","_data$stt_engine","_data$stt_language","_data$tts_engine","_data$tts_language","_data$tts_voice","_data$wake_word_entit","_data$wake_word_id","_pipeline","data","values","conversation_engine","conversation_language","stt_language","tts_language","tts_voice","wake_word_entity","wake_word_id","updatePipeline","createPipeline","err","message","setPipelinePreferred","deletePipeline","static","styles"],"sources":["/Users/sercanardil/Desktop/frontend/src/panels/config/voice-assistants/dialog-voice-assistant-pipeline-detail.ts"],"sourcesContent":["import {\n  mdiBug,\n  mdiClose,\n  mdiDotsVertical,\n  mdiStar,\n  mdiStarOutline,\n} from \"@mdi/js\";\nimport { css, CSSResultGroup, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport { stopPropagation } from \"../../../common/dom/stop_propagation\";\nimport { shouldHandleRequestSelectedEvent } from \"../../../common/mwc/handle-request-selected-event\";\nimport { navigate } from \"../../../common/navigate\";\nimport \"../../../components/ha-button\";\nimport \"../../../components/ha-dialog-header\";\nimport \"../../../components/ha-form/ha-form\";\nimport {\n  AssistPipeline,\n  AssistPipelineMutableParams,\n  fetchAssistPipelineLanguages,\n} from \"../../../data/assist_pipeline\";\nimport { haStyleDialog } from \"../../../resources/styles\";\nimport { HomeAssistant } from \"../../../types\";\nimport \"./assist-pipeline-detail/assist-pipeline-detail-config\";\nimport \"./assist-pipeline-detail/assist-pipeline-detail-conversation\";\nimport \"./assist-pipeline-detail/assist-pipeline-detail-stt\";\nimport \"./assist-pipeline-detail/assist-pipeline-detail-tts\";\nimport \"./assist-pipeline-detail/assist-pipeline-detail-wakeword\";\nimport \"./debug/assist-render-pipeline-events\";\nimport { VoiceAssistantPipelineDetailsDialogParams } from \"./show-dialog-voice-assistant-pipeline-detail\";\n\n@customElement(\"dialog-voice-assistant-pipeline-detail\")\nexport class DialogVoiceAssistantPipelineDetail extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @state() private _params?: VoiceAssistantPipelineDetailsDialogParams;\n\n  @state() private _data?: Partial<AssistPipeline>;\n\n  @state() private _preferred?: boolean;\n\n  @state() private _cloudActive?: boolean;\n\n  @state() private _error?: Record<string, string>;\n\n  @state() private _submitting = false;\n\n  @state() private _supportedLanguages?: string[];\n\n  public showDialog(params: VoiceAssistantPipelineDetailsDialogParams): void {\n    this._params = params;\n    this._error = undefined;\n    this._cloudActive = this._params.cloudActiveSubscription;\n    if (this._params.pipeline) {\n      this._data = this._params.pipeline;\n      this._preferred = this._params.preferred;\n    } else {\n      this._data = {\n        language: (\n          this.hass.config.language || this.hass.locale.language\n        ).substring(0, 2),\n        stt_engine: this._cloudActive ? \"cloud\" : undefined,\n        tts_engine: this._cloudActive ? \"cloud\" : undefined,\n      };\n    }\n  }\n\n  public closeDialog(): void {\n    this._params = undefined;\n    this._data = undefined;\n    fireEvent(this, \"dialog-closed\", { dialog: this.localName });\n  }\n\n  protected firstUpdated() {\n    this._getSupportedLanguages();\n  }\n\n  private async _getSupportedLanguages() {\n    const { languages } = await fetchAssistPipelineLanguages(this.hass);\n    this._supportedLanguages = languages;\n  }\n\n  protected render() {\n    if (!this._params || !this._data) {\n      return nothing;\n    }\n\n    const title = this._params.pipeline?.id\n      ? this._params.pipeline.name\n      : this.hass.localize(\n          \"ui.panel.config.voice_assistants.assistants.pipeline.detail.add_assistant_title\"\n        );\n\n    return html`\n      <ha-dialog\n        open\n        @closed=${this.closeDialog}\n        scrimClickAction\n        escapeKeyAction\n        .heading=${title}\n      >\n        <ha-dialog-header slot=\"heading\">\n          <ha-icon-button\n            slot=\"navigationIcon\"\n            dialogAction=\"cancel\"\n            .label=${this.hass.localize(\"ui.common.close\")}\n            .path=${mdiClose}\n          ></ha-icon-button>\n          <span slot=\"title\" .title=${title}>${title}</span>\n          ${this._params.pipeline?.id\n            ? html`\n                <ha-icon-button\n                  slot=\"actionItems\"\n                  .label=${this.hass.localize(\n                    \"ui.panel.config.voice_assistants.assistants.pipeline.detail.set_as_preferred\"\n                  )}\n                  .path=${this._preferred ? mdiStar : mdiStarOutline}\n                  @click=${this._setPreferred}\n                  .disabled=${Boolean(this._preferred)}\n                ></ha-icon-button>\n\n                <ha-button-menu\n                  corner=\"BOTTOM_END\"\n                  menuCorner=\"END\"\n                  slot=\"actionItems\"\n                  @closed=${stopPropagation}\n                  fixed\n                >\n                  <ha-icon-button\n                    slot=\"trigger\"\n                    .label=${this.hass.localize(\"ui.common.menu\")}\n                    .path=${mdiDotsVertical}\n                  ></ha-icon-button>\n                  <ha-list-item graphic=\"icon\" @request-selected=${this._debug}>\n                    ${this.hass.localize(\n                      \"ui.panel.config.voice_assistants.assistants.pipeline.detail.debug\"\n                    )}\n                    <ha-svg-icon slot=\"graphic\" .path=${mdiBug}></ha-svg-icon>\n                  </ha-list-item>\n                </ha-button-menu>\n              `\n            : nothing}\n        </ha-dialog-header>\n        <div class=\"content\">\n          ${this._error\n            ? html`<ha-alert alert-type=\"error\">${this._error}</ha-alert>`\n            : nothing}\n          <assist-pipeline-detail-config\n            .hass=${this.hass}\n            .data=${this._data}\n            .supportedLanguages=${this._supportedLanguages}\n            keys=\"name,language\"\n            @value-changed=${this._valueChanged}\n            dialogInitialFocus\n          ></assist-pipeline-detail-config>\n          <assist-pipeline-detail-conversation\n            .hass=${this.hass}\n            .data=${this._data}\n            keys=\"conversation_engine,conversation_language\"\n            @value-changed=${this._valueChanged}\n          ></assist-pipeline-detail-conversation>\n          ${!this._cloudActive &&\n          (this._data.tts_engine === \"cloud\" ||\n            this._data.stt_engine === \"cloud\")\n            ? html`\n                <ha-alert alert-type=\"warning\">\n                  ${this.hass.localize(\n                    \"ui.panel.config.voice_assistants.assistants.pipeline.detail.no_cloud_message\"\n                  )}\n                  <a\n                    href=\"/config/cloud\"\n                    slot=\"action\"\n                    @click=${this.closeDialog}\n                  >\n                    <ha-button>\n                      ${this.hass.localize(\n                        \"ui.panel.config.voice_assistants.assistants.pipeline.detail.no_cloud_action\"\n                      )}\n                    </ha-button>\n                  </a>\n                </ha-alert>\n              `\n            : nothing}\n          <assist-pipeline-detail-stt\n            .hass=${this.hass}\n            .data=${this._data}\n            keys=\"stt_engine,stt_language\"\n            @value-changed=${this._valueChanged}\n          ></assist-pipeline-detail-stt>\n          <assist-pipeline-detail-tts\n            .hass=${this.hass}\n            .data=${this._data}\n            keys=\"tts_engine,tts_language,tts_voice\"\n            @value-changed=${this._valueChanged}\n          ></assist-pipeline-detail-tts>\n          <assist-pipeline-detail-wakeword\n            .hass=${this.hass}\n            .data=${this._data}\n            keys=\"wake_word_entity,wake_word_id\"\n            @value-changed=${this._valueChanged}\n          ></assist-pipeline-detail-wakeword>\n        </div>\n        ${this._params.pipeline?.id\n          ? html`\n              <ha-button\n                slot=\"secondaryAction\"\n                class=\"warning\"\n                .disabled=${this._preferred || this._submitting}\n                @click=${this._deletePipeline}\n              >\n                ${this.hass.localize(\"ui.common.delete\")}\n              </ha-button>\n            `\n          : nothing}\n        <ha-button\n          slot=\"primaryAction\"\n          @click=${this._updatePipeline}\n          .disabled=${this._submitting}\n          dialogInitialFocus\n        >\n          ${this._params.pipeline?.id\n            ? this.hass.localize(\n                \"ui.panel.config.voice_assistants.assistants.pipeline.detail.update_assistant_action\"\n              )\n            : this.hass.localize(\n                \"ui.panel.config.voice_assistants.assistants.pipeline.detail.add_assistant_action\"\n              )}\n        </ha-button>\n      </ha-dialog>\n    `;\n  }\n\n  private _valueChanged(ev: CustomEvent) {\n    this._error = undefined;\n    const value = {};\n    (ev.currentTarget as any)\n      .getAttribute(\"keys\")\n      .split(\",\")\n      .forEach((key) => {\n        value[key] = ev.detail.value[key];\n      });\n    this._data = { ...this._data, ...value };\n  }\n\n  private async _updatePipeline() {\n    this._submitting = true;\n    try {\n      const data = this._data!;\n      const values: AssistPipelineMutableParams = {\n        name: data.name!,\n        language: data.language!,\n        conversation_engine: data.conversation_engine!,\n        conversation_language: data.conversation_language ?? null,\n        stt_engine: data.stt_engine ?? null,\n        stt_language: data.stt_language ?? null,\n        tts_engine: data.tts_engine ?? null,\n        tts_language: data.tts_language ?? null,\n        tts_voice: data.tts_voice ?? null,\n        wake_word_entity: data.wake_word_entity ?? null,\n        wake_word_id: data.wake_word_id ?? null,\n      };\n      if (this._params!.pipeline?.id) {\n        await this._params!.updatePipeline(values);\n      } else {\n        await this._params!.createPipeline(values);\n      }\n      this.closeDialog();\n    } catch (err: any) {\n      this._error = err?.message || \"Unknown error\";\n    } finally {\n      this._submitting = false;\n    }\n  }\n\n  private async _setPreferred() {\n    this._submitting = true;\n    try {\n      await this._params!.setPipelinePreferred();\n      this._preferred = true;\n    } catch (err: any) {\n      this._error = err?.message || \"Unknown error\";\n    } finally {\n      this._submitting = false;\n    }\n  }\n\n  private _debug(ev) {\n    if (!shouldHandleRequestSelectedEvent(ev)) return;\n    navigate(`/config/voice-assistants/debug/${this._params!.pipeline!.id}`);\n    this.closeDialog();\n  }\n\n  private async _deletePipeline() {\n    this._submitting = true;\n    try {\n      if (await this._params!.deletePipeline()) {\n        this.closeDialog();\n      }\n    } catch (err: any) {\n      this._error = err?.message || \"Unknown error\";\n    } finally {\n      this._submitting = false;\n    }\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyleDialog,\n      css`\n        .content > *:not(:last-child) {\n          margin-bottom: 16px;\n          display: block;\n        }\n        ha-alert {\n          margin-bottom: 16px;\n          display: block;\n        }\n        a {\n          text-decoration: none;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"dialog-voice-assistant-pipeline-detail\": DialogVoiceAssistantPipelineDetail;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}