{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport { css, html, LitElement } from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport \"../../../../components/buttons/ha-progress-button\";\nimport \"../../../../components/ha-alert\";\nimport \"../../../../components/ha-card\";\nimport \"../../../../components/ha-textfield\";\nimport { cloudForgotPassword } from \"../../../../data/cloud\";\nimport \"../../../../layouts/hass-subpage\";\nimport { haStyle } from \"../../../../resources/styles\";\nexport let CloudForgotPassword = _decorate([customElement(\"cloud-forgot-password\")], function (_initialize, _LitElement) {\n  class CloudForgotPassword extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: CloudForgotPassword,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"narrow\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"email\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_requestInProgress\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_error\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [query(\"#email\", true)],\n      key: \"_emailField\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        return html`\n      <hass-subpage\n        .hass=${this.hass}\n        .narrow=${this.narrow}\n        .header=${this.hass.localize(\"ui.panel.config.cloud.forgot_password.title\")}\n      >\n        <div class=\"content\">\n          <ha-card\n            outlined\n            .header=${this.hass.localize(\"ui.panel.config.cloud.forgot_password.subtitle\")}\n          >\n            <div class=\"card-content\">\n              <p>\n                ${this.hass.localize(\"ui.panel.config.cloud.forgot_password.instructions\")}\n              </p>\n              ${this._error ? html`<ha-alert alert-type=\"error\">${this._error}</ha-alert>` : \"\"}\n              <ha-textfield\n                autofocus\n                id=\"email\"\n                label=${this.hass.localize(\"ui.panel.config.cloud.forgot_password.email\")}\n                .value=${this.email}\n                type=\"email\"\n                required\n                @keydown=${this._keyDown}\n                .validationMessage=${this.hass.localize(\"ui.panel.config.cloud.forgot_password.email_error_msg\")}\n              ></ha-textfield>\n            </div>\n            <div class=\"card-actions\">\n              <ha-progress-button\n                @click=${this._handleEmailPasswordReset}\n                .progress=${this._requestInProgress}\n              >\n                ${this.hass.localize(\"ui.panel.config.cloud.forgot_password.send_reset_email\")}\n              </ha-progress-button>\n            </div>\n          </ha-card>\n        </div>\n      </hass-subpage>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_keyDown\",\n      value: function _keyDown(ev) {\n        if (ev.key === \"Enter\") {\n          this._handleEmailPasswordReset();\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleEmailPasswordReset\",\n      value: async function _handleEmailPasswordReset() {\n        const emailField = this._emailField;\n        const email = emailField.value;\n        if (!emailField.reportValidity()) {\n          emailField.focus();\n          return;\n        }\n        this._requestInProgress = true;\n        try {\n          await cloudForgotPassword(this.hass, email);\n          // @ts-ignore\n          fireEvent(this, \"email-changed\", {\n            value: email\n          });\n          this._requestInProgress = false;\n          // @ts-ignore\n          fireEvent(this, \"cloud-done\", {\n            flashMessage: this.hass.localize(\"ui.panel.config.cloud.forgot_password.check_your_email\")\n          });\n        } catch (err) {\n          this._requestInProgress = false;\n          this._error = err && err.body && err.body.message ? err.body.message : \"Unknown error\";\n        }\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [haStyle, css`\n        .content {\n          padding-bottom: 24px;\n        }\n        ha-card {\n          max-width: 600px;\n          margin: 0 auto;\n          margin-top: 24px;\n        }\n        h1 {\n          margin: 0;\n        }\n        ha-textfield {\n          width: 100%;\n        }\n        .card-actions {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n        }\n        .card-actions a {\n          color: var(--primary-text-color);\n        }\n      `];\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","customElement","property","query","state","fireEvent","cloudForgotPassword","haStyle","CloudForgotPassword","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","type","Boolean","render","hass","narrow","localize","_error","email","_keyDown","_handleEmailPasswordReset","_requestInProgress","ev","emailField","_emailField","reportValidity","focus","flashMessage","err","body","message","static","styles"],"sources":["/Users/sercanardil/Desktop/frontend/src/panels/config/cloud/forgot-password/cloud-forgot-password.ts"],"sourcesContent":["import { css, html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport \"../../../../components/buttons/ha-progress-button\";\nimport \"../../../../components/ha-alert\";\nimport \"../../../../components/ha-card\";\nimport type { HaTextField } from \"../../../../components/ha-textfield\";\nimport \"../../../../components/ha-textfield\";\nimport { cloudForgotPassword } from \"../../../../data/cloud\";\nimport \"../../../../layouts/hass-subpage\";\nimport { haStyle } from \"../../../../resources/styles\";\nimport { HomeAssistant } from \"../../../../types\";\n\n@customElement(\"cloud-forgot-password\")\nexport class CloudForgotPassword extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ type: Boolean }) public narrow = false;\n\n  @property() public email?: string;\n\n  @state() public _requestInProgress = false;\n\n  @state() private _error?: string;\n\n  @query(\"#email\", true) private _emailField!: HaTextField;\n\n  protected render(): TemplateResult {\n    return html`\n      <hass-subpage\n        .hass=${this.hass}\n        .narrow=${this.narrow}\n        .header=${this.hass.localize(\n          \"ui.panel.config.cloud.forgot_password.title\"\n        )}\n      >\n        <div class=\"content\">\n          <ha-card\n            outlined\n            .header=${this.hass.localize(\n              \"ui.panel.config.cloud.forgot_password.subtitle\"\n            )}\n          >\n            <div class=\"card-content\">\n              <p>\n                ${this.hass.localize(\n                  \"ui.panel.config.cloud.forgot_password.instructions\"\n                )}\n              </p>\n              ${this._error\n                ? html`<ha-alert alert-type=\"error\">${this._error}</ha-alert>`\n                : \"\"}\n              <ha-textfield\n                autofocus\n                id=\"email\"\n                label=${this.hass.localize(\n                  \"ui.panel.config.cloud.forgot_password.email\"\n                )}\n                .value=${this.email}\n                type=\"email\"\n                required\n                @keydown=${this._keyDown}\n                .validationMessage=${this.hass.localize(\n                  \"ui.panel.config.cloud.forgot_password.email_error_msg\"\n                )}\n              ></ha-textfield>\n            </div>\n            <div class=\"card-actions\">\n              <ha-progress-button\n                @click=${this._handleEmailPasswordReset}\n                .progress=${this._requestInProgress}\n              >\n                ${this.hass.localize(\n                  \"ui.panel.config.cloud.forgot_password.send_reset_email\"\n                )}\n              </ha-progress-button>\n            </div>\n          </ha-card>\n        </div>\n      </hass-subpage>\n    `;\n  }\n\n  private _keyDown(ev: KeyboardEvent) {\n    if (ev.key === \"Enter\") {\n      this._handleEmailPasswordReset();\n    }\n  }\n\n  private async _handleEmailPasswordReset() {\n    const emailField = this._emailField;\n\n    const email = emailField.value;\n\n    if (!emailField.reportValidity()) {\n      emailField.focus();\n      return;\n    }\n\n    this._requestInProgress = true;\n\n    try {\n      await cloudForgotPassword(this.hass, email);\n      // @ts-ignore\n      fireEvent(this, \"email-changed\", { value: email });\n      this._requestInProgress = false;\n      // @ts-ignore\n      fireEvent(this, \"cloud-done\", {\n        flashMessage: this.hass.localize(\n          \"ui.panel.config.cloud.forgot_password.check_your_email\"\n        ),\n      });\n    } catch (err: any) {\n      this._requestInProgress = false;\n      this._error =\n        err && err.body && err.body.message\n          ? err.body.message\n          : \"Unknown error\";\n    }\n  }\n\n  static get styles() {\n    return [\n      haStyle,\n      css`\n        .content {\n          padding-bottom: 24px;\n        }\n        ha-card {\n          max-width: 600px;\n          margin: 0 auto;\n          margin-top: 24px;\n        }\n        h1 {\n          margin: 0;\n        }\n        ha-textfield {\n          width: 100%;\n        }\n        .card-actions {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n        }\n        .card-actions a {\n          color: var(--primary-text-color);\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"cloud-forgot-password\": CloudForgotPassword;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}