{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nconst mdiCancel = \"M12 2C17.5 2 22 6.5 22 12S17.5 22 12 22 2 17.5 2 12 6.5 2 12 2M12 4C10.1 4 8.4 4.6 7.1 5.7L18.3 16.9C19.3 15.5 20 13.8 20 12C20 7.6 16.4 4 12 4M16.9 18.3L5.7 7.1C4.6 8.4 4 10.1 4 12C4 16.4 7.6 20 12 20C13.9 20 15.6 19.4 16.9 18.3Z\";\nconst mdiCellphoneArrowDown = \"M17,1H7A2,2 0 0,0 5,3V21A2,2 0 0,0 7,23H17A2,2 0 0,0 19,21V3A2,2 0 0,0 17,1M17,19H7V5H17V19M16,13H13V8H11V13H8L12,17L16,13Z\";\nimport { LitElement, css, html, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { computeDomain } from \"../../../common/entity/compute_domain\";\nimport { stateActive } from \"../../../common/entity/state_active\";\nimport { supportsFeature } from \"../../../common/entity/supports-feature\";\nimport \"../../../components/ha-control-button\";\nimport \"../../../components/ha-control-button-group\";\nimport { UNAVAILABLE } from \"../../../data/entity\";\nimport { UpdateEntityFeature, updateIsInstalling } from \"../../../data/update\";\nimport { showUpdateBackupDialogParams } from \"../../../dialogs/update_backup/show-update-backup-dialog\";\nexport const DEFAULT_UPDATE_BACKUP_OPTION = \"ask\";\nexport const supportsUpdateActionsCardFeature = stateObj => {\n  const domain = computeDomain(stateObj.entity_id);\n  return domain === \"update\" && supportsFeature(stateObj, UpdateEntityFeature.INSTALL);\n};\nlet HuiUpdateActionsCardFeature = _decorate([customElement(\"hui-update-actions-card-feature\")], function (_initialize, _LitElement) {\n  class HuiUpdateActionsCardFeature extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HuiUpdateActionsCardFeature,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"stateObj\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_config\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      static: true,\n      key: \"getConfigElement\",\n      value: async function getConfigElement() {\n        await import(\"../editor/config-elements/hui-update-actions-card-feature-editor\");\n        return document.createElement(\"hui-update-actions-card-feature-editor\");\n      }\n    }, {\n      kind: \"method\",\n      static: true,\n      key: \"getStubConfig\",\n      value: function getStubConfig() {\n        return {\n          type: \"update-actions\",\n          backup: DEFAULT_UPDATE_BACKUP_OPTION\n        };\n      }\n    }, {\n      kind: \"method\",\n      key: \"setConfig\",\n      value: function setConfig(config) {\n        if (!config) {\n          throw new Error(\"Invalid configuration\");\n        }\n        this._config = config;\n      }\n    }, {\n      kind: \"get\",\n      key: \"_installDisabled\",\n      value: function _installDisabled() {\n        const stateObj = this.stateObj;\n        if (stateObj.state === UNAVAILABLE) return true;\n        const skippedVersion = stateObj.attributes.latest_version && stateObj.attributes.skipped_version === stateObj.attributes.latest_version;\n        return !stateActive(stateObj) && !skippedVersion || updateIsInstalling(stateObj);\n      }\n    }, {\n      kind: \"get\",\n      key: \"_skipDisabled\",\n      value: function _skipDisabled() {\n        const stateObj = this.stateObj;\n        if (stateObj.state === UNAVAILABLE) return true;\n        const skippedVersion = stateObj.attributes.latest_version && stateObj.attributes.skipped_version === stateObj.attributes.latest_version;\n        return skippedVersion || !stateActive(stateObj) || updateIsInstalling(stateObj);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_install\",\n      value: async function _install() {\n        var _this$_config, _this$_config2;\n        const supportsBackup = supportsFeature(this.stateObj, UpdateEntityFeature.BACKUP);\n        let backup = supportsBackup && ((_this$_config = this._config) === null || _this$_config === void 0 ? void 0 : _this$_config.backup) === \"yes\";\n        if (supportsBackup && ((_this$_config2 = this._config) === null || _this$_config2 === void 0 ? void 0 : _this$_config2.backup) === \"ask\") {\n          const response = await showUpdateBackupDialogParams(this, {});\n          if (response === null) return;\n          backup = response;\n        }\n        this.hass.callService(\"update\", \"install\", {\n          entity_id: this.stateObj.entity_id,\n          backup: backup\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_skip\",\n      value: async function _skip() {\n        this.hass.callService(\"update\", \"skip\", {\n          entity_id: this.stateObj.entity_id\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this._config || !this.hass || !this.stateObj || !supportsUpdateActionsCardFeature(this.stateObj)) {\n          return nothing;\n        }\n        return html`\n      <ha-control-button-group>\n        <ha-control-button\n          .label=${this.hass.localize(\"ui.dialogs.more_info_control.update.skip\")}\n          @click=${this._skip}\n          .disabled=${this._skipDisabled}\n        >\n          <ha-svg-icon .path=${mdiCancel}></ha-svg-icon>\n        </ha-control-button>\n        <ha-control-button\n          .label=${this.hass.localize(\"ui.dialogs.more_info_control.update.install\")}\n          @click=${this._install}\n          .disabled=${this._installDisabled}\n        >\n          <ha-svg-icon .path=${mdiCellphoneArrowDown}></ha-svg-icon>\n        </ha-control-button>\n      </ha-control-button-group>\n    `;\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css`\n      ha-control-button-group {\n        margin: 0 12px 12px 12px;\n        --control-button-group-spacing: 12px;\n      }\n    `;\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["LitElement","css","html","nothing","customElement","property","state","computeDomain","stateActive","supportsFeature","UNAVAILABLE","UpdateEntityFeature","updateIsInstalling","showUpdateBackupDialogParams","DEFAULT_UPDATE_BACKUP_OPTION","supportsUpdateActionsCardFeature","stateObj","domain","entity_id","INSTALL","HuiUpdateActionsCardFeature","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","static","getConfigElement","document","createElement","getStubConfig","type","backup","setConfig","config","Error","_config","_installDisabled","skippedVersion","attributes","latest_version","skipped_version","_skipDisabled","_install","_this$_config","_this$_config2","supportsBackup","BACKUP","response","hass","callService","_skip","render","localize","mdiCancel","mdiCellphoneArrowDown","styles"],"sources":["/workspaces/frontend/src/panels/lovelace/card-features/hui-update-actions-card-feature.ts"],"sourcesContent":["import { mdiCancel, mdiCellphoneArrowDown } from \"@mdi/js\";\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport { LitElement, css, html, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { computeDomain } from \"../../../common/entity/compute_domain\";\nimport { stateActive } from \"../../../common/entity/state_active\";\nimport { supportsFeature } from \"../../../common/entity/supports-feature\";\nimport \"../../../components/ha-control-button\";\nimport \"../../../components/ha-control-button-group\";\nimport { UNAVAILABLE } from \"../../../data/entity\";\nimport {\n  UpdateEntity,\n  UpdateEntityFeature,\n  updateIsInstalling,\n} from \"../../../data/update\";\nimport { showUpdateBackupDialogParams } from \"../../../dialogs/update_backup/show-update-backup-dialog\";\nimport { HomeAssistant } from \"../../../types\";\nimport { LovelaceCardFeature, LovelaceCardFeatureEditor } from \"../types\";\nimport { UpdateActionsCardFeatureConfig } from \"./types\";\n\nexport const DEFAULT_UPDATE_BACKUP_OPTION = \"ask\";\n\nexport const supportsUpdateActionsCardFeature = (stateObj: HassEntity) => {\n  const domain = computeDomain(stateObj.entity_id);\n  return (\n    domain === \"update\" &&\n    supportsFeature(stateObj, UpdateEntityFeature.INSTALL)\n  );\n};\n\n@customElement(\"hui-update-actions-card-feature\")\nclass HuiUpdateActionsCardFeature\n  extends LitElement\n  implements LovelaceCardFeature\n{\n  @property({ attribute: false }) public hass?: HomeAssistant;\n\n  @property({ attribute: false }) public stateObj?: HassEntity;\n\n  @state() private _config?: UpdateActionsCardFeatureConfig;\n\n  public static async getConfigElement(): Promise<LovelaceCardFeatureEditor> {\n    await import(\n      \"../editor/config-elements/hui-update-actions-card-feature-editor\"\n    );\n    return document.createElement(\"hui-update-actions-card-feature-editor\");\n  }\n\n  static getStubConfig(): UpdateActionsCardFeatureConfig {\n    return {\n      type: \"update-actions\",\n      backup: DEFAULT_UPDATE_BACKUP_OPTION,\n    };\n  }\n\n  public setConfig(config: UpdateActionsCardFeatureConfig): void {\n    if (!config) {\n      throw new Error(\"Invalid configuration\");\n    }\n    this._config = config;\n  }\n\n  private get _installDisabled(): boolean {\n    const stateObj = this.stateObj as UpdateEntity;\n\n    if (stateObj.state === UNAVAILABLE) return true;\n\n    const skippedVersion =\n      stateObj.attributes.latest_version &&\n      stateObj.attributes.skipped_version ===\n        stateObj.attributes.latest_version;\n    return (\n      (!stateActive(stateObj) && !skippedVersion) ||\n      updateIsInstalling(stateObj)\n    );\n  }\n\n  private get _skipDisabled(): boolean {\n    const stateObj = this.stateObj as UpdateEntity;\n\n    if (stateObj.state === UNAVAILABLE) return true;\n\n    const skippedVersion =\n      stateObj.attributes.latest_version &&\n      stateObj.attributes.skipped_version ===\n        stateObj.attributes.latest_version;\n    return (\n      skippedVersion || !stateActive(stateObj) || updateIsInstalling(stateObj)\n    );\n  }\n\n  private async _install(): Promise<void> {\n    const supportsBackup = supportsFeature(\n      this.stateObj!,\n      UpdateEntityFeature.BACKUP\n    );\n    let backup = supportsBackup && this._config?.backup === \"yes\";\n\n    if (supportsBackup && this._config?.backup === \"ask\") {\n      const response = await showUpdateBackupDialogParams(this, {});\n      if (response === null) return;\n      backup = response;\n    }\n\n    this.hass!.callService(\"update\", \"install\", {\n      entity_id: this.stateObj!.entity_id,\n      backup: backup,\n    });\n  }\n\n  private async _skip(): Promise<void> {\n    this.hass!.callService(\"update\", \"skip\", {\n      entity_id: this.stateObj!.entity_id,\n    });\n  }\n\n  protected render() {\n    if (\n      !this._config ||\n      !this.hass ||\n      !this.stateObj ||\n      !supportsUpdateActionsCardFeature(this.stateObj)\n    ) {\n      return nothing;\n    }\n\n    return html`\n      <ha-control-button-group>\n        <ha-control-button\n          .label=${this.hass.localize(\n            \"ui.dialogs.more_info_control.update.skip\"\n          )}\n          @click=${this._skip}\n          .disabled=${this._skipDisabled}\n        >\n          <ha-svg-icon .path=${mdiCancel}></ha-svg-icon>\n        </ha-control-button>\n        <ha-control-button\n          .label=${this.hass.localize(\n            \"ui.dialogs.more_info_control.update.install\"\n          )}\n          @click=${this._install}\n          .disabled=${this._installDisabled}\n        >\n          <ha-svg-icon .path=${mdiCellphoneArrowDown}></ha-svg-icon>\n        </ha-control-button>\n      </ha-control-button-group>\n    `;\n  }\n\n  static get styles() {\n    return css`\n      ha-control-button-group {\n        margin: 0 12px 12px 12px;\n        --control-button-group-spacing: 12px;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-update-actions-card-feature\": HuiUpdateActionsCardFeature;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}