{"ast":null,"code":"/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __assign, __extends, __read } from \"tslib\";\nimport { MDCFoundation } from '@material/base/foundation';\nimport { cssClasses, strings } from './constants';\nimport { MDCTabScrollerRTLDefault } from './rtl-default-scroller';\nimport { MDCTabScrollerRTLNegative } from './rtl-negative-scroller';\nimport { MDCTabScrollerRTLReverse } from './rtl-reverse-scroller';\nvar MDCTabScrollerFoundation = /** @class */function (_super) {\n  __extends(MDCTabScrollerFoundation, _super);\n  function MDCTabScrollerFoundation(adapter) {\n    var _this = _super.call(this, __assign(__assign({}, MDCTabScrollerFoundation.defaultAdapter), adapter)) || this;\n    /**\n     * Controls whether we should handle the transitionend and interaction events during the animation.\n     */\n    _this.isAnimating = false;\n    return _this;\n  }\n  Object.defineProperty(MDCTabScrollerFoundation, \"cssClasses\", {\n    get: function () {\n      return cssClasses;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MDCTabScrollerFoundation, \"strings\", {\n    get: function () {\n      return strings;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MDCTabScrollerFoundation, \"defaultAdapter\", {\n    get: function () {\n      // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n      return {\n        eventTargetMatchesSelector: function () {\n          return false;\n        },\n        addClass: function () {\n          return undefined;\n        },\n        removeClass: function () {\n          return undefined;\n        },\n        addScrollAreaClass: function () {\n          return undefined;\n        },\n        setScrollAreaStyleProperty: function () {\n          return undefined;\n        },\n        setScrollContentStyleProperty: function () {\n          return undefined;\n        },\n        getScrollContentStyleValue: function () {\n          return '';\n        },\n        setScrollAreaScrollLeft: function () {\n          return undefined;\n        },\n        getScrollAreaScrollLeft: function () {\n          return 0;\n        },\n        getScrollContentOffsetWidth: function () {\n          return 0;\n        },\n        getScrollAreaOffsetWidth: function () {\n          return 0;\n        },\n        computeScrollAreaClientRect: function () {\n          return {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0,\n            width: 0,\n            height: 0\n          };\n        },\n        computeScrollContentClientRect: function () {\n          return {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0,\n            width: 0,\n            height: 0\n          };\n        },\n        computeHorizontalScrollbarHeight: function () {\n          return 0;\n        }\n      };\n      // tslint:enable:object-literal-sort-keys\n    },\n    enumerable: false,\n    configurable: true\n  });\n  MDCTabScrollerFoundation.prototype.init = function () {\n    // Compute horizontal scrollbar height on scroller with overflow initially hidden, then update overflow to scroll\n    // and immediately adjust bottom margin to avoid the scrollbar initially appearing before JS runs.\n    var horizontalScrollbarHeight = this.adapter.computeHorizontalScrollbarHeight();\n    this.adapter.setScrollAreaStyleProperty('margin-bottom', -horizontalScrollbarHeight + 'px');\n    this.adapter.addScrollAreaClass(MDCTabScrollerFoundation.cssClasses.SCROLL_AREA_SCROLL);\n  };\n  /**\n   * Computes the current visual scroll position\n   */\n  MDCTabScrollerFoundation.prototype.getScrollPosition = function () {\n    if (this.isRTL()) {\n      return this.computeCurrentScrollPositionRTL();\n    }\n    var currentTranslateX = this.calculateCurrentTranslateX();\n    var scrollLeft = this.adapter.getScrollAreaScrollLeft();\n    return scrollLeft - currentTranslateX;\n  };\n  /**\n   * Handles interaction events that occur during transition\n   */\n  MDCTabScrollerFoundation.prototype.handleInteraction = function () {\n    // Early exit if we aren't animating\n    if (!this.isAnimating) {\n      return;\n    }\n    // Prevent other event listeners from handling this event\n    this.stopScrollAnimation();\n  };\n  /**\n   * Handles the transitionend event\n   */\n  MDCTabScrollerFoundation.prototype.handleTransitionEnd = function (evt) {\n    // Early exit if we aren't animating or the event was triggered by a different element.\n    var evtTarget = evt.target;\n    if (!this.isAnimating || !this.adapter.eventTargetMatchesSelector(evtTarget, MDCTabScrollerFoundation.strings.CONTENT_SELECTOR)) {\n      return;\n    }\n    this.isAnimating = false;\n    this.adapter.removeClass(MDCTabScrollerFoundation.cssClasses.ANIMATING);\n  };\n  /**\n   * Increment the scroll value by the scrollXIncrement using animation.\n   * @param scrollXIncrement The value by which to increment the scroll position\n   */\n  MDCTabScrollerFoundation.prototype.incrementScroll = function (scrollXIncrement) {\n    // Early exit for non-operational increment values\n    if (scrollXIncrement === 0) {\n      return;\n    }\n    this.animate(this.getIncrementScrollOperation(scrollXIncrement));\n  };\n  /**\n   * Increment the scroll value by the scrollXIncrement without animation.\n   * @param scrollXIncrement The value by which to increment the scroll position\n   */\n  MDCTabScrollerFoundation.prototype.incrementScrollImmediate = function (scrollXIncrement) {\n    // Early exit for non-operational increment values\n    if (scrollXIncrement === 0) {\n      return;\n    }\n    var operation = this.getIncrementScrollOperation(scrollXIncrement);\n    if (operation.scrollDelta === 0) {\n      return;\n    }\n    this.stopScrollAnimation();\n    this.adapter.setScrollAreaScrollLeft(operation.finalScrollPosition);\n  };\n  /**\n   * Scrolls to the given scrollX value\n   */\n  MDCTabScrollerFoundation.prototype.scrollTo = function (scrollX) {\n    if (this.isRTL()) {\n      this.scrollToImplRTL(scrollX);\n      return;\n    }\n    this.scrollToImpl(scrollX);\n  };\n  /**\n   * @return Browser-specific {@link MDCTabScrollerRTL} instance.\n   */\n  MDCTabScrollerFoundation.prototype.getRTLScroller = function () {\n    if (!this.rtlScrollerInstance) {\n      this.rtlScrollerInstance = this.rtlScrollerFactory();\n    }\n    return this.rtlScrollerInstance;\n  };\n  /**\n   * @return translateX value from a CSS matrix transform function string.\n   */\n  MDCTabScrollerFoundation.prototype.calculateCurrentTranslateX = function () {\n    var transformValue = this.adapter.getScrollContentStyleValue('transform');\n    // Early exit if no transform is present\n    if (transformValue === 'none') {\n      return 0;\n    }\n    // The transform value comes back as a matrix transformation in the form\n    // of `matrix(a, b, c, d, tx, ty)`. We only care about tx (translateX) so\n    // we're going to grab all the parenthesized values, strip out tx, and\n    // parse it.\n    var match = /\\((.+?)\\)/.exec(transformValue);\n    if (!match) {\n      return 0;\n    }\n    var matrixParams = match[1];\n    // tslint:disable-next-line:ban-ts-ignore \"Unused vars\" should be a linter warning, not a compiler error.\n    // @ts-ignore These unused variables should retain their semantic names for clarity.\n    var _a = __read(matrixParams.split(','), 6),\n      a = _a[0],\n      b = _a[1],\n      c = _a[2],\n      d = _a[3],\n      tx = _a[4],\n      ty = _a[5];\n    return parseFloat(tx); // tslint:disable-line:ban\n  };\n  /**\n   * Calculates a safe scroll value that is > 0 and < the max scroll value\n   * @param scrollX The distance to scroll\n   */\n  MDCTabScrollerFoundation.prototype.clampScrollValue = function (scrollX) {\n    var edges = this.calculateScrollEdges();\n    return Math.min(Math.max(edges.left, scrollX), edges.right);\n  };\n  MDCTabScrollerFoundation.prototype.computeCurrentScrollPositionRTL = function () {\n    var translateX = this.calculateCurrentTranslateX();\n    return this.getRTLScroller().getScrollPositionRTL(translateX);\n  };\n  MDCTabScrollerFoundation.prototype.calculateScrollEdges = function () {\n    var contentWidth = this.adapter.getScrollContentOffsetWidth();\n    var rootWidth = this.adapter.getScrollAreaOffsetWidth();\n    return {\n      left: 0,\n      right: contentWidth - rootWidth\n    };\n  };\n  /**\n   * Internal scroll method\n   * @param scrollX The new scroll position\n   */\n  MDCTabScrollerFoundation.prototype.scrollToImpl = function (scrollX) {\n    var currentScrollX = this.getScrollPosition();\n    var safeScrollX = this.clampScrollValue(scrollX);\n    var scrollDelta = safeScrollX - currentScrollX;\n    this.animate({\n      finalScrollPosition: safeScrollX,\n      scrollDelta: scrollDelta\n    });\n  };\n  /**\n   * Internal RTL scroll method\n   * @param scrollX The new scroll position\n   */\n  MDCTabScrollerFoundation.prototype.scrollToImplRTL = function (scrollX) {\n    var animation = this.getRTLScroller().scrollToRTL(scrollX);\n    this.animate(animation);\n  };\n  /**\n   * Internal method to compute the increment scroll operation values.\n   * @param scrollX The desired scroll position increment\n   * @return MDCTabScrollerAnimation with the sanitized values for performing the scroll operation.\n   */\n  MDCTabScrollerFoundation.prototype.getIncrementScrollOperation = function (scrollX) {\n    if (this.isRTL()) {\n      return this.getRTLScroller().incrementScrollRTL(scrollX);\n    }\n    var currentScrollX = this.getScrollPosition();\n    var targetScrollX = scrollX + currentScrollX;\n    var safeScrollX = this.clampScrollValue(targetScrollX);\n    var scrollDelta = safeScrollX - currentScrollX;\n    return {\n      finalScrollPosition: safeScrollX,\n      scrollDelta: scrollDelta\n    };\n  };\n  /**\n   * Animates the tab scrolling\n   * @param animation The animation to apply\n   */\n  MDCTabScrollerFoundation.prototype.animate = function (animation) {\n    var _this = this;\n    // Early exit if translateX is 0, which means there's no animation to perform\n    if (animation.scrollDelta === 0) {\n      return;\n    }\n    this.stopScrollAnimation();\n    // This animation uses the FLIP approach.\n    // Read more here: https://aerotwist.com/blog/flip-your-animations/\n    this.adapter.setScrollAreaScrollLeft(animation.finalScrollPosition);\n    this.adapter.setScrollContentStyleProperty('transform', \"translateX(\" + animation.scrollDelta + \"px)\");\n    // Force repaint\n    this.adapter.computeScrollAreaClientRect();\n    requestAnimationFrame(function () {\n      _this.adapter.addClass(MDCTabScrollerFoundation.cssClasses.ANIMATING);\n      _this.adapter.setScrollContentStyleProperty('transform', 'none');\n    });\n    this.isAnimating = true;\n  };\n  /**\n   * Stops scroll animation\n   */\n  MDCTabScrollerFoundation.prototype.stopScrollAnimation = function () {\n    this.isAnimating = false;\n    var currentScrollPosition = this.getAnimatingScrollPosition();\n    this.adapter.removeClass(MDCTabScrollerFoundation.cssClasses.ANIMATING);\n    this.adapter.setScrollContentStyleProperty('transform', 'translateX(0px)');\n    this.adapter.setScrollAreaScrollLeft(currentScrollPosition);\n  };\n  /**\n   * Gets the current scroll position during animation\n   */\n  MDCTabScrollerFoundation.prototype.getAnimatingScrollPosition = function () {\n    var currentTranslateX = this.calculateCurrentTranslateX();\n    var scrollLeft = this.adapter.getScrollAreaScrollLeft();\n    if (this.isRTL()) {\n      return this.getRTLScroller().getAnimatingScrollPosition(scrollLeft, currentTranslateX);\n    }\n    return scrollLeft - currentTranslateX;\n  };\n  /**\n   * Determines the RTL Scroller to use\n   */\n  MDCTabScrollerFoundation.prototype.rtlScrollerFactory = function () {\n    // Browsers have three different implementations of scrollLeft in RTL mode,\n    // dependent on the browser. The behavior is based off the max LTR\n    // scrollLeft value and 0.\n    //\n    // * Default scrolling in RTL *\n    //    - Left-most value: 0\n    //    - Right-most value: Max LTR scrollLeft value\n    //\n    // * Negative scrolling in RTL *\n    //    - Left-most value: Negated max LTR scrollLeft value\n    //    - Right-most value: 0\n    //\n    // * Reverse scrolling in RTL *\n    //    - Left-most value: Max LTR scrollLeft value\n    //    - Right-most value: 0\n    //\n    // We use those principles below to determine which RTL scrollLeft\n    // behavior is implemented in the current browser.\n    var initialScrollLeft = this.adapter.getScrollAreaScrollLeft();\n    this.adapter.setScrollAreaScrollLeft(initialScrollLeft - 1);\n    var newScrollLeft = this.adapter.getScrollAreaScrollLeft();\n    // If the newScrollLeft value is negative,then we know that the browser has\n    // implemented negative RTL scrolling, since all other implementations have\n    // only positive values.\n    if (newScrollLeft < 0) {\n      // Undo the scrollLeft test check\n      this.adapter.setScrollAreaScrollLeft(initialScrollLeft);\n      return new MDCTabScrollerRTLNegative(this.adapter);\n    }\n    var rootClientRect = this.adapter.computeScrollAreaClientRect();\n    var contentClientRect = this.adapter.computeScrollContentClientRect();\n    var rightEdgeDelta = Math.round(contentClientRect.right - rootClientRect.right);\n    // Undo the scrollLeft test check\n    this.adapter.setScrollAreaScrollLeft(initialScrollLeft);\n    // By calculating the clientRect of the root element and the clientRect of\n    // the content element, we can determine how much the scroll value changed\n    // when we performed the scrollLeft subtraction above.\n    if (rightEdgeDelta === newScrollLeft) {\n      return new MDCTabScrollerRTLReverse(this.adapter);\n    }\n    return new MDCTabScrollerRTLDefault(this.adapter);\n  };\n  MDCTabScrollerFoundation.prototype.isRTL = function () {\n    return this.adapter.getScrollContentStyleValue('direction') === 'rtl';\n  };\n  return MDCTabScrollerFoundation;\n}(MDCFoundation);\nexport { MDCTabScrollerFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCTabScrollerFoundation;","map":{"version":3,"names":["MDCFoundation","cssClasses","strings","MDCTabScrollerRTLDefault","MDCTabScrollerRTLNegative","MDCTabScrollerRTLReverse","MDCTabScrollerFoundation","_super","__extends","adapter","_this","call","__assign","defaultAdapter","isAnimating","Object","defineProperty","get","eventTargetMatchesSelector","addClass","undefined","removeClass","addScrollAreaClass","setScrollAreaStyleProperty","setScrollContentStyleProperty","getScrollContentStyleValue","setScrollAreaScrollLeft","getScrollAreaScrollLeft","getScrollContentOffsetWidth","getScrollAreaOffsetWidth","computeScrollAreaClientRect","top","right","bottom","left","width","height","computeScrollContentClientRect","computeHorizontalScrollbarHeight","prototype","init","horizontalScrollbarHeight","SCROLL_AREA_SCROLL","getScrollPosition","isRTL","computeCurrentScrollPositionRTL","currentTranslateX","calculateCurrentTranslateX","scrollLeft","handleInteraction","stopScrollAnimation","handleTransitionEnd","evt","evtTarget","target","CONTENT_SELECTOR","ANIMATING","incrementScroll","scrollXIncrement","animate","getIncrementScrollOperation","incrementScrollImmediate","operation","scrollDelta","finalScrollPosition","scrollTo","scrollX","scrollToImplRTL","scrollToImpl","getRTLScroller","rtlScrollerInstance","rtlScrollerFactory","transformValue","match","exec","matrixParams","_a","__read","split","a","b","c","d","tx","ty","parseFloat","clampScrollValue","edges","calculateScrollEdges","Math","min","max","translateX","getScrollPositionRTL","contentWidth","rootWidth","currentScrollX","safeScrollX","animation","scrollToRTL","incrementScrollRTL","targetScrollX","requestAnimationFrame","currentScrollPosition","getAnimatingScrollPosition","initialScrollLeft","newScrollLeft","rootClientRect","contentClientRect","rightEdgeDelta","round"],"sources":["foundation.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}