{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nconst mdiDotsVertical = \"M12,16A2,2 0 0,1 14,18A2,2 0 0,1 12,20A2,2 0 0,1 10,18A2,2 0 0,1 12,16M12,10A2,2 0 0,1 14,12A2,2 0 0,1 12,14A2,2 0 0,1 10,12A2,2 0 0,1 12,10M12,4A2,2 0 0,1 14,6A2,2 0 0,1 12,8A2,2 0 0,1 10,6A2,2 0 0,1 12,4Z\";\nconst mdiDownload = \"M5,20H19V18H5M19,9H15V3H9V9H5L12,16L19,9Z\";\nconst mdiInformationOutline = \"M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M11,17H13V11H11V17Z\";\nconst mdiPencil = \"M20.71,7.04C21.1,6.65 21.1,6 20.71,5.63L18.37,3.29C18,2.9 17.35,2.9 16.96,3.29L15.12,5.12L18.87,8.87M3,17.25V21H6.75L17.81,9.93L14.06,6.18L3,17.25Z\";\nconst mdiRayEndArrow = \"M1,12L5,16V13H17.17C17.58,14.17 18.69,15 20,15A3,3 0 0,0 23,12A3,3 0 0,0 20,9C18.69,9 17.58,9.83 17.17,11H5V8L1,12Z\";\nconst mdiRayStartArrow = \"M23,12L19,16V13H6.83C6.42,14.17 5.31,15 4,15A3,3 0 0,1 1,12A3,3 0 0,1 4,9C5.31,9 6.42,9.83 6.83,11H19V8L23,12Z\";\nconst mdiRefresh = \"M17.65,6.35C16.2,4.9 14.21,4 12,4A8,8 0 0,0 4,12A8,8 0 0,0 12,20C15.73,20 18.84,17.45 19.73,14H17.65C16.83,16.33 14.61,18 12,18A6,6 0 0,1 6,12A6,6 0 0,1 12,6C13.66,6 15.14,6.69 16.22,7.78L13,11H20V4L17.65,6.35Z\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport { repeat } from \"lit/directives/repeat\";\nimport { isComponentLoaded } from \"../../../common/config/is_component_loaded\";\nimport { formatDateTimeWithSeconds } from \"../../../common/datetime/format_date_time\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport \"../../../components/ha-button-menu\";\nimport \"../../../components/ha-icon-button\";\nimport \"../../../components/trace/ha-trace-blueprint-config\";\nimport \"../../../components/trace/ha-trace-config\";\nimport \"../../../components/trace/ha-trace-logbook\";\nimport \"../../../components/trace/ha-trace-path-details\";\nimport \"../../../components/trace/ha-trace-timeline\";\nimport \"../../../components/trace/hat-script-graph\";\nimport { traceTabStyles } from \"../../../components/trace/trace-tab-styles\";\nimport { getLogbookDataForContext } from \"../../../data/logbook\";\nimport { loadTrace, loadTraces } from \"../../../data/trace\";\nimport { showAlertDialog } from \"../../../dialogs/generic/show-dialog-box\";\nimport \"../../../layouts/hass-subpage\";\nimport { haStyle } from \"../../../resources/styles\";\nimport { computeRTL } from \"../../../common/util/compute_rtl\";\nconst TABS = [\"details\", \"automation_config\", \"timeline\", \"logbook\"];\nexport let HaAutomationTrace = _decorate([customElement(\"ha-automation-trace\")], function (_initialize, _LitElement) {\n  class HaAutomationTrace extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaAutomationTrace,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"automationId\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"automations\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"isWide\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        reflect: true\n      })],\n      key: \"narrow\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"route\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_entityId\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_traces\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_runId\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_selected\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_trace\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_logbookEntries\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_view\",\n      value() {\n        return \"details\";\n      }\n    }, {\n      kind: \"field\",\n      decorators: [query(\"hat-script-graph\")],\n      key: \"_graph\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var _this$_selected;\n        const stateObj = this._entityId ? this.hass.states[this._entityId] : undefined;\n        const graph = this._graph;\n        const trackedNodes = graph === null || graph === void 0 ? void 0 : graph.trackedNodes;\n        const renderedNodes = graph === null || graph === void 0 ? void 0 : graph.renderedNodes;\n        const title = (stateObj === null || stateObj === void 0 ? void 0 : stateObj.attributes.friendly_name) || this._entityId;\n        let devButtons = \"\";\n        if (__DEV__) {\n          devButtons = html`<div style=\"position: absolute; right: 0;\">\n        <button @click=${this._importTrace}>Import trace</button>\n        <button @click=${this._loadLocalStorageTrace}>Load stored trace</button>\n      </div>`;\n        }\n        return html`\n      ${devButtons}\n      <hass-subpage .hass=${this.hass} .narrow=${this.narrow} .header=${title}>\n        ${!this.narrow && stateObj !== null && stateObj !== void 0 && stateObj.attributes.id ? html`\n              <a\n                class=\"trace-link\"\n                href=\"/config/automation/edit/${stateObj.attributes.id}\"\n                slot=\"toolbar-icon\"\n              >\n                <mwc-button>\n                  ${this.hass.localize(\"ui.panel.config.automation.trace.edit_automation\")}\n                </mwc-button>\n              </a>\n            ` : \"\"}\n        <ha-button-menu slot=\"toolbar-icon\">\n          <ha-icon-button\n            slot=\"trigger\"\n            .label=${this.hass.localize(\"ui.common.menu\")}\n            .path=${mdiDotsVertical}\n          ></ha-icon-button>\n\n          <mwc-list-item\n            graphic=\"icon\"\n            .disabled=${!stateObj}\n            @click=${this._showInfo}\n          >\n            ${this.hass.localize(\"ui.panel.config.automation.editor.show_info\")}\n            <ha-svg-icon\n              slot=\"graphic\"\n              .path=${mdiInformationOutline}\n            ></ha-svg-icon>\n          </mwc-list-item>\n\n          ${stateObj !== null && stateObj !== void 0 && stateObj.attributes.id && this.narrow ? html`\n                <a\n                  class=\"trace-link\"\n                  href=\"/config/automation/edit/${stateObj.attributes.id}\"\n                >\n                  <mwc-list-item graphic=\"icon\">\n                    ${this.hass.localize(\"ui.panel.config.automation.trace.edit_automation\")}\n                    <ha-svg-icon\n                      slot=\"graphic\"\n                      .path=${mdiPencil}\n                    ></ha-svg-icon>\n                  </mwc-list-item>\n                </a>\n              ` : \"\"}\n\n          <li divider role=\"separator\"></li>\n\n          <mwc-list-item graphic=\"icon\" @click=${this._refreshTraces}>\n            ${this.hass.localize(\"ui.panel.config.automation.trace.refresh\")}\n            <ha-svg-icon slot=\"graphic\" .path=${mdiRefresh}></ha-svg-icon>\n          </mwc-list-item>\n\n          <mwc-list-item\n            graphic=\"icon\"\n            .disabled=${!this._trace}\n            @click=${this._downloadTrace}\n          >\n            ${this.hass.localize(\"ui.panel.config.automation.trace.download_trace\")}\n            <ha-svg-icon slot=\"graphic\" .path=${mdiDownload}></ha-svg-icon>\n          </mwc-list-item>\n        </ha-button-menu>\n\n        <div class=\"toolbar\">\n          ${this._traces && this._traces.length > 0 ? html`\n                <ha-icon-button\n                  .label=${this.hass.localize(\"ui.panel.config.automation.trace.older_trace\")}\n                  .path=${computeRTL(this.hass) ? mdiRayStartArrow : mdiRayEndArrow}\n                  .disabled=${this._traces[this._traces.length - 1].run_id === this._runId}\n                  @click=${this._pickOlderTrace}\n                ></ha-icon-button>\n                <select .value=${this._runId} @change=${this._pickTrace}>\n                  ${repeat(this._traces, trace => trace.run_id, trace => html`<option value=${trace.run_id}>\n                        ${formatDateTimeWithSeconds(new Date(trace.timestamp.start), this.hass.locale, this.hass.config)}\n                      </option>`)}\n                </select>\n                <ha-icon-button\n                  .label=${this.hass.localize(\"ui.panel.config.automation.trace.newer_trace\")}\n                  .path=${computeRTL(this.hass) ? mdiRayEndArrow : mdiRayStartArrow}\n                  .disabled=${this._traces[0].run_id === this._runId}\n                  @click=${this._pickNewerTrace}\n                ></ha-icon-button>\n              ` : \"\"}\n        </div>\n\n        ${this._traces === undefined ? html`<div class=\"container\">\n              ${this.hass.localize(\"ui.common.loading\")}\n            </div>` : this._traces.length === 0 ? html`<div class=\"container\">\n                ${this.hass.localize(\"ui.panel.config.automation.trace.no_traces_found\")}\n              </div>` : this._trace === undefined ? \"\" : html`\n                  <div class=\"main\">\n                    <div class=\"graph\">\n                      <hat-script-graph\n                        .trace=${this._trace}\n                        .selected=${(_this$_selected = this._selected) === null || _this$_selected === void 0 ? void 0 : _this$_selected.path}\n                        @graph-node-selected=${this._pickNode}\n                      ></hat-script-graph>\n                    </div>\n\n                    <div class=\"info\">\n                      <div class=\"tabs top\">\n                        ${TABS.map(view => html`\n                            <button\n                              tabindex=\"0\"\n                              .view=${view}\n                              class=${classMap({\n          active: this._view === view\n        })}\n                              @click=${this._showTab}\n                            >\n                              ${this.hass.localize(`ui.panel.config.automation.trace.tabs.${view}`)}\n                            </button>\n                          `)}\n                        ${this._trace.blueprint_inputs ? html`\n                              <button\n                                tabindex=\"0\"\n                                .view=${\"blueprint\"}\n                                class=${classMap({\n          active: this._view === \"blueprint\"\n        })}\n                                @click=${this._showTab}\n                              >\n                                ${this.hass.localize(`ui.panel.config.automation.trace.tabs.blueprint_config`)}\n                              </button>\n                            ` : \"\"}\n                      </div>\n                      ${this._selected === undefined || this._logbookEntries === undefined || trackedNodes === undefined ? nothing : this._view === \"details\" ? html`\n                              <ha-trace-path-details\n                                .hass=${this.hass}\n                                .narrow=${this.narrow}\n                                .trace=${this._trace}\n                                .selected=${this._selected}\n                                .logbookEntries=${this._logbookEntries}\n                                .trackedNodes=${trackedNodes}\n                                .renderedNodes=${renderedNodes}\n                              ></ha-trace-path-details>\n                            ` : this._view === \"automation_config\" ? html`\n                                <ha-trace-config\n                                  .hass=${this.hass}\n                                  .trace=${this._trace}\n                                ></ha-trace-config>\n                              ` : this._view === \"logbook\" ? html`\n                                  <ha-trace-logbook\n                                    .hass=${this.hass}\n                                    .narrow=${this.narrow}\n                                    .trace=${this._trace}\n                                    .logbookEntries=${this._logbookEntries}\n                                  ></ha-trace-logbook>\n                                ` : this._view === \"blueprint\" ? html`\n                                    <ha-trace-blueprint-config\n                                      .hass=${this.hass}\n                                      .trace=${this._trace}\n                                    ></ha-trace-blueprint-config>\n                                  ` : html`\n                                    <ha-trace-timeline\n                                      .hass=${this.hass}\n                                      .trace=${this._trace}\n                                      .logbookEntries=${this._logbookEntries}\n                                      .selected=${this._selected}\n                                      @value-changed=${this._timelinePathPicked}\n                                    ></ha-trace-timeline>\n                                  `}\n                    </div>\n                  </div>\n                `}\n      </hass-subpage>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"firstUpdated\",\n      value: function firstUpdated(changedProps) {\n        _get(_getPrototypeOf(HaAutomationTrace.prototype), \"firstUpdated\", this).call(this, changedProps);\n        if (!this.automationId) {\n          return;\n        }\n        const params = new URLSearchParams(location.search);\n        this._loadTraces(params.get(\"run_id\") || undefined);\n      }\n    }, {\n      kind: \"method\",\n      key: \"updated\",\n      value: function updated(changedProps) {\n        _get(_getPrototypeOf(HaAutomationTrace.prototype), \"updated\", this).call(this, changedProps);\n\n        // Only reset if automationId has changed and we had one before.\n        if (changedProps.get(\"automationId\")) {\n          this._traces = undefined;\n          this._entityId = undefined;\n          this._runId = undefined;\n          this._trace = undefined;\n          this._logbookEntries = undefined;\n          if (this.automationId) {\n            this._loadTraces();\n          }\n        }\n        if (changedProps.has(\"_runId\") && this._runId) {\n          this._trace = undefined;\n          this._logbookEntries = undefined;\n          this._loadTrace();\n        }\n        if (changedProps.has(\"automations\") && this.automationId && !this._entityId) {\n          const automation = this.automations.find(entity => entity.attributes.id === this.automationId);\n          this._entityId = automation === null || automation === void 0 ? void 0 : automation.entity_id;\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_pickOlderTrace\",\n      value: function _pickOlderTrace() {\n        const curIndex = this._traces.findIndex(tr => tr.run_id === this._runId);\n        this._runId = this._traces[curIndex + 1].run_id;\n        this._selected = undefined;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_pickNewerTrace\",\n      value: function _pickNewerTrace() {\n        const curIndex = this._traces.findIndex(tr => tr.run_id === this._runId);\n        this._runId = this._traces[curIndex - 1].run_id;\n        this._selected = undefined;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_pickTrace\",\n      value: function _pickTrace(ev) {\n        this._runId = ev.target.value;\n        this._selected = undefined;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_pickNode\",\n      value: function _pickNode(ev) {\n        this._selected = ev.detail;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_refreshTraces\",\n      value: function _refreshTraces() {\n        this._loadTraces();\n      }\n    }, {\n      kind: \"method\",\n      key: \"_loadTraces\",\n      value: async function _loadTraces(runId) {\n        this._traces = await loadTraces(this.hass, \"automation\", this.automationId);\n        // Newest will be on top.\n        this._traces.reverse();\n        if (runId) {\n          this._runId = runId;\n        }\n\n        // Check if current run ID still exists\n        if (this._runId && !this._traces.some(trace => trace.run_id === this._runId)) {\n          this._runId = undefined;\n          this._selected = undefined;\n\n          // If we came here from a trace passed into the url, clear it.\n          if (runId) {\n            const params = new URLSearchParams(location.search);\n            params.delete(\"run_id\");\n            history.replaceState(null, \"\", `${location.pathname}?${params.toString()}`);\n          }\n          await showAlertDialog(this, {\n            text: \"Chosen trace is no longer available\"\n          });\n        }\n\n        // See if we can set a default runID\n        if (!this._runId && this._traces.length > 0) {\n          this._runId = this._traces[0].run_id;\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_loadTrace\",\n      value: async function _loadTrace() {\n        const trace = await loadTrace(this.hass, \"automation\", this.automationId, this._runId);\n        this._logbookEntries = isComponentLoaded(this.hass, \"logbook\") ? await getLogbookDataForContext(this.hass, trace.timestamp.start, trace.context.id) : [];\n        this._trace = trace;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_downloadTrace\",\n      value: function _downloadTrace() {\n        const aEl = document.createElement(\"a\");\n        aEl.download = `trace ${this._entityId} ${this._trace.timestamp.start}.json`;\n        aEl.href = `data:application/json;charset=utf-8,${encodeURI(JSON.stringify({\n          trace: this._trace,\n          logbookEntries: this._logbookEntries\n        }, undefined, 2))}`;\n        aEl.click();\n      }\n    }, {\n      kind: \"method\",\n      key: \"_importTrace\",\n      value: function _importTrace() {\n        const traceText = prompt(\"Enter downloaded trace\");\n        if (!traceText) {\n          return;\n        }\n        localStorage.devTrace = traceText;\n        this._loadLocalTrace(traceText);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_loadLocalStorageTrace\",\n      value: function _loadLocalStorageTrace() {\n        if (localStorage.devTrace) {\n          this._loadLocalTrace(localStorage.devTrace);\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_loadLocalTrace\",\n      value: function _loadLocalTrace(traceText) {\n        const traceInfo = JSON.parse(traceText);\n        this._trace = traceInfo.trace;\n        this._logbookEntries = traceInfo.logbookEntries;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_showTab\",\n      value: function _showTab(ev) {\n        this._view = ev.target.view;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_timelinePathPicked\",\n      value: function _timelinePathPicked(ev) {\n        const path = ev.detail.value;\n        const nodes = this._graph.trackedNodes;\n        if (nodes[path]) {\n          this._selected = nodes[path];\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_showInfo\",\n      value: function _showInfo() {\n        if (!this.hass || !this._entityId) {\n          return;\n        }\n        fireEvent(this, \"hass-more-info\", {\n          entityId: this._entityId\n        });\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [haStyle, traceTabStyles, css`\n        .toolbar {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          font-size: 20px;\n          height: var(--header-height);\n          padding: 4px;\n          background-color: var(--primary-background-color);\n          font-weight: 400;\n          color: var(--app-header-text-color, white);\n          border-bottom: var(--app-header-border-bottom, none);\n          box-sizing: border-box;\n        }\n\n        .main {\n          min-height: calc(100% - var(--header-height));\n          display: flex;\n          background-color: var(--card-background-color);\n          direction: ltr;\n        }\n\n        :host([narrow]) .main {\n          height: auto;\n          flex-direction: column;\n        }\n\n        .container {\n          padding: 16px;\n        }\n\n        .graph {\n          border-right: 1px solid var(--divider-color);\n          overflow-x: auto;\n          max-width: 50%;\n          padding-bottom: 16px;\n        }\n        :host([narrow]) .graph {\n          max-width: 100%;\n          justify-content: center;\n          display: flex;\n        }\n        .info {\n          flex: 1;\n          background-color: var(--card-background-color);\n        }\n        .trace-link {\n          text-decoration: none;\n        }\n\n        ha-trace-logbook {\n          direction: var(--direction);\n        }\n      `];\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","nothing","customElement","property","query","state","classMap","repeat","isComponentLoaded","formatDateTimeWithSeconds","fireEvent","traceTabStyles","getLogbookDataForContext","loadTrace","loadTraces","showAlertDialog","haStyle","computeRTL","TABS","HaAutomationTrace","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","type","Boolean","reflect","render","_this$_selected","stateObj","_entityId","hass","states","undefined","graph","_graph","trackedNodes","renderedNodes","title","attributes","friendly_name","devButtons","__DEV__","_importTrace","_loadLocalStorageTrace","narrow","id","localize","mdiDotsVertical","_showInfo","mdiInformationOutline","mdiPencil","_refreshTraces","mdiRefresh","_trace","_downloadTrace","mdiDownload","_traces","length","mdiRayStartArrow","mdiRayEndArrow","run_id","_runId","_pickOlderTrace","_pickTrace","trace","Date","timestamp","start","locale","config","_pickNewerTrace","_selected","path","_pickNode","map","view","active","_view","_showTab","blueprint_inputs","_logbookEntries","_timelinePathPicked","firstUpdated","changedProps","_get","_getPrototypeOf","prototype","call","automationId","params","URLSearchParams","location","search","_loadTraces","get","updated","has","_loadTrace","automation","automations","find","entity","entity_id","curIndex","findIndex","tr","ev","target","detail","runId","reverse","some","delete","history","replaceState","pathname","toString","text","context","aEl","document","createElement","download","href","encodeURI","JSON","stringify","logbookEntries","click","traceText","prompt","localStorage","devTrace","_loadLocalTrace","traceInfo","parse","nodes","entityId","static","styles"],"sources":["/Users/sercanardil/Desktop/frontend/src/panels/config/automation/ha-automation-trace.ts"],"sourcesContent":["import {\n  mdiDotsVertical,\n  mdiDownload,\n  mdiInformationOutline,\n  mdiPencil,\n  mdiRayEndArrow,\n  mdiRayStartArrow,\n  mdiRefresh,\n} from \"@mdi/js\";\nimport {\n  css,\n  CSSResultGroup,\n  html,\n  LitElement,\n  nothing,\n  TemplateResult,\n} from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport { repeat } from \"lit/directives/repeat\";\nimport { isComponentLoaded } from \"../../../common/config/is_component_loaded\";\nimport { formatDateTimeWithSeconds } from \"../../../common/datetime/format_date_time\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport \"../../../components/ha-button-menu\";\nimport \"../../../components/ha-icon-button\";\nimport \"../../../components/trace/ha-trace-blueprint-config\";\nimport \"../../../components/trace/ha-trace-config\";\nimport \"../../../components/trace/ha-trace-logbook\";\nimport \"../../../components/trace/ha-trace-path-details\";\nimport \"../../../components/trace/ha-trace-timeline\";\nimport \"../../../components/trace/hat-script-graph\";\nimport type {\n  HatScriptGraph,\n  NodeInfo,\n} from \"../../../components/trace/hat-script-graph\";\nimport { traceTabStyles } from \"../../../components/trace/trace-tab-styles\";\nimport { AutomationEntity } from \"../../../data/automation\";\nimport { getLogbookDataForContext, LogbookEntry } from \"../../../data/logbook\";\nimport {\n  AutomationTrace,\n  AutomationTraceExtended,\n  loadTrace,\n  loadTraces,\n} from \"../../../data/trace\";\nimport { showAlertDialog } from \"../../../dialogs/generic/show-dialog-box\";\nimport \"../../../layouts/hass-subpage\";\nimport { haStyle } from \"../../../resources/styles\";\nimport { HomeAssistant, Route } from \"../../../types\";\nimport { computeRTL } from \"../../../common/util/compute_rtl\";\n\nconst TABS = [\"details\", \"automation_config\", \"timeline\", \"logbook\"] as const;\n\n@customElement(\"ha-automation-trace\")\nexport class HaAutomationTrace extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property() public automationId!: string;\n\n  @property({ attribute: false }) public automations!: AutomationEntity[];\n\n  @property({ type: Boolean }) public isWide = false;\n\n  @property({ type: Boolean, reflect: true }) public narrow = false;\n\n  @property({ attribute: false }) public route!: Route;\n\n  @state() private _entityId?: string;\n\n  @state() private _traces?: AutomationTrace[];\n\n  @state() private _runId?: string;\n\n  @state() private _selected?: NodeInfo;\n\n  @state() private _trace?: AutomationTraceExtended;\n\n  @state() private _logbookEntries?: LogbookEntry[];\n\n  @state() private _view: (typeof TABS)[number] | \"blueprint\" = \"details\";\n\n  @query(\"hat-script-graph\") private _graph?: HatScriptGraph;\n\n  protected render(): TemplateResult {\n    const stateObj = this._entityId\n      ? this.hass.states[this._entityId]\n      : undefined;\n\n    const graph = this._graph;\n    const trackedNodes = graph?.trackedNodes;\n    const renderedNodes = graph?.renderedNodes;\n\n    const title = stateObj?.attributes.friendly_name || this._entityId;\n\n    let devButtons: TemplateResult | string = \"\";\n    if (__DEV__) {\n      devButtons = html`<div style=\"position: absolute; right: 0;\">\n        <button @click=${this._importTrace}>Import trace</button>\n        <button @click=${this._loadLocalStorageTrace}>Load stored trace</button>\n      </div>`;\n    }\n\n    return html`\n      ${devButtons}\n      <hass-subpage .hass=${this.hass} .narrow=${this.narrow} .header=${title}>\n        ${!this.narrow && stateObj?.attributes.id\n          ? html`\n              <a\n                class=\"trace-link\"\n                href=\"/config/automation/edit/${stateObj.attributes.id}\"\n                slot=\"toolbar-icon\"\n              >\n                <mwc-button>\n                  ${this.hass.localize(\n                    \"ui.panel.config.automation.trace.edit_automation\"\n                  )}\n                </mwc-button>\n              </a>\n            `\n          : \"\"}\n        <ha-button-menu slot=\"toolbar-icon\">\n          <ha-icon-button\n            slot=\"trigger\"\n            .label=${this.hass.localize(\"ui.common.menu\")}\n            .path=${mdiDotsVertical}\n          ></ha-icon-button>\n\n          <mwc-list-item\n            graphic=\"icon\"\n            .disabled=${!stateObj}\n            @click=${this._showInfo}\n          >\n            ${this.hass.localize(\"ui.panel.config.automation.editor.show_info\")}\n            <ha-svg-icon\n              slot=\"graphic\"\n              .path=${mdiInformationOutline}\n            ></ha-svg-icon>\n          </mwc-list-item>\n\n          ${stateObj?.attributes.id && this.narrow\n            ? html`\n                <a\n                  class=\"trace-link\"\n                  href=\"/config/automation/edit/${stateObj.attributes.id}\"\n                >\n                  <mwc-list-item graphic=\"icon\">\n                    ${this.hass.localize(\n                      \"ui.panel.config.automation.trace.edit_automation\"\n                    )}\n                    <ha-svg-icon\n                      slot=\"graphic\"\n                      .path=${mdiPencil}\n                    ></ha-svg-icon>\n                  </mwc-list-item>\n                </a>\n              `\n            : \"\"}\n\n          <li divider role=\"separator\"></li>\n\n          <mwc-list-item graphic=\"icon\" @click=${this._refreshTraces}>\n            ${this.hass.localize(\"ui.panel.config.automation.trace.refresh\")}\n            <ha-svg-icon slot=\"graphic\" .path=${mdiRefresh}></ha-svg-icon>\n          </mwc-list-item>\n\n          <mwc-list-item\n            graphic=\"icon\"\n            .disabled=${!this._trace}\n            @click=${this._downloadTrace}\n          >\n            ${this.hass.localize(\n              \"ui.panel.config.automation.trace.download_trace\"\n            )}\n            <ha-svg-icon slot=\"graphic\" .path=${mdiDownload}></ha-svg-icon>\n          </mwc-list-item>\n        </ha-button-menu>\n\n        <div class=\"toolbar\">\n          ${this._traces && this._traces.length > 0\n            ? html`\n                <ha-icon-button\n                  .label=${this.hass!.localize(\n                    \"ui.panel.config.automation.trace.older_trace\"\n                  )}\n                  .path=${computeRTL(this.hass!)\n                    ? mdiRayStartArrow\n                    : mdiRayEndArrow}\n                  .disabled=${this._traces[this._traces.length - 1].run_id ===\n                  this._runId}\n                  @click=${this._pickOlderTrace}\n                ></ha-icon-button>\n                <select .value=${this._runId} @change=${this._pickTrace}>\n                  ${repeat(\n                    this._traces,\n                    (trace) => trace.run_id,\n                    (trace) =>\n                      html`<option value=${trace.run_id}>\n                        ${formatDateTimeWithSeconds(\n                          new Date(trace.timestamp.start),\n                          this.hass.locale,\n                          this.hass.config\n                        )}\n                      </option>`\n                  )}\n                </select>\n                <ha-icon-button\n                  .label=${this.hass!.localize(\n                    \"ui.panel.config.automation.trace.newer_trace\"\n                  )}\n                  .path=${computeRTL(this.hass!)\n                    ? mdiRayEndArrow\n                    : mdiRayStartArrow}\n                  .disabled=${this._traces[0].run_id === this._runId}\n                  @click=${this._pickNewerTrace}\n                ></ha-icon-button>\n              `\n            : \"\"}\n        </div>\n\n        ${this._traces === undefined\n          ? html`<div class=\"container\">\n              ${this.hass!.localize(\"ui.common.loading\")}\n            </div>`\n          : this._traces.length === 0\n            ? html`<div class=\"container\">\n                ${this.hass!.localize(\n                  \"ui.panel.config.automation.trace.no_traces_found\"\n                )}\n              </div>`\n            : this._trace === undefined\n              ? \"\"\n              : html`\n                  <div class=\"main\">\n                    <div class=\"graph\">\n                      <hat-script-graph\n                        .trace=${this._trace}\n                        .selected=${this._selected?.path}\n                        @graph-node-selected=${this._pickNode}\n                      ></hat-script-graph>\n                    </div>\n\n                    <div class=\"info\">\n                      <div class=\"tabs top\">\n                        ${TABS.map(\n                          (view) => html`\n                            <button\n                              tabindex=\"0\"\n                              .view=${view}\n                              class=${classMap({ active: this._view === view })}\n                              @click=${this._showTab}\n                            >\n                              ${this.hass!.localize(\n                                `ui.panel.config.automation.trace.tabs.${view}`\n                              )}\n                            </button>\n                          `\n                        )}\n                        ${this._trace.blueprint_inputs\n                          ? html`\n                              <button\n                                tabindex=\"0\"\n                                .view=${\"blueprint\"}\n                                class=${classMap({\n                                  active: this._view === \"blueprint\",\n                                })}\n                                @click=${this._showTab}\n                              >\n                                ${this.hass!.localize(\n                                  `ui.panel.config.automation.trace.tabs.blueprint_config`\n                                )}\n                              </button>\n                            `\n                          : \"\"}\n                      </div>\n                      ${this._selected === undefined ||\n                      this._logbookEntries === undefined ||\n                      trackedNodes === undefined\n                        ? nothing\n                        : this._view === \"details\"\n                          ? html`\n                              <ha-trace-path-details\n                                .hass=${this.hass}\n                                .narrow=${this.narrow}\n                                .trace=${this._trace}\n                                .selected=${this._selected}\n                                .logbookEntries=${this._logbookEntries}\n                                .trackedNodes=${trackedNodes}\n                                .renderedNodes=${renderedNodes!}\n                              ></ha-trace-path-details>\n                            `\n                          : this._view === \"automation_config\"\n                            ? html`\n                                <ha-trace-config\n                                  .hass=${this.hass}\n                                  .trace=${this._trace}\n                                ></ha-trace-config>\n                              `\n                            : this._view === \"logbook\"\n                              ? html`\n                                  <ha-trace-logbook\n                                    .hass=${this.hass}\n                                    .narrow=${this.narrow}\n                                    .trace=${this._trace}\n                                    .logbookEntries=${this._logbookEntries}\n                                  ></ha-trace-logbook>\n                                `\n                              : this._view === \"blueprint\"\n                                ? html`\n                                    <ha-trace-blueprint-config\n                                      .hass=${this.hass}\n                                      .trace=${this._trace}\n                                    ></ha-trace-blueprint-config>\n                                  `\n                                : html`\n                                    <ha-trace-timeline\n                                      .hass=${this.hass}\n                                      .trace=${this._trace}\n                                      .logbookEntries=${this._logbookEntries}\n                                      .selected=${this._selected}\n                                      @value-changed=${this._timelinePathPicked}\n                                    ></ha-trace-timeline>\n                                  `}\n                    </div>\n                  </div>\n                `}\n      </hass-subpage>\n    `;\n  }\n\n  protected firstUpdated(changedProps) {\n    super.firstUpdated(changedProps);\n\n    if (!this.automationId) {\n      return;\n    }\n\n    const params = new URLSearchParams(location.search);\n    this._loadTraces(params.get(\"run_id\") || undefined);\n  }\n\n  protected updated(changedProps) {\n    super.updated(changedProps);\n\n    // Only reset if automationId has changed and we had one before.\n    if (changedProps.get(\"automationId\")) {\n      this._traces = undefined;\n      this._entityId = undefined;\n      this._runId = undefined;\n      this._trace = undefined;\n      this._logbookEntries = undefined;\n      if (this.automationId) {\n        this._loadTraces();\n      }\n    }\n\n    if (changedProps.has(\"_runId\") && this._runId) {\n      this._trace = undefined;\n      this._logbookEntries = undefined;\n      this._loadTrace();\n    }\n\n    if (\n      changedProps.has(\"automations\") &&\n      this.automationId &&\n      !this._entityId\n    ) {\n      const automation = this.automations.find(\n        (entity: AutomationEntity) => entity.attributes.id === this.automationId\n      );\n      this._entityId = automation?.entity_id;\n    }\n  }\n\n  private _pickOlderTrace() {\n    const curIndex = this._traces!.findIndex((tr) => tr.run_id === this._runId);\n    this._runId = this._traces![curIndex + 1].run_id;\n    this._selected = undefined;\n  }\n\n  private _pickNewerTrace() {\n    const curIndex = this._traces!.findIndex((tr) => tr.run_id === this._runId);\n    this._runId = this._traces![curIndex - 1].run_id;\n    this._selected = undefined;\n  }\n\n  private _pickTrace(ev) {\n    this._runId = ev.target.value;\n    this._selected = undefined;\n  }\n\n  private _pickNode(ev) {\n    this._selected = ev.detail;\n  }\n\n  private _refreshTraces() {\n    this._loadTraces();\n  }\n\n  private async _loadTraces(runId?: string) {\n    this._traces = await loadTraces(this.hass, \"automation\", this.automationId);\n    // Newest will be on top.\n    this._traces.reverse();\n\n    if (runId) {\n      this._runId = runId;\n    }\n\n    // Check if current run ID still exists\n    if (\n      this._runId &&\n      !this._traces.some((trace) => trace.run_id === this._runId)\n    ) {\n      this._runId = undefined;\n      this._selected = undefined;\n\n      // If we came here from a trace passed into the url, clear it.\n      if (runId) {\n        const params = new URLSearchParams(location.search);\n        params.delete(\"run_id\");\n        history.replaceState(\n          null,\n          \"\",\n          `${location.pathname}?${params.toString()}`\n        );\n      }\n\n      await showAlertDialog(this, {\n        text: \"Chosen trace is no longer available\",\n      });\n    }\n\n    // See if we can set a default runID\n    if (!this._runId && this._traces.length > 0) {\n      this._runId = this._traces[0].run_id;\n    }\n  }\n\n  private async _loadTrace() {\n    const trace = await loadTrace(\n      this.hass,\n      \"automation\",\n      this.automationId,\n      this._runId!\n    );\n    this._logbookEntries = isComponentLoaded(this.hass, \"logbook\")\n      ? await getLogbookDataForContext(\n          this.hass,\n          trace.timestamp.start,\n          trace.context.id\n        )\n      : [];\n\n    this._trace = trace;\n  }\n\n  private _downloadTrace() {\n    const aEl = document.createElement(\"a\");\n    aEl.download = `trace ${this._entityId} ${\n      this._trace!.timestamp.start\n    }.json`;\n    aEl.href = `data:application/json;charset=utf-8,${encodeURI(\n      JSON.stringify(\n        {\n          trace: this._trace,\n          logbookEntries: this._logbookEntries,\n        },\n        undefined,\n        2\n      )\n    )}`;\n    aEl.click();\n  }\n\n  private _importTrace() {\n    const traceText = prompt(\"Enter downloaded trace\");\n    if (!traceText) {\n      return;\n    }\n    localStorage.devTrace = traceText;\n    this._loadLocalTrace(traceText);\n  }\n\n  private _loadLocalStorageTrace() {\n    if (localStorage.devTrace) {\n      this._loadLocalTrace(localStorage.devTrace);\n    }\n  }\n\n  private _loadLocalTrace(traceText: string) {\n    const traceInfo = JSON.parse(traceText);\n    this._trace = traceInfo.trace;\n    this._logbookEntries = traceInfo.logbookEntries;\n  }\n\n  private _showTab(ev: Event) {\n    this._view = (ev.target as any).view;\n  }\n\n  private _timelinePathPicked(ev: CustomEvent) {\n    const path = ev.detail.value;\n    const nodes = this._graph!.trackedNodes;\n    if (nodes[path]) {\n      this._selected = nodes[path];\n    }\n  }\n\n  private _showInfo() {\n    if (!this.hass || !this._entityId) {\n      return;\n    }\n    fireEvent(this, \"hass-more-info\", { entityId: this._entityId });\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyle,\n      traceTabStyles,\n      css`\n        .toolbar {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          font-size: 20px;\n          height: var(--header-height);\n          padding: 4px;\n          background-color: var(--primary-background-color);\n          font-weight: 400;\n          color: var(--app-header-text-color, white);\n          border-bottom: var(--app-header-border-bottom, none);\n          box-sizing: border-box;\n        }\n\n        .main {\n          min-height: calc(100% - var(--header-height));\n          display: flex;\n          background-color: var(--card-background-color);\n          direction: ltr;\n        }\n\n        :host([narrow]) .main {\n          height: auto;\n          flex-direction: column;\n        }\n\n        .container {\n          padding: 16px;\n        }\n\n        .graph {\n          border-right: 1px solid var(--divider-color);\n          overflow-x: auto;\n          max-width: 50%;\n          padding-bottom: 16px;\n        }\n        :host([narrow]) .graph {\n          max-width: 100%;\n          justify-content: center;\n          display: flex;\n        }\n        .info {\n          flex: 1;\n          background-color: var(--card-background-color);\n        }\n        .trace-link {\n          text-decoration: none;\n        }\n\n        ha-trace-logbook {\n          direction: var(--direction);\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-automation-trace\": HaAutomationTrace;\n  }\n}\n"],"mappings":"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kH,KAAK,GAAG,IAAI,CAACtG,MAAM,CAAEC,YAAY;QACvC,IAAIqG,KAAK,CAAChE,IAAI,CAAC,EAAE;UACf,IAAI,CAACD,SAAS,GAAGiE,KAAK,CAAChE,IAAI,CAAC;QAC9B;MACF;IAAC;MAAAtD,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAA0B,UAAA,EAAoB;QAClB,IAAI,CAAC,IAAI,CAAClB,IAAI,IAAI,CAAC,IAAI,CAACD,SAAS,EAAE;UACjC;QACF;QACA5B,SAAS,CAAC,IAAI,EAAE,gBAAgB,EAAE;UAAEwI,QAAQ,EAAE,IAAI,CAAC5G;QAAU,CAAC,CAAC;MACjE;IAAC;MAAAX,IAAA;MAAAwH,MAAA;MAAArH,GAAA;MAAAC,KAAA,EAED,SAAAqH,OAAA,EAAoC;QAClC,OAAO,CACLpI,OAAO,EACPL,cAAc,EACdb,GAAI;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,CACF;MACH;IAAC;EAAA;AAAA,GAtgBoCE,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}