{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * A controller which prevents the virtual keyboard from showing up on mobile devices\n * when the field's overlay is closed.\n */\nexport var VirtualKeyboardController = /*#__PURE__*/function () {\n  /**\n   * @param {{ inputElement?: HTMLElement; opened: boolean } & HTMLElement} host\n   */\n  function VirtualKeyboardController(host) {\n    var _this = this;\n    _classCallCheck(this, VirtualKeyboardController);\n    this.host = host;\n    host.addEventListener('opened-changed', function () {\n      if (!host.opened) {\n        // Prevent opening the virtual keyboard when the input gets re-focused on dropdown close\n        _this.__setVirtualKeyboardEnabled(false);\n      }\n    });\n\n    // Re-enable virtual keyboard on blur, so it gets opened when the field is focused again\n    host.addEventListener('blur', function () {\n      return _this.__setVirtualKeyboardEnabled(true);\n    });\n\n    // Re-enable the virtual keyboard whenever the field is touched\n    host.addEventListener('touchstart', function () {\n      return _this.__setVirtualKeyboardEnabled(true);\n    });\n  }\n\n  /** @private */\n  _createClass(VirtualKeyboardController, [{\n    key: \"__setVirtualKeyboardEnabled\",\n    value: function __setVirtualKeyboardEnabled(value) {\n      if (this.host.inputElement) {\n        this.host.inputElement.inputMode = value ? '' : 'none';\n      }\n    }\n  }]);\n  return VirtualKeyboardController;\n}();","map":{"version":3,"names":["VirtualKeyboardController","host","_this","_classCallCheck","addEventListener","opened","__setVirtualKeyboardEnabled","_createClass","key","value","inputElement","inputMode"],"sources":["/workspaces/frontend/node_modules/@vaadin/field-base/src/virtual-keyboard-controller.js"],"sourcesContent":["/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * A controller which prevents the virtual keyboard from showing up on mobile devices\n * when the field's overlay is closed.\n */\nexport class VirtualKeyboardController {\n  /**\n   * @param {{ inputElement?: HTMLElement; opened: boolean } & HTMLElement} host\n   */\n  constructor(host) {\n    this.host = host;\n\n    host.addEventListener('opened-changed', () => {\n      if (!host.opened) {\n        // Prevent opening the virtual keyboard when the input gets re-focused on dropdown close\n        this.__setVirtualKeyboardEnabled(false);\n      }\n    });\n\n    // Re-enable virtual keyboard on blur, so it gets opened when the field is focused again\n    host.addEventListener('blur', () => this.__setVirtualKeyboardEnabled(true));\n\n    // Re-enable the virtual keyboard whenever the field is touched\n    host.addEventListener('touchstart', () => this.__setVirtualKeyboardEnabled(true));\n  }\n\n  /** @private */\n  __setVirtualKeyboardEnabled(value) {\n    if (this.host.inputElement) {\n      this.host.inputElement.inputMode = value ? '' : 'none';\n    }\n  }\n}\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAaA,yBAAyB;EACpC;AACF;AACA;EACE,SAAAA,0BAAYC,IAAI,EAAE;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAH,yBAAA;IAChB,IAAI,CAACC,IAAI,GAAGA,IAAI;IAEhBA,IAAI,CAACG,gBAAgB,CAAC,gBAAgB,EAAE,YAAM;MAC5C,IAAI,CAACH,IAAI,CAACI,MAAM,EAAE;QAChB;QACAH,KAAI,CAACI,2BAA2B,CAAC,KAAK,CAAC;MACzC;IACF,CAAC,CAAC;;IAEF;IACAL,IAAI,CAACG,gBAAgB,CAAC,MAAM,EAAE;MAAA,OAAMF,KAAI,CAACI,2BAA2B,CAAC,IAAI,CAAC;IAAA,EAAC;;IAE3E;IACAL,IAAI,CAACG,gBAAgB,CAAC,YAAY,EAAE;MAAA,OAAMF,KAAI,CAACI,2BAA2B,CAAC,IAAI,CAAC;IAAA,EAAC;EACnF;;EAEA;EAAAC,YAAA,CAAAP,yBAAA;IAAAQ,GAAA;IAAAC,KAAA,EACA,SAAAH,4BAA4BG,KAAK,EAAE;MACjC,IAAI,IAAI,CAACR,IAAI,CAACS,YAAY,EAAE;QAC1B,IAAI,CAACT,IAAI,CAACS,YAAY,CAACC,SAAS,GAAGF,KAAK,GAAG,EAAE,GAAG,MAAM;MACxD;IACF;EAAC;EAAA,OAAAT,yBAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}