{"ast":null,"code":"import { tinykeys } from \"tinykeys\";\nimport { isComponentLoaded } from \"../common/config/is_component_loaded\";\nimport { mainWindow } from \"../common/dom/get_main_window\";\nimport { showQuickBar } from \"../dialogs/quick-bar/show-dialog-quick-bar\";\nimport { storeState } from \"../util/ha-pref-storage\";\nimport { showToast } from \"../util/toast\";\nimport { extractSearchParamsObject } from \"../common/url/search-params\";\nexport default (superClass => class extends superClass {\n  firstUpdated(changedProps) {\n    super.firstUpdated(changedProps);\n    this.addEventListener(\"hass-enable-shortcuts\", ev => {\n      this._updateHass({\n        enableShortcuts: ev.detail\n      });\n      storeState(this.hass);\n    });\n    mainWindow.addEventListener(\"hass-quick-bar-trigger\", ev => {\n      switch (ev.detail.key) {\n        case \"e\":\n          this._showQuickBar(ev.detail);\n          break;\n        case \"c\":\n          this._showQuickBar(ev.detail, true);\n          break;\n        case \"m\":\n          this._createMyLink(ev.detail);\n          break;\n      }\n    });\n    this._registerShortcut();\n  }\n  _registerShortcut() {\n    tinykeys(window, {\n      // Those are for latin keyboards that have e, c, m keys\n      e: ev => this._showQuickBar(ev),\n      c: ev => this._showQuickBar(ev, true),\n      m: ev => this._createMyLink(ev),\n      // Those are fallbacks for non-latin keyboards that don't have e, c, m keys (qwerty-based shortcuts)\n      KeyE: ev => this._showQuickBar(ev),\n      KeyC: ev => this._showQuickBar(ev, true),\n      KeyM: ev => this._createMyLink(ev)\n    });\n  }\n  _showQuickBar(e, commandMode = false) {\n    if (!this._canShowQuickBar(e)) {\n      return;\n    }\n    if (e.defaultPrevented) {\n      return;\n    }\n    e.preventDefault();\n    showQuickBar(this, {\n      commandMode\n    });\n  }\n  async _createMyLink(e) {\n    var _this$hass;\n    if (!((_this$hass = this.hass) !== null && _this$hass !== void 0 && _this$hass.enableShortcuts) || !this._canOverrideAlphanumericInput(e)) {\n      return;\n    }\n    if (e.defaultPrevented) {\n      return;\n    }\n    e.preventDefault();\n    const targetPath = mainWindow.location.pathname;\n    const isHassio = isComponentLoaded(this.hass, \"hassio\");\n    const myParams = new URLSearchParams();\n    if (isHassio && targetPath.startsWith(\"/hassio\")) {\n      const myPanelSupervisor = await import(\"../../hassio/src/hassio-my-redirect\");\n      for (const [slug, redirect] of Object.entries(myPanelSupervisor.REDIRECTS)) {\n        if (targetPath.startsWith(redirect.redirect)) {\n          myParams.append(\"redirect\", slug);\n          if (redirect.redirect === \"/hassio/addon\") {\n            myParams.append(\"addon\", targetPath.split(\"/\")[3]);\n          }\n          window.open(`https://my.home-assistant.io/create-link/?${myParams.toString()}`, \"_blank\");\n          return;\n        }\n      }\n    }\n    const myPanel = await import(\"../panels/my/ha-panel-my\");\n    for (const [slug, redirect] of Object.entries(myPanel.getMyRedirects(isHassio))) {\n      if (targetPath.startsWith(redirect.redirect)) {\n        myParams.append(\"redirect\", slug);\n        if (redirect.params) {\n          const params = extractSearchParamsObject();\n          for (const key of Object.keys(redirect.params)) {\n            if (key in params) {\n              myParams.append(key, params[key]);\n            }\n          }\n        }\n        window.open(`https://my.home-assistant.io/create-link/?${myParams.toString()}`, \"_blank\");\n        return;\n      }\n    }\n    showToast(this, {\n      message: this.hass.localize(\"ui.notification_toast.no_matching_link_found\", {\n        path: targetPath\n      })\n    });\n  }\n  _canShowQuickBar(e) {\n    var _this$hass2;\n    return ((_this$hass2 = this.hass) === null || _this$hass2 === void 0 || (_this$hass2 = _this$hass2.user) === null || _this$hass2 === void 0 ? void 0 : _this$hass2.is_admin) && this.hass.enableShortcuts && this._canOverrideAlphanumericInput(e);\n  }\n  _canOverrideAlphanumericInput(e) {\n    var _el$parentElement;\n    const el = e.composedPath()[0];\n    if (el.tagName === \"TEXTAREA\") {\n      return false;\n    }\n    if (((_el$parentElement = el.parentElement) === null || _el$parentElement === void 0 ? void 0 : _el$parentElement.tagName) === \"HA-SELECT\") {\n      return false;\n    }\n    if (el.tagName !== \"INPUT\") {\n      return true;\n    }\n    switch (el.type) {\n      case \"button\":\n      case \"checkbox\":\n      case \"hidden\":\n      case \"radio\":\n      case \"range\":\n        return true;\n      default:\n        return false;\n    }\n  }\n});","map":{"version":3,"names":["tinykeys","isComponentLoaded","mainWindow","showQuickBar","storeState","showToast","extractSearchParamsObject","superClass","firstUpdated","changedProps","addEventListener","ev","_updateHass","enableShortcuts","detail","hass","key","_showQuickBar","_createMyLink","_registerShortcut","window","e","c","m","KeyE","KeyC","KeyM","commandMode","_canShowQuickBar","defaultPrevented","preventDefault","_this$hass","_canOverrideAlphanumericInput","targetPath","location","pathname","isHassio","myParams","URLSearchParams","startsWith","myPanelSupervisor","slug","redirect","Object","entries","REDIRECTS","append","split","open","toString","myPanel","getMyRedirects","params","keys","message","localize","path","_this$hass2","user","is_admin","_el$parentElement","el","composedPath","tagName","parentElement","type"],"sources":["/workspaces/frontend/src/state/quick-bar-mixin.ts"],"sourcesContent":["import type { PropertyValues } from \"lit\";\nimport { tinykeys } from \"tinykeys\";\nimport { isComponentLoaded } from \"../common/config/is_component_loaded\";\nimport { mainWindow } from \"../common/dom/get_main_window\";\nimport {\n  QuickBarParams,\n  showQuickBar,\n} from \"../dialogs/quick-bar/show-dialog-quick-bar\";\nimport { Constructor, HomeAssistant } from \"../types\";\nimport { storeState } from \"../util/ha-pref-storage\";\nimport { showToast } from \"../util/toast\";\nimport { HassElement } from \"./hass-element\";\nimport { extractSearchParamsObject } from \"../common/url/search-params\";\n\ndeclare global {\n  interface HASSDomEvents {\n    \"hass-quick-bar\": QuickBarParams;\n    \"hass-quick-bar-trigger\": KeyboardEvent;\n    \"hass-enable-shortcuts\": HomeAssistant[\"enableShortcuts\"];\n  }\n}\n\nexport default <T extends Constructor<HassElement>>(superClass: T) =>\n  class extends superClass {\n    protected firstUpdated(changedProps: PropertyValues) {\n      super.firstUpdated(changedProps);\n\n      this.addEventListener(\"hass-enable-shortcuts\", (ev) => {\n        this._updateHass({ enableShortcuts: ev.detail });\n        storeState(this.hass!);\n      });\n\n      mainWindow.addEventListener(\"hass-quick-bar-trigger\", (ev) => {\n        switch (ev.detail.key) {\n          case \"e\":\n            this._showQuickBar(ev.detail);\n            break;\n          case \"c\":\n            this._showQuickBar(ev.detail, true);\n            break;\n          case \"m\":\n            this._createMyLink(ev.detail);\n            break;\n        }\n      });\n\n      this._registerShortcut();\n    }\n\n    private _registerShortcut() {\n      tinykeys(window, {\n        // Those are for latin keyboards that have e, c, m keys\n        e: (ev) => this._showQuickBar(ev),\n        c: (ev) => this._showQuickBar(ev, true),\n        m: (ev) => this._createMyLink(ev),\n        // Those are fallbacks for non-latin keyboards that don't have e, c, m keys (qwerty-based shortcuts)\n        KeyE: (ev) => this._showQuickBar(ev),\n        KeyC: (ev) => this._showQuickBar(ev, true),\n        KeyM: (ev) => this._createMyLink(ev),\n      });\n    }\n\n    private _showQuickBar(e: KeyboardEvent, commandMode = false) {\n      if (!this._canShowQuickBar(e)) {\n        return;\n      }\n\n      if (e.defaultPrevented) {\n        return;\n      }\n      e.preventDefault();\n\n      showQuickBar(this, { commandMode });\n    }\n\n    private async _createMyLink(e: KeyboardEvent) {\n      if (\n        !this.hass?.enableShortcuts ||\n        !this._canOverrideAlphanumericInput(e)\n      ) {\n        return;\n      }\n\n      if (e.defaultPrevented) {\n        return;\n      }\n      e.preventDefault();\n\n      const targetPath = mainWindow.location.pathname;\n      const isHassio = isComponentLoaded(this.hass, \"hassio\");\n      const myParams = new URLSearchParams();\n\n      if (isHassio && targetPath.startsWith(\"/hassio\")) {\n        const myPanelSupervisor = await import(\n          \"../../hassio/src/hassio-my-redirect\"\n        );\n        for (const [slug, redirect] of Object.entries(\n          myPanelSupervisor.REDIRECTS\n        )) {\n          if (targetPath.startsWith(redirect.redirect)) {\n            myParams.append(\"redirect\", slug);\n            if (redirect.redirect === \"/hassio/addon\") {\n              myParams.append(\"addon\", targetPath.split(\"/\")[3]);\n            }\n            window.open(\n              `https://my.home-assistant.io/create-link/?${myParams.toString()}`,\n              \"_blank\"\n            );\n            return;\n          }\n        }\n      }\n\n      const myPanel = await import(\"../panels/my/ha-panel-my\");\n\n      for (const [slug, redirect] of Object.entries(\n        myPanel.getMyRedirects(isHassio)\n      )) {\n        if (targetPath.startsWith(redirect.redirect)) {\n          myParams.append(\"redirect\", slug);\n          if (redirect.params) {\n            const params = extractSearchParamsObject();\n            for (const key of Object.keys(redirect.params)) {\n              if (key in params) {\n                myParams.append(key, params[key]);\n              }\n            }\n          }\n          window.open(\n            `https://my.home-assistant.io/create-link/?${myParams.toString()}`,\n            \"_blank\"\n          );\n          return;\n        }\n      }\n      showToast(this, {\n        message: this.hass.localize(\n          \"ui.notification_toast.no_matching_link_found\",\n          {\n            path: targetPath,\n          }\n        ),\n      });\n    }\n\n    private _canShowQuickBar(e: KeyboardEvent) {\n      return (\n        this.hass?.user?.is_admin &&\n        this.hass.enableShortcuts &&\n        this._canOverrideAlphanumericInput(e)\n      );\n    }\n\n    private _canOverrideAlphanumericInput(e: KeyboardEvent) {\n      const el = e.composedPath()[0] as Element;\n\n      if (el.tagName === \"TEXTAREA\") {\n        return false;\n      }\n\n      if (el.parentElement?.tagName === \"HA-SELECT\") {\n        return false;\n      }\n\n      if (el.tagName !== \"INPUT\") {\n        return true;\n      }\n\n      switch ((el as HTMLInputElement).type) {\n        case \"button\":\n        case \"checkbox\":\n        case \"hidden\":\n        case \"radio\":\n        case \"range\":\n          return true;\n        default:\n          return false;\n      }\n    }\n  };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}