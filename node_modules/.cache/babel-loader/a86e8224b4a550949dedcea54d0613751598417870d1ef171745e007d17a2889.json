{"ast":null,"code":"import { computeDomain } from \"../../../common/entity/compute_domain\";\nconst arrayFilter = (array, conditions, maxSize) => {\n  if (!maxSize || maxSize > array.length) {\n    maxSize = array.length;\n  }\n  const filteredArray = [];\n  for (let i = 0; i < array.length && filteredArray.length < maxSize; i++) {\n    let meetsConditions = true;\n    for (const condition of conditions) {\n      if (!condition(array[i])) {\n        meetsConditions = false;\n        break;\n      }\n    }\n    if (meetsConditions) {\n      filteredArray.push(array[i]);\n    }\n  }\n  return filteredArray;\n};\nexport const findEntities = (hass, maxEntities, entities, entitiesFallback, includeDomains, entityFilter) => {\n  const conditions = [];\n  if (includeDomains !== null && includeDomains !== void 0 && includeDomains.length) {\n    conditions.push(eid => includeDomains.includes(computeDomain(eid)));\n  }\n  if (entityFilter) {\n    conditions.push(eid => hass.states[eid] && entityFilter(hass.states[eid]));\n  }\n  const entityIds = arrayFilter(entities, conditions, maxEntities);\n  if (entityIds.length < maxEntities && entitiesFallback.length) {\n    const fallbackEntityIds = findEntities(hass, maxEntities - entityIds.length, entitiesFallback, [], includeDomains, entityFilter);\n    entityIds.push(...fallbackEntityIds);\n  }\n  return entityIds;\n};","map":{"version":3,"names":["computeDomain","arrayFilter","array","conditions","maxSize","length","filteredArray","i","meetsConditions","condition","push","findEntities","hass","maxEntities","entities","entitiesFallback","includeDomains","entityFilter","eid","includes","states","entityIds","fallbackEntityIds"],"sources":["/workspaces/frontend/src/panels/lovelace/common/find-entities.ts"],"sourcesContent":["import { HassEntity } from \"home-assistant-js-websocket\";\nimport { computeDomain } from \"../../../common/entity/compute_domain\";\nimport { HomeAssistant } from \"../../../types\";\n\nconst arrayFilter = (\n  array: any[],\n  conditions: Array<(value: any) => boolean>,\n  maxSize: number\n) => {\n  if (!maxSize || maxSize > array.length) {\n    maxSize = array.length;\n  }\n\n  const filteredArray: any[] = [];\n\n  for (let i = 0; i < array.length && filteredArray.length < maxSize; i++) {\n    let meetsConditions = true;\n\n    for (const condition of conditions) {\n      if (!condition(array[i])) {\n        meetsConditions = false;\n        break;\n      }\n    }\n\n    if (meetsConditions) {\n      filteredArray.push(array[i]);\n    }\n  }\n\n  return filteredArray;\n};\n\nexport const findEntities = (\n  hass: HomeAssistant,\n  maxEntities: number,\n  entities: string[],\n  entitiesFallback: string[],\n  includeDomains?: string[],\n  entityFilter?: (stateObj: HassEntity) => boolean\n) => {\n  const conditions: Array<(value: string) => boolean> = [];\n\n  if (includeDomains?.length) {\n    conditions.push((eid) => includeDomains!.includes(computeDomain(eid)));\n  }\n\n  if (entityFilter) {\n    conditions.push(\n      (eid) => hass.states[eid] && entityFilter(hass.states[eid])\n    );\n  }\n\n  const entityIds = arrayFilter(entities, conditions, maxEntities);\n\n  if (entityIds.length < maxEntities && entitiesFallback.length) {\n    const fallbackEntityIds = findEntities(\n      hass,\n      maxEntities - entityIds.length,\n      entitiesFallback,\n      [],\n      includeDomains,\n      entityFilter\n    );\n\n    entityIds.push(...fallbackEntityIds);\n  }\n\n  return entityIds;\n};\n"],"mappings":"AACA,SAASA,aAAa,QAAQ,uCAAuC;AAGrE,MAAMC,WAAW,GAAGA,CAClBC,KAAY,EACZC,UAA0C,EAC1CC,OAAe,KACZ;EACH,IAAI,CAACA,OAAO,IAAIA,OAAO,GAAGF,KAAK,CAACG,MAAM,EAAE;IACtCD,OAAO,GAAGF,KAAK,CAACG,MAAM;EACxB;EAEA,MAAMC,aAAoB,GAAG,EAAE;EAE/B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,KAAK,CAACG,MAAM,IAAIC,aAAa,CAACD,MAAM,GAAGD,OAAO,EAAEG,CAAC,EAAE,EAAE;IACvE,IAAIC,eAAe,GAAG,IAAI;IAE1B,KAAK,MAAMC,SAAS,IAAIN,UAAU,EAAE;MAClC,IAAI,CAACM,SAAS,CAACP,KAAK,CAACK,CAAC,CAAC,CAAC,EAAE;QACxBC,eAAe,GAAG,KAAK;QACvB;MACF;IACF;IAEA,IAAIA,eAAe,EAAE;MACnBF,aAAa,CAACI,IAAI,CAACR,KAAK,CAACK,CAAC,CAAC,CAAC;IAC9B;EACF;EAEA,OAAOD,aAAa;AACtB,CAAC;AAED,OAAO,MAAMK,YAAY,GAAGA,CAC1BC,IAAmB,EACnBC,WAAmB,EACnBC,QAAkB,EAClBC,gBAA0B,EAC1BC,cAAyB,EACzBC,YAAgD,KAC7C;EACH,MAAMd,UAA6C,GAAG,EAAE;EAExD,IAAIa,cAAc,aAAdA,cAAc,eAAdA,cAAc,CAAEX,MAAM,EAAE;IAC1BF,UAAU,CAACO,IAAI,CAAEQ,GAAG,IAAKF,cAAc,CAAEG,QAAQ,CAACnB,aAAa,CAACkB,GAAG,CAAC,CAAC,CAAC;EACxE;EAEA,IAAID,YAAY,EAAE;IAChBd,UAAU,CAACO,IAAI,CACZQ,GAAG,IAAKN,IAAI,CAACQ,MAAM,CAACF,GAAG,CAAC,IAAID,YAAY,CAACL,IAAI,CAACQ,MAAM,CAACF,GAAG,CAAC,CAC5D,CAAC;EACH;EAEA,MAAMG,SAAS,GAAGpB,WAAW,CAACa,QAAQ,EAAEX,UAAU,EAAEU,WAAW,CAAC;EAEhE,IAAIQ,SAAS,CAAChB,MAAM,GAAGQ,WAAW,IAAIE,gBAAgB,CAACV,MAAM,EAAE;IAC7D,MAAMiB,iBAAiB,GAAGX,YAAY,CACpCC,IAAI,EACJC,WAAW,GAAGQ,SAAS,CAAChB,MAAM,EAC9BU,gBAAgB,EAChB,EAAE,EACFC,cAAc,EACdC,YACF,CAAC;IAEDI,SAAS,CAACX,IAAI,CAAC,GAAGY,iBAAiB,CAAC;EACtC;EAEA,OAAOD,SAAS;AAClB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}