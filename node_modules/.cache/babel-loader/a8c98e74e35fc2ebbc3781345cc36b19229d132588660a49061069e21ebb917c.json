{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { SubscribeMixin } from \"../mixins/subscribe-mixin\";\nimport \"./ha-area-picker\";\nexport let HaAreasPicker = _decorate([customElement(\"ha-areas-picker\")], function (_initialize, _SubscribeMixin) {\n  class HaAreasPicker extends _SubscribeMixin {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaAreasPicker,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"label\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Array\n      })],\n      key: \"value\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"helper\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"placeholder\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        attribute: \"no-add\"\n      })],\n      key: \"noAdd\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Array,\n        attribute: \"include-domains\"\n      })],\n      key: \"includeDomains\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Array,\n        attribute: \"exclude-domains\"\n      })],\n      key: \"excludeDomains\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Array,\n        attribute: \"include-device-classes\"\n      })],\n      key: \"includeDeviceClasses\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"deviceFilter\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"entityFilter\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: \"picked-area-label\"\n      })],\n      key: \"pickedAreaLabel\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: \"pick-area-label\"\n      })],\n      key: \"pickAreaLabel\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"disabled\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"required\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value:\n      /**\n       * Show only areas with entities from specific domains.\n       * @type {Array}\n       * @attr include-domains\n       */\n\n      /**\n       * Show no areas with entities of these domains.\n       * @type {Array}\n       * @attr exclude-domains\n       */\n\n      /**\n       * Show only areas with entities of these device classes.\n       * @type {Array}\n       * @attr include-device-classes\n       */\n\n      function render() {\n        if (!this.hass) {\n          return nothing;\n        }\n        const currentAreas = this._currentAreas;\n        return html`\n      ${currentAreas.map(area => html`\n          <div>\n            <ha-area-picker\n              .curValue=${area}\n              .noAdd=${this.noAdd}\n              .hass=${this.hass}\n              .value=${area}\n              .label=${this.pickedAreaLabel}\n              .includeDomains=${this.includeDomains}\n              .excludeDomains=${this.excludeDomains}\n              .includeDeviceClasses=${this.includeDeviceClasses}\n              .deviceFilter=${this.deviceFilter}\n              .entityFilter=${this.entityFilter}\n              .disabled=${this.disabled}\n              @value-changed=${this._areaChanged}\n            ></ha-area-picker>\n          </div>\n        `)}\n      <div>\n        <ha-area-picker\n          .noAdd=${this.noAdd}\n          .hass=${this.hass}\n          .label=${this.pickAreaLabel}\n          .helper=${this.helper}\n          .includeDomains=${this.includeDomains}\n          .excludeDomains=${this.excludeDomains}\n          .includeDeviceClasses=${this.includeDeviceClasses}\n          .deviceFilter=${this.deviceFilter}\n          .entityFilter=${this.entityFilter}\n          .disabled=${this.disabled}\n          .placeholder=${this.placeholder}\n          .required=${this.required && !currentAreas.length}\n          @value-changed=${this._addArea}\n          .excludeAreas=${currentAreas}\n        ></ha-area-picker>\n      </div>\n    `;\n      }\n    }, {\n      kind: \"get\",\n      key: \"_currentAreas\",\n      value: function _currentAreas() {\n        return this.value || [];\n      }\n    }, {\n      kind: \"method\",\n      key: \"_updateAreas\",\n      value: async function _updateAreas(areas) {\n        this.value = areas;\n        fireEvent(this, \"value-changed\", {\n          value: areas\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_areaChanged\",\n      value: function _areaChanged(ev) {\n        ev.stopPropagation();\n        const curValue = ev.currentTarget.curValue;\n        const newValue = ev.detail.value;\n        if (newValue === curValue) {\n          return;\n        }\n        const currentAreas = this._currentAreas;\n        if (!newValue || currentAreas.includes(newValue)) {\n          this._updateAreas(currentAreas.filter(ent => ent !== curValue));\n          return;\n        }\n        this._updateAreas(currentAreas.map(ent => ent === curValue ? newValue : ent));\n      }\n    }, {\n      kind: \"method\",\n      key: \"_addArea\",\n      value: function _addArea(ev) {\n        ev.stopPropagation();\n        const toAdd = ev.detail.value;\n        if (!toAdd) {\n          return;\n        }\n        ev.currentTarget.value = \"\";\n        const currentAreas = this._currentAreas;\n        if (currentAreas.includes(toAdd)) {\n          return;\n        }\n        this._updateAreas([...currentAreas, toAdd]);\n      }\n    }, {\n      kind: \"field\",\n      static: true,\n      key: \"styles\",\n      value() {\n        return css`\n    div {\n      margin-top: 8px;\n    }\n  `;\n      }\n    }]\n  };\n}, SubscribeMixin(LitElement));","map":{"version":3,"names":["css","html","LitElement","nothing","customElement","property","fireEvent","SubscribeMixin","HaAreasPicker","_decorate","_initialize","_SubscribeMixin","constructor","args","F","d","kind","decorators","attribute","key","value","type","Array","Boolean","render","hass","currentAreas","_currentAreas","map","area","noAdd","pickedAreaLabel","includeDomains","excludeDomains","includeDeviceClasses","deviceFilter","entityFilter","disabled","_areaChanged","pickAreaLabel","helper","placeholder","required","length","_addArea","_updateAreas","areas","ev","stopPropagation","curValue","currentTarget","newValue","detail","includes","filter","ent","toAdd","static"],"sources":["/workspaces/frontend/src/components/ha-areas-picker.ts"],"sourcesContent":["import { HassEntity } from \"home-assistant-js-websocket\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { SubscribeMixin } from \"../mixins/subscribe-mixin\";\nimport type { HomeAssistant } from \"../types\";\nimport type { HaDevicePickerDeviceFilterFunc } from \"./device/ha-device-picker\";\nimport \"./ha-area-picker\";\n\n@customElement(\"ha-areas-picker\")\nexport class HaAreasPicker extends SubscribeMixin(LitElement) {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property() public label?: string;\n\n  @property({ type: Array }) public value?: string[];\n\n  @property() public helper?: string;\n\n  @property() public placeholder?: string;\n\n  @property({ type: Boolean, attribute: \"no-add\" })\n  public noAdd = false;\n\n  /**\n   * Show only areas with entities from specific domains.\n   * @type {Array}\n   * @attr include-domains\n   */\n  @property({ type: Array, attribute: \"include-domains\" })\n  public includeDomains?: string[];\n\n  /**\n   * Show no areas with entities of these domains.\n   * @type {Array}\n   * @attr exclude-domains\n   */\n  @property({ type: Array, attribute: \"exclude-domains\" })\n  public excludeDomains?: string[];\n\n  /**\n   * Show only areas with entities of these device classes.\n   * @type {Array}\n   * @attr include-device-classes\n   */\n  @property({ type: Array, attribute: \"include-device-classes\" })\n  public includeDeviceClasses?: string[];\n\n  @property({ attribute: false })\n  public deviceFilter?: HaDevicePickerDeviceFilterFunc;\n\n  @property({ attribute: false })\n  public entityFilter?: (entity: HassEntity) => boolean;\n\n  @property({ attribute: \"picked-area-label\" })\n  public pickedAreaLabel?: string;\n\n  @property({ attribute: \"pick-area-label\" })\n  public pickAreaLabel?: string;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @property({ type: Boolean }) public required = false;\n\n  protected render() {\n    if (!this.hass) {\n      return nothing;\n    }\n\n    const currentAreas = this._currentAreas;\n    return html`\n      ${currentAreas.map(\n        (area) => html`\n          <div>\n            <ha-area-picker\n              .curValue=${area}\n              .noAdd=${this.noAdd}\n              .hass=${this.hass}\n              .value=${area}\n              .label=${this.pickedAreaLabel}\n              .includeDomains=${this.includeDomains}\n              .excludeDomains=${this.excludeDomains}\n              .includeDeviceClasses=${this.includeDeviceClasses}\n              .deviceFilter=${this.deviceFilter}\n              .entityFilter=${this.entityFilter}\n              .disabled=${this.disabled}\n              @value-changed=${this._areaChanged}\n            ></ha-area-picker>\n          </div>\n        `\n      )}\n      <div>\n        <ha-area-picker\n          .noAdd=${this.noAdd}\n          .hass=${this.hass}\n          .label=${this.pickAreaLabel}\n          .helper=${this.helper}\n          .includeDomains=${this.includeDomains}\n          .excludeDomains=${this.excludeDomains}\n          .includeDeviceClasses=${this.includeDeviceClasses}\n          .deviceFilter=${this.deviceFilter}\n          .entityFilter=${this.entityFilter}\n          .disabled=${this.disabled}\n          .placeholder=${this.placeholder}\n          .required=${this.required && !currentAreas.length}\n          @value-changed=${this._addArea}\n          .excludeAreas=${currentAreas}\n        ></ha-area-picker>\n      </div>\n    `;\n  }\n\n  private get _currentAreas(): string[] {\n    return this.value || [];\n  }\n\n  private async _updateAreas(areas) {\n    this.value = areas;\n\n    fireEvent(this, \"value-changed\", {\n      value: areas,\n    });\n  }\n\n  private _areaChanged(ev: CustomEvent) {\n    ev.stopPropagation();\n    const curValue = (ev.currentTarget as any).curValue;\n    const newValue = ev.detail.value;\n    if (newValue === curValue) {\n      return;\n    }\n    const currentAreas = this._currentAreas;\n    if (!newValue || currentAreas.includes(newValue)) {\n      this._updateAreas(currentAreas.filter((ent) => ent !== curValue));\n      return;\n    }\n    this._updateAreas(\n      currentAreas.map((ent) => (ent === curValue ? newValue : ent))\n    );\n  }\n\n  private _addArea(ev: CustomEvent) {\n    ev.stopPropagation();\n\n    const toAdd = ev.detail.value;\n    if (!toAdd) {\n      return;\n    }\n    (ev.currentTarget as any).value = \"\";\n    const currentAreas = this._currentAreas;\n    if (currentAreas.includes(toAdd)) {\n      return;\n    }\n\n    this._updateAreas([...currentAreas, toAdd]);\n  }\n\n  static override styles = css`\n    div {\n      margin-top: 8px;\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-areas-picker\": HaAreasPicker;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}