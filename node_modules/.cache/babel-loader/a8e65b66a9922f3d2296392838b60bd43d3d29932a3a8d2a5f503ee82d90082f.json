{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/helpers/regeneratorRuntime\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10, _templateObject11, _templateObject12, _templateObject13, _templateObject14, _templateObject15, _templateObject16;\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.object.entries.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"@material/mwc-list/mwc-list-item\";\nvar mdiCheck = \"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\";\nvar mdiContentDuplicate = \"M11,17H4A2,2 0 0,1 2,15V3A2,2 0 0,1 4,1H16V3H4V15H11V13L15,16L11,19V17M19,21V7H8V13H6V7A2,2 0 0,1 8,5H19A2,2 0 0,1 21,7V21A2,2 0 0,1 19,23H8A2,2 0 0,1 6,21V19H8V21H19Z\";\nvar mdiContentSave = \"M15,9H5V5H15M12,19A3,3 0 0,1 9,16A3,3 0 0,1 12,13A3,3 0 0,1 15,16A3,3 0 0,1 12,19M17,3H5C3.89,3 3,3.9 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V7L17,3Z\";\nvar mdiDelete = \"M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z\";\nvar mdiDotsVertical = \"M12,16A2,2 0 0,1 14,18A2,2 0 0,1 12,20A2,2 0 0,1 10,18A2,2 0 0,1 12,16M12,10A2,2 0 0,1 14,12A2,2 0 0,1 12,14A2,2 0 0,1 10,12A2,2 0 0,1 12,10M12,4A2,2 0 0,1 14,6A2,2 0 0,1 12,8A2,2 0 0,1 10,6A2,2 0 0,1 12,4Z\";\nvar mdiFormTextbox = \"M17,7H22V17H17V19A1,1 0 0,0 18,20H20V22H17.5C16.95,22 16,21.55 16,21C16,21.55 15.05,22 14.5,22H12V20H14A1,1 0 0,0 15,19V5A1,1 0 0,0 14,4H12V2H14.5C15.05,2 16,2.45 16,3C16,2.45 16.95,2 17.5,2H20V4H18A1,1 0 0,0 17,5V7M2,7H13V9H4V15H13V17H2V7M20,15V9H17V15H20Z\";\nvar mdiInformationOutline = \"M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M11,17H13V11H11V17Z\";\nvar mdiPlay = \"M8,5.14V19.14L19,12.14L8,5.14Z\";\nvar mdiTransitConnection = \"M15,12C15,10.7 14.16,9.6 13,9.18V6.82C14.16,6.4 15,5.3 15,4A3,3 0 0,0 12,1A3,3 0 0,0 9,4C9,5.3 9.84,6.4 11,6.82V9.19C9.84,9.6 9,10.7 9,12C9,13.3 9.84,14.4 11,14.82V17.18C9.84,17.6 9,18.7 9,20A3,3 0 0,0 12,23A3,3 0 0,0 15,20C15,18.7 14.16,17.6 13,17.18V14.82C14.16,14.4 15,13.3 15,12M12,3A1,1 0 0,1 13,4A1,1 0 0,1 12,5A1,1 0 0,1 11,4A1,1 0 0,1 12,3M12,21A1,1 0 0,1 11,20A1,1 0 0,1 12,19A1,1 0 0,1 13,20A1,1 0 0,1 12,21Z\";\nimport { LitElement, css, html, nothing } from \"lit\";\nimport { property, query, state } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport memoizeOne from \"memoize-one\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport { navigate } from \"../../../common/navigate\";\nimport { slugify } from \"../../../common/string/slugify\";\nimport { computeRTL } from \"../../../common/util/compute_rtl\";\nimport { afterNextRender } from \"../../../common/util/render-status\";\nimport \"../../../components/ha-button-menu\";\nimport \"../../../components/ha-card\";\nimport \"../../../components/ha-fab\";\nimport \"../../../components/ha-icon-button\";\nimport \"../../../components/ha-svg-icon\";\nimport \"../../../components/ha-yaml-editor\";\nimport { validateConfig } from \"../../../data/config\";\nimport { UNAVAILABLE } from \"../../../data/entity\";\nimport { MODES, deleteScript, fetchScriptFileConfig, getScriptEditorInitData, getScriptStateConfig, isMaxMode, showScriptEditor, triggerScript } from \"../../../data/script\";\nimport { showConfirmationDialog } from \"../../../dialogs/generic/show-dialog-box\";\nimport \"../../../layouts/hass-subpage\";\nimport { KeyboardShortcutMixin } from \"../../../mixins/keyboard-shortcut-mixin\";\nimport { haStyle } from \"../../../resources/styles\";\nimport { documentationUrl } from \"../../../util/documentation-url\";\nimport { showToast } from \"../../../util/toast\";\nimport \"./blueprint-script-editor\";\nimport \"./manual-script-editor\";\nexport var HaScriptEditor = _decorate(null, function (_initialize, _KeyboardShortcutMixi) {\n  var HaScriptEditor = /*#__PURE__*/function (_KeyboardShortcutMixi2) {\n    _inherits(HaScriptEditor, _KeyboardShortcutMixi2);\n    function HaScriptEditor() {\n      var _this;\n      _classCallCheck(this, HaScriptEditor);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, HaScriptEditor, [].concat(args));\n      _initialize(_assertThisInitialized(_this));\n      return _this;\n    }\n    return _createClass(HaScriptEditor);\n  }(_KeyboardShortcutMixi);\n  return {\n    F: HaScriptEditor,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"scriptId\",\n      value: function value() {\n        return null;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"entityId\",\n      value: function value() {\n        return null;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"route\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"isWide\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"narrow\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"entityRegistry\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_config\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_entityId\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_idError\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_dirty\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_errors\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_mode\",\n      value: function value() {\n        return \"gui\";\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_readOnly\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [query(\"manual-script-editor\")],\n      key: \"_manualEditor\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_validationErrors\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_schema\",\n      value: function value() {\n        var _this2 = this;\n        return memoizeOne(function (hasID, useBluePrint, currentMode) {\n          return [{\n            name: \"alias\",\n            selector: {\n              text: {\n                type: \"text\"\n              }\n            }\n          }, {\n            name: \"icon\",\n            selector: {\n              icon: {}\n            }\n          }].concat(_toConsumableArray(!hasID ? [{\n            name: \"id\",\n            selector: {\n              text: {\n                prefix: \"script.\"\n              }\n            }\n          }] : []), _toConsumableArray(!useBluePrint ? [{\n            name: \"mode\",\n            selector: {\n              select: {\n                mode: \"dropdown\",\n                options: MODES.map(function (mode) {\n                  return {\n                    label: _this2.hass.localize(\"ui.panel.config.script.editor.modes.\".concat(mode)),\n                    value: mode\n                  };\n                })\n              }\n            }\n          }] : []), _toConsumableArray(currentMode && isMaxMode(currentMode) ? [{\n            name: \"max\",\n            required: true,\n            selector: {\n              number: {\n                mode: \"box\",\n                min: 1,\n                max: Infinity\n              }\n            }\n          }] : []));\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var _this$_config;\n        if (!this._config) {\n          return nothing;\n        }\n        var stateObj = this._entityId ? this.hass.states[this._entityId] : undefined;\n        var useBlueprint = (\"use_blueprint\" in this._config);\n        var schema = this._schema(!!this.scriptId, useBlueprint, this._config.mode);\n        var data = Object.assign(Object.assign(Object.assign({}, !this._config.mode && !useBlueprint && {\n          mode: MODES[0]\n        }), {}, {\n          icon: undefined,\n          max: this._config.mode && isMaxMode(this._config.mode) ? 10 : undefined\n        }, this._config), {}, {\n          id: this._entityId\n        });\n        return html(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      <hass-subpage\\n        .hass=\", \"\\n        .narrow=\", \"\\n        .route=\", \"\\n        .backCallback=\", \"\\n        .header=\", \"\\n      >\\n        \", \"\\n        <ha-button-menu slot=\\\"toolbar-icon\\\">\\n          <ha-icon-button\\n            slot=\\\"trigger\\\"\\n            .label=\", \"\\n            .path=\", \"\\n          ></ha-icon-button>\\n\\n          <mwc-list-item\\n            graphic=\\\"icon\\\"\\n            .disabled=\", \"\\n            @click=\", \"\\n          >\\n            \", \"\\n            <ha-svg-icon\\n              slot=\\\"graphic\\\"\\n              .path=\", \"\\n            ></ha-svg-icon>\\n          </mwc-list-item>\\n\\n          <mwc-list-item\\n            graphic=\\\"icon\\\"\\n            .disabled=\", \"\\n            @click=\", \"\\n          >\\n            \", \"\\n            <ha-svg-icon slot=\\\"graphic\\\" .path=\", \"></ha-svg-icon>\\n          </mwc-list-item>\\n\\n          \", \"\\n          \", \"\\n\\n          <li divider role=\\\"separator\\\"></li>\\n\\n          <mwc-list-item graphic=\\\"icon\\\" @click=\", \">\\n            \", \"\\n            \", \"\\n          </mwc-list-item>\\n          <mwc-list-item graphic=\\\"icon\\\" @click=\", \">\\n            \", \"\\n            \", \"\\n          </mwc-list-item>\\n\\n          <li divider role=\\\"separator\\\"></li>\\n\\n          <mwc-list-item\\n            .disabled=\", \"\\n            graphic=\\\"icon\\\"\\n            @click=\", \"\\n          >\\n            \", \"\\n            <ha-svg-icon\\n              slot=\\\"graphic\\\"\\n              .path=\", \"\\n            ></ha-svg-icon>\\n          </mwc-list-item>\\n\\n          <mwc-list-item\\n            .disabled=\", \"\\n            class=\", \"\\n            graphic=\\\"icon\\\"\\n            @click=\", \"\\n          >\\n            \", \"\\n            <ha-svg-icon\\n              class=\", \"\\n              slot=\\\"graphic\\\"\\n              .path=\", \"\\n            >\\n            </ha-svg-icon>\\n          </mwc-list-item>\\n        </ha-button-menu>\\n        <div\\n          class=\\\"content \", \"\\\"\\n        >\\n          \", \"\\n          \", \"\\n          \", \"\\n        </div>\\n        <ha-fab\\n          slot=\\\"fab\\\"\\n          .label=\", \"\\n          extended\\n          @click=\", \"\\n          class=\", \"\\n        >\\n          <ha-svg-icon slot=\\\"icon\\\" .path=\", \"></ha-svg-icon>\\n        </ha-fab>\\n      </hass-subpage>\\n    \"])), this.hass, this.narrow, this.route, this._backTapped, !((_this$_config = this._config) !== null && _this$_config !== void 0 && _this$_config.alias) ? \"\" : this._config.alias, this.scriptId && !this.narrow ? html(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n              <mwc-button @click=\", \" slot=\\\"toolbar-icon\\\">\\n                \", \"\\n              </mwc-button>\\n            \"])), this._showTrace, this.hass.localize(\"ui.panel.config.script.editor.show_trace\")) : \"\", this.hass.localize(\"ui.common.menu\"), mdiDotsVertical, !this.scriptId, this._showInfo, this.hass.localize(\"ui.panel.config.script.editor.show_info\"), mdiInformationOutline, !this.scriptId, this._runScript, this.hass.localize(\"ui.panel.config.script.picker.run_script\"), mdiPlay, !useBlueprint && !(\"fields\" in this._config) ? html(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n                <mwc-list-item graphic=\\\"icon\\\" @click=\", \">\\n                  \", \"\\n                  <ha-svg-icon\\n                    slot=\\\"graphic\\\"\\n                    .path=\", \"\\n                  ></ha-svg-icon>\\n                </mwc-list-item>\\n              \"])), this._addFields, this.hass.localize(\"ui.panel.config.script.editor.field.add_fields\"), mdiFormTextbox) : nothing, this.scriptId && this.narrow ? html(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n                <a href=\\\"/config/script/trace/\", \"\\\">\\n                  <mwc-list-item graphic=\\\"icon\\\">\\n                    \", \"\\n                    <ha-svg-icon\\n                      slot=\\\"graphic\\\"\\n                      .path=\", \"\\n                    ></ha-svg-icon>\\n                  </mwc-list-item>\\n                </a>\\n              \"])), this.scriptId, this.hass.localize(\"ui.panel.config.script.editor.show_trace\"), mdiTransitConnection) : \"\", this._switchUiMode, this.hass.localize(\"ui.panel.config.automation.editor.edit_ui\"), this._mode === \"gui\" ? html(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"\\n                  <ha-svg-icon\\n                    class=\\\"selected_menu_item\\\"\\n                    slot=\\\"graphic\\\"\\n                    .path=\", \"\\n                  ></ha-svg-icon>\\n                \"])), mdiCheck) : \"\", this._switchYamlMode, this.hass.localize(\"ui.panel.config.automation.editor.edit_yaml\"), this._mode === \"yaml\" ? html(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"\\n                  <ha-svg-icon\\n                    class=\\\"selected_menu_item\\\"\\n                    slot=\\\"graphic\\\"\\n                    .path=\", \"\\n                  ></ha-svg-icon>\\n                \"])), mdiCheck) : \"\", !this._readOnly && !this.scriptId, this._duplicate, this.hass.localize(this._readOnly ? \"ui.panel.config.script.editor.migrate\" : \"ui.panel.config.script.editor.duplicate\"), mdiContentDuplicate, this._readOnly || !this.scriptId, classMap({\n          warning: Boolean(this.scriptId)\n        }), this._deleteConfirm, this.hass.localize(\"ui.panel.config.script.picker.delete\"), classMap({\n          warning: Boolean(this.scriptId)\n        }), mdiDelete, classMap({\n          \"yaml-mode\": this._mode === \"yaml\"\n        }), this._errors || (stateObj === null || stateObj === void 0 ? void 0 : stateObj.state) === UNAVAILABLE ? html(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral([\"\\n                <ha-alert\\n                  alert-type=\\\"error\\\"\\n                  .title=\", \"\\n                >\\n                  \", \"\\n                </ha-alert>\\n              \"])), (stateObj === null || stateObj === void 0 ? void 0 : stateObj.state) === UNAVAILABLE ? this.hass.localize(\"ui.panel.config.script.editor.unavailable\") : undefined, this._errors || this._validationErrors) : \"\", this._readOnly ? html(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral([\"<ha-alert alert-type=\\\"warning\\\">\\n                \", \"\\n                <mwc-button slot=\\\"action\\\" @click=\", \">\\n                  \", \"\\n                </mwc-button>\\n              </ha-alert>\"])), this.hass.localize(\"ui.panel.config.script.editor.read_only\"), this._duplicate, this.hass.localize(\"ui.panel.config.script.editor.migrate\")) : \"\", this._mode === \"gui\" ? html(_templateObject9 || (_templateObject9 = _taggedTemplateLiteral([\"\\n                <div\\n                  class=\", \"\\n                >\\n                  \", \"\\n                </div>\\n              \"])), classMap({\n          rtl: computeRTL(this.hass)\n        }), this._config ? html(_templateObject10 || (_templateObject10 = _taggedTemplateLiteral([\"\\n                        <div class=\\\"config-container\\\">\\n                          <ha-card outlined>\\n                            <div class=\\\"card-content\\\">\\n                              <ha-form\\n                                .schema=\", \"\\n                                .data=\", \"\\n                                .hass=\", \"\\n                                .disabled=\", \"\\n                                .computeLabel=\", \"\\n                                .computeHelper=\", \"\\n                                @value-changed=\", \"\\n                              ></ha-form>\\n                            </div>\\n                          </ha-card>\\n                        </div>\\n\\n                        \", \"\\n                      \"])), schema, data, this.hass, this._readOnly, this._computeLabelCallback, this._computeHelperCallback, this._valueChanged, useBlueprint ? html(_templateObject11 || (_templateObject11 = _taggedTemplateLiteral([\"\\n                              <blueprint-script-editor\\n                                .hass=\", \"\\n                                .narrow=\", \"\\n                                .isWide=\", \"\\n                                .config=\", \"\\n                                .disabled=\", \"\\n                                @duplicate=\", \"\\n                                @value-changed=\", \"\\n                              ></blueprint-script-editor>\\n                            \"])), this.hass, this.narrow, this.isWide, this._config, this._readOnly, this._duplicate, this._configChanged) : html(_templateObject12 || (_templateObject12 = _taggedTemplateLiteral([\"\\n                              <manual-script-editor\\n                                .hass=\", \"\\n                                .narrow=\", \"\\n                                .isWide=\", \"\\n                                .config=\", \"\\n                                .disabled=\", \"\\n                                @duplicate=\", \"\\n                                @value-changed=\", \"\\n                              ></manual-script-editor>\\n                            \"])), this.hass, this.narrow, this.isWide, this._config, this._readOnly, this._duplicate, this._configChanged)) : \"\") : this._mode === \"yaml\" ? html(_templateObject13 || (_templateObject13 = _taggedTemplateLiteral([\" <ha-yaml-editor\\n                  copyClipboard\\n                  .hass=\", \"\\n                  .defaultValue=\", \"\\n                  .readOnly=\", \"\\n                  @value-changed=\", \"\\n                ></ha-yaml-editor>\"])), this.hass, this._preprocessYaml(), this._readOnly, this._yamlChanged) : nothing, this.hass.localize(\"ui.panel.config.script.editor.save_script\"), this._saveScript, classMap({\n          dirty: this._dirty\n        }), mdiContentSave);\n      }\n    }, {\n      kind: \"method\",\n      key: \"updated\",\n      value: function updated(changedProps) {\n        var _this3 = this;\n        _get(_getPrototypeOf(HaScriptEditor.prototype), \"updated\", this).call(this, changedProps);\n        var oldScript = changedProps.get(\"scriptId\");\n        if (changedProps.has(\"scriptId\") && this.scriptId && !this.entityId && this.hass && (\n        // Only refresh config if we picked a new script. If same ID, don't fetch it.\n        !oldScript || oldScript !== this.scriptId)) {\n          fetchScriptFileConfig(this.hass, this.scriptId).then(function (config) {\n            _this3._dirty = false;\n            _this3._readOnly = false;\n            _this3._config = _this3._normalizeConfig(config);\n            var entity = _this3.entityRegistry.find(function (ent) {\n              return ent.platform === \"script\" && ent.unique_id === _this3.scriptId;\n            });\n            _this3._entityId = entity === null || entity === void 0 ? void 0 : entity.entity_id;\n            _this3._checkValidation();\n          }, function (resp) {\n            var entity = _this3.entityRegistry.find(function (ent) {\n              return ent.platform === \"script\" && ent.unique_id === _this3.scriptId;\n            });\n            if (entity) {\n              navigate(\"/config/script/show/\".concat(entity.entity_id), {\n                replace: true\n              });\n              return;\n            }\n            alert(resp.status_code === 404 ? _this3.hass.localize(\"ui.panel.config.script.editor.load_error_not_editable\") : _this3.hass.localize(\"ui.panel.config.script.editor.load_error_unknown\", {\n              err_no: resp.status_code || resp.code\n            }));\n            history.back();\n          });\n        }\n        if (changedProps.has(\"scriptId\") && !this.scriptId && this.hass) {\n          var initData = getScriptEditorInitData();\n          this._dirty = !!initData;\n          var baseConfig = {\n            alias: this.hass.localize(\"ui.panel.config.script.editor.default_name\")\n          };\n          if (!initData || !(\"use_blueprint\" in initData)) {\n            baseConfig.sequence = [];\n          }\n          this._config = Object.assign(Object.assign({}, baseConfig), initData);\n          this._readOnly = false;\n        }\n        if (changedProps.has(\"entityId\") && this.entityId) {\n          getScriptStateConfig(this.hass, this.entityId).then(function (c) {\n            _this3._config = _this3._normalizeConfig(c.config);\n            _this3._checkValidation();\n          });\n          var regEntry = this.entityRegistry.find(function (ent) {\n            return ent.entity_id === _this3.entityId;\n          });\n          if (regEntry !== null && regEntry !== void 0 && regEntry.unique_id) {\n            this.scriptId = regEntry.unique_id;\n          }\n          this._entityId = this.entityId;\n          this._dirty = false;\n          this._readOnly = true;\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_normalizeConfig\",\n      value: function _normalizeConfig(config) {\n        // Normalize data: ensure sequence is a list\n        // Happens when people copy paste their scripts into the config\n        var value = config.sequence;\n        if (value && !Array.isArray(value)) {\n          config.sequence = [value];\n        }\n        return config;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_checkValidation\",\n      value: function () {\n        var _checkValidation2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n          var _this4 = this;\n          var stateObj, validation;\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                this._validationErrors = undefined;\n                if (!(!this._entityId || !this._config)) {\n                  _context.next = 3;\n                  break;\n                }\n                return _context.abrupt(\"return\");\n              case 3:\n                stateObj = this.hass.states[this._entityId];\n                if (!((stateObj === null || stateObj === void 0 ? void 0 : stateObj.state) !== UNAVAILABLE)) {\n                  _context.next = 6;\n                  break;\n                }\n                return _context.abrupt(\"return\");\n              case 6:\n                _context.next = 8;\n                return validateConfig(this.hass, {\n                  action: this._config.sequence\n                });\n              case 8:\n                validation = _context.sent;\n                this._validationErrors = Object.entries(validation).map(function (_ref) {\n                  var _ref2 = _slicedToArray(_ref, 2),\n                    key = _ref2[0],\n                    value = _ref2[1];\n                  return value.valid ? \"\" : html(_templateObject14 || (_templateObject14 = _taggedTemplateLiteral([\"\", \":\\n            \", \"<br />\"])), _this4.hass.localize(\"ui.panel.config.automation.editor.\".concat(key, \"s.name\")), value.error);\n                });\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee, this);\n        }));\n        function _checkValidation() {\n          return _checkValidation2.apply(this, arguments);\n        }\n        return _checkValidation;\n      }()\n    }, {\n      kind: \"field\",\n      key: \"_computeLabelCallback\",\n      value: function value() {\n        var _this5 = this;\n        return function (schema, data) {\n          switch (schema.name) {\n            case \"mode\":\n              return _this5.hass.localize(\"ui.panel.config.script.editor.modes.label\");\n            case \"max\":\n              // Mode must be one of max modes per schema definition above\n              return _this5.hass.localize(\"ui.panel.config.script.editor.max.\".concat(data.mode));\n            default:\n              return _this5.hass.localize(\"ui.panel.config.script.editor.\".concat(schema.name));\n          }\n        };\n      }\n    }, {\n      kind: \"field\",\n      key: \"_computeHelperCallback\",\n      value: function value() {\n        var _this6 = this;\n        return function (schema) {\n          if (schema.name === \"mode\") {\n            return html(_templateObject15 || (_templateObject15 = _taggedTemplateLiteral([\"\\n        <a\\n          style=\\\"color: var(--secondary-text-color)\\\"\\n          href=\", \"\\n          target=\\\"_blank\\\"\\n          rel=\\\"noreferrer\\\"\\n          >\", \"</a\\n        >\\n      \"])), documentationUrl(_this6.hass, \"/integrations/script/#script-modes\"), _this6.hass.localize(\"ui.panel.config.script.editor.modes.learn_more\"));\n          }\n          return undefined;\n        };\n      }\n    }, {\n      kind: \"method\",\n      key: \"_showInfo\",\n      value: function () {\n        var _showInfo2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n          var _this7 = this;\n          var entity;\n          return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n            while (1) switch (_context2.prev = _context2.next) {\n              case 0:\n                if (this.scriptId) {\n                  _context2.next = 2;\n                  break;\n                }\n                return _context2.abrupt(\"return\");\n              case 2:\n                entity = this.entityRegistry.find(function (entry) {\n                  return entry.unique_id === _this7.scriptId;\n                });\n                if (entity) {\n                  _context2.next = 5;\n                  break;\n                }\n                return _context2.abrupt(\"return\");\n              case 5:\n                fireEvent(this, \"hass-more-info\", {\n                  entityId: entity.entity_id\n                });\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }, _callee2, this);\n        }));\n        function _showInfo() {\n          return _showInfo2.apply(this, arguments);\n        }\n        return _showInfo;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"_showTrace\",\n      value: function () {\n        var _showTrace2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n          var result;\n          return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n            while (1) switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!this.scriptId) {\n                  _context3.next = 5;\n                  break;\n                }\n                _context3.next = 3;\n                return this.confirmUnsavedChanged();\n              case 3:\n                result = _context3.sent;\n                if (result) {\n                  navigate(\"/config/script/trace/\".concat(this.scriptId));\n                }\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }, _callee3, this);\n        }));\n        function _showTrace() {\n          return _showTrace2.apply(this, arguments);\n        }\n        return _showTrace;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"_runScript\",\n      value: function () {\n        var _runScript2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(ev) {\n          return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n            while (1) switch (_context4.prev = _context4.next) {\n              case 0:\n                ev.stopPropagation();\n                _context4.next = 3;\n                return triggerScript(this.hass, this.scriptId);\n              case 3:\n                showToast(this, {\n                  message: this.hass.localize(\"ui.notification_toast.triggered\", {\n                    name: this._config.alias\n                  })\n                });\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }, _callee4, this);\n        }));\n        function _runScript(_x) {\n          return _runScript2.apply(this, arguments);\n        }\n        return _runScript;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"_computeEntityIdFromAlias\",\n      value: function _computeEntityIdFromAlias(alias) {\n        var aliasSlugify = slugify(alias);\n        var id = aliasSlugify;\n        var i = 2;\n        while (this.hass.states[\"script.\".concat(id)]) {\n          id = \"\".concat(aliasSlugify, \"_\").concat(i);\n          i++;\n        }\n        return id;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_setEntityId\",\n      value: function _setEntityId(id) {\n        this._entityId = id;\n        if (this.hass.states[\"script.\".concat(this._entityId)]) {\n          this._idError = true;\n        } else {\n          this._idError = false;\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"updateEntityId\",\n      value: function updateEntityId(newId, newAlias) {\n        var _this$_config$alias, _this$_config2, _this$_entityId;\n        var currentAlias = (_this$_config$alias = (_this$_config2 = this._config) === null || _this$_config2 === void 0 ? void 0 : _this$_config2.alias) !== null && _this$_config$alias !== void 0 ? _this$_config$alias : \"\";\n        var currentEntityId = (_this$_entityId = this._entityId) !== null && _this$_entityId !== void 0 ? _this$_entityId : \"\";\n        if (newId !== this._entityId) {\n          this._setEntityId(newId || undefined);\n          return;\n        }\n        var currentComputedEntity = this._computeEntityIdFromAlias(currentAlias);\n        if (currentComputedEntity === currentEntityId || !this._entityId) {\n          var newComputedId = newAlias ? this._computeEntityIdFromAlias(newAlias) : undefined;\n          this._setEntityId(newComputedId);\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_addFields\",\n      value: function _addFields() {\n        var _this$_manualEditor;\n        if (\"fields\" in this._config) {\n          return;\n        }\n        (_this$_manualEditor = this._manualEditor) === null || _this$_manualEditor === void 0 || _this$_manualEditor.addFields();\n        this._dirty = true;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_valueChanged\",\n      value: function _valueChanged(ev) {\n        var _values$alias;\n        ev.stopPropagation();\n        if (this._readOnly) {\n          return;\n        }\n        this._errors = undefined;\n        var values = ev.detail.value;\n        var changed = false;\n        var newValues = {\n          alias: (_values$alias = values.alias) !== null && _values$alias !== void 0 ? _values$alias : \"\",\n          icon: values.icon,\n          mode: values.mode,\n          max: isMaxMode(values.mode) ? values.max : undefined\n        };\n        if (!this.scriptId) {\n          this.updateEntityId(values.id, values.alias);\n        }\n        for (var _i = 0, _Object$keys = Object.keys(newValues); _i < _Object$keys.length; _i++) {\n          var key = _Object$keys[_i];\n          var value = newValues[key];\n          if (value === this._config[key]) {\n            continue;\n          }\n          if (value === undefined) {\n            var newConfig = Object.assign({}, this._config);\n            delete newConfig[key];\n            this._config = newConfig;\n          } else {\n            this._config = Object.assign(Object.assign({}, this._config), {}, _defineProperty({}, key, value));\n          }\n          changed = true;\n        }\n        if (changed) {\n          this._dirty = true;\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_configChanged\",\n      value: function _configChanged(ev) {\n        this._config = ev.detail.value;\n        this._errors = undefined;\n        this._dirty = true;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_preprocessYaml\",\n      value: function _preprocessYaml() {\n        return this._config;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_yamlChanged\",\n      value: function _yamlChanged(ev) {\n        ev.stopPropagation();\n        if (!ev.detail.isValid) {\n          return;\n        }\n        this._config = ev.detail.value;\n        this._errors = undefined;\n        this._dirty = true;\n      }\n    }, {\n      kind: \"method\",\n      key: \"confirmUnsavedChanged\",\n      value: function () {\n        var _confirmUnsavedChanged = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n          return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n            while (1) switch (_context5.prev = _context5.next) {\n              case 0:\n                if (!this._dirty) {\n                  _context5.next = 2;\n                  break;\n                }\n                return _context5.abrupt(\"return\", showConfirmationDialog(this, {\n                  title: this.hass.localize(\"ui.panel.config.automation.editor.unsaved_confirm_title\"),\n                  text: this.hass.localize(\"ui.panel.config.automation.editor.unsaved_confirm_text\"),\n                  confirmText: this.hass.localize(\"ui.common.leave\"),\n                  dismissText: this.hass.localize(\"ui.common.stay\"),\n                  destructive: true\n                }));\n              case 2:\n                return _context5.abrupt(\"return\", true);\n              case 3:\n              case \"end\":\n                return _context5.stop();\n            }\n          }, _callee5, this);\n        }));\n        function confirmUnsavedChanged() {\n          return _confirmUnsavedChanged.apply(this, arguments);\n        }\n        return confirmUnsavedChanged;\n      }()\n    }, {\n      kind: \"field\",\n      key: \"_backTapped\",\n      value: function value() {\n        var _this8 = this;\n        return /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n          var result;\n          return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n            while (1) switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return _this8.confirmUnsavedChanged();\n              case 2:\n                result = _context6.sent;\n                if (result) {\n                  afterNextRender(function () {\n                    return history.back();\n                  });\n                }\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }, _callee6);\n        }));\n      }\n    }, {\n      kind: \"method\",\n      key: \"_duplicate\",\n      value: function () {\n        var _duplicate2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n          var result, _this$_config3, _this$_config4;\n          return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n            while (1) switch (_context7.prev = _context7.next) {\n              case 0:\n                if (!this._readOnly) {\n                  _context7.next = 6;\n                  break;\n                }\n                _context7.next = 3;\n                return showConfirmationDialog(this, {\n                  title: \"Migrate script?\",\n                  text: \"You can migrate this script, so it can be edited from the UI. After it is migrated and you have saved it, you will have to manually delete your old script from your configuration. Do you want to migrate this script?\"\n                });\n              case 3:\n                _context7.t0 = _context7.sent;\n                _context7.next = 9;\n                break;\n              case 6:\n                _context7.next = 8;\n                return this.confirmUnsavedChanged();\n              case 8:\n                _context7.t0 = _context7.sent;\n              case 9:\n                result = _context7.t0;\n                if (result) {\n                  this._entityId = undefined;\n                  showScriptEditor(Object.assign(Object.assign({}, this._config), {}, {\n                    alias: this._readOnly ? (_this$_config3 = this._config) === null || _this$_config3 === void 0 ? void 0 : _this$_config3.alias : \"\".concat((_this$_config4 = this._config) === null || _this$_config4 === void 0 ? void 0 : _this$_config4.alias, \" (\").concat(this.hass.localize(\"ui.panel.config.script.picker.duplicate\"), \")\")\n                  }));\n                }\n              case 11:\n              case \"end\":\n                return _context7.stop();\n            }\n          }, _callee7, this);\n        }));\n        function _duplicate() {\n          return _duplicate2.apply(this, arguments);\n        }\n        return _duplicate;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"_deleteConfirm\",\n      value: function () {\n        var _deleteConfirm2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n          var _this$_config5,\n            _this9 = this;\n          return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n            while (1) switch (_context8.prev = _context8.next) {\n              case 0:\n                showConfirmationDialog(this, {\n                  title: this.hass.localize(\"ui.panel.config.script.editor.delete_confirm_title\"),\n                  text: this.hass.localize(\"ui.panel.config.script.editor.delete_confirm_text\", {\n                    name: (_this$_config5 = this._config) === null || _this$_config5 === void 0 ? void 0 : _this$_config5.alias\n                  }),\n                  confirmText: this.hass.localize(\"ui.common.delete\"),\n                  dismissText: this.hass.localize(\"ui.common.cancel\"),\n                  confirm: function confirm() {\n                    return _this9._delete();\n                  },\n                  destructive: true\n                });\n              case 1:\n              case \"end\":\n                return _context8.stop();\n            }\n          }, _callee8, this);\n        }));\n        function _deleteConfirm() {\n          return _deleteConfirm2.apply(this, arguments);\n        }\n        return _deleteConfirm;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"_delete\",\n      value: function () {\n        var _delete2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n          return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n            while (1) switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.next = 2;\n                return deleteScript(this.hass, this.scriptId);\n              case 2:\n                history.back();\n              case 3:\n              case \"end\":\n                return _context9.stop();\n            }\n          }, _callee9, this);\n        }));\n        function _delete() {\n          return _delete2.apply(this, arguments);\n        }\n        return _delete;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"_switchUiMode\",\n      value: function _switchUiMode() {\n        this._mode = \"gui\";\n      }\n    }, {\n      kind: \"method\",\n      key: \"_switchYamlMode\",\n      value: function _switchYamlMode() {\n        this._mode = \"yaml\";\n      }\n    }, {\n      kind: \"method\",\n      key: \"_saveScript\",\n      value: function () {\n        var _saveScript2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10() {\n          var id;\n          return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n            while (1) switch (_context10.prev = _context10.next) {\n              case 0:\n                if (!this._idError) {\n                  _context10.next = 3;\n                  break;\n                }\n                showToast(this, {\n                  message: this.hass.localize(\"ui.panel.config.script.editor.id_already_exists_save_error\"),\n                  dismissable: false,\n                  duration: 0,\n                  action: {\n                    action: function action() {},\n                    text: this.hass.localize(\"ui.dialogs.generic.ok\")\n                  }\n                });\n                return _context10.abrupt(\"return\");\n              case 3:\n                id = this.scriptId || this._entityId || Date.now();\n                _context10.prev = 4;\n                _context10.next = 7;\n                return this.hass.callApi(\"POST\", \"config/script/config/\" + id, this._config);\n              case 7:\n                _context10.next = 14;\n                break;\n              case 9:\n                _context10.prev = 9;\n                _context10.t0 = _context10[\"catch\"](4);\n                this._errors = _context10.t0.body.message || _context10.t0.error || _context10.t0.body;\n                showToast(this, {\n                  message: _context10.t0.body.message || _context10.t0.error || _context10.t0.body\n                });\n                throw _context10.t0;\n              case 14:\n                this._dirty = false;\n                if (!this.scriptId) {\n                  navigate(\"/config/script/edit/\".concat(id), {\n                    replace: true\n                  });\n                }\n              case 16:\n              case \"end\":\n                return _context10.stop();\n            }\n          }, _callee10, this, [[4, 9]]);\n        }));\n        function _saveScript() {\n          return _saveScript2.apply(this, arguments);\n        }\n        return _saveScript;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"handleKeyboardSave\",\n      value: function handleKeyboardSave() {\n        this._saveScript();\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [haStyle, css(_templateObject16 || (_templateObject16 = _taggedTemplateLiteral([\"\\n        ha-card {\\n          overflow: hidden;\\n        }\\n        p {\\n          margin-bottom: 0;\\n        }\\n        .errors {\\n          padding: 20px;\\n          font-weight: bold;\\n          color: var(--error-color);\\n        }\\n        .yaml-mode {\\n          height: 100%;\\n          display: flex;\\n          flex-direction: column;\\n          padding-bottom: 0;\\n        }\\n        .config-container,\\n        manual-script-editor,\\n        blueprint-script-editor {\\n          margin: 0 auto;\\n          max-width: 1040px;\\n          padding: 28px 20px 0;\\n        }\\n        .config-container ha-alert {\\n          margin-bottom: 16px;\\n          display: block;\\n        }\\n        ha-yaml-editor {\\n          flex-grow: 1;\\n          --actions-border-radius: 0;\\n          --code-mirror-height: 100%;\\n          min-height: 0;\\n          display: flex;\\n          flex-direction: column;\\n        }\\n        .yaml-mode ha-card {\\n          overflow: initial;\\n          --ha-card-border-radius: 0;\\n          border-bottom: 1px solid var(--divider-color);\\n        }\\n        span[slot=\\\"introduction\\\"] a {\\n          color: var(--primary-color);\\n        }\\n        ha-fab {\\n          position: relative;\\n          bottom: calc(-80px - env(safe-area-inset-bottom));\\n          transition: bottom 0.3s;\\n        }\\n        ha-fab.dirty {\\n          bottom: 0;\\n        }\\n        .selected_menu_item {\\n          color: var(--primary-color);\\n        }\\n        li[role=\\\"separator\\\"] {\\n          border-bottom-color: var(--divider-color);\\n        }\\n        .header {\\n          display: flex;\\n          margin: 16px 0;\\n          align-items: center;\\n        }\\n        .header .name {\\n          font-size: 20px;\\n          font-weight: 400;\\n          flex: 1;\\n        }\\n        .header a {\\n          color: var(--secondary-text-color);\\n        }\\n        ha-button-menu a {\\n          text-decoration: none;\\n          color: var(--primary-color);\\n        }\\n      \"])))];\n      }\n    }]\n  };\n}, KeyboardShortcutMixin(LitElement));\ncustomElements.define(\"ha-script-editor\", HaScriptEditor);","map":{"version":3,"names":["mdiCheck","mdiContentDuplicate","mdiContentSave","mdiDelete","mdiDotsVertical","mdiFormTextbox","mdiInformationOutline","mdiPlay","mdiTransitConnection","LitElement","css","html","nothing","property","query","state","classMap","memoizeOne","fireEvent","navigate","slugify","computeRTL","afterNextRender","validateConfig","UNAVAILABLE","MODES","deleteScript","fetchScriptFileConfig","getScriptEditorInitData","getScriptStateConfig","isMaxMode","showScriptEditor","triggerScript","showConfirmationDialog","KeyboardShortcutMixin","haStyle","documentationUrl","showToast","HaScriptEditor","_decorate","_initialize","_KeyboardShortcutMixi","_KeyboardShortcutMixi2","_inherits","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_assertThisInitialized","_createClass","F","d","kind","decorators","attribute","key","value","type","Boolean","_this2","hasID","useBluePrint","currentMode","name","selector","text","icon","_toConsumableArray","prefix","select","mode","options","map","label","hass","localize","required","number","min","max","Infinity","render","_this$_config","_config","stateObj","_entityId","states","undefined","useBlueprint","schema","_schema","scriptId","data","Object","assign","id","_templateObject","_taggedTemplateLiteral","narrow","route","_backTapped","alias","_templateObject2","_showTrace","_showInfo","_runScript","_templateObject3","_addFields","_templateObject4","_switchUiMode","_mode","_templateObject5","_switchYamlMode","_templateObject6","_readOnly","_duplicate","warning","_deleteConfirm","_errors","_templateObject7","_validationErrors","_templateObject8","_templateObject9","rtl","_templateObject10","_computeLabelCallback","_computeHelperCallback","_valueChanged","_templateObject11","isWide","_configChanged","_templateObject12","_templateObject13","_preprocessYaml","_yamlChanged","_saveScript","dirty","_dirty","updated","changedProps","_this3","_get","_getPrototypeOf","prototype","call","oldScript","get","has","entityId","then","config","_normalizeConfig","entity","entityRegistry","find","ent","platform","unique_id","entity_id","_checkValidation","resp","replace","alert","status_code","err_no","code","history","back","initData","baseConfig","sequence","c","regEntry","isArray","_checkValidation2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_this4","validation","wrap","_callee$","_context","prev","next","abrupt","action","sent","entries","_ref","_ref2","_slicedToArray","valid","_templateObject14","error","stop","apply","_this5","_this6","_templateObject15","_showInfo2","_callee2","_this7","_callee2$","_context2","entry","_showTrace2","_callee3","result","_callee3$","_context3","confirmUnsavedChanged","_runScript2","_callee4","ev","_callee4$","_context4","stopPropagation","message","_x","_computeEntityIdFromAlias","aliasSlugify","i","_setEntityId","_idError","updateEntityId","newId","newAlias","_this$_config$alias","_this$_config2","_this$_entityId","currentAlias","currentEntityId","currentComputedEntity","newComputedId","_this$_manualEditor","_manualEditor","addFields","_values$alias","values","detail","changed","newValues","_i","_Object$keys","keys","newConfig","_defineProperty","isValid","_confirmUnsavedChanged","_callee5","_callee5$","_context5","title","confirmText","dismissText","destructive","_this8","_callee6","_callee6$","_context6","_duplicate2","_callee7","_this$_config3","_this$_config4","_callee7$","_context7","t0","_deleteConfirm2","_callee8","_this$_config5","_this9","_callee8$","_context8","confirm","_delete","_delete2","_callee9","_callee9$","_context9","_saveScript2","_callee10","_callee10$","_context10","dismissable","duration","Date","now","callApi","body","handleKeyboardSave","static","styles","_templateObject16","customElements","define"],"sources":["/workspaces/frontend/src/panels/config/script/ha-script-editor.ts"],"sourcesContent":["import \"@material/mwc-list/mwc-list-item\";\nimport {\n  mdiCheck,\n  mdiContentDuplicate,\n  mdiContentSave,\n  mdiDelete,\n  mdiDotsVertical,\n  mdiFormTextbox,\n  mdiInformationOutline,\n  mdiPlay,\n  mdiTransitConnection,\n} from \"@mdi/js\";\nimport {\n  CSSResultGroup,\n  LitElement,\n  PropertyValues,\n  TemplateResult,\n  css,\n  html,\n  nothing,\n} from \"lit\";\nimport { property, query, state } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport memoizeOne from \"memoize-one\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport { navigate } from \"../../../common/navigate\";\nimport { slugify } from \"../../../common/string/slugify\";\nimport { computeRTL } from \"../../../common/util/compute_rtl\";\nimport { afterNextRender } from \"../../../common/util/render-status\";\nimport \"../../../components/ha-button-menu\";\nimport \"../../../components/ha-card\";\nimport \"../../../components/ha-fab\";\nimport type {\n  HaFormDataContainer,\n  SchemaUnion,\n} from \"../../../components/ha-form/types\";\nimport \"../../../components/ha-icon-button\";\nimport \"../../../components/ha-svg-icon\";\nimport \"../../../components/ha-yaml-editor\";\nimport { validateConfig } from \"../../../data/config\";\nimport { UNAVAILABLE } from \"../../../data/entity\";\nimport { EntityRegistryEntry } from \"../../../data/entity_registry\";\nimport {\n  MODES,\n  MODES_MAX,\n  ScriptConfig,\n  deleteScript,\n  fetchScriptFileConfig,\n  getScriptEditorInitData,\n  getScriptStateConfig,\n  isMaxMode,\n  showScriptEditor,\n  triggerScript,\n} from \"../../../data/script\";\nimport { showConfirmationDialog } from \"../../../dialogs/generic/show-dialog-box\";\nimport \"../../../layouts/hass-subpage\";\nimport { KeyboardShortcutMixin } from \"../../../mixins/keyboard-shortcut-mixin\";\nimport { haStyle } from \"../../../resources/styles\";\nimport type { Entries, HomeAssistant, Route } from \"../../../types\";\nimport { documentationUrl } from \"../../../util/documentation-url\";\nimport { showToast } from \"../../../util/toast\";\nimport \"./blueprint-script-editor\";\nimport \"./manual-script-editor\";\nimport type { HaManualScriptEditor } from \"./manual-script-editor\";\n\nexport class HaScriptEditor extends KeyboardShortcutMixin(LitElement) {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property() public scriptId: string | null = null;\n\n  @property() public entityId: string | null = null;\n\n  @property({ attribute: false }) public route!: Route;\n\n  @property({ type: Boolean }) public isWide = false;\n\n  @property({ type: Boolean }) public narrow = false;\n\n  @property({ attribute: false }) public entityRegistry!: EntityRegistryEntry[];\n\n  @state() private _config?: ScriptConfig;\n\n  @state() private _entityId?: string;\n\n  @state() private _idError = false;\n\n  @state() private _dirty = false;\n\n  @state() private _errors?: string;\n\n  @state() private _mode: \"gui\" | \"yaml\" = \"gui\";\n\n  @state() private _readOnly = false;\n\n  @query(\"manual-script-editor\")\n  private _manualEditor?: HaManualScriptEditor;\n\n  @state() private _validationErrors?: (string | TemplateResult)[];\n\n  private _schema = memoizeOne(\n    (\n      hasID: boolean,\n      useBluePrint?: boolean,\n      currentMode?: (typeof MODES)[number]\n    ) =>\n      [\n        {\n          name: \"alias\",\n          selector: {\n            text: {\n              type: \"text\",\n            },\n          },\n        },\n        {\n          name: \"icon\",\n          selector: {\n            icon: {},\n          },\n        },\n        ...(!hasID\n          ? ([\n              {\n                name: \"id\",\n                selector: {\n                  text: {\n                    prefix: \"script.\",\n                  },\n                },\n              },\n            ] as const)\n          : []),\n        ...(!useBluePrint\n          ? ([\n              {\n                name: \"mode\",\n                selector: {\n                  select: {\n                    mode: \"dropdown\",\n                    options: MODES.map((mode) => ({\n                      label: this.hass.localize(\n                        `ui.panel.config.script.editor.modes.${mode}`\n                      ),\n                      value: mode,\n                    })),\n                  },\n                },\n              },\n            ] as const)\n          : []),\n        ...(currentMode && isMaxMode(currentMode)\n          ? ([\n              {\n                name: \"max\",\n                required: true,\n                selector: {\n                  number: { mode: \"box\", min: 1, max: Infinity },\n                },\n              },\n            ] as const)\n          : []),\n      ] as const\n  );\n\n  protected render() {\n    if (!this._config) {\n      return nothing;\n    }\n\n    const stateObj = this._entityId\n      ? this.hass.states[this._entityId]\n      : undefined;\n\n    const useBlueprint = \"use_blueprint\" in this._config;\n\n    const schema = this._schema(\n      !!this.scriptId,\n      useBlueprint,\n      this._config.mode\n    );\n\n    const data = {\n      ...(!this._config.mode && !useBlueprint && { mode: MODES[0] }),\n      icon: undefined,\n      max: this._config.mode && isMaxMode(this._config.mode) ? 10 : undefined,\n      ...this._config,\n      id: this._entityId,\n    };\n\n    return html`\n      <hass-subpage\n        .hass=${this.hass}\n        .narrow=${this.narrow}\n        .route=${this.route}\n        .backCallback=${this._backTapped}\n        .header=${!this._config?.alias ? \"\" : this._config.alias}\n      >\n        ${this.scriptId && !this.narrow\n          ? html`\n              <mwc-button @click=${this._showTrace} slot=\"toolbar-icon\">\n                ${this.hass.localize(\n                  \"ui.panel.config.script.editor.show_trace\"\n                )}\n              </mwc-button>\n            `\n          : \"\"}\n        <ha-button-menu slot=\"toolbar-icon\">\n          <ha-icon-button\n            slot=\"trigger\"\n            .label=${this.hass.localize(\"ui.common.menu\")}\n            .path=${mdiDotsVertical}\n          ></ha-icon-button>\n\n          <mwc-list-item\n            graphic=\"icon\"\n            .disabled=${!this.scriptId}\n            @click=${this._showInfo}\n          >\n            ${this.hass.localize(\"ui.panel.config.script.editor.show_info\")}\n            <ha-svg-icon\n              slot=\"graphic\"\n              .path=${mdiInformationOutline}\n            ></ha-svg-icon>\n          </mwc-list-item>\n\n          <mwc-list-item\n            graphic=\"icon\"\n            .disabled=${!this.scriptId}\n            @click=${this._runScript}\n          >\n            ${this.hass.localize(\"ui.panel.config.script.picker.run_script\")}\n            <ha-svg-icon slot=\"graphic\" .path=${mdiPlay}></ha-svg-icon>\n          </mwc-list-item>\n\n          ${!useBlueprint && !(\"fields\" in this._config)\n            ? html`\n                <mwc-list-item graphic=\"icon\" @click=${this._addFields}>\n                  ${this.hass.localize(\n                    \"ui.panel.config.script.editor.field.add_fields\"\n                  )}\n                  <ha-svg-icon\n                    slot=\"graphic\"\n                    .path=${mdiFormTextbox}\n                  ></ha-svg-icon>\n                </mwc-list-item>\n              `\n            : nothing}\n          ${this.scriptId && this.narrow\n            ? html`\n                <a href=\"/config/script/trace/${this.scriptId}\">\n                  <mwc-list-item graphic=\"icon\">\n                    ${this.hass.localize(\n                      \"ui.panel.config.script.editor.show_trace\"\n                    )}\n                    <ha-svg-icon\n                      slot=\"graphic\"\n                      .path=${mdiTransitConnection}\n                    ></ha-svg-icon>\n                  </mwc-list-item>\n                </a>\n              `\n            : \"\"}\n\n          <li divider role=\"separator\"></li>\n\n          <mwc-list-item graphic=\"icon\" @click=${this._switchUiMode}>\n            ${this.hass.localize(\"ui.panel.config.automation.editor.edit_ui\")}\n            ${this._mode === \"gui\"\n              ? html`\n                  <ha-svg-icon\n                    class=\"selected_menu_item\"\n                    slot=\"graphic\"\n                    .path=${mdiCheck}\n                  ></ha-svg-icon>\n                `\n              : ``}\n          </mwc-list-item>\n          <mwc-list-item graphic=\"icon\" @click=${this._switchYamlMode}>\n            ${this.hass.localize(\"ui.panel.config.automation.editor.edit_yaml\")}\n            ${this._mode === \"yaml\"\n              ? html`\n                  <ha-svg-icon\n                    class=\"selected_menu_item\"\n                    slot=\"graphic\"\n                    .path=${mdiCheck}\n                  ></ha-svg-icon>\n                `\n              : ``}\n          </mwc-list-item>\n\n          <li divider role=\"separator\"></li>\n\n          <mwc-list-item\n            .disabled=${!this._readOnly && !this.scriptId}\n            graphic=\"icon\"\n            @click=${this._duplicate}\n          >\n            ${this.hass.localize(\n              this._readOnly\n                ? \"ui.panel.config.script.editor.migrate\"\n                : \"ui.panel.config.script.editor.duplicate\"\n            )}\n            <ha-svg-icon\n              slot=\"graphic\"\n              .path=${mdiContentDuplicate}\n            ></ha-svg-icon>\n          </mwc-list-item>\n\n          <mwc-list-item\n            .disabled=${this._readOnly || !this.scriptId}\n            class=${classMap({ warning: Boolean(this.scriptId) })}\n            graphic=\"icon\"\n            @click=${this._deleteConfirm}\n          >\n            ${this.hass.localize(\"ui.panel.config.script.picker.delete\")}\n            <ha-svg-icon\n              class=${classMap({ warning: Boolean(this.scriptId) })}\n              slot=\"graphic\"\n              .path=${mdiDelete}\n            >\n            </ha-svg-icon>\n          </mwc-list-item>\n        </ha-button-menu>\n        <div\n          class=\"content ${classMap({\n            \"yaml-mode\": this._mode === \"yaml\",\n          })}\"\n        >\n          ${this._errors || stateObj?.state === UNAVAILABLE\n            ? html`\n                <ha-alert\n                  alert-type=\"error\"\n                  .title=${stateObj?.state === UNAVAILABLE\n                    ? this.hass.localize(\n                        \"ui.panel.config.script.editor.unavailable\"\n                      )\n                    : undefined}\n                >\n                  ${this._errors || this._validationErrors}\n                </ha-alert>\n              `\n            : \"\"}\n          ${this._readOnly\n            ? html`<ha-alert alert-type=\"warning\">\n                ${this.hass.localize(\"ui.panel.config.script.editor.read_only\")}\n                <mwc-button slot=\"action\" @click=${this._duplicate}>\n                  ${this.hass.localize(\"ui.panel.config.script.editor.migrate\")}\n                </mwc-button>\n              </ha-alert>`\n            : \"\"}\n          ${this._mode === \"gui\"\n            ? html`\n                <div\n                  class=${classMap({\n                    rtl: computeRTL(this.hass),\n                  })}\n                >\n                  ${this._config\n                    ? html`\n                        <div class=\"config-container\">\n                          <ha-card outlined>\n                            <div class=\"card-content\">\n                              <ha-form\n                                .schema=${schema}\n                                .data=${data}\n                                .hass=${this.hass}\n                                .disabled=${this._readOnly}\n                                .computeLabel=${this._computeLabelCallback}\n                                .computeHelper=${this._computeHelperCallback}\n                                @value-changed=${this._valueChanged}\n                              ></ha-form>\n                            </div>\n                          </ha-card>\n                        </div>\n\n                        ${useBlueprint\n                          ? html`\n                              <blueprint-script-editor\n                                .hass=${this.hass}\n                                .narrow=${this.narrow}\n                                .isWide=${this.isWide}\n                                .config=${this._config}\n                                .disabled=${this._readOnly}\n                                @duplicate=${this._duplicate}\n                                @value-changed=${this._configChanged}\n                              ></blueprint-script-editor>\n                            `\n                          : html`\n                              <manual-script-editor\n                                .hass=${this.hass}\n                                .narrow=${this.narrow}\n                                .isWide=${this.isWide}\n                                .config=${this._config}\n                                .disabled=${this._readOnly}\n                                @duplicate=${this._duplicate}\n                                @value-changed=${this._configChanged}\n                              ></manual-script-editor>\n                            `}\n                      `\n                    : \"\"}\n                </div>\n              `\n            : this._mode === \"yaml\"\n              ? html` <ha-yaml-editor\n                  copyClipboard\n                  .hass=${this.hass}\n                  .defaultValue=${this._preprocessYaml()}\n                  .readOnly=${this._readOnly}\n                  @value-changed=${this._yamlChanged}\n                ></ha-yaml-editor>`\n              : nothing}\n        </div>\n        <ha-fab\n          slot=\"fab\"\n          .label=${this.hass.localize(\n            \"ui.panel.config.script.editor.save_script\"\n          )}\n          extended\n          @click=${this._saveScript}\n          class=${classMap({\n            dirty: this._dirty,\n          })}\n        >\n          <ha-svg-icon slot=\"icon\" .path=${mdiContentSave}></ha-svg-icon>\n        </ha-fab>\n      </hass-subpage>\n    `;\n  }\n\n  protected updated(changedProps: PropertyValues): void {\n    super.updated(changedProps);\n\n    const oldScript = changedProps.get(\"scriptId\");\n    if (\n      changedProps.has(\"scriptId\") &&\n      this.scriptId &&\n      !this.entityId &&\n      this.hass &&\n      // Only refresh config if we picked a new script. If same ID, don't fetch it.\n      (!oldScript || oldScript !== this.scriptId)\n    ) {\n      fetchScriptFileConfig(this.hass, this.scriptId).then(\n        (config) => {\n          this._dirty = false;\n          this._readOnly = false;\n          this._config = this._normalizeConfig(config);\n          const entity = this.entityRegistry.find(\n            (ent) =>\n              ent.platform === \"script\" && ent.unique_id === this.scriptId\n          );\n          this._entityId = entity?.entity_id;\n          this._checkValidation();\n        },\n        (resp) => {\n          const entity = this.entityRegistry.find(\n            (ent) =>\n              ent.platform === \"script\" && ent.unique_id === this.scriptId\n          );\n          if (entity) {\n            navigate(`/config/script/show/${entity.entity_id}`, {\n              replace: true,\n            });\n            return;\n          }\n          alert(\n            resp.status_code === 404\n              ? this.hass.localize(\n                  \"ui.panel.config.script.editor.load_error_not_editable\"\n                )\n              : this.hass.localize(\n                  \"ui.panel.config.script.editor.load_error_unknown\",\n                  { err_no: resp.status_code || resp.code }\n                )\n          );\n          history.back();\n        }\n      );\n    }\n\n    if (changedProps.has(\"scriptId\") && !this.scriptId && this.hass) {\n      const initData = getScriptEditorInitData();\n      this._dirty = !!initData;\n      const baseConfig: Partial<ScriptConfig> = {\n        alias: this.hass.localize(\"ui.panel.config.script.editor.default_name\"),\n      };\n      if (!initData || !(\"use_blueprint\" in initData)) {\n        baseConfig.sequence = [];\n      }\n      this._config = {\n        ...baseConfig,\n        ...initData,\n      } as ScriptConfig;\n      this._readOnly = false;\n    }\n\n    if (changedProps.has(\"entityId\") && this.entityId) {\n      getScriptStateConfig(this.hass, this.entityId).then((c) => {\n        this._config = this._normalizeConfig(c.config);\n        this._checkValidation();\n      });\n      const regEntry = this.entityRegistry.find(\n        (ent) => ent.entity_id === this.entityId\n      );\n      if (regEntry?.unique_id) {\n        this.scriptId = regEntry.unique_id;\n      }\n      this._entityId = this.entityId;\n      this._dirty = false;\n      this._readOnly = true;\n    }\n  }\n\n  private _normalizeConfig(config: ScriptConfig): ScriptConfig {\n    // Normalize data: ensure sequence is a list\n    // Happens when people copy paste their scripts into the config\n    const value = config.sequence;\n    if (value && !Array.isArray(value)) {\n      config.sequence = [value];\n    }\n    return config;\n  }\n\n  private async _checkValidation() {\n    this._validationErrors = undefined;\n    if (!this._entityId || !this._config) {\n      return;\n    }\n    const stateObj = this.hass.states[this._entityId];\n    if (stateObj?.state !== UNAVAILABLE) {\n      return;\n    }\n    const validation = await validateConfig(this.hass, {\n      action: this._config.sequence,\n    });\n    this._validationErrors = (\n      Object.entries(validation) as Entries<typeof validation>\n    ).map(([key, value]) =>\n      value.valid\n        ? \"\"\n        : html`${this.hass.localize(\n              `ui.panel.config.automation.editor.${key}s.name`\n            )}:\n            ${value.error}<br />`\n    );\n  }\n\n  private _computeLabelCallback = (\n    schema: SchemaUnion<ReturnType<typeof this._schema>>,\n    data: HaFormDataContainer\n  ): string => {\n    switch (schema.name) {\n      case \"mode\":\n        return this.hass.localize(\"ui.panel.config.script.editor.modes.label\");\n      case \"max\":\n        // Mode must be one of max modes per schema definition above\n        return this.hass.localize(\n          `ui.panel.config.script.editor.max.${\n            data.mode as (typeof MODES_MAX)[number]\n          }`\n        );\n      default:\n        return this.hass.localize(\n          `ui.panel.config.script.editor.${schema.name}`\n        );\n    }\n  };\n\n  private _computeHelperCallback = (\n    schema: SchemaUnion<ReturnType<typeof this._schema>>\n  ): string | undefined | TemplateResult => {\n    if (schema.name === \"mode\") {\n      return html`\n        <a\n          style=\"color: var(--secondary-text-color)\"\n          href=${documentationUrl(\n            this.hass,\n            \"/integrations/script/#script-modes\"\n          )}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          >${this.hass.localize(\n            \"ui.panel.config.script.editor.modes.learn_more\"\n          )}</a\n        >\n      `;\n    }\n    return undefined;\n  };\n\n  private async _showInfo() {\n    if (!this.scriptId) {\n      return;\n    }\n    const entity = this.entityRegistry.find(\n      (entry) => entry.unique_id === this.scriptId\n    );\n    if (!entity) {\n      return;\n    }\n    fireEvent(this, \"hass-more-info\", { entityId: entity.entity_id });\n  }\n\n  private async _showTrace() {\n    if (this.scriptId) {\n      const result = await this.confirmUnsavedChanged();\n      if (result) {\n        navigate(`/config/script/trace/${this.scriptId}`);\n      }\n    }\n  }\n\n  private async _runScript(ev: CustomEvent) {\n    ev.stopPropagation();\n    await triggerScript(this.hass, this.scriptId!);\n    showToast(this, {\n      message: this.hass.localize(\"ui.notification_toast.triggered\", {\n        name: this._config!.alias,\n      }),\n    });\n  }\n\n  private _computeEntityIdFromAlias(alias: string) {\n    const aliasSlugify = slugify(alias);\n    let id = aliasSlugify;\n    let i = 2;\n    while (this.hass.states[`script.${id}`]) {\n      id = `${aliasSlugify}_${i}`;\n      i++;\n    }\n    return id;\n  }\n\n  private _setEntityId(id?: string) {\n    this._entityId = id;\n    if (this.hass.states[`script.${this._entityId}`]) {\n      this._idError = true;\n    } else {\n      this._idError = false;\n    }\n  }\n\n  private updateEntityId(\n    newId: string | undefined,\n    newAlias: string | undefined\n  ) {\n    const currentAlias = this._config?.alias ?? \"\";\n    const currentEntityId = this._entityId ?? \"\";\n\n    if (newId !== this._entityId) {\n      this._setEntityId(newId || undefined);\n      return;\n    }\n\n    const currentComputedEntity = this._computeEntityIdFromAlias(currentAlias);\n\n    if (currentComputedEntity === currentEntityId || !this._entityId) {\n      const newComputedId = newAlias\n        ? this._computeEntityIdFromAlias(newAlias)\n        : undefined;\n\n      this._setEntityId(newComputedId);\n    }\n  }\n\n  private _addFields() {\n    if (\"fields\" in this._config!) {\n      return;\n    }\n    this._manualEditor?.addFields();\n    this._dirty = true;\n  }\n\n  private _valueChanged(ev: CustomEvent) {\n    ev.stopPropagation();\n    if (this._readOnly) {\n      return;\n    }\n    this._errors = undefined;\n    const values = ev.detail.value as any;\n\n    let changed = false;\n    const newValues: Omit<ScriptConfig, \"sequence\"> = {\n      alias: values.alias ?? \"\",\n      icon: values.icon,\n      mode: values.mode,\n      max: isMaxMode(values.mode) ? values.max : undefined,\n    };\n\n    if (!this.scriptId) {\n      this.updateEntityId(values.id, values.alias);\n    }\n\n    for (const key of Object.keys(newValues)) {\n      const value = newValues[key];\n\n      if (value === this._config![key]) {\n        continue;\n      }\n      if (value === undefined) {\n        const newConfig = { ...this._config! };\n        delete newConfig![key];\n        this._config = newConfig;\n      } else {\n        this._config = { ...this._config!, [key]: value };\n      }\n      changed = true;\n    }\n\n    if (changed) {\n      this._dirty = true;\n    }\n  }\n\n  private _configChanged(ev) {\n    this._config = ev.detail.value;\n    this._errors = undefined;\n    this._dirty = true;\n  }\n\n  private _preprocessYaml() {\n    return this._config;\n  }\n\n  private _yamlChanged(ev: CustomEvent) {\n    ev.stopPropagation();\n    if (!ev.detail.isValid) {\n      return;\n    }\n    this._config = ev.detail.value;\n    this._errors = undefined;\n    this._dirty = true;\n  }\n\n  private async confirmUnsavedChanged(): Promise<boolean> {\n    if (this._dirty) {\n      return showConfirmationDialog(this, {\n        title: this.hass!.localize(\n          \"ui.panel.config.automation.editor.unsaved_confirm_title\"\n        ),\n        text: this.hass!.localize(\n          \"ui.panel.config.automation.editor.unsaved_confirm_text\"\n        ),\n        confirmText: this.hass!.localize(\"ui.common.leave\"),\n        dismissText: this.hass!.localize(\"ui.common.stay\"),\n        destructive: true,\n      });\n    }\n    return true;\n  }\n\n  private _backTapped = async () => {\n    const result = await this.confirmUnsavedChanged();\n    if (result) {\n      afterNextRender(() => history.back());\n    }\n  };\n\n  private async _duplicate() {\n    const result = this._readOnly\n      ? await showConfirmationDialog(this, {\n          title: \"Migrate script?\",\n          text: \"You can migrate this script, so it can be edited from the UI. After it is migrated and you have saved it, you will have to manually delete your old script from your configuration. Do you want to migrate this script?\",\n        })\n      : await this.confirmUnsavedChanged();\n    if (result) {\n      this._entityId = undefined;\n      showScriptEditor({\n        ...this._config,\n        alias: this._readOnly\n          ? this._config?.alias\n          : `${this._config?.alias} (${this.hass.localize(\n              \"ui.panel.config.script.picker.duplicate\"\n            )})`,\n      });\n    }\n  }\n\n  private async _deleteConfirm() {\n    showConfirmationDialog(this, {\n      title: this.hass.localize(\n        \"ui.panel.config.script.editor.delete_confirm_title\"\n      ),\n      text: this.hass.localize(\n        \"ui.panel.config.script.editor.delete_confirm_text\",\n        { name: this._config?.alias }\n      ),\n      confirmText: this.hass!.localize(\"ui.common.delete\"),\n      dismissText: this.hass!.localize(\"ui.common.cancel\"),\n      confirm: () => this._delete(),\n      destructive: true,\n    });\n  }\n\n  private async _delete() {\n    await deleteScript(this.hass, this.scriptId!);\n    history.back();\n  }\n\n  private _switchUiMode() {\n    this._mode = \"gui\";\n  }\n\n  private _switchYamlMode() {\n    this._mode = \"yaml\";\n  }\n\n  private async _saveScript(): Promise<void> {\n    if (this._idError) {\n      showToast(this, {\n        message: this.hass.localize(\n          \"ui.panel.config.script.editor.id_already_exists_save_error\"\n        ),\n        dismissable: false,\n        duration: 0,\n        action: {\n          action: () => {},\n          text: this.hass.localize(\"ui.dialogs.generic.ok\"),\n        },\n      });\n      return;\n    }\n\n    const id = this.scriptId || this._entityId || Date.now();\n    try {\n      await this.hass!.callApi(\n        \"POST\",\n        \"config/script/config/\" + id,\n        this._config\n      );\n    } catch (errors: any) {\n      this._errors = errors.body.message || errors.error || errors.body;\n      showToast(this, {\n        message: errors.body.message || errors.error || errors.body,\n      });\n      throw errors;\n    }\n\n    this._dirty = false;\n\n    if (!this.scriptId) {\n      navigate(`/config/script/edit/${id}`, { replace: true });\n    }\n  }\n\n  protected handleKeyboardSave() {\n    this._saveScript();\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyle,\n      css`\n        ha-card {\n          overflow: hidden;\n        }\n        p {\n          margin-bottom: 0;\n        }\n        .errors {\n          padding: 20px;\n          font-weight: bold;\n          color: var(--error-color);\n        }\n        .yaml-mode {\n          height: 100%;\n          display: flex;\n          flex-direction: column;\n          padding-bottom: 0;\n        }\n        .config-container,\n        manual-script-editor,\n        blueprint-script-editor {\n          margin: 0 auto;\n          max-width: 1040px;\n          padding: 28px 20px 0;\n        }\n        .config-container ha-alert {\n          margin-bottom: 16px;\n          display: block;\n        }\n        ha-yaml-editor {\n          flex-grow: 1;\n          --actions-border-radius: 0;\n          --code-mirror-height: 100%;\n          min-height: 0;\n          display: flex;\n          flex-direction: column;\n        }\n        .yaml-mode ha-card {\n          overflow: initial;\n          --ha-card-border-radius: 0;\n          border-bottom: 1px solid var(--divider-color);\n        }\n        span[slot=\"introduction\"] a {\n          color: var(--primary-color);\n        }\n        ha-fab {\n          position: relative;\n          bottom: calc(-80px - env(safe-area-inset-bottom));\n          transition: bottom 0.3s;\n        }\n        ha-fab.dirty {\n          bottom: 0;\n        }\n        .selected_menu_item {\n          color: var(--primary-color);\n        }\n        li[role=\"separator\"] {\n          border-bottom-color: var(--divider-color);\n        }\n        .header {\n          display: flex;\n          margin: 16px 0;\n          align-items: center;\n        }\n        .header .name {\n          font-size: 20px;\n          font-weight: 400;\n          flex: 1;\n        }\n        .header a {\n          color: var(--secondary-text-color);\n        }\n        ha-button-menu a {\n          text-decoration: none;\n          color: var(--primary-color);\n        }\n      `,\n    ];\n  }\n}\n\ncustomElements.define(\"ha-script-editor\", HaScriptEditor);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-script-editor\": HaScriptEditor;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}