{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\n/**\n * @license\n * Copyright (c) 2016 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { nothing, render } from 'lit';\nimport { AsyncDirective } from 'lit/async-directive.js';\nimport { PartType } from 'lit/directive.js';\n\n// A symbol indicating that the directive hasn't been initialized.\nvar VALUE_NOT_INITIALIZED = Symbol('valueNotInitialized');\nexport var LitRendererDirective = /*#__PURE__*/function (_AsyncDirective) {\n  _inherits(LitRendererDirective, _AsyncDirective);\n  function LitRendererDirective(part) {\n    var _this;\n    _classCallCheck(this, LitRendererDirective);\n    _this = _callSuper(this, LitRendererDirective, [part]);\n    if (part.type !== PartType.ELEMENT) {\n      throw new Error(\"`\".concat(_this.constructor.name, \"` must be bound to an element.\"));\n    }\n    _this.previousValue = VALUE_NOT_INITIALIZED;\n    return _this;\n  }\n\n  /** @override */\n  _createClass(LitRendererDirective, [{\n    key: \"render\",\n    value: function render(_renderer, _value) {\n      return nothing;\n    }\n\n    /** @override */\n  }, {\n    key: \"update\",\n    value: function update(part, _ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n        renderer = _ref2[0],\n        value = _ref2[1];\n      if (!this.hasChanged(value)) {\n        return nothing;\n      }\n      this.host = part.options && part.options.host;\n      this.element = part.element;\n      this.renderer = renderer;\n      var firstRender = this.previousValue === VALUE_NOT_INITIALIZED;\n      if (firstRender) {\n        this.addRenderer();\n      } else {\n        this.runRenderer();\n      }\n\n      // Copy the value if it is an array in order to keep it\n      // from possible outside mutations.\n      this.previousValue = Array.isArray(value) ? _toConsumableArray(value) : value;\n      return nothing;\n    }\n\n    /** @override */\n  }, {\n    key: \"reconnected\",\n    value: function reconnected() {\n      this.addRenderer();\n    }\n\n    /** @override */\n  }, {\n    key: \"disconnected\",\n    value: function disconnected() {\n      this.removeRenderer();\n    }\n\n    /** @abstract */\n  }, {\n    key: \"addRenderer\",\n    value: function addRenderer() {\n      throw new Error('The `addRenderer` method must be implemented.');\n    }\n\n    /** @abstract */\n  }, {\n    key: \"runRenderer\",\n    value: function runRenderer() {\n      throw new Error('The `runRenderer` method must be implemented.');\n    }\n\n    /** @abstract */\n  }, {\n    key: \"removeRenderer\",\n    value: function removeRenderer() {\n      throw new Error('The `removeRenderer` method must be implemented.');\n    }\n\n    /** @protected */\n  }, {\n    key: \"renderRenderer\",\n    value: function renderRenderer(container) {\n      var _this$renderer;\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n      // Note that a renderer result is not necessarily a `TemplateResult`\n      // instance, as Lit allows returning any value from a renderer. The concrete\n      // list of types we allow as render results is defined in the Typescript\n      // `LitRendererResult` type.\n      var templateResult = (_this$renderer = this.renderer).call.apply(_this$renderer, [this.host].concat(args));\n      render(templateResult, container, {\n        host: this.host\n      });\n    }\n\n    /** @protected */\n  }, {\n    key: \"hasChanged\",\n    value: function hasChanged(value) {\n      var _this2 = this;\n      if (Array.isArray(value)) {\n        if (!Array.isArray(this.previousValue)) {\n          return true;\n        }\n        if (this.previousValue.length !== value.length) {\n          return true;\n        }\n\n        // For arrays, perform shallow dirty checking for each element.\n        return value.some(function (v, i) {\n          return v !== _this2.previousValue[i];\n        });\n      }\n      return this.previousValue !== value;\n    }\n  }]);\n  return LitRendererDirective;\n}(AsyncDirective);","map":{"version":3,"names":["nothing","render","AsyncDirective","PartType","VALUE_NOT_INITIALIZED","Symbol","LitRendererDirective","_AsyncDirective","_inherits","part","_this","_classCallCheck","_callSuper","type","ELEMENT","Error","concat","constructor","name","previousValue","_createClass","key","value","_renderer","_value","update","_ref","_ref2","_slicedToArray","renderer","hasChanged","host","options","element","firstRender","addRenderer","runRenderer","Array","isArray","_toConsumableArray","reconnected","disconnected","removeRenderer","renderRenderer","container","_this$renderer","_len","arguments","length","args","_key","templateResult","call","apply","_this2","some","v","i"],"sources":["/workspaces/frontend/node_modules/@vaadin/lit-renderer/src/lit-renderer.js"],"sourcesContent":["/**\n * @license\n * Copyright (c) 2016 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { nothing, render } from 'lit';\nimport { AsyncDirective } from 'lit/async-directive.js';\nimport { PartType } from 'lit/directive.js';\n\n// A symbol indicating that the directive hasn't been initialized.\nconst VALUE_NOT_INITIALIZED = Symbol('valueNotInitialized');\n\nexport class LitRendererDirective extends AsyncDirective {\n  constructor(part) {\n    super(part);\n\n    if (part.type !== PartType.ELEMENT) {\n      throw new Error(`\\`${this.constructor.name}\\` must be bound to an element.`);\n    }\n\n    this.previousValue = VALUE_NOT_INITIALIZED;\n  }\n\n  /** @override */\n  render(_renderer, _value) {\n    return nothing;\n  }\n\n  /** @override */\n  update(part, [renderer, value]) {\n    if (!this.hasChanged(value)) {\n      return nothing;\n    }\n\n    this.host = part.options && part.options.host;\n    this.element = part.element;\n    this.renderer = renderer;\n\n    const firstRender = this.previousValue === VALUE_NOT_INITIALIZED;\n    if (firstRender) {\n      this.addRenderer();\n    } else {\n      this.runRenderer();\n    }\n\n    // Copy the value if it is an array in order to keep it\n    // from possible outside mutations.\n    this.previousValue = Array.isArray(value) ? [...value] : value;\n\n    return nothing;\n  }\n\n  /** @override */\n  reconnected() {\n    this.addRenderer();\n  }\n\n  /** @override */\n  disconnected() {\n    this.removeRenderer();\n  }\n\n  /** @abstract */\n  addRenderer() {\n    throw new Error('The `addRenderer` method must be implemented.');\n  }\n\n  /** @abstract */\n  runRenderer() {\n    throw new Error('The `runRenderer` method must be implemented.');\n  }\n\n  /** @abstract */\n  removeRenderer() {\n    throw new Error('The `removeRenderer` method must be implemented.');\n  }\n\n  /** @protected */\n  renderRenderer(container, ...args) {\n    // Note that a renderer result is not necessarily a `TemplateResult`\n    // instance, as Lit allows returning any value from a renderer. The concrete\n    // list of types we allow as render results is defined in the Typescript\n    // `LitRendererResult` type.\n    const templateResult = this.renderer.call(this.host, ...args);\n    render(templateResult, container, { host: this.host });\n  }\n\n  /** @protected */\n  hasChanged(value) {\n    if (Array.isArray(value)) {\n      if (!Array.isArray(this.previousValue)) {\n        return true;\n      }\n\n      if (this.previousValue.length !== value.length) {\n        return true;\n      }\n\n      // For arrays, perform shallow dirty checking for each element.\n      return value.some((v, i) => v !== this.previousValue[i]);\n    }\n\n    return this.previousValue !== value;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}