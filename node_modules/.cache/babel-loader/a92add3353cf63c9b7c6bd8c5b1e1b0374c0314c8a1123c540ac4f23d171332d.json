{"ast":null,"code":"import { atLeastVersion } from \"../../common/config/version\";\nimport { hassioApiResultExtractor } from \"./common\";\nexport const friendlyFolderName = {\n  ssl: \"SSL\",\n  homeassistant: \"Configuration\",\n  \"addons/local\": \"Local add-ons\",\n  media: \"Media\",\n  share: \"Share\"\n};\nexport const fetchHassioBackups = async hass => {\n  if (atLeastVersion(hass.config.version, 2021, 2, 4)) {\n    const data = await hass.callWS({\n      type: \"supervisor/api\",\n      endpoint: `/${atLeastVersion(hass.config.version, 2021, 9) ? \"backups\" : \"snapshots\"}`,\n      method: \"get\"\n    });\n    return data[atLeastVersion(hass.config.version, 2021, 9) ? \"backups\" : \"snapshots\"];\n  }\n  return hassioApiResultExtractor(await hass.callApi(\"GET\", `hassio/${atLeastVersion(hass.config.version, 2021, 9) ? \"backups\" : \"snapshots\"}`)).snapshots;\n};\nexport const fetchHassioBackupInfo = async (hass, backup) => {\n  if (hass) {\n    if (atLeastVersion(hass.config.version, 2021, 2, 4)) {\n      return hass.callWS({\n        type: \"supervisor/api\",\n        endpoint: `/${atLeastVersion(hass.config.version, 2021, 9) ? \"backups\" : \"snapshots\"}/${backup}/info`,\n        method: \"get\"\n      });\n    }\n    return hassioApiResultExtractor(await hass.callApi(\"GET\", `hassio/${atLeastVersion(hass.config.version, 2021, 9) ? \"backups\" : \"snapshots\"}/${backup}/info`));\n  }\n  // When called from onboarding we don't have hass\n  const resp = await fetch(`/api/hassio/backups/${backup}/info`, {\n    method: \"GET\"\n  });\n  const data = (await resp.json()).data;\n  return data;\n};\nexport const reloadHassioBackups = async hass => {\n  if (atLeastVersion(hass.config.version, 2021, 2, 4)) {\n    await hass.callWS({\n      type: \"supervisor/api\",\n      endpoint: `/${atLeastVersion(hass.config.version, 2021, 9) ? \"backups\" : \"snapshots\"}/reload`,\n      method: \"post\"\n    });\n    return;\n  }\n  await hass.callApi(\"POST\", `hassio/${atLeastVersion(hass.config.version, 2021, 9) ? \"backups\" : \"snapshots\"}/reload`);\n};\nexport const createHassioFullBackup = async (hass, data) => {\n  if (atLeastVersion(hass.config.version, 2021, 2, 4)) {\n    await hass.callWS({\n      type: \"supervisor/api\",\n      endpoint: `/${atLeastVersion(hass.config.version, 2021, 9) ? \"backups\" : \"snapshots\"}/new/full`,\n      method: \"post\",\n      timeout: null,\n      data\n    });\n    return;\n  }\n  await hass.callApi(\"POST\", `hassio/${atLeastVersion(hass.config.version, 2021, 9) ? \"backups\" : \"snapshots\"}/new/full`, data);\n};\nexport const removeBackup = async (hass, slug) => {\n  if (atLeastVersion(hass.config.version, 2021, 2, 4)) {\n    await hass.callWS({\n      type: \"supervisor/api\",\n      endpoint: `/${atLeastVersion(hass.config.version, 2021, 9) ? `backups/${slug}` : `snapshots/${slug}/remove`}`,\n      method: atLeastVersion(hass.config.version, 2021, 9) ? \"delete\" : \"post\"\n    });\n    return;\n  }\n  await hass.callApi(\"POST\", `hassio/${atLeastVersion(hass.config.version, 2021, 9) ? \"backups\" : \"snapshots\"}/${slug}/remove`);\n};\nexport const createHassioPartialBackup = async (hass, data) => {\n  if (atLeastVersion(hass.config.version, 2021, 2, 4)) {\n    await hass.callWS({\n      type: \"supervisor/api\",\n      endpoint: `/${atLeastVersion(hass.config.version, 2021, 9) ? \"backups\" : \"snapshots\"}/new/partial`,\n      method: \"post\",\n      timeout: null,\n      data\n    });\n    return;\n  }\n  await hass.callApi(\"POST\", `hassio/${atLeastVersion(hass.config.version, 2021, 9) ? \"backups\" : \"snapshots\"}/new/partial`, data);\n};\nexport const uploadBackup = async (hass, file) => {\n  const fd = new FormData();\n  let resp;\n  fd.append(\"file\", file);\n  if (hass) {\n    resp = await hass.fetchWithAuth(`/api/hassio/${atLeastVersion(hass.config.version, 2021, 9) ? \"backups\" : \"snapshots\"}/new/upload`, {\n      method: \"POST\",\n      body: fd\n    });\n  } else {\n    // When called from onboarding we don't have hass\n    resp = await fetch(\"/api/hassio/backups/new/upload\", {\n      method: \"POST\",\n      body: fd\n    });\n  }\n  if (resp.status === 413) {\n    throw new Error(\"Uploaded backup is too large\");\n  } else if (resp.status !== 200) {\n    throw new Error(`${resp.status} ${resp.statusText}`);\n  }\n  return resp.json();\n};","map":{"version":3,"names":["atLeastVersion","hassioApiResultExtractor","friendlyFolderName","ssl","homeassistant","media","share","fetchHassioBackups","hass","config","version","data","callWS","type","endpoint","method","callApi","snapshots","fetchHassioBackupInfo","backup","resp","fetch","json","reloadHassioBackups","createHassioFullBackup","timeout","removeBackup","slug","createHassioPartialBackup","uploadBackup","file","fd","FormData","append","fetchWithAuth","body","status","Error","statusText"],"sources":["/workspaces/frontend/src/data/hassio/backup.ts"],"sourcesContent":["import { atLeastVersion } from \"../../common/config/version\";\nimport { HomeAssistant } from \"../../types\";\nimport { hassioApiResultExtractor, HassioResponse } from \"./common\";\n\nexport const friendlyFolderName = {\n  ssl: \"SSL\",\n  homeassistant: \"Configuration\",\n  \"addons/local\": \"Local add-ons\",\n  media: \"Media\",\n  share: \"Share\",\n};\n\ninterface BackupContent {\n  homeassistant: boolean;\n  folders: string[];\n  addons: string[];\n}\n\nexport interface HassioBackup {\n  slug: string;\n  date: string;\n  name: string;\n  size: number;\n  type: \"full\" | \"partial\";\n  protected: boolean;\n  location: string | null;\n  content: BackupContent;\n}\n\nexport interface HassioBackupDetail extends HassioBackup {\n  size: number;\n  homeassistant: string;\n  addons: Array<{\n    slug: \"ADDON_SLUG\";\n    name: \"NAME\";\n    version: \"INSTALLED_VERSION\";\n    size: \"SIZE_IN_MB\";\n  }>;\n  repositories: string[];\n  folders: string[];\n}\n\nexport interface HassioFullBackupCreateParams {\n  name: string;\n  password?: string;\n  confirm_password?: string;\n}\nexport interface HassioPartialBackupCreateParams\n  extends HassioFullBackupCreateParams {\n  folders?: string[];\n  addons?: string[];\n  homeassistant?: boolean;\n}\n\nexport const fetchHassioBackups = async (\n  hass: HomeAssistant\n): Promise<HassioBackup[]> => {\n  if (atLeastVersion(hass.config.version, 2021, 2, 4)) {\n    const data: {\n      [key: string]: HassioBackup[];\n    } = await hass.callWS({\n      type: \"supervisor/api\",\n      endpoint: `/${\n        atLeastVersion(hass.config.version, 2021, 9) ? \"backups\" : \"snapshots\"\n      }`,\n      method: \"get\",\n    });\n    return data[\n      atLeastVersion(hass.config.version, 2021, 9) ? \"backups\" : \"snapshots\"\n    ];\n  }\n\n  return hassioApiResultExtractor(\n    await hass.callApi<HassioResponse<{ snapshots: HassioBackup[] }>>(\n      \"GET\",\n      `hassio/${\n        atLeastVersion(hass.config.version, 2021, 9) ? \"backups\" : \"snapshots\"\n      }`\n    )\n  ).snapshots;\n};\n\nexport const fetchHassioBackupInfo = async (\n  hass: HomeAssistant | undefined,\n  backup: string\n): Promise<HassioBackupDetail> => {\n  if (hass) {\n    if (atLeastVersion(hass.config.version, 2021, 2, 4)) {\n      return hass.callWS({\n        type: \"supervisor/api\",\n        endpoint: `/${\n          atLeastVersion(hass.config.version, 2021, 9) ? \"backups\" : \"snapshots\"\n        }/${backup}/info`,\n        method: \"get\",\n      });\n    }\n    return hassioApiResultExtractor(\n      await hass.callApi<HassioResponse<HassioBackupDetail>>(\n        \"GET\",\n        `hassio/${\n          atLeastVersion(hass.config.version, 2021, 9) ? \"backups\" : \"snapshots\"\n        }/${backup}/info`\n      )\n    );\n  }\n  // When called from onboarding we don't have hass\n  const resp = await fetch(`/api/hassio/backups/${backup}/info`, {\n    method: \"GET\",\n  });\n  const data = (await resp.json()).data;\n  return data;\n};\n\nexport const reloadHassioBackups = async (hass: HomeAssistant) => {\n  if (atLeastVersion(hass.config.version, 2021, 2, 4)) {\n    await hass.callWS({\n      type: \"supervisor/api\",\n      endpoint: `/${\n        atLeastVersion(hass.config.version, 2021, 9) ? \"backups\" : \"snapshots\"\n      }/reload`,\n      method: \"post\",\n    });\n    return;\n  }\n\n  await hass.callApi<HassioResponse<void>>(\n    \"POST\",\n    `hassio/${\n      atLeastVersion(hass.config.version, 2021, 9) ? \"backups\" : \"snapshots\"\n    }/reload`\n  );\n};\n\nexport const createHassioFullBackup = async (\n  hass: HomeAssistant,\n  data: HassioFullBackupCreateParams\n) => {\n  if (atLeastVersion(hass.config.version, 2021, 2, 4)) {\n    await hass.callWS({\n      type: \"supervisor/api\",\n      endpoint: `/${\n        atLeastVersion(hass.config.version, 2021, 9) ? \"backups\" : \"snapshots\"\n      }/new/full`,\n      method: \"post\",\n      timeout: null,\n      data,\n    });\n    return;\n  }\n  await hass.callApi<HassioResponse<void>>(\n    \"POST\",\n    `hassio/${\n      atLeastVersion(hass.config.version, 2021, 9) ? \"backups\" : \"snapshots\"\n    }/new/full`,\n    data\n  );\n};\n\nexport const removeBackup = async (hass: HomeAssistant, slug: string) => {\n  if (atLeastVersion(hass.config.version, 2021, 2, 4)) {\n    await hass.callWS({\n      type: \"supervisor/api\",\n      endpoint: `/${\n        atLeastVersion(hass.config.version, 2021, 9)\n          ? `backups/${slug}`\n          : `snapshots/${slug}/remove`\n      }`,\n      method: atLeastVersion(hass.config.version, 2021, 9) ? \"delete\" : \"post\",\n    });\n    return;\n  }\n  await hass.callApi<HassioResponse<void>>(\n    \"POST\",\n    `hassio/${\n      atLeastVersion(hass.config.version, 2021, 9) ? \"backups\" : \"snapshots\"\n    }/${slug}/remove`\n  );\n};\n\nexport const createHassioPartialBackup = async (\n  hass: HomeAssistant,\n  data: HassioPartialBackupCreateParams\n) => {\n  if (atLeastVersion(hass.config.version, 2021, 2, 4)) {\n    await hass.callWS({\n      type: \"supervisor/api\",\n      endpoint: `/${\n        atLeastVersion(hass.config.version, 2021, 9) ? \"backups\" : \"snapshots\"\n      }/new/partial`,\n      method: \"post\",\n      timeout: null,\n      data,\n    });\n    return;\n  }\n\n  await hass.callApi<HassioResponse<void>>(\n    \"POST\",\n    `hassio/${\n      atLeastVersion(hass.config.version, 2021, 9) ? \"backups\" : \"snapshots\"\n    }/new/partial`,\n    data\n  );\n};\n\nexport const uploadBackup = async (\n  hass: HomeAssistant | undefined,\n  file: File\n): Promise<HassioResponse<HassioBackup>> => {\n  const fd = new FormData();\n  let resp;\n  fd.append(\"file\", file);\n  if (hass) {\n    resp = await hass.fetchWithAuth(\n      `/api/hassio/${\n        atLeastVersion(hass.config.version, 2021, 9) ? \"backups\" : \"snapshots\"\n      }/new/upload`,\n      {\n        method: \"POST\",\n        body: fd,\n      }\n    );\n  } else {\n    // When called from onboarding we don't have hass\n    resp = await fetch(\"/api/hassio/backups/new/upload\", {\n      method: \"POST\",\n      body: fd,\n    });\n  }\n\n  if (resp.status === 413) {\n    throw new Error(\"Uploaded backup is too large\");\n  } else if (resp.status !== 200) {\n    throw new Error(`${resp.status} ${resp.statusText}`);\n  }\n  return resp.json();\n};\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,6BAA6B;AAE5D,SAASC,wBAAwB,QAAwB,UAAU;AAEnE,OAAO,MAAMC,kBAAkB,GAAG;EAChCC,GAAG,EAAE,KAAK;EACVC,aAAa,EAAE,eAAe;EAC9B,cAAc,EAAE,eAAe;EAC/BC,KAAK,EAAE,OAAO;EACdC,KAAK,EAAE;AACT,CAAC;AA4CD,OAAO,MAAMC,kBAAkB,GAAG,MAChCC,IAAmB,IACS;EAC5B,IAAIR,cAAc,CAACQ,IAAI,CAACC,MAAM,CAACC,OAAO,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE;IACnD,MAAMC,IAEL,GAAG,MAAMH,IAAI,CAACI,MAAM,CAAC;MACpBC,IAAI,EAAE,gBAAgB;MACtBC,QAAQ,EAAG,IACTd,cAAc,CAACQ,IAAI,CAACC,MAAM,CAACC,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,GAAG,SAAS,GAAG,WAC5D,EAAC;MACFK,MAAM,EAAE;IACV,CAAC,CAAC;IACF,OAAOJ,IAAI,CACTX,cAAc,CAACQ,IAAI,CAACC,MAAM,CAACC,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,GAAG,SAAS,GAAG,WAAW,CACvE;EACH;EAEA,OAAOT,wBAAwB,CAC7B,MAAMO,IAAI,CAACQ,OAAO,CAChB,KAAK,EACJ,UACChB,cAAc,CAACQ,IAAI,CAACC,MAAM,CAACC,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,GAAG,SAAS,GAAG,WAC5D,EACH,CACF,CAAC,CAACO,SAAS;AACb,CAAC;AAED,OAAO,MAAMC,qBAAqB,GAAG,MAAAA,CACnCV,IAA+B,EAC/BW,MAAc,KACkB;EAChC,IAAIX,IAAI,EAAE;IACR,IAAIR,cAAc,CAACQ,IAAI,CAACC,MAAM,CAACC,OAAO,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE;MACnD,OAAOF,IAAI,CAACI,MAAM,CAAC;QACjBC,IAAI,EAAE,gBAAgB;QACtBC,QAAQ,EAAG,IACTd,cAAc,CAACQ,IAAI,CAACC,MAAM,CAACC,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,GAAG,SAAS,GAAG,WAC5D,IAAGS,MAAO,OAAM;QACjBJ,MAAM,EAAE;MACV,CAAC,CAAC;IACJ;IACA,OAAOd,wBAAwB,CAC7B,MAAMO,IAAI,CAACQ,OAAO,CAChB,KAAK,EACJ,UACChB,cAAc,CAACQ,IAAI,CAACC,MAAM,CAACC,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,GAAG,SAAS,GAAG,WAC5D,IAAGS,MAAO,OACb,CACF,CAAC;EACH;EACA;EACA,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAAE,uBAAsBF,MAAO,OAAM,EAAE;IAC7DJ,MAAM,EAAE;EACV,CAAC,CAAC;EACF,MAAMJ,IAAI,GAAG,CAAC,MAAMS,IAAI,CAACE,IAAI,CAAC,CAAC,EAAEX,IAAI;EACrC,OAAOA,IAAI;AACb,CAAC;AAED,OAAO,MAAMY,mBAAmB,GAAG,MAAOf,IAAmB,IAAK;EAChE,IAAIR,cAAc,CAACQ,IAAI,CAACC,MAAM,CAACC,OAAO,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE;IACnD,MAAMF,IAAI,CAACI,MAAM,CAAC;MAChBC,IAAI,EAAE,gBAAgB;MACtBC,QAAQ,EAAG,IACTd,cAAc,CAACQ,IAAI,CAACC,MAAM,CAACC,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,GAAG,SAAS,GAAG,WAC5D,SAAQ;MACTK,MAAM,EAAE;IACV,CAAC,CAAC;IACF;EACF;EAEA,MAAMP,IAAI,CAACQ,OAAO,CAChB,MAAM,EACL,UACChB,cAAc,CAACQ,IAAI,CAACC,MAAM,CAACC,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,GAAG,SAAS,GAAG,WAC5D,SACH,CAAC;AACH,CAAC;AAED,OAAO,MAAMc,sBAAsB,GAAG,MAAAA,CACpChB,IAAmB,EACnBG,IAAkC,KAC/B;EACH,IAAIX,cAAc,CAACQ,IAAI,CAACC,MAAM,CAACC,OAAO,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE;IACnD,MAAMF,IAAI,CAACI,MAAM,CAAC;MAChBC,IAAI,EAAE,gBAAgB;MACtBC,QAAQ,EAAG,IACTd,cAAc,CAACQ,IAAI,CAACC,MAAM,CAACC,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,GAAG,SAAS,GAAG,WAC5D,WAAU;MACXK,MAAM,EAAE,MAAM;MACdU,OAAO,EAAE,IAAI;MACbd;IACF,CAAC,CAAC;IACF;EACF;EACA,MAAMH,IAAI,CAACQ,OAAO,CAChB,MAAM,EACL,UACChB,cAAc,CAACQ,IAAI,CAACC,MAAM,CAACC,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,GAAG,SAAS,GAAG,WAC5D,WAAU,EACXC,IACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMe,YAAY,GAAG,MAAAA,CAAOlB,IAAmB,EAAEmB,IAAY,KAAK;EACvE,IAAI3B,cAAc,CAACQ,IAAI,CAACC,MAAM,CAACC,OAAO,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE;IACnD,MAAMF,IAAI,CAACI,MAAM,CAAC;MAChBC,IAAI,EAAE,gBAAgB;MACtBC,QAAQ,EAAG,IACTd,cAAc,CAACQ,IAAI,CAACC,MAAM,CAACC,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,GACvC,WAAUiB,IAAK,EAAC,GAChB,aAAYA,IAAK,SACvB,EAAC;MACFZ,MAAM,EAAEf,cAAc,CAACQ,IAAI,CAACC,MAAM,CAACC,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,GAAG,QAAQ,GAAG;IACpE,CAAC,CAAC;IACF;EACF;EACA,MAAMF,IAAI,CAACQ,OAAO,CAChB,MAAM,EACL,UACChB,cAAc,CAACQ,IAAI,CAACC,MAAM,CAACC,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,GAAG,SAAS,GAAG,WAC5D,IAAGiB,IAAK,SACX,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,yBAAyB,GAAG,MAAAA,CACvCpB,IAAmB,EACnBG,IAAqC,KAClC;EACH,IAAIX,cAAc,CAACQ,IAAI,CAACC,MAAM,CAACC,OAAO,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE;IACnD,MAAMF,IAAI,CAACI,MAAM,CAAC;MAChBC,IAAI,EAAE,gBAAgB;MACtBC,QAAQ,EAAG,IACTd,cAAc,CAACQ,IAAI,CAACC,MAAM,CAACC,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,GAAG,SAAS,GAAG,WAC5D,cAAa;MACdK,MAAM,EAAE,MAAM;MACdU,OAAO,EAAE,IAAI;MACbd;IACF,CAAC,CAAC;IACF;EACF;EAEA,MAAMH,IAAI,CAACQ,OAAO,CAChB,MAAM,EACL,UACChB,cAAc,CAACQ,IAAI,CAACC,MAAM,CAACC,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,GAAG,SAAS,GAAG,WAC5D,cAAa,EACdC,IACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMkB,YAAY,GAAG,MAAAA,CAC1BrB,IAA+B,EAC/BsB,IAAU,KACgC;EAC1C,MAAMC,EAAE,GAAG,IAAIC,QAAQ,CAAC,CAAC;EACzB,IAAIZ,IAAI;EACRW,EAAE,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;EACvB,IAAItB,IAAI,EAAE;IACRY,IAAI,GAAG,MAAMZ,IAAI,CAAC0B,aAAa,CAC5B,eACClC,cAAc,CAACQ,IAAI,CAACC,MAAM,CAACC,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,GAAG,SAAS,GAAG,WAC5D,aAAY,EACb;MACEK,MAAM,EAAE,MAAM;MACdoB,IAAI,EAAEJ;IACR,CACF,CAAC;EACH,CAAC,MAAM;IACL;IACAX,IAAI,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;MACnDN,MAAM,EAAE,MAAM;MACdoB,IAAI,EAAEJ;IACR,CAAC,CAAC;EACJ;EAEA,IAAIX,IAAI,CAACgB,MAAM,KAAK,GAAG,EAAE;IACvB,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;EACjD,CAAC,MAAM,IAAIjB,IAAI,CAACgB,MAAM,KAAK,GAAG,EAAE;IAC9B,MAAM,IAAIC,KAAK,CAAE,GAAEjB,IAAI,CAACgB,MAAO,IAAGhB,IAAI,CAACkB,UAAW,EAAC,CAAC;EACtD;EACA,OAAOlB,IAAI,CAACE,IAAI,CAAC,CAAC;AACpB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}