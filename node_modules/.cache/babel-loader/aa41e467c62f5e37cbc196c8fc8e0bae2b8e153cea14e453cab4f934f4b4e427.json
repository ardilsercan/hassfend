{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport \"@material/mwc-button/mwc-button\";\nconst mdiAlertCircle = \"M13,13H11V7H13M13,17H11V15H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z\";\nconst mdiChevronDown = \"M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z\";\nconst mdiClose = \"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\";\nconst mdiHelpCircleOutline = \"M11,18H13V16H11V18M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,6A4,4 0 0,0 8,10H10A2,2 0 0,1 12,8A2,2 0 0,1 14,10C14,12 11,11.75 11,15H13C13,12.75 16,12.5 16,10A4,4 0 0,0 12,6Z\";\nconst mdiMicrophone = \"M12,2A3,3 0 0,1 15,5V11A3,3 0 0,1 12,14A3,3 0 0,1 9,11V5A3,3 0 0,1 12,2M19,11C19,14.53 16.39,17.44 13,17.93V21H11V17.93C7.61,17.44 5,14.53 5,11H7A5,5 0 0,0 12,16A5,5 0 0,0 17,11H19Z\";\nconst mdiSend = \"M2,21L23,12L2,3V10L17,12L2,14V21Z\";\nconst mdiStar = \"M12,17.27L18.18,21L16.54,13.97L22,9.24L14.81,8.62L12,2L9.19,8.62L2,9.24L7.45,13.97L5.82,21L12,17.27Z\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators\";\nimport { storage } from \"../../common/decorators/storage\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { stopPropagation } from \"../../common/dom/stop_propagation\";\nimport \"../../components/ha-button\";\nimport \"../../components/ha-button-menu\";\nimport \"../../components/ha-dialog\";\nimport \"../../components/ha-dialog-header\";\nimport \"../../components/ha-icon-button\";\nimport \"../../components/ha-list-item\";\nimport \"../../components/ha-textfield\";\nimport { getAssistPipeline, listAssistPipelines, runAssistPipeline } from \"../../data/assist_pipeline\";\nimport { haStyleDialog } from \"../../resources/styles\";\nimport { AudioRecorder } from \"../../util/audio-recorder\";\nimport { documentationUrl } from \"../../util/documentation-url\";\nimport { showAlertDialog } from \"../generic/show-dialog-box\";\nexport let HaVoiceCommandDialog = _decorate([customElement(\"ha-voice-command-dialog\")], function (_initialize, _LitElement) {\n  class HaVoiceCommandDialog extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaVoiceCommandDialog,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_conversation\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_opened\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [storage({\n        key: \"AssistPipelineId\",\n        state: true,\n        subscribe: false\n      })],\n      key: \"_pipelineId\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_pipeline\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_showSendButton\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_pipelines\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_preferredPipeline\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [query(\"#scroll-container\")],\n      key: \"_scrollContainer\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [query(\"#message-input\")],\n      key: \"_messageInput\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_conversationId\",\n      value() {\n        return null;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_audioRecorder\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_audioBuffer\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_audio\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_stt_binary_handler_id\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_pipelinePromise\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"showDialog\",\n      value: async function showDialog(params) {\n        var _this$_pipeline;\n        if (params.pipeline_id === \"last_used\") {\n          // Do not set pipeline id (retrieve from storage)\n        } else if (params.pipeline_id === \"preferred\") {\n          await this._loadPipelines();\n          this._pipelineId = this._preferredPipeline;\n        } else {\n          this._pipelineId = params.pipeline_id;\n        }\n        this._conversation = [{\n          who: \"hass\",\n          text: this.hass.localize(\"ui.dialogs.voice_command.how_can_i_help\")\n        }];\n        this._opened = true;\n        await this.updateComplete;\n        this._scrollMessagesBottom();\n        await this._pipelinePromise;\n        if (params !== null && params !== void 0 && params.start_listening && (_this$_pipeline = this._pipeline) !== null && _this$_pipeline !== void 0 && _this$_pipeline.stt_engine && AudioRecorder.isSupported) {\n          this._toggleListening();\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"closeDialog\",\n      value: async function closeDialog() {\n        var _this$_audioRecorder, _this$_audio;\n        this._opened = false;\n        this._pipeline = undefined;\n        this._pipelines = undefined;\n        this._conversation = undefined;\n        this._conversationId = null;\n        (_this$_audioRecorder = this._audioRecorder) === null || _this$_audioRecorder === void 0 || _this$_audioRecorder.close();\n        this._audioRecorder = undefined;\n        (_this$_audio = this._audio) === null || _this$_audio === void 0 || _this$_audio.pause();\n        fireEvent(this, \"dialog-closed\", {\n          dialog: this.localName\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var _this$_pipeline2, _this$_pipeline3, _this$_pipelines, _this$hass$user, _this$_audioRecorder2;\n        if (!this._opened) {\n          return nothing;\n        }\n        const supportsMicrophone = AudioRecorder.isSupported;\n        const supportsSTT = (_this$_pipeline2 = this._pipeline) === null || _this$_pipeline2 === void 0 ? void 0 : _this$_pipeline2.stt_engine;\n        return html`\n      <ha-dialog\n        open\n        @closed=${this.closeDialog}\n        .heading=${this.hass.localize(\"ui.dialogs.voice_command.title\")}\n        flexContent\n      >\n        <ha-dialog-header slot=\"heading\">\n          <ha-icon-button\n            slot=\"navigationIcon\"\n            dialogAction=\"cancel\"\n            .label=${this.hass.localize(\"ui.common.close\")}\n            .path=${mdiClose}\n          ></ha-icon-button>\n          <div slot=\"title\">\n            ${this.hass.localize(\"ui.dialogs.voice_command.title\")}\n            <ha-button-menu\n              @opened=${this._loadPipelines}\n              @closed=${stopPropagation}\n              activatable\n              fixed\n            >\n              <ha-button slot=\"trigger\">\n                ${(_this$_pipeline3 = this._pipeline) === null || _this$_pipeline3 === void 0 ? void 0 : _this$_pipeline3.name}\n                <ha-svg-icon\n                  slot=\"trailingIcon\"\n                  .path=${mdiChevronDown}\n                ></ha-svg-icon>\n              </ha-button>\n              ${(_this$_pipelines = this._pipelines) === null || _this$_pipelines === void 0 ? void 0 : _this$_pipelines.map(pipeline => html`<ha-list-item\n                    ?selected=${pipeline.id === this._pipelineId || !this._pipelineId && pipeline.id === this._preferredPipeline}\n                    .pipeline=${pipeline.id}\n                    @click=${this._selectPipeline}\n                    .hasMeta=${pipeline.id === this._preferredPipeline}\n                  >\n                    ${pipeline.name}${pipeline.id === this._preferredPipeline ? html`\n                          <ha-svg-icon\n                            slot=\"meta\"\n                            .path=${mdiStar}\n                          ></ha-svg-icon>\n                        ` : nothing}\n                  </ha-list-item>`)}\n              ${(_this$hass$user = this.hass.user) !== null && _this$hass$user !== void 0 && _this$hass$user.is_admin ? html`<li divider role=\"separator\"></li>\n                    <a href=\"/config/voice-assistants/assistants\"\n                      ><ha-list-item @click=${this.closeDialog}\n                        >${this.hass.localize(\"ui.dialogs.voice_command.manage_assistants\")}</ha-list-item\n                      ></a\n                    >` : nothing}\n            </ha-button-menu>\n          </div>\n          <a\n            href=${documentationUrl(this.hass, \"/docs/assist/\")}\n            slot=\"actionItems\"\n            target=\"_blank\"\n            rel=\"noopener noreferer\"\n          >\n            <ha-icon-button\n              .label=${this.hass.localize(\"ui.common.help\")}\n              .path=${mdiHelpCircleOutline}\n            ></ha-icon-button>\n          </a>\n        </ha-dialog-header>\n        <div class=\"messages\">\n          <div class=\"messages-container\" id=\"scroll-container\">\n            ${this._conversation.map(message => html`\n                <div class=${this._computeMessageClasses(message)}>\n                  ${message.text}\n                </div>\n              `)}\n          </div>\n        </div>\n        <div class=\"input\" slot=\"primaryAction\">\n          <ha-textfield\n            id=\"message-input\"\n            @keyup=${this._handleKeyUp}\n            @input=${this._handleInput}\n            .label=${this.hass.localize(`ui.dialogs.voice_command.input_label`)}\n            dialogInitialFocus\n            iconTrailing\n          >\n            <span slot=\"trailingIcon\">\n              ${this._showSendButton || !supportsSTT ? html`\n                    <ha-icon-button\n                      class=\"listening-icon\"\n                      .path=${mdiSend}\n                      @click=${this._handleSendMessage}\n                      .label=${this.hass.localize(\"ui.dialogs.voice_command.send_text\")}\n                    >\n                    </ha-icon-button>\n                  ` : html`\n                    ${(_this$_audioRecorder2 = this._audioRecorder) !== null && _this$_audioRecorder2 !== void 0 && _this$_audioRecorder2.active ? html`\n                          <div class=\"bouncer\">\n                            <div class=\"double-bounce1\"></div>\n                            <div class=\"double-bounce2\"></div>\n                          </div>\n                        ` : nothing}\n\n                    <div class=\"listening-icon\">\n                      <ha-icon-button\n                        .path=${mdiMicrophone}\n                        @click=${this._handleListeningButton}\n                        .label=${this.hass.localize(\"ui.dialogs.voice_command.start_listening\")}\n                      >\n                      </ha-icon-button>\n                      ${!supportsMicrophone ? html`\n                            <ha-svg-icon\n                              .path=${mdiAlertCircle}\n                              class=\"unsupported\"\n                            ></ha-svg-icon>\n                          ` : null}\n                    </div>\n                  `}\n            </span>\n          </ha-textfield>\n        </div>\n      </ha-dialog>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"willUpdate\",\n      value: function willUpdate(changedProperties) {\n        if (changedProperties.has(\"_pipelineId\") || changedProperties.has(\"_opened\") && this._opened === true) {\n          this._getPipeline();\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_getPipeline\",\n      value: async function _getPipeline() {\n        try {\n          this._pipelinePromise = getAssistPipeline(this.hass, this._pipelineId);\n          this._pipeline = await this._pipelinePromise;\n        } catch (e) {\n          if (e.code === \"not_found\") {\n            this._pipelineId = undefined;\n          }\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_loadPipelines\",\n      value: async function _loadPipelines() {\n        if (this._pipelines) {\n          return;\n        }\n        const {\n          pipelines,\n          preferred_pipeline\n        } = await listAssistPipelines(this.hass);\n        this._pipelines = pipelines;\n        this._preferredPipeline = preferred_pipeline || undefined;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_selectPipeline\",\n      value: async function _selectPipeline(ev) {\n        this._pipelineId = ev.currentTarget.pipeline;\n        this._conversation = [{\n          who: \"hass\",\n          text: this.hass.localize(\"ui.dialogs.voice_command.how_can_i_help\")\n        }];\n        await this.updateComplete;\n        this._scrollMessagesBottom();\n      }\n    }, {\n      kind: \"method\",\n      key: \"updated\",\n      value: function updated(changedProps) {\n        _get(_getPrototypeOf(HaVoiceCommandDialog.prototype), \"updated\", this).call(this, changedProps);\n        if (changedProps.has(\"_conversation\") || changedProps.has(\"results\")) {\n          this._scrollMessagesBottom();\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_addMessage\",\n      value: function _addMessage(message) {\n        this._conversation = [...this._conversation, message];\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleKeyUp\",\n      value: function _handleKeyUp(ev) {\n        const input = ev.target;\n        if (ev.key === \"Enter\" && input.value) {\n          this._processText(input.value);\n          input.value = \"\";\n          this._showSendButton = false;\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleInput\",\n      value: function _handleInput(ev) {\n        const value = ev.target.value;\n        if (value && !this._showSendButton) {\n          this._showSendButton = true;\n        } else if (!value && this._showSendButton) {\n          this._showSendButton = false;\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleSendMessage\",\n      value: function _handleSendMessage() {\n        if (this._messageInput.value) {\n          this._processText(this._messageInput.value);\n          this._messageInput.value = \"\";\n          this._showSendButton = false;\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_processText\",\n      value: async function _processText(text) {\n        var _this$_audio2;\n        (_this$_audio2 = this._audio) === null || _this$_audio2 === void 0 || _this$_audio2.pause();\n        this._addMessage({\n          who: \"user\",\n          text\n        });\n        const message = {\n          who: \"hass\",\n          text: \"…\"\n        };\n        // To make sure the answer is placed at the right user text, we add it before we process it\n        this._addMessage(message);\n        try {\n          var _this$_pipeline4;\n          const unsub = await runAssistPipeline(this.hass, event => {\n            if (event.type === \"intent-end\") {\n              var _event$data$intent_ou;\n              this._conversationId = event.data.intent_output.conversation_id;\n              const plain = (_event$data$intent_ou = event.data.intent_output.response.speech) === null || _event$data$intent_ou === void 0 ? void 0 : _event$data$intent_ou.plain;\n              if (plain) {\n                message.text = plain.speech;\n              }\n              this.requestUpdate(\"_conversation\");\n              unsub();\n            }\n            if (event.type === \"error\") {\n              message.text = event.data.message;\n              message.error = true;\n              this.requestUpdate(\"_conversation\");\n              unsub();\n            }\n          }, {\n            start_stage: \"intent\",\n            input: {\n              text\n            },\n            end_stage: \"intent\",\n            pipeline: (_this$_pipeline4 = this._pipeline) === null || _this$_pipeline4 === void 0 ? void 0 : _this$_pipeline4.id,\n            conversation_id: this._conversationId\n          });\n        } catch (_unused) {\n          message.text = this.hass.localize(\"ui.dialogs.voice_command.error\");\n          message.error = true;\n          this.requestUpdate(\"_conversation\");\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleListeningButton\",\n      value: function _handleListeningButton(ev) {\n        ev.stopPropagation();\n        ev.preventDefault();\n        this._toggleListening();\n      }\n    }, {\n      kind: \"method\",\n      key: \"_toggleListening\",\n      value: function _toggleListening() {\n        var _this$_audioRecorder3;\n        const supportsMicrophone = AudioRecorder.isSupported;\n        if (!supportsMicrophone) {\n          this._showNotSupportedMessage();\n          return;\n        }\n        if (!((_this$_audioRecorder3 = this._audioRecorder) !== null && _this$_audioRecorder3 !== void 0 && _this$_audioRecorder3.active)) {\n          this._startListening();\n        } else {\n          this._stopListening();\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_showNotSupportedMessage\",\n      value: async function _showNotSupportedMessage() {\n        this._addMessage({\n          who: \"hass\",\n          text: html`\n        <p>\n          ${this.hass.localize(\"ui.dialogs.voice_command.not_supported_microphone_browser\")}\n        </p>\n        <p>\n          ${this.hass.localize(\"ui.dialogs.voice_command.not_supported_microphone_documentation\", {\n            documentation_link: html`\n                <a\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href=${documentationUrl(this.hass, \"/docs/configuration/securing/#remote-access\")}\n                >\n                  ${this.hass.localize(\"ui.dialogs.voice_command.not_supported_microphone_documentation_link\")}\n                </a>\n              `\n          })}\n        </p>\n      `\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_startListening\",\n      value: async function _startListening() {\n        var _this$_audio3;\n        (_this$_audio3 = this._audio) === null || _this$_audio3 === void 0 || _this$_audio3.pause();\n        if (!this._audioRecorder) {\n          this._audioRecorder = new AudioRecorder(audio => {\n            if (this._audioBuffer) {\n              this._audioBuffer.push(audio);\n            } else {\n              this._sendAudioChunk(audio);\n            }\n          });\n        }\n        this._stt_binary_handler_id = undefined;\n        this._audioBuffer = [];\n        const userMessage = {\n          who: \"user\",\n          text: \"…\"\n        };\n        this._audioRecorder.start().then(() => {\n          this._addMessage(userMessage);\n          this.requestUpdate(\"_audioRecorder\");\n        });\n        const hassMessage = {\n          who: \"hass\",\n          text: \"…\"\n        };\n        // To make sure the answer is placed at the right user text, we add it before we process it\n        try {\n          var _this$_pipeline5, _this$_pipeline6;\n          const unsub = await runAssistPipeline(this.hass, event => {\n            if (event.type === \"run-start\") {\n              this._stt_binary_handler_id = event.data.runner_data.stt_binary_handler_id;\n            }\n\n            // When we start STT stage, the WS has a binary handler\n            if (event.type === \"stt-start\" && this._audioBuffer) {\n              // Send the buffer over the WS to the STT engine.\n              for (const buffer of this._audioBuffer) {\n                this._sendAudioChunk(buffer);\n              }\n              this._audioBuffer = undefined;\n            }\n\n            // Stop recording if the server is done with STT stage\n            if (event.type === \"stt-end\") {\n              this._stt_binary_handler_id = undefined;\n              this._stopListening();\n              userMessage.text = event.data.stt_output.text;\n              this.requestUpdate(\"_conversation\");\n              // To make sure the answer is placed at the right user text, we add it before we process it\n              this._addMessage(hassMessage);\n            }\n            if (event.type === \"intent-end\") {\n              var _event$data$intent_ou2;\n              this._conversationId = event.data.intent_output.conversation_id;\n              const plain = (_event$data$intent_ou2 = event.data.intent_output.response.speech) === null || _event$data$intent_ou2 === void 0 ? void 0 : _event$data$intent_ou2.plain;\n              if (plain) {\n                hassMessage.text = plain.speech;\n              }\n              this.requestUpdate(\"_conversation\");\n            }\n            if (event.type === \"tts-end\") {\n              const url = event.data.tts_output.url;\n              this._audio = new Audio(url);\n              this._audio.play();\n              this._audio.addEventListener(\"ended\", this._unloadAudio);\n              this._audio.addEventListener(\"pause\", this._unloadAudio);\n              this._audio.addEventListener(\"canplaythrough\", this._playAudio);\n              this._audio.addEventListener(\"error\", this._audioError);\n            }\n            if (event.type === \"run-end\") {\n              this._stt_binary_handler_id = undefined;\n              unsub();\n            }\n            if (event.type === \"error\") {\n              this._stt_binary_handler_id = undefined;\n              if (userMessage.text === \"…\") {\n                userMessage.text = event.data.message;\n                userMessage.error = true;\n              } else {\n                hassMessage.text = event.data.message;\n                hassMessage.error = true;\n              }\n              this._stopListening();\n              this.requestUpdate(\"_conversation\");\n              unsub();\n            }\n          }, {\n            start_stage: \"stt\",\n            end_stage: (_this$_pipeline5 = this._pipeline) !== null && _this$_pipeline5 !== void 0 && _this$_pipeline5.tts_engine ? \"tts\" : \"intent\",\n            input: {\n              sample_rate: this._audioRecorder.sampleRate\n            },\n            pipeline: (_this$_pipeline6 = this._pipeline) === null || _this$_pipeline6 === void 0 ? void 0 : _this$_pipeline6.id,\n            conversation_id: this._conversationId\n          });\n        } catch (err) {\n          await showAlertDialog(this, {\n            title: \"Error starting pipeline\",\n            text: err.message || err\n          });\n          this._stopListening();\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_stopListening\",\n      value: function _stopListening() {\n        var _this$_audioRecorder4;\n        (_this$_audioRecorder4 = this._audioRecorder) === null || _this$_audioRecorder4 === void 0 || _this$_audioRecorder4.stop();\n        this.requestUpdate(\"_audioRecorder\");\n        // We're currently STTing, so finish audio\n        if (this._stt_binary_handler_id) {\n          if (this._audioBuffer) {\n            for (const chunk of this._audioBuffer) {\n              this._sendAudioChunk(chunk);\n            }\n          }\n          // Send empty message to indicate we're done streaming.\n          this._sendAudioChunk(new Int16Array());\n          this._stt_binary_handler_id = undefined;\n        }\n        this._audioBuffer = undefined;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_sendAudioChunk\",\n      value: function _sendAudioChunk(chunk) {\n        this.hass.connection.socket.binaryType = \"arraybuffer\";\n\n        // eslint-disable-next-line eqeqeq\n        if (this._stt_binary_handler_id == undefined) {\n          return;\n        }\n        // Turn into 8 bit so we can prefix our handler ID.\n        const data = new Uint8Array(1 + chunk.length * 2);\n        data[0] = this._stt_binary_handler_id;\n        data.set(new Uint8Array(chunk.buffer), 1);\n        this.hass.connection.socket.send(data);\n      }\n    }, {\n      kind: \"field\",\n      key: \"_playAudio\",\n      value() {\n        return () => {\n          var _this$_audio4;\n          (_this$_audio4 = this._audio) === null || _this$_audio4 === void 0 || _this$_audio4.play();\n        };\n      }\n    }, {\n      kind: \"field\",\n      key: \"_audioError\",\n      value() {\n        return () => {\n          var _this$_audio5;\n          showAlertDialog(this, {\n            title: \"Error playing audio.\"\n          });\n          (_this$_audio5 = this._audio) === null || _this$_audio5 === void 0 || _this$_audio5.removeAttribute(\"src\");\n        };\n      }\n    }, {\n      kind: \"field\",\n      key: \"_unloadAudio\",\n      value() {\n        return () => {\n          var _this$_audio6;\n          (_this$_audio6 = this._audio) === null || _this$_audio6 === void 0 || _this$_audio6.removeAttribute(\"src\");\n          this._audio = undefined;\n        };\n      }\n    }, {\n      kind: \"method\",\n      key: \"_scrollMessagesBottom\",\n      value: function _scrollMessagesBottom() {\n        const scrollContainer = this._scrollContainer;\n        if (!scrollContainer) {\n          return;\n        }\n        scrollContainer.scrollTo(0, 99999);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_computeMessageClasses\",\n      value: function _computeMessageClasses(message) {\n        return `message ${message.who} ${message.error ? \" error\" : \"\"}`;\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [haStyleDialog, css`\n        .listening-icon {\n          position: relative;\n          color: var(--secondary-text-color);\n          margin-right: -24px;\n          margin-inline-end: -24px;\n          margin-inline-start: initial;\n          direction: var(--direction);\n        }\n\n        .listening-icon[active] {\n          color: var(--primary-color);\n        }\n\n        .unsupported {\n          color: var(--error-color);\n          position: absolute;\n          --mdc-icon-size: 16px;\n          right: 5px;\n          top: 0px;\n        }\n\n        ha-dialog {\n          --primary-action-button-flex: 1;\n          --secondary-action-button-flex: 0;\n          --mdc-dialog-max-width: 500px;\n          --mdc-dialog-max-height: 500px;\n          --dialog-content-padding: 0;\n        }\n        ha-dialog-header a {\n          color: var(--primary-text-color);\n        }\n        div[slot=\"title\"] {\n          display: flex;\n          flex-direction: column;\n          margin: -4px 0;\n        }\n        ha-button-menu {\n          --mdc-theme-on-primary: var(--text-primary-color);\n          --mdc-theme-primary: var(--primary-color);\n          margin-top: -8px;\n          margin-bottom: 0;\n          margin-right: 0;\n          margin-inline-end: 0;\n          margin-left: -8px;\n          margin-inline-start: -8px;\n        }\n        ha-button-menu ha-button {\n          --mdc-theme-primary: var(--secondary-text-color);\n          --mdc-typography-button-text-transform: none;\n          --mdc-typography-button-font-size: unset;\n          --mdc-typography-button-font-weight: 400;\n          --mdc-typography-button-letter-spacing: var(\n            --mdc-typography-headline6-letter-spacing,\n            0.0125em\n          );\n          --mdc-typography-button-line-height: var(\n            --mdc-typography-headline6-line-height,\n            2rem\n          );\n          --button-height: auto;\n        }\n        ha-button-menu ha-button ha-svg-icon {\n          height: 28px;\n          margin-left: 4px;\n          margin-inline-start: 4px;\n          margin-inline-end: initial;\n          direction: var(--direction);\n        }\n        ha-list-item {\n          --mdc-list-item-meta-size: 16px;\n        }\n        ha-list-item ha-svg-icon {\n          margin-left: 4px;\n          margin-inline-start: 4px;\n          margin-inline-end: initial;\n          direction: var(--direction);\n          display: block;\n        }\n        ha-button-menu a {\n          text-decoration: none;\n        }\n        ha-textfield {\n          display: block;\n          overflow: hidden;\n        }\n        a.button {\n          text-decoration: none;\n        }\n        a.button > mwc-button {\n          width: 100%;\n        }\n        .side-by-side {\n          display: flex;\n          margin: 8px 0;\n        }\n        .side-by-side > * {\n          flex: 1 0;\n          padding: 4px;\n        }\n        .messages {\n          display: block;\n          height: 400px;\n          box-sizing: border-box;\n          position: relative;\n        }\n        @media all and (max-width: 450px), all and (max-height: 500px) {\n          ha-dialog {\n            --mdc-dialog-max-width: 100%;\n          }\n          .messages {\n            height: 100%;\n            flex: 1;\n          }\n        }\n        .messages-container {\n          position: absolute;\n          bottom: 0px;\n          right: 0px;\n          left: 0px;\n          padding: 24px;\n          box-sizing: border-box;\n          overflow-y: auto;\n          max-height: 100%;\n        }\n        .message {\n          font-size: 18px;\n          clear: both;\n          margin: 8px 0;\n          padding: 8px;\n          border-radius: 15px;\n        }\n        .message p {\n          margin: 0;\n        }\n        .message p:not(:last-child) {\n          margin-bottom: 8px;\n        }\n\n        .message.user {\n          margin-left: 24px;\n          margin-inline-start: 24px;\n          margin-inline-end: initial;\n          float: var(--float-end);\n          text-align: right;\n          border-bottom-right-radius: 0px;\n          background-color: var(--light-primary-color);\n          color: var(--text-light-primary-color, var(--primary-text-color));\n          direction: var(--direction);\n        }\n\n        .message.hass {\n          margin-right: 24px;\n          margin-inline-end: 24px;\n          margin-inline-start: initial;\n          float: var(--float-start);\n          border-bottom-left-radius: 0px;\n          background-color: var(--primary-color);\n          color: var(--text-primary-color);\n          direction: var(--direction);\n        }\n\n        .message a {\n          color: var(--text-primary-color);\n        }\n\n        .message img {\n          width: 100%;\n          border-radius: 10px;\n        }\n\n        .message.error {\n          background-color: var(--error-color);\n          color: var(--text-primary-color);\n        }\n\n        .input {\n          margin-left: 0;\n          margin-right: 0;\n        }\n\n        .bouncer {\n          width: 48px;\n          height: 48px;\n          position: absolute;\n        }\n        .double-bounce1,\n        .double-bounce2 {\n          width: 48px;\n          height: 48px;\n          border-radius: 50%;\n          background-color: var(--primary-color);\n          opacity: 0.2;\n          position: absolute;\n          top: 0;\n          left: 0;\n          -webkit-animation: sk-bounce 2s infinite ease-in-out;\n          animation: sk-bounce 2s infinite ease-in-out;\n        }\n        .double-bounce2 {\n          -webkit-animation-delay: -1s;\n          animation-delay: -1s;\n        }\n        @-webkit-keyframes sk-bounce {\n          0%,\n          100% {\n            -webkit-transform: scale(0);\n          }\n          50% {\n            -webkit-transform: scale(1);\n          }\n        }\n        @keyframes sk-bounce {\n          0%,\n          100% {\n            transform: scale(0);\n            -webkit-transform: scale(0);\n          }\n          50% {\n            transform: scale(1);\n            -webkit-transform: scale(1);\n          }\n        }\n\n        @media all and (max-width: 450px), all and (max-height: 500px) {\n          .message {\n            font-size: 16px;\n          }\n        }\n      `];\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["mdiAlertCircle","mdiChevronDown","mdiClose","mdiHelpCircleOutline","mdiMicrophone","mdiSend","mdiStar","css","html","LitElement","nothing","customElement","property","query","state","storage","fireEvent","stopPropagation","getAssistPipeline","listAssistPipelines","runAssistPipeline","haStyleDialog","AudioRecorder","documentationUrl","showAlertDialog","HaVoiceCommandDialog","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","subscribe","showDialog","params","_this$_pipeline","pipeline_id","_loadPipelines","_pipelineId","_preferredPipeline","_conversation","who","text","hass","localize","_opened","updateComplete","_scrollMessagesBottom","_pipelinePromise","start_listening","_pipeline","stt_engine","isSupported","_toggleListening","closeDialog","_this$_audioRecorder","_this$_audio","undefined","_pipelines","_conversationId","_audioRecorder","close","_audio","pause","dialog","localName","render","_this$_pipeline2","_this$_pipeline3","_this$_pipelines","_this$hass$user","_this$_audioRecorder2","supportsMicrophone","supportsSTT","name","map","pipeline","id","_selectPipeline","user","is_admin","message","_computeMessageClasses","_handleKeyUp","_handleInput","_showSendButton","_handleSendMessage","active","_handleListeningButton","willUpdate","changedProperties","has","_getPipeline","e","code","pipelines","preferred_pipeline","ev","currentTarget","updated","changedProps","_get","_getPrototypeOf","prototype","call","_addMessage","input","target","_processText","_messageInput","_this$_audio2","_this$_pipeline4","unsub","event","type","_event$data$intent_ou","data","intent_output","conversation_id","plain","response","speech","requestUpdate","error","start_stage","end_stage","_unused","preventDefault","_this$_audioRecorder3","_showNotSupportedMessage","_startListening","_stopListening","documentation_link","_this$_audio3","audio","_audioBuffer","push","_sendAudioChunk","_stt_binary_handler_id","userMessage","start","then","hassMessage","_this$_pipeline5","_this$_pipeline6","runner_data","stt_binary_handler_id","buffer","stt_output","_event$data$intent_ou2","url","tts_output","Audio","play","addEventListener","_unloadAudio","_playAudio","_audioError","tts_engine","sample_rate","sampleRate","err","title","_this$_audioRecorder4","stop","chunk","Int16Array","connection","socket","binaryType","Uint8Array","length","set","send","_this$_audio4","_this$_audio5","removeAttribute","_this$_audio6","scrollContainer","_scrollContainer","scrollTo","static","styles"],"sources":["/Users/sercanardil/Desktop/frontend/src/dialogs/voice-command-dialog/ha-voice-command-dialog.ts"],"sourcesContent":["import \"@material/mwc-button/mwc-button\";\nimport {\n  mdiAlertCircle,\n  mdiChevronDown,\n  mdiClose,\n  mdiHelpCircleOutline,\n  mdiMicrophone,\n  mdiSend,\n  mdiStar,\n} from \"@mdi/js\";\nimport {\n  css,\n  CSSResultGroup,\n  html,\n  LitElement,\n  nothing,\n  PropertyValues,\n  TemplateResult,\n} from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators\";\nimport { storage } from \"../../common/decorators/storage\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { stopPropagation } from \"../../common/dom/stop_propagation\";\nimport \"../../components/ha-button\";\nimport \"../../components/ha-button-menu\";\nimport \"../../components/ha-dialog\";\nimport \"../../components/ha-dialog-header\";\nimport \"../../components/ha-icon-button\";\nimport \"../../components/ha-list-item\";\nimport \"../../components/ha-textfield\";\nimport type { HaTextField } from \"../../components/ha-textfield\";\nimport {\n  AssistPipeline,\n  getAssistPipeline,\n  listAssistPipelines,\n  runAssistPipeline,\n} from \"../../data/assist_pipeline\";\nimport { haStyleDialog } from \"../../resources/styles\";\nimport type { HomeAssistant } from \"../../types\";\nimport { AudioRecorder } from \"../../util/audio-recorder\";\nimport { documentationUrl } from \"../../util/documentation-url\";\nimport { showAlertDialog } from \"../generic/show-dialog-box\";\nimport { VoiceCommandDialogParams } from \"./show-ha-voice-command-dialog\";\n\ninterface Message {\n  who: string;\n  text?: string | TemplateResult;\n  error?: boolean;\n}\n\n@customElement(\"ha-voice-command-dialog\")\nexport class HaVoiceCommandDialog extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @state() private _conversation?: Message[];\n\n  @state() private _opened = false;\n\n  @storage({\n    key: \"AssistPipelineId\",\n    state: true,\n    subscribe: false,\n  })\n  private _pipelineId?: string;\n\n  @state() private _pipeline?: AssistPipeline;\n\n  @state() private _showSendButton = false;\n\n  @state() private _pipelines?: AssistPipeline[];\n\n  @state() private _preferredPipeline?: string;\n\n  @query(\"#scroll-container\") private _scrollContainer!: HTMLDivElement;\n\n  @query(\"#message-input\") private _messageInput!: HaTextField;\n\n  private _conversationId: string | null = null;\n\n  private _audioRecorder?: AudioRecorder;\n\n  private _audioBuffer?: Int16Array[];\n\n  private _audio?: HTMLAudioElement;\n\n  private _stt_binary_handler_id?: number | null;\n\n  private _pipelinePromise?: Promise<AssistPipeline>;\n\n  public async showDialog(\n    params: Required<VoiceCommandDialogParams>\n  ): Promise<void> {\n    if (params.pipeline_id === \"last_used\") {\n      // Do not set pipeline id (retrieve from storage)\n    } else if (params.pipeline_id === \"preferred\") {\n      await this._loadPipelines();\n      this._pipelineId = this._preferredPipeline;\n    } else {\n      this._pipelineId = params.pipeline_id;\n    }\n\n    this._conversation = [\n      {\n        who: \"hass\",\n        text: this.hass.localize(\"ui.dialogs.voice_command.how_can_i_help\"),\n      },\n    ];\n    this._opened = true;\n    await this.updateComplete;\n    this._scrollMessagesBottom();\n\n    await this._pipelinePromise;\n    if (\n      params?.start_listening &&\n      this._pipeline?.stt_engine &&\n      AudioRecorder.isSupported\n    ) {\n      this._toggleListening();\n    }\n  }\n\n  public async closeDialog(): Promise<void> {\n    this._opened = false;\n    this._pipeline = undefined;\n    this._pipelines = undefined;\n    this._conversation = undefined;\n    this._conversationId = null;\n    this._audioRecorder?.close();\n    this._audioRecorder = undefined;\n    this._audio?.pause();\n    fireEvent(this, \"dialog-closed\", { dialog: this.localName });\n  }\n\n  protected render() {\n    if (!this._opened) {\n      return nothing;\n    }\n\n    const supportsMicrophone = AudioRecorder.isSupported;\n    const supportsSTT = this._pipeline?.stt_engine;\n\n    return html`\n      <ha-dialog\n        open\n        @closed=${this.closeDialog}\n        .heading=${this.hass.localize(\"ui.dialogs.voice_command.title\")}\n        flexContent\n      >\n        <ha-dialog-header slot=\"heading\">\n          <ha-icon-button\n            slot=\"navigationIcon\"\n            dialogAction=\"cancel\"\n            .label=${this.hass.localize(\"ui.common.close\")}\n            .path=${mdiClose}\n          ></ha-icon-button>\n          <div slot=\"title\">\n            ${this.hass.localize(\"ui.dialogs.voice_command.title\")}\n            <ha-button-menu\n              @opened=${this._loadPipelines}\n              @closed=${stopPropagation}\n              activatable\n              fixed\n            >\n              <ha-button slot=\"trigger\">\n                ${this._pipeline?.name}\n                <ha-svg-icon\n                  slot=\"trailingIcon\"\n                  .path=${mdiChevronDown}\n                ></ha-svg-icon>\n              </ha-button>\n              ${this._pipelines?.map(\n                (pipeline) =>\n                  html`<ha-list-item\n                    ?selected=${pipeline.id === this._pipelineId ||\n                    (!this._pipelineId &&\n                      pipeline.id === this._preferredPipeline)}\n                    .pipeline=${pipeline.id}\n                    @click=${this._selectPipeline}\n                    .hasMeta=${pipeline.id === this._preferredPipeline}\n                  >\n                    ${pipeline.name}${pipeline.id === this._preferredPipeline\n                      ? html`\n                          <ha-svg-icon\n                            slot=\"meta\"\n                            .path=${mdiStar}\n                          ></ha-svg-icon>\n                        `\n                      : nothing}\n                  </ha-list-item>`\n              )}\n              ${this.hass.user?.is_admin\n                ? html`<li divider role=\"separator\"></li>\n                    <a href=\"/config/voice-assistants/assistants\"\n                      ><ha-list-item @click=${this.closeDialog}\n                        >${this.hass.localize(\n                          \"ui.dialogs.voice_command.manage_assistants\"\n                        )}</ha-list-item\n                      ></a\n                    >`\n                : nothing}\n            </ha-button-menu>\n          </div>\n          <a\n            href=${documentationUrl(this.hass, \"/docs/assist/\")}\n            slot=\"actionItems\"\n            target=\"_blank\"\n            rel=\"noopener noreferer\"\n          >\n            <ha-icon-button\n              .label=${this.hass.localize(\"ui.common.help\")}\n              .path=${mdiHelpCircleOutline}\n            ></ha-icon-button>\n          </a>\n        </ha-dialog-header>\n        <div class=\"messages\">\n          <div class=\"messages-container\" id=\"scroll-container\">\n            ${this._conversation!.map(\n              (message) => html`\n                <div class=${this._computeMessageClasses(message)}>\n                  ${message.text}\n                </div>\n              `\n            )}\n          </div>\n        </div>\n        <div class=\"input\" slot=\"primaryAction\">\n          <ha-textfield\n            id=\"message-input\"\n            @keyup=${this._handleKeyUp}\n            @input=${this._handleInput}\n            .label=${this.hass.localize(`ui.dialogs.voice_command.input_label`)}\n            dialogInitialFocus\n            iconTrailing\n          >\n            <span slot=\"trailingIcon\">\n              ${this._showSendButton || !supportsSTT\n                ? html`\n                    <ha-icon-button\n                      class=\"listening-icon\"\n                      .path=${mdiSend}\n                      @click=${this._handleSendMessage}\n                      .label=${this.hass.localize(\n                        \"ui.dialogs.voice_command.send_text\"\n                      )}\n                    >\n                    </ha-icon-button>\n                  `\n                : html`\n                    ${this._audioRecorder?.active\n                      ? html`\n                          <div class=\"bouncer\">\n                            <div class=\"double-bounce1\"></div>\n                            <div class=\"double-bounce2\"></div>\n                          </div>\n                        `\n                      : nothing}\n\n                    <div class=\"listening-icon\">\n                      <ha-icon-button\n                        .path=${mdiMicrophone}\n                        @click=${this._handleListeningButton}\n                        .label=${this.hass.localize(\n                          \"ui.dialogs.voice_command.start_listening\"\n                        )}\n                      >\n                      </ha-icon-button>\n                      ${!supportsMicrophone\n                        ? html`\n                            <ha-svg-icon\n                              .path=${mdiAlertCircle}\n                              class=\"unsupported\"\n                            ></ha-svg-icon>\n                          `\n                        : null}\n                    </div>\n                  `}\n            </span>\n          </ha-textfield>\n        </div>\n      </ha-dialog>\n    `;\n  }\n\n  protected willUpdate(changedProperties: PropertyValues): void {\n    if (\n      changedProperties.has(\"_pipelineId\") ||\n      (changedProperties.has(\"_opened\") && this._opened === true)\n    ) {\n      this._getPipeline();\n    }\n  }\n\n  private async _getPipeline() {\n    try {\n      this._pipelinePromise = getAssistPipeline(this.hass, this._pipelineId);\n      this._pipeline = await this._pipelinePromise;\n    } catch (e: any) {\n      if (e.code === \"not_found\") {\n        this._pipelineId = undefined;\n      }\n    }\n  }\n\n  private async _loadPipelines() {\n    if (this._pipelines) {\n      return;\n    }\n    const { pipelines, preferred_pipeline } = await listAssistPipelines(\n      this.hass\n    );\n    this._pipelines = pipelines;\n    this._preferredPipeline = preferred_pipeline || undefined;\n  }\n\n  private async _selectPipeline(ev: CustomEvent) {\n    this._pipelineId = (ev.currentTarget as any).pipeline;\n    this._conversation = [\n      {\n        who: \"hass\",\n        text: this.hass.localize(\"ui.dialogs.voice_command.how_can_i_help\"),\n      },\n    ];\n    await this.updateComplete;\n    this._scrollMessagesBottom();\n  }\n\n  protected updated(changedProps: PropertyValues) {\n    super.updated(changedProps);\n    if (changedProps.has(\"_conversation\") || changedProps.has(\"results\")) {\n      this._scrollMessagesBottom();\n    }\n  }\n\n  private _addMessage(message: Message) {\n    this._conversation = [...this._conversation!, message];\n  }\n\n  private _handleKeyUp(ev: KeyboardEvent) {\n    const input = ev.target as HaTextField;\n    if (ev.key === \"Enter\" && input.value) {\n      this._processText(input.value);\n      input.value = \"\";\n      this._showSendButton = false;\n    }\n  }\n\n  private _handleInput(ev: InputEvent) {\n    const value = (ev.target as HaTextField).value;\n    if (value && !this._showSendButton) {\n      this._showSendButton = true;\n    } else if (!value && this._showSendButton) {\n      this._showSendButton = false;\n    }\n  }\n\n  private _handleSendMessage() {\n    if (this._messageInput.value) {\n      this._processText(this._messageInput.value);\n      this._messageInput.value = \"\";\n      this._showSendButton = false;\n    }\n  }\n\n  private async _processText(text: string) {\n    this._audio?.pause();\n    this._addMessage({ who: \"user\", text });\n    const message: Message = {\n      who: \"hass\",\n      text: \"…\",\n    };\n    // To make sure the answer is placed at the right user text, we add it before we process it\n    this._addMessage(message);\n    try {\n      const unsub = await runAssistPipeline(\n        this.hass,\n        (event) => {\n          if (event.type === \"intent-end\") {\n            this._conversationId = event.data.intent_output.conversation_id;\n            const plain = event.data.intent_output.response.speech?.plain;\n            if (plain) {\n              message.text = plain.speech;\n            }\n            this.requestUpdate(\"_conversation\");\n            unsub();\n          }\n          if (event.type === \"error\") {\n            message.text = event.data.message;\n            message.error = true;\n            this.requestUpdate(\"_conversation\");\n            unsub();\n          }\n        },\n        {\n          start_stage: \"intent\",\n          input: { text },\n          end_stage: \"intent\",\n          pipeline: this._pipeline?.id,\n          conversation_id: this._conversationId,\n        }\n      );\n    } catch {\n      message.text = this.hass.localize(\"ui.dialogs.voice_command.error\");\n      message.error = true;\n      this.requestUpdate(\"_conversation\");\n    }\n  }\n\n  private _handleListeningButton(ev) {\n    ev.stopPropagation();\n    ev.preventDefault();\n    this._toggleListening();\n  }\n\n  private _toggleListening() {\n    const supportsMicrophone = AudioRecorder.isSupported;\n    if (!supportsMicrophone) {\n      this._showNotSupportedMessage();\n      return;\n    }\n    if (!this._audioRecorder?.active) {\n      this._startListening();\n    } else {\n      this._stopListening();\n    }\n  }\n\n  private async _showNotSupportedMessage() {\n    this._addMessage({\n      who: \"hass\",\n      text: html`\n        <p>\n          ${this.hass.localize(\n            \"ui.dialogs.voice_command.not_supported_microphone_browser\"\n          )}\n        </p>\n        <p>\n          ${this.hass.localize(\n            \"ui.dialogs.voice_command.not_supported_microphone_documentation\",\n            {\n              documentation_link: html`\n                <a\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href=${documentationUrl(\n                    this.hass,\n                    \"/docs/configuration/securing/#remote-access\"\n                  )}\n                >\n                  ${this.hass.localize(\n                    \"ui.dialogs.voice_command.not_supported_microphone_documentation_link\"\n                  )}\n                </a>\n              `,\n            }\n          )}\n        </p>\n      `,\n    });\n  }\n\n  private async _startListening() {\n    this._audio?.pause();\n    if (!this._audioRecorder) {\n      this._audioRecorder = new AudioRecorder((audio) => {\n        if (this._audioBuffer) {\n          this._audioBuffer.push(audio);\n        } else {\n          this._sendAudioChunk(audio);\n        }\n      });\n    }\n    this._stt_binary_handler_id = undefined;\n    this._audioBuffer = [];\n    const userMessage: Message = {\n      who: \"user\",\n      text: \"…\",\n    };\n    this._audioRecorder.start().then(() => {\n      this._addMessage(userMessage);\n      this.requestUpdate(\"_audioRecorder\");\n    });\n    const hassMessage: Message = {\n      who: \"hass\",\n      text: \"…\",\n    };\n    // To make sure the answer is placed at the right user text, we add it before we process it\n    try {\n      const unsub = await runAssistPipeline(\n        this.hass,\n        (event) => {\n          if (event.type === \"run-start\") {\n            this._stt_binary_handler_id =\n              event.data.runner_data.stt_binary_handler_id;\n          }\n\n          // When we start STT stage, the WS has a binary handler\n          if (event.type === \"stt-start\" && this._audioBuffer) {\n            // Send the buffer over the WS to the STT engine.\n            for (const buffer of this._audioBuffer) {\n              this._sendAudioChunk(buffer);\n            }\n            this._audioBuffer = undefined;\n          }\n\n          // Stop recording if the server is done with STT stage\n          if (event.type === \"stt-end\") {\n            this._stt_binary_handler_id = undefined;\n            this._stopListening();\n            userMessage.text = event.data.stt_output.text;\n            this.requestUpdate(\"_conversation\");\n            // To make sure the answer is placed at the right user text, we add it before we process it\n            this._addMessage(hassMessage);\n          }\n\n          if (event.type === \"intent-end\") {\n            this._conversationId = event.data.intent_output.conversation_id;\n            const plain = event.data.intent_output.response.speech?.plain;\n            if (plain) {\n              hassMessage.text = plain.speech;\n            }\n            this.requestUpdate(\"_conversation\");\n          }\n\n          if (event.type === \"tts-end\") {\n            const url = event.data.tts_output.url;\n            this._audio = new Audio(url);\n            this._audio.play();\n            this._audio.addEventListener(\"ended\", this._unloadAudio);\n            this._audio.addEventListener(\"pause\", this._unloadAudio);\n            this._audio.addEventListener(\"canplaythrough\", this._playAudio);\n            this._audio.addEventListener(\"error\", this._audioError);\n          }\n\n          if (event.type === \"run-end\") {\n            this._stt_binary_handler_id = undefined;\n            unsub();\n          }\n\n          if (event.type === \"error\") {\n            this._stt_binary_handler_id = undefined;\n            if (userMessage.text === \"…\") {\n              userMessage.text = event.data.message;\n              userMessage.error = true;\n            } else {\n              hassMessage.text = event.data.message;\n              hassMessage.error = true;\n            }\n            this._stopListening();\n            this.requestUpdate(\"_conversation\");\n            unsub();\n          }\n        },\n        {\n          start_stage: \"stt\",\n          end_stage: this._pipeline?.tts_engine ? \"tts\" : \"intent\",\n          input: { sample_rate: this._audioRecorder.sampleRate! },\n          pipeline: this._pipeline?.id,\n          conversation_id: this._conversationId,\n        }\n      );\n    } catch (err: any) {\n      await showAlertDialog(this, {\n        title: \"Error starting pipeline\",\n        text: err.message || err,\n      });\n      this._stopListening();\n    }\n  }\n\n  private _stopListening() {\n    this._audioRecorder?.stop();\n    this.requestUpdate(\"_audioRecorder\");\n    // We're currently STTing, so finish audio\n    if (this._stt_binary_handler_id) {\n      if (this._audioBuffer) {\n        for (const chunk of this._audioBuffer) {\n          this._sendAudioChunk(chunk);\n        }\n      }\n      // Send empty message to indicate we're done streaming.\n      this._sendAudioChunk(new Int16Array());\n      this._stt_binary_handler_id = undefined;\n    }\n    this._audioBuffer = undefined;\n  }\n\n  private _sendAudioChunk(chunk: Int16Array) {\n    this.hass.connection.socket!.binaryType = \"arraybuffer\";\n\n    // eslint-disable-next-line eqeqeq\n    if (this._stt_binary_handler_id == undefined) {\n      return;\n    }\n    // Turn into 8 bit so we can prefix our handler ID.\n    const data = new Uint8Array(1 + chunk.length * 2);\n    data[0] = this._stt_binary_handler_id;\n    data.set(new Uint8Array(chunk.buffer), 1);\n\n    this.hass.connection.socket!.send(data);\n  }\n\n  private _playAudio = () => {\n    this._audio?.play();\n  };\n\n  private _audioError = () => {\n    showAlertDialog(this, { title: \"Error playing audio.\" });\n    this._audio?.removeAttribute(\"src\");\n  };\n\n  private _unloadAudio = () => {\n    this._audio?.removeAttribute(\"src\");\n    this._audio = undefined;\n  };\n\n  private _scrollMessagesBottom() {\n    const scrollContainer = this._scrollContainer;\n    if (!scrollContainer) {\n      return;\n    }\n    scrollContainer.scrollTo(0, 99999);\n  }\n\n  private _computeMessageClasses(message: Message) {\n    return `message ${message.who} ${message.error ? \" error\" : \"\"}`;\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyleDialog,\n      css`\n        .listening-icon {\n          position: relative;\n          color: var(--secondary-text-color);\n          margin-right: -24px;\n          margin-inline-end: -24px;\n          margin-inline-start: initial;\n          direction: var(--direction);\n        }\n\n        .listening-icon[active] {\n          color: var(--primary-color);\n        }\n\n        .unsupported {\n          color: var(--error-color);\n          position: absolute;\n          --mdc-icon-size: 16px;\n          right: 5px;\n          top: 0px;\n        }\n\n        ha-dialog {\n          --primary-action-button-flex: 1;\n          --secondary-action-button-flex: 0;\n          --mdc-dialog-max-width: 500px;\n          --mdc-dialog-max-height: 500px;\n          --dialog-content-padding: 0;\n        }\n        ha-dialog-header a {\n          color: var(--primary-text-color);\n        }\n        div[slot=\"title\"] {\n          display: flex;\n          flex-direction: column;\n          margin: -4px 0;\n        }\n        ha-button-menu {\n          --mdc-theme-on-primary: var(--text-primary-color);\n          --mdc-theme-primary: var(--primary-color);\n          margin-top: -8px;\n          margin-bottom: 0;\n          margin-right: 0;\n          margin-inline-end: 0;\n          margin-left: -8px;\n          margin-inline-start: -8px;\n        }\n        ha-button-menu ha-button {\n          --mdc-theme-primary: var(--secondary-text-color);\n          --mdc-typography-button-text-transform: none;\n          --mdc-typography-button-font-size: unset;\n          --mdc-typography-button-font-weight: 400;\n          --mdc-typography-button-letter-spacing: var(\n            --mdc-typography-headline6-letter-spacing,\n            0.0125em\n          );\n          --mdc-typography-button-line-height: var(\n            --mdc-typography-headline6-line-height,\n            2rem\n          );\n          --button-height: auto;\n        }\n        ha-button-menu ha-button ha-svg-icon {\n          height: 28px;\n          margin-left: 4px;\n          margin-inline-start: 4px;\n          margin-inline-end: initial;\n          direction: var(--direction);\n        }\n        ha-list-item {\n          --mdc-list-item-meta-size: 16px;\n        }\n        ha-list-item ha-svg-icon {\n          margin-left: 4px;\n          margin-inline-start: 4px;\n          margin-inline-end: initial;\n          direction: var(--direction);\n          display: block;\n        }\n        ha-button-menu a {\n          text-decoration: none;\n        }\n        ha-textfield {\n          display: block;\n          overflow: hidden;\n        }\n        a.button {\n          text-decoration: none;\n        }\n        a.button > mwc-button {\n          width: 100%;\n        }\n        .side-by-side {\n          display: flex;\n          margin: 8px 0;\n        }\n        .side-by-side > * {\n          flex: 1 0;\n          padding: 4px;\n        }\n        .messages {\n          display: block;\n          height: 400px;\n          box-sizing: border-box;\n          position: relative;\n        }\n        @media all and (max-width: 450px), all and (max-height: 500px) {\n          ha-dialog {\n            --mdc-dialog-max-width: 100%;\n          }\n          .messages {\n            height: 100%;\n            flex: 1;\n          }\n        }\n        .messages-container {\n          position: absolute;\n          bottom: 0px;\n          right: 0px;\n          left: 0px;\n          padding: 24px;\n          box-sizing: border-box;\n          overflow-y: auto;\n          max-height: 100%;\n        }\n        .message {\n          font-size: 18px;\n          clear: both;\n          margin: 8px 0;\n          padding: 8px;\n          border-radius: 15px;\n        }\n        .message p {\n          margin: 0;\n        }\n        .message p:not(:last-child) {\n          margin-bottom: 8px;\n        }\n\n        .message.user {\n          margin-left: 24px;\n          margin-inline-start: 24px;\n          margin-inline-end: initial;\n          float: var(--float-end);\n          text-align: right;\n          border-bottom-right-radius: 0px;\n          background-color: var(--light-primary-color);\n          color: var(--text-light-primary-color, var(--primary-text-color));\n          direction: var(--direction);\n        }\n\n        .message.hass {\n          margin-right: 24px;\n          margin-inline-end: 24px;\n          margin-inline-start: initial;\n          float: var(--float-start);\n          border-bottom-left-radius: 0px;\n          background-color: var(--primary-color);\n          color: var(--text-primary-color);\n          direction: var(--direction);\n        }\n\n        .message a {\n          color: var(--text-primary-color);\n        }\n\n        .message img {\n          width: 100%;\n          border-radius: 10px;\n        }\n\n        .message.error {\n          background-color: var(--error-color);\n          color: var(--text-primary-color);\n        }\n\n        .input {\n          margin-left: 0;\n          margin-right: 0;\n        }\n\n        .bouncer {\n          width: 48px;\n          height: 48px;\n          position: absolute;\n        }\n        .double-bounce1,\n        .double-bounce2 {\n          width: 48px;\n          height: 48px;\n          border-radius: 50%;\n          background-color: var(--primary-color);\n          opacity: 0.2;\n          position: absolute;\n          top: 0;\n          left: 0;\n          -webkit-animation: sk-bounce 2s infinite ease-in-out;\n          animation: sk-bounce 2s infinite ease-in-out;\n        }\n        .double-bounce2 {\n          -webkit-animation-delay: -1s;\n          animation-delay: -1s;\n        }\n        @-webkit-keyframes sk-bounce {\n          0%,\n          100% {\n            -webkit-transform: scale(0);\n          }\n          50% {\n            -webkit-transform: scale(1);\n          }\n        }\n        @keyframes sk-bounce {\n          0%,\n          100% {\n            transform: scale(0);\n            -webkit-transform: scale(0);\n          }\n          50% {\n            transform: scale(1);\n            -webkit-transform: scale(1);\n          }\n        }\n\n        @media all and (max-width: 450px), all and (max-height: 500px) {\n          .message {\n            font-size: 16px;\n          }\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-voice-command-dialog\": HaVoiceCommandDialog;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}