{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _templateObject;\nimport \"core-js/modules/es.array.concat.js\";\nimport { SwitchBase } from \"@material/mwc-switch/deprecated/mwc-switch-base\";\nimport { styles } from \"@material/mwc-switch/deprecated/mwc-switch.css\";\nimport { css } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { forwardHaptic } from \"../data/haptics\";\nexport var HaSwitch = _decorate([customElement(\"ha-switch\")], function (_initialize, _SwitchBase) {\n  var HaSwitch = /*#__PURE__*/function (_SwitchBase2) {\n    _inherits(HaSwitch, _SwitchBase2);\n    function HaSwitch() {\n      var _this;\n      _classCallCheck(this, HaSwitch);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, HaSwitch, [].concat(args));\n      _initialize(_assertThisInitialized(_this));\n      return _this;\n    }\n    return _createClass(HaSwitch);\n  }(_SwitchBase);\n  return {\n    F: HaSwitch,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"haptic\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"method\",\n      key: \"firstUpdated\",\n      value:\n      // Generate a haptic vibration.\n      // Only set to true if the new value of the switch is applied right away when toggling.\n      // Do not add haptic when a user is required to press save.\n\n      function firstUpdated() {\n        var _this2 = this;\n        _get(_getPrototypeOf(HaSwitch.prototype), \"firstUpdated\", this).call(this);\n        this.addEventListener(\"change\", function () {\n          if (_this2.haptic) {\n            forwardHaptic(\"light\");\n          }\n        });\n      }\n    }, {\n      kind: \"field\",\n      static: true,\n      key: \"styles\",\n      value: function value() {\n        return [styles, css(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      :host {\\n        --mdc-theme-secondary: var(--switch-checked-color);\\n      }\\n      .mdc-switch.mdc-switch--checked .mdc-switch__thumb {\\n        background-color: var(--switch-checked-button-color);\\n        border-color: var(--switch-checked-button-color);\\n      }\\n      .mdc-switch.mdc-switch--checked .mdc-switch__track {\\n        background-color: var(--switch-checked-track-color);\\n        border-color: var(--switch-checked-track-color);\\n      }\\n      .mdc-switch:not(.mdc-switch--checked) .mdc-switch__thumb {\\n        background-color: var(--switch-unchecked-button-color);\\n        border-color: var(--switch-unchecked-button-color);\\n      }\\n      .mdc-switch:not(.mdc-switch--checked) .mdc-switch__track {\\n        background-color: var(--switch-unchecked-track-color);\\n        border-color: var(--switch-unchecked-track-color);\\n      }\\n    \"])))];\n      }\n    }]\n  };\n}, SwitchBase);","map":{"version":3,"names":["SwitchBase","styles","css","customElement","property","forwardHaptic","HaSwitch","_decorate","_initialize","_SwitchBase","_SwitchBase2","_inherits","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_assertThisInitialized","_createClass","F","d","kind","decorators","type","Boolean","key","value","firstUpdated","_this2","_get","_getPrototypeOf","prototype","call","addEventListener","haptic","static","_templateObject","_taggedTemplateLiteral"],"sources":["/workspaces/frontend/src/components/ha-switch.ts"],"sourcesContent":["import { SwitchBase } from \"@material/mwc-switch/deprecated/mwc-switch-base\";\nimport { styles } from \"@material/mwc-switch/deprecated/mwc-switch.css\";\nimport { css } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { forwardHaptic } from \"../data/haptics\";\n\n@customElement(\"ha-switch\")\nexport class HaSwitch extends SwitchBase {\n  // Generate a haptic vibration.\n  // Only set to true if the new value of the switch is applied right away when toggling.\n  // Do not add haptic when a user is required to press save.\n  @property({ type: Boolean }) public haptic = false;\n\n  protected firstUpdated() {\n    super.firstUpdated();\n    this.addEventListener(\"change\", () => {\n      if (this.haptic) {\n        forwardHaptic(\"light\");\n      }\n    });\n  }\n\n  static override styles = [\n    styles,\n    css`\n      :host {\n        --mdc-theme-secondary: var(--switch-checked-color);\n      }\n      .mdc-switch.mdc-switch--checked .mdc-switch__thumb {\n        background-color: var(--switch-checked-button-color);\n        border-color: var(--switch-checked-button-color);\n      }\n      .mdc-switch.mdc-switch--checked .mdc-switch__track {\n        background-color: var(--switch-checked-track-color);\n        border-color: var(--switch-checked-track-color);\n      }\n      .mdc-switch:not(.mdc-switch--checked) .mdc-switch__thumb {\n        background-color: var(--switch-unchecked-button-color);\n        border-color: var(--switch-unchecked-button-color);\n      }\n      .mdc-switch:not(.mdc-switch--checked) .mdc-switch__track {\n        background-color: var(--switch-unchecked-track-color);\n        border-color: var(--switch-unchecked-track-color);\n      }\n    `,\n  ];\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-switch\": HaSwitch;\n  }\n}\n"],"mappings":";;;;;;;;;;;AAAA,SAASA,UAAU,QAAQ,iDAAiD;AAC5E,SAASC,MAAM,QAAQ,gDAAgD;AACvE,SAASC,GAAG,QAAQ,KAAK;AACzB,SAASC,aAAa,EAAEC,QAAQ,QAAQ,gBAAgB;AACxD,SAASC,aAAa,QAAQ,iBAAiB;AAE/C,WACaC,QAAQ,GAAAC,SAAA,EADpBJ,aAAa,CAAC,WAAW,CAAC,aAAAK,WAAA,EAAAC,WAAA;EAAA,IACdH,QAAQ,0BAAAI,YAAA;IAAAC,SAAA,CAAAL,QAAA,EAAAI,YAAA;IAAA,SAAAJ,SAAA;MAAA,IAAAM,KAAA;MAAAC,eAAA,OAAAP,QAAA;MAAA,SAAAQ,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAAC,IAAA,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;QAAAF,IAAA,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;MAAA;MAAAP,KAAA,GAAAQ,UAAA,OAAAd,QAAA,KAAAe,MAAA,CAAAJ,IAAA;MAAAT,WAAA,CAAAc,sBAAA,CAAAV,KAAA;MAAA,OAAAA,KAAA;IAAA;IAAA,OAAAW,YAAA,CAAAjB,QAAA;EAAA,EAAAG,WAAA;EAAA;IAAAe,CAAA,EAARlB,QAAQ;IAAAmB,CAAA;MAAAC,IAAA;MAAAC,UAAA,GAIlBvB,QAAQ,CAAC;QAAEwB,IAAI,EAAEC;MAAQ,CAAC,CAAC;MAAAC,GAAA;MAAAC,KAAA,WAAAA,MAAA;QAAA,OAAiB,KAAK;MAAA;IAAA;MAAAL,IAAA;MAAAI,GAAA;MAAAC,KAAA;MAHlD;MACA;MACA;;MAGA,SAAAC,aAAA,EAAyB;QAAA,IAAAC,MAAA;QACvBC,IAAA,CAAAC,eAAA,CAPS7B,QAAQ,CAAA8B,SAAA,yBAAAC,IAAA;QAQjB,IAAI,CAACC,gBAAgB,CAAC,QAAQ,EAAE,YAAM;UACpC,IAAIL,MAAI,CAACM,MAAM,EAAE;YACflC,aAAa,CAAC,OAAO,CAAC;UACxB;QACF,CAAC,CAAC;MACJ;IAAC;MAAAqB,IAAA;MAAAc,MAAA;MAAAV,GAAA;MAAAC,KAAA,WAAAA,MAAA;QAAA,OAEwB,CACvB9B,MAAM,EACNC,GAAG,CAAAuC,eAAA,KAAAA,eAAA,GAAAC,sBAAA,g3BAqBJ;MAAA;IAAA;EAAA;AAAA,GAtC2B1C,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}