{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _decorate from \"@babel/runtime/helpers/decorate\";\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5;\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.parse-int.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nvar mdiCodeBraces = \"M8,3A2,2 0 0,0 6,5V9A2,2 0 0,1 4,11H3V13H4A2,2 0 0,1 6,15V19A2,2 0 0,0 8,21H10V19H8V14A2,2 0 0,0 6,12A2,2 0 0,0 8,10V5H10V3M16,3A2,2 0 0,1 18,5V9A2,2 0 0,0 20,11H21V13H20A2,2 0 0,0 18,15V19A2,2 0 0,1 16,21H14V19H16V14A2,2 0 0,1 18,12A2,2 0 0,1 16,10V5H14V3H16Z\";\nvar mdiContentCopy = \"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\";\nvar mdiContentCut = \"M19,3L13,9L15,11L22,4V3M12,12.5A0.5,0.5 0 0,1 11.5,12A0.5,0.5 0 0,1 12,11.5A0.5,0.5 0 0,1 12.5,12A0.5,0.5 0 0,1 12,12.5M6,20A2,2 0 0,1 4,18C4,16.89 4.9,16 6,16A2,2 0 0,1 8,18C8,19.11 7.1,20 6,20M6,8A2,2 0 0,1 4,6C4,4.89 4.9,4 6,4A2,2 0 0,1 8,6C8,7.11 7.1,8 6,8M9.64,7.64C9.87,7.14 10,6.59 10,6A4,4 0 0,0 6,2A4,4 0 0,0 2,6A4,4 0 0,0 6,10C6.59,10 7.14,9.87 7.64,9.64L10,12L7.64,14.36C7.14,14.13 6.59,14 6,14A4,4 0 0,0 2,18A4,4 0 0,0 6,22A4,4 0 0,0 10,18C10,17.41 9.87,16.86 9.64,16.36L12,14L19,21H22V20L9.64,7.64Z\";\nvar mdiDelete = \"M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z\";\nvar mdiListBoxOutline = \"M11 15H17V17H11V15M9 7H7V9H9V7M11 13H17V11H11V13M11 9H17V7H11V9M9 11H7V13H9V11M21 5V19C21 20.1 20.1 21 19 21H5C3.9 21 3 20.1 3 19V5C3 3.9 3.9 3 5 3H19C20.1 3 21 3.9 21 5M19 5H5V19H19V5M9 15H7V17H9V15Z\";\nvar mdiPlus = \"M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z\";\nimport \"@polymer/paper-tabs\";\nimport \"@polymer/paper-tabs/paper-tab\";\nimport deepClone from \"deep-clone-simple\";\nimport { LitElement, css, html, nothing } from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators\";\nimport { any, array, assert, assign, object, optional, string } from \"superstruct\";\nimport { storage } from \"../../../../common/decorators/storage\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport \"../../../../components/ha-icon-button\";\nimport \"../../../../components/ha-icon-button-arrow-prev\";\nimport \"../../../../components/ha-icon-button-arrow-next\";\nimport \"../card-editor/hui-card-element-editor\";\nimport \"../card-editor/hui-card-picker\";\nimport { baseLovelaceCardConfig } from \"../structs/base-card-struct\";\nimport { configElementStyle } from \"./config-elements-style\";\nvar cardConfigStruct = assign(baseLovelaceCardConfig, object({\n  cards: array(any()),\n  title: optional(string())\n}));\nexport var HuiStackCardEditor = _decorate([customElement(\"hui-stack-card-editor\")], function (_initialize, _LitElement) {\n  var HuiStackCardEditor = /*#__PURE__*/function (_LitElement2) {\n    _inherits(HuiStackCardEditor, _LitElement2);\n    function HuiStackCardEditor() {\n      var _this;\n      _classCallCheck(this, HuiStackCardEditor);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, HuiStackCardEditor, [].concat(args));\n      _initialize(_assertThisInitialized(_this));\n      return _this;\n    }\n    return _createClass(HuiStackCardEditor);\n  }(_LitElement);\n  return {\n    F: HuiStackCardEditor,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"lovelace\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [storage({\n        key: \"lovelaceClipboard\",\n        state: false,\n        subscribe: false,\n        storage: \"sessionStorage\"\n      })],\n      key: \"_clipboard\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_config\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_selectedCard\",\n      value: function value() {\n        return 0;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_GUImode\",\n      value: function value() {\n        return true;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_guiModeAvailable\",\n      value: function value() {\n        return true;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [query(\"hui-card-element-editor\")],\n      key: \"_cardEditorEl\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"setConfig\",\n      value: function setConfig(config) {\n        assert(config, cardConfigStruct);\n        this._config = config;\n      }\n    }, {\n      kind: \"method\",\n      key: \"focusYamlEditor\",\n      value: function focusYamlEditor() {\n        var _this$_cardEditorEl;\n        (_this$_cardEditorEl = this._cardEditorEl) === null || _this$_cardEditorEl === void 0 || _this$_cardEditorEl.focusYamlEditor();\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this.hass || !this._config) {\n          return nothing;\n        }\n        var selected = this._selectedCard;\n        var numcards = this._config.cards.length;\n        var isGuiMode = !this._cardEditorEl || this._GUImode;\n        return html(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      <div class=\\\"card-config\\\">\\n        <div class=\\\"toolbar\\\">\\n          <paper-tabs\\n            .selected=\", \"\\n            scrollable\\n            @iron-activate=\", \"\\n          >\\n            \", \"\\n          </paper-tabs>\\n          <paper-tabs\\n            id=\\\"add-card\\\"\\n            .selected=\", \"\\n            @iron-activate=\", \"\\n          >\\n            <paper-tab>\\n              <ha-svg-icon .path=\", \"></ha-svg-icon>\\n            </paper-tab>\\n          </paper-tabs>\\n        </div>\\n\\n        <div id=\\\"editor\\\">\\n          \", \"\\n        </div>\\n      </div>\\n    \"])), selected, this._handleSelectedCard, this._config.cards.map(function (_card, i) {\n          return html(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\" <paper-tab> \", \" </paper-tab> \"])), i + 1);\n        }), selected === numcards ? \"0\" : undefined, this._handleSelectedCard, mdiPlus, selected < numcards ? html(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n                <div id=\\\"card-options\\\">\\n                  <ha-icon-button\\n                    class=\\\"gui-mode-button\\\"\\n                    @click=\", \"\\n                    .disabled=\", \"\\n                    .label=\", \"\\n                    .path=\", \"\\n                  ></ha-icon-button>\\n\\n                  <ha-icon-button-arrow-prev\\n                    .disabled=\", \"\\n                    .label=\", \"\\n                    @click=\", \"\\n                    .move=\", \"\\n                  ></ha-icon-button-arrow-prev>\\n\\n                  <ha-icon-button-arrow-next\\n                    .label=\", \"\\n                    .disabled=\", \"\\n                    @click=\", \"\\n                    .move=\", \"\\n                  ></ha-icon-button-arrow-next>\\n\\n                  <ha-icon-button\\n                    .label=\", \"\\n                    .path=\", \"\\n                    @click=\", \"\\n                  ></ha-icon-button>\\n\\n                  <ha-icon-button\\n                    .label=\", \"\\n                    .path=\", \"\\n                    @click=\", \"\\n                  ></ha-icon-button>\\n\\n                  <ha-icon-button\\n                    .label=\", \"\\n                    .path=\", \"\\n                    @click=\", \"\\n                  ></ha-icon-button>\\n                </div>\\n\\n                <hui-card-element-editor\\n                  .hass=\", \"\\n                  .value=\", \"\\n                  .lovelace=\", \"\\n                  @config-changed=\", \"\\n                  @GUImode-changed=\", \"\\n                ></hui-card-element-editor>\\n              \"])), this._toggleMode, !this._guiModeAvailable, this.hass.localize(isGuiMode ? \"ui.panel.lovelace.editor.edit_card.show_code_editor\" : \"ui.panel.lovelace.editor.edit_card.show_visual_editor\"), isGuiMode ? mdiCodeBraces : mdiListBoxOutline, selected === 0, this.hass.localize(\"ui.panel.lovelace.editor.edit_card.move_before\"), this._handleMove, -1, this.hass.localize(\"ui.panel.lovelace.editor.edit_card.move_after\"), selected === numcards - 1, this._handleMove, 1, this.hass.localize(\"ui.panel.lovelace.editor.edit_card.copy\"), mdiContentCopy, this._handleCopyCard, this.hass.localize(\"ui.panel.lovelace.editor.edit_card.cut\"), mdiContentCut, this._handleCutCard, this.hass.localize(\"ui.panel.lovelace.editor.edit_card.delete\"), mdiDelete, this._handleDeleteCard, this.hass, this._config.cards[selected], this.lovelace, this._handleConfigChanged, this._handleGUIModeChanged) : html(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n                <hui-card-picker\\n                  .hass=\", \"\\n                  .lovelace=\", \"\\n                  @config-changed=\", \"\\n                ></hui-card-picker>\\n              \"])), this.hass, this.lovelace, this._handleCardPicked));\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleSelectedCard\",\n      value: function _handleSelectedCard(ev) {\n        if (ev.target.id === \"add-card\") {\n          this._selectedCard = this._config.cards.length;\n          return;\n        }\n        this._setMode(true);\n        this._guiModeAvailable = true;\n        this._selectedCard = parseInt(ev.detail.selected, 10);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleConfigChanged\",\n      value: function _handleConfigChanged(ev) {\n        ev.stopPropagation();\n        if (!this._config) {\n          return;\n        }\n        var cards = _toConsumableArray(this._config.cards);\n        cards[this._selectedCard] = ev.detail.config;\n        this._config = Object.assign(Object.assign({}, this._config), {}, {\n          cards: cards\n        });\n        this._guiModeAvailable = ev.detail.guiModeAvailable;\n        fireEvent(this, \"config-changed\", {\n          config: this._config\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleCardPicked\",\n      value: function _handleCardPicked(ev) {\n        ev.stopPropagation();\n        if (!this._config) {\n          return;\n        }\n        var config = ev.detail.config;\n        var cards = [].concat(_toConsumableArray(this._config.cards), [config]);\n        this._config = Object.assign(Object.assign({}, this._config), {}, {\n          cards: cards\n        });\n        fireEvent(this, \"config-changed\", {\n          config: this._config\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleCopyCard\",\n      value: function _handleCopyCard() {\n        if (!this._config) {\n          return;\n        }\n        this._clipboard = deepClone(this._config.cards[this._selectedCard]);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleCutCard\",\n      value: function _handleCutCard() {\n        this._handleCopyCard();\n        this._handleDeleteCard();\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleDeleteCard\",\n      value: function _handleDeleteCard() {\n        if (!this._config) {\n          return;\n        }\n        var cards = _toConsumableArray(this._config.cards);\n        cards.splice(this._selectedCard, 1);\n        this._config = Object.assign(Object.assign({}, this._config), {}, {\n          cards: cards\n        });\n        this._selectedCard = Math.max(0, this._selectedCard - 1);\n        fireEvent(this, \"config-changed\", {\n          config: this._config\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleMove\",\n      value: function _handleMove(ev) {\n        if (!this._config) {\n          return;\n        }\n        var move = ev.currentTarget.move;\n        var source = this._selectedCard;\n        var target = source + move;\n        var cards = _toConsumableArray(this._config.cards);\n        var card = cards.splice(this._selectedCard, 1)[0];\n        cards.splice(target, 0, card);\n        this._config = Object.assign(Object.assign({}, this._config), {}, {\n          cards: cards\n        });\n        this._selectedCard = target;\n        fireEvent(this, \"config-changed\", {\n          config: this._config\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleGUIModeChanged\",\n      value: function _handleGUIModeChanged(ev) {\n        ev.stopPropagation();\n        this._GUImode = ev.detail.guiMode;\n        this._guiModeAvailable = ev.detail.guiModeAvailable;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_toggleMode\",\n      value: function _toggleMode() {\n        var _this$_cardEditorEl2;\n        (_this$_cardEditorEl2 = this._cardEditorEl) === null || _this$_cardEditorEl2 === void 0 || _this$_cardEditorEl2.toggleMode();\n      }\n    }, {\n      kind: \"method\",\n      key: \"_setMode\",\n      value: function _setMode(value) {\n        this._GUImode = value;\n        if (this._cardEditorEl) {\n          this._cardEditorEl.GUImode = value;\n        }\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [configElementStyle, css(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"\\n        .toolbar {\\n          display: flex;\\n          --paper-tabs-selection-bar-color: var(--primary-color);\\n          --paper-tab-ink: var(--primary-color);\\n        }\\n        paper-tabs {\\n          display: flex;\\n          font-size: 14px;\\n          flex-grow: 1;\\n        }\\n        #add-card {\\n          max-width: 32px;\\n          padding: 0;\\n        }\\n\\n        #card-options {\\n          display: flex;\\n          justify-content: flex-end;\\n          width: 100%;\\n        }\\n\\n        #editor {\\n          border: 1px solid var(--divider-color);\\n          padding: 12px;\\n        }\\n        @media (max-width: 450px) {\\n          #editor {\\n            margin: 0 -12px;\\n          }\\n        }\\n\\n        .gui-mode-button {\\n          margin-right: auto;\\n          margin-inline-end: auto;\\n          margin-inline-start: initial;\\n        }\\n      \"])))];\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["deepClone","LitElement","css","html","nothing","customElement","property","query","state","any","array","assert","assign","object","optional","string","storage","fireEvent","baseLovelaceCardConfig","configElementStyle","cardConfigStruct","cards","title","HuiStackCardEditor","_decorate","_initialize","_LitElement","_LitElement2","_inherits","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_assertThisInitialized","_createClass","F","d","kind","decorators","attribute","key","value","subscribe","setConfig","config","_config","focusYamlEditor","_this$_cardEditorEl","_cardEditorEl","render","hass","selected","_selectedCard","numcards","isGuiMode","_GUImode","_templateObject","_taggedTemplateLiteral","_handleSelectedCard","map","_card","i","_templateObject2","undefined","mdiPlus","_templateObject3","_toggleMode","_guiModeAvailable","localize","mdiCodeBraces","mdiListBoxOutline","_handleMove","mdiContentCopy","_handleCopyCard","mdiContentCut","_handleCutCard","mdiDelete","_handleDeleteCard","lovelace","_handleConfigChanged","_handleGUIModeChanged","_templateObject4","_handleCardPicked","ev","target","id","_setMode","parseInt","detail","stopPropagation","_toConsumableArray","Object","guiModeAvailable","_clipboard","splice","Math","max","move","currentTarget","source","card","guiMode","_this$_cardEditorEl2","toggleMode","GUImode","static","styles","_templateObject5"],"sources":["/workspaces/frontend/src/panels/lovelace/editor/config-elements/hui-stack-card-editor.ts"],"sourcesContent":["import {\n  mdiCodeBraces,\n  mdiContentCopy,\n  mdiContentCut,\n  mdiDelete,\n  mdiListBoxOutline,\n  mdiPlus,\n} from \"@mdi/js\";\nimport \"@polymer/paper-tabs\";\nimport \"@polymer/paper-tabs/paper-tab\";\nimport deepClone from \"deep-clone-simple\";\nimport { CSSResultGroup, LitElement, css, html, nothing } from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators\";\nimport {\n  any,\n  array,\n  assert,\n  assign,\n  object,\n  optional,\n  string,\n} from \"superstruct\";\nimport { storage } from \"../../../../common/decorators/storage\";\nimport { HASSDomEvent, fireEvent } from \"../../../../common/dom/fire_event\";\nimport \"../../../../components/ha-icon-button\";\nimport \"../../../../components/ha-icon-button-arrow-prev\";\nimport \"../../../../components/ha-icon-button-arrow-next\";\nimport type { LovelaceCardConfig } from \"../../../../data/lovelace/config/card\";\nimport type { LovelaceConfig } from \"../../../../data/lovelace/config/types\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { StackCardConfig } from \"../../cards/types\";\nimport { LovelaceCardEditor } from \"../../types\";\nimport \"../card-editor/hui-card-element-editor\";\nimport type { HuiCardElementEditor } from \"../card-editor/hui-card-element-editor\";\nimport \"../card-editor/hui-card-picker\";\nimport type { ConfigChangedEvent } from \"../hui-element-editor\";\nimport { baseLovelaceCardConfig } from \"../structs/base-card-struct\";\nimport { GUIModeChangedEvent } from \"../types\";\nimport { configElementStyle } from \"./config-elements-style\";\n\nconst cardConfigStruct = assign(\n  baseLovelaceCardConfig,\n  object({\n    cards: array(any()),\n    title: optional(string()),\n  })\n);\n\n@customElement(\"hui-stack-card-editor\")\nexport class HuiStackCardEditor\n  extends LitElement\n  implements LovelaceCardEditor\n{\n  @property({ attribute: false }) public hass?: HomeAssistant;\n\n  @property({ attribute: false }) public lovelace?: LovelaceConfig;\n\n  @storage({\n    key: \"lovelaceClipboard\",\n    state: false,\n    subscribe: false,\n    storage: \"sessionStorage\",\n  })\n  protected _clipboard?: LovelaceCardConfig;\n\n  @state() protected _config?: StackCardConfig;\n\n  @state() protected _selectedCard = 0;\n\n  @state() protected _GUImode = true;\n\n  @state() protected _guiModeAvailable? = true;\n\n  @query(\"hui-card-element-editor\")\n  protected _cardEditorEl?: HuiCardElementEditor;\n\n  public setConfig(config: Readonly<StackCardConfig>): void {\n    assert(config, cardConfigStruct);\n    this._config = config;\n  }\n\n  public focusYamlEditor() {\n    this._cardEditorEl?.focusYamlEditor();\n  }\n\n  protected render() {\n    if (!this.hass || !this._config) {\n      return nothing;\n    }\n    const selected = this._selectedCard!;\n    const numcards = this._config.cards.length;\n\n    const isGuiMode = !this._cardEditorEl || this._GUImode;\n\n    return html`\n      <div class=\"card-config\">\n        <div class=\"toolbar\">\n          <paper-tabs\n            .selected=${selected}\n            scrollable\n            @iron-activate=${this._handleSelectedCard}\n          >\n            ${this._config.cards.map(\n              (_card, i) => html` <paper-tab> ${i + 1} </paper-tab> `\n            )}\n          </paper-tabs>\n          <paper-tabs\n            id=\"add-card\"\n            .selected=${selected === numcards ? \"0\" : undefined}\n            @iron-activate=${this._handleSelectedCard}\n          >\n            <paper-tab>\n              <ha-svg-icon .path=${mdiPlus}></ha-svg-icon>\n            </paper-tab>\n          </paper-tabs>\n        </div>\n\n        <div id=\"editor\">\n          ${selected < numcards\n            ? html`\n                <div id=\"card-options\">\n                  <ha-icon-button\n                    class=\"gui-mode-button\"\n                    @click=${this._toggleMode}\n                    .disabled=${!this._guiModeAvailable}\n                    .label=${this.hass!.localize(\n                      isGuiMode\n                        ? \"ui.panel.lovelace.editor.edit_card.show_code_editor\"\n                        : \"ui.panel.lovelace.editor.edit_card.show_visual_editor\"\n                    )}\n                    .path=${isGuiMode ? mdiCodeBraces : mdiListBoxOutline}\n                  ></ha-icon-button>\n\n                  <ha-icon-button-arrow-prev\n                    .disabled=${selected === 0}\n                    .label=${this.hass!.localize(\n                      \"ui.panel.lovelace.editor.edit_card.move_before\"\n                    )}\n                    @click=${this._handleMove}\n                    .move=${-1}\n                  ></ha-icon-button-arrow-prev>\n\n                  <ha-icon-button-arrow-next\n                    .label=${this.hass!.localize(\n                      \"ui.panel.lovelace.editor.edit_card.move_after\"\n                    )}\n                    .disabled=${selected === numcards - 1}\n                    @click=${this._handleMove}\n                    .move=${1}\n                  ></ha-icon-button-arrow-next>\n\n                  <ha-icon-button\n                    .label=${this.hass!.localize(\n                      \"ui.panel.lovelace.editor.edit_card.copy\"\n                    )}\n                    .path=${mdiContentCopy}\n                    @click=${this._handleCopyCard}\n                  ></ha-icon-button>\n\n                  <ha-icon-button\n                    .label=${this.hass!.localize(\n                      \"ui.panel.lovelace.editor.edit_card.cut\"\n                    )}\n                    .path=${mdiContentCut}\n                    @click=${this._handleCutCard}\n                  ></ha-icon-button>\n\n                  <ha-icon-button\n                    .label=${this.hass!.localize(\n                      \"ui.panel.lovelace.editor.edit_card.delete\"\n                    )}\n                    .path=${mdiDelete}\n                    @click=${this._handleDeleteCard}\n                  ></ha-icon-button>\n                </div>\n\n                <hui-card-element-editor\n                  .hass=${this.hass}\n                  .value=${this._config.cards[selected]}\n                  .lovelace=${this.lovelace}\n                  @config-changed=${this._handleConfigChanged}\n                  @GUImode-changed=${this._handleGUIModeChanged}\n                ></hui-card-element-editor>\n              `\n            : html`\n                <hui-card-picker\n                  .hass=${this.hass}\n                  .lovelace=${this.lovelace}\n                  @config-changed=${this._handleCardPicked}\n                ></hui-card-picker>\n              `}\n        </div>\n      </div>\n    `;\n  }\n\n  protected _handleSelectedCard(ev) {\n    if (ev.target.id === \"add-card\") {\n      this._selectedCard = this._config!.cards.length;\n      return;\n    }\n    this._setMode(true);\n    this._guiModeAvailable = true;\n    this._selectedCard = parseInt(ev.detail.selected, 10);\n  }\n\n  protected _handleConfigChanged(ev: HASSDomEvent<ConfigChangedEvent>) {\n    ev.stopPropagation();\n    if (!this._config) {\n      return;\n    }\n    const cards = [...this._config.cards];\n    cards[this._selectedCard] = ev.detail.config as LovelaceCardConfig;\n    this._config = { ...this._config, cards };\n    this._guiModeAvailable = ev.detail.guiModeAvailable;\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n\n  protected _handleCardPicked(ev) {\n    ev.stopPropagation();\n    if (!this._config) {\n      return;\n    }\n    const config = ev.detail.config;\n    const cards = [...this._config.cards, config];\n    this._config = { ...this._config, cards };\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n\n  protected _handleCopyCard() {\n    if (!this._config) {\n      return;\n    }\n    this._clipboard = deepClone(this._config.cards[this._selectedCard]);\n  }\n\n  protected _handleCutCard() {\n    this._handleCopyCard();\n    this._handleDeleteCard();\n  }\n\n  protected _handleDeleteCard() {\n    if (!this._config) {\n      return;\n    }\n    const cards = [...this._config.cards];\n    cards.splice(this._selectedCard, 1);\n    this._config = { ...this._config, cards };\n    this._selectedCard = Math.max(0, this._selectedCard - 1);\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n\n  protected _handleMove(ev: Event) {\n    if (!this._config) {\n      return;\n    }\n    const move = (ev.currentTarget as any).move;\n    const source = this._selectedCard;\n    const target = source + move;\n    const cards = [...this._config.cards];\n    const card = cards.splice(this._selectedCard, 1)[0];\n    cards.splice(target, 0, card);\n    this._config = {\n      ...this._config,\n      cards,\n    };\n    this._selectedCard = target;\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n\n  protected _handleGUIModeChanged(ev: HASSDomEvent<GUIModeChangedEvent>): void {\n    ev.stopPropagation();\n    this._GUImode = ev.detail.guiMode;\n    this._guiModeAvailable = ev.detail.guiModeAvailable;\n  }\n\n  protected _toggleMode(): void {\n    this._cardEditorEl?.toggleMode();\n  }\n\n  protected _setMode(value: boolean): void {\n    this._GUImode = value;\n    if (this._cardEditorEl) {\n      this._cardEditorEl!.GUImode = value;\n    }\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      configElementStyle,\n      css`\n        .toolbar {\n          display: flex;\n          --paper-tabs-selection-bar-color: var(--primary-color);\n          --paper-tab-ink: var(--primary-color);\n        }\n        paper-tabs {\n          display: flex;\n          font-size: 14px;\n          flex-grow: 1;\n        }\n        #add-card {\n          max-width: 32px;\n          padding: 0;\n        }\n\n        #card-options {\n          display: flex;\n          justify-content: flex-end;\n          width: 100%;\n        }\n\n        #editor {\n          border: 1px solid var(--divider-color);\n          padding: 12px;\n        }\n        @media (max-width: 450px) {\n          #editor {\n            margin: 0 -12px;\n          }\n        }\n\n        .gui-mode-button {\n          margin-right: auto;\n          margin-inline-end: auto;\n          margin-inline-start: initial;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-stack-card-editor\": HuiStackCardEditor;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}