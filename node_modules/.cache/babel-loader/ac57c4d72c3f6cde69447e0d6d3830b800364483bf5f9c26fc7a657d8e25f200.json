{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\n// @ts-ignore\nimport dataTableStyles from \"@material/data-table/dist/mdc.data-table.min.css\";\nimport { css, html, LitElement, unsafeCSS, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { styleMap } from \"lit/directives/style-map\";\nimport { hex2rgb, lab2rgb, rgb2hex, rgb2lab } from \"../../../../common/color/convert-color\";\nimport { labBrighten, labDarken } from \"../../../../common/color/lab\";\nimport { formatNumber } from \"../../../../common/number/format_number\";\nimport \"../../../../components/ha-card\";\nimport { energySourcesByType, getEnergyDataCollection, getEnergyGasUnit, getEnergyWaterUnit } from \"../../../../data/energy\";\nimport { calculateStatisticSumGrowth, getStatisticLabel } from \"../../../../data/recorder\";\nimport { SubscribeMixin } from \"../../../../mixins/subscribe-mixin\";\nimport { hasConfigChanged } from \"../../common/has-changed\";\nexport let HuiEnergySourcesTableCard = _decorate([customElement(\"hui-energy-sources-table-card\")], function (_initialize, _SubscribeMixin) {\n  class HuiEnergySourcesTableCard extends _SubscribeMixin {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HuiEnergySourcesTableCard,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_config\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_data\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"hassSubscribeRequiredHostProps\",\n      value() {\n        return [\"_config\"];\n      }\n    }, {\n      kind: \"method\",\n      key: \"hassSubscribe\",\n      value: function hassSubscribe() {\n        var _this$_config;\n        return [getEnergyDataCollection(this.hass, {\n          key: (_this$_config = this._config) === null || _this$_config === void 0 ? void 0 : _this$_config.collection_key\n        }).subscribe(data => {\n          this._data = data;\n        })];\n      }\n    }, {\n      kind: \"method\",\n      key: \"getCardSize\",\n      value: function getCardSize() {\n        return 3;\n      }\n    }, {\n      kind: \"method\",\n      key: \"setConfig\",\n      value: function setConfig(config) {\n        this._config = config;\n      }\n    }, {\n      kind: \"method\",\n      key: \"shouldUpdate\",\n      value: function shouldUpdate(changedProps) {\n        return hasConfigChanged(this, changedProps) || changedProps.size > 1 || !changedProps.has(\"hass\");\n      }\n    }, {\n      kind: \"method\",\n      key: \"_getColor\",\n      value: function _getColor(computedStyles, propertyName, baseColor, idx) {\n        let color = computedStyles.getPropertyValue(propertyName + \"-\" + idx).trim();\n        if (color.length === 0) {\n          const modifiedColor = idx > 0 ? this.hass.themes.darkMode ? labBrighten(rgb2lab(hex2rgb(baseColor)), idx) : labDarken(rgb2lab(hex2rgb(baseColor)), idx) : undefined;\n          color = modifiedColor ? rgb2hex(lab2rgb(modifiedColor)) : baseColor;\n        }\n        return color;\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var _types$grid, _types$grid2, _types$gas, _types$water, _types$solar, _types$battery, _types$grid3, _types$gas2, _types$water2;\n        if (!this.hass || !this._config) {\n          return nothing;\n        }\n        if (!this._data) {\n          return html`${this.hass.localize(\"ui.panel.lovelace.cards.energy.loading\")}`;\n        }\n        let totalGrid = 0;\n        let totalGridCost = 0;\n        let totalSolar = 0;\n        let totalBattery = 0;\n        let totalGas = 0;\n        let totalGasCost = 0;\n        let totalWater = 0;\n        let totalWaterCost = 0;\n        let hasGridCost = false;\n        let hasGasCost = false;\n        let hasWaterCost = false;\n        let totalGridCompare = 0;\n        let totalGridCostCompare = 0;\n        let totalSolarCompare = 0;\n        let totalBatteryCompare = 0;\n        let totalGasCompare = 0;\n        let totalGasCostCompare = 0;\n        let totalWaterCompare = 0;\n        let totalWaterCostCompare = 0;\n        const types = energySourcesByType(this._data.prefs);\n        const colorPropertyMap = {\n          grid_return: \"--energy-grid-return-color\",\n          grid_consumption: \"--energy-grid-consumption-color\",\n          battery_in: \"--energy-battery-in-color\",\n          battery_out: \"--energy-battery-out-color\",\n          solar: \"--energy-solar-color\",\n          gas: \"--energy-gas-color\",\n          water: \"--energy-water-color\"\n        };\n        const computedStyles = getComputedStyle(this);\n        const solarColor = computedStyles.getPropertyValue(colorPropertyMap.solar).trim();\n        const batteryFromColor = computedStyles.getPropertyValue(colorPropertyMap.battery_out).trim();\n        const batteryToColor = computedStyles.getPropertyValue(colorPropertyMap.battery_in).trim();\n        const returnColor = computedStyles.getPropertyValue(colorPropertyMap.grid_return).trim();\n        const consumptionColor = computedStyles.getPropertyValue(colorPropertyMap.grid_consumption).trim();\n        const gasColor = computedStyles.getPropertyValue(colorPropertyMap.gas).trim();\n        const waterColor = computedStyles.getPropertyValue(colorPropertyMap.water).trim();\n        const showCosts = ((_types$grid = types.grid) === null || _types$grid === void 0 ? void 0 : _types$grid[0].flow_from.some(flow => flow.stat_cost || flow.entity_energy_price || flow.number_energy_price)) || ((_types$grid2 = types.grid) === null || _types$grid2 === void 0 ? void 0 : _types$grid2[0].flow_to.some(flow => flow.stat_compensation || flow.entity_energy_price || flow.number_energy_price)) || ((_types$gas = types.gas) === null || _types$gas === void 0 ? void 0 : _types$gas.some(flow => flow.stat_cost || flow.entity_energy_price || flow.number_energy_price)) || ((_types$water = types.water) === null || _types$water === void 0 ? void 0 : _types$water.some(flow => flow.stat_cost || flow.entity_energy_price || flow.number_energy_price));\n        const gasUnit = getEnergyGasUnit(this.hass, this._data.prefs, this._data.statsMetadata) || \"\";\n        const waterUnit = getEnergyWaterUnit(this.hass) || \"mÂ³\";\n        const compare = this._data.statsCompare !== undefined;\n        return html` <ha-card>\n      ${this._config.title ? html`<h1 class=\"card-header\">${this._config.title}</h1>` : \"\"}\n      <div class=\"mdc-data-table\">\n        <div class=\"mdc-data-table__table-container\">\n          <table class=\"mdc-data-table__table\" aria-label=\"Energy sources\">\n            <thead>\n              <tr class=\"mdc-data-table__header-row\">\n                <th class=\"mdc-data-table__header-cell\"></th>\n                <th\n                  class=\"mdc-data-table__header-cell\"\n                  role=\"columnheader\"\n                  scope=\"col\"\n                >\n                  ${this.hass.localize(\"ui.panel.lovelace.cards.energy.energy_sources_table.source\")}\n                </th>\n                ${compare ? html`<th\n                        class=\"mdc-data-table__header-cell mdc-data-table__header-cell--numeric\"\n                        role=\"columnheader\"\n                        scope=\"col\"\n                      >\n                        ${this.hass.localize(\"ui.panel.lovelace.cards.energy.energy_sources_table.previous_energy\")}\n                      </th>\n                      ${showCosts ? html`<th\n                            class=\"mdc-data-table__header-cell mdc-data-table__header-cell--numeric\"\n                            role=\"columnheader\"\n                            scope=\"col\"\n                          >\n                            ${this.hass.localize(\"ui.panel.lovelace.cards.energy.energy_sources_table.previous_cost\")}\n                          </th>` : \"\"}` : \"\"}\n                <th\n                  class=\"mdc-data-table__header-cell mdc-data-table__header-cell--numeric\"\n                  role=\"columnheader\"\n                  scope=\"col\"\n                >\n                  ${this.hass.localize(\"ui.panel.lovelace.cards.energy.energy_sources_table.energy\")}\n                </th>\n                ${showCosts ? html` <th\n                      class=\"mdc-data-table__header-cell mdc-data-table__header-cell--numeric\"\n                      role=\"columnheader\"\n                      scope=\"col\"\n                    >\n                      ${this.hass.localize(\"ui.panel.lovelace.cards.energy.energy_sources_table.cost\")}\n                    </th>` : \"\"}\n              </tr>\n            </thead>\n            <tbody class=\"mdc-data-table__content\">\n              ${(_types$solar = types.solar) === null || _types$solar === void 0 ? void 0 : _types$solar.map((source, idx) => {\n          var _this$_data;\n          const energy = calculateStatisticSumGrowth(this._data.stats[source.stat_energy_from]) || 0;\n          totalSolar += energy;\n          const compareEnergy = compare && calculateStatisticSumGrowth(this._data.statsCompare[source.stat_energy_from]) || 0;\n          totalSolarCompare += compareEnergy;\n          const color = this._getColor(computedStyles, colorPropertyMap.solar, solarColor, idx);\n          return html`<tr class=\"mdc-data-table__row\">\n                  <td class=\"mdc-data-table__cell cell-bullet\">\n                    <div\n                      class=\"bullet\"\n                      style=${styleMap({\n            borderColor: color,\n            backgroundColor: color + \"7F\"\n          })}\n                    ></div>\n                  </td>\n                  <th class=\"mdc-data-table__cell\" scope=\"row\">\n                    ${getStatisticLabel(this.hass, source.stat_energy_from, (_this$_data = this._data) === null || _this$_data === void 0 ? void 0 : _this$_data.statsMetadata[source.stat_energy_from])}\n                  </th>\n                  ${compare ? html`<td\n                          class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                        >\n                          ${formatNumber(compareEnergy, this.hass.locale)} kWh\n                        </td>\n                        ${showCosts ? html`<td class=\"mdc-data-table__cell\"></td>` : \"\"}` : \"\"}\n                  <td\n                    class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                  >\n                    ${formatNumber(energy, this.hass.locale)} kWh\n                  </td>\n                  ${showCosts ? html`<td class=\"mdc-data-table__cell\"></td>` : \"\"}\n                </tr>`;\n        })}\n              ${types.solar ? html`<tr class=\"mdc-data-table__row total\">\n                    <td class=\"mdc-data-table__cell\"></td>\n                    <th class=\"mdc-data-table__cell\" scope=\"row\">\n                      ${this.hass.localize(\"ui.panel.lovelace.cards.energy.energy_sources_table.solar_total\")}\n                    </th>\n                    ${compare ? html`<td\n                            class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                          >\n                            ${formatNumber(totalSolarCompare, this.hass.locale)}\n                            kWh\n                          </td>\n                          ${showCosts ? html`<td class=\"mdc-data-table__cell\"></td>` : \"\"}` : \"\"}\n                    <td\n                      class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                    >\n                      ${formatNumber(totalSolar, this.hass.locale)} kWh\n                    </td>\n                    ${showCosts ? html`<td class=\"mdc-data-table__cell\"></td>` : \"\"}\n                  </tr>` : \"\"}\n              ${(_types$battery = types.battery) === null || _types$battery === void 0 ? void 0 : _types$battery.map((source, idx) => {\n          var _this$_data2, _this$_data3;\n          const energyFrom = calculateStatisticSumGrowth(this._data.stats[source.stat_energy_from]) || 0;\n          const energyTo = calculateStatisticSumGrowth(this._data.stats[source.stat_energy_to]) || 0;\n          totalBattery += energyFrom - energyTo;\n          const energyFromCompare = compare && calculateStatisticSumGrowth(this._data.statsCompare[source.stat_energy_from]) || 0;\n          const energyToCompare = compare && calculateStatisticSumGrowth(this._data.statsCompare[source.stat_energy_to]) || 0;\n          totalBatteryCompare += energyFromCompare - energyToCompare;\n          const fromColor = this._getColor(computedStyles, colorPropertyMap.battery_out, batteryFromColor, idx);\n          const toColor = this._getColor(computedStyles, colorPropertyMap.battery_in, batteryToColor, idx);\n          return html`<tr class=\"mdc-data-table__row\">\n                    <td class=\"mdc-data-table__cell cell-bullet\">\n                      <div\n                        class=\"bullet\"\n                        style=${styleMap({\n            borderColor: fromColor,\n            backgroundColor: fromColor + \"7F\"\n          })}\n                      ></div>\n                    </td>\n                    <th class=\"mdc-data-table__cell\" scope=\"row\">\n                      ${getStatisticLabel(this.hass, source.stat_energy_from, (_this$_data2 = this._data) === null || _this$_data2 === void 0 ? void 0 : _this$_data2.statsMetadata[source.stat_energy_from])}\n                    </th>\n                    ${compare ? html`<td\n                            class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                          >\n                            ${formatNumber(energyFromCompare, this.hass.locale)}\n                            kWh\n                          </td>\n                          ${showCosts ? html`<td class=\"mdc-data-table__cell\"></td>` : \"\"}` : \"\"}\n                    <td\n                      class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                    >\n                      ${formatNumber(energyFrom, this.hass.locale)} kWh\n                    </td>\n                    ${showCosts ? html`<td class=\"mdc-data-table__cell\"></td>` : \"\"}\n                  </tr>\n                  <tr class=\"mdc-data-table__row\">\n                    <td class=\"mdc-data-table__cell cell-bullet\">\n                      <div\n                        class=\"bullet\"\n                        style=${styleMap({\n            borderColor: toColor,\n            backgroundColor: toColor + \"7F\"\n          })}\n                      ></div>\n                    </td>\n                    <th class=\"mdc-data-table__cell\" scope=\"row\">\n                      ${getStatisticLabel(this.hass, source.stat_energy_to, (_this$_data3 = this._data) === null || _this$_data3 === void 0 ? void 0 : _this$_data3.statsMetadata[source.stat_energy_to])}\n                    </th>\n                    ${compare ? html`<td\n                            class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                          >\n                            ${formatNumber(energyToCompare * -1, this.hass.locale)}\n                            kWh\n                          </td>\n                          ${showCosts ? html`<td class=\"mdc-data-table__cell\"></td>` : \"\"}` : \"\"}\n                    <td\n                      class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                    >\n                      ${formatNumber(energyTo * -1, this.hass.locale)} kWh\n                    </td>\n                    ${showCosts ? html`<td class=\"mdc-data-table__cell\"></td>` : \"\"}\n                  </tr>`;\n        })}\n              ${types.battery ? html`<tr class=\"mdc-data-table__row total\">\n                    <td class=\"mdc-data-table__cell\"></td>\n                    <th class=\"mdc-data-table__cell\" scope=\"row\">\n                      ${this.hass.localize(\"ui.panel.lovelace.cards.energy.energy_sources_table.battery_total\")}\n                    </th>\n                    ${compare ? html` <td\n                            class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                          >\n                            ${formatNumber(totalBatteryCompare, this.hass.locale)}\n                            kWh\n                          </td>\n                          ${showCosts ? html`<td class=\"mdc-data-table__cell\"></td>` : \"\"}` : \"\"}\n                    <td\n                      class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                    >\n                      ${formatNumber(totalBattery, this.hass.locale)} kWh\n                    </td>\n                    ${showCosts ? html`<td class=\"mdc-data-table__cell\"></td>` : \"\"}\n                  </tr>` : \"\"}\n              ${(_types$grid3 = types.grid) === null || _types$grid3 === void 0 ? void 0 : _types$grid3.map(source => html`${source.flow_from.map((flow, idx) => {\n          var _this$_data4;\n          const energy = calculateStatisticSumGrowth(this._data.stats[flow.stat_energy_from]) || 0;\n          totalGrid += energy;\n          const compareEnergy = compare && calculateStatisticSumGrowth(this._data.statsCompare[flow.stat_energy_from]) || 0;\n          totalGridCompare += compareEnergy;\n          const cost_stat = flow.stat_cost || this._data.info.cost_sensors[flow.stat_energy_from];\n          const cost = cost_stat ? calculateStatisticSumGrowth(this._data.stats[cost_stat]) || 0 : null;\n          if (cost !== null) {\n            hasGridCost = true;\n            totalGridCost += cost;\n          }\n          const costCompare = compare && cost_stat ? calculateStatisticSumGrowth(this._data.statsCompare[cost_stat]) || 0 : null;\n          if (costCompare !== null) {\n            totalGridCostCompare += costCompare;\n          }\n          const color = this._getColor(computedStyles, colorPropertyMap.grid_consumption, consumptionColor, idx);\n          return html`<tr class=\"mdc-data-table__row\">\n                      <td class=\"mdc-data-table__cell cell-bullet\">\n                        <div\n                          class=\"bullet\"\n                          style=${styleMap({\n            borderColor: color,\n            backgroundColor: color + \"7F\"\n          })}\n                        ></div>\n                      </td>\n                      <th class=\"mdc-data-table__cell\" scope=\"row\">\n                        ${getStatisticLabel(this.hass, flow.stat_energy_from, (_this$_data4 = this._data) === null || _this$_data4 === void 0 ? void 0 : _this$_data4.statsMetadata[flow.stat_energy_from])}\n                      </th>\n                      ${compare ? html`<td\n                              class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                            >\n                              ${formatNumber(compareEnergy, this.hass.locale)}\n                              kWh\n                            </td>\n                            ${showCosts ? html`<td\n                                  class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                                >\n                                  ${costCompare !== null ? formatNumber(costCompare, this.hass.locale, {\n            style: \"currency\",\n            currency: this.hass.config.currency\n          }) : \"\"}\n                                </td>` : \"\"}` : \"\"}\n                      <td\n                        class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                      >\n                        ${formatNumber(energy, this.hass.locale)} kWh\n                      </td>\n                      ${showCosts ? html` <td\n                            class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                          >\n                            ${cost !== null ? formatNumber(cost, this.hass.locale, {\n            style: \"currency\",\n            currency: this.hass.config.currency\n          }) : \"\"}\n                          </td>` : \"\"}\n                    </tr>`;\n        })}\n                  ${source.flow_to.map((flow, idx) => {\n          var _this$_data5;\n          const energy = (calculateStatisticSumGrowth(this._data.stats[flow.stat_energy_to]) || 0) * -1;\n          totalGrid += energy;\n          const cost_stat = flow.stat_compensation || this._data.info.cost_sensors[flow.stat_energy_to];\n          const cost = cost_stat ? (calculateStatisticSumGrowth(this._data.stats[cost_stat]) || 0) * -1 : null;\n          if (cost !== null) {\n            hasGridCost = true;\n            totalGridCost += cost;\n          }\n          const energyCompare = (compare && calculateStatisticSumGrowth(this._data.statsCompare[flow.stat_energy_to]) || 0) * -1;\n          totalGridCompare += energyCompare;\n          const costCompare = compare && cost_stat ? (calculateStatisticSumGrowth(this._data.statsCompare[cost_stat]) || 0) * -1 : null;\n          if (costCompare !== null) {\n            totalGridCostCompare += costCompare;\n          }\n          const color = this._getColor(computedStyles, colorPropertyMap.grid_return, returnColor, idx);\n          return html`<tr class=\"mdc-data-table__row\">\n                      <td class=\"mdc-data-table__cell cell-bullet\">\n                        <div\n                          class=\"bullet\"\n                          style=${styleMap({\n            borderColor: color,\n            backgroundColor: color + \"7F\"\n          })}\n                        ></div>\n                      </td>\n                      <th class=\"mdc-data-table__cell\" scope=\"row\">\n                        ${getStatisticLabel(this.hass, flow.stat_energy_to, (_this$_data5 = this._data) === null || _this$_data5 === void 0 ? void 0 : _this$_data5.statsMetadata[flow.stat_energy_to])}\n                      </th>\n                      ${compare ? html`<td\n                              class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                            >\n                              ${formatNumber(energyCompare, this.hass.locale)}\n                              kWh\n                            </td>\n                            ${showCosts ? html`<td\n                                  class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                                >\n                                  ${costCompare !== null ? formatNumber(costCompare, this.hass.locale, {\n            style: \"currency\",\n            currency: this.hass.config.currency\n          }) : \"\"}\n                                </td>` : \"\"}` : \"\"}\n                      <td\n                        class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                      >\n                        ${formatNumber(energy, this.hass.locale)} kWh\n                      </td>\n                      ${showCosts ? html` <td\n                            class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                          >\n                            ${cost !== null ? formatNumber(cost, this.hass.locale, {\n            style: \"currency\",\n            currency: this.hass.config.currency\n          }) : \"\"}\n                          </td>` : \"\"}\n                    </tr>`;\n        })}`)}\n              ${types.grid ? html` <tr class=\"mdc-data-table__row total\">\n                    <td class=\"mdc-data-table__cell\"></td>\n                    <th class=\"mdc-data-table__cell\" scope=\"row\">\n                      ${this.hass.localize(\"ui.panel.lovelace.cards.energy.energy_sources_table.grid_total\")}\n                    </th>\n                    ${compare ? html`<td\n                            class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                          >\n                            ${formatNumber(totalGridCompare, this.hass.locale)}\n                            kWh\n                          </td>\n                          ${showCosts ? html`<td\n                                class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                              >\n                                ${hasGridCost ? formatNumber(totalGridCostCompare, this.hass.locale, {\n          style: \"currency\",\n          currency: this.hass.config.currency\n        }) : \"\"}\n                              </td>` : \"\"}` : \"\"}\n                    <td\n                      class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                    >\n                      ${formatNumber(totalGrid, this.hass.locale)} kWh\n                    </td>\n                    ${showCosts ? html`<td\n                          class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                        >\n                          ${hasGridCost ? formatNumber(totalGridCost, this.hass.locale, {\n          style: \"currency\",\n          currency: this.hass.config.currency\n        }) : \"\"}\n                        </td>` : \"\"}\n                  </tr>` : \"\"}\n              ${(_types$gas2 = types.gas) === null || _types$gas2 === void 0 ? void 0 : _types$gas2.map((source, idx) => {\n          var _this$_data6;\n          const energy = calculateStatisticSumGrowth(this._data.stats[source.stat_energy_from]) || 0;\n          totalGas += energy;\n          const energyCompare = compare && calculateStatisticSumGrowth(this._data.statsCompare[source.stat_energy_from]) || 0;\n          totalGasCompare += energyCompare;\n          const cost_stat = source.stat_cost || this._data.info.cost_sensors[source.stat_energy_from];\n          const cost = cost_stat ? calculateStatisticSumGrowth(this._data.stats[cost_stat]) || 0 : null;\n          if (cost !== null) {\n            hasGasCost = true;\n            totalGasCost += cost;\n          }\n          const costCompare = compare && cost_stat ? calculateStatisticSumGrowth(this._data.statsCompare[cost_stat]) || 0 : null;\n          if (costCompare !== null) {\n            totalGasCostCompare += costCompare;\n          }\n          const color = this._getColor(computedStyles, colorPropertyMap.gas, gasColor, idx);\n          return html`<tr class=\"mdc-data-table__row\">\n                  <td class=\"mdc-data-table__cell cell-bullet\">\n                    <div\n                      class=\"bullet\"\n                      style=${styleMap({\n            borderColor: color,\n            backgroundColor: color + \"7F\"\n          })}\n                    ></div>\n                  </td>\n                  <th class=\"mdc-data-table__cell\" scope=\"row\">\n                    ${getStatisticLabel(this.hass, source.stat_energy_from, (_this$_data6 = this._data) === null || _this$_data6 === void 0 ? void 0 : _this$_data6.statsMetadata[source.stat_energy_from])}\n                  </th>\n                  ${compare ? html` <td\n                          class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                        >\n                          ${formatNumber(energyCompare, this.hass.locale)}\n                          ${gasUnit}\n                        </td>\n                        ${showCosts ? html`<td\n                              class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                            >\n                              ${costCompare !== null ? formatNumber(costCompare, this.hass.locale, {\n            style: \"currency\",\n            currency: this.hass.config.currency\n          }) : \"\"}\n                            </td>` : \"\"}` : \"\"}\n                  <td\n                    class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                  >\n                    ${formatNumber(energy, this.hass.locale)} ${gasUnit}\n                  </td>\n                  ${showCosts ? html`<td\n                        class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                      >\n                        ${cost !== null ? formatNumber(cost, this.hass.locale, {\n            style: \"currency\",\n            currency: this.hass.config.currency\n          }) : \"\"}\n                      </td>` : \"\"}\n                </tr>`;\n        })}\n              ${types.gas ? html`<tr class=\"mdc-data-table__row total\">\n                    <td class=\"mdc-data-table__cell\"></td>\n                    <th class=\"mdc-data-table__cell\" scope=\"row\">\n                      ${this.hass.localize(\"ui.panel.lovelace.cards.energy.energy_sources_table.gas_total\")}\n                    </th>\n                    ${compare ? html`<td\n                            class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                          >\n                            ${formatNumber(totalGasCompare, this.hass.locale)}\n                            ${gasUnit}\n                          </td>\n                          ${showCosts ? html`<td\n                                class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                              >\n                                ${hasGasCost ? formatNumber(totalGasCostCompare, this.hass.locale, {\n          style: \"currency\",\n          currency: this.hass.config.currency\n        }) : \"\"}\n                              </td>` : \"\"}` : \"\"}\n                    <td\n                      class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                    >\n                      ${formatNumber(totalGas, this.hass.locale)} ${gasUnit}\n                    </td>\n                    ${showCosts ? html`<td\n                          class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                        >\n                          ${hasGasCost ? formatNumber(totalGasCost, this.hass.locale, {\n          style: \"currency\",\n          currency: this.hass.config.currency\n        }) : \"\"}\n                        </td>` : \"\"}\n                  </tr>` : \"\"}\n              ${(_types$water2 = types.water) === null || _types$water2 === void 0 ? void 0 : _types$water2.map((source, idx) => {\n          var _this$_data7;\n          const energy = calculateStatisticSumGrowth(this._data.stats[source.stat_energy_from]) || 0;\n          totalWater += energy;\n          const energyCompare = compare && calculateStatisticSumGrowth(this._data.statsCompare[source.stat_energy_from]) || 0;\n          totalWaterCompare += energyCompare;\n          const cost_stat = source.stat_cost || this._data.info.cost_sensors[source.stat_energy_from];\n          const cost = cost_stat ? calculateStatisticSumGrowth(this._data.stats[cost_stat]) || 0 : null;\n          if (cost !== null) {\n            hasWaterCost = true;\n            totalWaterCost += cost;\n          }\n          const costCompare = compare && cost_stat ? calculateStatisticSumGrowth(this._data.statsCompare[cost_stat]) || 0 : null;\n          if (costCompare !== null) {\n            totalWaterCostCompare += costCompare;\n          }\n          const color = this._getColor(computedStyles, colorPropertyMap.water, waterColor, idx);\n          return html`<tr class=\"mdc-data-table__row\">\n                  <td class=\"mdc-data-table__cell cell-bullet\">\n                    <div\n                      class=\"bullet\"\n                      style=${styleMap({\n            borderColor: color,\n            backgroundColor: color + \"7F\"\n          })}\n                    ></div>\n                  </td>\n                  <th class=\"mdc-data-table__cell\" scope=\"row\">\n                    ${getStatisticLabel(this.hass, source.stat_energy_from, (_this$_data7 = this._data) === null || _this$_data7 === void 0 ? void 0 : _this$_data7.statsMetadata[source.stat_energy_from])}\n                  </th>\n                  ${compare ? html` <td\n                          class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                        >\n                          ${formatNumber(energyCompare, this.hass.locale)}\n                          ${waterUnit}\n                        </td>\n                        ${showCosts ? html`<td\n                              class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                            >\n                              ${costCompare !== null ? formatNumber(costCompare, this.hass.locale, {\n            style: \"currency\",\n            currency: this.hass.config.currency\n          }) : \"\"}\n                            </td>` : \"\"}` : \"\"}\n                  <td\n                    class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                  >\n                    ${formatNumber(energy, this.hass.locale)} ${waterUnit}\n                  </td>\n                  ${showCosts ? html`<td\n                        class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                      >\n                        ${cost !== null ? formatNumber(cost, this.hass.locale, {\n            style: \"currency\",\n            currency: this.hass.config.currency\n          }) : \"\"}\n                      </td>` : \"\"}\n                </tr>`;\n        })}\n              ${types.water ? html`<tr class=\"mdc-data-table__row total\">\n                    <td class=\"mdc-data-table__cell\"></td>\n                    <th class=\"mdc-data-table__cell\" scope=\"row\">\n                      ${this.hass.localize(\"ui.panel.lovelace.cards.energy.energy_sources_table.water_total\")}\n                    </th>\n                    ${compare ? html`<td\n                            class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                          >\n                            ${formatNumber(totalWaterCompare, this.hass.locale)}\n                            ${waterUnit}\n                          </td>\n                          ${showCosts ? html`<td\n                                class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                              >\n                                ${hasWaterCost ? formatNumber(totalWaterCostCompare, this.hass.locale, {\n          style: \"currency\",\n          currency: this.hass.config.currency\n        }) : \"\"}\n                              </td>` : \"\"}` : \"\"}\n                    <td\n                      class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                    >\n                      ${formatNumber(totalWater, this.hass.locale)} ${waterUnit}\n                    </td>\n                    ${showCosts ? html`<td\n                          class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                        >\n                          ${hasWaterCost ? formatNumber(totalWaterCost, this.hass.locale, {\n          style: \"currency\",\n          currency: this.hass.config.currency\n        }) : \"\"}\n                        </td>` : \"\"}\n                  </tr>` : \"\"}\n              ${[hasGasCost, hasWaterCost, hasGridCost].filter(Boolean).length > 1 ? html`<tr class=\"mdc-data-table__row total\">\n                    <td class=\"mdc-data-table__cell\"></td>\n                    <th class=\"mdc-data-table__cell\" scope=\"row\">\n                      ${this.hass.localize(\"ui.panel.lovelace.cards.energy.energy_sources_table.total_costs\")}\n                    </th>\n                    ${compare ? html`<td class=\"mdc-data-table__cell\"></td>\n                          <td\n                            class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                          >\n                            ${formatNumber(totalGasCostCompare + totalGridCostCompare + totalWaterCostCompare, this.hass.locale, {\n          style: \"currency\",\n          currency: this.hass.config.currency\n        })}\n                          </td>` : \"\"}\n                    <td class=\"mdc-data-table__cell\"></td>\n                    <td\n                      class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                    >\n                      ${formatNumber(totalGasCost + totalGridCost + totalWaterCost, this.hass.locale, {\n          style: \"currency\",\n          currency: this.hass.config.currency\n        })}\n                    </td>\n                  </tr>` : \"\"}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </ha-card>`;\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css`\n      ${unsafeCSS(dataTableStyles)}\n      .mdc-data-table {\n        width: 100%;\n        border: 0;\n      }\n      .mdc-data-table__header-cell,\n      .mdc-data-table__cell {\n        color: var(--primary-text-color);\n        border-bottom-color: var(--divider-color);\n        text-align: var(--float-start);\n      }\n      .mdc-data-table__row:not(.mdc-data-table__row--selected):hover {\n        background-color: rgba(var(--rgb-primary-text-color), 0.04);\n      }\n      .total {\n        --mdc-typography-body2-font-weight: 500;\n      }\n      .total .mdc-data-table__cell {\n        border-top: 1px solid var(--divider-color);\n      }\n      ha-card {\n        height: 100%;\n        overflow: hidden;\n      }\n      .card-header {\n        padding-bottom: 0;\n      }\n      .content {\n        padding: 16px;\n      }\n      .has-header {\n        padding-top: 0;\n      }\n      .cell-bullet {\n        width: 32px;\n        padding-right: 0;\n        padding-inline-end: 0;\n        padding-inline-start: 16px;\n        direction: var(--direction);\n      }\n      .bullet {\n        border-width: 1px;\n        border-style: solid;\n        border-radius: 4px;\n        height: 16px;\n        width: 32px;\n      }\n      .mdc-data-table__cell--numeric {\n        direction: ltr;\n      }\n    `;\n      }\n    }]\n  };\n}, SubscribeMixin(LitElement));","map":{"version":3,"names":["dataTableStyles","css","html","LitElement","unsafeCSS","nothing","customElement","property","state","styleMap","hex2rgb","lab2rgb","rgb2hex","rgb2lab","labBrighten","labDarken","formatNumber","energySourcesByType","getEnergyDataCollection","getEnergyGasUnit","getEnergyWaterUnit","calculateStatisticSumGrowth","getStatisticLabel","SubscribeMixin","hasConfigChanged","HuiEnergySourcesTableCard","_decorate","_initialize","_SubscribeMixin","constructor","args","F","d","kind","decorators","attribute","key","value","hassSubscribe","_this$_config","hass","_config","collection_key","subscribe","data","_data","getCardSize","setConfig","config","shouldUpdate","changedProps","size","has","_getColor","computedStyles","propertyName","baseColor","idx","color","getPropertyValue","trim","length","modifiedColor","themes","darkMode","undefined","render","_types$grid","_types$grid2","_types$gas","_types$water","_types$solar","_types$battery","_types$grid3","_types$gas2","_types$water2","localize","totalGrid","totalGridCost","totalSolar","totalBattery","totalGas","totalGasCost","totalWater","totalWaterCost","hasGridCost","hasGasCost","hasWaterCost","totalGridCompare","totalGridCostCompare","totalSolarCompare","totalBatteryCompare","totalGasCompare","totalGasCostCompare","totalWaterCompare","totalWaterCostCompare","types","prefs","colorPropertyMap","grid_return","grid_consumption","battery_in","battery_out","solar","gas","water","getComputedStyle","solarColor","batteryFromColor","batteryToColor","returnColor","consumptionColor","gasColor","waterColor","showCosts","grid","flow_from","some","flow","stat_cost","entity_energy_price","number_energy_price","flow_to","stat_compensation","gasUnit","statsMetadata","waterUnit","compare","statsCompare","title","map","source","_this$_data","energy","stats","stat_energy_from","compareEnergy","borderColor","backgroundColor","locale","battery","_this$_data2","_this$_data3","energyFrom","energyTo","stat_energy_to","energyFromCompare","energyToCompare","fromColor","toColor","_this$_data4","cost_stat","info","cost_sensors","cost","costCompare","style","currency","_this$_data5","energyCompare","_this$_data6","_this$_data7","filter","Boolean","static","styles"],"sources":["/Users/sercanardil/Desktop/frontend/src/panels/lovelace/cards/energy/hui-energy-sources-table-card.ts"],"sourcesContent":["// @ts-ignore\nimport dataTableStyles from \"@material/data-table/dist/mdc.data-table.min.css\";\nimport { UnsubscribeFunc } from \"home-assistant-js-websocket\";\nimport {\n  css,\n  CSSResultGroup,\n  html,\n  LitElement,\n  unsafeCSS,\n  nothing,\n  PropertyValues,\n} from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { styleMap } from \"lit/directives/style-map\";\nimport {\n  hex2rgb,\n  lab2rgb,\n  rgb2hex,\n  rgb2lab,\n} from \"../../../../common/color/convert-color\";\nimport { labBrighten, labDarken } from \"../../../../common/color/lab\";\nimport { formatNumber } from \"../../../../common/number/format_number\";\nimport \"../../../../components/ha-card\";\nimport {\n  EnergyData,\n  energySourcesByType,\n  getEnergyDataCollection,\n  getEnergyGasUnit,\n  getEnergyWaterUnit,\n} from \"../../../../data/energy\";\nimport {\n  calculateStatisticSumGrowth,\n  getStatisticLabel,\n} from \"../../../../data/recorder\";\nimport { SubscribeMixin } from \"../../../../mixins/subscribe-mixin\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { LovelaceCard } from \"../../types\";\nimport { EnergySourcesTableCardConfig } from \"../types\";\nimport { hasConfigChanged } from \"../../common/has-changed\";\n\n@customElement(\"hui-energy-sources-table-card\")\nexport class HuiEnergySourcesTableCard\n  extends SubscribeMixin(LitElement)\n  implements LovelaceCard\n{\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @state() private _config?: EnergySourcesTableCardConfig;\n\n  @state() private _data?: EnergyData;\n\n  protected hassSubscribeRequiredHostProps = [\"_config\"];\n\n  public hassSubscribe(): UnsubscribeFunc[] {\n    return [\n      getEnergyDataCollection(this.hass, {\n        key: this._config?.collection_key,\n      }).subscribe((data) => {\n        this._data = data;\n      }),\n    ];\n  }\n\n  public getCardSize(): Promise<number> | number {\n    return 3;\n  }\n\n  public setConfig(config: EnergySourcesTableCardConfig): void {\n    this._config = config;\n  }\n\n  protected shouldUpdate(changedProps: PropertyValues): boolean {\n    return (\n      hasConfigChanged(this, changedProps) ||\n      changedProps.size > 1 ||\n      !changedProps.has(\"hass\")\n    );\n  }\n\n  private _getColor(\n    computedStyles: CSSStyleDeclaration,\n    propertyName: string,\n    baseColor: string,\n    idx: number\n  ): string {\n    let color = computedStyles\n      .getPropertyValue(propertyName + \"-\" + idx)\n      .trim();\n    if (color.length === 0) {\n      const modifiedColor =\n        idx > 0\n          ? this.hass.themes.darkMode\n            ? labBrighten(rgb2lab(hex2rgb(baseColor)), idx)\n            : labDarken(rgb2lab(hex2rgb(baseColor)), idx)\n          : undefined;\n      color = modifiedColor ? rgb2hex(lab2rgb(modifiedColor)) : baseColor;\n    }\n    return color;\n  }\n\n  protected render() {\n    if (!this.hass || !this._config) {\n      return nothing;\n    }\n\n    if (!this._data) {\n      return html`${this.hass.localize(\n        \"ui.panel.lovelace.cards.energy.loading\"\n      )}`;\n    }\n\n    let totalGrid = 0;\n    let totalGridCost = 0;\n    let totalSolar = 0;\n    let totalBattery = 0;\n    let totalGas = 0;\n    let totalGasCost = 0;\n    let totalWater = 0;\n    let totalWaterCost = 0;\n\n    let hasGridCost = false;\n    let hasGasCost = false;\n    let hasWaterCost = false;\n\n    let totalGridCompare = 0;\n    let totalGridCostCompare = 0;\n    let totalSolarCompare = 0;\n    let totalBatteryCompare = 0;\n    let totalGasCompare = 0;\n    let totalGasCostCompare = 0;\n    let totalWaterCompare = 0;\n    let totalWaterCostCompare = 0;\n\n    const types = energySourcesByType(this._data.prefs);\n\n    const colorPropertyMap = {\n      grid_return: \"--energy-grid-return-color\",\n      grid_consumption: \"--energy-grid-consumption-color\",\n      battery_in: \"--energy-battery-in-color\",\n      battery_out: \"--energy-battery-out-color\",\n      solar: \"--energy-solar-color\",\n      gas: \"--energy-gas-color\",\n      water: \"--energy-water-color\",\n    };\n\n    const computedStyles = getComputedStyle(this);\n    const solarColor = computedStyles\n      .getPropertyValue(colorPropertyMap.solar)\n      .trim();\n    const batteryFromColor = computedStyles\n      .getPropertyValue(colorPropertyMap.battery_out)\n      .trim();\n    const batteryToColor = computedStyles\n      .getPropertyValue(colorPropertyMap.battery_in)\n      .trim();\n    const returnColor = computedStyles\n      .getPropertyValue(colorPropertyMap.grid_return)\n      .trim();\n    const consumptionColor = computedStyles\n      .getPropertyValue(colorPropertyMap.grid_consumption)\n      .trim();\n    const gasColor = computedStyles\n      .getPropertyValue(colorPropertyMap.gas)\n      .trim();\n    const waterColor = computedStyles\n      .getPropertyValue(colorPropertyMap.water)\n      .trim();\n\n    const showCosts =\n      types.grid?.[0].flow_from.some(\n        (flow) =>\n          flow.stat_cost || flow.entity_energy_price || flow.number_energy_price\n      ) ||\n      types.grid?.[0].flow_to.some(\n        (flow) =>\n          flow.stat_compensation ||\n          flow.entity_energy_price ||\n          flow.number_energy_price\n      ) ||\n      types.gas?.some(\n        (flow) =>\n          flow.stat_cost || flow.entity_energy_price || flow.number_energy_price\n      ) ||\n      types.water?.some(\n        (flow) =>\n          flow.stat_cost || flow.entity_energy_price || flow.number_energy_price\n      );\n\n    const gasUnit =\n      getEnergyGasUnit(this.hass, this._data.prefs, this._data.statsMetadata) ||\n      \"\";\n\n    const waterUnit = getEnergyWaterUnit(this.hass) || \"mÂ³\";\n\n    const compare = this._data.statsCompare !== undefined;\n\n    return html` <ha-card>\n      ${this._config.title\n        ? html`<h1 class=\"card-header\">${this._config.title}</h1>`\n        : \"\"}\n      <div class=\"mdc-data-table\">\n        <div class=\"mdc-data-table__table-container\">\n          <table class=\"mdc-data-table__table\" aria-label=\"Energy sources\">\n            <thead>\n              <tr class=\"mdc-data-table__header-row\">\n                <th class=\"mdc-data-table__header-cell\"></th>\n                <th\n                  class=\"mdc-data-table__header-cell\"\n                  role=\"columnheader\"\n                  scope=\"col\"\n                >\n                  ${this.hass.localize(\n                    \"ui.panel.lovelace.cards.energy.energy_sources_table.source\"\n                  )}\n                </th>\n                ${compare\n                  ? html`<th\n                        class=\"mdc-data-table__header-cell mdc-data-table__header-cell--numeric\"\n                        role=\"columnheader\"\n                        scope=\"col\"\n                      >\n                        ${this.hass.localize(\n                          \"ui.panel.lovelace.cards.energy.energy_sources_table.previous_energy\"\n                        )}\n                      </th>\n                      ${showCosts\n                        ? html`<th\n                            class=\"mdc-data-table__header-cell mdc-data-table__header-cell--numeric\"\n                            role=\"columnheader\"\n                            scope=\"col\"\n                          >\n                            ${this.hass.localize(\n                              \"ui.panel.lovelace.cards.energy.energy_sources_table.previous_cost\"\n                            )}\n                          </th>`\n                        : \"\"}`\n                  : \"\"}\n                <th\n                  class=\"mdc-data-table__header-cell mdc-data-table__header-cell--numeric\"\n                  role=\"columnheader\"\n                  scope=\"col\"\n                >\n                  ${this.hass.localize(\n                    \"ui.panel.lovelace.cards.energy.energy_sources_table.energy\"\n                  )}\n                </th>\n                ${showCosts\n                  ? html` <th\n                      class=\"mdc-data-table__header-cell mdc-data-table__header-cell--numeric\"\n                      role=\"columnheader\"\n                      scope=\"col\"\n                    >\n                      ${this.hass.localize(\n                        \"ui.panel.lovelace.cards.energy.energy_sources_table.cost\"\n                      )}\n                    </th>`\n                  : \"\"}\n              </tr>\n            </thead>\n            <tbody class=\"mdc-data-table__content\">\n              ${types.solar?.map((source, idx) => {\n                const energy =\n                  calculateStatisticSumGrowth(\n                    this._data!.stats[source.stat_energy_from]\n                  ) || 0;\n                totalSolar += energy;\n\n                const compareEnergy =\n                  (compare &&\n                    calculateStatisticSumGrowth(\n                      this._data!.statsCompare[source.stat_energy_from]\n                    )) ||\n                  0;\n                totalSolarCompare += compareEnergy;\n\n                const color = this._getColor(\n                  computedStyles,\n                  colorPropertyMap.solar,\n                  solarColor,\n                  idx\n                );\n\n                return html`<tr class=\"mdc-data-table__row\">\n                  <td class=\"mdc-data-table__cell cell-bullet\">\n                    <div\n                      class=\"bullet\"\n                      style=${styleMap({\n                        borderColor: color,\n                        backgroundColor: color + \"7F\",\n                      })}\n                    ></div>\n                  </td>\n                  <th class=\"mdc-data-table__cell\" scope=\"row\">\n                    ${getStatisticLabel(\n                      this.hass,\n                      source.stat_energy_from,\n                      this._data?.statsMetadata[source.stat_energy_from]\n                    )}\n                  </th>\n                  ${compare\n                    ? html`<td\n                          class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                        >\n                          ${formatNumber(compareEnergy, this.hass.locale)} kWh\n                        </td>\n                        ${showCosts\n                          ? html`<td class=\"mdc-data-table__cell\"></td>`\n                          : \"\"}`\n                    : \"\"}\n                  <td\n                    class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                  >\n                    ${formatNumber(energy, this.hass.locale)} kWh\n                  </td>\n                  ${showCosts\n                    ? html`<td class=\"mdc-data-table__cell\"></td>`\n                    : \"\"}\n                </tr>`;\n              })}\n              ${types.solar\n                ? html`<tr class=\"mdc-data-table__row total\">\n                    <td class=\"mdc-data-table__cell\"></td>\n                    <th class=\"mdc-data-table__cell\" scope=\"row\">\n                      ${this.hass.localize(\n                        \"ui.panel.lovelace.cards.energy.energy_sources_table.solar_total\"\n                      )}\n                    </th>\n                    ${compare\n                      ? html`<td\n                            class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                          >\n                            ${formatNumber(totalSolarCompare, this.hass.locale)}\n                            kWh\n                          </td>\n                          ${showCosts\n                            ? html`<td class=\"mdc-data-table__cell\"></td>`\n                            : \"\"}`\n                      : \"\"}\n                    <td\n                      class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                    >\n                      ${formatNumber(totalSolar, this.hass.locale)} kWh\n                    </td>\n                    ${showCosts\n                      ? html`<td class=\"mdc-data-table__cell\"></td>`\n                      : \"\"}\n                  </tr>`\n                : \"\"}\n              ${types.battery?.map((source, idx) => {\n                const energyFrom =\n                  calculateStatisticSumGrowth(\n                    this._data!.stats[source.stat_energy_from]\n                  ) || 0;\n                const energyTo =\n                  calculateStatisticSumGrowth(\n                    this._data!.stats[source.stat_energy_to]\n                  ) || 0;\n                totalBattery += energyFrom - energyTo;\n\n                const energyFromCompare =\n                  (compare &&\n                    calculateStatisticSumGrowth(\n                      this._data!.statsCompare[source.stat_energy_from]\n                    )) ||\n                  0;\n                const energyToCompare =\n                  (compare &&\n                    calculateStatisticSumGrowth(\n                      this._data!.statsCompare[source.stat_energy_to]\n                    )) ||\n                  0;\n                totalBatteryCompare += energyFromCompare - energyToCompare;\n\n                const fromColor = this._getColor(\n                  computedStyles,\n                  colorPropertyMap.battery_out,\n                  batteryFromColor,\n                  idx\n                );\n                const toColor = this._getColor(\n                  computedStyles,\n                  colorPropertyMap.battery_in,\n                  batteryToColor,\n                  idx\n                );\n\n                return html`<tr class=\"mdc-data-table__row\">\n                    <td class=\"mdc-data-table__cell cell-bullet\">\n                      <div\n                        class=\"bullet\"\n                        style=${styleMap({\n                          borderColor: fromColor,\n                          backgroundColor: fromColor + \"7F\",\n                        })}\n                      ></div>\n                    </td>\n                    <th class=\"mdc-data-table__cell\" scope=\"row\">\n                      ${getStatisticLabel(\n                        this.hass,\n                        source.stat_energy_from,\n                        this._data?.statsMetadata[source.stat_energy_from]\n                      )}\n                    </th>\n                    ${compare\n                      ? html`<td\n                            class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                          >\n                            ${formatNumber(energyFromCompare, this.hass.locale)}\n                            kWh\n                          </td>\n                          ${showCosts\n                            ? html`<td class=\"mdc-data-table__cell\"></td>`\n                            : \"\"}`\n                      : \"\"}\n                    <td\n                      class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                    >\n                      ${formatNumber(energyFrom, this.hass.locale)} kWh\n                    </td>\n                    ${showCosts\n                      ? html`<td class=\"mdc-data-table__cell\"></td>`\n                      : \"\"}\n                  </tr>\n                  <tr class=\"mdc-data-table__row\">\n                    <td class=\"mdc-data-table__cell cell-bullet\">\n                      <div\n                        class=\"bullet\"\n                        style=${styleMap({\n                          borderColor: toColor,\n                          backgroundColor: toColor + \"7F\",\n                        })}\n                      ></div>\n                    </td>\n                    <th class=\"mdc-data-table__cell\" scope=\"row\">\n                      ${getStatisticLabel(\n                        this.hass,\n                        source.stat_energy_to,\n                        this._data?.statsMetadata[source.stat_energy_to]\n                      )}\n                    </th>\n                    ${compare\n                      ? html`<td\n                            class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                          >\n                            ${formatNumber(\n                              energyToCompare * -1,\n                              this.hass.locale\n                            )}\n                            kWh\n                          </td>\n                          ${showCosts\n                            ? html`<td class=\"mdc-data-table__cell\"></td>`\n                            : \"\"}`\n                      : \"\"}\n                    <td\n                      class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                    >\n                      ${formatNumber(energyTo * -1, this.hass.locale)} kWh\n                    </td>\n                    ${showCosts\n                      ? html`<td class=\"mdc-data-table__cell\"></td>`\n                      : \"\"}\n                  </tr>`;\n              })}\n              ${types.battery\n                ? html`<tr class=\"mdc-data-table__row total\">\n                    <td class=\"mdc-data-table__cell\"></td>\n                    <th class=\"mdc-data-table__cell\" scope=\"row\">\n                      ${this.hass.localize(\n                        \"ui.panel.lovelace.cards.energy.energy_sources_table.battery_total\"\n                      )}\n                    </th>\n                    ${compare\n                      ? html` <td\n                            class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                          >\n                            ${formatNumber(\n                              totalBatteryCompare,\n                              this.hass.locale\n                            )}\n                            kWh\n                          </td>\n                          ${showCosts\n                            ? html`<td class=\"mdc-data-table__cell\"></td>`\n                            : \"\"}`\n                      : \"\"}\n                    <td\n                      class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                    >\n                      ${formatNumber(totalBattery, this.hass.locale)} kWh\n                    </td>\n                    ${showCosts\n                      ? html`<td class=\"mdc-data-table__cell\"></td>`\n                      : \"\"}\n                  </tr>`\n                : \"\"}\n              ${types.grid?.map(\n                (source) =>\n                  html`${source.flow_from.map((flow, idx) => {\n                    const energy =\n                      calculateStatisticSumGrowth(\n                        this._data!.stats[flow.stat_energy_from]\n                      ) || 0;\n                    totalGrid += energy;\n\n                    const compareEnergy =\n                      (compare &&\n                        calculateStatisticSumGrowth(\n                          this._data!.statsCompare[flow.stat_energy_from]\n                        )) ||\n                      0;\n                    totalGridCompare += compareEnergy;\n\n                    const cost_stat =\n                      flow.stat_cost ||\n                      this._data!.info.cost_sensors[flow.stat_energy_from];\n                    const cost = cost_stat\n                      ? calculateStatisticSumGrowth(\n                          this._data!.stats[cost_stat]\n                        ) || 0\n                      : null;\n                    if (cost !== null) {\n                      hasGridCost = true;\n                      totalGridCost += cost;\n                    }\n\n                    const costCompare =\n                      compare && cost_stat\n                        ? calculateStatisticSumGrowth(\n                            this._data!.statsCompare[cost_stat]\n                          ) || 0\n                        : null;\n                    if (costCompare !== null) {\n                      totalGridCostCompare += costCompare;\n                    }\n\n                    const color = this._getColor(\n                      computedStyles,\n                      colorPropertyMap.grid_consumption,\n                      consumptionColor,\n                      idx\n                    );\n\n                    return html`<tr class=\"mdc-data-table__row\">\n                      <td class=\"mdc-data-table__cell cell-bullet\">\n                        <div\n                          class=\"bullet\"\n                          style=${styleMap({\n                            borderColor: color,\n                            backgroundColor: color + \"7F\",\n                          })}\n                        ></div>\n                      </td>\n                      <th class=\"mdc-data-table__cell\" scope=\"row\">\n                        ${getStatisticLabel(\n                          this.hass,\n                          flow.stat_energy_from,\n                          this._data?.statsMetadata[flow.stat_energy_from]\n                        )}\n                      </th>\n                      ${compare\n                        ? html`<td\n                              class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                            >\n                              ${formatNumber(compareEnergy, this.hass.locale)}\n                              kWh\n                            </td>\n                            ${showCosts\n                              ? html`<td\n                                  class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                                >\n                                  ${costCompare !== null\n                                    ? formatNumber(\n                                        costCompare,\n                                        this.hass.locale,\n                                        {\n                                          style: \"currency\",\n                                          currency: this.hass.config.currency!,\n                                        }\n                                      )\n                                    : \"\"}\n                                </td>`\n                              : \"\"}`\n                        : \"\"}\n                      <td\n                        class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                      >\n                        ${formatNumber(energy, this.hass.locale)} kWh\n                      </td>\n                      ${showCosts\n                        ? html` <td\n                            class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                          >\n                            ${cost !== null\n                              ? formatNumber(cost, this.hass.locale, {\n                                  style: \"currency\",\n                                  currency: this.hass.config.currency!,\n                                })\n                              : \"\"}\n                          </td>`\n                        : \"\"}\n                    </tr>`;\n                  })}\n                  ${source.flow_to.map((flow, idx) => {\n                    const energy =\n                      (calculateStatisticSumGrowth(\n                        this._data!.stats[flow.stat_energy_to]\n                      ) || 0) * -1;\n                    totalGrid += energy;\n                    const cost_stat =\n                      flow.stat_compensation ||\n                      this._data!.info.cost_sensors[flow.stat_energy_to];\n                    const cost = cost_stat\n                      ? (calculateStatisticSumGrowth(\n                          this._data!.stats[cost_stat]\n                        ) || 0) * -1\n                      : null;\n                    if (cost !== null) {\n                      hasGridCost = true;\n                      totalGridCost += cost;\n                    }\n\n                    const energyCompare =\n                      ((compare &&\n                        calculateStatisticSumGrowth(\n                          this._data!.statsCompare[flow.stat_energy_to]\n                        )) ||\n                        0) * -1;\n                    totalGridCompare += energyCompare;\n\n                    const costCompare =\n                      compare && cost_stat\n                        ? (calculateStatisticSumGrowth(\n                            this._data!.statsCompare[cost_stat]\n                          ) || 0) * -1\n                        : null;\n                    if (costCompare !== null) {\n                      totalGridCostCompare += costCompare;\n                    }\n\n                    const color = this._getColor(\n                      computedStyles,\n                      colorPropertyMap.grid_return,\n                      returnColor,\n                      idx\n                    );\n\n                    return html`<tr class=\"mdc-data-table__row\">\n                      <td class=\"mdc-data-table__cell cell-bullet\">\n                        <div\n                          class=\"bullet\"\n                          style=${styleMap({\n                            borderColor: color,\n                            backgroundColor: color + \"7F\",\n                          })}\n                        ></div>\n                      </td>\n                      <th class=\"mdc-data-table__cell\" scope=\"row\">\n                        ${getStatisticLabel(\n                          this.hass,\n                          flow.stat_energy_to,\n                          this._data?.statsMetadata[flow.stat_energy_to]\n                        )}\n                      </th>\n                      ${compare\n                        ? html`<td\n                              class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                            >\n                              ${formatNumber(energyCompare, this.hass.locale)}\n                              kWh\n                            </td>\n                            ${showCosts\n                              ? html`<td\n                                  class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                                >\n                                  ${costCompare !== null\n                                    ? formatNumber(\n                                        costCompare,\n                                        this.hass.locale,\n                                        {\n                                          style: \"currency\",\n                                          currency: this.hass.config.currency!,\n                                        }\n                                      )\n                                    : \"\"}\n                                </td>`\n                              : \"\"}`\n                        : \"\"}\n                      <td\n                        class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                      >\n                        ${formatNumber(energy, this.hass.locale)} kWh\n                      </td>\n                      ${showCosts\n                        ? html` <td\n                            class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                          >\n                            ${cost !== null\n                              ? formatNumber(cost, this.hass.locale, {\n                                  style: \"currency\",\n                                  currency: this.hass.config.currency!,\n                                })\n                              : \"\"}\n                          </td>`\n                        : \"\"}\n                    </tr>`;\n                  })}`\n              )}\n              ${types.grid\n                ? html` <tr class=\"mdc-data-table__row total\">\n                    <td class=\"mdc-data-table__cell\"></td>\n                    <th class=\"mdc-data-table__cell\" scope=\"row\">\n                      ${this.hass.localize(\n                        \"ui.panel.lovelace.cards.energy.energy_sources_table.grid_total\"\n                      )}\n                    </th>\n                    ${compare\n                      ? html`<td\n                            class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                          >\n                            ${formatNumber(totalGridCompare, this.hass.locale)}\n                            kWh\n                          </td>\n                          ${showCosts\n                            ? html`<td\n                                class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                              >\n                                ${hasGridCost\n                                  ? formatNumber(\n                                      totalGridCostCompare,\n                                      this.hass.locale,\n                                      {\n                                        style: \"currency\",\n                                        currency: this.hass.config.currency!,\n                                      }\n                                    )\n                                  : \"\"}\n                              </td>`\n                            : \"\"}`\n                      : \"\"}\n                    <td\n                      class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                    >\n                      ${formatNumber(totalGrid, this.hass.locale)} kWh\n                    </td>\n                    ${showCosts\n                      ? html`<td\n                          class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                        >\n                          ${hasGridCost\n                            ? formatNumber(totalGridCost, this.hass.locale, {\n                                style: \"currency\",\n                                currency: this.hass.config.currency!,\n                              })\n                            : \"\"}\n                        </td>`\n                      : \"\"}\n                  </tr>`\n                : \"\"}\n              ${types.gas?.map((source, idx) => {\n                const energy =\n                  calculateStatisticSumGrowth(\n                    this._data!.stats[source.stat_energy_from]\n                  ) || 0;\n                totalGas += energy;\n\n                const energyCompare =\n                  (compare &&\n                    calculateStatisticSumGrowth(\n                      this._data!.statsCompare[source.stat_energy_from]\n                    )) ||\n                  0;\n                totalGasCompare += energyCompare;\n\n                const cost_stat =\n                  source.stat_cost ||\n                  this._data!.info.cost_sensors[source.stat_energy_from];\n                const cost = cost_stat\n                  ? calculateStatisticSumGrowth(this._data!.stats[cost_stat]) ||\n                    0\n                  : null;\n                if (cost !== null) {\n                  hasGasCost = true;\n                  totalGasCost += cost;\n                }\n\n                const costCompare =\n                  compare && cost_stat\n                    ? calculateStatisticSumGrowth(\n                        this._data!.statsCompare[cost_stat]\n                      ) || 0\n                    : null;\n                if (costCompare !== null) {\n                  totalGasCostCompare += costCompare;\n                }\n\n                const color = this._getColor(\n                  computedStyles,\n                  colorPropertyMap.gas,\n                  gasColor,\n                  idx\n                );\n\n                return html`<tr class=\"mdc-data-table__row\">\n                  <td class=\"mdc-data-table__cell cell-bullet\">\n                    <div\n                      class=\"bullet\"\n                      style=${styleMap({\n                        borderColor: color,\n                        backgroundColor: color + \"7F\",\n                      })}\n                    ></div>\n                  </td>\n                  <th class=\"mdc-data-table__cell\" scope=\"row\">\n                    ${getStatisticLabel(\n                      this.hass,\n                      source.stat_energy_from,\n                      this._data?.statsMetadata[source.stat_energy_from]\n                    )}\n                  </th>\n                  ${compare\n                    ? html` <td\n                          class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                        >\n                          ${formatNumber(energyCompare, this.hass.locale)}\n                          ${gasUnit}\n                        </td>\n                        ${showCosts\n                          ? html`<td\n                              class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                            >\n                              ${costCompare !== null\n                                ? formatNumber(costCompare, this.hass.locale, {\n                                    style: \"currency\",\n                                    currency: this.hass.config.currency!,\n                                  })\n                                : \"\"}\n                            </td>`\n                          : \"\"}`\n                    : \"\"}\n                  <td\n                    class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                  >\n                    ${formatNumber(energy, this.hass.locale)} ${gasUnit}\n                  </td>\n                  ${showCosts\n                    ? html`<td\n                        class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                      >\n                        ${cost !== null\n                          ? formatNumber(cost, this.hass.locale, {\n                              style: \"currency\",\n                              currency: this.hass.config.currency!,\n                            })\n                          : \"\"}\n                      </td>`\n                    : \"\"}\n                </tr>`;\n              })}\n              ${types.gas\n                ? html`<tr class=\"mdc-data-table__row total\">\n                    <td class=\"mdc-data-table__cell\"></td>\n                    <th class=\"mdc-data-table__cell\" scope=\"row\">\n                      ${this.hass.localize(\n                        \"ui.panel.lovelace.cards.energy.energy_sources_table.gas_total\"\n                      )}\n                    </th>\n                    ${compare\n                      ? html`<td\n                            class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                          >\n                            ${formatNumber(totalGasCompare, this.hass.locale)}\n                            ${gasUnit}\n                          </td>\n                          ${showCosts\n                            ? html`<td\n                                class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                              >\n                                ${hasGasCost\n                                  ? formatNumber(\n                                      totalGasCostCompare,\n                                      this.hass.locale,\n                                      {\n                                        style: \"currency\",\n                                        currency: this.hass.config.currency!,\n                                      }\n                                    )\n                                  : \"\"}\n                              </td>`\n                            : \"\"}`\n                      : \"\"}\n                    <td\n                      class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                    >\n                      ${formatNumber(totalGas, this.hass.locale)} ${gasUnit}\n                    </td>\n                    ${showCosts\n                      ? html`<td\n                          class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                        >\n                          ${hasGasCost\n                            ? formatNumber(totalGasCost, this.hass.locale, {\n                                style: \"currency\",\n                                currency: this.hass.config.currency!,\n                              })\n                            : \"\"}\n                        </td>`\n                      : \"\"}\n                  </tr>`\n                : \"\"}\n              ${types.water?.map((source, idx) => {\n                const energy =\n                  calculateStatisticSumGrowth(\n                    this._data!.stats[source.stat_energy_from]\n                  ) || 0;\n                totalWater += energy;\n\n                const energyCompare =\n                  (compare &&\n                    calculateStatisticSumGrowth(\n                      this._data!.statsCompare[source.stat_energy_from]\n                    )) ||\n                  0;\n                totalWaterCompare += energyCompare;\n\n                const cost_stat =\n                  source.stat_cost ||\n                  this._data!.info.cost_sensors[source.stat_energy_from];\n                const cost = cost_stat\n                  ? calculateStatisticSumGrowth(this._data!.stats[cost_stat]) ||\n                    0\n                  : null;\n                if (cost !== null) {\n                  hasWaterCost = true;\n                  totalWaterCost += cost;\n                }\n\n                const costCompare =\n                  compare && cost_stat\n                    ? calculateStatisticSumGrowth(\n                        this._data!.statsCompare[cost_stat]\n                      ) || 0\n                    : null;\n                if (costCompare !== null) {\n                  totalWaterCostCompare += costCompare;\n                }\n\n                const color = this._getColor(\n                  computedStyles,\n                  colorPropertyMap.water,\n                  waterColor,\n                  idx\n                );\n\n                return html`<tr class=\"mdc-data-table__row\">\n                  <td class=\"mdc-data-table__cell cell-bullet\">\n                    <div\n                      class=\"bullet\"\n                      style=${styleMap({\n                        borderColor: color,\n                        backgroundColor: color + \"7F\",\n                      })}\n                    ></div>\n                  </td>\n                  <th class=\"mdc-data-table__cell\" scope=\"row\">\n                    ${getStatisticLabel(\n                      this.hass,\n                      source.stat_energy_from,\n                      this._data?.statsMetadata[source.stat_energy_from]\n                    )}\n                  </th>\n                  ${compare\n                    ? html` <td\n                          class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                        >\n                          ${formatNumber(energyCompare, this.hass.locale)}\n                          ${waterUnit}\n                        </td>\n                        ${showCosts\n                          ? html`<td\n                              class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                            >\n                              ${costCompare !== null\n                                ? formatNumber(costCompare, this.hass.locale, {\n                                    style: \"currency\",\n                                    currency: this.hass.config.currency!,\n                                  })\n                                : \"\"}\n                            </td>`\n                          : \"\"}`\n                    : \"\"}\n                  <td\n                    class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                  >\n                    ${formatNumber(energy, this.hass.locale)} ${waterUnit}\n                  </td>\n                  ${showCosts\n                    ? html`<td\n                        class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                      >\n                        ${cost !== null\n                          ? formatNumber(cost, this.hass.locale, {\n                              style: \"currency\",\n                              currency: this.hass.config.currency!,\n                            })\n                          : \"\"}\n                      </td>`\n                    : \"\"}\n                </tr>`;\n              })}\n              ${types.water\n                ? html`<tr class=\"mdc-data-table__row total\">\n                    <td class=\"mdc-data-table__cell\"></td>\n                    <th class=\"mdc-data-table__cell\" scope=\"row\">\n                      ${this.hass.localize(\n                        \"ui.panel.lovelace.cards.energy.energy_sources_table.water_total\"\n                      )}\n                    </th>\n                    ${compare\n                      ? html`<td\n                            class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                          >\n                            ${formatNumber(totalWaterCompare, this.hass.locale)}\n                            ${waterUnit}\n                          </td>\n                          ${showCosts\n                            ? html`<td\n                                class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                              >\n                                ${hasWaterCost\n                                  ? formatNumber(\n                                      totalWaterCostCompare,\n                                      this.hass.locale,\n                                      {\n                                        style: \"currency\",\n                                        currency: this.hass.config.currency!,\n                                      }\n                                    )\n                                  : \"\"}\n                              </td>`\n                            : \"\"}`\n                      : \"\"}\n                    <td\n                      class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                    >\n                      ${formatNumber(totalWater, this.hass.locale)} ${waterUnit}\n                    </td>\n                    ${showCosts\n                      ? html`<td\n                          class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                        >\n                          ${hasWaterCost\n                            ? formatNumber(totalWaterCost, this.hass.locale, {\n                                style: \"currency\",\n                                currency: this.hass.config.currency!,\n                              })\n                            : \"\"}\n                        </td>`\n                      : \"\"}\n                  </tr>`\n                : \"\"}\n              ${[hasGasCost, hasWaterCost, hasGridCost].filter(Boolean).length >\n              1\n                ? html`<tr class=\"mdc-data-table__row total\">\n                    <td class=\"mdc-data-table__cell\"></td>\n                    <th class=\"mdc-data-table__cell\" scope=\"row\">\n                      ${this.hass.localize(\n                        \"ui.panel.lovelace.cards.energy.energy_sources_table.total_costs\"\n                      )}\n                    </th>\n                    ${compare\n                      ? html`<td class=\"mdc-data-table__cell\"></td>\n                          <td\n                            class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                          >\n                            ${formatNumber(\n                              totalGasCostCompare +\n                                totalGridCostCompare +\n                                totalWaterCostCompare,\n                              this.hass.locale,\n                              {\n                                style: \"currency\",\n                                currency: this.hass.config.currency!,\n                              }\n                            )}\n                          </td>`\n                      : \"\"}\n                    <td class=\"mdc-data-table__cell\"></td>\n                    <td\n                      class=\"mdc-data-table__cell mdc-data-table__cell--numeric\"\n                    >\n                      ${formatNumber(\n                        totalGasCost + totalGridCost + totalWaterCost,\n                        this.hass.locale,\n                        {\n                          style: \"currency\",\n                          currency: this.hass.config.currency!,\n                        }\n                      )}\n                    </td>\n                  </tr>`\n                : \"\"}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </ha-card>`;\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      ${unsafeCSS(dataTableStyles)}\n      .mdc-data-table {\n        width: 100%;\n        border: 0;\n      }\n      .mdc-data-table__header-cell,\n      .mdc-data-table__cell {\n        color: var(--primary-text-color);\n        border-bottom-color: var(--divider-color);\n        text-align: var(--float-start);\n      }\n      .mdc-data-table__row:not(.mdc-data-table__row--selected):hover {\n        background-color: rgba(var(--rgb-primary-text-color), 0.04);\n      }\n      .total {\n        --mdc-typography-body2-font-weight: 500;\n      }\n      .total .mdc-data-table__cell {\n        border-top: 1px solid var(--divider-color);\n      }\n      ha-card {\n        height: 100%;\n        overflow: hidden;\n      }\n      .card-header {\n        padding-bottom: 0;\n      }\n      .content {\n        padding: 16px;\n      }\n      .has-header {\n        padding-top: 0;\n      }\n      .cell-bullet {\n        width: 32px;\n        padding-right: 0;\n        padding-inline-end: 0;\n        padding-inline-start: 16px;\n        direction: var(--direction);\n      }\n      .bullet {\n        border-width: 1px;\n        border-style: solid;\n        border-radius: 4px;\n        height: 16px;\n        width: 32px;\n      }\n      .mdc-data-table__cell--numeric {\n        direction: ltr;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-energy-sources-table-card\": HuiEnergySourcesTableCard;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}