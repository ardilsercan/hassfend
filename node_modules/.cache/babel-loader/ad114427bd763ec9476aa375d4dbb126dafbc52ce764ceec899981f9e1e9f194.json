{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport \"@lrnwebcomponents/simple-tooltip/simple-tooltip\";\nconst mdiDotsVertical = \"M12,16A2,2 0 0,1 14,18A2,2 0 0,1 12,20A2,2 0 0,1 10,18A2,2 0 0,1 12,16M12,10A2,2 0 0,1 14,12A2,2 0 0,1 12,14A2,2 0 0,1 10,12A2,2 0 0,1 12,10M12,4A2,2 0 0,1 14,6A2,2 0 0,1 12,8A2,2 0 0,1 10,6A2,2 0 0,1 12,4Z\";\nimport { css, html, LitElement } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport { haStyle } from \"../resources/styles\";\nimport \"./ha-button-menu\";\nimport \"./ha-icon-button\";\nimport \"./ha-list-item\";\nimport \"./ha-svg-icon\";\nexport let HaIconOverflowMenu = _decorate([customElement(\"ha-icon-overflow-menu\")], function (_initialize, _LitElement) {\n  class HaIconOverflowMenu extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaIconOverflowMenu,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Array\n      })],\n      key: \"items\",\n      value() {\n        return [];\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"narrow\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        return html`\n      ${this.narrow ? html` <!-- Collapsed representation for small screens -->\n            <ha-button-menu\n              @click=${this._handleIconOverflowMenuOpened}\n              @closed=${this._handleIconOverflowMenuClosed}\n              class=\"ha-icon-overflow-menu-overflow\"\n              absolute\n            >\n              <ha-icon-button\n                .label=${this.hass.localize(\"ui.common.overflow_menu\")}\n                .path=${mdiDotsVertical}\n                slot=\"trigger\"\n              ></ha-icon-button>\n\n              ${this.items.map(item => item.divider ? html`<li divider role=\"separator\"></li>` : html`<ha-list-item\n                      graphic=\"icon\"\n                      ?disabled=${item.disabled}\n                      @click=${item.action}\n                      class=${classMap({\n          warning: Boolean(item.warning)\n        })}\n                    >\n                      <div slot=\"graphic\">\n                        <ha-svg-icon\n                          class=${classMap({\n          warning: Boolean(item.warning)\n        })}\n                          .path=${item.path}\n                        ></ha-svg-icon>\n                      </div>\n                      ${item.label}\n                    </ha-list-item> `)}\n            </ha-button-menu>` : html`\n            <!-- Icon representation for big screens -->\n            ${this.items.map(item => item.narrowOnly ? \"\" : item.divider ? html`<div role=\"separator\"></div>` : html`<div>\n                      ${item.tooltip ? html`<simple-tooltip\n                            animation-delay=\"0\"\n                            position=\"left\"\n                          >\n                            ${item.tooltip}\n                          </simple-tooltip>` : \"\"}\n                      <ha-icon-button\n                        @click=${item.action}\n                        .label=${item.label}\n                        .path=${item.path}\n                        ?disabled=${item.disabled}\n                      ></ha-icon-button>\n                    </div> `)}\n          `}\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleIconOverflowMenuOpened\",\n      value: function _handleIconOverflowMenuOpened(e) {\n        e.stopPropagation();\n        // If this component is used inside a data table, the z-index of the row\n        // needs to be increased. Otherwise the ha-button-menu would be displayed\n        // underneath the next row in the table.\n        const row = this.closest(\".mdc-data-table__row\");\n        if (row) {\n          row.style.zIndex = \"1\";\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleIconOverflowMenuClosed\",\n      value: function _handleIconOverflowMenuClosed() {\n        const row = this.closest(\".mdc-data-table__row\");\n        if (row) {\n          row.style.zIndex = \"\";\n        }\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [haStyle, css`\n        :host {\n          display: flex;\n          justify-content: flex-end;\n        }\n        li[role=\"separator\"] {\n          border-bottom-color: var(--divider-color);\n        }\n        div[role=\"separator\"] {\n          border-right: 1px solid var(--divider-color);\n          width: 1px;\n        }\n        ha-list-item[disabled] ha-svg-icon {\n          color: var(--disabled-text-color);\n        }\n      `];\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["mdiDotsVertical","css","html","LitElement","customElement","property","classMap","haStyle","HaIconOverflowMenu","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","type","Array","Boolean","render","narrow","_handleIconOverflowMenuOpened","_handleIconOverflowMenuClosed","hass","localize","items","map","item","divider","disabled","action","warning","path","label","narrowOnly","tooltip","e","stopPropagation","row","closest","style","zIndex","static","styles"],"sources":["/workspaces/frontend/src/components/ha-icon-overflow-menu.ts"],"sourcesContent":["import \"@lrnwebcomponents/simple-tooltip/simple-tooltip\";\nimport { mdiDotsVertical } from \"@mdi/js\";\nimport { css, html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport { haStyle } from \"../resources/styles\";\nimport { HomeAssistant } from \"../types\";\nimport \"./ha-button-menu\";\nimport \"./ha-icon-button\";\nimport \"./ha-list-item\";\nimport \"./ha-svg-icon\";\n\nexport interface IconOverflowMenuItem {\n  [key: string]: any;\n  path: string;\n  label: string;\n  narrowOnly?: boolean;\n  disabled?: boolean;\n  tooltip?: string;\n  action: () => any;\n  warning?: boolean;\n  divider?: boolean;\n}\n\n@customElement(\"ha-icon-overflow-menu\")\nexport class HaIconOverflowMenu extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ type: Array }) public items: IconOverflowMenuItem[] = [];\n\n  @property({ type: Boolean }) public narrow = false;\n\n  protected render(): TemplateResult {\n    return html`\n      ${this.narrow\n        ? html` <!-- Collapsed representation for small screens -->\n            <ha-button-menu\n              @click=${this._handleIconOverflowMenuOpened}\n              @closed=${this._handleIconOverflowMenuClosed}\n              class=\"ha-icon-overflow-menu-overflow\"\n              absolute\n            >\n              <ha-icon-button\n                .label=${this.hass.localize(\"ui.common.overflow_menu\")}\n                .path=${mdiDotsVertical}\n                slot=\"trigger\"\n              ></ha-icon-button>\n\n              ${this.items.map((item) =>\n                item.divider\n                  ? html`<li divider role=\"separator\"></li>`\n                  : html`<ha-list-item\n                      graphic=\"icon\"\n                      ?disabled=${item.disabled}\n                      @click=${item.action}\n                      class=${classMap({ warning: Boolean(item.warning) })}\n                    >\n                      <div slot=\"graphic\">\n                        <ha-svg-icon\n                          class=${classMap({ warning: Boolean(item.warning) })}\n                          .path=${item.path}\n                        ></ha-svg-icon>\n                      </div>\n                      ${item.label}\n                    </ha-list-item> `\n              )}\n            </ha-button-menu>`\n        : html`\n            <!-- Icon representation for big screens -->\n            ${this.items.map((item) =>\n              item.narrowOnly\n                ? \"\"\n                : item.divider\n                  ? html`<div role=\"separator\"></div>`\n                  : html`<div>\n                      ${item.tooltip\n                        ? html`<simple-tooltip\n                            animation-delay=\"0\"\n                            position=\"left\"\n                          >\n                            ${item.tooltip}\n                          </simple-tooltip>`\n                        : \"\"}\n                      <ha-icon-button\n                        @click=${item.action}\n                        .label=${item.label}\n                        .path=${item.path}\n                        ?disabled=${item.disabled}\n                      ></ha-icon-button>\n                    </div> `\n            )}\n          `}\n    `;\n  }\n\n  protected _handleIconOverflowMenuOpened(e) {\n    e.stopPropagation();\n    // If this component is used inside a data table, the z-index of the row\n    // needs to be increased. Otherwise the ha-button-menu would be displayed\n    // underneath the next row in the table.\n    const row = this.closest(\".mdc-data-table__row\") as HTMLDivElement | null;\n    if (row) {\n      row.style.zIndex = \"1\";\n    }\n  }\n\n  protected _handleIconOverflowMenuClosed() {\n    const row = this.closest(\".mdc-data-table__row\") as HTMLDivElement | null;\n    if (row) {\n      row.style.zIndex = \"\";\n    }\n  }\n\n  static get styles() {\n    return [\n      haStyle,\n      css`\n        :host {\n          display: flex;\n          justify-content: flex-end;\n        }\n        li[role=\"separator\"] {\n          border-bottom-color: var(--divider-color);\n        }\n        div[role=\"separator\"] {\n          border-right: 1px solid var(--divider-color);\n          width: 1px;\n        }\n        ha-list-item[disabled] ha-svg-icon {\n          color: var(--disabled-text-color);\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-icon-overflow-menu\": HaIconOverflowMenu;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}