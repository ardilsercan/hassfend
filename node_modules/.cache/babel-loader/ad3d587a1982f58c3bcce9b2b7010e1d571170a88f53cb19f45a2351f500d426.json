{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _templateObject, _templateObject2, _templateObject3;\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.values.js\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport { styleMap } from \"lit/directives/style-map\";\nimport { computeStateDomain } from \"../../common/entity/compute_state_domain\";\nimport { computeUserInitials } from \"../../data/user\";\nvar UserBadge = _decorate([customElement(\"ha-user-badge\")], function (_initialize, _LitElement) {\n  var UserBadge = /*#__PURE__*/function (_LitElement2) {\n    _inherits(UserBadge, _LitElement2);\n    function UserBadge() {\n      var _this;\n      _classCallCheck(this, UserBadge);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, UserBadge, [].concat(args));\n      _initialize(_assertThisInitialized(_this));\n      return _this;\n    }\n    return _createClass(UserBadge);\n  }(_LitElement);\n  return {\n    F: UserBadge,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"user\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_personPicture\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_personEntityId\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"willUpdate\",\n      value: function willUpdate(changedProps) {\n        _get(_getPrototypeOf(UserBadge.prototype), \"willUpdate\", this).call(this, changedProps);\n        if (changedProps.has(\"user\")) {\n          this._getPersonPicture();\n          return;\n        }\n        var oldHass = changedProps.get(\"hass\");\n        if (this._personEntityId && oldHass && this.hass.states[this._personEntityId] !== oldHass.states[this._personEntityId]) {\n          var entityState = this.hass.states[this._personEntityId];\n          if (entityState) {\n            this._personPicture = entityState.attributes.entity_picture;\n          } else {\n            this._getPersonPicture();\n          }\n        } else if (!this._personEntityId && oldHass) {\n          this._getPersonPicture();\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this.hass || !this.user) {\n          return nothing;\n        }\n        var picture = this._personPicture;\n        if (picture) {\n          return html(_templateObject || (_templateObject = _taggedTemplateLiteral([\"<div\\n        style=\", \"\\n        class=\\\"picture\\\"\\n      ></div>\"])), styleMap({\n            backgroundImage: \"url(\".concat(picture, \")\")\n          }));\n        }\n        var initials = computeUserInitials(this.user.name);\n        return html(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"<div\\n      class=\\\"initials \", \"\\\"\\n    >\\n      \", \"\\n    </div>\"])), classMap({\n          long: initials.length > 2\n        }), initials);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_getPersonPicture\",\n      value: function _getPersonPicture() {\n        this._personEntityId = undefined;\n        this._personPicture = undefined;\n        if (!this.hass || !this.user) {\n          return;\n        }\n        for (var _i = 0, _Object$values = Object.values(this.hass.states); _i < _Object$values.length; _i++) {\n          var entity = _Object$values[_i];\n          if (entity.attributes.user_id === this.user.id && computeStateDomain(entity) === \"person\") {\n            this._personEntityId = entity.entity_id;\n            this._personPicture = entity.attributes.entity_picture;\n            break;\n          }\n        }\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n      :host {\\n        display: contents;\\n      }\\n      .picture {\\n        width: 40px;\\n        height: 40px;\\n        background-size: cover;\\n        border-radius: 50%;\\n      }\\n      .initials {\\n        display: inline-block;\\n        box-sizing: border-box;\\n        width: 40px;\\n        line-height: 40px;\\n        border-radius: 50%;\\n        text-align: center;\\n        background-color: var(--light-primary-color);\\n        text-decoration: none;\\n        color: var(--text-light-primary-color, var(--primary-text-color));\\n        overflow: hidden;\\n      }\\n      .initials.long {\\n        font-size: 80%;\\n      }\\n    \"])));\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","nothing","customElement","property","state","classMap","styleMap","computeStateDomain","computeUserInitials","UserBadge","_decorate","_initialize","_LitElement","_LitElement2","_inherits","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_assertThisInitialized","_createClass","F","d","kind","decorators","attribute","key","value","willUpdate","changedProps","_get","_getPrototypeOf","prototype","call","has","_getPersonPicture","oldHass","get","_personEntityId","hass","states","entityState","_personPicture","attributes","entity_picture","render","user","picture","_templateObject","_taggedTemplateLiteral","backgroundImage","initials","name","_templateObject2","long","undefined","_i","_Object$values","Object","values","entity","user_id","id","entity_id","static","styles","_templateObject3"],"sources":["/Users/sercanardil/Desktop/frontend/src/components/user/ha-user-badge.ts"],"sourcesContent":["import {\n  css,\n  CSSResultGroup,\n  html,\n  LitElement,\n  PropertyValues,\n  nothing,\n} from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport { styleMap } from \"lit/directives/style-map\";\nimport { computeStateDomain } from \"../../common/entity/compute_state_domain\";\nimport { computeUserInitials, User } from \"../../data/user\";\nimport { CurrentUser, HomeAssistant } from \"../../types\";\n\n@customElement(\"ha-user-badge\")\nclass UserBadge extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public user?: User | CurrentUser;\n\n  @state() private _personPicture?: string;\n\n  private _personEntityId?: string;\n\n  public willUpdate(changedProps: PropertyValues<this>) {\n    super.willUpdate(changedProps);\n    if (changedProps.has(\"user\")) {\n      this._getPersonPicture();\n      return;\n    }\n    const oldHass = changedProps.get(\"hass\") as HomeAssistant | undefined;\n    if (\n      this._personEntityId &&\n      oldHass &&\n      this.hass.states[this._personEntityId] !==\n        oldHass.states[this._personEntityId]\n    ) {\n      const entityState = this.hass.states[this._personEntityId];\n      if (entityState) {\n        this._personPicture = entityState.attributes.entity_picture;\n      } else {\n        this._getPersonPicture();\n      }\n    } else if (!this._personEntityId && oldHass) {\n      this._getPersonPicture();\n    }\n  }\n\n  protected render() {\n    if (!this.hass || !this.user) {\n      return nothing;\n    }\n    const picture = this._personPicture;\n\n    if (picture) {\n      return html`<div\n        style=${styleMap({ backgroundImage: `url(${picture})` })}\n        class=\"picture\"\n      ></div>`;\n    }\n    const initials = computeUserInitials(this.user.name);\n    return html`<div\n      class=\"initials ${classMap({ long: initials!.length > 2 })}\"\n    >\n      ${initials}\n    </div>`;\n  }\n\n  private _getPersonPicture() {\n    this._personEntityId = undefined;\n    this._personPicture = undefined;\n    if (!this.hass || !this.user) {\n      return;\n    }\n    for (const entity of Object.values(this.hass.states)) {\n      if (\n        entity.attributes.user_id === this.user.id &&\n        computeStateDomain(entity) === \"person\"\n      ) {\n        this._personEntityId = entity.entity_id;\n        this._personPicture = entity.attributes.entity_picture;\n        break;\n      }\n    }\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      :host {\n        display: contents;\n      }\n      .picture {\n        width: 40px;\n        height: 40px;\n        background-size: cover;\n        border-radius: 50%;\n      }\n      .initials {\n        display: inline-block;\n        box-sizing: border-box;\n        width: 40px;\n        line-height: 40px;\n        border-radius: 50%;\n        text-align: center;\n        background-color: var(--light-primary-color);\n        text-decoration: none;\n        color: var(--text-light-primary-color, var(--primary-text-color));\n        overflow: hidden;\n      }\n      .initials.long {\n        font-size: 80%;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-user-badge\": UserBadge;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}