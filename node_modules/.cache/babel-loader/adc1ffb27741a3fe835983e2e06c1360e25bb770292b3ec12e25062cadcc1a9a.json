{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport { sanitizeUrl } from \"@braintree/sanitize-url\";\nimport { html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { navigate } from \"../../src/common/navigate\";\nimport { createSearchParam, extractSearchParamsObject } from \"../../src/common/url/search-params\";\nimport \"../../src/layouts/hass-error-screen\";\nexport const REDIRECTS = {\n  supervisor: {\n    redirect: \"/hassio/dashboard\"\n  },\n  supervisor_logs: {\n    redirect: \"/hassio/system\"\n  },\n  supervisor_info: {\n    redirect: \"/hassio/system\"\n  },\n  supervisor_snapshots: {\n    redirect: \"/hassio/backups\"\n  },\n  supervisor_backups: {\n    redirect: \"/hassio/backups\"\n  },\n  supervisor_store: {\n    redirect: \"/hassio/store\"\n  },\n  supervisor_addons: {\n    redirect: \"/hassio/dashboard\"\n  },\n  supervisor_addon: {\n    redirect: \"/hassio/addon\",\n    params: {\n      addon: \"string\"\n    },\n    optional_params: {\n      repository_url: \"url\"\n    }\n  },\n  supervisor_ingress: {\n    redirect: \"/hassio/ingress\",\n    params: {\n      addon: \"string\"\n    }\n  },\n  supervisor_add_addon_repository: {\n    redirect: \"/hassio/store\",\n    params: {\n      repository_url: \"url\"\n    }\n  }\n};\nlet HassioMyRedirect = _decorate([customElement(\"hassio-my-redirect\")], function (_initialize, _LitElement) {\n  class HassioMyRedirect extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HassioMyRedirect,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"supervisor\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"route\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_error\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"connectedCallback\",\n      value: function connectedCallback() {\n        _get(_getPrototypeOf(HassioMyRedirect.prototype), \"connectedCallback\", this).call(this);\n        const path = this.route.path.substr(1);\n        const redirect = REDIRECTS[path];\n        if (!redirect) {\n          this._error = this.supervisor.localize(\"my.not_supported\", {\n            link: html`<a\n          target=\"_blank\"\n          rel=\"noreferrer noopener\"\n          href=\"https://my.home-assistant.io/faq.html#supported-pages\"\n        >\n          ${this.supervisor.localize(\"my.faq_link\")}\n        </a>`\n          });\n          return;\n        }\n        let url;\n        try {\n          url = this._createRedirectUrl(redirect);\n        } catch (err) {\n          this._error = this.supervisor.localize(\"my.error\");\n          return;\n        }\n        navigate(url, {\n          replace: true\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (this._error) {\n          return html`<hass-error-screen\n        .error=${this._error}\n      ></hass-error-screen>`;\n        }\n        return nothing;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_createRedirectUrl\",\n      value: function _createRedirectUrl(redirect) {\n        const params = this._createRedirectParams(redirect);\n        return `${redirect.redirect}${params}`;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_createRedirectParams\",\n      value: function _createRedirectParams(redirect) {\n        const params = extractSearchParamsObject();\n        if (!redirect.params && !Object.keys(params).length) {\n          return \"\";\n        }\n        const resultParams = {};\n        Object.entries(redirect.params || {}).forEach(([key, type]) => {\n          if (!params[key] || !this._checkParamType(type, params[key])) {\n            throw Error();\n          }\n          resultParams[key] = params[key];\n        });\n        Object.entries(redirect.optional_params || {}).forEach(([key, type]) => {\n          if (params[key]) {\n            if (!this._checkParamType(type, params[key])) {\n              throw Error();\n            }\n            resultParams[key] = params[key];\n          }\n        });\n        return `?${createSearchParam(resultParams)}`;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_checkParamType\",\n      value: function _checkParamType(type, value) {\n        if (type === \"string\") {\n          return true;\n        }\n        if (type === \"url\") {\n          return value && value === sanitizeUrl(value);\n        }\n        return false;\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["sanitizeUrl","html","LitElement","nothing","customElement","property","state","navigate","createSearchParam","extractSearchParamsObject","REDIRECTS","supervisor","redirect","supervisor_logs","supervisor_info","supervisor_snapshots","supervisor_backups","supervisor_store","supervisor_addons","supervisor_addon","params","addon","optional_params","repository_url","supervisor_ingress","supervisor_add_addon_repository","HassioMyRedirect","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","connectedCallback","_get","_getPrototypeOf","prototype","call","path","route","substr","_error","localize","link","url","_createRedirectUrl","err","replace","render","_createRedirectParams","Object","keys","length","resultParams","entries","forEach","type","_checkParamType","Error"],"sources":["/workspaces/frontend/hassio/src/hassio-my-redirect.ts"],"sourcesContent":["import { sanitizeUrl } from \"@braintree/sanitize-url\";\nimport { html, LitElement, TemplateResult, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { navigate } from \"../../src/common/navigate\";\nimport {\n  createSearchParam,\n  extractSearchParamsObject,\n} from \"../../src/common/url/search-params\";\nimport { Supervisor } from \"../../src/data/supervisor/supervisor\";\nimport \"../../src/layouts/hass-error-screen\";\nimport {\n  ParamType,\n  Redirect,\n  Redirects,\n} from \"../../src/panels/my/ha-panel-my\";\nimport { HomeAssistant, Route } from \"../../src/types\";\n\nexport const REDIRECTS: Redirects = {\n  supervisor: {\n    redirect: \"/hassio/dashboard\",\n  },\n  supervisor_logs: {\n    redirect: \"/hassio/system\",\n  },\n  supervisor_info: {\n    redirect: \"/hassio/system\",\n  },\n  supervisor_snapshots: {\n    redirect: \"/hassio/backups\",\n  },\n  supervisor_backups: {\n    redirect: \"/hassio/backups\",\n  },\n  supervisor_store: {\n    redirect: \"/hassio/store\",\n  },\n  supervisor_addons: {\n    redirect: \"/hassio/dashboard\",\n  },\n  supervisor_addon: {\n    redirect: \"/hassio/addon\",\n    params: {\n      addon: \"string\",\n    },\n    optional_params: {\n      repository_url: \"url\",\n    },\n  },\n  supervisor_ingress: {\n    redirect: \"/hassio/ingress\",\n    params: {\n      addon: \"string\",\n    },\n  },\n  supervisor_add_addon_repository: {\n    redirect: \"/hassio/store\",\n    params: {\n      repository_url: \"url\",\n    },\n  },\n};\n\n@customElement(\"hassio-my-redirect\")\nclass HassioMyRedirect extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public supervisor!: Supervisor;\n\n  @property({ attribute: false }) public route!: Route;\n\n  @state() public _error?: TemplateResult | string;\n\n  connectedCallback() {\n    super.connectedCallback();\n    const path = this.route.path.substr(1);\n    const redirect = REDIRECTS[path];\n\n    if (!redirect) {\n      this._error = this.supervisor.localize(\"my.not_supported\", {\n        link: html`<a\n          target=\"_blank\"\n          rel=\"noreferrer noopener\"\n          href=\"https://my.home-assistant.io/faq.html#supported-pages\"\n        >\n          ${this.supervisor.localize(\"my.faq_link\")}\n        </a>`,\n      });\n      return;\n    }\n\n    let url: string;\n    try {\n      url = this._createRedirectUrl(redirect);\n    } catch (err: any) {\n      this._error = this.supervisor.localize(\"my.error\");\n      return;\n    }\n\n    navigate(url, { replace: true });\n  }\n\n  protected render() {\n    if (this._error) {\n      return html`<hass-error-screen\n        .error=${this._error}\n      ></hass-error-screen>`;\n    }\n    return nothing;\n  }\n\n  private _createRedirectUrl(redirect: Redirect): string {\n    const params = this._createRedirectParams(redirect);\n    return `${redirect.redirect}${params}`;\n  }\n\n  private _createRedirectParams(redirect: Redirect): string {\n    const params = extractSearchParamsObject();\n    if (!redirect.params && !Object.keys(params).length) {\n      return \"\";\n    }\n    const resultParams = {};\n    Object.entries(redirect.params || {}).forEach(([key, type]) => {\n      if (!params[key] || !this._checkParamType(type, params[key])) {\n        throw Error();\n      }\n      resultParams[key] = params[key];\n    });\n    Object.entries(redirect.optional_params || {}).forEach(([key, type]) => {\n      if (params[key]) {\n        if (!this._checkParamType(type, params[key])) {\n          throw Error();\n        }\n        resultParams[key] = params[key];\n      }\n    });\n    return `?${createSearchParam(resultParams)}`;\n  }\n\n  private _checkParamType(type: ParamType, value: string) {\n    if (type === \"string\") {\n      return true;\n    }\n    if (type === \"url\") {\n      return value && value === sanitizeUrl(value);\n    }\n    return false;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hassio-my-redirect\": HassioMyRedirect;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}