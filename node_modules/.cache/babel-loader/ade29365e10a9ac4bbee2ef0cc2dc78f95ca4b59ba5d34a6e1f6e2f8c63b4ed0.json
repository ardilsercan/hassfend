{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport { css, html, LitElement } from \"lit\";\nimport { customElement } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nexport let HaMoreInfoControlSelectContainer = _decorate([customElement(\"ha-more-info-control-select-container\")], function (_initialize, _LitElement) {\n  class HaMoreInfoControlSelectContainer extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaMoreInfoControlSelectContainer,\n    d: [{\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        const classname = `items-${this.childElementCount}`;\n        return html`\n      <div class=\"controls\">\n        <div\n          class=\"controls-scroll ${classMap({\n          [classname]: true,\n          multiline: this.childElementCount >= 4\n        })}\"\n        >\n          <slot></slot>\n        </div>\n      </div>\n    `;\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css`\n      .controls {\n        display: flex;\n        flex-direction: row;\n        justify-content: center;\n      }\n      .controls-scroll {\n        display: flex;\n        flex-direction: row;\n        justify-content: flex-start;\n        gap: 12px;\n        margin: auto;\n        overflow: auto;\n        -ms-overflow-style: none; /* IE and Edge */\n        scrollbar-width: none; /* Firefox */\n        margin: 0 -24px;\n        padding: 0 24px;\n      }\n      .controls-scroll::-webkit-scrollbar {\n        display: none;\n      }\n\n      ::slotted(*) {\n        min-width: 120px;\n        max-width: 160px;\n        flex: none;\n      }\n\n      @media all and (hover: hover),\n        all and (min-width: 600px) and (min-height: 501px) {\n        .controls-scroll {\n          justify-content: center;\n          flex-wrap: wrap;\n          width: 100%;\n          max-width: 450px;\n        }\n        .controls-scroll.items-4 {\n          max-width: 300px;\n        }\n        .controls-scroll.items-3 ::slotted(*) {\n          max-width: 140px;\n        }\n        .multiline ::slotted(*) {\n          width: 140px;\n        }\n      }\n    `;\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","customElement","classMap","HaMoreInfoControlSelectContainer","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","key","value","render","classname","childElementCount","multiline","static","styles"],"sources":["/workspaces/frontend/src/dialogs/more-info/components/ha-more-info-control-select-container.ts"],"sourcesContent":["import { css, CSSResultGroup, html, LitElement, TemplateResult } from \"lit\";\nimport { customElement } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\n\n@customElement(\"ha-more-info-control-select-container\")\nexport class HaMoreInfoControlSelectContainer extends LitElement {\n  protected render(): TemplateResult {\n    const classname = `items-${this.childElementCount}`;\n\n    return html`\n      <div class=\"controls\">\n        <div\n          class=\"controls-scroll ${classMap({\n            [classname]: true,\n            multiline: this.childElementCount >= 4,\n          })}\"\n        >\n          <slot></slot>\n        </div>\n      </div>\n    `;\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      .controls {\n        display: flex;\n        flex-direction: row;\n        justify-content: center;\n      }\n      .controls-scroll {\n        display: flex;\n        flex-direction: row;\n        justify-content: flex-start;\n        gap: 12px;\n        margin: auto;\n        overflow: auto;\n        -ms-overflow-style: none; /* IE and Edge */\n        scrollbar-width: none; /* Firefox */\n        margin: 0 -24px;\n        padding: 0 24px;\n      }\n      .controls-scroll::-webkit-scrollbar {\n        display: none;\n      }\n\n      ::slotted(*) {\n        min-width: 120px;\n        max-width: 160px;\n        flex: none;\n      }\n\n      @media all and (hover: hover),\n        all and (min-width: 600px) and (min-height: 501px) {\n        .controls-scroll {\n          justify-content: center;\n          flex-wrap: wrap;\n          width: 100%;\n          max-width: 450px;\n        }\n        .controls-scroll.items-4 {\n          max-width: 300px;\n        }\n        .controls-scroll.items-3 ::slotted(*) {\n          max-width: 140px;\n        }\n        .multiline ::slotted(*) {\n          width: 140px;\n        }\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-more-info-control-select-container\": HaMoreInfoControlSelectContainer;\n  }\n}\n"],"mappings":";AAAA,SAASA,GAAG,EAAkBC,IAAI,EAAEC,UAAU,QAAwB,KAAK;AAC3E,SAASC,aAAa,QAAQ,gBAAgB;AAC9C,SAASC,QAAQ,QAAQ,0BAA0B;AAEnD,WACaC,gCAAgC,GAAAC,SAAA,EAD5CH,aAAa,CAAC,uCAAuC,CAAC,aAAAI,WAAA,EAAAC,WAAA;EAAvD,MACaH,gCAAgC,SAAAG,WAAA,CAAoB;IAAAC,YAAA,GAAAC,IAAA;MAAA,SAAAA,IAAA;MAAAH,WAAA;IAAA;EAmEjE;EAAC;IAAAI,CAAA,EAnEYN,gCAAgC;IAAAO,CAAA;MAAAC,IAAA;MAAAC,GAAA;MAAAC,KAAA,EAC3C,SAAAC,OAAA,EAAmC;QACjC,MAAMC,SAAS,GAAI,SAAQ,IAAI,CAACC,iBAAkB,EAAC;QAEnD,OAAOjB,IAAK;AAChB;AACA;AACA,mCAAmCG,QAAQ,CAAC;UAChC,CAACa,SAAS,GAAG,IAAI;UACjBE,SAAS,EAAE,IAAI,CAACD,iBAAiB,IAAI;QACvC,CAAC,CAAE;AACb;AACA;AACA;AACA;AACA,KAAK;MACH;IAAC;MAAAL,IAAA;MAAAO,MAAA;MAAAN,GAAA;MAAAC,KAAA,EAED,SAAAM,OAAA,EAAoC;QAClC,OAAOrB,GAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;MACH;IAAC;EAAA;AAAA,GAlEmDE,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}