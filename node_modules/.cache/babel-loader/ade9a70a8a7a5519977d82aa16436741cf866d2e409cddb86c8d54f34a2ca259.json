{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nconst mdiInformation = \"M13,9H11V7H13M13,17H11V11H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z\";\nimport \"@lrnwebcomponents/simple-tooltip/simple-tooltip\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { formatNumber } from \"../../../../common/number/format_number\";\nimport \"../../../../components/ha-card\";\nimport \"../../../../components/ha-gauge\";\nimport \"../../../../components/ha-svg-icon\";\nimport { getEnergyDataCollection } from \"../../../../data/energy\";\nimport { calculateStatisticsSumGrowth } from \"../../../../data/recorder\";\nimport { SubscribeMixin } from \"../../../../mixins/subscribe-mixin\";\nimport { hasConfigChanged } from \"../../common/has-changed\";\nconst LEVELS = [{\n  level: -1,\n  stroke: \"var(--energy-grid-consumption-color)\"\n}, {\n  level: 0,\n  stroke: \"var(--energy-grid-return-color)\"\n}];\nlet HuiEnergyGridGaugeCard = _decorate([customElement(\"hui-energy-grid-neutrality-gauge-card\")], function (_initialize, _SubscribeMixin) {\n  class HuiEnergyGridGaugeCard extends _SubscribeMixin {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HuiEnergyGridGaugeCard,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_config\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_data\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"hassSubscribeRequiredHostProps\",\n      value() {\n        return [\"_config\"];\n      }\n    }, {\n      kind: \"method\",\n      key: \"hassSubscribe\",\n      value: function hassSubscribe() {\n        var _this$_config;\n        return [getEnergyDataCollection(this.hass, {\n          key: (_this$_config = this._config) === null || _this$_config === void 0 ? void 0 : _this$_config.collection_key\n        }).subscribe(data => {\n          this._data = data;\n        })];\n      }\n    }, {\n      kind: \"method\",\n      key: \"getCardSize\",\n      value: function getCardSize() {\n        return 4;\n      }\n    }, {\n      kind: \"method\",\n      key: \"setConfig\",\n      value: function setConfig(config) {\n        this._config = config;\n      }\n    }, {\n      kind: \"method\",\n      key: \"shouldUpdate\",\n      value: function shouldUpdate(changedProps) {\n        return hasConfigChanged(this, changedProps) || changedProps.size > 1 || !changedProps.has(\"hass\");\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this._config || !this.hass) {\n          return nothing;\n        }\n        if (!this._data) {\n          return html`${this.hass.localize(\"ui.panel.lovelace.cards.energy.loading\")}`;\n        }\n        const prefs = this._data.prefs;\n        const gridSource = prefs.energy_sources.find(src => src.type === \"grid\");\n        let value;\n        if (!gridSource) {\n          return nothing;\n        }\n        const consumedFromGrid = calculateStatisticsSumGrowth(this._data.stats, gridSource.flow_from.map(flow => flow.stat_energy_from));\n        const returnedToGrid = calculateStatisticsSumGrowth(this._data.stats, gridSource.flow_to.map(flow => flow.stat_energy_to));\n        if (consumedFromGrid !== null && returnedToGrid !== null) {\n          if (returnedToGrid > consumedFromGrid) {\n            value = 1 - consumedFromGrid / returnedToGrid;\n          } else if (returnedToGrid < consumedFromGrid) {\n            value = (1 - returnedToGrid / consumedFromGrid) * -1;\n          } else {\n            value = 0;\n          }\n        }\n        return html`\n      <ha-card>\n        ${value !== undefined ? html`\n              <ha-svg-icon id=\"info\" .path=${mdiInformation}></ha-svg-icon>\n              <simple-tooltip animation-delay=\"0\" for=\"info\" position=\"left\">\n                <span>\n                  ${this.hass.localize(\"ui.panel.lovelace.cards.energy.grid_neutrality_gauge.energy_dependency\")}\n                  <br /><br />\n                  ${this.hass.localize(\"ui.panel.lovelace.cards.energy.grid_neutrality_gauge.color_explain\")}\n                </span>\n              </simple-tooltip>\n\n              <ha-gauge\n                min=\"-1\"\n                max=\"1\"\n                .value=${value}\n                .valueText=${formatNumber(Math.abs(returnedToGrid - consumedFromGrid), this.hass.locale, {\n          maximumFractionDigits: 2\n        })}\n                .locale=${this.hass.locale}\n                .levels=${LEVELS}\n                label=\"kWh\"\n                needle\n              ></ha-gauge>\n              <div class=\"name\">\n                ${returnedToGrid >= consumedFromGrid ? this.hass.localize(\"ui.panel.lovelace.cards.energy.grid_neutrality_gauge.net_returned_grid\") : this.hass.localize(\"ui.panel.lovelace.cards.energy.grid_neutrality_gauge.net_consumed_grid\")}\n              </div>\n            ` : this.hass.localize(\"ui.panel.lovelace.cards.energy.grid_neutrality_gauge.grid_neutrality_not_calculated\")}\n      </ha-card>\n    `;\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css`\n      ha-card {\n        height: 100%;\n        overflow: hidden;\n        padding: 16px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        flex-direction: column;\n        box-sizing: border-box;\n      }\n\n      ha-gauge {\n        width: 100%;\n        max-width: 250px;\n        direction: ltr;\n      }\n\n      .name {\n        text-align: center;\n        line-height: initial;\n        color: var(--primary-text-color);\n        width: 100%;\n        font-size: 15px;\n        margin-top: 8px;\n      }\n\n      ha-svg-icon {\n        position: absolute;\n        right: 4px;\n        inset-inline-end: 4px;\n        inset-inline-start: initial;\n        top: 4px;\n        color: var(--secondary-text-color);\n      }\n      simple-tooltip > span {\n        font-size: 12px;\n        line-height: 12px;\n      }\n      simple-tooltip {\n        width: 80%;\n        max-width: 250px;\n        top: 8px !important;\n      }\n    `;\n      }\n    }]\n  };\n}, SubscribeMixin(LitElement));","map":{"version":3,"names":["css","html","LitElement","nothing","customElement","property","state","formatNumber","getEnergyDataCollection","calculateStatisticsSumGrowth","SubscribeMixin","hasConfigChanged","LEVELS","level","stroke","HuiEnergyGridGaugeCard","_decorate","_initialize","_SubscribeMixin","constructor","args","F","d","kind","decorators","attribute","key","value","hassSubscribe","_this$_config","hass","_config","collection_key","subscribe","data","_data","getCardSize","setConfig","config","shouldUpdate","changedProps","size","has","render","localize","prefs","gridSource","energy_sources","find","src","type","consumedFromGrid","stats","flow_from","map","flow","stat_energy_from","returnedToGrid","flow_to","stat_energy_to","undefined","mdiInformation","Math","abs","locale","maximumFractionDigits","static","styles"],"sources":["/Users/sercanardil/Desktop/frontend/src/panels/lovelace/cards/energy/hui-energy-grid-neutrality-gauge-card.ts"],"sourcesContent":["import { mdiInformation } from \"@mdi/js\";\nimport \"@lrnwebcomponents/simple-tooltip/simple-tooltip\";\nimport { UnsubscribeFunc } from \"home-assistant-js-websocket\";\nimport {\n  css,\n  CSSResultGroup,\n  html,\n  LitElement,\n  nothing,\n  PropertyValues,\n} from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { formatNumber } from \"../../../../common/number/format_number\";\nimport \"../../../../components/ha-card\";\nimport \"../../../../components/ha-gauge\";\nimport type { LevelDefinition } from \"../../../../components/ha-gauge\";\nimport \"../../../../components/ha-svg-icon\";\nimport {\n  EnergyData,\n  getEnergyDataCollection,\n  GridSourceTypeEnergyPreference,\n} from \"../../../../data/energy\";\nimport { calculateStatisticsSumGrowth } from \"../../../../data/recorder\";\nimport { SubscribeMixin } from \"../../../../mixins/subscribe-mixin\";\nimport type { HomeAssistant } from \"../../../../types\";\nimport type { LovelaceCard } from \"../../types\";\nimport type { EnergyGridGaugeCardConfig } from \"../types\";\nimport { hasConfigChanged } from \"../../common/has-changed\";\n\nconst LEVELS: LevelDefinition[] = [\n  { level: -1, stroke: \"var(--energy-grid-consumption-color)\" },\n  { level: 0, stroke: \"var(--energy-grid-return-color)\" },\n];\n\n@customElement(\"hui-energy-grid-neutrality-gauge-card\")\nclass HuiEnergyGridGaugeCard\n  extends SubscribeMixin(LitElement)\n  implements LovelaceCard\n{\n  @property({ attribute: false }) public hass?: HomeAssistant;\n\n  @state() private _config?: EnergyGridGaugeCardConfig;\n\n  @state() private _data?: EnergyData;\n\n  protected hassSubscribeRequiredHostProps = [\"_config\"];\n\n  public hassSubscribe(): UnsubscribeFunc[] {\n    return [\n      getEnergyDataCollection(this.hass!, {\n        key: this._config?.collection_key,\n      }).subscribe((data) => {\n        this._data = data;\n      }),\n    ];\n  }\n\n  public getCardSize(): number {\n    return 4;\n  }\n\n  public setConfig(config: EnergyGridGaugeCardConfig): void {\n    this._config = config;\n  }\n\n  protected shouldUpdate(changedProps: PropertyValues): boolean {\n    return (\n      hasConfigChanged(this, changedProps) ||\n      changedProps.size > 1 ||\n      !changedProps.has(\"hass\")\n    );\n  }\n\n  protected render() {\n    if (!this._config || !this.hass) {\n      return nothing;\n    }\n\n    if (!this._data) {\n      return html`${this.hass.localize(\n        \"ui.panel.lovelace.cards.energy.loading\"\n      )}`;\n    }\n\n    const prefs = this._data.prefs;\n    const gridSource = prefs.energy_sources.find(\n      (src) => src.type === \"grid\"\n    ) as GridSourceTypeEnergyPreference | undefined;\n\n    let value: number | undefined;\n\n    if (!gridSource) {\n      return nothing;\n    }\n\n    const consumedFromGrid = calculateStatisticsSumGrowth(\n      this._data.stats,\n      gridSource.flow_from.map((flow) => flow.stat_energy_from)\n    );\n\n    const returnedToGrid = calculateStatisticsSumGrowth(\n      this._data.stats,\n      gridSource.flow_to.map((flow) => flow.stat_energy_to)\n    );\n\n    if (consumedFromGrid !== null && returnedToGrid !== null) {\n      if (returnedToGrid > consumedFromGrid) {\n        value = 1 - consumedFromGrid / returnedToGrid;\n      } else if (returnedToGrid < consumedFromGrid) {\n        value = (1 - returnedToGrid / consumedFromGrid) * -1;\n      } else {\n        value = 0;\n      }\n    }\n\n    return html`\n      <ha-card>\n        ${value !== undefined\n          ? html`\n              <ha-svg-icon id=\"info\" .path=${mdiInformation}></ha-svg-icon>\n              <simple-tooltip animation-delay=\"0\" for=\"info\" position=\"left\">\n                <span>\n                  ${this.hass.localize(\n                    \"ui.panel.lovelace.cards.energy.grid_neutrality_gauge.energy_dependency\"\n                  )}\n                  <br /><br />\n                  ${this.hass.localize(\n                    \"ui.panel.lovelace.cards.energy.grid_neutrality_gauge.color_explain\"\n                  )}\n                </span>\n              </simple-tooltip>\n\n              <ha-gauge\n                min=\"-1\"\n                max=\"1\"\n                .value=${value}\n                .valueText=${formatNumber(\n                  Math.abs(returnedToGrid! - consumedFromGrid!),\n                  this.hass.locale,\n                  { maximumFractionDigits: 2 }\n                )}\n                .locale=${this.hass!.locale}\n                .levels=${LEVELS}\n                label=\"kWh\"\n                needle\n              ></ha-gauge>\n              <div class=\"name\">\n                ${returnedToGrid! >= consumedFromGrid!\n                  ? this.hass.localize(\n                      \"ui.panel.lovelace.cards.energy.grid_neutrality_gauge.net_returned_grid\"\n                    )\n                  : this.hass.localize(\n                      \"ui.panel.lovelace.cards.energy.grid_neutrality_gauge.net_consumed_grid\"\n                    )}\n              </div>\n            `\n          : this.hass.localize(\n              \"ui.panel.lovelace.cards.energy.grid_neutrality_gauge.grid_neutrality_not_calculated\"\n            )}\n      </ha-card>\n    `;\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      ha-card {\n        height: 100%;\n        overflow: hidden;\n        padding: 16px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        flex-direction: column;\n        box-sizing: border-box;\n      }\n\n      ha-gauge {\n        width: 100%;\n        max-width: 250px;\n        direction: ltr;\n      }\n\n      .name {\n        text-align: center;\n        line-height: initial;\n        color: var(--primary-text-color);\n        width: 100%;\n        font-size: 15px;\n        margin-top: 8px;\n      }\n\n      ha-svg-icon {\n        position: absolute;\n        right: 4px;\n        inset-inline-end: 4px;\n        inset-inline-start: initial;\n        top: 4px;\n        color: var(--secondary-text-color);\n      }\n      simple-tooltip > span {\n        font-size: 12px;\n        line-height: 12px;\n      }\n      simple-tooltip {\n        width: 80%;\n        max-width: 250px;\n        top: 8px !important;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-energy-grid-neutrality-gauge-card\": HuiEnergyGridGaugeCard;\n  }\n}\n"],"mappings":";;AACA,OAAO,iDAAiD;AAExD,SACEA,GAAG,EAEHC,IAAI,EACJC,UAAU,EACVC,OAAO,QAEF,KAAK;AACZ,SAASC,aAAa,EAAEC,QAAQ,EAAEC,KAAK,QAAQ,gBAAgB;AAC/D,SAASC,YAAY,QAAQ,yCAAyC;AACtE,OAAO,gCAAgC;AACvC,OAAO,iCAAiC;AAExC,OAAO,oCAAoC;AAC3C,SAEEC,uBAAuB,QAElB,yBAAyB;AAChC,SAASC,4BAA4B,QAAQ,2BAA2B;AACxE,SAASC,cAAc,QAAQ,oCAAoC;AAInE,SAASC,gBAAgB,QAAQ,0BAA0B;AAE3D,MAAMC,MAAyB,GAAG,CAChC;EAAEC,KAAK,EAAE,CAAC,CAAC;EAAEC,MAAM,EAAE;AAAuC,CAAC,EAC7D;EAAED,KAAK,EAAE,CAAC;EAAEC,MAAM,EAAE;AAAkC,CAAC,CACxD;AAAC,IAGIC,sBAAsB,GAAAC,SAAA,EAD3BZ,aAAa,CAAC,uCAAuC,CAAC,aAAAa,WAAA,EAAAC,eAAA;EAAvD,MACMH,sBAAsB,SAAAG,eAAA,CAG5B;IAAAC,YAAA,GAAAC,IAAA;MAAA,SAAAA,IAAA;MAAAH,WAAA;IAAA;EA4KA;EAAC;IAAAI,CAAA,EA/KKN,sBAAsB;IAAAO,CAAA;MAAAC,IAAA;MAAAC,UAAA,GAIzBnB,QAAQ,CAAC;QAAEoB,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAC,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAE9BlB,KAAK,CAAC,CAAC;MAAAoB,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAEPlB,KAAK,CAAC,CAAC;MAAAoB,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAG,GAAA;MAAAC,MAAA;QAAA,OAEmC,CAAC,SAAS,CAAC;MAAA;IAAA;MAAAJ,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAEtD,SAAAC,cAAA,EAA0C;QAAA,IAAAC,aAAA;QACxC,OAAO,CACLrB,uBAAuB,CAAC,IAAI,CAACsB,IAAI,EAAG;UAClCJ,GAAG,GAAAG,aAAA,GAAE,IAAI,CAACE,OAAO,cAAAF,aAAA,uBAAZA,aAAA,CAAcG;QACrB,CAAC,CAAC,CAACC,SAAS,CAAEC,IAAI,IAAK;UACrB,IAAI,CAACC,KAAK,GAAGD,IAAI;QACnB,CAAC,CAAC,CACH;MACH;IAAC;MAAAX,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAS,YAAA,EAA6B;QAC3B,OAAO,CAAC;MACV;IAAC;MAAAb,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAU,UAAiBC,MAAiC,EAAQ;QACxD,IAAI,CAACP,OAAO,GAAGO,MAAM;MACvB;IAAC;MAAAf,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAY,aAAuBC,YAA4B,EAAW;QAC5D,OACE7B,gBAAgB,CAAC,IAAI,EAAE6B,YAAY,CAAC,IACpCA,YAAY,CAACC,IAAI,GAAG,CAAC,IACrB,CAACD,YAAY,CAACE,GAAG,CAAC,MAAM,CAAC;MAE7B;IAAC;MAAAnB,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAgB,OAAA,EAAmB;QACjB,IAAI,CAAC,IAAI,CAACZ,OAAO,IAAI,CAAC,IAAI,CAACD,IAAI,EAAE;UAC/B,OAAO3B,OAAO;QAChB;QAEA,IAAI,CAAC,IAAI,CAACgC,KAAK,EAAE;UACf,OAAOlC,IAAK,GAAE,IAAI,CAAC6B,IAAI,CAACc,QAAQ,CAC9B,wCACF,CAAE,EAAC;QACL;QAEA,MAAMC,KAAK,GAAG,IAAI,CAACV,KAAK,CAACU,KAAK;QAC9B,MAAMC,UAAU,GAAGD,KAAK,CAACE,cAAc,CAACC,IAAI,CACzCC,GAAG,IAAKA,GAAG,CAACC,IAAI,KAAK,MACxB,CAA+C;QAE/C,IAAIvB,KAAyB;QAE7B,IAAI,CAACmB,UAAU,EAAE;UACf,OAAO3C,OAAO;QAChB;QAEA,MAAMgD,gBAAgB,GAAG1C,4BAA4B,CACnD,IAAI,CAAC0B,KAAK,CAACiB,KAAK,EAChBN,UAAU,CAACO,SAAS,CAACC,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,gBAAgB,CAC1D,CAAC;QAED,MAAMC,cAAc,GAAGhD,4BAA4B,CACjD,IAAI,CAAC0B,KAAK,CAACiB,KAAK,EAChBN,UAAU,CAACY,OAAO,CAACJ,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACI,cAAc,CACtD,CAAC;QAED,IAAIR,gBAAgB,KAAK,IAAI,IAAIM,cAAc,KAAK,IAAI,EAAE;UACxD,IAAIA,cAAc,GAAGN,gBAAgB,EAAE;YACrCxB,KAAK,GAAG,CAAC,GAAGwB,gBAAgB,GAAGM,cAAc;UAC/C,CAAC,MAAM,IAAIA,cAAc,GAAGN,gBAAgB,EAAE;YAC5CxB,KAAK,GAAG,CAAC,CAAC,GAAG8B,cAAc,GAAGN,gBAAgB,IAAI,CAAC,CAAC;UACtD,CAAC,MAAM;YACLxB,KAAK,GAAG,CAAC;UACX;QACF;QAEA,OAAO1B,IAAK;AAChB;AACA,UAAU0B,KAAK,KAAKiC,SAAS,GACjB3D,IAAK;AACjB,6CAA6C4D,cAAe;AAC5D;AACA;AACA,oBAAoB,IAAI,CAAC/B,IAAI,CAACc,QAAQ,CAClB,wEACF,CAAE;AACpB;AACA,oBAAoB,IAAI,CAACd,IAAI,CAACc,QAAQ,CAClB,oEACF,CAAE;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyBjB,KAAM;AAC/B,6BAA6BpB,YAAY,CACvBuD,IAAI,CAACC,GAAG,CAACN,cAAc,GAAIN,gBAAiB,CAAC,EAC7C,IAAI,CAACrB,IAAI,CAACkC,MAAM,EAChB;UAAEC,qBAAqB,EAAE;QAAE,CAC7B,CAAE;AAClB,0BAA0B,IAAI,CAACnC,IAAI,CAAEkC,MAAO;AAC5C,0BAA0BpD,MAAO;AACjC;AACA;AACA;AACA;AACA,kBAAkB6C,cAAc,IAAKN,gBAAiB,GAClC,IAAI,CAACrB,IAAI,CAACc,QAAQ,CAChB,wEACF,CAAC,GACD,IAAI,CAACd,IAAI,CAACc,QAAQ,CAChB,wEACF,CAAE;AACtB;AACA,aAAa,GACD,IAAI,CAACd,IAAI,CAACc,QAAQ,CAChB,qFACF,CAAE;AACd;AACA,KAAK;MACH;IAAC;MAAArB,IAAA;MAAA2C,MAAA;MAAAxC,GAAA;MAAAC,KAAA,EAED,SAAAwC,OAAA,EAAoC;QAClC,OAAOnE,GAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;MACH;IAAC;EAAA;AAAA,GA7KOU,cAAc,CAACR,UAAU,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}