{"ast":null,"code":"import { stateActive } from \"../common/entity/state_active\";\nimport { supportsFeature } from \"../common/entity/supports-feature\";\nimport { UNAVAILABLE } from \"./entity\";\nexport let CoverEntityFeature = /*#__PURE__*/function (CoverEntityFeature) {\n  CoverEntityFeature[CoverEntityFeature[\"OPEN\"] = 1] = \"OPEN\";\n  CoverEntityFeature[CoverEntityFeature[\"CLOSE\"] = 2] = \"CLOSE\";\n  CoverEntityFeature[CoverEntityFeature[\"SET_POSITION\"] = 4] = \"SET_POSITION\";\n  CoverEntityFeature[CoverEntityFeature[\"STOP\"] = 8] = \"STOP\";\n  CoverEntityFeature[CoverEntityFeature[\"OPEN_TILT\"] = 16] = \"OPEN_TILT\";\n  CoverEntityFeature[CoverEntityFeature[\"CLOSE_TILT\"] = 32] = \"CLOSE_TILT\";\n  CoverEntityFeature[CoverEntityFeature[\"STOP_TILT\"] = 64] = \"STOP_TILT\";\n  CoverEntityFeature[CoverEntityFeature[\"SET_TILT_POSITION\"] = 128] = \"SET_TILT_POSITION\";\n  return CoverEntityFeature;\n}({});\nexport function isFullyOpen(stateObj) {\n  if (stateObj.attributes.current_position !== undefined) {\n    return stateObj.attributes.current_position === 100;\n  }\n  return stateObj.state === \"open\";\n}\nexport function isFullyClosed(stateObj) {\n  if (stateObj.attributes.current_position !== undefined) {\n    return stateObj.attributes.current_position === 0;\n  }\n  return stateObj.state === \"closed\";\n}\nexport function isFullyOpenTilt(stateObj) {\n  return stateObj.attributes.current_tilt_position === 100;\n}\nexport function isFullyClosedTilt(stateObj) {\n  return stateObj.attributes.current_tilt_position === 0;\n}\nexport function isOpening(stateObj) {\n  return stateObj.state === \"opening\";\n}\nexport function isClosing(stateObj) {\n  return stateObj.state === \"closing\";\n}\nexport function isTiltOnly(stateObj) {\n  const supportsCover = supportsFeature(stateObj, CoverEntityFeature.OPEN) || supportsFeature(stateObj, CoverEntityFeature.CLOSE) || supportsFeature(stateObj, CoverEntityFeature.STOP);\n  const supportsTilt = supportsFeature(stateObj, CoverEntityFeature.OPEN_TILT) || supportsFeature(stateObj, CoverEntityFeature.CLOSE_TILT) || supportsFeature(stateObj, CoverEntityFeature.STOP_TILT);\n  return supportsTilt && !supportsCover;\n}\nexport function canOpen(stateObj) {\n  if (stateObj.state === UNAVAILABLE) {\n    return false;\n  }\n  const assumedState = stateObj.attributes.assumed_state === true;\n  return assumedState || !isFullyOpen(stateObj) && !isOpening(stateObj);\n}\nexport function canClose(stateObj) {\n  if (stateObj.state === UNAVAILABLE) {\n    return false;\n  }\n  const assumedState = stateObj.attributes.assumed_state === true;\n  return assumedState || !isFullyClosed(stateObj) && !isClosing(stateObj);\n}\nexport function canStop(stateObj) {\n  return stateObj.state !== UNAVAILABLE;\n}\nexport function canOpenTilt(stateObj) {\n  if (stateObj.state === UNAVAILABLE) {\n    return false;\n  }\n  const assumedState = stateObj.attributes.assumed_state === true;\n  return assumedState || !isFullyOpenTilt(stateObj);\n}\nexport function canCloseTilt(stateObj) {\n  if (stateObj.state === UNAVAILABLE) {\n    return false;\n  }\n  const assumedState = stateObj.attributes.assumed_state === true;\n  return assumedState || !isFullyClosedTilt(stateObj);\n}\nexport function canStopTilt(stateObj) {\n  return stateObj.state !== UNAVAILABLE;\n}\nexport function computeCoverPositionStateDisplay(stateObj, hass, position) {\n  var _stateObj$attributes$;\n  const statePosition = stateActive(stateObj) ? (_stateObj$attributes$ = stateObj.attributes.current_position) !== null && _stateObj$attributes$ !== void 0 ? _stateObj$attributes$ : stateObj.attributes.current_tilt_position : undefined;\n  const currentPosition = position !== null && position !== void 0 ? position : statePosition;\n  return currentPosition && currentPosition !== 100 ? hass.formatEntityAttributeValue(stateObj,\n  // Always use position as it's the same formatting as tilt position\n  \"current_position\", Math.round(currentPosition)) : \"\";\n}","map":{"version":3,"names":["stateActive","supportsFeature","UNAVAILABLE","CoverEntityFeature","isFullyOpen","stateObj","attributes","current_position","undefined","state","isFullyClosed","isFullyOpenTilt","current_tilt_position","isFullyClosedTilt","isOpening","isClosing","isTiltOnly","supportsCover","OPEN","CLOSE","STOP","supportsTilt","OPEN_TILT","CLOSE_TILT","STOP_TILT","canOpen","assumedState","assumed_state","canClose","canStop","canOpenTilt","canCloseTilt","canStopTilt","computeCoverPositionStateDisplay","hass","position","_stateObj$attributes$","statePosition","currentPosition","formatEntityAttributeValue","Math","round"],"sources":["/Users/sercanardil/Desktop/frontend/src/data/cover.ts"],"sourcesContent":["import {\n  HassEntityAttributeBase,\n  HassEntityBase,\n} from \"home-assistant-js-websocket\";\nimport { stateActive } from \"../common/entity/state_active\";\nimport { supportsFeature } from \"../common/entity/supports-feature\";\nimport type { HomeAssistant } from \"../types\";\nimport { UNAVAILABLE } from \"./entity\";\n\nexport const enum CoverEntityFeature {\n  OPEN = 1,\n  CLOSE = 2,\n  SET_POSITION = 4,\n  STOP = 8,\n  OPEN_TILT = 16,\n  CLOSE_TILT = 32,\n  STOP_TILT = 64,\n  SET_TILT_POSITION = 128,\n}\n\nexport function isFullyOpen(stateObj: CoverEntity) {\n  if (stateObj.attributes.current_position !== undefined) {\n    return stateObj.attributes.current_position === 100;\n  }\n  return stateObj.state === \"open\";\n}\n\nexport function isFullyClosed(stateObj: CoverEntity) {\n  if (stateObj.attributes.current_position !== undefined) {\n    return stateObj.attributes.current_position === 0;\n  }\n  return stateObj.state === \"closed\";\n}\n\nexport function isFullyOpenTilt(stateObj: CoverEntity) {\n  return stateObj.attributes.current_tilt_position === 100;\n}\n\nexport function isFullyClosedTilt(stateObj: CoverEntity) {\n  return stateObj.attributes.current_tilt_position === 0;\n}\n\nexport function isOpening(stateObj: CoverEntity) {\n  return stateObj.state === \"opening\";\n}\n\nexport function isClosing(stateObj: CoverEntity) {\n  return stateObj.state === \"closing\";\n}\n\nexport function isTiltOnly(stateObj: CoverEntity) {\n  const supportsCover =\n    supportsFeature(stateObj, CoverEntityFeature.OPEN) ||\n    supportsFeature(stateObj, CoverEntityFeature.CLOSE) ||\n    supportsFeature(stateObj, CoverEntityFeature.STOP);\n  const supportsTilt =\n    supportsFeature(stateObj, CoverEntityFeature.OPEN_TILT) ||\n    supportsFeature(stateObj, CoverEntityFeature.CLOSE_TILT) ||\n    supportsFeature(stateObj, CoverEntityFeature.STOP_TILT);\n  return supportsTilt && !supportsCover;\n}\n\nexport function canOpen(stateObj: CoverEntity) {\n  if (stateObj.state === UNAVAILABLE) {\n    return false;\n  }\n  const assumedState = stateObj.attributes.assumed_state === true;\n  return assumedState || (!isFullyOpen(stateObj) && !isOpening(stateObj));\n}\n\nexport function canClose(stateObj: CoverEntity): boolean {\n  if (stateObj.state === UNAVAILABLE) {\n    return false;\n  }\n  const assumedState = stateObj.attributes.assumed_state === true;\n  return assumedState || (!isFullyClosed(stateObj) && !isClosing(stateObj));\n}\n\nexport function canStop(stateObj: CoverEntity): boolean {\n  return stateObj.state !== UNAVAILABLE;\n}\n\nexport function canOpenTilt(stateObj: CoverEntity): boolean {\n  if (stateObj.state === UNAVAILABLE) {\n    return false;\n  }\n  const assumedState = stateObj.attributes.assumed_state === true;\n  return assumedState || !isFullyOpenTilt(stateObj);\n}\n\nexport function canCloseTilt(stateObj: CoverEntity): boolean {\n  if (stateObj.state === UNAVAILABLE) {\n    return false;\n  }\n  const assumedState = stateObj.attributes.assumed_state === true;\n  return assumedState || !isFullyClosedTilt(stateObj);\n}\n\nexport function canStopTilt(stateObj: CoverEntity): boolean {\n  return stateObj.state !== UNAVAILABLE;\n}\n\ninterface CoverEntityAttributes extends HassEntityAttributeBase {\n  current_position?: number;\n  current_tilt_position?: number;\n}\n\nexport interface CoverEntity extends HassEntityBase {\n  attributes: CoverEntityAttributes;\n}\n\nexport function computeCoverPositionStateDisplay(\n  stateObj: CoverEntity,\n  hass: HomeAssistant,\n  position?: number\n) {\n  const statePosition = stateActive(stateObj)\n    ? stateObj.attributes.current_position ??\n      stateObj.attributes.current_tilt_position\n    : undefined;\n\n  const currentPosition = position ?? statePosition;\n\n  return currentPosition && currentPosition !== 100\n    ? hass.formatEntityAttributeValue(\n        stateObj,\n        // Always use position as it's the same formatting as tilt position\n        \"current_position\",\n        Math.round(currentPosition)\n      )\n    : \"\";\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}