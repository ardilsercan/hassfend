{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nconst mdiCloudLock = \"M14.2 14.5V14.74C13.5 15.34 13 16.24 13 17.2V20H6.5C5 20 3.69 19.5 2.61 18.43C1.54 17.38 1 16.09 1 14.58C1 13.28 1.39 12.12 2.17 11.1S4 9.43 5.25 9.15C5.67 7.62 6.5 6.38 7.75 5.43S10.42 4 12 4C13.95 4 15.6 4.68 16.96 6.04C18.08 7.16 18.73 8.5 18.93 10C16.36 10.04 14.2 12.08 14.2 14.5M23 17.3V20.8C23 21.4 22.4 22 21.7 22H16.2C15.6 22 15 21.4 15 20.7V17.2C15 16.6 15.6 16 16.2 16V14.5C16.2 13.1 17.6 12 19 12S21.8 13.1 21.8 14.5V16C22.4 16 23 16.6 23 17.3M20.5 14.5C20.5 13.7 19.8 13.2 19 13.2S17.5 13.7 17.5 14.5V16H20.5V14.5Z\";\nconst mdiDotsVertical = \"M12,16A2,2 0 0,1 14,18A2,2 0 0,1 12,20A2,2 0 0,1 10,18A2,2 0 0,1 12,16M12,10A2,2 0 0,1 14,12A2,2 0 0,1 12,14A2,2 0 0,1 10,12A2,2 0 0,1 12,10M12,4A2,2 0 0,1 14,6A2,2 0 0,1 12,8A2,2 0 0,1 10,6A2,2 0 0,1 12,4Z\";\nconst mdiMagnify = \"M9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.44,13.73L14.71,14H15.5L20.5,19L19,20.5L14,15.5V14.71L13.73,14.44C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3M9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5Z\";\nconst mdiPower = \"M16.56,5.44L15.11,6.89C16.84,7.94 18,9.83 18,12A6,6 0 0,1 12,18A6,6 0 0,1 6,12C6,9.83 7.16,7.94 8.88,6.88L7.44,5.44C5.36,6.88 4,9.28 4,12A8,8 0 0,0 12,20A8,8 0 0,0 20,12C20,9.28 18.64,6.88 16.56,5.44M13,3H11V13H13\";\nconst mdiUpdate = \"M21,10.12H14.22L16.96,7.3C14.23,4.6 9.81,4.5 7.08,7.2C4.35,9.91 4.35,14.28 7.08,17C9.81,19.7 14.23,19.7 16.96,17C18.32,15.65 19,14.08 19,12.1H21C21,14.08 20.12,16.65 18.36,18.39C14.85,21.87 9.15,21.87 5.64,18.39C2.14,14.92 2.11,9.28 5.62,5.81C9.13,2.34 14.76,2.34 18.27,5.81L21,3V10.12M12.5,8V12.25L16,14.33L15.28,15.54L11,13V8H12.5Z\";\nimport { LitElement, css, html } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { isComponentLoaded } from \"../../../common/config/is_component_loaded\";\nimport \"../../../components/chips/ha-assist-chip\";\nimport \"../../../components/ha-button-menu\";\nimport \"../../../components/ha-card\";\nimport \"../../../components/ha-icon-button\";\nimport \"../../../components/ha-icon-next\";\nimport \"../../../components/ha-list-item\";\nimport \"../../../components/ha-menu-button\";\nimport \"../../../components/ha-svg-icon\";\nimport \"../../../components/ha-tip\";\nimport \"../../../components/ha-top-app-bar-fixed\";\nimport { severitySort, subscribeRepairsIssueRegistry } from \"../../../data/repairs\";\nimport { checkForEntityUpdates, filterUpdateEntitiesWithInstall } from \"../../../data/update\";\nimport { showQuickBar } from \"../../../dialogs/quick-bar/show-dialog-quick-bar\";\nimport { showRestartDialog } from \"../../../dialogs/restart/show-dialog-restart\";\nimport { SubscribeMixin } from \"../../../mixins/subscribe-mixin\";\nimport { haStyle } from \"../../../resources/styles\";\nimport { documentationUrl } from \"../../../util/documentation-url\";\nimport \"../ha-config-section\";\nimport { configSections } from \"../ha-panel-config\";\nimport \"../repairs/ha-config-repairs\";\nimport \"./ha-config-navigation\";\nimport \"./ha-config-updates\";\nconst randomTip = (hass, narrow) => {\n  const weighted = [];\n  let tips = [{\n    content: hass.localize(\"ui.panel.config.tips.join\", {\n      forums: html`<a\n          href=\"https://community.home-assistant.io\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          >Forums</a\n        >`,\n      twitter: html`<a\n          href=${documentationUrl(hass, `/twitter`)}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          >Twitter</a\n        >`,\n      discord: html`<a\n          href=${documentationUrl(hass, `/join-chat`)}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          >Chat</a\n        >`,\n      blog: html`<a\n          href=${documentationUrl(hass, `/blog`)}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          >Blog</a\n        >`,\n      newsletter: html`<span class=\"keep-together\"\n          ><a\n            href=${documentationUrl(hass, `/newsletter`)}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            >Newsletter</a\n          >\n        </span>`\n    }),\n    weight: 2,\n    narrow: true\n  }, {\n    content: hass.localize(\"ui.tips.key_c_hint\"),\n    weight: 1,\n    narrow: false\n  }, {\n    content: hass.localize(\"ui.tips.key_m_hint\"),\n    weight: 1,\n    narrow: false\n  }];\n  if (narrow) {\n    tips = tips.filter(tip => tip.narrow);\n  }\n  tips.forEach(tip => {\n    for (let i = 0; i < tip.weight; i++) {\n      weighted.push(tip.content);\n    }\n  });\n  return weighted[Math.floor(Math.random() * weighted.length)];\n};\nlet HaConfigDashboard = _decorate([customElement(\"ha-config-dashboard\")], function (_initialize, _SubscribeMixin) {\n  class HaConfigDashboard extends _SubscribeMixin {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaConfigDashboard,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        reflect: true\n      })],\n      key: \"narrow\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"isWide\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"cloudStatus\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"showAdvanced\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_tip\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_repairsIssues\",\n      value() {\n        return {\n          issues: [],\n          total: 0\n        };\n      }\n    }, {\n      kind: \"field\",\n      key: \"_pages\",\n      value() {\n        return memoizeOne((cloudStatus, isCloudLoaded) => {\n          const pages = [];\n          if (isCloudLoaded) {\n            pages.push({\n              component: \"cloud\",\n              path: \"/config/cloud\",\n              name: \"Indexline Technology Cloud\",\n              info: cloudStatus,\n              iconPath: mdiCloudLock,\n              iconColor: \"#3B808E\",\n              translationKey: \"cloud\"\n            });\n          }\n          return [...pages, ...configSections.dashboard];\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"hassSubscribe\",\n      value: function hassSubscribe() {\n        return [subscribeRepairsIssueRegistry(this.hass.connection, repairs => {\n          const repairsIssues = repairs.issues.filter(issue => !issue.ignored);\n          this._repairsIssues = {\n            issues: repairsIssues.sort((a, b) => severitySort[a.severity] - severitySort[b.severity]).slice(0, repairsIssues.length === 3 ? repairsIssues.length : 2),\n            total: repairsIssues.length\n          };\n          const integrations = new Set();\n          for (const issue of this._repairsIssues.issues) {\n            integrations.add(issue.domain);\n          }\n          this.hass.loadBackendTranslation(\"issues\", [...integrations]);\n        })];\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        const {\n          updates: canInstallUpdates,\n          total: totalUpdates\n        } = this._filterUpdateEntitiesWithInstall(this.hass.states);\n        const {\n          issues: repairsIssues,\n          total: totalRepairIssues\n        } = this._repairsIssues;\n        return html`\n      <ha-top-app-bar-fixed>\n        <ha-menu-button\n          slot=\"navigationIcon\"\n          .hass=${this.hass}\n          .narrow=${this.narrow}\n        ></ha-menu-button>\n        <div slot=\"title\">${this.hass.localize(\"panel.config\")}</div>\n\n        <ha-icon-button\n          slot=\"actionItems\"\n          .label=${this.hass.localize(\"ui.dialogs.quick-bar.title\")}\n          .path=${mdiMagnify}\n          @click=${this._showQuickBar}\n        ></ha-icon-button>\n        <ha-button-menu slot=\"actionItems\" @action=${this._handleMenuAction}>\n          <ha-icon-button\n            slot=\"trigger\"\n            .label=${this.hass.localize(\"ui.common.menu\")}\n            .path=${mdiDotsVertical}\n          ></ha-icon-button>\n\n          <ha-list-item graphic=\"icon\">\n            ${this.hass.localize(\"ui.panel.config.updates.check_updates\")}\n            <ha-svg-icon slot=\"graphic\" .path=${mdiUpdate}></ha-svg-icon>\n          </ha-list-item>\n\n          <ha-list-item graphic=\"icon\">\n            ${this.hass.localize(\"ui.panel.config.system_dashboard.restart_homeassistant\")}\n            <ha-svg-icon slot=\"graphic\" .path=${mdiPower}></ha-svg-icon>\n          </ha-list-item>\n        </ha-button-menu>\n\n        <ha-config-section\n          .narrow=${this.narrow}\n          .isWide=${this.isWide}\n          full-width\n        >\n          ${repairsIssues.length || canInstallUpdates.length ? html`<ha-card outlined>\n                ${repairsIssues.length ? html`\n                      <ha-config-repairs\n                        .hass=${this.hass}\n                        .narrow=${this.narrow}\n                        .total=${totalRepairIssues}\n                        .repairsIssues=${repairsIssues}\n                      ></ha-config-repairs>\n                      ${totalRepairIssues > repairsIssues.length ? html`\n                            <ha-assist-chip\n                              href=\"/config/repairs\"\n                              .label=${this.hass.localize(\"ui.panel.config.repairs.more_repairs\", {\n          count: totalRepairIssues - repairsIssues.length\n        })}\n                            >\n                            </ha-assist-chip>\n                          ` : \"\"}\n                    ` : \"\"}\n                ${repairsIssues.length && canInstallUpdates.length ? html`<hr />` : \"\"}\n                ${canInstallUpdates.length ? html`\n                      <ha-config-updates\n                        .hass=${this.hass}\n                        .narrow=${this.narrow}\n                        .total=${totalUpdates}\n                        .updateEntities=${canInstallUpdates}\n                      ></ha-config-updates>\n                      ${totalUpdates > canInstallUpdates.length ? html`\n                            <ha-assist-chip\n                              href=\"/config/updates\"\n                              label=${this.hass.localize(\"ui.panel.config.updates.more_updates\", {\n          count: totalUpdates - canInstallUpdates.length\n        })}\n                            >\n                            </ha-assist-chip>\n                          ` : \"\"}\n                    ` : \"\"}\n              </ha-card>` : \"\"}\n\n          <ha-card outlined>\n            <ha-config-navigation\n              .hass=${this.hass}\n              .narrow=${this.narrow}\n              .showAdvanced=${this.showAdvanced}\n              .pages=${this._pages(this.cloudStatus, isComponentLoaded(this.hass, \"cloud\"))}\n            ></ha-config-navigation>\n          </ha-card>\n          <ha-tip .hass=${this.hass}>${this._tip}</ha-tip>\n        </ha-config-section>\n      </ha-top-app-bar-fixed>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"updated\",\n      value: function updated(changedProps) {\n        _get(_getPrototypeOf(HaConfigDashboard.prototype), \"updated\", this).call(this, changedProps);\n        if (!this._tip && changedProps.has(\"hass\")) {\n          this._tip = randomTip(this.hass, this.narrow);\n        }\n      }\n    }, {\n      kind: \"field\",\n      key: \"_filterUpdateEntitiesWithInstall\",\n      value() {\n        return memoizeOne(entities => {\n          const updates = filterUpdateEntitiesWithInstall(entities);\n          return {\n            updates: updates.slice(0, updates.length === 3 ? updates.length : 2),\n            total: updates.length\n          };\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_showQuickBar\",\n      value: function _showQuickBar() {\n        showQuickBar(this, {\n          commandMode: true,\n          hint: this.hass.localize(\"ui.dialogs.quick-bar.key_c_hint\")\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleMenuAction\",\n      value: async function _handleMenuAction(ev) {\n        switch (ev.detail.index) {\n          case 0:\n            checkForEntityUpdates(this, this.hass);\n            break;\n          case 1:\n            showRestartDialog(this);\n            break;\n        }\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [haStyle, css`\n        ha-card:last-child {\n          margin-bottom: env(safe-area-inset-bottom);\n        }\n        :host(:not([narrow])) ha-card:last-child {\n          margin-bottom: max(24px, env(safe-area-inset-bottom));\n        }\n        ha-config-section {\n          margin: auto;\n          margin-top: -32px;\n          max-width: 600px;\n        }\n        ha-card {\n          overflow: hidden;\n        }\n        ha-card a {\n          text-decoration: none;\n          color: var(--primary-text-color);\n        }\n        ha-assist-chip {\n          margin: 8px 16px 16px 16px;\n        }\n        .title {\n          font-size: 16px;\n          padding: 16px;\n          padding-bottom: 0;\n        }\n\n        @media all and (max-width: 600px) {\n          ha-card {\n            border-width: 1px 0;\n            border-radius: 0;\n            box-shadow: unset;\n          }\n          ha-config-section {\n            margin-top: -42px;\n          }\n        }\n\n        ha-tip {\n          margin-bottom: max(env(safe-area-inset-bottom), 8px);\n        }\n\n        .new {\n          color: var(--primary-color);\n        }\n\n        .keep-together {\n          display: inline-block;\n        }\n\n        hr {\n          height: 1px;\n          background-color: var(\n            --ha-card-border-color,\n            var(--divider-color, #e0e0e0)\n          );\n          border: none;\n          margin-top: 0;\n        }\n      `];\n      }\n    }]\n  };\n}, SubscribeMixin(LitElement));","map":{"version":3,"names":["LitElement","css","html","customElement","property","state","memoizeOne","isComponentLoaded","severitySort","subscribeRepairsIssueRegistry","checkForEntityUpdates","filterUpdateEntitiesWithInstall","showQuickBar","showRestartDialog","SubscribeMixin","haStyle","documentationUrl","configSections","randomTip","hass","narrow","weighted","tips","content","localize","forums","twitter","discord","blog","newsletter","weight","filter","tip","forEach","i","push","Math","floor","random","length","HaConfigDashboard","_decorate","_initialize","_SubscribeMixin","constructor","args","F","d","kind","decorators","attribute","key","value","type","Boolean","reflect","issues","total","cloudStatus","isCloudLoaded","pages","component","path","name","info","iconPath","mdiCloudLock","iconColor","translationKey","dashboard","hassSubscribe","connection","repairs","repairsIssues","issue","ignored","_repairsIssues","sort","a","b","severity","slice","integrations","Set","add","domain","loadBackendTranslation","render","updates","canInstallUpdates","totalUpdates","_filterUpdateEntitiesWithInstall","states","totalRepairIssues","mdiMagnify","_showQuickBar","_handleMenuAction","mdiDotsVertical","mdiUpdate","mdiPower","isWide","count","showAdvanced","_pages","_tip","updated","changedProps","_get","_getPrototypeOf","prototype","call","has","entities","commandMode","hint","ev","detail","index","static","styles"],"sources":["/workspaces/frontend/src/panels/config/dashboard/ha-config-dashboard.ts"],"sourcesContent":["import type { ActionDetail } from \"@material/mwc-list\";\nimport {\n  mdiCloudLock,\n  mdiDotsVertical,\n  mdiMagnify,\n  mdiPower,\n  mdiUpdate,\n} from \"@mdi/js\";\nimport { HassEntities, UnsubscribeFunc } from \"home-assistant-js-websocket\";\nimport {\n  CSSResultGroup,\n  LitElement,\n  PropertyValues,\n  TemplateResult,\n  css,\n  html,\n} from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { isComponentLoaded } from \"../../../common/config/is_component_loaded\";\nimport \"../../../components/chips/ha-assist-chip\";\nimport \"../../../components/ha-button-menu\";\nimport \"../../../components/ha-card\";\nimport \"../../../components/ha-icon-button\";\nimport \"../../../components/ha-icon-next\";\nimport \"../../../components/ha-list-item\";\nimport \"../../../components/ha-menu-button\";\nimport \"../../../components/ha-svg-icon\";\nimport \"../../../components/ha-tip\";\nimport \"../../../components/ha-top-app-bar-fixed\";\nimport { CloudStatus } from \"../../../data/cloud\";\nimport {\n  RepairsIssue,\n  severitySort,\n  subscribeRepairsIssueRegistry,\n} from \"../../../data/repairs\";\nimport {\n  UpdateEntity,\n  checkForEntityUpdates,\n  filterUpdateEntitiesWithInstall,\n} from \"../../../data/update\";\nimport { showQuickBar } from \"../../../dialogs/quick-bar/show-dialog-quick-bar\";\nimport { showRestartDialog } from \"../../../dialogs/restart/show-dialog-restart\";\nimport { PageNavigation } from \"../../../layouts/hass-tabs-subpage\";\nimport { SubscribeMixin } from \"../../../mixins/subscribe-mixin\";\nimport { haStyle } from \"../../../resources/styles\";\nimport { HomeAssistant } from \"../../../types\";\nimport { documentationUrl } from \"../../../util/documentation-url\";\nimport \"../ha-config-section\";\nimport { configSections } from \"../ha-panel-config\";\nimport \"../repairs/ha-config-repairs\";\nimport \"./ha-config-navigation\";\nimport \"./ha-config-updates\";\n\nconst randomTip = (hass: HomeAssistant, narrow: boolean) => {\n  const weighted: string[] = [];\n  let tips = [\n    {\n      content: hass.localize(\"ui.panel.config.tips.join\", {\n        forums: html`<a\n          href=\"https://community.home-assistant.io\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          >Forums</a\n        >`,\n        twitter: html`<a\n          href=${documentationUrl(hass, `/twitter`)}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          >Twitter</a\n        >`,\n        discord: html`<a\n          href=${documentationUrl(hass, `/join-chat`)}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          >Chat</a\n        >`,\n        blog: html`<a\n          href=${documentationUrl(hass, `/blog`)}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          >Blog</a\n        >`,\n        newsletter: html`<span class=\"keep-together\"\n          ><a\n            href=${documentationUrl(hass, `/newsletter`)}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            >Newsletter</a\n          >\n        </span>`,\n      }),\n      weight: 2,\n      narrow: true,\n    },\n    { content: hass.localize(\"ui.tips.key_c_hint\"), weight: 1, narrow: false },\n    { content: hass.localize(\"ui.tips.key_m_hint\"), weight: 1, narrow: false },\n  ];\n\n  if (narrow) {\n    tips = tips.filter((tip) => tip.narrow);\n  }\n\n  tips.forEach((tip) => {\n    for (let i = 0; i < tip.weight; i++) {\n      weighted.push(tip.content);\n    }\n  });\n\n  return weighted[Math.floor(Math.random() * weighted.length)];\n};\n\n@customElement(\"ha-config-dashboard\")\nclass HaConfigDashboard extends SubscribeMixin(LitElement) {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ type: Boolean, reflect: true }) public narrow = false;\n\n  @property({ type: Boolean }) public isWide = false;\n\n  @property({ attribute: false }) public cloudStatus?: CloudStatus;\n\n  @property({ type: Boolean }) public showAdvanced = false;\n\n  @state() private _tip?: string;\n\n  @state() private _repairsIssues: { issues: RepairsIssue[]; total: number } = {\n    issues: [],\n    total: 0,\n  };\n\n  private _pages = memoizeOne((cloudStatus, isCloudLoaded) => {\n    const pages: PageNavigation[] = [];\n    if (isCloudLoaded) {\n      pages.push({\n        component: \"cloud\",\n        path: \"/config/cloud\",\n        name: \"Indexline Technology Cloud\",\n        info: cloudStatus,\n        iconPath: mdiCloudLock,\n        iconColor: \"#3B808E\",\n        translationKey: \"cloud\",\n      });\n    }\n    return [...pages, ...configSections.dashboard];\n  });\n\n  public hassSubscribe(): UnsubscribeFunc[] {\n    return [\n      subscribeRepairsIssueRegistry(this.hass.connection!, (repairs) => {\n        const repairsIssues = repairs.issues.filter((issue) => !issue.ignored);\n\n        this._repairsIssues = {\n          issues: repairsIssues\n            .sort((a, b) => severitySort[a.severity] - severitySort[b.severity])\n            .slice(0, repairsIssues.length === 3 ? repairsIssues.length : 2),\n          total: repairsIssues.length,\n        };\n\n        const integrations: Set<string> = new Set();\n        for (const issue of this._repairsIssues.issues) {\n          integrations.add(issue.domain);\n        }\n        this.hass.loadBackendTranslation(\"issues\", [...integrations]);\n      }),\n    ];\n  }\n\n  protected render(): TemplateResult {\n    const { updates: canInstallUpdates, total: totalUpdates } =\n      this._filterUpdateEntitiesWithInstall(this.hass.states);\n\n    const { issues: repairsIssues, total: totalRepairIssues } =\n      this._repairsIssues;\n\n    return html`\n      <ha-top-app-bar-fixed>\n        <ha-menu-button\n          slot=\"navigationIcon\"\n          .hass=${this.hass}\n          .narrow=${this.narrow}\n        ></ha-menu-button>\n        <div slot=\"title\">${this.hass.localize(\"panel.config\")}</div>\n\n        <ha-icon-button\n          slot=\"actionItems\"\n          .label=${this.hass.localize(\"ui.dialogs.quick-bar.title\")}\n          .path=${mdiMagnify}\n          @click=${this._showQuickBar}\n        ></ha-icon-button>\n        <ha-button-menu slot=\"actionItems\" @action=${this._handleMenuAction}>\n          <ha-icon-button\n            slot=\"trigger\"\n            .label=${this.hass.localize(\"ui.common.menu\")}\n            .path=${mdiDotsVertical}\n          ></ha-icon-button>\n\n          <ha-list-item graphic=\"icon\">\n            ${this.hass.localize(\"ui.panel.config.updates.check_updates\")}\n            <ha-svg-icon slot=\"graphic\" .path=${mdiUpdate}></ha-svg-icon>\n          </ha-list-item>\n\n          <ha-list-item graphic=\"icon\">\n            ${this.hass.localize(\n              \"ui.panel.config.system_dashboard.restart_homeassistant\"\n            )}\n            <ha-svg-icon slot=\"graphic\" .path=${mdiPower}></ha-svg-icon>\n          </ha-list-item>\n        </ha-button-menu>\n\n        <ha-config-section\n          .narrow=${this.narrow}\n          .isWide=${this.isWide}\n          full-width\n        >\n          ${repairsIssues.length || canInstallUpdates.length\n            ? html`<ha-card outlined>\n                ${repairsIssues.length\n                  ? html`\n                      <ha-config-repairs\n                        .hass=${this.hass}\n                        .narrow=${this.narrow}\n                        .total=${totalRepairIssues}\n                        .repairsIssues=${repairsIssues}\n                      ></ha-config-repairs>\n                      ${totalRepairIssues > repairsIssues.length\n                        ? html`\n                            <ha-assist-chip\n                              href=\"/config/repairs\"\n                              .label=${this.hass.localize(\n                                \"ui.panel.config.repairs.more_repairs\",\n                                {\n                                  count:\n                                    totalRepairIssues - repairsIssues.length,\n                                }\n                              )}\n                            >\n                            </ha-assist-chip>\n                          `\n                        : \"\"}\n                    `\n                  : \"\"}\n                ${repairsIssues.length && canInstallUpdates.length\n                  ? html`<hr />`\n                  : \"\"}\n                ${canInstallUpdates.length\n                  ? html`\n                      <ha-config-updates\n                        .hass=${this.hass}\n                        .narrow=${this.narrow}\n                        .total=${totalUpdates}\n                        .updateEntities=${canInstallUpdates}\n                      ></ha-config-updates>\n                      ${totalUpdates > canInstallUpdates.length\n                        ? html`\n                            <ha-assist-chip\n                              href=\"/config/updates\"\n                              label=${this.hass.localize(\n                                \"ui.panel.config.updates.more_updates\",\n                                {\n                                  count:\n                                    totalUpdates - canInstallUpdates.length,\n                                }\n                              )}\n                            >\n                            </ha-assist-chip>\n                          `\n                        : \"\"}\n                    `\n                  : \"\"}\n              </ha-card>`\n            : \"\"}\n\n          <ha-card outlined>\n            <ha-config-navigation\n              .hass=${this.hass}\n              .narrow=${this.narrow}\n              .showAdvanced=${this.showAdvanced}\n              .pages=${this._pages(\n                this.cloudStatus,\n                isComponentLoaded(this.hass, \"cloud\")\n              )}\n            ></ha-config-navigation>\n          </ha-card>\n          <ha-tip .hass=${this.hass}>${this._tip}</ha-tip>\n        </ha-config-section>\n      </ha-top-app-bar-fixed>\n    `;\n  }\n\n  protected override updated(changedProps: PropertyValues): void {\n    super.updated(changedProps);\n\n    if (!this._tip && changedProps.has(\"hass\")) {\n      this._tip = randomTip(this.hass, this.narrow);\n    }\n  }\n\n  private _filterUpdateEntitiesWithInstall = memoizeOne(\n    (entities: HassEntities): { updates: UpdateEntity[]; total: number } => {\n      const updates = filterUpdateEntitiesWithInstall(entities);\n\n      return {\n        updates: updates.slice(0, updates.length === 3 ? updates.length : 2),\n        total: updates.length,\n      };\n    }\n  );\n\n  private _showQuickBar(): void {\n    showQuickBar(this, {\n      commandMode: true,\n      hint: this.hass.localize(\"ui.dialogs.quick-bar.key_c_hint\"),\n    });\n  }\n\n  private async _handleMenuAction(ev: CustomEvent<ActionDetail>) {\n    switch (ev.detail.index) {\n      case 0:\n        checkForEntityUpdates(this, this.hass);\n        break;\n      case 1:\n        showRestartDialog(this);\n        break;\n    }\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyle,\n      css`\n        ha-card:last-child {\n          margin-bottom: env(safe-area-inset-bottom);\n        }\n        :host(:not([narrow])) ha-card:last-child {\n          margin-bottom: max(24px, env(safe-area-inset-bottom));\n        }\n        ha-config-section {\n          margin: auto;\n          margin-top: -32px;\n          max-width: 600px;\n        }\n        ha-card {\n          overflow: hidden;\n        }\n        ha-card a {\n          text-decoration: none;\n          color: var(--primary-text-color);\n        }\n        ha-assist-chip {\n          margin: 8px 16px 16px 16px;\n        }\n        .title {\n          font-size: 16px;\n          padding: 16px;\n          padding-bottom: 0;\n        }\n\n        @media all and (max-width: 600px) {\n          ha-card {\n            border-width: 1px 0;\n            border-radius: 0;\n            box-shadow: unset;\n          }\n          ha-config-section {\n            margin-top: -42px;\n          }\n        }\n\n        ha-tip {\n          margin-bottom: max(env(safe-area-inset-bottom), 8px);\n        }\n\n        .new {\n          color: var(--primary-color);\n        }\n\n        .keep-together {\n          display: inline-block;\n        }\n\n        hr {\n          height: 1px;\n          background-color: var(\n            --ha-card-border-color,\n            var(--divider-color, #e0e0e0)\n          );\n          border: none;\n          margin-top: 0;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-config-dashboard\": HaConfigDashboard;\n  }\n}\n"],"mappings":"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ACK,QAAQ,CAAC,iCAAiC;QAC5D,CAAC,CAAC;MACJ;IAAC;MAAAwB,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,eAAA4C,kBAAgCmB,EAA6B,EAAE;QAC7D,QAAQA,EAAE,CAACC,MAAM,CAACC,KAAK;UACrB,KAAK,CAAC;YACJ3G,qBAAqB,CAAC,IAAI,EAAE,IAAI,CAACS,IAAI,CAAC;YACtC;UACF,KAAK,CAAC;YACJN,iBAAiB,CAAC,IAAI,CAAC;YACvB;QACJ;MACF;IAAC;MAAAmC,IAAA;MAAAsE,MAAA;MAAAnE,GAAA;MAAAC,KAAA,EAED,SAAAmE,OAAA,EAAoC;QAClC,OAAO,CACLxG,OAAO,EACPd,GAAI;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,CACF;MACH;IAAC;EAAA;AAAA,GAvR6Ba,cAAc,CAACd,UAAU,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}