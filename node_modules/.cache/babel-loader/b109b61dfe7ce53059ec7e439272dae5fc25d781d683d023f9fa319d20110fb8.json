{"ast":null,"code":"function findNestedItem(obj, path, createNonExistingPath) {\n  return path.reduce((ac, p, index, array) => {\n    if (ac === undefined) return undefined;\n    if (!ac[p] && createNonExistingPath) {\n      const nextP = array[index + 1];\n      // Create object or array depending on next path\n      if (nextP === undefined || typeof nextP === \"number\") {\n        ac[p] = [];\n      } else {\n        ac[p] = {};\n      }\n    }\n    return ac[p];\n  }, obj);\n}\nexport function nestedArrayMove(obj, oldIndex, newIndex, oldPath, newPath) {\n  const newObj = Array.isArray(obj) ? [...obj] : {\n    ...obj\n  };\n  const from = oldPath ? findNestedItem(newObj, oldPath) : newObj;\n  const to = newPath ? findNestedItem(newObj, newPath, true) : newObj;\n  if (!Array.isArray(from) || !Array.isArray(to)) {\n    return obj;\n  }\n  const item = from.splice(oldIndex, 1)[0];\n  to.splice(newIndex, 0, item);\n  return newObj;\n}\nexport function arrayMove(array, oldIndex, newIndex) {\n  const newArray = [...array];\n  const [item] = newArray.splice(oldIndex, 1);\n  newArray.splice(newIndex, 0, item);\n  return newArray;\n}","map":{"version":3,"names":["findNestedItem","obj","path","createNonExistingPath","reduce","ac","p","index","array","undefined","nextP","nestedArrayMove","oldIndex","newIndex","oldPath","newPath","newObj","Array","isArray","from","to","item","splice","arrayMove","newArray"],"sources":["/workspaces/frontend/src/common/util/array-move.ts"],"sourcesContent":["import { ItemPath } from \"../../types\";\n\nfunction findNestedItem(\n  obj: any,\n  path: ItemPath,\n  createNonExistingPath?: boolean\n): any {\n  return path.reduce((ac, p, index, array) => {\n    if (ac === undefined) return undefined;\n    if (!ac[p] && createNonExistingPath) {\n      const nextP = array[index + 1];\n      // Create object or array depending on next path\n      if (nextP === undefined || typeof nextP === \"number\") {\n        ac[p] = [];\n      } else {\n        ac[p] = {};\n      }\n    }\n    return ac[p];\n  }, obj);\n}\n\nexport function nestedArrayMove<T>(\n  obj: T | T[],\n  oldIndex: number,\n  newIndex: number,\n  oldPath?: ItemPath,\n  newPath?: ItemPath\n): T | T[] {\n  const newObj = Array.isArray(obj) ? [...obj] : { ...obj };\n  const from = oldPath ? findNestedItem(newObj, oldPath) : newObj;\n  const to = newPath ? findNestedItem(newObj, newPath, true) : newObj;\n\n  if (!Array.isArray(from) || !Array.isArray(to)) {\n    return obj;\n  }\n\n  const item = from.splice(oldIndex, 1)[0];\n  to.splice(newIndex, 0, item);\n\n  return newObj;\n}\n\nexport function arrayMove<T = any>(\n  array: T[],\n  oldIndex: number,\n  newIndex: number\n): T[] {\n  const newArray = [...array];\n  const [item] = newArray.splice(oldIndex, 1);\n  newArray.splice(newIndex, 0, item);\n  return newArray;\n}\n"],"mappings":"AAEA,SAASA,cAAcA,CACrBC,GAAQ,EACRC,IAAc,EACdC,qBAA+B,EAC1B;EACL,OAAOD,IAAI,CAACE,MAAM,CAAC,CAACC,EAAE,EAAEC,CAAC,EAAEC,KAAK,EAAEC,KAAK,KAAK;IAC1C,IAAIH,EAAE,KAAKI,SAAS,EAAE,OAAOA,SAAS;IACtC,IAAI,CAACJ,EAAE,CAACC,CAAC,CAAC,IAAIH,qBAAqB,EAAE;MACnC,MAAMO,KAAK,GAAGF,KAAK,CAACD,KAAK,GAAG,CAAC,CAAC;MAC9B;MACA,IAAIG,KAAK,KAAKD,SAAS,IAAI,OAAOC,KAAK,KAAK,QAAQ,EAAE;QACpDL,EAAE,CAACC,CAAC,CAAC,GAAG,EAAE;MACZ,CAAC,MAAM;QACLD,EAAE,CAACC,CAAC,CAAC,GAAG,CAAC,CAAC;MACZ;IACF;IACA,OAAOD,EAAE,CAACC,CAAC,CAAC;EACd,CAAC,EAAEL,GAAG,CAAC;AACT;AAEA,OAAO,SAASU,eAAeA,CAC7BV,GAAY,EACZW,QAAgB,EAChBC,QAAgB,EAChBC,OAAkB,EAClBC,OAAkB,EACT;EACT,MAAMC,MAAM,GAAGC,KAAK,CAACC,OAAO,CAACjB,GAAG,CAAC,GAAG,CAAC,GAAGA,GAAG,CAAC,GAAG;IAAE,GAAGA;EAAI,CAAC;EACzD,MAAMkB,IAAI,GAAGL,OAAO,GAAGd,cAAc,CAACgB,MAAM,EAAEF,OAAO,CAAC,GAAGE,MAAM;EAC/D,MAAMI,EAAE,GAAGL,OAAO,GAAGf,cAAc,CAACgB,MAAM,EAAED,OAAO,EAAE,IAAI,CAAC,GAAGC,MAAM;EAEnE,IAAI,CAACC,KAAK,CAACC,OAAO,CAACC,IAAI,CAAC,IAAI,CAACF,KAAK,CAACC,OAAO,CAACE,EAAE,CAAC,EAAE;IAC9C,OAAOnB,GAAG;EACZ;EAEA,MAAMoB,IAAI,GAAGF,IAAI,CAACG,MAAM,CAACV,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EACxCQ,EAAE,CAACE,MAAM,CAACT,QAAQ,EAAE,CAAC,EAAEQ,IAAI,CAAC;EAE5B,OAAOL,MAAM;AACf;AAEA,OAAO,SAASO,SAASA,CACvBf,KAAU,EACVI,QAAgB,EAChBC,QAAgB,EACX;EACL,MAAMW,QAAQ,GAAG,CAAC,GAAGhB,KAAK,CAAC;EAC3B,MAAM,CAACa,IAAI,CAAC,GAAGG,QAAQ,CAACF,MAAM,CAACV,QAAQ,EAAE,CAAC,CAAC;EAC3CY,QAAQ,CAACF,MAAM,CAACT,QAAQ,EAAE,CAAC,EAAEQ,IAAI,CAAC;EAClC,OAAOG,QAAQ;AACjB"},"metadata":{},"sourceType":"module","externalDependencies":[]}