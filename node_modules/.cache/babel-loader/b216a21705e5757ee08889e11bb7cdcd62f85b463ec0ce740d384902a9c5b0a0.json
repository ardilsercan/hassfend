{"ast":null,"code":"import _createForOfIteratorHelper from \"@babel/runtime/helpers/createForOfIteratorHelper\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.global-this.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.weak-map.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nvar NODE_MODE = false;\nvar global = NODE_MODE ? globalThis : window;\n/**\n * Whether the current browser supports `adoptedStyleSheets`.\n */\nexport var supportsAdoptingStyleSheets = global.ShadowRoot && (global.ShadyCSS === undefined || global.ShadyCSS.nativeShadow) && 'adoptedStyleSheets' in Document.prototype && 'replace' in CSSStyleSheet.prototype;\nvar constructionToken = Symbol();\nvar cssTagCache = new WeakMap();\n/**\n * A container for a string of CSS text, that may be used to create a CSSStyleSheet.\n *\n * CSSResult is the return value of `css`-tagged template literals and\n * `unsafeCSS()`. In order to ensure that CSSResults are only created via the\n * `css` tag and `unsafeCSS()`, CSSResult cannot be constructed directly.\n */\nexport var CSSResult = /*#__PURE__*/function () {\n  function CSSResult(cssText, strings, safeToken) {\n    _classCallCheck(this, CSSResult);\n    // This property needs to remain unminified.\n    this['_$cssResult$'] = true;\n    if (safeToken !== constructionToken) {\n      throw new Error('CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n    }\n    this.cssText = cssText;\n    this._strings = strings;\n  }\n  // This is a getter so that it's lazy. In practice, this means stylesheets\n  // are not created until the first element instance is made.\n  _createClass(CSSResult, [{\n    key: \"styleSheet\",\n    get: function get() {\n      // If `supportsAdoptingStyleSheets` is true then we assume CSSStyleSheet is\n      // constructable.\n      var styleSheet = this._styleSheet;\n      var strings = this._strings;\n      if (supportsAdoptingStyleSheets && styleSheet === undefined) {\n        var cacheable = strings !== undefined && strings.length === 1;\n        if (cacheable) {\n          styleSheet = cssTagCache.get(strings);\n        }\n        if (styleSheet === undefined) {\n          (this._styleSheet = styleSheet = new CSSStyleSheet()).replaceSync(this.cssText);\n          if (cacheable) {\n            cssTagCache.set(strings, styleSheet);\n          }\n        }\n      }\n      return styleSheet;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.cssText;\n    }\n  }]);\n  return CSSResult;\n}();\nvar textFromCSSResult = function textFromCSSResult(value) {\n  // This property needs to remain unminified.\n  if (value['_$cssResult$'] === true) {\n    return value.cssText;\n  } else if (typeof value === 'number') {\n    return value;\n  } else {\n    throw new Error(\"Value passed to 'css' function must be a 'css' function result: \" + \"\".concat(value, \". Use 'unsafeCSS' to pass non-literal values, but take care \") + \"to ensure page security.\");\n  }\n};\n/**\n * Wrap a value for interpolation in a {@linkcode css} tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport var unsafeCSS = function unsafeCSS(value) {\n  return new CSSResult(typeof value === 'string' ? value : String(value), undefined, constructionToken);\n};\n/**\n * A template literal tag which can be used with LitElement's\n * {@linkcode LitElement.styles} property to set element styles.\n *\n * For security reasons, only literal string values and number may be used in\n * embedded expressions. To incorporate non-literal values {@linkcode unsafeCSS}\n * may be used inside an expression.\n */\nexport var css = function css(strings) {\n  for (var _len = arguments.length, values = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    values[_key - 1] = arguments[_key];\n  }\n  var cssText = strings.length === 1 ? strings[0] : values.reduce(function (acc, v, idx) {\n    return acc + textFromCSSResult(v) + strings[idx + 1];\n  }, strings[0]);\n  return new CSSResult(cssText, strings, constructionToken);\n};\n/**\n * Applies the given styles to a `shadowRoot`. When Shadow DOM is\n * available but `adoptedStyleSheets` is not, styles are appended to the\n * `shadowRoot` to [mimic spec behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n * Note, when shimming is used, any styles that are subsequently placed into\n * the shadowRoot should be placed *before* any shimmed adopted styles. This\n * will match spec behavior that gives adopted sheets precedence over styles in\n * shadowRoot.\n */\nexport var adoptStyles = function adoptStyles(renderRoot, styles) {\n  if (supportsAdoptingStyleSheets) {\n    renderRoot.adoptedStyleSheets = styles.map(function (s) {\n      return s instanceof CSSStyleSheet ? s : s.styleSheet;\n    });\n  } else {\n    styles.forEach(function (s) {\n      var style = document.createElement('style');\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var nonce = global['litNonce'];\n      if (nonce !== undefined) {\n        style.setAttribute('nonce', nonce);\n      }\n      style.textContent = s.cssText;\n      renderRoot.appendChild(style);\n    });\n  }\n};\nvar cssResultFromStyleSheet = function cssResultFromStyleSheet(sheet) {\n  var cssText = '';\n  var _iterator = _createForOfIteratorHelper(sheet.cssRules),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var rule = _step.value;\n      cssText += rule.cssText;\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return unsafeCSS(cssText);\n};\nexport var getCompatibleStyle = supportsAdoptingStyleSheets || NODE_MODE && global.CSSStyleSheet === undefined ? function (s) {\n  return s;\n} : function (s) {\n  return s instanceof CSSStyleSheet ? cssResultFromStyleSheet(s) : s;\n};","map":{"version":3,"names":["NODE_MODE","global","globalThis","window","supportsAdoptingStyleSheets","ShadowRoot","ShadyCSS","undefined","nativeShadow","Document","prototype","CSSStyleSheet","constructionToken","Symbol","cssTagCache","WeakMap","CSSResult","cssText","strings","safeToken","_classCallCheck","Error","_strings","_createClass","key","get","styleSheet","_styleSheet","cacheable","length","replaceSync","set","value","toString","textFromCSSResult","concat","unsafeCSS","String","css","_len","arguments","values","Array","_key","reduce","acc","v","idx","adoptStyles","renderRoot","styles","adoptedStyleSheets","map","s","forEach","style","document","createElement","nonce","setAttribute","textContent","appendChild","cssResultFromStyleSheet","sheet","_iterator","_createForOfIteratorHelper","cssRules","_step","n","done","rule","err","e","f","getCompatibleStyle"],"sources":["../src/css-tag.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nconst NODE_MODE = false;\nconst global = NODE_MODE ? globalThis : window;\n\n/**\n * Whether the current browser supports `adoptedStyleSheets`.\n */\nexport const supportsAdoptingStyleSheets: boolean =\n  global.ShadowRoot &&\n  (global.ShadyCSS === undefined || global.ShadyCSS.nativeShadow) &&\n  'adoptedStyleSheets' in Document.prototype &&\n  'replace' in CSSStyleSheet.prototype;\n\n/**\n * A CSSResult or native CSSStyleSheet.\n *\n * In browsers that support constructible CSS style sheets, CSSStyleSheet\n * object can be used for styling along side CSSResult from the `css`\n * template tag.\n */\nexport type CSSResultOrNative = CSSResult | CSSStyleSheet;\n\nexport type CSSResultArray = Array<CSSResultOrNative | CSSResultArray>;\n\n/**\n * A single CSSResult, CSSStyleSheet, or an array or nested arrays of those.\n */\nexport type CSSResultGroup = CSSResultOrNative | CSSResultArray;\n\nconst constructionToken = Symbol();\n\nconst cssTagCache = new WeakMap<TemplateStringsArray, CSSStyleSheet>();\n\n/**\n * A container for a string of CSS text, that may be used to create a CSSStyleSheet.\n *\n * CSSResult is the return value of `css`-tagged template literals and\n * `unsafeCSS()`. In order to ensure that CSSResults are only created via the\n * `css` tag and `unsafeCSS()`, CSSResult cannot be constructed directly.\n */\nexport class CSSResult {\n  // This property needs to remain unminified.\n  ['_$cssResult$'] = true;\n  readonly cssText: string;\n  private _styleSheet?: CSSStyleSheet;\n  private _strings: TemplateStringsArray | undefined;\n\n  private constructor(\n    cssText: string,\n    strings: TemplateStringsArray | undefined,\n    safeToken: symbol\n  ) {\n    if (safeToken !== constructionToken) {\n      throw new Error(\n        'CSSResult is not constructable. Use `unsafeCSS` or `css` instead.'\n      );\n    }\n    this.cssText = cssText;\n    this._strings = strings;\n  }\n\n  // This is a getter so that it's lazy. In practice, this means stylesheets\n  // are not created until the first element instance is made.\n  get styleSheet(): CSSStyleSheet | undefined {\n    // If `supportsAdoptingStyleSheets` is true then we assume CSSStyleSheet is\n    // constructable.\n    let styleSheet = this._styleSheet;\n    const strings = this._strings;\n    if (supportsAdoptingStyleSheets && styleSheet === undefined) {\n      const cacheable = strings !== undefined && strings.length === 1;\n      if (cacheable) {\n        styleSheet = cssTagCache.get(strings);\n      }\n      if (styleSheet === undefined) {\n        (this._styleSheet = styleSheet = new CSSStyleSheet()).replaceSync(\n          this.cssText\n        );\n        if (cacheable) {\n          cssTagCache.set(strings, styleSheet);\n        }\n      }\n    }\n    return styleSheet;\n  }\n\n  toString(): string {\n    return this.cssText;\n  }\n}\n\ntype ConstructableCSSResult = CSSResult & {\n  new (\n    cssText: string,\n    strings: TemplateStringsArray | undefined,\n    safeToken: symbol\n  ): CSSResult;\n};\n\nconst textFromCSSResult = (value: CSSResultGroup | number) => {\n  // This property needs to remain unminified.\n  if ((value as CSSResult)['_$cssResult$'] === true) {\n    return (value as CSSResult).cssText;\n  } else if (typeof value === 'number') {\n    return value;\n  } else {\n    throw new Error(\n      `Value passed to 'css' function must be a 'css' function result: ` +\n        `${value}. Use 'unsafeCSS' to pass non-literal values, but take care ` +\n        `to ensure page security.`\n    );\n  }\n};\n\n/**\n * Wrap a value for interpolation in a {@linkcode css} tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value: unknown) =>\n  new (CSSResult as ConstructableCSSResult)(\n    typeof value === 'string' ? value : String(value),\n    undefined,\n    constructionToken\n  );\n\n/**\n * A template literal tag which can be used with LitElement's\n * {@linkcode LitElement.styles} property to set element styles.\n *\n * For security reasons, only literal string values and number may be used in\n * embedded expressions. To incorporate non-literal values {@linkcode unsafeCSS}\n * may be used inside an expression.\n */\nexport const css = (\n  strings: TemplateStringsArray,\n  ...values: (CSSResultGroup | number)[]\n): CSSResult => {\n  const cssText =\n    strings.length === 1\n      ? strings[0]\n      : values.reduce(\n          (acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1],\n          strings[0]\n        );\n  return new (CSSResult as ConstructableCSSResult)(\n    cssText,\n    strings,\n    constructionToken\n  );\n};\n\n/**\n * Applies the given styles to a `shadowRoot`. When Shadow DOM is\n * available but `adoptedStyleSheets` is not, styles are appended to the\n * `shadowRoot` to [mimic spec behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n * Note, when shimming is used, any styles that are subsequently placed into\n * the shadowRoot should be placed *before* any shimmed adopted styles. This\n * will match spec behavior that gives adopted sheets precedence over styles in\n * shadowRoot.\n */\nexport const adoptStyles = (\n  renderRoot: ShadowRoot,\n  styles: Array<CSSResultOrNative>\n) => {\n  if (supportsAdoptingStyleSheets) {\n    (renderRoot as ShadowRoot).adoptedStyleSheets = styles.map((s) =>\n      s instanceof CSSStyleSheet ? s : s.styleSheet!\n    );\n  } else {\n    styles.forEach((s) => {\n      const style = document.createElement('style');\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const nonce = (global as any)['litNonce'];\n      if (nonce !== undefined) {\n        style.setAttribute('nonce', nonce);\n      }\n      style.textContent = (s as CSSResult).cssText;\n      renderRoot.appendChild(style);\n    });\n  }\n};\n\nconst cssResultFromStyleSheet = (sheet: CSSStyleSheet) => {\n  let cssText = '';\n  for (const rule of sheet.cssRules) {\n    cssText += rule.cssText;\n  }\n  return unsafeCSS(cssText);\n};\n\nexport const getCompatibleStyle =\n  supportsAdoptingStyleSheets ||\n  (NODE_MODE && global.CSSStyleSheet === undefined)\n    ? (s: CSSResultOrNative) => s\n    : (s: CSSResultOrNative) =>\n        s instanceof CSSStyleSheet ? cssResultFromStyleSheet(s) : s;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}