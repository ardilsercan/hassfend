{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nconst mdiHelpCircle = \"M15.07,11.25L14.17,12.17C13.45,12.89 13,13.5 13,15H11V14.5C11,13.39 11.45,12.39 12.17,11.67L13.41,10.41C13.78,10.05 14,9.55 14,9C14,7.89 13.1,7 12,7A2,2 0 0,0 10,9H8A4,4 0 0,1 12,5A4,4 0 0,1 16,9C16,9.88 15.64,10.67 15.07,11.25M13,19H11V17H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12C22,6.47 17.5,2 12,2Z\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport { computeRTLDirection } from \"../../../common/util/compute_rtl\";\nimport \"../../../components/buttons/ha-progress-button\";\nimport \"../../../components/ha-form/ha-form\";\nimport \"../../../components/ha-icon-button\";\nimport { extractApiErrorMessage } from \"../../../data/hassio/common\";\nimport { createSupervisorMount, removeSupervisorMount, SupervisorMountType, SupervisorMountUsage, updateSupervisorMount } from \"../../../data/supervisor/mounts\";\nimport { haStyle, haStyleDialog } from \"../../../resources/styles\";\nimport { documentationUrl } from \"../../../util/documentation-url\";\nconst mountSchema = memoizeOne((localize, existing, mountType, showCIFSVersion) => [{\n  name: \"name\",\n  required: true,\n  disabled: existing,\n  selector: {\n    text: {}\n  }\n}, {\n  name: \"usage\",\n  required: true,\n  type: \"select\",\n  options: [[SupervisorMountUsage.BACKUP, localize(\"ui.panel.config.storage.network_mounts.mount_usage.backup\")], [SupervisorMountUsage.MEDIA, localize(\"ui.panel.config.storage.network_mounts.mount_usage.media\")], [SupervisorMountUsage.SHARE, localize(\"ui.panel.config.storage.network_mounts.mount_usage.share\")]]\n}, {\n  name: \"server\",\n  required: true,\n  selector: {\n    text: {}\n  }\n}, {\n  name: \"type\",\n  required: true,\n  type: \"select\",\n  options: [[SupervisorMountType.CIFS, localize(\"ui.panel.config.storage.network_mounts.mount_type.cifs\")], [SupervisorMountType.NFS, localize(\"ui.panel.config.storage.network_mounts.mount_type.nfs\")]]\n}, ...(mountType === \"nfs\" ? [{\n  name: \"path\",\n  required: true,\n  selector: {\n    text: {}\n  }\n}] : mountType === \"cifs\" ? [...(showCIFSVersion ? [{\n  name: \"version\",\n  required: true,\n  selector: {\n    select: {\n      options: [{\n        label: localize(\"ui.panel.config.storage.network_mounts.cifs_versions.auto\"),\n        value: \"auto\"\n      }, {\n        label: localize(\"ui.panel.config.storage.network_mounts.cifs_versions.legacy\", {\n          version: \"2.0\"\n        }),\n        value: \"2.0\"\n      }, {\n        label: localize(\"ui.panel.config.storage.network_mounts.cifs_versions.legacy\", {\n          version: \"1.0\"\n        }),\n        value: \"1.0\"\n      }],\n      mode: \"dropdown\"\n    }\n  }\n}] : []), {\n  name: \"share\",\n  required: true,\n  selector: {\n    text: {}\n  }\n}, {\n  name: \"username\",\n  required: false,\n  selector: {\n    text: {}\n  }\n}, {\n  name: \"password\",\n  required: false,\n  selector: {\n    text: {\n      type: \"password\"\n    }\n  }\n}] : [])]);\nlet ViewMountDialog = _decorate([customElement(\"dialog-mount-view\")], function (_initialize, _LitElement) {\n  class ViewMountDialog extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: ViewMountDialog,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_data\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_waiting\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_error\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_validationError\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_validationWarning\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_existing\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_showCIFSVersion\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_reloadMounts\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"showDialog\",\n      value: async function showDialog(dialogParams) {\n        var _dialogParams$mount;\n        this._data = dialogParams.mount;\n        this._existing = dialogParams.mount !== undefined;\n        this._reloadMounts = dialogParams.reloadMounts;\n        if (((_dialogParams$mount = dialogParams.mount) === null || _dialogParams$mount === void 0 ? void 0 : _dialogParams$mount.type) === \"cifs\" && dialogParams.mount.version && dialogParams.mount.version !== \"auto\") {\n          this._showCIFSVersion = true;\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"closeDialog\",\n      value: function closeDialog() {\n        this._data = undefined;\n        this._waiting = undefined;\n        this._error = undefined;\n        this._validationError = undefined;\n        this._validationWarning = undefined;\n        this._existing = undefined;\n        this._showCIFSVersion = undefined;\n        this._reloadMounts = undefined;\n        fireEvent(this, \"dialog-closed\", {\n          dialog: this.localName\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var _this$_data;\n        if (this._existing === undefined) {\n          return nothing;\n        }\n        return html`\n      <ha-dialog\n        open\n        scrimClickAction\n        escapeKeyAction\n        .heading=${this._existing ? this.hass.localize(\"ui.panel.config.storage.network_mounts.update_title\") : this.hass.localize(\"ui.panel.config.storage.network_mounts.add_title\")}\n        @closed=${this.closeDialog}\n      >\n        <ha-dialog-header slot=\"heading\">\n          <span slot=\"title\"\n            >${this._existing ? this.hass.localize(\"ui.panel.config.storage.network_mounts.update_title\") : this.hass.localize(\"ui.panel.config.storage.network_mounts.add_title\")}\n          </span>\n          <a\n            slot=\"actionItems\"\n            class=\"header_button\"\n            href=${documentationUrl(this.hass, \"/common-tasks/os#network-storage\")}\n            title=${this.hass.localize(\"ui.panel.config.storage.network_mounts.documentation\")}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            dir=${computeRTLDirection(this.hass)}\n          >\n            <ha-icon-button .path=${mdiHelpCircle}></ha-icon-button>\n          </a>\n        </ha-dialog-header>\n        ${this._error ? html`<ha-alert alert-type=\"error\">${this._error}</ha-alert>` : nothing}\n        <ha-form\n          .data=${this._data}\n          .schema=${mountSchema(this.hass.localize, this._existing, (_this$_data = this._data) === null || _this$_data === void 0 ? void 0 : _this$_data.type, this._showCIFSVersion)}\n          .error=${this._validationError}\n          .warning=${this._validationWarning}\n          .computeLabel=${this._computeLabelCallback}\n          .computeHelper=${this._computeHelperCallback}\n          .computeError=${this._computeErrorCallback}\n          .computeWarning=${this._computeWarningCallback}\n          @value-changed=${this._valueChanged}\n          dialogInitialFocus\n        ></ha-form>\n        <div slot=\"secondaryAction\">\n          <mwc-button @click=${this.closeDialog} dialogInitialFocus>\n            ${this.hass.localize(\"ui.common.cancel\")}\n          </mwc-button>\n          ${this._existing ? html`<mwc-button @click=${this._deleteMount} class=\"delete-btn\">\n                ${this.hass.localize(\"ui.common.delete\")}\n              </mwc-button>` : nothing}\n        </div>\n\n        <ha-progress-button\n          .progress=${this._waiting}\n          slot=\"primaryAction\"\n          @click=${this._connectMount}\n        >\n          ${this._existing ? this.hass.localize(\"ui.panel.config.storage.network_mounts.update\") : this.hass.localize(\"ui.panel.config.storage.network_mounts.connect\")}\n        </ha-progress-button>\n      </ha-dialog>\n    `;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_computeLabelCallback\",\n      value() {\n        return schema => this.hass.localize(`ui.panel.config.storage.network_mounts.options.${schema.name}.title`);\n      }\n    }, {\n      kind: \"field\",\n      key: \"_computeHelperCallback\",\n      value() {\n        return schema => this.hass.localize(`ui.panel.config.storage.network_mounts.options.${schema.name}.description`);\n      }\n    }, {\n      kind: \"field\",\n      key: \"_computeErrorCallback\",\n      value() {\n        return error => this.hass.localize(\n        // @ts-ignore\n        `ui.panel.config.storage.network_mounts.errors.${error}`) || error;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_computeWarningCallback\",\n      value() {\n        return warning => this.hass.localize(\n        // @ts-ignore\n        `ui.panel.config.storage.network_mounts.warnings.${warning}`) || warning;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_valueChanged\",\n      value: function _valueChanged(ev) {\n        var _this$_data2, _this$_data3, _this$_data4;\n        this._validationError = {};\n        this._validationWarning = {};\n        this._data = ev.detail.value;\n        if ((_this$_data2 = this._data) !== null && _this$_data2 !== void 0 && _this$_data2.name && !/^\\w+$/.test(this._data.name)) {\n          this._validationError.name = \"invalid_name\";\n        }\n        if (((_this$_data3 = this._data) === null || _this$_data3 === void 0 ? void 0 : _this$_data3.type) === \"cifs\" && !this._data.version) {\n          this._data.version = \"auto\";\n        }\n        if (((_this$_data4 = this._data) === null || _this$_data4 === void 0 ? void 0 : _this$_data4.type) === \"cifs\" && this._data.version && [\"1.0\", \"2.0\"].includes(this._data.version)) {\n          this._validationWarning.version = \"not_recomeded_cifs_version\";\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_connectMount\",\n      value: async function _connectMount(ev) {\n        const progressButton = ev.target;\n        this._error = undefined;\n        this._waiting = true;\n        const mountData = {\n          ...this._data\n        };\n        if (mountData.type === \"cifs\" && mountData.version === \"auto\") {\n          mountData.version = undefined;\n        }\n        try {\n          if (this._existing) {\n            await updateSupervisorMount(this.hass, mountData);\n          } else {\n            await createSupervisorMount(this.hass, mountData);\n          }\n        } catch (err) {\n          this._error = extractApiErrorMessage(err);\n          this._waiting = false;\n          progressButton.actionError();\n          if (this._data.type === \"cifs\" && !this._showCIFSVersion) {\n            this._showCIFSVersion = true;\n          }\n          return;\n        }\n        if (this._reloadMounts) {\n          this._reloadMounts();\n        }\n        this.closeDialog();\n      }\n    }, {\n      kind: \"method\",\n      key: \"_deleteMount\",\n      value: async function _deleteMount() {\n        this._error = undefined;\n        this._waiting = true;\n        try {\n          await removeSupervisorMount(this.hass, this._data.name);\n        } catch (err) {\n          this._error = extractApiErrorMessage(err);\n          this._waiting = false;\n          return;\n        }\n        if (this._reloadMounts) {\n          this._reloadMounts();\n        }\n        this.closeDialog();\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [haStyle, haStyleDialog, css`\n        ha-icon-button {\n          color: var(--primary-text-color);\n        }\n        .delete-btn {\n          --mdc-theme-primary: var(--error-color);\n        }\n      `];\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","nothing","customElement","property","state","memoizeOne","fireEvent","computeRTLDirection","extractApiErrorMessage","createSupervisorMount","removeSupervisorMount","SupervisorMountType","SupervisorMountUsage","updateSupervisorMount","haStyle","haStyleDialog","documentationUrl","mountSchema","localize","existing","mountType","showCIFSVersion","name","required","disabled","selector","text","type","options","BACKUP","MEDIA","SHARE","CIFS","NFS","select","label","value","version","mode","ViewMountDialog","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","showDialog","dialogParams","_dialogParams$mount","_data","mount","_existing","undefined","_reloadMounts","reloadMounts","_showCIFSVersion","closeDialog","_waiting","_error","_validationError","_validationWarning","dialog","localName","render","_this$_data","hass","mdiHelpCircle","_computeLabelCallback","_computeHelperCallback","_computeErrorCallback","_computeWarningCallback","_valueChanged","_deleteMount","_connectMount","schema","error","warning","ev","_this$_data2","_this$_data3","_this$_data4","detail","test","includes","progressButton","target","mountData","err","actionError","static","styles"],"sources":["/Users/sercanardil/Desktop/frontend/src/panels/config/storage/dialog-mount-view.ts"],"sourcesContent":["import { mdiHelpCircle } from \"@mdi/js\";\nimport { css, CSSResultGroup, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport { LocalizeFunc } from \"../../../common/translations/localize\";\nimport { computeRTLDirection } from \"../../../common/util/compute_rtl\";\nimport \"../../../components/buttons/ha-progress-button\";\nimport type { HaProgressButton } from \"../../../components/buttons/ha-progress-button\";\nimport \"../../../components/ha-form/ha-form\";\nimport type { SchemaUnion } from \"../../../components/ha-form/types\";\nimport \"../../../components/ha-icon-button\";\nimport { extractApiErrorMessage } from \"../../../data/hassio/common\";\nimport {\n  createSupervisorMount,\n  removeSupervisorMount,\n  SupervisorMountRequestParams,\n  SupervisorMountType,\n  SupervisorMountUsage,\n  updateSupervisorMount,\n} from \"../../../data/supervisor/mounts\";\nimport { haStyle, haStyleDialog } from \"../../../resources/styles\";\nimport { HomeAssistant } from \"../../../types\";\nimport { documentationUrl } from \"../../../util/documentation-url\";\nimport { MountViewDialogParams } from \"./show-dialog-view-mount\";\n\nconst mountSchema = memoizeOne(\n  (\n    localize: LocalizeFunc,\n    existing?: boolean,\n    mountType?: SupervisorMountType,\n    showCIFSVersion?: boolean\n  ) =>\n    [\n      {\n        name: \"name\",\n        required: true,\n        disabled: existing,\n        selector: { text: {} },\n      },\n      {\n        name: \"usage\",\n        required: true,\n        type: \"select\",\n        options: [\n          [\n            SupervisorMountUsage.BACKUP,\n            localize(\n              \"ui.panel.config.storage.network_mounts.mount_usage.backup\"\n            ),\n          ],\n          [\n            SupervisorMountUsage.MEDIA,\n            localize(\n              \"ui.panel.config.storage.network_mounts.mount_usage.media\"\n            ),\n          ],\n          [\n            SupervisorMountUsage.SHARE,\n            localize(\n              \"ui.panel.config.storage.network_mounts.mount_usage.share\"\n            ),\n          ],\n        ] as const,\n      },\n      {\n        name: \"server\",\n        required: true,\n        selector: { text: {} },\n      },\n      {\n        name: \"type\",\n        required: true,\n        type: \"select\",\n        options: [\n          [\n            SupervisorMountType.CIFS,\n            localize(\"ui.panel.config.storage.network_mounts.mount_type.cifs\"),\n          ],\n          [\n            SupervisorMountType.NFS,\n            localize(\"ui.panel.config.storage.network_mounts.mount_type.nfs\"),\n          ],\n        ],\n      },\n      ...(mountType === \"nfs\"\n        ? ([\n            {\n              name: \"path\",\n              required: true,\n              selector: { text: {} },\n            },\n          ] as const)\n        : mountType === \"cifs\"\n          ? ([\n              ...(showCIFSVersion\n                ? ([\n                    {\n                      name: \"version\",\n                      required: true,\n                      selector: {\n                        select: {\n                          options: [\n                            {\n                              label: localize(\n                                \"ui.panel.config.storage.network_mounts.cifs_versions.auto\"\n                              ),\n                              value: \"auto\",\n                            },\n                            {\n                              label: localize(\n                                \"ui.panel.config.storage.network_mounts.cifs_versions.legacy\",\n                                { version: \"2.0\" }\n                              ),\n                              value: \"2.0\",\n                            },\n                            {\n                              label: localize(\n                                \"ui.panel.config.storage.network_mounts.cifs_versions.legacy\",\n                                { version: \"1.0\" }\n                              ),\n                              value: \"1.0\",\n                            },\n                          ],\n                          mode: \"dropdown\",\n                        },\n                      },\n                    },\n                  ] as const)\n                : ([] as const)),\n              {\n                name: \"share\",\n                required: true,\n                selector: { text: {} },\n              },\n              {\n                name: \"username\",\n                required: false,\n                selector: { text: {} },\n              },\n              {\n                name: \"password\",\n                required: false,\n                selector: { text: { type: \"password\" } },\n              },\n            ] as const)\n          : ([] as const)),\n    ] as const\n);\n\n@customElement(\"dialog-mount-view\")\nclass ViewMountDialog extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @state() private _data?: SupervisorMountRequestParams;\n\n  @state() private _waiting?: boolean;\n\n  @state() private _error?: string;\n\n  @state() private _validationError?: Record<string, string>;\n\n  @state() private _validationWarning?: Record<string, string>;\n\n  @state() private _existing?: boolean;\n\n  @state() private _showCIFSVersion?: boolean;\n\n  @state() private _reloadMounts?: () => void;\n\n  public async showDialog(\n    dialogParams: MountViewDialogParams\n  ): Promise<Promise<void>> {\n    this._data = dialogParams.mount;\n    this._existing = dialogParams.mount !== undefined;\n    this._reloadMounts = dialogParams.reloadMounts;\n    if (\n      dialogParams.mount?.type === \"cifs\" &&\n      dialogParams.mount.version &&\n      dialogParams.mount.version !== \"auto\"\n    ) {\n      this._showCIFSVersion = true;\n    }\n  }\n\n  public closeDialog(): void {\n    this._data = undefined;\n    this._waiting = undefined;\n    this._error = undefined;\n    this._validationError = undefined;\n    this._validationWarning = undefined;\n    this._existing = undefined;\n    this._showCIFSVersion = undefined;\n    this._reloadMounts = undefined;\n    fireEvent(this, \"dialog-closed\", { dialog: this.localName });\n  }\n\n  protected render() {\n    if (this._existing === undefined) {\n      return nothing;\n    }\n    return html`\n      <ha-dialog\n        open\n        scrimClickAction\n        escapeKeyAction\n        .heading=${this._existing\n          ? this.hass.localize(\n              \"ui.panel.config.storage.network_mounts.update_title\"\n            )\n          : this.hass.localize(\n              \"ui.panel.config.storage.network_mounts.add_title\"\n            )}\n        @closed=${this.closeDialog}\n      >\n        <ha-dialog-header slot=\"heading\">\n          <span slot=\"title\"\n            >${this._existing\n              ? this.hass.localize(\n                  \"ui.panel.config.storage.network_mounts.update_title\"\n                )\n              : this.hass.localize(\n                  \"ui.panel.config.storage.network_mounts.add_title\"\n                )}\n          </span>\n          <a\n            slot=\"actionItems\"\n            class=\"header_button\"\n            href=${documentationUrl(\n              this.hass,\n              \"/common-tasks/os#network-storage\"\n            )}\n            title=${this.hass.localize(\n              \"ui.panel.config.storage.network_mounts.documentation\"\n            )}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            dir=${computeRTLDirection(this.hass)}\n          >\n            <ha-icon-button .path=${mdiHelpCircle}></ha-icon-button>\n          </a>\n        </ha-dialog-header>\n        ${this._error\n          ? html`<ha-alert alert-type=\"error\">${this._error}</ha-alert>`\n          : nothing}\n        <ha-form\n          .data=${this._data}\n          .schema=${mountSchema(\n            this.hass.localize,\n            this._existing,\n            this._data?.type,\n            this._showCIFSVersion\n          )}\n          .error=${this._validationError}\n          .warning=${this._validationWarning}\n          .computeLabel=${this._computeLabelCallback}\n          .computeHelper=${this._computeHelperCallback}\n          .computeError=${this._computeErrorCallback}\n          .computeWarning=${this._computeWarningCallback}\n          @value-changed=${this._valueChanged}\n          dialogInitialFocus\n        ></ha-form>\n        <div slot=\"secondaryAction\">\n          <mwc-button @click=${this.closeDialog} dialogInitialFocus>\n            ${this.hass.localize(\"ui.common.cancel\")}\n          </mwc-button>\n          ${this._existing\n            ? html`<mwc-button @click=${this._deleteMount} class=\"delete-btn\">\n                ${this.hass.localize(\"ui.common.delete\")}\n              </mwc-button>`\n            : nothing}\n        </div>\n\n        <ha-progress-button\n          .progress=${this._waiting}\n          slot=\"primaryAction\"\n          @click=${this._connectMount}\n        >\n          ${this._existing\n            ? this.hass.localize(\n                \"ui.panel.config.storage.network_mounts.update\"\n              )\n            : this.hass.localize(\n                \"ui.panel.config.storage.network_mounts.connect\"\n              )}\n        </ha-progress-button>\n      </ha-dialog>\n    `;\n  }\n\n  private _computeLabelCallback = (\n    // @ts-ignore\n    schema: SchemaUnion<ReturnType<typeof mountSchema>>\n  ): string =>\n    this.hass.localize(\n      `ui.panel.config.storage.network_mounts.options.${schema.name}.title`\n    );\n\n  private _computeHelperCallback = (\n    // @ts-ignore\n    schema: SchemaUnion<ReturnType<typeof mountSchema>>\n  ): string =>\n    this.hass.localize(\n      `ui.panel.config.storage.network_mounts.options.${schema.name}.description`\n    );\n\n  private _computeErrorCallback = (error: string): string =>\n    this.hass.localize(\n      // @ts-ignore\n      `ui.panel.config.storage.network_mounts.errors.${error}`\n    ) || error;\n\n  private _computeWarningCallback = (warning: string): string =>\n    this.hass.localize(\n      // @ts-ignore\n      `ui.panel.config.storage.network_mounts.warnings.${warning}`\n    ) || warning;\n\n  private _valueChanged(ev: CustomEvent) {\n    this._validationError = {};\n    this._validationWarning = {};\n    this._data = ev.detail.value;\n    if (this._data?.name && !/^\\w+$/.test(this._data.name)) {\n      this._validationError.name = \"invalid_name\";\n    }\n    if (this._data?.type === \"cifs\" && !this._data.version) {\n      this._data.version = \"auto\";\n    }\n    if (\n      this._data?.type === \"cifs\" &&\n      this._data.version &&\n      [\"1.0\", \"2.0\"].includes(this._data.version)\n    ) {\n      this._validationWarning.version = \"not_recomeded_cifs_version\";\n    }\n  }\n\n  private async _connectMount(ev) {\n    const progressButton = ev.target as HaProgressButton;\n    this._error = undefined;\n    this._waiting = true;\n    const mountData = { ...this._data! };\n    if (mountData.type === \"cifs\" && mountData.version === \"auto\") {\n      mountData.version = undefined;\n    }\n    try {\n      if (this._existing) {\n        await updateSupervisorMount(this.hass, mountData);\n      } else {\n        await createSupervisorMount(this.hass, mountData);\n      }\n    } catch (err: any) {\n      this._error = extractApiErrorMessage(err);\n      this._waiting = false;\n      progressButton.actionError();\n      if (this._data!.type === \"cifs\" && !this._showCIFSVersion) {\n        this._showCIFSVersion = true;\n      }\n      return;\n    }\n    if (this._reloadMounts) {\n      this._reloadMounts();\n    }\n    this.closeDialog();\n  }\n\n  private async _deleteMount() {\n    this._error = undefined;\n    this._waiting = true;\n    try {\n      await removeSupervisorMount(this.hass, this._data!.name);\n    } catch (err: any) {\n      this._error = extractApiErrorMessage(err);\n      this._waiting = false;\n      return;\n    }\n    if (this._reloadMounts) {\n      this._reloadMounts();\n    }\n    this.closeDialog();\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyle,\n      haStyleDialog,\n      css`\n        ha-icon-button {\n          color: var(--primary-text-color);\n        }\n        .delete-btn {\n          --mdc-theme-primary: var(--error-color);\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"dialog-mount-view\": ViewMountDialog;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}