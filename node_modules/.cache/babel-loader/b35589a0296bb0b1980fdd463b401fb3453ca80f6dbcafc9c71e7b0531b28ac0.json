{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/helpers/regeneratorRuntime\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _createForOfIteratorHelper from \"@babel/runtime/helpers/createForOfIteratorHelper\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _decorate from \"@babel/runtime/helpers/decorate\";\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4;\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport { endOfToday, isToday, startOfToday } from \"date-fns\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport memoizeOne from \"memoize-one\";\nimport { hex2rgb, lab2rgb, rgb2hex, rgb2lab } from \"../../../../common/color/convert-color\";\nimport { labBrighten, labDarken } from \"../../../../common/color/lab\";\nimport { formatNumber } from \"../../../../common/number/format_number\";\nimport \"../../../../components/chart/ha-chart-base\";\nimport \"../../../../components/ha-card\";\nimport { getEnergyDataCollection, getEnergyWaterUnit } from \"../../../../data/energy\";\nimport { getStatisticLabel } from \"../../../../data/recorder\";\nimport { SubscribeMixin } from \"../../../../mixins/subscribe-mixin\";\nimport { hasConfigChanged } from \"../../common/has-changed\";\nimport { getCommonOptions } from \"./common/energy-chart-options\";\nexport var HuiEnergyWaterGraphCard = _decorate([customElement(\"hui-energy-water-graph-card\")], function (_initialize, _SubscribeMixin) {\n  var HuiEnergyWaterGraphCard = /*#__PURE__*/function (_SubscribeMixin2) {\n    _inherits(HuiEnergyWaterGraphCard, _SubscribeMixin2);\n    function HuiEnergyWaterGraphCard() {\n      var _this;\n      _classCallCheck(this, HuiEnergyWaterGraphCard);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, HuiEnergyWaterGraphCard, [].concat(args));\n      _initialize(_assertThisInitialized(_this));\n      return _this;\n    }\n    return _createClass(HuiEnergyWaterGraphCard);\n  }(_SubscribeMixin);\n  return {\n    F: HuiEnergyWaterGraphCard,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_config\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_chartData\",\n      value: function value() {\n        return {\n          datasets: []\n        };\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_start\",\n      value: function value() {\n        return startOfToday();\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_end\",\n      value: function value() {\n        return endOfToday();\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_compareStart\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_compareEnd\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_unit\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"hassSubscribeRequiredHostProps\",\n      value: function value() {\n        return [\"_config\"];\n      }\n    }, {\n      kind: \"method\",\n      key: \"hassSubscribe\",\n      value: function hassSubscribe() {\n        var _this$_config,\n          _this2 = this;\n        return [getEnergyDataCollection(this.hass, {\n          key: (_this$_config = this._config) === null || _this$_config === void 0 ? void 0 : _this$_config.collection_key\n        }).subscribe(function (data) {\n          return _this2._getStatistics(data);\n        })];\n      }\n    }, {\n      kind: \"method\",\n      key: \"getCardSize\",\n      value: function getCardSize() {\n        return 3;\n      }\n    }, {\n      kind: \"method\",\n      key: \"setConfig\",\n      value: function setConfig(config) {\n        this._config = config;\n      }\n    }, {\n      kind: \"method\",\n      key: \"shouldUpdate\",\n      value: function shouldUpdate(changedProps) {\n        return hasConfigChanged(this, changedProps) || changedProps.size > 1 || !changedProps.has(\"hass\");\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this.hass || !this._config) {\n          return nothing;\n        }\n        return html(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      <ha-card>\\n        \", \"\\n        <div\\n          class=\\\"content \", \"\\\"\\n        >\\n          <ha-chart-base\\n            .hass=\", \"\\n            .data=\", \"\\n            .options=\", \"\\n            chart-type=\\\"bar\\\"\\n          ></ha-chart-base>\\n          \", \"\\n        </div>\\n      </ha-card>\\n    \"])), this._config.title ? html(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"<h1 class=\\\"card-header\\\">\", \"</h1>\"])), this._config.title) : \"\", classMap({\n          \"has-header\": !!this._config.title\n        }), this.hass, this._chartData, this._createOptions(this._start, this._end, this.hass.locale, this.hass.config, this._unit, this._compareStart, this._compareEnd), !this._chartData.datasets.length ? html(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"<div class=\\\"no-data\\\">\\n                \", \"\\n              </div>\"])), isToday(this._start) ? this.hass.localize(\"ui.panel.lovelace.cards.energy.no_data\") : this.hass.localize(\"ui.panel.lovelace.cards.energy.no_data_period\")) : \"\");\n      }\n    }, {\n      kind: \"field\",\n      key: \"_createOptions\",\n      value: function value() {\n        var _this3 = this;\n        return memoizeOne(function (start, end, locale, config, unit, compareStart, compareEnd) {\n          var commonOptions = getCommonOptions(start, end, locale, config, unit, compareStart, compareEnd);\n          var options = Object.assign(Object.assign({}, commonOptions), {}, {\n            plugins: Object.assign(Object.assign({}, commonOptions.plugins), {}, {\n              tooltip: Object.assign(Object.assign({}, commonOptions.plugins.tooltip), {}, {\n                callbacks: Object.assign(Object.assign({}, commonOptions.plugins.tooltip.callbacks), {}, {\n                  footer: function footer(contexts) {\n                    if (contexts.length < 2) {\n                      return [];\n                    }\n                    var total = 0;\n                    var _iterator = _createForOfIteratorHelper(contexts),\n                      _step;\n                    try {\n                      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                        var context = _step.value;\n                        total += context.dataset.data[context.dataIndex].y;\n                      }\n                    } catch (err) {\n                      _iterator.e(err);\n                    } finally {\n                      _iterator.f();\n                    }\n                    if (total === 0) {\n                      return [];\n                    }\n                    return [_this3.hass.localize(\"ui.panel.lovelace.cards.energy.energy_water_graph.total_consumed\", {\n                      num: formatNumber(total, locale),\n                      unit: unit\n                    })];\n                  }\n                })\n              })\n            })\n          });\n          return options;\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_getStatistics\",\n      value: function () {\n        var _getStatistics2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(energyData) {\n          var waterSources, datasets, computedStyles, waterColor;\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                waterSources = energyData.prefs.energy_sources.filter(function (source) {\n                  return source.type === \"water\";\n                });\n                this._unit = getEnergyWaterUnit(this.hass);\n                datasets = [];\n                computedStyles = getComputedStyle(this);\n                waterColor = computedStyles.getPropertyValue(\"--energy-water-color\").trim();\n                datasets.push.apply(datasets, _toConsumableArray(this._processDataSet(energyData.stats, energyData.statsMetadata, waterSources, waterColor, computedStyles)));\n                if (energyData.statsCompare) {\n                  // Add empty dataset to align the bars\n                  datasets.push({\n                    order: 0,\n                    data: []\n                  });\n                  datasets.push({\n                    order: 999,\n                    data: [],\n                    xAxisID: \"xAxisCompare\"\n                  });\n                  datasets.push.apply(datasets, _toConsumableArray(this._processDataSet(energyData.statsCompare, energyData.statsMetadata, waterSources, waterColor, computedStyles, true)));\n                }\n                this._start = energyData.start;\n                this._end = energyData.end || endOfToday();\n                this._compareStart = energyData.startCompare;\n                this._compareEnd = energyData.endCompare;\n                this._chartData = {\n                  datasets: datasets\n                };\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee, this);\n        }));\n        function _getStatistics(_x) {\n          return _getStatistics2.apply(this, arguments);\n        }\n        return _getStatistics;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"_processDataSet\",\n      value: function _processDataSet(statistics, statisticsMetaData, waterSources, waterColor, computedStyles) {\n        var _this4 = this;\n        var compare = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n        var data = [];\n        waterSources.forEach(function (source, idx) {\n          var borderColor = computedStyles.getPropertyValue(\"--energy-water-color-\" + idx).trim();\n          if (borderColor.length === 0) {\n            var modifiedColor = idx > 0 ? _this4.hass.themes.darkMode ? labBrighten(rgb2lab(hex2rgb(waterColor)), idx) : labDarken(rgb2lab(hex2rgb(waterColor)), idx) : undefined;\n            borderColor = modifiedColor ? rgb2hex(lab2rgb(modifiedColor)) : waterColor;\n          }\n          var prevStart = null;\n          var waterConsumptionData = [];\n\n          // Process water consumption data.\n          if (source.stat_energy_from in statistics) {\n            var stats = statistics[source.stat_energy_from];\n            var end;\n            var _iterator2 = _createForOfIteratorHelper(stats),\n              _step2;\n            try {\n              for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                var point = _step2.value;\n                if (point.change === null || point.change === undefined) {\n                  continue;\n                }\n                if (prevStart === point.start) {\n                  continue;\n                }\n                var date = new Date(point.start);\n                waterConsumptionData.push({\n                  x: date.getTime(),\n                  y: point.change\n                });\n                prevStart = point.start;\n                end = point.end;\n              }\n            } catch (err) {\n              _iterator2.e(err);\n            } finally {\n              _iterator2.f();\n            }\n            if (waterConsumptionData.length === 1) {\n              waterConsumptionData.push({\n                x: end,\n                y: 0\n              });\n            }\n          }\n          data.push({\n            label: getStatisticLabel(_this4.hass, source.stat_energy_from, statisticsMetaData[source.stat_energy_from]),\n            borderColor: compare ? borderColor + \"7F\" : borderColor,\n            backgroundColor: compare ? borderColor + \"32\" : borderColor + \"7F\",\n            data: waterConsumptionData,\n            order: 1,\n            stack: \"water\",\n            xAxisID: compare ? \"xAxisCompare\" : undefined\n          });\n        });\n        return data;\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n      ha-card {\\n        height: 100%;\\n      }\\n      .card-header {\\n        padding-bottom: 0;\\n      }\\n      .content {\\n        padding: 16px;\\n      }\\n      .has-header {\\n        padding-top: 0;\\n      }\\n      .no-data {\\n        position: absolute;\\n        height: 100%;\\n        top: 0;\\n        left: 0;\\n        right: 0;\\n        display: flex;\\n        justify-content: center;\\n        align-items: center;\\n        padding: 20%;\\n        margin-left: 32px;\\n        margin-inline-start: 32px;\\n        margin-inline-end: initial;\\n        box-sizing: border-box;\\n      }\\n    \"])));\n      }\n    }]\n  };\n}, SubscribeMixin(LitElement));","map":{"version":3,"names":["endOfToday","isToday","startOfToday","css","html","LitElement","nothing","customElement","property","state","classMap","memoizeOne","hex2rgb","lab2rgb","rgb2hex","rgb2lab","labBrighten","labDarken","formatNumber","getEnergyDataCollection","getEnergyWaterUnit","getStatisticLabel","SubscribeMixin","hasConfigChanged","getCommonOptions","HuiEnergyWaterGraphCard","_decorate","_initialize","_SubscribeMixin","_SubscribeMixin2","_inherits","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_assertThisInitialized","_createClass","F","d","kind","decorators","attribute","key","value","datasets","hassSubscribe","_this$_config","_this2","hass","_config","collection_key","subscribe","data","_getStatistics","getCardSize","setConfig","config","shouldUpdate","changedProps","size","has","render","_templateObject","_taggedTemplateLiteral","title","_templateObject2","_chartData","_createOptions","_start","_end","locale","_unit","_compareStart","_compareEnd","_templateObject3","localize","_this3","start","end","unit","compareStart","compareEnd","commonOptions","options","Object","assign","plugins","tooltip","callbacks","footer","contexts","total","_iterator","_createForOfIteratorHelper","_step","s","n","done","context","dataset","dataIndex","y","err","e","f","num","_getStatistics2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","energyData","waterSources","computedStyles","waterColor","wrap","_callee$","_context","prev","next","prefs","energy_sources","filter","source","type","getComputedStyle","getPropertyValue","trim","push","apply","_toConsumableArray","_processDataSet","stats","statsMetadata","statsCompare","order","xAxisID","startCompare","endCompare","stop","_x","statistics","statisticsMetaData","_this4","compare","undefined","forEach","idx","borderColor","modifiedColor","themes","darkMode","prevStart","waterConsumptionData","stat_energy_from","_iterator2","_step2","point","change","date","Date","x","getTime","label","backgroundColor","stack","static","styles","_templateObject4"],"sources":["/workspaces/frontend/src/panels/lovelace/cards/energy/hui-energy-water-graph-card.ts"],"sourcesContent":["import {\n  ChartData,\n  ChartDataset,\n  ChartOptions,\n  ScatterDataPoint,\n} from \"chart.js\";\nimport { endOfToday, isToday, startOfToday } from \"date-fns\";\nimport { HassConfig, UnsubscribeFunc } from \"home-assistant-js-websocket\";\nimport {\n  css,\n  CSSResultGroup,\n  html,\n  LitElement,\n  nothing,\n  PropertyValues,\n} from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport memoizeOne from \"memoize-one\";\nimport {\n  hex2rgb,\n  lab2rgb,\n  rgb2hex,\n  rgb2lab,\n} from \"../../../../common/color/convert-color\";\nimport { labBrighten, labDarken } from \"../../../../common/color/lab\";\nimport { formatNumber } from \"../../../../common/number/format_number\";\nimport \"../../../../components/chart/ha-chart-base\";\nimport \"../../../../components/ha-card\";\nimport {\n  EnergyData,\n  getEnergyDataCollection,\n  getEnergyWaterUnit,\n  WaterSourceTypeEnergyPreference,\n} from \"../../../../data/energy\";\nimport {\n  getStatisticLabel,\n  Statistics,\n  StatisticsMetaData,\n} from \"../../../../data/recorder\";\nimport { FrontendLocaleData } from \"../../../../data/translation\";\nimport { SubscribeMixin } from \"../../../../mixins/subscribe-mixin\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { LovelaceCard } from \"../../types\";\nimport { EnergyWaterGraphCardConfig } from \"../types\";\nimport { hasConfigChanged } from \"../../common/has-changed\";\nimport { getCommonOptions } from \"./common/energy-chart-options\";\n\n@customElement(\"hui-energy-water-graph-card\")\nexport class HuiEnergyWaterGraphCard\n  extends SubscribeMixin(LitElement)\n  implements LovelaceCard\n{\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @state() private _config?: EnergyWaterGraphCardConfig;\n\n  @state() private _chartData: ChartData = {\n    datasets: [],\n  };\n\n  @state() private _start = startOfToday();\n\n  @state() private _end = endOfToday();\n\n  @state() private _compareStart?: Date;\n\n  @state() private _compareEnd?: Date;\n\n  @state() private _unit?: string;\n\n  protected hassSubscribeRequiredHostProps = [\"_config\"];\n\n  public hassSubscribe(): UnsubscribeFunc[] {\n    return [\n      getEnergyDataCollection(this.hass, {\n        key: this._config?.collection_key,\n      }).subscribe((data) => this._getStatistics(data)),\n    ];\n  }\n\n  public getCardSize(): Promise<number> | number {\n    return 3;\n  }\n\n  public setConfig(config: EnergyWaterGraphCardConfig): void {\n    this._config = config;\n  }\n\n  protected shouldUpdate(changedProps: PropertyValues): boolean {\n    return (\n      hasConfigChanged(this, changedProps) ||\n      changedProps.size > 1 ||\n      !changedProps.has(\"hass\")\n    );\n  }\n\n  protected render() {\n    if (!this.hass || !this._config) {\n      return nothing;\n    }\n\n    return html`\n      <ha-card>\n        ${this._config.title\n          ? html`<h1 class=\"card-header\">${this._config.title}</h1>`\n          : \"\"}\n        <div\n          class=\"content ${classMap({\n            \"has-header\": !!this._config.title,\n          })}\"\n        >\n          <ha-chart-base\n            .hass=${this.hass}\n            .data=${this._chartData}\n            .options=${this._createOptions(\n              this._start,\n              this._end,\n              this.hass.locale,\n              this.hass.config,\n              this._unit,\n              this._compareStart,\n              this._compareEnd\n            )}\n            chart-type=\"bar\"\n          ></ha-chart-base>\n          ${!this._chartData.datasets.length\n            ? html`<div class=\"no-data\">\n                ${isToday(this._start)\n                  ? this.hass.localize(\"ui.panel.lovelace.cards.energy.no_data\")\n                  : this.hass.localize(\n                      \"ui.panel.lovelace.cards.energy.no_data_period\"\n                    )}\n              </div>`\n            : \"\"}\n        </div>\n      </ha-card>\n    `;\n  }\n\n  private _createOptions = memoizeOne(\n    (\n      start: Date,\n      end: Date,\n      locale: FrontendLocaleData,\n      config: HassConfig,\n      unit?: string,\n      compareStart?: Date,\n      compareEnd?: Date\n    ): ChartOptions => {\n      const commonOptions = getCommonOptions(\n        start,\n        end,\n        locale,\n        config,\n        unit,\n        compareStart,\n        compareEnd\n      );\n      const options: ChartOptions = {\n        ...commonOptions,\n        plugins: {\n          ...commonOptions.plugins,\n          tooltip: {\n            ...commonOptions.plugins!.tooltip,\n            callbacks: {\n              ...commonOptions.plugins!.tooltip!.callbacks,\n              footer: (contexts) => {\n                if (contexts.length < 2) {\n                  return [];\n                }\n                let total = 0;\n                for (const context of contexts) {\n                  total += (context.dataset.data[context.dataIndex] as any).y;\n                }\n                if (total === 0) {\n                  return [];\n                }\n                return [\n                  this.hass.localize(\n                    \"ui.panel.lovelace.cards.energy.energy_water_graph.total_consumed\",\n                    { num: formatNumber(total, locale), unit }\n                  ),\n                ];\n              },\n            },\n          },\n        },\n      };\n      return options;\n    }\n  );\n\n  private async _getStatistics(energyData: EnergyData): Promise<void> {\n    const waterSources: WaterSourceTypeEnergyPreference[] =\n      energyData.prefs.energy_sources.filter(\n        (source) => source.type === \"water\"\n      ) as WaterSourceTypeEnergyPreference[];\n\n    this._unit = getEnergyWaterUnit(this.hass);\n\n    const datasets: ChartDataset<\"bar\", ScatterDataPoint[]>[] = [];\n\n    const computedStyles = getComputedStyle(this);\n    const waterColor = computedStyles\n      .getPropertyValue(\"--energy-water-color\")\n      .trim();\n\n    datasets.push(\n      ...this._processDataSet(\n        energyData.stats,\n        energyData.statsMetadata,\n        waterSources,\n        waterColor,\n        computedStyles\n      )\n    );\n\n    if (energyData.statsCompare) {\n      // Add empty dataset to align the bars\n      datasets.push({\n        order: 0,\n        data: [],\n      });\n      datasets.push({\n        order: 999,\n        data: [],\n        xAxisID: \"xAxisCompare\",\n      });\n\n      datasets.push(\n        ...this._processDataSet(\n          energyData.statsCompare,\n          energyData.statsMetadata,\n          waterSources,\n          waterColor,\n          computedStyles,\n          true\n        )\n      );\n    }\n\n    this._start = energyData.start;\n    this._end = energyData.end || endOfToday();\n\n    this._compareStart = energyData.startCompare;\n    this._compareEnd = energyData.endCompare;\n\n    this._chartData = {\n      datasets,\n    };\n  }\n\n  private _processDataSet(\n    statistics: Statistics,\n    statisticsMetaData: Record<string, StatisticsMetaData>,\n    waterSources: WaterSourceTypeEnergyPreference[],\n    waterColor: string,\n    computedStyles: CSSStyleDeclaration,\n    compare = false\n  ) {\n    const data: ChartDataset<\"bar\", ScatterDataPoint[]>[] = [];\n\n    waterSources.forEach((source, idx) => {\n      let borderColor = computedStyles\n        .getPropertyValue(\"--energy-water-color-\" + idx)\n        .trim();\n      if (borderColor.length === 0) {\n        const modifiedColor =\n          idx > 0\n            ? this.hass.themes.darkMode\n              ? labBrighten(rgb2lab(hex2rgb(waterColor)), idx)\n              : labDarken(rgb2lab(hex2rgb(waterColor)), idx)\n            : undefined;\n        borderColor = modifiedColor\n          ? rgb2hex(lab2rgb(modifiedColor))\n          : waterColor;\n      }\n\n      let prevStart: number | null = null;\n\n      const waterConsumptionData: ScatterDataPoint[] = [];\n\n      // Process water consumption data.\n      if (source.stat_energy_from in statistics) {\n        const stats = statistics[source.stat_energy_from];\n        let end;\n\n        for (const point of stats) {\n          if (point.change === null || point.change === undefined) {\n            continue;\n          }\n          if (prevStart === point.start) {\n            continue;\n          }\n          const date = new Date(point.start);\n          waterConsumptionData.push({\n            x: date.getTime(),\n            y: point.change,\n          });\n          prevStart = point.start;\n          end = point.end;\n        }\n        if (waterConsumptionData.length === 1) {\n          waterConsumptionData.push({\n            x: end,\n            y: 0,\n          });\n        }\n      }\n\n      data.push({\n        label: getStatisticLabel(\n          this.hass,\n          source.stat_energy_from,\n          statisticsMetaData[source.stat_energy_from]\n        ),\n        borderColor: compare ? borderColor + \"7F\" : borderColor,\n        backgroundColor: compare ? borderColor + \"32\" : borderColor + \"7F\",\n        data: waterConsumptionData,\n        order: 1,\n        stack: \"water\",\n        xAxisID: compare ? \"xAxisCompare\" : undefined,\n      });\n    });\n    return data;\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      ha-card {\n        height: 100%;\n      }\n      .card-header {\n        padding-bottom: 0;\n      }\n      .content {\n        padding: 16px;\n      }\n      .has-header {\n        padding-top: 0;\n      }\n      .no-data {\n        position: absolute;\n        height: 100%;\n        top: 0;\n        left: 0;\n        right: 0;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        padding: 20%;\n        margin-left: 32px;\n        margin-inline-start: 32px;\n        margin-inline-end: initial;\n        box-sizing: border-box;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-energy-water-graph-card\": HuiEnergyWaterGraphCard;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}