{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport { css, html, LitElement } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { isComponentLoaded } from \"../../../common/config/is_component_loaded\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport { protocolIntegrationPicked, PROTOCOL_INTEGRATIONS } from \"../../../common/integrations/protocolIntegrationPicked\";\nimport { shouldHandleRequestSelectedEvent } from \"../../../common/mwc/handle-request-selected-event\";\nimport { navigate } from \"../../../common/navigate\";\nimport { caseInsensitiveStringCompare } from \"../../../common/string/compare\";\nimport { localizeConfigFlowTitle } from \"../../../data/config_flow\";\nimport { domainToName, fetchIntegrationManifest } from \"../../../data/integration\";\nimport { showConfigFlowDialog } from \"../../../dialogs/config-flow/show-dialog-config-flow\";\nimport { haStyle } from \"../../../resources/styles\";\nimport { brandsUrl } from \"../../../util/brands-url\";\nimport \"./ha-integration-list-item\";\nimport { showYamlIntegrationDialog } from \"./show-add-integration-dialog\";\nconst standardToDomain = {\n  zigbee: \"zha\",\n  zwave: \"zwave_js\"\n};\nlet HaDomainIntegrations = _decorate([customElement(\"ha-domain-integrations\")], function (_initialize, _LitElement) {\n  class HaDomainIntegrations extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaDomainIntegrations,\n    d: [{\n      kind: \"field\",\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"domain\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"integration\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"flowsInProgress\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var _this$flowsInProgress, _this$integration, _this$hass$themes3, _this$flowsInProgress2, _this$integration$iot, _this$integration$iot2;\n        return html`<mwc-list>\n      ${(_this$flowsInProgress = this.flowsInProgress) !== null && _this$flowsInProgress !== void 0 && _this$flowsInProgress.length ? html`<h3>\n              ${this.hass.localize(\"ui.panel.config.integrations.discovered\")}\n            </h3>\n            ${this.flowsInProgress.map(flow => {\n          var _this$hass$themes;\n          return html`<mwc-list-item\n                  graphic=\"medium\"\n                  .flow=${flow}\n                  @request-selected=${this._flowInProgressPicked}\n                  hasMeta\n                >\n                  <img\n                    alt=\"\"\n                    slot=\"graphic\"\n                    loading=\"lazy\"\n                    src=${brandsUrl({\n            domain: flow.handler,\n            type: \"icon\",\n            useFallback: true,\n            darkOptimized: (_this$hass$themes = this.hass.themes) === null || _this$hass$themes === void 0 ? void 0 : _this$hass$themes.darkMode\n          })}\n                    crossorigin=\"anonymous\"\n                    referrerpolicy=\"no-referrer\"\n                  />\n                  <span\n                    >${localizeConfigFlowTitle(this.hass.localize, flow)}</span\n                  >\n                  <ha-icon-next slot=\"meta\"></ha-icon-next>\n                </mwc-list-item>`;\n        })}\n            <li divider role=\"separator\"></li>\n            ${this.integration && \"integrations\" in this.integration && this.integration.integrations ? html`<h3>\n                  ${this.hass.localize(\"ui.panel.config.integrations.available_integrations\")}\n                </h3>` : \"\"}` : \"\"}\n      ${(_this$integration = this.integration) !== null && _this$integration !== void 0 && _this$integration.iot_standards ? this.integration.iot_standards.filter(standard => PROTOCOL_INTEGRATIONS.includes(standardToDomain[standard] || standard)).map(standard => {\n          var _this$hass$themes2;\n          const domain = standardToDomain[standard] || standard;\n          return html`<mwc-list-item\n                graphic=\"medium\"\n                .domain=${domain}\n                @request-selected=${this._standardPicked}\n                hasMeta\n              >\n                <img\n                  slot=\"graphic\"\n                  loading=\"lazy\"\n                  alt=\"\"\n                  src=${brandsUrl({\n            domain,\n            type: \"icon\",\n            useFallback: true,\n            darkOptimized: (_this$hass$themes2 = this.hass.themes) === null || _this$hass$themes2 === void 0 ? void 0 : _this$hass$themes2.darkMode\n          })}\n                  crossorigin=\"anonymous\"\n                  referrerpolicy=\"no-referrer\"\n                />\n                <span\n                  >${this.hass.localize(`ui.panel.config.integrations.add_${domain}_device`)}</span\n                >\n                <ha-icon-next slot=\"meta\"></ha-icon-next>\n              </mwc-list-item>`;\n        }) : \"\"}\n      ${this.integration && \"integrations\" in this.integration && this.integration.integrations ? Object.entries(this.integration.integrations).sort((a, b) => {\n          if (a[1].config_flow && !b[1].config_flow) {\n            return -1;\n          }\n          if (b[1].config_flow && !a[1].config_flow) {\n            return 0;\n          }\n          return caseInsensitiveStringCompare(a[1].name || domainToName(this.hass.localize, a[0]), b[1].name || domainToName(this.hass.localize, b[0]), this.hass.locale.language);\n        }).map(([dom, val]) => {\n          var _val$iot_class;\n          return html`<ha-integration-list-item\n                  .hass=${this.hass}\n                  .domain=${dom}\n                  .integration=${{\n            ...val,\n            domain: dom,\n            name: val.name || domainToName(this.hass.localize, dom),\n            is_built_in: val.is_built_in !== false,\n            cloud: (_val$iot_class = val.iot_class) === null || _val$iot_class === void 0 ? void 0 : _val$iot_class.startsWith(\"cloud_\")\n          }}\n                  @request-selected=${this._integrationPicked}\n                >\n                </ha-integration-list-item>`;\n        }) : \"\"}\n      ${PROTOCOL_INTEGRATIONS.includes(this.domain) ? html`<mwc-list-item\n            graphic=\"medium\"\n            .domain=${this.domain}\n            @request-selected=${this._standardPicked}\n            hasMeta\n          >\n            <img\n              slot=\"graphic\"\n              loading=\"lazy\"\n              alt=\"\"\n              src=${brandsUrl({\n          domain: this.domain,\n          type: \"icon\",\n          useFallback: true,\n          darkOptimized: (_this$hass$themes3 = this.hass.themes) === null || _this$hass$themes3 === void 0 ? void 0 : _this$hass$themes3.darkMode\n        })}\n              crossorigin=\"anonymous\"\n              referrerpolicy=\"no-referrer\"\n            />\n            <span\n              >${this.hass.localize(`ui.panel.config.integrations.add_${this.domain}_device`)}</span\n            >\n            <ha-icon-next slot=\"meta\"></ha-icon-next>\n          </mwc-list-item>` : \"\"}\n      ${this.integration && \"config_flow\" in this.integration && this.integration.config_flow ? html`${(_this$flowsInProgress2 = this.flowsInProgress) !== null && _this$flowsInProgress2 !== void 0 && _this$flowsInProgress2.length ? html`<mwc-list-item\n                .domain=${this.domain}\n                @request-selected=${this._integrationPicked}\n                .integration=${{\n          ...this.integration,\n          domain: this.domain,\n          name: this.integration.name || domainToName(this.hass.localize, this.domain),\n          is_built_in: this.integration.is_built_in !== false,\n          cloud: (_this$integration$iot = this.integration.iot_class) === null || _this$integration$iot === void 0 ? void 0 : _this$integration$iot.startsWith(\"cloud_\")\n        }}\n                hasMeta\n              >\n                ${this.hass.localize(\"ui.panel.config.integrations.new_flow\", {\n          integration: this.integration.name || domainToName(this.hass.localize, this.domain)\n        })}\n                <ha-icon-next slot=\"meta\"></ha-icon-next>\n              </mwc-list-item>` : html`<ha-integration-list-item\n                .hass=${this.hass}\n                .domain=${this.domain}\n                .integration=${{\n          ...this.integration,\n          domain: this.domain,\n          name: this.integration.name || domainToName(this.hass.localize, this.domain),\n          is_built_in: this.integration.is_built_in !== false,\n          cloud: (_this$integration$iot2 = this.integration.iot_class) === null || _this$integration$iot2 === void 0 ? void 0 : _this$integration$iot2.startsWith(\"cloud_\")\n        }}\n                @request-selected=${this._integrationPicked}\n              >\n              </ha-integration-list-item>`}` : \"\"}\n    </mwc-list> `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_integrationPicked\",\n      value: async function _integrationPicked(ev) {\n        var _integrations, _this$hass$userData;\n        if (!shouldHandleRequestSelectedEvent(ev)) {\n          return;\n        }\n        const domain = ev.currentTarget.domain;\n        if ([\"cloud\", \"google_assistant\", \"alexa\"].includes(domain) && isComponentLoaded(this.hass, \"cloud\")) {\n          fireEvent(this, \"close-dialog\");\n          navigate(\"/config/cloud\");\n          return;\n        }\n        const integration = ev.currentTarget.integration;\n        if (integration.supported_by) {\n          // @ts-ignore\n          fireEvent(this, \"supported-by\", {\n            integration\n          });\n          return;\n        }\n        if (integration.iot_standards) {\n          // @ts-ignore\n          fireEvent(this, \"select-brand\", {\n            brand: integration.domain\n          });\n          return;\n        }\n        if (domain === this.domain && (\"integration_type\" in this.integration && !this.integration.config_flow || !(\"integration_type\" in this.integration) && (!this.integration.integrations || !(domain in this.integration.integrations))) ||\n        // config_flow being undefined means its false\n        !(\"integration_type\" in this.integration) && !((_integrations = this.integration.integrations) !== null && _integrations !== void 0 && (_integrations = _integrations[domain]) !== null && _integrations !== void 0 && _integrations.config_flow)) {\n          const manifest = await fetchIntegrationManifest(this.hass, domain);\n          showYamlIntegrationDialog(this, {\n            manifest\n          });\n          return;\n        }\n        const root = this.getRootNode();\n        showConfigFlowDialog(root instanceof ShadowRoot ? root.host : this, {\n          startFlowHandler: domain,\n          showAdvanced: (_this$hass$userData = this.hass.userData) === null || _this$hass$userData === void 0 ? void 0 : _this$hass$userData.showAdvanced,\n          manifest: await fetchIntegrationManifest(this.hass, domain)\n        });\n        fireEvent(this, \"close-dialog\");\n      }\n    }, {\n      kind: \"method\",\n      key: \"_flowInProgressPicked\",\n      value: async function _flowInProgressPicked(ev) {\n        var _this$hass$userData2;\n        if (!shouldHandleRequestSelectedEvent(ev)) {\n          return;\n        }\n        const flow = ev.currentTarget.flow;\n        const root = this.getRootNode();\n        showConfigFlowDialog(root instanceof ShadowRoot ? root.host : this, {\n          continueFlowId: flow.flow_id,\n          showAdvanced: (_this$hass$userData2 = this.hass.userData) === null || _this$hass$userData2 === void 0 ? void 0 : _this$hass$userData2.showAdvanced,\n          manifest: await fetchIntegrationManifest(this.hass, flow.handler)\n        });\n        fireEvent(this, \"close-dialog\");\n      }\n    }, {\n      kind: \"method\",\n      key: \"_standardPicked\",\n      value: function _standardPicked(ev) {\n        if (!shouldHandleRequestSelectedEvent(ev)) {\n          return;\n        }\n        const domain = ev.currentTarget.domain;\n        const root = this.getRootNode();\n        fireEvent(this, \"close-dialog\");\n        protocolIntegrationPicked(root instanceof ShadowRoot ? root.host : this, this.hass, domain, {\n          brand: this.domain\n        });\n      }\n    }, {\n      kind: \"field\",\n      static: true,\n      key: \"styles\",\n      value() {\n        return [haStyle, css`\n      :host {\n        display: block;\n        --mdc-list-item-graphic-size: 40px;\n        --mdc-list-side-padding: 24px;\n      }\n      h3 {\n        margin: 8px 24px 0;\n        color: var(--secondary-text-color);\n        font-size: 14px;\n        font-weight: 500;\n      }\n      h3:first-of-type {\n        margin-top: 0;\n      }\n      img {\n        width: 40px;\n        height: 40px;\n      }\n      li[divider] {\n        margin-top: 8px;\n      }\n    `];\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","customElement","property","isComponentLoaded","fireEvent","protocolIntegrationPicked","PROTOCOL_INTEGRATIONS","shouldHandleRequestSelectedEvent","navigate","caseInsensitiveStringCompare","localizeConfigFlowTitle","domainToName","fetchIntegrationManifest","showConfigFlowDialog","haStyle","brandsUrl","showYamlIntegrationDialog","standardToDomain","zigbee","zwave","HaDomainIntegrations","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","key","value","decorators","attribute","render","_this$flowsInProgress","_this$integration","_this$hass$themes3","_this$flowsInProgress2","_this$integration$iot","_this$integration$iot2","flowsInProgress","length","hass","localize","map","flow","_this$hass$themes","_flowInProgressPicked","domain","handler","type","useFallback","darkOptimized","themes","darkMode","integration","integrations","iot_standards","filter","standard","includes","_this$hass$themes2","_standardPicked","Object","entries","sort","a","b","config_flow","name","locale","language","dom","val","_val$iot_class","is_built_in","cloud","iot_class","startsWith","_integrationPicked","ev","_integrations","_this$hass$userData","currentTarget","supported_by","brand","manifest","root","getRootNode","ShadowRoot","host","startFlowHandler","showAdvanced","userData","_this$hass$userData2","continueFlowId","flow_id","static"],"sources":["/Users/sercanardil/Desktop/frontend/src/panels/config/integrations/ha-domain-integrations.ts"],"sourcesContent":["import { RequestSelectedDetail } from \"@material/mwc-list/mwc-list-item-base\";\nimport { css, html, LitElement } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { isComponentLoaded } from \"../../../common/config/is_component_loaded\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport {\n  protocolIntegrationPicked,\n  PROTOCOL_INTEGRATIONS,\n} from \"../../../common/integrations/protocolIntegrationPicked\";\nimport { shouldHandleRequestSelectedEvent } from \"../../../common/mwc/handle-request-selected-event\";\nimport { navigate } from \"../../../common/navigate\";\nimport { caseInsensitiveStringCompare } from \"../../../common/string/compare\";\nimport { localizeConfigFlowTitle } from \"../../../data/config_flow\";\nimport { DataEntryFlowProgress } from \"../../../data/data_entry_flow\";\nimport {\n  domainToName,\n  fetchIntegrationManifest,\n} from \"../../../data/integration\";\nimport { Brand, Integration } from \"../../../data/integrations\";\nimport { showConfigFlowDialog } from \"../../../dialogs/config-flow/show-dialog-config-flow\";\nimport { haStyle } from \"../../../resources/styles\";\nimport { HomeAssistant } from \"../../../types\";\nimport { brandsUrl } from \"../../../util/brands-url\";\nimport \"./ha-integration-list-item\";\nimport { showYamlIntegrationDialog } from \"./show-add-integration-dialog\";\n\nconst standardToDomain = { zigbee: \"zha\", zwave: \"zwave_js\" } as const;\n\n@customElement(\"ha-domain-integrations\")\nclass HaDomainIntegrations extends LitElement {\n  public hass!: HomeAssistant;\n\n  @property() public domain!: string;\n\n  @property({ attribute: false }) public integration?: Brand | Integration;\n\n  @property({ attribute: false })\n  public flowsInProgress?: DataEntryFlowProgress[];\n\n  protected render() {\n    return html`<mwc-list>\n      ${this.flowsInProgress?.length\n        ? html`<h3>\n              ${this.hass.localize(\"ui.panel.config.integrations.discovered\")}\n            </h3>\n            ${this.flowsInProgress.map(\n              (flow) =>\n                html`<mwc-list-item\n                  graphic=\"medium\"\n                  .flow=${flow}\n                  @request-selected=${this._flowInProgressPicked}\n                  hasMeta\n                >\n                  <img\n                    alt=\"\"\n                    slot=\"graphic\"\n                    loading=\"lazy\"\n                    src=${brandsUrl({\n                      domain: flow.handler,\n                      type: \"icon\",\n                      useFallback: true,\n                      darkOptimized: this.hass.themes?.darkMode,\n                    })}\n                    crossorigin=\"anonymous\"\n                    referrerpolicy=\"no-referrer\"\n                  />\n                  <span\n                    >${localizeConfigFlowTitle(this.hass.localize, flow)}</span\n                  >\n                  <ha-icon-next slot=\"meta\"></ha-icon-next>\n                </mwc-list-item>`\n            )}\n            <li divider role=\"separator\"></li>\n            ${this.integration &&\n            \"integrations\" in this.integration &&\n            this.integration.integrations\n              ? html`<h3>\n                  ${this.hass.localize(\n                    \"ui.panel.config.integrations.available_integrations\"\n                  )}\n                </h3>`\n              : \"\"}`\n        : \"\"}\n      ${this.integration?.iot_standards\n        ? this.integration.iot_standards\n            .filter((standard) =>\n              (PROTOCOL_INTEGRATIONS as ReadonlyArray<string>).includes(\n                standardToDomain[standard] || standard\n              )\n            )\n            .map((standard) => {\n              const domain: (typeof PROTOCOL_INTEGRATIONS)[number] =\n                standardToDomain[standard] || standard;\n              return html`<mwc-list-item\n                graphic=\"medium\"\n                .domain=${domain}\n                @request-selected=${this._standardPicked}\n                hasMeta\n              >\n                <img\n                  slot=\"graphic\"\n                  loading=\"lazy\"\n                  alt=\"\"\n                  src=${brandsUrl({\n                    domain,\n                    type: \"icon\",\n                    useFallback: true,\n                    darkOptimized: this.hass.themes?.darkMode,\n                  })}\n                  crossorigin=\"anonymous\"\n                  referrerpolicy=\"no-referrer\"\n                />\n                <span\n                  >${this.hass.localize(\n                    `ui.panel.config.integrations.add_${domain}_device`\n                  )}</span\n                >\n                <ha-icon-next slot=\"meta\"></ha-icon-next>\n              </mwc-list-item>`;\n            })\n        : \"\"}\n      ${this.integration &&\n      \"integrations\" in this.integration &&\n      this.integration.integrations\n        ? Object.entries(this.integration.integrations)\n            .sort((a, b) => {\n              if (a[1].config_flow && !b[1].config_flow) {\n                return -1;\n              }\n              if (b[1].config_flow && !a[1].config_flow) {\n                return 0;\n              }\n              return caseInsensitiveStringCompare(\n                a[1].name || domainToName(this.hass.localize, a[0]),\n                b[1].name || domainToName(this.hass.localize, b[0]),\n                this.hass.locale.language\n              );\n            })\n            .map(\n              ([dom, val]) =>\n                html`<ha-integration-list-item\n                  .hass=${this.hass}\n                  .domain=${dom}\n                  .integration=${{\n                    ...val,\n                    domain: dom,\n                    name: val.name || domainToName(this.hass.localize, dom),\n                    is_built_in: val.is_built_in !== false,\n                    cloud: val.iot_class?.startsWith(\"cloud_\"),\n                  }}\n                  @request-selected=${this._integrationPicked}\n                >\n                </ha-integration-list-item>`\n            )\n        : \"\"}\n      ${(PROTOCOL_INTEGRATIONS as ReadonlyArray<string>).includes(this.domain)\n        ? html`<mwc-list-item\n            graphic=\"medium\"\n            .domain=${this.domain}\n            @request-selected=${this._standardPicked}\n            hasMeta\n          >\n            <img\n              slot=\"graphic\"\n              loading=\"lazy\"\n              alt=\"\"\n              src=${brandsUrl({\n                domain: this.domain,\n                type: \"icon\",\n                useFallback: true,\n                darkOptimized: this.hass.themes?.darkMode,\n              })}\n              crossorigin=\"anonymous\"\n              referrerpolicy=\"no-referrer\"\n            />\n            <span\n              >${this.hass.localize(\n                `ui.panel.config.integrations.add_${\n                  this.domain as (typeof PROTOCOL_INTEGRATIONS)[number]\n                }_device`\n              )}</span\n            >\n            <ha-icon-next slot=\"meta\"></ha-icon-next>\n          </mwc-list-item>`\n        : \"\"}\n      ${this.integration &&\n      \"config_flow\" in this.integration &&\n      this.integration.config_flow\n        ? html`${this.flowsInProgress?.length\n            ? html`<mwc-list-item\n                .domain=${this.domain}\n                @request-selected=${this._integrationPicked}\n                .integration=${{\n                  ...this.integration,\n                  domain: this.domain,\n                  name:\n                    this.integration.name ||\n                    domainToName(this.hass.localize, this.domain),\n                  is_built_in: this.integration.is_built_in !== false,\n                  cloud: this.integration.iot_class?.startsWith(\"cloud_\"),\n                }}\n                hasMeta\n              >\n                ${this.hass.localize(\"ui.panel.config.integrations.new_flow\", {\n                  integration:\n                    this.integration.name ||\n                    domainToName(this.hass.localize, this.domain),\n                })}\n                <ha-icon-next slot=\"meta\"></ha-icon-next>\n              </mwc-list-item>`\n            : html`<ha-integration-list-item\n                .hass=${this.hass}\n                .domain=${this.domain}\n                .integration=${{\n                  ...this.integration,\n                  domain: this.domain,\n                  name:\n                    this.integration.name ||\n                    domainToName(this.hass.localize, this.domain),\n                  is_built_in: this.integration.is_built_in !== false,\n                  cloud: this.integration.iot_class?.startsWith(\"cloud_\"),\n                }}\n                @request-selected=${this._integrationPicked}\n              >\n              </ha-integration-list-item>`}`\n        : \"\"}\n    </mwc-list> `;\n  }\n\n  private async _integrationPicked(ev: CustomEvent<RequestSelectedDetail>) {\n    if (!shouldHandleRequestSelectedEvent(ev)) {\n      return;\n    }\n    const domain = (ev.currentTarget as any).domain;\n\n    if (\n      [\"cloud\", \"google_assistant\", \"alexa\"].includes(domain) &&\n      isComponentLoaded(this.hass, \"cloud\")\n    ) {\n      fireEvent(this, \"close-dialog\");\n      navigate(\"/config/cloud\");\n      return;\n    }\n\n    const integration = (ev.currentTarget as any).integration;\n\n    if (integration.supported_by) {\n      // @ts-ignore\n      fireEvent(this, \"supported-by\", { integration });\n      return;\n    }\n\n    if (integration.iot_standards) {\n      // @ts-ignore\n      fireEvent(this, \"select-brand\", {\n        brand: integration.domain,\n      });\n      return;\n    }\n\n    if (\n      (domain === this.domain &&\n        ((\"integration_type\" in this.integration! &&\n          !this.integration.config_flow) ||\n          (!(\"integration_type\" in this.integration!) &&\n            (!this.integration!.integrations ||\n              !(domain in this.integration!.integrations))))) ||\n      // config_flow being undefined means its false\n      (!(\"integration_type\" in this.integration!) &&\n        !this.integration!.integrations?.[domain]?.config_flow)\n    ) {\n      const manifest = await fetchIntegrationManifest(this.hass, domain);\n      showYamlIntegrationDialog(this, { manifest });\n      return;\n    }\n\n    const root = this.getRootNode();\n    showConfigFlowDialog(\n      root instanceof ShadowRoot ? (root.host as HTMLElement) : this,\n      {\n        startFlowHandler: domain,\n        showAdvanced: this.hass.userData?.showAdvanced,\n        manifest: await fetchIntegrationManifest(this.hass, domain),\n      }\n    );\n    fireEvent(this, \"close-dialog\");\n  }\n\n  private async _flowInProgressPicked(ev: CustomEvent<RequestSelectedDetail>) {\n    if (!shouldHandleRequestSelectedEvent(ev)) {\n      return;\n    }\n    const flow: DataEntryFlowProgress = (ev.currentTarget as any).flow;\n    const root = this.getRootNode();\n    showConfigFlowDialog(\n      root instanceof ShadowRoot ? (root.host as HTMLElement) : this,\n      {\n        continueFlowId: flow.flow_id,\n        showAdvanced: this.hass.userData?.showAdvanced,\n        manifest: await fetchIntegrationManifest(this.hass, flow.handler),\n      }\n    );\n    fireEvent(this, \"close-dialog\");\n  }\n\n  private _standardPicked(ev: CustomEvent<RequestSelectedDetail>) {\n    if (!shouldHandleRequestSelectedEvent(ev)) {\n      return;\n    }\n    const domain = (ev.currentTarget as any).domain;\n    const root = this.getRootNode();\n    fireEvent(this, \"close-dialog\");\n    protocolIntegrationPicked(\n      root instanceof ShadowRoot ? (root.host as HTMLElement) : this,\n      this.hass,\n      domain,\n      { brand: this.domain }\n    );\n  }\n\n  static styles = [\n    haStyle,\n    css`\n      :host {\n        display: block;\n        --mdc-list-item-graphic-size: 40px;\n        --mdc-list-side-padding: 24px;\n      }\n      h3 {\n        margin: 8px 24px 0;\n        color: var(--secondary-text-color);\n        font-size: 14px;\n        font-weight: 500;\n      }\n      h3:first-of-type {\n        margin-top: 0;\n      }\n      img {\n        width: 40px;\n        height: 40px;\n      }\n      li[divider] {\n        margin-top: 8px;\n      }\n    `,\n  ];\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-domain-integrations\": HaDomainIntegrations;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}