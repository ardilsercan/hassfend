{"ast":null,"code":"import { atLeastVersion } from \"../../common/config/version\";\nimport { hassioApiResultExtractor } from \"./common\";\nexport const fetchHassioHostInfo = async hass => {\n  if (atLeastVersion(hass.config.version, 2021, 2, 4)) {\n    return hass.callWS({\n      type: \"supervisor/api\",\n      endpoint: \"/host/info\",\n      method: \"get\"\n    });\n  }\n  const response = await hass.callApi(\"GET\", \"hassio/host/info\");\n  return hassioApiResultExtractor(response);\n};\nexport const fetchHassioHassOsInfo = async hass => {\n  if (atLeastVersion(hass.config.version, 2021, 2, 4)) {\n    return hass.callWS({\n      type: \"supervisor/api\",\n      endpoint: \"/os/info\",\n      method: \"get\"\n    });\n  }\n  return hassioApiResultExtractor(await hass.callApi(\"GET\", \"hassio/os/info\"));\n};\nexport const rebootHost = async hass => {\n  if (atLeastVersion(hass.config.version, 2021, 2, 4)) {\n    return hass.callWS({\n      type: \"supervisor/api\",\n      endpoint: \"/host/reboot\",\n      method: \"post\",\n      timeout: null\n    });\n  }\n  return hass.callApi(\"POST\", \"hassio/host/reboot\");\n};\nexport const shutdownHost = async hass => {\n  if (atLeastVersion(hass.config.version, 2021, 2, 4)) {\n    return hass.callWS({\n      type: \"supervisor/api\",\n      endpoint: \"/host/shutdown\",\n      method: \"post\",\n      timeout: null\n    });\n  }\n  return hass.callApi(\"POST\", \"hassio/host/shutdown\");\n};\nexport const updateOS = async hass => {\n  if (atLeastVersion(hass.config.version, 2021, 2, 4)) {\n    return hass.callWS({\n      type: \"supervisor/api\",\n      endpoint: \"/os/update\",\n      method: \"post\",\n      timeout: null\n    });\n  }\n  return hass.callApi(\"POST\", \"hassio/os/update\");\n};\nexport const configSyncOS = async hass => {\n  if (atLeastVersion(hass.config.version, 2021, 2, 4)) {\n    return hass.callWS({\n      type: \"supervisor/api\",\n      endpoint: \"/os/config/sync\",\n      method: \"post\",\n      timeout: null\n    });\n  }\n  return hass.callApi(\"POST\", \"hassio/os/config/sync\");\n};\nexport const changeHostOptions = async (hass, options) => {\n  if (atLeastVersion(hass.config.version, 2021, 2, 4)) {\n    return hass.callWS({\n      type: \"supervisor/api\",\n      endpoint: \"/host/options\",\n      method: \"post\",\n      data: options\n    });\n  }\n  return hass.callApi(\"POST\", \"hassio/host/options\", options);\n};\nexport const moveDatadisk = async (hass, device) => {\n  if (atLeastVersion(hass.config.version, 2021, 2, 4)) {\n    return hass.callWS({\n      type: \"supervisor/api\",\n      endpoint: \"/os/datadisk/move\",\n      method: \"post\",\n      timeout: null,\n      data: {\n        device\n      }\n    });\n  }\n  return hass.callApi(\"POST\", \"hassio/os/datadisk/move\");\n};\nexport const listDatadisks = async hass => {\n  if (atLeastVersion(hass.config.version, 2021, 2, 4)) {\n    return hass.callWS({\n      type: \"supervisor/api\",\n      endpoint: \"/os/datadisk/list\",\n      method: \"get\",\n      timeout: null\n    });\n  }\n  return hassioApiResultExtractor(await hass.callApi(\"GET\", \"/os/datadisk/list\"));\n};","map":{"version":3,"names":["atLeastVersion","hassioApiResultExtractor","fetchHassioHostInfo","hass","config","version","callWS","type","endpoint","method","response","callApi","fetchHassioHassOsInfo","rebootHost","timeout","shutdownHost","updateOS","configSyncOS","changeHostOptions","options","data","moveDatadisk","device","listDatadisks"],"sources":["/workspaces/frontend/src/data/hassio/host.ts"],"sourcesContent":["import { atLeastVersion } from \"../../common/config/version\";\nimport { HomeAssistant } from \"../../types\";\nimport { hassioApiResultExtractor, HassioResponse } from \"./common\";\n\nexport type HassioHostInfo = {\n  agent_version: string;\n  chassis: string;\n  cpe: string;\n  deployment: string;\n  disk_life_time: number | \"\";\n  disk_free: number;\n  disk_total: number;\n  disk_used: number;\n  features: string[];\n  hostname: string;\n  kernel: string;\n  operating_system: string;\n  boot_timestamp: number;\n  startup_time: number;\n};\n\nexport interface HassioHassOSInfo {\n  board: string | null;\n  boot: string | null;\n  update_available: boolean;\n  version_latest: string | null;\n  version: string | null;\n  data_disk: string;\n}\n\nexport interface Datadisk {\n  name: string;\n  vendor: string;\n  model: string;\n  serial: string;\n  size: number;\n  id: string;\n  dev_path: string;\n}\n\nexport interface DatadiskList {\n  devices: string[];\n  disks: Datadisk[];\n}\n\nexport const fetchHassioHostInfo = async (\n  hass: HomeAssistant\n): Promise<HassioHostInfo> => {\n  if (atLeastVersion(hass.config.version, 2021, 2, 4)) {\n    return hass.callWS({\n      type: \"supervisor/api\",\n      endpoint: \"/host/info\",\n      method: \"get\",\n    });\n  }\n\n  const response = await hass.callApi<HassioResponse<HassioHostInfo>>(\n    \"GET\",\n    \"hassio/host/info\"\n  );\n  return hassioApiResultExtractor(response);\n};\n\nexport const fetchHassioHassOsInfo = async (\n  hass: HomeAssistant\n): Promise<HassioHassOSInfo> => {\n  if (atLeastVersion(hass.config.version, 2021, 2, 4)) {\n    return hass.callWS({\n      type: \"supervisor/api\",\n      endpoint: \"/os/info\",\n      method: \"get\",\n    });\n  }\n\n  return hassioApiResultExtractor(\n    await hass.callApi<HassioResponse<HassioHassOSInfo>>(\n      \"GET\",\n      \"hassio/os/info\"\n    )\n  );\n};\n\nexport const rebootHost = async (hass: HomeAssistant) => {\n  if (atLeastVersion(hass.config.version, 2021, 2, 4)) {\n    return hass.callWS({\n      type: \"supervisor/api\",\n      endpoint: \"/host/reboot\",\n      method: \"post\",\n      timeout: null,\n    });\n  }\n\n  return hass.callApi<HassioResponse<void>>(\"POST\", \"hassio/host/reboot\");\n};\n\nexport const shutdownHost = async (hass: HomeAssistant) => {\n  if (atLeastVersion(hass.config.version, 2021, 2, 4)) {\n    return hass.callWS({\n      type: \"supervisor/api\",\n      endpoint: \"/host/shutdown\",\n      method: \"post\",\n      timeout: null,\n    });\n  }\n\n  return hass.callApi<HassioResponse<void>>(\"POST\", \"hassio/host/shutdown\");\n};\n\nexport const updateOS = async (hass: HomeAssistant) => {\n  if (atLeastVersion(hass.config.version, 2021, 2, 4)) {\n    return hass.callWS({\n      type: \"supervisor/api\",\n      endpoint: \"/os/update\",\n      method: \"post\",\n      timeout: null,\n    });\n  }\n\n  return hass.callApi<HassioResponse<void>>(\"POST\", \"hassio/os/update\");\n};\n\nexport const configSyncOS = async (hass: HomeAssistant) => {\n  if (atLeastVersion(hass.config.version, 2021, 2, 4)) {\n    return hass.callWS({\n      type: \"supervisor/api\",\n      endpoint: \"/os/config/sync\",\n      method: \"post\",\n      timeout: null,\n    });\n  }\n\n  return hass.callApi<HassioResponse<void>>(\"POST\", \"hassio/os/config/sync\");\n};\n\nexport const changeHostOptions = async (hass: HomeAssistant, options: any) => {\n  if (atLeastVersion(hass.config.version, 2021, 2, 4)) {\n    return hass.callWS({\n      type: \"supervisor/api\",\n      endpoint: \"/host/options\",\n      method: \"post\",\n      data: options,\n    });\n  }\n\n  return hass.callApi<HassioResponse<void>>(\n    \"POST\",\n    \"hassio/host/options\",\n    options\n  );\n};\n\nexport const moveDatadisk = async (hass: HomeAssistant, device: string) => {\n  if (atLeastVersion(hass.config.version, 2021, 2, 4)) {\n    return hass.callWS({\n      type: \"supervisor/api\",\n      endpoint: \"/os/datadisk/move\",\n      method: \"post\",\n      timeout: null,\n      data: { device },\n    });\n  }\n\n  return hass.callApi<HassioResponse<void>>(\"POST\", \"hassio/os/datadisk/move\");\n};\n\nexport const listDatadisks = async (\n  hass: HomeAssistant\n): Promise<DatadiskList> => {\n  if (atLeastVersion(hass.config.version, 2021, 2, 4)) {\n    return hass.callWS<DatadiskList>({\n      type: \"supervisor/api\",\n      endpoint: \"/os/datadisk/list\",\n      method: \"get\",\n      timeout: null,\n    });\n  }\n\n  return hassioApiResultExtractor(\n    await hass.callApi<HassioResponse<DatadiskList>>(\"GET\", \"/os/datadisk/list\")\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}