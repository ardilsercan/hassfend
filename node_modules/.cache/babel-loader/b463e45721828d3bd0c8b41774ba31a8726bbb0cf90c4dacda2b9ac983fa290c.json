{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport { customElement, property } from \"lit/decorators\";\nimport { LitElement, css, html } from \"lit\";\nimport { formatNumber } from \"../common/number/format_number\";\nimport { haStyle } from \"../resources/styles\";\nexport let HaWaterHeaterState = _decorate([customElement(\"ha-water_heater-state\")], function (_initialize, _LitElement) {\n  class HaWaterHeaterState extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaWaterHeaterState,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"stateObj\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        return html`\n      <div class=\"target\">\n        <span class=\"state-label label\">\n          ${this.hass.formatEntityState(this.stateObj)}\n        </span>\n        <span class=\"label\"\n          >${this._computeTarget(this.hass, this.stateObj)}</span\n        >\n      </div>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_computeTarget\",\n      value: function _computeTarget(hass, stateObj) {\n        if (!hass || !stateObj) return null;\n        // We're using \"!= null\" on purpose so that we match both null and undefined.\n\n        if (stateObj.attributes.target_temp_low != null && stateObj.attributes.target_temp_high != null) {\n          return `${formatNumber(stateObj.attributes.target_temp_low, this.hass.locale)} – ${formatNumber(stateObj.attributes.target_temp_high, this.hass.locale)} ${hass.config.unit_system.temperature}`;\n        }\n        if (stateObj.attributes.temperature != null) {\n          return `${formatNumber(stateObj.attributes.temperature, this.hass.locale)} ${hass.config.unit_system.temperature}`;\n        }\n        return \"\";\n      }\n    }, {\n      kind: \"method\",\n      key: \"_localizeState\",\n      value: function _localizeState(stateObj) {\n        return this.hass.formatEntityState(stateObj);\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [haStyle, css`\n        :host {\n          display: flex;\n          flex-direction: column;\n          justify-content: center;\n          white-space: nowrap;\n        }\n\n        .target {\n          color: var(--primary-text-color);\n        }\n\n        .current {\n          color: var(--secondary-text-color);\n        }\n\n        .state-label {\n          font-weight: bold;\n        }\n\n        .label {\n          direction: ltr;\n          display: inline-block;\n        }\n      `];\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["customElement","property","LitElement","css","html","formatNumber","haStyle","HaWaterHeaterState","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","render","hass","formatEntityState","stateObj","_computeTarget","attributes","target_temp_low","target_temp_high","locale","config","unit_system","temperature","_localizeState","static","styles"],"sources":["/Users/sercanardil/Desktop/frontend/src/components/ha-water_heater-state.ts"],"sourcesContent":["import { customElement, property } from \"lit/decorators\";\nimport { CSSResultGroup, LitElement, TemplateResult, css, html } from \"lit\";\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport { formatNumber } from \"../common/number/format_number\";\nimport { haStyle } from \"../resources/styles\";\nimport { HomeAssistant } from \"../types\";\n\n@customElement(\"ha-water_heater-state\")\nexport class HaWaterHeaterState extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public stateObj!: HassEntity;\n\n  protected render(): TemplateResult {\n    return html`\n      <div class=\"target\">\n        <span class=\"state-label label\">\n          ${this.hass.formatEntityState(this.stateObj)}\n        </span>\n        <span class=\"label\"\n          >${this._computeTarget(this.hass, this.stateObj)}</span\n        >\n      </div>\n    `;\n  }\n\n  private _computeTarget(hass: HomeAssistant, stateObj: HassEntity) {\n    if (!hass || !stateObj) return null;\n    // We're using \"!= null\" on purpose so that we match both null and undefined.\n\n    if (\n      stateObj.attributes.target_temp_low != null &&\n      stateObj.attributes.target_temp_high != null\n    ) {\n      return `${formatNumber(\n        stateObj.attributes.target_temp_low,\n        this.hass.locale\n      )} – ${formatNumber(\n        stateObj.attributes.target_temp_high,\n        this.hass.locale\n      )} ${hass.config.unit_system.temperature}`;\n    }\n    if (stateObj.attributes.temperature != null) {\n      return `${formatNumber(\n        stateObj.attributes.temperature,\n        this.hass.locale\n      )} ${hass.config.unit_system.temperature}`;\n    }\n\n    return \"\";\n  }\n\n  _localizeState(stateObj) {\n    return this.hass.formatEntityState(stateObj);\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyle,\n      css`\n        :host {\n          display: flex;\n          flex-direction: column;\n          justify-content: center;\n          white-space: nowrap;\n        }\n\n        .target {\n          color: var(--primary-text-color);\n        }\n\n        .current {\n          color: var(--secondary-text-color);\n        }\n\n        .state-label {\n          font-weight: bold;\n        }\n\n        .label {\n          direction: ltr;\n          display: inline-block;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-water_heater-state\": HaWaterHeaterState;\n  }\n}\n"],"mappings":";AAAA,SAASA,aAAa,EAAEC,QAAQ,QAAQ,gBAAgB;AACxD,SAAyBC,UAAU,EAAkBC,GAAG,EAAEC,IAAI,QAAQ,KAAK;AAE3E,SAASC,YAAY,QAAQ,gCAAgC;AAC7D,SAASC,OAAO,QAAQ,qBAAqB;AAG7C,WACaC,kBAAkB,GAAAC,SAAA,EAD9BR,aAAa,CAAC,uBAAuB,CAAC,aAAAS,WAAA,EAAAC,WAAA;EAAvC,MACaH,kBAAkB,SAAAG,WAAA,CAAoB;IAAAC,YAAA,GAAAC,IAAA;MAAA,SAAAA,IAAA;MAAAH,WAAA;IAAA;EA8EnD;EAAC;IAAAI,CAAA,EA9EYN,kBAAkB;IAAAO,CAAA;MAAAC,IAAA;MAAAC,UAAA,GAC5Bf,QAAQ,CAAC;QAAEgB,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAC,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAE9Bf,QAAQ,CAAC;QAAEgB,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAC,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAE/B,SAAAC,OAAA,EAAmC;QACjC,OAAOhB,IAAK;AAChB;AACA;AACA,YAAY,IAAI,CAACiB,IAAI,CAACC,iBAAiB,CAAC,IAAI,CAACC,QAAQ,CAAE;AACvD;AACA;AACA,aAAa,IAAI,CAACC,cAAc,CAAC,IAAI,CAACH,IAAI,EAAE,IAAI,CAACE,QAAQ,CAAE;AAC3D;AACA;AACA,KAAK;MACH;IAAC;MAAAR,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAK,eAAuBH,IAAmB,EAAEE,QAAoB,EAAE;QAChE,IAAI,CAACF,IAAI,IAAI,CAACE,QAAQ,EAAE,OAAO,IAAI;QACnC;;QAEA,IACEA,QAAQ,CAACE,UAAU,CAACC,eAAe,IAAI,IAAI,IAC3CH,QAAQ,CAACE,UAAU,CAACE,gBAAgB,IAAI,IAAI,EAC5C;UACA,OAAQ,GAAEtB,YAAY,CACpBkB,QAAQ,CAACE,UAAU,CAACC,eAAe,EACnC,IAAI,CAACL,IAAI,CAACO,MACZ,CAAE,MAAKvB,YAAY,CACjBkB,QAAQ,CAACE,UAAU,CAACE,gBAAgB,EACpC,IAAI,CAACN,IAAI,CAACO,MACZ,CAAE,IAAGP,IAAI,CAACQ,MAAM,CAACC,WAAW,CAACC,WAAY,EAAC;QAC5C;QACA,IAAIR,QAAQ,CAACE,UAAU,CAACM,WAAW,IAAI,IAAI,EAAE;UAC3C,OAAQ,GAAE1B,YAAY,CACpBkB,QAAQ,CAACE,UAAU,CAACM,WAAW,EAC/B,IAAI,CAACV,IAAI,CAACO,MACZ,CAAE,IAAGP,IAAI,CAACQ,MAAM,CAACC,WAAW,CAACC,WAAY,EAAC;QAC5C;QAEA,OAAO,EAAE;MACX;IAAC;MAAAhB,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAa,eAAeT,QAAQ,EAAE;QACvB,OAAO,IAAI,CAACF,IAAI,CAACC,iBAAiB,CAACC,QAAQ,CAAC;MAC9C;IAAC;MAAAR,IAAA;MAAAkB,MAAA;MAAAf,GAAA;MAAAC,KAAA,EAED,SAAAe,OAAA,EAAoC;QAClC,OAAO,CACL5B,OAAO,EACPH,GAAI;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,CACF;MACH;IAAC;EAAA;AAAA,GA7EqCD,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}