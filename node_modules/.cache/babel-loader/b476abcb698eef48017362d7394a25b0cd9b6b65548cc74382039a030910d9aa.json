{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _decorate from \"@babel/runtime/helpers/decorate\";\nvar _templateObject, _templateObject2;\nimport \"core-js/modules/es.array.concat.js\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport \"./ha-markdown-element\";\nexport var HaMarkdown = _decorate([customElement(\"ha-markdown\")], function (_initialize, _LitElement) {\n  var HaMarkdown = /*#__PURE__*/function (_LitElement2) {\n    _inherits(HaMarkdown, _LitElement2);\n    function HaMarkdown() {\n      var _this;\n      _classCallCheck(this, HaMarkdown);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, HaMarkdown, [].concat(args));\n      _initialize(_assertThisInitialized(_this));\n      return _this;\n    }\n    return _createClass(HaMarkdown);\n  }(_LitElement);\n  return {\n    F: HaMarkdown,\n    d: [{\n      kind: \"field\",\n      decorators: [property()],\n      key: \"content\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"allowSvg\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"breaks\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        attribute: \"lazy-images\"\n      })],\n      key: \"lazyImages\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this.content) {\n          return nothing;\n        }\n        return html(_templateObject || (_templateObject = _taggedTemplateLiteral([\"<ha-markdown-element\\n      .content=\", \"\\n      .allowSvg=\", \"\\n      .breaks=\", \"\\n      .lazyImages=\", \"\\n    ></ha-markdown-element>\"])), this.content, this.allowSvg, this.breaks, this.lazyImages);\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n      :host {\\n        display: block;\\n      }\\n      ha-markdown-element {\\n        -ms-user-select: text;\\n        -webkit-user-select: text;\\n        -moz-user-select: text;\\n      }\\n      ha-markdown-element > *:first-child {\\n        margin-top: 0;\\n      }\\n      ha-markdown-element > *:last-child {\\n        margin-bottom: 0;\\n      }\\n      ha-alert {\\n        display: block;\\n        margin: 4px 0;\\n      }\\n      a {\\n        color: var(--primary-color);\\n      }\\n      img {\\n        max-width: 100%;\\n      }\\n      code,\\n      pre {\\n        background-color: var(--markdown-code-background-color, none);\\n        border-radius: 3px;\\n      }\\n      svg {\\n        background-color: var(--markdown-svg-background-color, none);\\n        color: var(--markdown-svg-color, none);\\n      }\\n      code {\\n        font-size: 85%;\\n        padding: 0.2em 0.4em;\\n      }\\n      pre code {\\n        padding: 0;\\n      }\\n      pre {\\n        padding: 16px;\\n        overflow: auto;\\n        line-height: 1.45;\\n        font-family: var(--code-font-family, monospace);\\n      }\\n      h1,\\n      h2,\\n      h3,\\n      h4,\\n      h5,\\n      h6 {\\n        line-height: initial;\\n      }\\n      h2 {\\n        font-size: 1.5em;\\n        font-weight: bold;\\n      }\\n    \"])));\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","nothing","customElement","property","HaMarkdown","_decorate","_initialize","_LitElement","_LitElement2","_inherits","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_assertThisInitialized","_createClass","F","d","kind","decorators","key","value","type","Boolean","attribute","render","content","_templateObject","_taggedTemplateLiteral","allowSvg","breaks","lazyImages","static","styles","_templateObject2"],"sources":["/workspaces/frontend/src/components/ha-markdown.ts"],"sourcesContent":["import { css, CSSResultGroup, html, LitElement, nothing } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport \"./ha-markdown-element\";\n\n@customElement(\"ha-markdown\")\nexport class HaMarkdown extends LitElement {\n  @property() public content?;\n\n  @property({ type: Boolean }) public allowSvg = false;\n\n  @property({ type: Boolean }) public breaks = false;\n\n  @property({ type: Boolean, attribute: \"lazy-images\" }) public lazyImages =\n    false;\n\n  protected render() {\n    if (!this.content) {\n      return nothing;\n    }\n\n    return html`<ha-markdown-element\n      .content=${this.content}\n      .allowSvg=${this.allowSvg}\n      .breaks=${this.breaks}\n      .lazyImages=${this.lazyImages}\n    ></ha-markdown-element>`;\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      :host {\n        display: block;\n      }\n      ha-markdown-element {\n        -ms-user-select: text;\n        -webkit-user-select: text;\n        -moz-user-select: text;\n      }\n      ha-markdown-element > *:first-child {\n        margin-top: 0;\n      }\n      ha-markdown-element > *:last-child {\n        margin-bottom: 0;\n      }\n      ha-alert {\n        display: block;\n        margin: 4px 0;\n      }\n      a {\n        color: var(--primary-color);\n      }\n      img {\n        max-width: 100%;\n      }\n      code,\n      pre {\n        background-color: var(--markdown-code-background-color, none);\n        border-radius: 3px;\n      }\n      svg {\n        background-color: var(--markdown-svg-background-color, none);\n        color: var(--markdown-svg-color, none);\n      }\n      code {\n        font-size: 85%;\n        padding: 0.2em 0.4em;\n      }\n      pre code {\n        padding: 0;\n      }\n      pre {\n        padding: 16px;\n        overflow: auto;\n        line-height: 1.45;\n        font-family: var(--code-font-family, monospace);\n      }\n      h1,\n      h2,\n      h3,\n      h4,\n      h5,\n      h6 {\n        line-height: initial;\n      }\n      h2 {\n        font-size: 1.5em;\n        font-weight: bold;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-markdown\": HaMarkdown;\n  }\n}\n"],"mappings":";;;;;;;;;AAAA,SAASA,GAAG,EAAkBC,IAAI,EAAEC,UAAU,EAAEC,OAAO,QAAQ,KAAK;AACpE,SAASC,aAAa,EAAEC,QAAQ,QAAQ,gBAAgB;AACxD,OAAO,uBAAuB;AAE9B,WACaC,UAAU,GAAAC,SAAA,EADtBH,aAAa,CAAC,aAAa,CAAC,aAAAI,WAAA,EAAAC,WAAA;EAAA,IAChBH,UAAU,0BAAAI,YAAA;IAAAC,SAAA,CAAAL,UAAA,EAAAI,YAAA;IAAA,SAAAJ,WAAA;MAAA,IAAAM,KAAA;MAAAC,eAAA,OAAAP,UAAA;MAAA,SAAAQ,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAAC,IAAA,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;QAAAF,IAAA,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;MAAA;MAAAP,KAAA,GAAAQ,UAAA,OAAAd,UAAA,KAAAe,MAAA,CAAAJ,IAAA;MAAAT,WAAA,CAAAc,sBAAA,CAAAV,KAAA;MAAA,OAAAA,KAAA;IAAA;IAAA,OAAAW,YAAA,CAAAjB,UAAA;EAAA,EAAAG,WAAA;EAAA;IAAAe,CAAA,EAAVlB,UAAU;IAAAmB,CAAA;MAAAC,IAAA;MAAAC,UAAA,GACpBtB,QAAQ,CAAC,CAAC;MAAAuB,GAAA;MAAAC,KAAA;IAAA;MAAAH,IAAA;MAAAC,UAAA,GAEVtB,QAAQ,CAAC;QAAEyB,IAAI,EAAEC;MAAQ,CAAC,CAAC;MAAAH,GAAA;MAAAC,KAAA,WAAAA,MAAA;QAAA,OAAmB,KAAK;MAAA;IAAA;MAAAH,IAAA;MAAAC,UAAA,GAEnDtB,QAAQ,CAAC;QAAEyB,IAAI,EAAEC;MAAQ,CAAC,CAAC;MAAAH,GAAA;MAAAC,KAAA,WAAAA,MAAA;QAAA,OAAiB,KAAK;MAAA;IAAA;MAAAH,IAAA;MAAAC,UAAA,GAEjDtB,QAAQ,CAAC;QAAEyB,IAAI,EAAEC,OAAO;QAAEC,SAAS,EAAE;MAAc,CAAC,CAAC;MAAAJ,GAAA;MAAAC,KAAA,WAAAA,MAAA;QAAA,OACpD,KAAK;MAAA;IAAA;MAAAH,IAAA;MAAAE,GAAA;MAAAC,KAAA,EAEP,SAAAI,OAAA,EAAmB;QACjB,IAAI,CAAC,IAAI,CAACC,OAAO,EAAE;UACjB,OAAO/B,OAAO;QAChB;QAEA,OAAOF,IAAI,CAAAkC,eAAA,KAAAA,eAAA,GAAAC,sBAAA,iJACE,IAAI,CAACF,OAAO,EACX,IAAI,CAACG,QAAQ,EACf,IAAI,CAACC,MAAM,EACP,IAAI,CAACC,UAAU;MAEjC;IAAC;MAAAb,IAAA;MAAAc,MAAA;MAAAZ,GAAA;MAAAC,KAAA,EAED,SAAAY,OAAA,EAAoC;QAClC,OAAOzC,GAAG,CAAA0C,gBAAA,KAAAA,gBAAA,GAAAN,sBAAA;MA4DZ;IAAC;EAAA;AAAA,GApF6BlC,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}