{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport \"@material/mwc-button/mwc-button\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport \"../../../components/ha-card\";\nimport { createCloseHeading } from \"../../../components/ha-dialog\";\nimport { haStyleDialog } from \"../../../resources/styles\";\nimport \"./integrations-startup-time\";\nlet DialogIntegrationStartup = _decorate([customElement(\"dialog-integration-startup\")], function (_initialize, _LitElement) {\n  class DialogIntegrationStartup extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: DialogIntegrationStartup,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_opened\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"method\",\n      key: \"showDialog\",\n      value: function showDialog() {\n        this._opened = true;\n      }\n    }, {\n      kind: \"method\",\n      key: \"closeDialog\",\n      value: function closeDialog() {\n        this._opened = false;\n        fireEvent(this, \"dialog-closed\", {\n          dialog: this.localName\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this._opened) {\n          return nothing;\n        }\n        return html`\n      <ha-dialog\n        open\n        scrimClickAction\n        escapeKeyAction\n        hideActions\n        .heading=${createCloseHeading(this.hass, this.hass.localize(\"ui.panel.config.repairs.integration_startup_time\"))}\n        @closed=${this.closeDialog}\n      >\n        <integrations-startup-time\n          .hass=${this.hass}\n          narrow\n        ></integrations-startup-time>\n      </ha-dialog>\n    `;\n      }\n    }, {\n      kind: \"field\",\n      static: true,\n      key: \"styles\",\n      value() {\n        return [haStyleDialog, css`\n      ha-dialog {\n        --dialog-content-padding: 0;\n      }\n    `];\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","nothing","customElement","property","state","fireEvent","createCloseHeading","haStyleDialog","DialogIntegrationStartup","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","showDialog","_opened","closeDialog","dialog","localName","render","hass","localize","static"],"sources":["/workspaces/frontend/src/panels/config/repairs/dialog-integration-startup.ts"],"sourcesContent":["import \"@material/mwc-button/mwc-button\";\nimport { css, CSSResultGroup, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport \"../../../components/ha-card\";\nimport { createCloseHeading } from \"../../../components/ha-dialog\";\nimport { haStyleDialog } from \"../../../resources/styles\";\nimport type { HomeAssistant } from \"../../../types\";\nimport \"./integrations-startup-time\";\n\n@customElement(\"dialog-integration-startup\")\nclass DialogIntegrationStartup extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @state() private _opened = false;\n\n  public showDialog(): void {\n    this._opened = true;\n  }\n\n  public closeDialog() {\n    this._opened = false;\n    fireEvent(this, \"dialog-closed\", { dialog: this.localName });\n  }\n\n  protected render() {\n    if (!this._opened) {\n      return nothing;\n    }\n\n    return html`\n      <ha-dialog\n        open\n        scrimClickAction\n        escapeKeyAction\n        hideActions\n        .heading=${createCloseHeading(\n          this.hass,\n          this.hass.localize(\"ui.panel.config.repairs.integration_startup_time\")\n        )}\n        @closed=${this.closeDialog}\n      >\n        <integrations-startup-time\n          .hass=${this.hass}\n          narrow\n        ></integrations-startup-time>\n      </ha-dialog>\n    `;\n  }\n\n  static styles: CSSResultGroup = [\n    haStyleDialog,\n    css`\n      ha-dialog {\n        --dialog-content-padding: 0;\n      }\n    `,\n  ];\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"dialog-integration-startup\": DialogIntegrationStartup;\n  }\n}\n"],"mappings":";AAAA,OAAO,iCAAiC;AACxC,SAASA,GAAG,EAAkBC,IAAI,EAAEC,UAAU,EAAEC,OAAO,QAAQ,KAAK;AACpE,SAASC,aAAa,EAAEC,QAAQ,EAAEC,KAAK,QAAQ,gBAAgB;AAC/D,SAASC,SAAS,QAAQ,gCAAgC;AAC1D,OAAO,6BAA6B;AACpC,SAASC,kBAAkB,QAAQ,+BAA+B;AAClE,SAASC,aAAa,QAAQ,2BAA2B;AAEzD,OAAO,6BAA6B;AAAC,IAG/BC,wBAAwB,GAAAC,SAAA,EAD7BP,aAAa,CAAC,4BAA4B,CAAC,aAAAQ,WAAA,EAAAC,WAAA;EAA5C,MACMH,wBAAwB,SAAAG,WAAA,CAAoB;IAAAC,YAAA,GAAAC,IAAA;MAAA,SAAAA,IAAA;MAAAH,WAAA;IAAA;EA+ClD;EAAC;IAAAI,CAAA,EA/CKN,wBAAwB;IAAAO,CAAA;MAAAC,IAAA;MAAAC,UAAA,GAC3Bd,QAAQ,CAAC;QAAEe,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAC,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAE9Bb,KAAK,CAAC,CAAC;MAAAe,GAAA;MAAAC,MAAA;QAAA,OAAmB,KAAK;MAAA;IAAA;MAAAJ,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAEhC,SAAAC,WAAA,EAA0B;QACxB,IAAI,CAACC,OAAO,GAAG,IAAI;MACrB;IAAC;MAAAN,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAG,YAAA,EAAqB;QACnB,IAAI,CAACD,OAAO,GAAG,KAAK;QACpBjB,SAAS,CAAC,IAAI,EAAE,eAAe,EAAE;UAAEmB,MAAM,EAAE,IAAI,CAACC;QAAU,CAAC,CAAC;MAC9D;IAAC;MAAAT,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAM,OAAA,EAAmB;QACjB,IAAI,CAAC,IAAI,CAACJ,OAAO,EAAE;UACjB,OAAOrB,OAAO;QAChB;QAEA,OAAOF,IAAK;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmBO,kBAAkB,CAC3B,IAAI,CAACqB,IAAI,EACT,IAAI,CAACA,IAAI,CAACC,QAAQ,CAAC,kDAAkD,CACvE,CAAE;AACV,kBAAkB,IAAI,CAACL,WAAY;AACnC;AACA;AACA,kBAAkB,IAAI,CAACI,IAAK;AAC5B;AACA;AACA;AACA,KAAK;MACH;IAAC;MAAAX,IAAA;MAAAa,MAAA;MAAAV,GAAA;MAAAC,MAAA;QAAA,OAE+B,CAC9Bb,aAAa,EACbT,GAAI;AACR;AACA;AACA;AACA,KAAK,CACF;MAAA;IAAA;EAAA;AAAA,GA9CoCE,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}