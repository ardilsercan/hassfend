{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nconst mdiFolderUpload = \"M20,6A2,2 0 0,1 22,8V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4H10L12,6H20M10.75,13H14V17H16V13H19.25L15,8.75\";\nimport { html, LitElement } from \"lit\";\nimport { customElement, state } from \"lit/decorators\";\nimport { fireEvent } from \"../../../src/common/dom/fire_event\";\nimport \"../../../src/components/ha-circular-progress\";\nimport \"../../../src/components/ha-file-upload\";\nimport { uploadBackup } from \"../../../src/data/hassio/backup\";\nimport { extractApiErrorMessage } from \"../../../src/data/hassio/common\";\nimport { showAlertDialog } from \"../../../src/dialogs/generic/show-dialog-box\";\nexport let HassioUploadBackup = _decorate([customElement(\"hassio-upload-backup\")], function (_initialize, _LitElement) {\n  class HassioUploadBackup extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HassioUploadBackup,\n    d: [{\n      kind: \"field\",\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"value\",\n      value() {\n        return null;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_uploading\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        return html`\n      <ha-file-upload\n        .hass=${this.hass}\n        .uploading=${this._uploading}\n        .icon=${mdiFolderUpload}\n        accept=\"application/x-tar\"\n        label=\"Upload backup\"\n        supports=\"Supports .TAR files\"\n        @file-picked=${this._uploadFile}\n      ></ha-file-upload>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_uploadFile\",\n      value: async function _uploadFile(ev) {\n        const file = ev.detail.files[0];\n        if (![\"application/x-tar\"].includes(file.type)) {\n          showAlertDialog(this, {\n            title: \"Unsupported file format\",\n            text: \"Please choose a Indexline Technology backup file (.tar)\",\n            confirmText: \"ok\"\n          });\n          return;\n        }\n        this._uploading = true;\n        try {\n          const backup = await uploadBackup(this.hass, file);\n          fireEvent(this, \"backup-uploaded\", {\n            backup: backup.data\n          });\n        } catch (err) {\n          showAlertDialog(this, {\n            title: \"Upload failed\",\n            text: extractApiErrorMessage(err),\n            confirmText: \"ok\"\n          });\n        } finally {\n          this._uploading = false;\n        }\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["html","LitElement","customElement","state","fireEvent","uploadBackup","extractApiErrorMessage","showAlertDialog","HassioUploadBackup","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","key","value","decorators","render","hass","_uploading","mdiFolderUpload","_uploadFile","ev","file","detail","files","includes","type","title","text","confirmText","backup","data","err"],"sources":["/workspaces/frontend/hassio/src/components/hassio-upload-backup.ts"],"sourcesContent":["import { mdiFolderUpload } from \"@mdi/js\";\nimport { html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, state } from \"lit/decorators\";\nimport { fireEvent } from \"../../../src/common/dom/fire_event\";\nimport \"../../../src/components/ha-circular-progress\";\nimport \"../../../src/components/ha-file-upload\";\nimport { HassioBackup, uploadBackup } from \"../../../src/data/hassio/backup\";\nimport { extractApiErrorMessage } from \"../../../src/data/hassio/common\";\nimport { showAlertDialog } from \"../../../src/dialogs/generic/show-dialog-box\";\nimport { HomeAssistant } from \"../../../src/types\";\n\ndeclare global {\n  interface HASSDomEvents {\n    \"backup-uploaded\": { backup: HassioBackup };\n  }\n}\n\n@customElement(\"hassio-upload-backup\")\nexport class HassioUploadBackup extends LitElement {\n  public hass?: HomeAssistant;\n\n  @state() public value: string | null = null;\n\n  @state() private _uploading = false;\n\n  public render(): TemplateResult {\n    return html`\n      <ha-file-upload\n        .hass=${this.hass}\n        .uploading=${this._uploading}\n        .icon=${mdiFolderUpload}\n        accept=\"application/x-tar\"\n        label=\"Upload backup\"\n        supports=\"Supports .TAR files\"\n        @file-picked=${this._uploadFile}\n      ></ha-file-upload>\n    `;\n  }\n\n  private async _uploadFile(ev) {\n    const file = ev.detail.files[0];\n\n    if (![\"application/x-tar\"].includes(file.type)) {\n      showAlertDialog(this, {\n        title: \"Unsupported file format\",\n        text: \"Please choose a Indexline Technology backup file (.tar)\",\n        confirmText: \"ok\",\n      });\n      return;\n    }\n    this._uploading = true;\n    try {\n      const backup = await uploadBackup(this.hass, file);\n      fireEvent(this, \"backup-uploaded\", { backup: backup.data });\n    } catch (err: any) {\n      showAlertDialog(this, {\n        title: \"Upload failed\",\n        text: extractApiErrorMessage(err),\n        confirmText: \"ok\",\n      });\n    } finally {\n      this._uploading = false;\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hassio-upload-backup\": HassioUploadBackup;\n  }\n}\n"],"mappings":";;AACA,SAASA,IAAI,EAAEC,UAAU,QAAwB,KAAK;AACtD,SAASC,aAAa,EAAEC,KAAK,QAAQ,gBAAgB;AACrD,SAASC,SAAS,QAAQ,oCAAoC;AAC9D,OAAO,8CAA8C;AACrD,OAAO,wCAAwC;AAC/C,SAAuBC,YAAY,QAAQ,iCAAiC;AAC5E,SAASC,sBAAsB,QAAQ,iCAAiC;AACxE,SAASC,eAAe,QAAQ,8CAA8C;AAS9E,WACaC,kBAAkB,GAAAC,SAAA,EAD9BP,aAAa,CAAC,sBAAsB,CAAC,aAAAQ,WAAA,EAAAC,WAAA;EAAtC,MACaH,kBAAkB,SAAAG,WAAA,CAAoB;IAAAC,YAAA,GAAAC,IAAA;MAAA,SAAAA,IAAA;MAAAH,WAAA;IAAA;EA8CnD;EAAC;IAAAI,CAAA,EA9CYN,kBAAkB;IAAAO,CAAA;MAAAC,IAAA;MAAAC,GAAA;MAAAC,KAAA;IAAA;MAAAF,IAAA;MAAAG,UAAA,GAG5BhB,KAAK,CAAC,CAAC;MAAAc,GAAA;MAAAC,MAAA;QAAA,OAA+B,IAAI;MAAA;IAAA;MAAAF,IAAA;MAAAG,UAAA,GAE1ChB,KAAK,CAAC,CAAC;MAAAc,GAAA;MAAAC,MAAA;QAAA,OAAsB,KAAK;MAAA;IAAA;MAAAF,IAAA;MAAAC,GAAA;MAAAC,KAAA,EAEnC,SAAAE,OAAA,EAAgC;QAC9B,OAAOpB,IAAK;AAChB;AACA,gBAAgB,IAAI,CAACqB,IAAK;AAC1B,qBAAqB,IAAI,CAACC,UAAW;AACrC,gBAAgBC,eAAgB;AAChC;AACA;AACA;AACA,uBAAuB,IAAI,CAACC,WAAY;AACxC;AACA,KAAK;MACH;IAAC;MAAAR,IAAA;MAAAC,GAAA;MAAAC,KAAA,EAED,eAAAM,YAA0BC,EAAE,EAAE;QAC5B,MAAMC,IAAI,GAAGD,EAAE,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;QAE/B,IAAI,CAAC,CAAC,mBAAmB,CAAC,CAACC,QAAQ,CAACH,IAAI,CAACI,IAAI,CAAC,EAAE;UAC9CvB,eAAe,CAAC,IAAI,EAAE;YACpBwB,KAAK,EAAE,yBAAyB;YAChCC,IAAI,EAAE,yDAAyD;YAC/DC,WAAW,EAAE;UACf,CAAC,CAAC;UACF;QACF;QACA,IAAI,CAACX,UAAU,GAAG,IAAI;QACtB,IAAI;UACF,MAAMY,MAAM,GAAG,MAAM7B,YAAY,CAAC,IAAI,CAACgB,IAAI,EAAEK,IAAI,CAAC;UAClDtB,SAAS,CAAC,IAAI,EAAE,iBAAiB,EAAE;YAAE8B,MAAM,EAAEA,MAAM,CAACC;UAAK,CAAC,CAAC;QAC7D,CAAC,CAAC,OAAOC,GAAQ,EAAE;UACjB7B,eAAe,CAAC,IAAI,EAAE;YACpBwB,KAAK,EAAE,eAAe;YACtBC,IAAI,EAAE1B,sBAAsB,CAAC8B,GAAG,CAAC;YACjCH,WAAW,EAAE;UACf,CAAC,CAAC;QACJ,CAAC,SAAS;UACR,IAAI,CAACX,UAAU,GAAG,KAAK;QACzB;MACF;IAAC;EAAA;AAAA,GA7CqCrB,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}