{"ast":null,"code":"import \"core-js/modules/es.regexp.constructor.js\";\nimport \"core-js/modules/es.regexp.dot-all.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.sticky.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\n// https://regex101.com/r/kc5C14/2\nvar regExpString = \"^\\\\d{4}-(0[1-9]|1[0-2])-([12]\\\\d|0[1-9]|3[01])\";\nvar regExp = new RegExp(regExpString + \"$\");\n// 2nd expression without the \"end of string\" enforced, so it can be used\n// to just verify the start of a string and then based on that result e.g.\n// check for a full timestamp string efficiently.\nvar regExpNoStringEnd = new RegExp(regExpString);\nexport var isDate = function isDate(input) {\n  var allowCharsAfterDate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return allowCharsAfterDate ? regExpNoStringEnd.test(input) : regExp.test(input);\n};","map":{"version":3,"names":["regExpString","regExp","RegExp","regExpNoStringEnd","isDate","input","allowCharsAfterDate","arguments","length","undefined","test"],"sources":["/workspaces/frontend/src/common/string/is_date.ts"],"sourcesContent":["// https://regex101.com/r/kc5C14/2\nconst regExpString = \"^\\\\d{4}-(0[1-9]|1[0-2])-([12]\\\\d|0[1-9]|3[01])\";\n\nconst regExp = new RegExp(regExpString + \"$\");\n// 2nd expression without the \"end of string\" enforced, so it can be used\n// to just verify the start of a string and then based on that result e.g.\n// check for a full timestamp string efficiently.\nconst regExpNoStringEnd = new RegExp(regExpString);\n\nexport const isDate = (input: string, allowCharsAfterDate = false): boolean =>\n  allowCharsAfterDate ? regExpNoStringEnd.test(input) : regExp.test(input);\n"],"mappings":";;;;;;AAAA;AACA,IAAMA,YAAY,GAAG,gDAAgD;AAErE,IAAMC,MAAM,GAAG,IAAIC,MAAM,CAACF,YAAY,GAAG,GAAG,CAAC;AAC7C;AACA;AACA;AACA,IAAMG,iBAAiB,GAAG,IAAID,MAAM,CAACF,YAAY,CAAC;AAElD,OAAO,IAAMI,MAAM,GAAG,SAATA,MAAMA,CAAIC,KAAa;EAAA,IAAEC,mBAAmB,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,KAAK;EAAA,OAC/DD,mBAAmB,GAAGH,iBAAiB,CAACO,IAAI,CAACL,KAAK,CAAC,GAAGJ,MAAM,CAACS,IAAI,CAACL,KAAK,CAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}