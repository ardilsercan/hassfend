{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _regeneratorRuntime from \"@babel/runtime/helpers/regeneratorRuntime\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _createForOfIteratorHelper from \"@babel/runtime/helpers/createForOfIteratorHelper\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _templateObject;\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport { css } from \"lit\";\nimport { computeCardSize } from \"../common/compute-card-size\";\nimport { HuiStackCard } from \"./hui-stack-card\";\nexport var DEFAULT_COLUMNS = 3;\nvar SQUARE_ROW_HEIGHTS_BY_COLUMNS = {\n  1: 5,\n  2: 3,\n  3: 2\n};\nvar HuiGridCard = /*#__PURE__*/function (_HuiStackCard) {\n  _inherits(HuiGridCard, _HuiStackCard);\n  function HuiGridCard() {\n    _classCallCheck(this, HuiGridCard);\n    return _callSuper(this, HuiGridCard, arguments);\n  }\n  _createClass(HuiGridCard, [{\n    key: \"getCardSize\",\n    value: function () {\n      var _getCardSize = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var rowHeight, promises, _iterator, _step, element, cardSizes, totalHeight, start;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!(!this._cards || !this._config)) {\n                _context.next = 2;\n                break;\n              }\n              return _context.abrupt(\"return\", 0);\n            case 2:\n              if (!this.square) {\n                _context.next = 5;\n                break;\n              }\n              rowHeight = SQUARE_ROW_HEIGHTS_BY_COLUMNS[this.columns] || 1;\n              return _context.abrupt(\"return\", (this._cards.length < this.columns ? rowHeight : this._cards.length / this.columns * rowHeight) + (this._config.title ? 1 : 0));\n            case 5:\n              promises = [];\n              _iterator = _createForOfIteratorHelper(this._cards);\n              try {\n                for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                  element = _step.value;\n                  promises.push(computeCardSize(element));\n                }\n              } catch (err) {\n                _iterator.e(err);\n              } finally {\n                _iterator.f();\n              }\n              _context.next = 10;\n              return Promise.all(promises);\n            case 10:\n              cardSizes = _context.sent;\n              totalHeight = this._config.title ? 1 : 0; // Each column will adjust to max card size of it's row\n              for (start = 0; start < cardSizes.length; start += this.columns) {\n                totalHeight += Math.max.apply(Math, _toConsumableArray(cardSizes.slice(start, start + this.columns)));\n              }\n              return _context.abrupt(\"return\", totalHeight);\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function getCardSize() {\n        return _getCardSize.apply(this, arguments);\n      }\n      return getCardSize;\n    }()\n  }, {\n    key: \"columns\",\n    get: function get() {\n      var _this$_config;\n      return ((_this$_config = this._config) === null || _this$_config === void 0 ? void 0 : _this$_config.columns) || DEFAULT_COLUMNS;\n    }\n  }, {\n    key: \"square\",\n    get: function get() {\n      var _this$_config2;\n      return ((_this$_config2 = this._config) === null || _this$_config2 === void 0 ? void 0 : _this$_config2.square) !== false;\n    }\n  }, {\n    key: \"setConfig\",\n    value: function setConfig(config) {\n      _get(_getPrototypeOf(HuiGridCard.prototype), \"setConfig\", this).call(this, config);\n      this.style.setProperty(\"--grid-card-column-count\", String(this.columns));\n      if (this.square) {\n        this.setAttribute(\"square\", \"\");\n      } else {\n        this.removeAttribute(\"square\");\n      }\n    }\n  }], [{\n    key: \"getConfigElement\",\n    value: function () {\n      var _getConfigElement = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return import(\"../editor/config-elements/hui-grid-card-editor\");\n            case 2:\n              return _context2.abrupt(\"return\", document.createElement(\"hui-grid-card-editor\"));\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }));\n      function getConfigElement() {\n        return _getConfigElement.apply(this, arguments);\n      }\n      return getConfigElement;\n    }()\n  }, {\n    key: \"styles\",\n    get: function get() {\n      return [_get(_getPrototypeOf(HuiGridCard), \"sharedStyles\", this), css(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n        #root {\\n          display: grid;\\n          grid-template-columns: repeat(\\n            var(--grid-card-column-count, \", \"),\\n            minmax(0, 1fr)\\n          );\\n          grid-gap: var(--grid-card-gap, 8px);\\n        }\\n        :host([square]) #root {\\n          grid-auto-rows: 1fr;\\n        }\\n        :host([square]) #root::before {\\n          content: \\\"\\\";\\n          width: 0;\\n          padding-bottom: 100%;\\n          grid-row: 1 / 1;\\n          grid-column: 1 / 1;\\n        }\\n\\n        :host([square]) #root > *:not([hidden]) {\\n          grid-row: 1 / 1;\\n          grid-column: 1 / 1;\\n        }\\n        :host([square]) #root > *:not([hidden]) ~ *:not([hidden]) {\\n          /*\\n\\t       * Remove grid-row and grid-column from every element that comes after\\n\\t       * the first not-hidden element\\n\\t       */\\n          grid-row: unset;\\n          grid-column: unset;\\n        }\\n      \"])), DEFAULT_COLUMNS)];\n    }\n  }]);\n  return HuiGridCard;\n}(HuiStackCard);\ncustomElements.define(\"hui-grid-card\", HuiGridCard);","map":{"version":3,"names":["css","computeCardSize","HuiStackCard","DEFAULT_COLUMNS","SQUARE_ROW_HEIGHTS_BY_COLUMNS","HuiGridCard","_HuiStackCard","_inherits","_classCallCheck","_callSuper","arguments","_createClass","key","value","_getCardSize","_asyncToGenerator","_regeneratorRuntime","mark","_callee","rowHeight","promises","_iterator","_step","element","cardSizes","totalHeight","start","wrap","_callee$","_context","prev","next","_cards","_config","abrupt","square","columns","length","title","_createForOfIteratorHelper","s","n","done","push","err","e","f","Promise","all","sent","Math","max","apply","_toConsumableArray","slice","stop","getCardSize","get","_this$_config","_this$_config2","setConfig","config","_get","_getPrototypeOf","prototype","call","style","setProperty","String","setAttribute","removeAttribute","_getConfigElement","_callee2","_callee2$","_context2","document","createElement","getConfigElement","_templateObject","_taggedTemplateLiteral","customElements","define"],"sources":["/Users/sercanardil/Desktop/frontend/src/panels/lovelace/cards/hui-grid-card.ts"],"sourcesContent":["import { css, CSSResultGroup } from \"lit\";\nimport { computeCardSize } from \"../common/compute-card-size\";\nimport { LovelaceCardEditor } from \"../types\";\nimport { HuiStackCard } from \"./hui-stack-card\";\nimport { GridCardConfig } from \"./types\";\n\nexport const DEFAULT_COLUMNS = 3;\nconst SQUARE_ROW_HEIGHTS_BY_COLUMNS = {\n  1: 5,\n  2: 3,\n  3: 2,\n};\n\nclass HuiGridCard extends HuiStackCard<GridCardConfig> {\n  public static async getConfigElement(): Promise<LovelaceCardEditor> {\n    await import(\"../editor/config-elements/hui-grid-card-editor\");\n    return document.createElement(\"hui-grid-card-editor\");\n  }\n\n  public async getCardSize(): Promise<number> {\n    if (!this._cards || !this._config) {\n      return 0;\n    }\n\n    if (this.square) {\n      const rowHeight = SQUARE_ROW_HEIGHTS_BY_COLUMNS[this.columns] || 1;\n      return (\n        (this._cards.length < this.columns\n          ? rowHeight\n          : (this._cards.length / this.columns) * rowHeight) +\n        (this._config.title ? 1 : 0)\n      );\n    }\n\n    const promises: Array<Promise<number> | number> = [];\n\n    for (const element of this._cards) {\n      promises.push(computeCardSize(element));\n    }\n\n    const cardSizes = await Promise.all(promises);\n\n    let totalHeight = this._config.title ? 1 : 0;\n\n    // Each column will adjust to max card size of it's row\n    for (let start = 0; start < cardSizes.length; start += this.columns) {\n      totalHeight += Math.max(...cardSizes.slice(start, start + this.columns));\n    }\n\n    return totalHeight;\n  }\n\n  get columns() {\n    return this._config?.columns || DEFAULT_COLUMNS;\n  }\n\n  get square() {\n    return this._config?.square !== false;\n  }\n\n  setConfig(config: GridCardConfig) {\n    super.setConfig(config);\n    this.style.setProperty(\"--grid-card-column-count\", String(this.columns));\n    if (this.square) {\n      this.setAttribute(\"square\", \"\");\n    } else {\n      this.removeAttribute(\"square\");\n    }\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      super.sharedStyles,\n      css`\n        #root {\n          display: grid;\n          grid-template-columns: repeat(\n            var(--grid-card-column-count, ${DEFAULT_COLUMNS}),\n            minmax(0, 1fr)\n          );\n          grid-gap: var(--grid-card-gap, 8px);\n        }\n        :host([square]) #root {\n          grid-auto-rows: 1fr;\n        }\n        :host([square]) #root::before {\n          content: \"\";\n          width: 0;\n          padding-bottom: 100%;\n          grid-row: 1 / 1;\n          grid-column: 1 / 1;\n        }\n\n        :host([square]) #root > *:not([hidden]) {\n          grid-row: 1 / 1;\n          grid-column: 1 / 1;\n        }\n        :host([square]) #root > *:not([hidden]) ~ *:not([hidden]) {\n          /*\n\t       * Remove grid-row and grid-column from every element that comes after\n\t       * the first not-hidden element\n\t       */\n          grid-row: unset;\n          grid-column: unset;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-grid-card\": HuiGridCard;\n  }\n}\n\ncustomElements.define(\"hui-grid-card\", HuiGridCard);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}