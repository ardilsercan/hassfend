{"ast":null,"code":"import { computeDomain } from \"../common/entity/compute_domain\";\nimport { computeStateName } from \"../common/entity/compute_state_name\";\nimport { isUnavailableState } from \"./entity\";\nimport { stringCompare } from \"../common/string/compare\";\nexport let TodoItemStatus = /*#__PURE__*/function (TodoItemStatus) {\n  TodoItemStatus[\"NeedsAction\"] = \"needs_action\";\n  TodoItemStatus[\"Completed\"] = \"completed\";\n  return TodoItemStatus;\n}({});\nexport let TodoListEntityFeature = /*#__PURE__*/function (TodoListEntityFeature) {\n  TodoListEntityFeature[TodoListEntityFeature[\"CREATE_TODO_ITEM\"] = 1] = \"CREATE_TODO_ITEM\";\n  TodoListEntityFeature[TodoListEntityFeature[\"DELETE_TODO_ITEM\"] = 2] = \"DELETE_TODO_ITEM\";\n  TodoListEntityFeature[TodoListEntityFeature[\"UPDATE_TODO_ITEM\"] = 4] = \"UPDATE_TODO_ITEM\";\n  TodoListEntityFeature[TodoListEntityFeature[\"MOVE_TODO_ITEM\"] = 8] = \"MOVE_TODO_ITEM\";\n  TodoListEntityFeature[TodoListEntityFeature[\"SET_DUE_DATE_ON_ITEM\"] = 16] = \"SET_DUE_DATE_ON_ITEM\";\n  TodoListEntityFeature[TodoListEntityFeature[\"SET_DUE_DATETIME_ON_ITEM\"] = 32] = \"SET_DUE_DATETIME_ON_ITEM\";\n  TodoListEntityFeature[TodoListEntityFeature[\"SET_DESCRIPTION_ON_ITEM\"] = 64] = \"SET_DESCRIPTION_ON_ITEM\";\n  return TodoListEntityFeature;\n}({});\nexport const getTodoLists = hass => Object.keys(hass.states).filter(entityId => computeDomain(entityId) === \"todo\" && !isUnavailableState(hass.states[entityId].state)).map(entityId => ({\n  ...hass.states[entityId],\n  entity_id: entityId,\n  name: computeStateName(hass.states[entityId])\n})).sort((a, b) => stringCompare(a.name, b.name, hass.locale.language));\nexport const fetchItems = async (hass, entity_id) => {\n  const result = await hass.callWS({\n    type: \"todo/item/list\",\n    entity_id\n  });\n  return result.items;\n};\nexport const subscribeItems = (hass, entity_id, callback) => hass.connection.subscribeMessage(callback, {\n  type: \"todo/item/subscribe\",\n  entity_id\n});\nexport const updateItem = (hass, entity_id, item) => {\n  var _item$due, _item$due2;\n  return hass.callService(\"todo\", \"update_item\", {\n    item: item.uid,\n    rename: item.summary,\n    status: item.status,\n    description: item.description,\n    due_datetime: (_item$due = item.due) !== null && _item$due !== void 0 && _item$due.includes(\"T\") ? item.due : undefined,\n    due_date: item.due === undefined || (_item$due2 = item.due) !== null && _item$due2 !== void 0 && _item$due2.includes(\"T\") ? undefined : item.due\n  }, {\n    entity_id\n  });\n};\nexport const createItem = (hass, entity_id, item) => {\n  var _item$due3, _item$due4;\n  return hass.callService(\"todo\", \"add_item\", {\n    item: item.summary,\n    description: item.description || undefined,\n    due_datetime: (_item$due3 = item.due) !== null && _item$due3 !== void 0 && _item$due3.includes(\"T\") ? item.due : undefined,\n    due_date: item.due === undefined || (_item$due4 = item.due) !== null && _item$due4 !== void 0 && _item$due4.includes(\"T\") ? undefined : item.due\n  }, {\n    entity_id\n  });\n};\nexport const deleteItems = (hass, entity_id, uids) => hass.callService(\"todo\", \"remove_item\", {\n  item: uids\n}, {\n  entity_id\n});\nexport const moveItem = (hass, entity_id, uid, previous_uid) => hass.callWS({\n  type: \"todo/item/move\",\n  entity_id,\n  uid,\n  previous_uid\n});","map":{"version":3,"names":["computeDomain","computeStateName","isUnavailableState","stringCompare","TodoItemStatus","TodoListEntityFeature","getTodoLists","hass","Object","keys","states","filter","entityId","state","map","entity_id","name","sort","a","b","locale","language","fetchItems","result","callWS","type","items","subscribeItems","callback","connection","subscribeMessage","updateItem","item","_item$due","_item$due2","callService","uid","rename","summary","status","description","due_datetime","due","includes","undefined","due_date","createItem","_item$due3","_item$due4","deleteItems","uids","moveItem","previous_uid"],"sources":["/Users/sercanardil/Desktop/frontend/src/data/todo.ts"],"sourcesContent":["import { HomeAssistant, ServiceCallResponse } from \"../types\";\nimport { computeDomain } from \"../common/entity/compute_domain\";\nimport { computeStateName } from \"../common/entity/compute_state_name\";\nimport { isUnavailableState } from \"./entity\";\nimport { stringCompare } from \"../common/string/compare\";\n\nexport interface TodoList {\n  entity_id: string;\n  name: string;\n}\n\nexport const enum TodoItemStatus {\n  NeedsAction = \"needs_action\",\n  Completed = \"completed\",\n}\n\nexport interface TodoItem {\n  uid: string;\n  summary: string;\n  status: TodoItemStatus;\n  description?: string | null;\n  due?: string | null;\n}\n\nexport const enum TodoListEntityFeature {\n  CREATE_TODO_ITEM = 1,\n  DELETE_TODO_ITEM = 2,\n  UPDATE_TODO_ITEM = 4,\n  MOVE_TODO_ITEM = 8,\n  SET_DUE_DATE_ON_ITEM = 16,\n  SET_DUE_DATETIME_ON_ITEM = 32,\n  SET_DESCRIPTION_ON_ITEM = 64,\n}\n\nexport const getTodoLists = (hass: HomeAssistant): TodoList[] =>\n  Object.keys(hass.states)\n    .filter(\n      (entityId) =>\n        computeDomain(entityId) === \"todo\" &&\n        !isUnavailableState(hass.states[entityId].state)\n    )\n    .map((entityId) => ({\n      ...hass.states[entityId],\n      entity_id: entityId,\n      name: computeStateName(hass.states[entityId]),\n    }))\n    .sort((a, b) => stringCompare(a.name, b.name, hass.locale.language));\n\nexport interface TodoItems {\n  items: TodoItem[];\n}\n\nexport const fetchItems = async (\n  hass: HomeAssistant,\n  entity_id: string\n): Promise<TodoItem[]> => {\n  const result = await hass.callWS<TodoItems>({\n    type: \"todo/item/list\",\n    entity_id,\n  });\n  return result.items;\n};\n\nexport const subscribeItems = (\n  hass: HomeAssistant,\n  entity_id: string,\n  callback: (item) => void\n) =>\n  hass.connection.subscribeMessage<any>(callback, {\n    type: \"todo/item/subscribe\",\n    entity_id,\n  });\n\nexport const updateItem = (\n  hass: HomeAssistant,\n  entity_id: string,\n  item: TodoItem\n): Promise<ServiceCallResponse> =>\n  hass.callService(\n    \"todo\",\n    \"update_item\",\n    {\n      item: item.uid,\n      rename: item.summary,\n      status: item.status,\n      description: item.description,\n      due_datetime: item.due?.includes(\"T\") ? item.due : undefined,\n      due_date:\n        item.due === undefined || item.due?.includes(\"T\")\n          ? undefined\n          : item.due,\n    },\n    { entity_id }\n  );\n\nexport const createItem = (\n  hass: HomeAssistant,\n  entity_id: string,\n  item: Omit<TodoItem, \"uid\" | \"status\">\n): Promise<ServiceCallResponse> =>\n  hass.callService(\n    \"todo\",\n    \"add_item\",\n    {\n      item: item.summary,\n      description: item.description || undefined,\n      due_datetime: item.due?.includes(\"T\") ? item.due : undefined,\n      due_date:\n        item.due === undefined || item.due?.includes(\"T\")\n          ? undefined\n          : item.due,\n    },\n    { entity_id }\n  );\n\nexport const deleteItems = (\n  hass: HomeAssistant,\n  entity_id: string,\n  uids: string[]\n): Promise<ServiceCallResponse> =>\n  hass.callService(\n    \"todo\",\n    \"remove_item\",\n    {\n      item: uids,\n    },\n    { entity_id }\n  );\n\nexport const moveItem = (\n  hass: HomeAssistant,\n  entity_id: string,\n  uid: string,\n  previous_uid: string | undefined\n): Promise<void> =>\n  hass.callWS({\n    type: \"todo/item/move\",\n    entity_id,\n    uid,\n    previous_uid,\n  });\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}