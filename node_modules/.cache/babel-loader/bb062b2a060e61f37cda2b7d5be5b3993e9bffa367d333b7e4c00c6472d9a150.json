{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/helpers/regeneratorRuntime\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _typeof from \"@babel/runtime/helpers/typeof\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.object.values.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.string.search.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport { ReactiveElement } from \"lit\";\nimport { property } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { navigate } from \"../common/navigate\";\nvar extractPage = function extractPage(path, defaultPage) {\n  if (path === \"\") {\n    return defaultPage;\n  }\n  var subpathStart = path.indexOf(\"/\", 1);\n  return subpathStart === -1 ? path.substr(1) : path.substr(1, subpathStart - 1);\n};\n// Time to wait for code to load before we show loading screen.\nvar LOADING_SCREEN_THRESHOLD = 400; // ms\n\nexport var HassRouterPage = _decorate(null, function (_initialize, _ReactiveElement) {\n  var HassRouterPage = /*#__PURE__*/function (_ReactiveElement2) {\n    _inherits(HassRouterPage, _ReactiveElement2);\n    function HassRouterPage() {\n      var _this;\n      _classCallCheck(this, HassRouterPage);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, HassRouterPage, [].concat(args));\n      _initialize(_assertThisInitialized(_this));\n      return _this;\n    }\n    return _createClass(HassRouterPage);\n  }(_ReactiveElement);\n  return {\n    F: HassRouterPage,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"route\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"routerOptions\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_currentPage\",\n      value: function value() {\n        return \"\";\n      }\n    }, {\n      kind: \"field\",\n      key: \"_currentLoadProm\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_cache\",\n      value: function value() {\n        return {};\n      }\n    }, {\n      kind: \"field\",\n      key: \"_initialLoadDone\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_computeTail\",\n      value: function value() {\n        return memoizeOne(function (route) {\n          var dividerPos = route.path.indexOf(\"/\", 1);\n          return dividerPos === -1 ? {\n            prefix: route.prefix + route.path,\n            path: \"\"\n          } : {\n            prefix: route.prefix + route.path.substr(0, dividerPos),\n            path: route.path.substr(dividerPos)\n          };\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"createRenderRoot\",\n      value: function createRenderRoot() {\n        return this;\n      }\n    }, {\n      kind: \"method\",\n      key: \"update\",\n      value: function update(changedProps) {\n        var _this2 = this;\n        _get(_getPrototypeOf(HassRouterPage.prototype), \"update\", this).call(this, changedProps);\n        var routerOptions = this.routerOptions || {\n          routes: {}\n        };\n        if (routerOptions && routerOptions.initialLoad && !this._initialLoadDone) {\n          return;\n        }\n        if (!changedProps.has(\"route\")) {\n          // Do not update if we have a currentLoadProm, because that means\n          // that there is still an old panel shown and we're moving to a new one.\n          if (this.lastChild && !this._currentLoadProm) {\n            this.updatePageEl(this.lastChild, changedProps);\n          }\n          return;\n        }\n        var route = this.route;\n        var defaultPage = routerOptions.defaultPage;\n        if (route && route.path === \"\" && defaultPage !== undefined) {\n          navigate(\"\".concat(route.prefix, \"/\").concat(defaultPage), {\n            replace: true\n          });\n        }\n        var newPage = route ? extractPage(route.path, defaultPage || \"\") : \"not_found\";\n        var routeOptions = routerOptions.routes[newPage];\n\n        // Handle redirects\n        while (typeof routeOptions === \"string\") {\n          newPage = routeOptions;\n          routeOptions = routerOptions.routes[newPage];\n        }\n        if (routerOptions.beforeRender) {\n          var result = routerOptions.beforeRender(newPage);\n          if (result !== undefined) {\n            newPage = result;\n            routeOptions = routerOptions.routes[newPage];\n\n            // Handle redirects\n            while (typeof routeOptions === \"string\") {\n              newPage = routeOptions;\n              routeOptions = routerOptions.routes[newPage];\n            }\n\n            // Update the url if we know where we're mounted.\n            if (route) {\n              navigate(\"\".concat(route.prefix, \"/\").concat(result).concat(location.search), {\n                replace: true\n              });\n            }\n          }\n        }\n        if (this._currentPage === newPage) {\n          if (this.lastChild) {\n            this.updatePageEl(this.lastChild, changedProps);\n          }\n          return;\n        }\n        if (!routeOptions) {\n          this._currentPage = \"\";\n          if (this.lastChild) {\n            this.removeChild(this.lastChild);\n          }\n          return;\n        }\n        this._currentPage = newPage;\n        var loadProm = routeOptions.load ? routeOptions.load() : Promise.resolve();\n        var showLoadingScreenTimeout;\n\n        // Check when loading the page source failed.\n        loadProm.catch(function (err) {\n          // eslint-disable-next-line\n          console.error(\"Error loading page\", newPage, err);\n\n          // Verify that we're still trying to show the same page.\n          if (_this2._currentPage !== newPage) {\n            return;\n          }\n\n          // Removes either loading screen or the panel\n          if (_this2.lastChild) {\n            _this2.removeChild(_this2.lastChild);\n          }\n          if (showLoadingScreenTimeout) {\n            clearTimeout(showLoadingScreenTimeout);\n          }\n\n          // Show error screen\n          _this2.appendChild(_this2.createErrorScreen(\"Error while loading page \".concat(newPage, \".\")));\n        });\n\n        // If we don't show loading screen, just show the panel.\n        // It will be automatically upgraded when loading done.\n        if (!routerOptions.showLoading) {\n          this._createPanel(routerOptions, newPage, routeOptions);\n          return;\n        }\n\n        // We are only going to show the loading screen after some time.\n        // That way we won't have a double fast flash on fast connections.\n        var created = false;\n        showLoadingScreenTimeout = window.setTimeout(function () {\n          if (created || _this2._currentPage !== newPage) {\n            return;\n          }\n\n          // Show a loading screen.\n          if (_this2.lastChild) {\n            _this2.removeChild(_this2.lastChild);\n          }\n          _this2.appendChild(_this2.createLoadingScreen());\n        }, LOADING_SCREEN_THRESHOLD);\n        this._currentLoadProm = loadProm.then(function () {\n          _this2._currentLoadProm = undefined;\n          // Check if we're still trying to show the same page.\n          if (_this2._currentPage !== newPage) {\n            return;\n          }\n          created = true;\n          _this2._createPanel(routerOptions, newPage,\n          // @ts-ignore TS forgot this is not a string.\n          routeOptions);\n        }, function () {\n          _this2._currentLoadProm = undefined;\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"firstUpdated\",\n      value: function firstUpdated(changedProps) {\n        var _this3 = this;\n        _get(_getPrototypeOf(HassRouterPage.prototype), \"firstUpdated\", this).call(this, changedProps);\n        var options = this.routerOptions;\n        if (!options) {\n          return;\n        }\n        if (options.preloadAll) {\n          Object.values(options.routes).forEach(function (route) {\n            return _typeof(route) === \"object\" && route.load && route.load();\n          });\n        }\n        if (options.initialLoad) {\n          setTimeout(function () {\n            if (!_this3._initialLoadDone) {\n              _this3.appendChild(_this3.createLoadingScreen());\n            }\n          }, LOADING_SCREEN_THRESHOLD);\n          options.initialLoad().then(function () {\n            _this3._initialLoadDone = true;\n            _this3.requestUpdate(\"route\");\n          });\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"createLoadingScreen\",\n      value: function createLoadingScreen() {\n        import(\"./hass-loading-screen\");\n        return document.createElement(\"hass-loading-screen\");\n      }\n    }, {\n      kind: \"method\",\n      key: \"createErrorScreen\",\n      value: function createErrorScreen(error) {\n        import(\"./hass-error-screen\");\n        var errorEl = document.createElement(\"hass-error-screen\");\n        errorEl.error = error;\n        return errorEl;\n      }\n\n      /**\n       * Rebuild the current panel.\n       *\n       * Promise will resolve when rebuilding is done and DOM updated.\n       */\n    }, {\n      kind: \"method\",\n      key: \"rebuild\",\n      value: (function () {\n        var _rebuild = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n          var oldRoute;\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                oldRoute = this.route;\n                if (!(oldRoute === undefined)) {\n                  _context.next = 3;\n                  break;\n                }\n                return _context.abrupt(\"return\");\n              case 3:\n                this.route = undefined;\n                _context.next = 6;\n                return this.updateComplete;\n              case 6:\n                // Make sure that the parent didn't override this in the meanwhile.\n                if (this.route === undefined) {\n                  this.route = oldRoute;\n                }\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee, this);\n        }));\n        function rebuild() {\n          return _rebuild.apply(this, arguments);\n        }\n        return rebuild;\n      }()\n      /**\n       * Promise that resolves when the page has rendered.\n       */\n      )\n    }, {\n      kind: \"get\",\n      key: \"pageRendered\",\n      value: function pageRendered() {\n        var _this4 = this;\n        return this.updateComplete.then(function () {\n          return _this4._currentLoadProm;\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"createElement\",\n      value: function createElement(tag) {\n        return document.createElement(tag);\n      }\n    }, {\n      kind: \"method\",\n      key: \"updatePageEl\",\n      value: function updatePageEl(_pageEl, _changedProps) {\n        // default we do nothing\n      }\n    }, {\n      kind: \"get\",\n      key: \"routeTail\",\n      value: function routeTail() {\n        return this._computeTail(this.route);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_createPanel\",\n      value: function _createPanel(routerOptions, page, routeOptions) {\n        if (this.lastChild) {\n          this.removeChild(this.lastChild);\n        }\n        var panelEl = this._cache[page] || this.createElement(routeOptions.tag);\n        this.updatePageEl(panelEl);\n        this.appendChild(panelEl);\n        if (routerOptions.cacheAll || routeOptions.cache) {\n          this._cache[page] = panelEl;\n        }\n      }\n    }]\n  };\n}, ReactiveElement);","map":{"version":3,"names":["ReactiveElement","property","memoizeOne","navigate","extractPage","path","defaultPage","subpathStart","indexOf","substr","LOADING_SCREEN_THRESHOLD","HassRouterPage","_decorate","_initialize","_ReactiveElement","_ReactiveElement2","_inherits","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_assertThisInitialized","_createClass","F","d","kind","decorators","attribute","key","value","route","dividerPos","prefix","createRenderRoot","update","changedProps","_this2","_get","_getPrototypeOf","prototype","call","routerOptions","routes","initialLoad","_initialLoadDone","has","lastChild","_currentLoadProm","updatePageEl","undefined","replace","newPage","routeOptions","beforeRender","result","location","search","_currentPage","removeChild","loadProm","load","Promise","resolve","showLoadingScreenTimeout","catch","err","console","error","clearTimeout","appendChild","createErrorScreen","showLoading","_createPanel","created","window","setTimeout","createLoadingScreen","then","firstUpdated","_this3","options","preloadAll","Object","values","forEach","_typeof","requestUpdate","document","createElement","errorEl","_rebuild","_asyncToGenerator","_regeneratorRuntime","mark","_callee","oldRoute","wrap","_callee$","_context","prev","next","abrupt","updateComplete","stop","rebuild","apply","pageRendered","_this4","tag","_pageEl","_changedProps","routeTail","_computeTail","page","panelEl","_cache","cacheAll","cache"],"sources":["/workspaces/frontend/src/layouts/hass-router-page.ts"],"sourcesContent":["import { PropertyValues, ReactiveElement } from \"lit\";\nimport { property } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { navigate } from \"../common/navigate\";\nimport { Route } from \"../types\";\n\nconst extractPage = (path: string, defaultPage: string) => {\n  if (path === \"\") {\n    return defaultPage;\n  }\n  const subpathStart = path.indexOf(\"/\", 1);\n  return subpathStart === -1\n    ? path.substr(1)\n    : path.substr(1, subpathStart - 1);\n};\n\nexport interface RouteOptions {\n  // HTML tag of the route page.\n  tag: string;\n  // Function to load the page.\n  load?: () => Promise<unknown>;\n  cache?: boolean;\n}\n\nexport interface RouterOptions {\n  // The default route to show if path does not define a page.\n  defaultPage?: string;\n  // If all routes should be preloaded\n  preloadAll?: boolean;\n  // If a route has been shown, should we keep the element in memory\n  cacheAll?: boolean;\n  // Should we show a loading spinner while we load the element for the route\n  showLoading?: boolean;\n  // Promise that resolves when the initial data is loaded which is needed to show any route.\n  initialLoad?: () => Promise<unknown>;\n  // Hook that is called before rendering a new route. Allowing redirects.\n  // If string returned, that page will be rendered instead.\n  beforeRender?: (page: string) => string | undefined;\n  routes: {\n    // If it's a string, it is another route whose options should be adopted.\n    [route: string]: RouteOptions | string;\n  };\n}\n\n// Time to wait for code to load before we show loading screen.\nconst LOADING_SCREEN_THRESHOLD = 400; // ms\n\nexport class HassRouterPage extends ReactiveElement {\n  @property({ attribute: false }) public route?: Route;\n\n  protected routerOptions!: RouterOptions;\n\n  protected _currentPage = \"\";\n\n  private _currentLoadProm?: Promise<void>;\n\n  private _cache = {};\n\n  private _initialLoadDone = false;\n\n  private _computeTail = memoizeOne((route: Route) => {\n    const dividerPos = route.path.indexOf(\"/\", 1);\n    return dividerPos === -1\n      ? {\n          prefix: route.prefix + route.path,\n          path: \"\",\n        }\n      : {\n          prefix: route.prefix + route.path.substr(0, dividerPos),\n          path: route.path.substr(dividerPos),\n        };\n  });\n\n  protected createRenderRoot() {\n    return this;\n  }\n\n  protected update(changedProps: PropertyValues) {\n    super.update(changedProps);\n\n    const routerOptions = this.routerOptions || { routes: {} };\n\n    if (routerOptions && routerOptions.initialLoad && !this._initialLoadDone) {\n      return;\n    }\n\n    if (!changedProps.has(\"route\")) {\n      // Do not update if we have a currentLoadProm, because that means\n      // that there is still an old panel shown and we're moving to a new one.\n      if (this.lastChild && !this._currentLoadProm) {\n        this.updatePageEl(this.lastChild, changedProps);\n      }\n      return;\n    }\n\n    const route = this.route;\n    const defaultPage = routerOptions.defaultPage;\n\n    if (route && route.path === \"\" && defaultPage !== undefined) {\n      navigate(`${route.prefix}/${defaultPage}`, { replace: true });\n    }\n\n    let newPage = route\n      ? extractPage(route.path, defaultPage || \"\")\n      : \"not_found\";\n    let routeOptions = routerOptions.routes[newPage];\n\n    // Handle redirects\n    while (typeof routeOptions === \"string\") {\n      newPage = routeOptions;\n      routeOptions = routerOptions.routes[newPage];\n    }\n\n    if (routerOptions.beforeRender) {\n      const result = routerOptions.beforeRender(newPage);\n      if (result !== undefined) {\n        newPage = result;\n        routeOptions = routerOptions.routes[newPage];\n\n        // Handle redirects\n        while (typeof routeOptions === \"string\") {\n          newPage = routeOptions;\n          routeOptions = routerOptions.routes[newPage];\n        }\n\n        // Update the url if we know where we're mounted.\n        if (route) {\n          navigate(`${route.prefix}/${result}${location.search}`, {\n            replace: true,\n          });\n        }\n      }\n    }\n\n    if (this._currentPage === newPage) {\n      if (this.lastChild) {\n        this.updatePageEl(this.lastChild, changedProps);\n      }\n      return;\n    }\n\n    if (!routeOptions) {\n      this._currentPage = \"\";\n      if (this.lastChild) {\n        this.removeChild(this.lastChild);\n      }\n      return;\n    }\n\n    this._currentPage = newPage;\n    const loadProm = routeOptions.load\n      ? routeOptions.load()\n      : Promise.resolve();\n\n    let showLoadingScreenTimeout: undefined | number;\n\n    // Check when loading the page source failed.\n    loadProm.catch((err) => {\n      // eslint-disable-next-line\n      console.error(\"Error loading page\", newPage, err);\n\n      // Verify that we're still trying to show the same page.\n      if (this._currentPage !== newPage) {\n        return;\n      }\n\n      // Removes either loading screen or the panel\n      if (this.lastChild) {\n        this.removeChild(this.lastChild!);\n      }\n\n      if (showLoadingScreenTimeout) {\n        clearTimeout(showLoadingScreenTimeout);\n      }\n\n      // Show error screen\n      this.appendChild(\n        this.createErrorScreen(`Error while loading page ${newPage}.`)\n      );\n    });\n\n    // If we don't show loading screen, just show the panel.\n    // It will be automatically upgraded when loading done.\n    if (!routerOptions.showLoading) {\n      this._createPanel(routerOptions, newPage, routeOptions);\n      return;\n    }\n\n    // We are only going to show the loading screen after some time.\n    // That way we won't have a double fast flash on fast connections.\n    let created = false;\n\n    showLoadingScreenTimeout = window.setTimeout(() => {\n      if (created || this._currentPage !== newPage) {\n        return;\n      }\n\n      // Show a loading screen.\n      if (this.lastChild) {\n        this.removeChild(this.lastChild);\n      }\n      this.appendChild(this.createLoadingScreen());\n    }, LOADING_SCREEN_THRESHOLD);\n\n    this._currentLoadProm = loadProm.then(\n      () => {\n        this._currentLoadProm = undefined;\n        // Check if we're still trying to show the same page.\n        if (this._currentPage !== newPage) {\n          return;\n        }\n\n        created = true;\n        this._createPanel(\n          routerOptions,\n          newPage,\n          // @ts-ignore TS forgot this is not a string.\n          routeOptions\n        );\n      },\n      () => {\n        this._currentLoadProm = undefined;\n      }\n    );\n  }\n\n  protected firstUpdated(changedProps: PropertyValues) {\n    super.firstUpdated(changedProps);\n\n    const options = this.routerOptions;\n\n    if (!options) {\n      return;\n    }\n\n    if (options.preloadAll) {\n      Object.values(options.routes).forEach(\n        (route) => typeof route === \"object\" && route.load && route.load()\n      );\n    }\n\n    if (options.initialLoad) {\n      setTimeout(() => {\n        if (!this._initialLoadDone) {\n          this.appendChild(this.createLoadingScreen());\n        }\n      }, LOADING_SCREEN_THRESHOLD);\n\n      options.initialLoad().then(() => {\n        this._initialLoadDone = true;\n        this.requestUpdate(\"route\");\n      });\n    }\n  }\n\n  protected createLoadingScreen() {\n    import(\"./hass-loading-screen\");\n    return document.createElement(\"hass-loading-screen\");\n  }\n\n  protected createErrorScreen(error: string) {\n    import(\"./hass-error-screen\");\n    const errorEl = document.createElement(\"hass-error-screen\");\n    errorEl.error = error;\n    return errorEl;\n  }\n\n  /**\n   * Rebuild the current panel.\n   *\n   * Promise will resolve when rebuilding is done and DOM updated.\n   */\n  protected async rebuild(): Promise<void> {\n    const oldRoute = this.route;\n\n    if (oldRoute === undefined) {\n      return;\n    }\n\n    this.route = undefined;\n    await this.updateComplete;\n    // Make sure that the parent didn't override this in the meanwhile.\n    if (this.route === undefined) {\n      this.route = oldRoute;\n    }\n  }\n\n  /**\n   * Promise that resolves when the page has rendered.\n   */\n  protected get pageRendered(): Promise<void> {\n    return this.updateComplete.then(() => this._currentLoadProm);\n  }\n\n  protected createElement(tag: string) {\n    return document.createElement(tag);\n  }\n\n  protected updatePageEl(_pageEl, _changedProps?: PropertyValues) {\n    // default we do nothing\n  }\n\n  protected get routeTail(): Route {\n    return this._computeTail(this.route!);\n  }\n\n  private _createPanel(\n    routerOptions: RouterOptions,\n    page: string,\n    routeOptions: RouteOptions\n  ) {\n    if (this.lastChild) {\n      this.removeChild(this.lastChild);\n    }\n\n    const panelEl = this._cache[page] || this.createElement(routeOptions.tag);\n    this.updatePageEl(panelEl);\n    this.appendChild(panelEl);\n\n    if (routerOptions.cacheAll || routeOptions.cache) {\n      this._cache[page] = panelEl;\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}