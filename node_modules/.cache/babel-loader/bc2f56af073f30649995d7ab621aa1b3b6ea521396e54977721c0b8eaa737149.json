{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/helpers/regeneratorRuntime\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _decorate from \"@babel/runtime/helpers/decorate\";\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8;\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"@material/mwc-button/mwc-button\";\nimport formatISO9075 from \"date-fns/formatISO9075\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { formatDateTime } from \"../../../common/datetime/format_date_time\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport \"../../../components/ha-circular-progress\";\nimport \"../../../components/ha-dialog\";\nimport \"../../../components/ha-form/ha-form\";\nimport \"../../../components/ha-selector/ha-selector-datetime\";\nimport \"../../../components/ha-selector/ha-selector-number\";\nimport \"../../../components/ha-svg-icon\";\nimport \"../../../components/ha-icon-next\";\nimport \"../../../components/ha-list-item\";\nimport { adjustStatisticsSum, fetchStatistics, getDisplayUnit } from \"../../../data/recorder\";\nimport { showAlertDialog } from \"../../../dialogs/generic/show-dialog-box\";\nimport { haStyle, haStyleDialog } from \"../../../resources/styles\";\nimport { showToast } from \"../../../util/toast\";\nexport var DialogStatisticsFixUnsupportedUnitMetadata = _decorate([customElement(\"dialog-statistics-adjust-sum\")], function (_initialize, _LitElement) {\n  var DialogStatisticsFixUnsupportedUnitMetadata = /*#__PURE__*/function (_LitElement2) {\n    _inherits(DialogStatisticsFixUnsupportedUnitMetadata, _LitElement2);\n    function DialogStatisticsFixUnsupportedUnitMetadata() {\n      var _this;\n      _classCallCheck(this, DialogStatisticsFixUnsupportedUnitMetadata);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, DialogStatisticsFixUnsupportedUnitMetadata, [].concat(args));\n      _initialize(_assertThisInitialized(_this));\n      return _this;\n    }\n    return _createClass(DialogStatisticsFixUnsupportedUnitMetadata);\n  }(_LitElement);\n  return {\n    F: DialogStatisticsFixUnsupportedUnitMetadata,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_params\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_busy\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_moment\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_stats5min\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_statsHour\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_chosenStat\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_origAmount\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_amount\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_dateTimeSelector\",\n      value: function value() {\n        return {\n          datetime: {}\n        };\n      }\n    }, {\n      kind: \"field\",\n      key: \"_amountSelector\",\n      value: function value() {\n        return memoizeOne(function (unit_of_measurement) {\n          return {\n            number: {\n              step: 0.01,\n              unit_of_measurement: unit_of_measurement,\n              mode: \"box\"\n            }\n          };\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"showDialog\",\n      value: function showDialog(params) {\n        this._params = params;\n        // moment is in format YYYY-MM-DD HH:mm:ss because of selector\n        // Here we create a date with minutes set to %5\n        var now = new Date();\n        now.setMinutes(now.getMinutes() - now.getMinutes() % 5, 0);\n        this._moment = formatISO9075(now);\n        this._fetchStats();\n      }\n    }, {\n      kind: \"method\",\n      key: \"closeDialog\",\n      value: function closeDialog() {\n        this._params = undefined;\n        this._moment = undefined;\n        this._stats5min = undefined;\n        this._statsHour = undefined;\n        this._origAmount = undefined;\n        this._amount = undefined;\n        this._chosenStat = undefined;\n        this._busy = false;\n        fireEvent(this, \"dialog-closed\", {\n          dialog: this.localName\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this._params) {\n          return nothing;\n        }\n        var content;\n        if (!this._chosenStat) {\n          content = this._renderPickStatistic();\n        } else {\n          content = this._renderAdjustStat();\n        }\n        return html(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      <ha-dialog\\n        open\\n        scrimClickAction\\n        escapeKeyAction\\n        @closed=\", \"\\n        .heading=\", \"\\n      >\\n        \", \"\\n      </ha-dialog>\\n    \"])), this.closeDialog, this.hass.localize(\"ui.panel.developer-tools.tabs.statistics.fix_issue.adjust_sum.title\"), content);\n      }\n    }, {\n      kind: \"method\",\n      key: \"shouldUpdate\",\n      value: function shouldUpdate(changedProps) {\n        if (changedProps.size !== 1 || !changedProps.has(\"hass\")) {\n          return true;\n        }\n        // We only respond to hass changes if the translations changed\n        var oldHass = changedProps.get(\"hass\");\n        return !oldHass || oldHass.localize !== this.hass.localize;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_renderPickStatistic\",\n      value: function _renderPickStatistic() {\n        var stats;\n        if (!this._stats5min || !this._statsHour) {\n          stats = html(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"<ha-circular-progress indeterminate></ha-circular-progress>\"])));\n        } else if (this._statsHour.length < 1 && this._stats5min.length < 1) {\n          stats = html(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"<p>\\n        \", \"\\n      </p>\"])), this.hass.localize(\"ui.panel.developer-tools.tabs.statistics.fix_issue.adjust_sum.no_statistics_found\"));\n        } else {\n          var data = this._stats5min.length >= 1 ? this._stats5min : this._statsHour;\n          var unit = getDisplayUnit(this.hass, this._params.statistic.statistic_id, this._params.statistic);\n          var rows = [];\n          for (var i = 0; i < data.length; i++) {\n            var stat = data[i];\n            var growth = Math.round(stat.change * 100) / 100;\n            rows.push(html(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n          <ha-list-item\\n            twoline\\n            hasMeta\\n            .stat=\", \"\\n            @click=\", \"\\n          >\\n            <span>\", \" \", \"</span>\\n            <span slot=\\\"secondary\\\">\\n              \", \"\\n            </span>\\n            <ha-icon-next slot=\\\"meta\\\"></ha-icon-next>\\n          </ha-list-item>\\n        \"])), stat, this._setChosenStatistic, growth, unit, formatDateTime(new Date(stat.start), this.hass.locale, this.hass.config)));\n          }\n          stats = html(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"\", \"\"])), rows);\n        }\n        return html(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"\\n      <div class=\\\"text-content\\\">\\n        \", \"\\n      </div>\\n      <div class=\\\"text-content\\\">\\n        <b\\n          >\", \"</b\\n        >\\n        \", \"\\n      </div>\\n      <ha-selector-datetime\\n        .label=\", \"\\n        .hass=\", \"\\n        .selector=\", \"\\n        .value=\", \"\\n        @value-changed=\", \"\\n      ></ha-selector-datetime>\\n      <div class=\\\"stat-list\\\">\", \"</div>\\n      <mwc-button\\n        slot=\\\"primaryAction\\\"\\n        dialogAction=\\\"cancel\\\"\\n        .label=\", \"\\n      ></mwc-button>\\n    \"])), this.hass.localize(\"ui.panel.developer-tools.tabs.statistics.fix_issue.adjust_sum.info_text_1\"), this.hass.localize(\"ui.panel.developer-tools.tabs.statistics.fix_issue.adjust_sum.statistic\"), this._params.statistic.statistic_id, this.hass.localize(\"ui.panel.developer-tools.tabs.statistics.fix_issue.adjust_sum.pick_a_time\"), this.hass, this._dateTimeSelector, this._moment, this._dateTimeSelectorChanged, stats, this.hass.localize(\"ui.common.close\"));\n      }\n    }, {\n      kind: \"method\",\n      key: \"_clearChosenStatistic\",\n      value: function _clearChosenStatistic() {\n        this._chosenStat = undefined;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_setChosenStatistic\",\n      value: function _setChosenStatistic(ev) {\n        var stat = ev.currentTarget.stat;\n        var growth = Math.round(stat.change * 100) / 100;\n        this._chosenStat = stat;\n        this._origAmount = growth;\n        this._amount = growth;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_dateTimeSelectorChanged\",\n      value: function _dateTimeSelectorChanged(ev) {\n        this._moment = ev.detail.value;\n        this._fetchStats();\n      }\n    }, {\n      kind: \"method\",\n      key: \"_renderAdjustStat\",\n      value: function _renderAdjustStat() {\n        var unit = getDisplayUnit(this.hass, this._params.statistic.statistic_id, this._params.statistic);\n        return html(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral([\"\\n      <div class=\\\"text-content\\\">\\n        <b\\n          >\", \"</b\\n        >\\n        \", \"\\n      </div>\\n\\n      <div class=\\\"table-row\\\">\\n        <span\\n          >\", \"</span\\n        >\\n        <span\\n          >\", \"</span\\n        >\\n      </div>\\n\\n      <div class=\\\"table-row\\\">\\n        <span\\n          >\", \"</span\\n        >\\n        <span\\n          >\", \"</span\\n        >\\n      </div>\\n\\n      <ha-selector-number\\n        .label=\", \"\\n        .hass=\", \"\\n        .selector=\", \"\\n        .value=\", \"\\n        .disabled=\", \"\\n        @value-changed=\", \"\\n      ></ha-selector-number>\\n\\n      <mwc-button\\n        slot=\\\"primaryAction\\\"\\n        .label=\", \"\\n        .disabled=\", \"\\n        @click=\", \"\\n      ></mwc-button>\\n      <mwc-button\\n        slot=\\\"secondaryAction\\\"\\n        .label=\", \"\\n        .disabled=\", \"\\n        @click=\", \"\\n      ></mwc-button>\\n    \"])), this.hass.localize(\"ui.panel.developer-tools.tabs.statistics.fix_issue.adjust_sum.statistic\"), this._params.statistic.statistic_id, this.hass.localize(\"ui.panel.developer-tools.tabs.statistics.fix_issue.adjust_sum.start\"), formatDateTime(new Date(this._chosenStat.start), this.hass.locale, this.hass.config), this.hass.localize(\"ui.panel.developer-tools.tabs.statistics.fix_issue.adjust_sum.end\"), formatDateTime(new Date(this._chosenStat.end), this.hass.locale, this.hass.config), this.hass.localize(\"ui.panel.developer-tools.tabs.statistics.fix_issue.adjust_sum.new_value\"), this.hass, this._amountSelector(unit || undefined), this._amount, this._busy, this._amountChanged, this.hass.localize(\"ui.panel.developer-tools.tabs.statistics.fix_issue.adjust_sum.adjust\"), this._busy, this._fixIssue, this.hass.localize(\"ui.common.back\"), this._busy, this._clearChosenStatistic);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_amountChanged\",\n      value: function _amountChanged(ev) {\n        this._amount = ev.detail.value;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_fetchStats\",\n      value: function () {\n        var _fetchStats2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n          var statId, moment, hourStatStart, hourStatEnd, statsHourData, minStatStart, minStatEnd, stats5MinData;\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                this._stats5min = undefined;\n                this._statsHour = undefined;\n                statId = this._params.statistic.statistic_id; // moment is in format YYYY-MM-DD HH:mm:ss because of selector\n                // Here we convert it to an ISO string.\n                moment = new Date(this._moment.replace(\" \", \"T\")); // Search 2 hours before and 3 hours after chosen time\n                hourStatStart = new Date(moment.getTime());\n                hourStatStart.setTime(hourStatStart.getTime() - 2 * 3600 * 1000);\n                hourStatEnd = new Date(moment.getTime());\n                hourStatEnd.setTime(hourStatEnd.getTime() + 3 * 3600 * 1000);\n                _context.next = 10;\n                return fetchStatistics(this.hass, hourStatStart, hourStatEnd, [statId], \"hour\");\n              case 10:\n                statsHourData = _context.sent;\n                this._statsHour = statId in statsHourData ? statsHourData[statId].slice(0, 5) : [];\n\n                // Can't have 5 min data if no hourly data\n                if (!(this._statsHour.length === 0)) {\n                  _context.next = 15;\n                  break;\n                }\n                this._stats5min = [];\n                return _context.abrupt(\"return\");\n              case 15:\n                // Search 10 minutes before and 15 minutes after chosen time\n                minStatStart = new Date(moment.getTime());\n                minStatStart.setTime(minStatStart.getTime() - 10 * 60 * 1000);\n                minStatEnd = new Date(moment.getTime());\n                minStatEnd.setTime(minStatEnd.getTime() + 15 * 60 * 1000);\n                _context.next = 21;\n                return fetchStatistics(this.hass, minStatStart, minStatEnd, [statId], \"5minute\");\n              case 21:\n                stats5MinData = _context.sent;\n                this._stats5min = statId in stats5MinData ? stats5MinData[statId].slice(0, 5) : [];\n              case 23:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee, this);\n        }));\n        function _fetchStats() {\n          return _fetchStats2.apply(this, arguments);\n        }\n        return _fetchStats;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"_fixIssue\",\n      value: function () {\n        var _fixIssue2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n          var unit;\n          return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n            while (1) switch (_context2.prev = _context2.next) {\n              case 0:\n                unit = getDisplayUnit(this.hass, this._params.statistic.statistic_id, this._params.statistic);\n                this._busy = true;\n                _context2.prev = 2;\n                _context2.next = 5;\n                return adjustStatisticsSum(this.hass, this._params.statistic.statistic_id, this._chosenStat.start, this._amount - this._origAmount, unit || null);\n              case 5:\n                _context2.next = 12;\n                break;\n              case 7:\n                _context2.prev = 7;\n                _context2.t0 = _context2[\"catch\"](2);\n                this._busy = false;\n                showAlertDialog(this, {\n                  text: this.hass.localize(\"ui.panel.developer-tools.tabs.statistics.fix_issue.adjust_sum.error_sum_adjusted\", {\n                    message: _context2.t0.message || _context2.t0\n                  })\n                });\n                return _context2.abrupt(\"return\");\n              case 12:\n                showToast(this, {\n                  message: this.hass.localize(\"ui.panel.developer-tools.tabs.statistics.fix_issue.adjust_sum.sum_adjusted\")\n                });\n                this.closeDialog();\n              case 14:\n              case \"end\":\n                return _context2.stop();\n            }\n          }, _callee2, this, [[2, 7]]);\n        }));\n        function _fixIssue() {\n          return _fixIssue2.apply(this, arguments);\n        }\n        return _fixIssue;\n      }()\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [haStyle, haStyleDialog, css(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral([\"\\n        @media all and (max-width: 450px), all and (max-height: 500px) {\\n          /* overrule the ha-style-dialog max-height on small screens */\\n          ha-dialog {\\n            --mdc-dialog-max-height: 100%;\\n            height: 100%;\\n          }\\n        }\\n\\n        @media all and (min-width: 850px) {\\n          ha-dialog {\\n            --mdc-dialog-max-height: 80%;\\n            --mdc-dialog-max-height: 80%;\\n          }\\n        }\\n\\n        @media all and (min-width: 451px) and (min-height: 501px) {\\n          ha-dialog {\\n            --mdc-dialog-max-width: 480px;\\n          }\\n        }\\n\\n        .text-content,\\n        ha-selector-datetime,\\n        ha-selector-number {\\n          margin-bottom: 20px;\\n        }\\n        ha-list-item {\\n          margin: 0 -24px;\\n          --mdc-list-side-padding: 24px;\\n        }\\n        .table-row {\\n          display: flex;\\n          justify-content: space-between;\\n          margin-bottom: 20px;\\n        }\\n        .stat-list {\\n          min-height: 360px;\\n          display: flex;\\n          flex-direction: column;\\n        }\\n        .stat-list ha-circular-progress {\\n          margin: 0 auto;\\n        }\\n      \"])))];\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["formatISO9075","css","html","LitElement","nothing","customElement","property","state","memoizeOne","formatDateTime","fireEvent","adjustStatisticsSum","fetchStatistics","getDisplayUnit","showAlertDialog","haStyle","haStyleDialog","showToast","DialogStatisticsFixUnsupportedUnitMetadata","_decorate","_initialize","_LitElement","_LitElement2","_inherits","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_assertThisInitialized","_createClass","F","d","kind","decorators","attribute","key","value","datetime","unit_of_measurement","number","step","mode","showDialog","params","_params","now","Date","setMinutes","getMinutes","_moment","_fetchStats","closeDialog","undefined","_stats5min","_statsHour","_origAmount","_amount","_chosenStat","_busy","dialog","localName","render","content","_renderPickStatistic","_renderAdjustStat","_templateObject","_taggedTemplateLiteral","hass","localize","shouldUpdate","changedProps","size","has","oldHass","get","stats","_templateObject2","_templateObject3","data","unit","statistic","statistic_id","rows","i","stat","growth","Math","round","change","push","_templateObject4","_setChosenStatistic","start","locale","config","_templateObject5","_templateObject6","_dateTimeSelector","_dateTimeSelectorChanged","_clearChosenStatistic","ev","currentTarget","detail","_templateObject7","end","_amountSelector","_amountChanged","_fixIssue","_fetchStats2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","statId","moment","hourStatStart","hourStatEnd","statsHourData","minStatStart","minStatEnd","stats5MinData","wrap","_callee$","_context","prev","next","replace","getTime","setTime","sent","slice","abrupt","stop","apply","_fixIssue2","_callee2","_callee2$","_context2","t0","text","message","static","styles","_templateObject8"],"sources":["/workspaces/frontend/src/panels/developer-tools/statistics/dialog-statistics-adjust-sum.ts"],"sourcesContent":["import \"@material/mwc-button/mwc-button\";\nimport formatISO9075 from \"date-fns/formatISO9075\";\nimport {\n  css,\n  CSSResultGroup,\n  html,\n  LitElement,\n  nothing,\n  PropertyValues,\n  TemplateResult,\n} from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { formatDateTime } from \"../../../common/datetime/format_date_time\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport \"../../../components/ha-circular-progress\";\nimport \"../../../components/ha-dialog\";\nimport \"../../../components/ha-form/ha-form\";\nimport \"../../../components/ha-selector/ha-selector-datetime\";\nimport \"../../../components/ha-selector/ha-selector-number\";\nimport \"../../../components/ha-svg-icon\";\nimport \"../../../components/ha-icon-next\";\nimport \"../../../components/ha-list-item\";\nimport {\n  adjustStatisticsSum,\n  fetchStatistics,\n  getDisplayUnit,\n  StatisticValue,\n} from \"../../../data/recorder\";\nimport type { DateTimeSelector, NumberSelector } from \"../../../data/selector\";\nimport { showAlertDialog } from \"../../../dialogs/generic/show-dialog-box\";\nimport { haStyle, haStyleDialog } from \"../../../resources/styles\";\nimport { HomeAssistant } from \"../../../types\";\nimport { showToast } from \"../../../util/toast\";\nimport type { DialogStatisticsAdjustSumParams } from \"./show-dialog-statistics-adjust-sum\";\n\n@customElement(\"dialog-statistics-adjust-sum\")\nexport class DialogStatisticsFixUnsupportedUnitMetadata extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @state() private _params?: DialogStatisticsAdjustSumParams;\n\n  @state() private _busy = false;\n\n  @state() private _moment?: string;\n\n  @state() private _stats5min?: StatisticValue[];\n\n  @state() private _statsHour?: StatisticValue[];\n\n  @state() private _chosenStat?: StatisticValue;\n\n  private _origAmount?: number;\n\n  @state() private _amount?: number;\n\n  private _dateTimeSelector: DateTimeSelector = {\n    datetime: {},\n  };\n\n  private _amountSelector = memoizeOne(\n    (unit_of_measurement: string | undefined): NumberSelector => ({\n      number: {\n        step: 0.01,\n        unit_of_measurement,\n        mode: \"box\",\n      },\n    })\n  );\n\n  public showDialog(params: DialogStatisticsAdjustSumParams): void {\n    this._params = params;\n    // moment is in format YYYY-MM-DD HH:mm:ss because of selector\n    // Here we create a date with minutes set to %5\n    const now = new Date();\n    now.setMinutes(now.getMinutes() - (now.getMinutes() % 5), 0);\n    this._moment = formatISO9075(now);\n    this._fetchStats();\n  }\n\n  public closeDialog(): void {\n    this._params = undefined;\n    this._moment = undefined;\n    this._stats5min = undefined;\n    this._statsHour = undefined;\n    this._origAmount = undefined;\n    this._amount = undefined;\n    this._chosenStat = undefined;\n    this._busy = false;\n    fireEvent(this, \"dialog-closed\", { dialog: this.localName });\n  }\n\n  protected render() {\n    if (!this._params) {\n      return nothing;\n    }\n\n    let content: TemplateResult;\n\n    if (!this._chosenStat) {\n      content = this._renderPickStatistic();\n    } else {\n      content = this._renderAdjustStat();\n    }\n\n    return html`\n      <ha-dialog\n        open\n        scrimClickAction\n        escapeKeyAction\n        @closed=${this.closeDialog}\n        .heading=${this.hass.localize(\n          \"ui.panel.developer-tools.tabs.statistics.fix_issue.adjust_sum.title\"\n        )}\n      >\n        ${content}\n      </ha-dialog>\n    `;\n  }\n\n  protected shouldUpdate(changedProps: PropertyValues): boolean {\n    if (changedProps.size !== 1 || !changedProps.has(\"hass\")) {\n      return true;\n    }\n    // We only respond to hass changes if the translations changed\n    const oldHass = changedProps.get(\"hass\") as HomeAssistant | undefined;\n    return !oldHass || oldHass.localize !== this.hass.localize;\n  }\n\n  private _renderPickStatistic() {\n    let stats: TemplateResult;\n\n    if (!this._stats5min || !this._statsHour) {\n      stats = html`<ha-circular-progress indeterminate></ha-circular-progress>`;\n    } else if (this._statsHour.length < 1 && this._stats5min.length < 1) {\n      stats = html`<p>\n        ${this.hass.localize(\n          \"ui.panel.developer-tools.tabs.statistics.fix_issue.adjust_sum.no_statistics_found\"\n        )}\n      </p>`;\n    } else {\n      const data =\n        this._stats5min.length >= 1 ? this._stats5min : this._statsHour;\n      const unit = getDisplayUnit(\n        this.hass,\n        this._params!.statistic.statistic_id,\n        this._params!.statistic\n      );\n      const rows: TemplateResult[] = [];\n      for (let i = 0; i < data.length; i++) {\n        const stat = data[i];\n        const growth = Math.round(stat.change! * 100) / 100;\n        rows.push(html`\n          <ha-list-item\n            twoline\n            hasMeta\n            .stat=${stat}\n            @click=${this._setChosenStatistic}\n          >\n            <span>${growth} ${unit}</span>\n            <span slot=\"secondary\">\n              ${formatDateTime(\n                new Date(stat.start),\n                this.hass.locale,\n                this.hass.config\n              )}\n            </span>\n            <ha-icon-next slot=\"meta\"></ha-icon-next>\n          </ha-list-item>\n        `);\n      }\n      stats = html`${rows}`;\n    }\n\n    return html`\n      <div class=\"text-content\">\n        ${this.hass.localize(\n          \"ui.panel.developer-tools.tabs.statistics.fix_issue.adjust_sum.info_text_1\"\n        )}\n      </div>\n      <div class=\"text-content\">\n        <b\n          >${this.hass.localize(\n            \"ui.panel.developer-tools.tabs.statistics.fix_issue.adjust_sum.statistic\"\n          )}</b\n        >\n        ${this._params!.statistic.statistic_id}\n      </div>\n      <ha-selector-datetime\n        .label=${this.hass.localize(\n          \"ui.panel.developer-tools.tabs.statistics.fix_issue.adjust_sum.pick_a_time\"\n        )}\n        .hass=${this.hass}\n        .selector=${this._dateTimeSelector}\n        .value=${this._moment}\n        @value-changed=${this._dateTimeSelectorChanged}\n      ></ha-selector-datetime>\n      <div class=\"stat-list\">${stats}</div>\n      <mwc-button\n        slot=\"primaryAction\"\n        dialogAction=\"cancel\"\n        .label=${this.hass.localize(\"ui.common.close\")}\n      ></mwc-button>\n    `;\n  }\n\n  private _clearChosenStatistic() {\n    this._chosenStat = undefined;\n  }\n\n  private _setChosenStatistic(ev) {\n    const stat = ev.currentTarget.stat;\n    const growth = Math.round(stat.change! * 100) / 100;\n\n    this._chosenStat = stat;\n    this._origAmount = growth;\n    this._amount = growth;\n  }\n\n  private _dateTimeSelectorChanged(ev) {\n    this._moment = ev.detail.value;\n    this._fetchStats();\n  }\n\n  private _renderAdjustStat() {\n    const unit = getDisplayUnit(\n      this.hass,\n      this._params!.statistic.statistic_id,\n      this._params!.statistic\n    );\n    return html`\n      <div class=\"text-content\">\n        <b\n          >${this.hass.localize(\n            \"ui.panel.developer-tools.tabs.statistics.fix_issue.adjust_sum.statistic\"\n          )}</b\n        >\n        ${this._params!.statistic.statistic_id}\n      </div>\n\n      <div class=\"table-row\">\n        <span\n          >${this.hass.localize(\n            \"ui.panel.developer-tools.tabs.statistics.fix_issue.adjust_sum.start\"\n          )}</span\n        >\n        <span\n          >${formatDateTime(\n            new Date(this._chosenStat!.start),\n            this.hass.locale,\n            this.hass.config\n          )}</span\n        >\n      </div>\n\n      <div class=\"table-row\">\n        <span\n          >${this.hass.localize(\n            \"ui.panel.developer-tools.tabs.statistics.fix_issue.adjust_sum.end\"\n          )}</span\n        >\n        <span\n          >${formatDateTime(\n            new Date(this._chosenStat!.end),\n            this.hass.locale,\n            this.hass.config\n          )}</span\n        >\n      </div>\n\n      <ha-selector-number\n        .label=${this.hass.localize(\n          \"ui.panel.developer-tools.tabs.statistics.fix_issue.adjust_sum.new_value\"\n        )}\n        .hass=${this.hass}\n        .selector=${this._amountSelector(unit || undefined)}\n        .value=${this._amount}\n        .disabled=${this._busy}\n        @value-changed=${this._amountChanged}\n      ></ha-selector-number>\n\n      <mwc-button\n        slot=\"primaryAction\"\n        .label=${this.hass.localize(\n          \"ui.panel.developer-tools.tabs.statistics.fix_issue.adjust_sum.adjust\"\n        )}\n        .disabled=${this._busy}\n        @click=${this._fixIssue}\n      ></mwc-button>\n      <mwc-button\n        slot=\"secondaryAction\"\n        .label=${this.hass.localize(\"ui.common.back\")}\n        .disabled=${this._busy}\n        @click=${this._clearChosenStatistic}\n      ></mwc-button>\n    `;\n  }\n\n  private _amountChanged(ev) {\n    this._amount = ev.detail.value;\n  }\n\n  private async _fetchStats(): Promise<void> {\n    this._stats5min = undefined;\n    this._statsHour = undefined;\n    const statId = this._params!.statistic.statistic_id;\n\n    // moment is in format YYYY-MM-DD HH:mm:ss because of selector\n    // Here we convert it to an ISO string.\n    const moment = new Date(this._moment!.replace(\" \", \"T\"));\n\n    // Search 2 hours before and 3 hours after chosen time\n    const hourStatStart = new Date(moment.getTime());\n    hourStatStart.setTime(hourStatStart.getTime() - 2 * 3600 * 1000);\n    const hourStatEnd = new Date(moment.getTime());\n    hourStatEnd.setTime(hourStatEnd.getTime() + 3 * 3600 * 1000);\n\n    const statsHourData = await fetchStatistics(\n      this.hass,\n      hourStatStart,\n      hourStatEnd,\n      [statId],\n      \"hour\"\n    );\n    this._statsHour =\n      statId in statsHourData ? statsHourData[statId].slice(0, 5) : [];\n\n    // Can't have 5 min data if no hourly data\n    if (this._statsHour.length === 0) {\n      this._stats5min = [];\n      return;\n    }\n\n    // Search 10 minutes before and 15 minutes after chosen time\n    const minStatStart = new Date(moment.getTime());\n    minStatStart.setTime(minStatStart.getTime() - 10 * 60 * 1000);\n    const minStatEnd = new Date(moment.getTime());\n    minStatEnd.setTime(minStatEnd.getTime() + 15 * 60 * 1000);\n\n    const stats5MinData = await fetchStatistics(\n      this.hass,\n      minStatStart,\n      minStatEnd,\n      [statId],\n      \"5minute\"\n    );\n\n    this._stats5min =\n      statId in stats5MinData ? stats5MinData[statId].slice(0, 5) : [];\n  }\n\n  private async _fixIssue(): Promise<void> {\n    const unit = getDisplayUnit(\n      this.hass,\n      this._params!.statistic.statistic_id,\n      this._params!.statistic\n    );\n    this._busy = true;\n    try {\n      await adjustStatisticsSum(\n        this.hass,\n        this._params!.statistic.statistic_id,\n        this._chosenStat!.start,\n        this._amount! - this._origAmount!,\n        unit || null\n      );\n    } catch (err: any) {\n      this._busy = false;\n      showAlertDialog(this, {\n        text: this.hass.localize(\n          \"ui.panel.developer-tools.tabs.statistics.fix_issue.adjust_sum.error_sum_adjusted\",\n          { message: err.message || err }\n        ),\n      });\n      return;\n    }\n    showToast(this, {\n      message: this.hass.localize(\n        \"ui.panel.developer-tools.tabs.statistics.fix_issue.adjust_sum.sum_adjusted\"\n      ),\n    });\n    this.closeDialog();\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyle,\n      haStyleDialog,\n      css`\n        @media all and (max-width: 450px), all and (max-height: 500px) {\n          /* overrule the ha-style-dialog max-height on small screens */\n          ha-dialog {\n            --mdc-dialog-max-height: 100%;\n            height: 100%;\n          }\n        }\n\n        @media all and (min-width: 850px) {\n          ha-dialog {\n            --mdc-dialog-max-height: 80%;\n            --mdc-dialog-max-height: 80%;\n          }\n        }\n\n        @media all and (min-width: 451px) and (min-height: 501px) {\n          ha-dialog {\n            --mdc-dialog-max-width: 480px;\n          }\n        }\n\n        .text-content,\n        ha-selector-datetime,\n        ha-selector-number {\n          margin-bottom: 20px;\n        }\n        ha-list-item {\n          margin: 0 -24px;\n          --mdc-list-side-padding: 24px;\n        }\n        .table-row {\n          display: flex;\n          justify-content: space-between;\n          margin-bottom: 20px;\n        }\n        .stat-list {\n          min-height: 360px;\n          display: flex;\n          flex-direction: column;\n        }\n        .stat-list ha-circular-progress {\n          margin: 0 auto;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"dialog-statistics-adjust-sum\": DialogStatisticsFixUnsupportedUnitMetadata;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}