{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nconst mdiHomeImportOutline = \"M15 13L11 17V14H2V12H11V9L15 13M5 20V16H7V18H17V10.19L12 5.69L7.21 10H4.22L12 3L22 12H19V20H5Z\";\nconst mdiPause = \"M14,19H18V5H14M6,19H10V5H6V19Z\";\nconst mdiPlay = \"M8,5.14V19.14L19,12.14L8,5.14Z\";\nimport { LitElement, css, html, nothing } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { computeStateDomain } from \"../../../common/entity/compute_state_domain\";\nimport { supportsFeature } from \"../../../common/entity/supports-feature\";\nimport { blankBeforePercent } from \"../../../common/translations/blank_before_percent\";\nimport \"../../../components/entity/ha-battery-icon\";\nimport \"../../../components/ha-icon-button\";\nimport { UNAVAILABLE } from \"../../../data/entity\";\nimport { findBatteryChargingEntity, findBatteryEntity } from \"../../../data/entity_registry\";\nimport { LawnMowerEntityFeature } from \"../../../data/lawn_mower\";\nconst LAWN_MOWER_COMMANDS = [{\n  translationKey: \"start_mowing\",\n  icon: mdiPlay,\n  serviceName: \"start_mowing\",\n  isVisible: stateObj => supportsFeature(stateObj, LawnMowerEntityFeature.START_MOWING)\n}, {\n  translationKey: \"pause\",\n  icon: mdiPause,\n  serviceName: \"pause\",\n  isVisible: stateObj => supportsFeature(stateObj, LawnMowerEntityFeature.PAUSE)\n}, {\n  translationKey: \"dock\",\n  icon: mdiHomeImportOutline,\n  serviceName: \"dock\",\n  isVisible: stateObj => supportsFeature(stateObj, LawnMowerEntityFeature.DOCK)\n}];\nlet MoreInfoLawnMower = _decorate([customElement(\"more-info-lawn_mower\")], function (_initialize, _LitElement) {\n  class MoreInfoLawnMower extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: MoreInfoLawnMower,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"stateObj\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this.hass || !this.stateObj) {\n          return nothing;\n        }\n        const stateObj = this.stateObj;\n        return html`\n      ${stateObj.state !== UNAVAILABLE ? html` <div class=\"flex-horizontal\">\n            <div>\n              <span class=\"status-subtitle\"\n                >${this.hass.localize(\"ui.dialogs.more_info_control.lawn_mower.activity\")}:\n              </span>\n              <span>\n                <strong>${this.hass.formatEntityState(stateObj)}</strong>\n              </span>\n            </div>\n            ${this._renderBattery()}\n          </div>` : nothing}\n      ${LAWN_MOWER_COMMANDS.some(item => item.isVisible(stateObj)) ? html`\n            <div>\n              <p></p>\n              <div class=\"status-subtitle\">\n                ${this.hass.localize(\"ui.dialogs.more_info_control.lawn_mower.commands\")}\n              </div>\n              <div class=\"flex-horizontal space-around\">\n                ${LAWN_MOWER_COMMANDS.filter(item => item.isVisible(stateObj)).map(item => html`\n                    <div>\n                      <ha-icon-button\n                        .path=${item.icon}\n                        .entry=${item}\n                        @click=${this.callService}\n                        .label=${this.hass.localize(`ui.dialogs.more_info_control.lawn_mower.${item.translationKey}`)}\n                        .disabled=${stateObj.state === UNAVAILABLE}\n                      ></ha-icon-button>\n                    </div>\n                  `)}\n              </div>\n            </div>\n          ` : \"\"}\n    `;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_deviceEntities\",\n      value() {\n        return memoizeOne((deviceId, entities) => {\n          const entries = Object.values(entities);\n          return entries.filter(entity => entity.device_id === deviceId);\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_renderBattery\",\n      value: function _renderBattery() {\n        var _this$hass$entities$s;\n        const stateObj = this.stateObj;\n        const deviceId = (_this$hass$entities$s = this.hass.entities[stateObj.entity_id]) === null || _this$hass$entities$s === void 0 ? void 0 : _this$hass$entities$s.device_id;\n        const entities = deviceId ? this._deviceEntities(deviceId, this.hass.entities) : [];\n        const batteryEntity = findBatteryEntity(this.hass, entities);\n        const battery = batteryEntity ? this.hass.states[batteryEntity.entity_id] : undefined;\n        const batteryIsBinary = battery && computeStateDomain(battery) === \"binary_sensor\";\n\n        // Use device battery entity\n        if (battery && (batteryIsBinary || !isNaN(battery.state))) {\n          const batteryChargingEntity = findBatteryChargingEntity(this.hass, entities);\n          const batteryCharging = batteryChargingEntity ? this.hass.states[batteryChargingEntity === null || batteryChargingEntity === void 0 ? void 0 : batteryChargingEntity.entity_id] : undefined;\n          return html`\n        <div>\n          <span>\n            ${batteryIsBinary ? \"\" : `${Number(battery.state).toFixed()}${blankBeforePercent(this.hass.locale)}%`}\n            <ha-battery-icon\n              .hass=${this.hass}\n              .batteryStateObj=${battery}\n              .batteryChargingStateObj=${batteryCharging}\n            ></ha-battery-icon>\n          </span>\n        </div>\n      `;\n        }\n        return nothing;\n      }\n    }, {\n      kind: \"method\",\n      key: \"callService\",\n      value: function callService(ev) {\n        const entry = ev.target.entry;\n        this.hass.callService(\"lawn_mower\", entry.serviceName, {\n          entity_id: this.stateObj.entity_id\n        });\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css`\n      :host {\n        line-height: 1.5;\n      }\n      .status-subtitle {\n        color: var(--secondary-text-color);\n      }\n      .flex-horizontal {\n        display: flex;\n        flex-direction: row;\n      }\n      .space-around {\n        justify-content: space-around;\n      }\n    `;\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["LitElement","css","html","nothing","customElement","property","memoizeOne","computeStateDomain","supportsFeature","blankBeforePercent","UNAVAILABLE","findBatteryChargingEntity","findBatteryEntity","LawnMowerEntityFeature","LAWN_MOWER_COMMANDS","translationKey","icon","mdiPlay","serviceName","isVisible","stateObj","START_MOWING","mdiPause","PAUSE","mdiHomeImportOutline","DOCK","MoreInfoLawnMower","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","render","hass","state","localize","formatEntityState","_renderBattery","some","item","filter","map","callService","deviceId","entities","entries","Object","values","entity","device_id","_this$hass$entities$s","entity_id","_deviceEntities","batteryEntity","battery","states","undefined","batteryIsBinary","isNaN","batteryChargingEntity","batteryCharging","Number","toFixed","locale","ev","entry","target","static","styles"],"sources":["/workspaces/frontend/src/dialogs/more-info/controls/more-info-lawn_mower.ts"],"sourcesContent":["import { mdiHomeImportOutline, mdiPause, mdiPlay } from \"@mdi/js\";\nimport { CSSResultGroup, LitElement, css, html, nothing } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { computeStateDomain } from \"../../../common/entity/compute_state_domain\";\nimport { supportsFeature } from \"../../../common/entity/supports-feature\";\nimport { blankBeforePercent } from \"../../../common/translations/blank_before_percent\";\nimport \"../../../components/entity/ha-battery-icon\";\nimport \"../../../components/ha-icon-button\";\nimport { UNAVAILABLE } from \"../../../data/entity\";\nimport {\n  EntityRegistryDisplayEntry,\n  findBatteryChargingEntity,\n  findBatteryEntity,\n} from \"../../../data/entity_registry\";\nimport {\n  LawnMowerEntity,\n  LawnMowerEntityFeature,\n} from \"../../../data/lawn_mower\";\nimport { HomeAssistant } from \"../../../types\";\n\ninterface LawnMowerCommand {\n  translationKey: string;\n  icon: string;\n  serviceName: string;\n  isVisible: (stateObj: LawnMowerEntity) => boolean;\n}\n\nconst LAWN_MOWER_COMMANDS: LawnMowerCommand[] = [\n  {\n    translationKey: \"start_mowing\",\n    icon: mdiPlay,\n    serviceName: \"start_mowing\",\n    isVisible: (stateObj) =>\n      supportsFeature(stateObj, LawnMowerEntityFeature.START_MOWING),\n  },\n  {\n    translationKey: \"pause\",\n    icon: mdiPause,\n    serviceName: \"pause\",\n    isVisible: (stateObj) =>\n      supportsFeature(stateObj, LawnMowerEntityFeature.PAUSE),\n  },\n  {\n    translationKey: \"dock\",\n    icon: mdiHomeImportOutline,\n    serviceName: \"dock\",\n    isVisible: (stateObj) =>\n      supportsFeature(stateObj, LawnMowerEntityFeature.DOCK),\n  },\n];\n\n@customElement(\"more-info-lawn_mower\")\nclass MoreInfoLawnMower extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public stateObj?: LawnMowerEntity;\n\n  protected render() {\n    if (!this.hass || !this.stateObj) {\n      return nothing;\n    }\n\n    const stateObj = this.stateObj;\n\n    return html`\n      ${stateObj.state !== UNAVAILABLE\n        ? html` <div class=\"flex-horizontal\">\n            <div>\n              <span class=\"status-subtitle\"\n                >${this.hass!.localize(\n                  \"ui.dialogs.more_info_control.lawn_mower.activity\"\n                )}:\n              </span>\n              <span>\n                <strong>${this.hass.formatEntityState(stateObj)}</strong>\n              </span>\n            </div>\n            ${this._renderBattery()}\n          </div>`\n        : nothing}\n      ${LAWN_MOWER_COMMANDS.some((item) => item.isVisible(stateObj))\n        ? html`\n            <div>\n              <p></p>\n              <div class=\"status-subtitle\">\n                ${this.hass!.localize(\n                  \"ui.dialogs.more_info_control.lawn_mower.commands\"\n                )}\n              </div>\n              <div class=\"flex-horizontal space-around\">\n                ${LAWN_MOWER_COMMANDS.filter((item) =>\n                  item.isVisible(stateObj)\n                ).map(\n                  (item) => html`\n                    <div>\n                      <ha-icon-button\n                        .path=${item.icon}\n                        .entry=${item}\n                        @click=${this.callService}\n                        .label=${this.hass!.localize(\n                          `ui.dialogs.more_info_control.lawn_mower.${item.translationKey}`\n                        )}\n                        .disabled=${stateObj.state === UNAVAILABLE}\n                      ></ha-icon-button>\n                    </div>\n                  `\n                )}\n              </div>\n            </div>\n          `\n        : \"\"}\n    `;\n  }\n\n  private _deviceEntities = memoizeOne(\n    (\n      deviceId: string,\n      entities: HomeAssistant[\"entities\"]\n    ): EntityRegistryDisplayEntry[] => {\n      const entries = Object.values(entities);\n      return entries.filter((entity) => entity.device_id === deviceId);\n    }\n  );\n\n  private _renderBattery() {\n    const stateObj = this.stateObj!;\n\n    const deviceId = this.hass.entities[stateObj.entity_id]?.device_id;\n\n    const entities = deviceId\n      ? this._deviceEntities(deviceId, this.hass.entities)\n      : [];\n\n    const batteryEntity = findBatteryEntity(this.hass, entities);\n    const battery = batteryEntity\n      ? this.hass.states[batteryEntity.entity_id]\n      : undefined;\n\n    const batteryIsBinary =\n      battery && computeStateDomain(battery) === \"binary_sensor\";\n\n    // Use device battery entity\n    if (battery && (batteryIsBinary || !isNaN(battery.state as any))) {\n      const batteryChargingEntity = findBatteryChargingEntity(\n        this.hass,\n        entities\n      );\n      const batteryCharging = batteryChargingEntity\n        ? this.hass.states[batteryChargingEntity?.entity_id]\n        : undefined;\n\n      return html`\n        <div>\n          <span>\n            ${batteryIsBinary\n              ? \"\"\n              : `${Number(battery.state).toFixed()}${blankBeforePercent(\n                  this.hass.locale\n                )}%`}\n            <ha-battery-icon\n              .hass=${this.hass}\n              .batteryStateObj=${battery}\n              .batteryChargingStateObj=${batteryCharging}\n            ></ha-battery-icon>\n          </span>\n        </div>\n      `;\n    }\n\n    return nothing;\n  }\n\n  private callService(ev: CustomEvent) {\n    const entry = (ev.target! as any).entry as LawnMowerCommand;\n    this.hass.callService(\"lawn_mower\", entry.serviceName, {\n      entity_id: this.stateObj!.entity_id,\n    });\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      :host {\n        line-height: 1.5;\n      }\n      .status-subtitle {\n        color: var(--secondary-text-color);\n      }\n      .flex-horizontal {\n        display: flex;\n        flex-direction: row;\n      }\n      .space-around {\n        justify-content: space-around;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"more-info-lawn_mower\": MoreInfoLawnMower;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}