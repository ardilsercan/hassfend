{"ast":null,"code":"import \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nvar registeredDialog = false;\nvar dialogShowEvent = \"show-dialog-system-log-detail\";\nvar dialogTag = \"dialog-system-log-detail\";\nvar registerDialog = function registerDialog(element) {\n  return fireEvent(element, \"register-dialog\", {\n    dialogShowEvent: dialogShowEvent,\n    dialogTag: dialogTag,\n    dialogImport: function dialogImport() {\n      return import(\"./dialog-system-log-detail\");\n    }\n  });\n};\nexport var showSystemLogDetailDialog = function showSystemLogDetailDialog(element, systemLogDetailParams) {\n  if (!registeredDialog) {\n    registeredDialog = true;\n    registerDialog(element);\n  }\n  fireEvent(element, dialogShowEvent, systemLogDetailParams);\n};","map":{"version":3,"names":["fireEvent","registeredDialog","dialogShowEvent","dialogTag","registerDialog","element","dialogImport","showSystemLogDetailDialog","systemLogDetailParams"],"sources":["/workspaces/frontend/src/panels/config/logs/show-dialog-system-log-detail.ts"],"sourcesContent":["import { fireEvent } from \"../../../common/dom/fire_event\";\nimport { LoggedError } from \"../../../data/system_log\";\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    \"show-dialog-system-log-detail\": SystemLogDetailDialogParams;\n  }\n}\n\nlet registeredDialog = false;\nconst dialogShowEvent = \"show-dialog-system-log-detail\";\nconst dialogTag = \"dialog-system-log-detail\";\n\nexport interface SystemLogDetailDialogParams {\n  item: LoggedError;\n}\n\nconst registerDialog = (element: HTMLElement) =>\n  fireEvent(element, \"register-dialog\", {\n    dialogShowEvent,\n    dialogTag,\n    dialogImport: () => import(\"./dialog-system-log-detail\"),\n  });\n\nexport const showSystemLogDetailDialog = (\n  element: HTMLElement,\n  systemLogDetailParams: SystemLogDetailDialogParams\n): void => {\n  if (!registeredDialog) {\n    registeredDialog = true;\n    registerDialog(element);\n  }\n  fireEvent(element, dialogShowEvent, systemLogDetailParams);\n};\n"],"mappings":";;;;;AAAA,SAASA,SAAS,QAAQ,gCAAgC;AAU1D,IAAIC,gBAAgB,GAAG,KAAK;AAC5B,IAAMC,eAAe,GAAG,+BAA+B;AACvD,IAAMC,SAAS,GAAG,0BAA0B;AAM5C,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAIC,OAAoB;EAAA,OAC1CL,SAAS,CAACK,OAAO,EAAE,iBAAiB,EAAE;IACpCH,eAAe,EAAfA,eAAe;IACfC,SAAS,EAATA,SAAS;IACTG,YAAY,EAAE,SAAAA,aAAA;MAAA,OAAM,MAAM,CAAC,4BAA4B,CAAC;IAAA;EAC1D,CAAC,CAAC;AAAA;AAEJ,OAAO,IAAMC,yBAAyB,GAAG,SAA5BA,yBAAyBA,CACpCF,OAAoB,EACpBG,qBAAkD,EACzC;EACT,IAAI,CAACP,gBAAgB,EAAE;IACrBA,gBAAgB,GAAG,IAAI;IACvBG,cAAc,CAACC,OAAO,CAAC;EACzB;EACAL,SAAS,CAACK,OAAO,EAAEH,eAAe,EAAEM,qBAAqB,CAAC;AAC5D,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}