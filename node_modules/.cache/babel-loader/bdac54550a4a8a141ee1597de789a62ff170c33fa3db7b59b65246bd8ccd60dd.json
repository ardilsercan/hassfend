{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport { DEFAULT_SCHEMA, dump, load } from \"js-yaml\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { haStyle } from \"../resources/styles\";\nimport \"./ha-code-editor\";\nimport { showToast } from \"../util/toast\";\nimport { copyToClipboard } from \"../common/util/copy-clipboard\";\nconst isEmpty = obj => {\n  if (typeof obj !== \"object\") {\n    return false;\n  }\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n  }\n  return true;\n};\nexport let HaYamlEditor = _decorate([customElement(\"ha-yaml-editor\")], function (_initialize, _LitElement) {\n  class HaYamlEditor extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaYamlEditor,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"value\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"yamlSchema\",\n      value() {\n        return DEFAULT_SCHEMA;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"defaultValue\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"isValid\",\n      value() {\n        return true;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"label\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"autoUpdate\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"readOnly\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"required\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"copyClipboard\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_yaml\",\n      value() {\n        return \"\";\n      }\n    }, {\n      kind: \"method\",\n      key: \"setValue\",\n      value: function setValue(value) {\n        try {\n          this._yaml = value && !isEmpty(value) ? dump(value, {\n            schema: this.yamlSchema,\n            quotingType: '\"',\n            noRefs: true\n          }) : \"\";\n        } catch (err) {\n          // eslint-disable-next-line no-console\n          console.error(err, value);\n          alert(`There was an error converting to YAML: ${err}`);\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"firstUpdated\",\n      value: function firstUpdated() {\n        if (this.defaultValue) {\n          this.setValue(this.defaultValue);\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"willUpdate\",\n      value: function willUpdate(changedProperties) {\n        _get(_getPrototypeOf(HaYamlEditor.prototype), \"willUpdate\", this).call(this, changedProperties);\n        if (this.autoUpdate && changedProperties.has(\"value\")) {\n          this.setValue(this.value);\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (this._yaml === undefined) {\n          return nothing;\n        }\n        return html`\n      ${this.label ? html`<p>${this.label}${this.required ? \" *\" : \"\"}</p>` : \"\"}\n      <ha-code-editor\n        .hass=${this.hass}\n        .value=${this._yaml}\n        .readOnly=${this.readOnly}\n        mode=\"yaml\"\n        autocomplete-entities\n        autocomplete-icons\n        .error=${this.isValid === false}\n        @value-changed=${this._onChange}\n        dir=\"ltr\"\n      ></ha-code-editor>\n      ${this.copyClipboard ? html`<div class=\"card-actions\">\n            <mwc-button @click=${this._copyYaml}>\n              ${this.hass.localize(\"ui.components.yaml-editor.copy_to_clipboard\")}\n            </mwc-button>\n          </div>` : nothing}\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_onChange\",\n      value: function _onChange(ev) {\n        ev.stopPropagation();\n        this._yaml = ev.detail.value;\n        let parsed;\n        let isValid = true;\n        if (this._yaml) {\n          try {\n            parsed = load(this._yaml, {\n              schema: this.yamlSchema\n            });\n          } catch (err) {\n            // Invalid YAML\n            isValid = false;\n          }\n        } else {\n          parsed = {};\n        }\n        this.value = parsed;\n        this.isValid = isValid;\n        fireEvent(this, \"value-changed\", {\n          value: parsed,\n          isValid\n        });\n      }\n    }, {\n      kind: \"get\",\n      key: \"yaml\",\n      value: function yaml() {\n        return this._yaml;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_copyYaml\",\n      value: async function _copyYaml() {\n        if (this.yaml) {\n          await copyToClipboard(this.yaml);\n          showToast(this, {\n            message: this.hass.localize(\"ui.common.copied_clipboard\")\n          });\n        }\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [haStyle, css`\n        .card-actions {\n          border-radius: var(\n            --actions-border-radius,\n            0px 0px var(--ha-card-border-radius, 12px)\n              var(--ha-card-border-radius, 12px)\n          );\n          border: 1px solid var(--divider-color);\n          padding: 5px 16px;\n        }\n        ha-code-editor {\n          flex-grow: 1;\n        }\n      `];\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["DEFAULT_SCHEMA","dump","load","css","html","LitElement","nothing","customElement","property","state","fireEvent","haStyle","showToast","copyToClipboard","isEmpty","obj","key","Object","prototype","hasOwnProperty","call","HaYamlEditor","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","value","type","Boolean","setValue","_yaml","schema","yamlSchema","quotingType","noRefs","err","console","error","alert","firstUpdated","defaultValue","willUpdate","changedProperties","_get","_getPrototypeOf","autoUpdate","has","render","undefined","label","required","hass","readOnly","isValid","_onChange","copyClipboard","_copyYaml","localize","ev","stopPropagation","detail","parsed","yaml","message","static","styles"],"sources":["/workspaces/frontend/src/components/ha-yaml-editor.ts"],"sourcesContent":["import { DEFAULT_SCHEMA, dump, load, Schema } from \"js-yaml\";\nimport {\n  CSSResultGroup,\n  css,\n  html,\n  LitElement,\n  nothing,\n  PropertyValues,\n} from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport type { HomeAssistant } from \"../types\";\nimport { haStyle } from \"../resources/styles\";\nimport \"./ha-code-editor\";\nimport { showToast } from \"../util/toast\";\nimport { copyToClipboard } from \"../common/util/copy-clipboard\";\n\nconst isEmpty = (obj: Record<string, unknown>): boolean => {\n  if (typeof obj !== \"object\") {\n    return false;\n  }\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n@customElement(\"ha-yaml-editor\")\nexport class HaYamlEditor extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property() public value?: any;\n\n  @property({ attribute: false }) public yamlSchema: Schema = DEFAULT_SCHEMA;\n\n  @property() public defaultValue?: any;\n\n  @property({ type: Boolean }) public isValid = true;\n\n  @property() public label?: string;\n\n  @property({ type: Boolean }) public autoUpdate = false;\n\n  @property({ type: Boolean }) public readOnly = false;\n\n  @property({ type: Boolean }) public required = false;\n\n  @property({ type: Boolean }) public copyClipboard = false;\n\n  @state() private _yaml = \"\";\n\n  public setValue(value): void {\n    try {\n      this._yaml =\n        value && !isEmpty(value)\n          ? dump(value, {\n              schema: this.yamlSchema,\n              quotingType: '\"',\n              noRefs: true,\n            })\n          : \"\";\n    } catch (err: any) {\n      // eslint-disable-next-line no-console\n      console.error(err, value);\n      alert(`There was an error converting to YAML: ${err}`);\n    }\n  }\n\n  protected firstUpdated(): void {\n    if (this.defaultValue) {\n      this.setValue(this.defaultValue);\n    }\n  }\n\n  protected willUpdate(changedProperties: PropertyValues<this>): void {\n    super.willUpdate(changedProperties);\n    if (this.autoUpdate && changedProperties.has(\"value\")) {\n      this.setValue(this.value);\n    }\n  }\n\n  protected render() {\n    if (this._yaml === undefined) {\n      return nothing;\n    }\n    return html`\n      ${this.label\n        ? html`<p>${this.label}${this.required ? \" *\" : \"\"}</p>`\n        : \"\"}\n      <ha-code-editor\n        .hass=${this.hass}\n        .value=${this._yaml}\n        .readOnly=${this.readOnly}\n        mode=\"yaml\"\n        autocomplete-entities\n        autocomplete-icons\n        .error=${this.isValid === false}\n        @value-changed=${this._onChange}\n        dir=\"ltr\"\n      ></ha-code-editor>\n      ${this.copyClipboard\n        ? html`<div class=\"card-actions\">\n            <mwc-button @click=${this._copyYaml}>\n              ${this.hass.localize(\n                \"ui.components.yaml-editor.copy_to_clipboard\"\n              )}\n            </mwc-button>\n          </div>`\n        : nothing}\n    `;\n  }\n\n  private _onChange(ev: CustomEvent): void {\n    ev.stopPropagation();\n    this._yaml = ev.detail.value;\n    let parsed;\n    let isValid = true;\n\n    if (this._yaml) {\n      try {\n        parsed = load(this._yaml, { schema: this.yamlSchema });\n      } catch (err: any) {\n        // Invalid YAML\n        isValid = false;\n      }\n    } else {\n      parsed = {};\n    }\n\n    this.value = parsed;\n    this.isValid = isValid;\n\n    fireEvent(this, \"value-changed\", { value: parsed, isValid } as any);\n  }\n\n  get yaml() {\n    return this._yaml;\n  }\n\n  private async _copyYaml(): Promise<void> {\n    if (this.yaml) {\n      await copyToClipboard(this.yaml);\n      showToast(this, {\n        message: this.hass.localize(\"ui.common.copied_clipboard\"),\n      });\n    }\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyle,\n      css`\n        .card-actions {\n          border-radius: var(\n            --actions-border-radius,\n            0px 0px var(--ha-card-border-radius, 12px)\n              var(--ha-card-border-radius, 12px)\n          );\n          border: 1px solid var(--divider-color);\n          padding: 5px 16px;\n        }\n        ha-code-editor {\n          flex-grow: 1;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-yaml-editor\": HaYamlEditor;\n  }\n}\n"],"mappings":";;;AAAA,SAASA,cAAc,EAAEC,IAAI,EAAEC,IAAI,QAAgB,SAAS;AAC5D,SAEEC,GAAG,EACHC,IAAI,EACJC,UAAU,EACVC,OAAO,QAEF,KAAK;AACZ,SAASC,aAAa,EAAEC,QAAQ,EAAEC,KAAK,QAAQ,gBAAgB;AAC/D,SAASC,SAAS,QAAQ,0BAA0B;AAEpD,SAASC,OAAO,QAAQ,qBAAqB;AAC7C,OAAO,kBAAkB;AACzB,SAASC,SAAS,QAAQ,eAAe;AACzC,SAASC,eAAe,QAAQ,+BAA+B;AAE/D,MAAMC,OAAO,GAAIC,GAA4B,IAAc;EACzD,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;IAC3B,OAAO,KAAK;EACd;EACA,KAAK,MAAMC,GAAG,IAAID,GAAG,EAAE;IACrB,IAAIE,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACL,GAAG,EAAEC,GAAG,CAAC,EAAE;MAClD,OAAO,KAAK;IACd;EACF;EACA,OAAO,IAAI;AACb,CAAC;AAED,WACaK,YAAY,GAAAC,SAAA,EADxBf,aAAa,CAAC,gBAAgB,CAAC,aAAAgB,WAAA,EAAAC,WAAA;EAAhC,MACaH,YAAY,SAAAG,WAAA,CAAoB;IAAAC,YAAA,GAAAC,IAAA;MAAA,SAAAA,IAAA;MAAAH,WAAA;IAAA;EA2I7C;EAAC;IAAAI,CAAA,EA3IYN,YAAY;IAAAO,CAAA;MAAAC,IAAA;MAAAC,UAAA,GACtBtB,QAAQ,CAAC;QAAEuB,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAf,GAAA;MAAAgB,KAAA;IAAA;MAAAH,IAAA;MAAAC,UAAA,GAE9BtB,QAAQ,CAAC,CAAC;MAAAQ,GAAA;MAAAgB,KAAA;IAAA;MAAAH,IAAA;MAAAC,UAAA,GAEVtB,QAAQ,CAAC;QAAEuB,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAf,GAAA;MAAAgB,MAAA;QAAA,OAA6BhC,cAAc;MAAA;IAAA;MAAA6B,IAAA;MAAAC,UAAA,GAEzEtB,QAAQ,CAAC,CAAC;MAAAQ,GAAA;MAAAgB,KAAA;IAAA;MAAAH,IAAA;MAAAC,UAAA,GAEVtB,QAAQ,CAAC;QAAEyB,IAAI,EAAEC;MAAQ,CAAC,CAAC;MAAAlB,GAAA;MAAAgB,MAAA;QAAA,OAAkB,IAAI;MAAA;IAAA;MAAAH,IAAA;MAAAC,UAAA,GAEjDtB,QAAQ,CAAC,CAAC;MAAAQ,GAAA;MAAAgB,KAAA;IAAA;MAAAH,IAAA;MAAAC,UAAA,GAEVtB,QAAQ,CAAC;QAAEyB,IAAI,EAAEC;MAAQ,CAAC,CAAC;MAAAlB,GAAA;MAAAgB,MAAA;QAAA,OAAqB,KAAK;MAAA;IAAA;MAAAH,IAAA;MAAAC,UAAA,GAErDtB,QAAQ,CAAC;QAAEyB,IAAI,EAAEC;MAAQ,CAAC,CAAC;MAAAlB,GAAA;MAAAgB,MAAA;QAAA,OAAmB,KAAK;MAAA;IAAA;MAAAH,IAAA;MAAAC,UAAA,GAEnDtB,QAAQ,CAAC;QAAEyB,IAAI,EAAEC;MAAQ,CAAC,CAAC;MAAAlB,GAAA;MAAAgB,MAAA;QAAA,OAAmB,KAAK;MAAA;IAAA;MAAAH,IAAA;MAAAC,UAAA,GAEnDtB,QAAQ,CAAC;QAAEyB,IAAI,EAAEC;MAAQ,CAAC,CAAC;MAAAlB,GAAA;MAAAgB,MAAA;QAAA,OAAwB,KAAK;MAAA;IAAA;MAAAH,IAAA;MAAAC,UAAA,GAExDrB,KAAK,CAAC,CAAC;MAAAO,GAAA;MAAAgB,MAAA;QAAA,OAAiB,EAAE;MAAA;IAAA;MAAAH,IAAA;MAAAb,GAAA;MAAAgB,KAAA,EAE3B,SAAAG,SAAgBH,KAAK,EAAQ;QAC3B,IAAI;UACF,IAAI,CAACI,KAAK,GACRJ,KAAK,IAAI,CAAClB,OAAO,CAACkB,KAAK,CAAC,GACpB/B,IAAI,CAAC+B,KAAK,EAAE;YACVK,MAAM,EAAE,IAAI,CAACC,UAAU;YACvBC,WAAW,EAAE,GAAG;YAChBC,MAAM,EAAE;UACV,CAAC,CAAC,GACF,EAAE;QACV,CAAC,CAAC,OAAOC,GAAQ,EAAE;UACjB;UACAC,OAAO,CAACC,KAAK,CAACF,GAAG,EAAET,KAAK,CAAC;UACzBY,KAAK,CAAE,0CAAyCH,GAAI,EAAC,CAAC;QACxD;MACF;IAAC;MAAAZ,IAAA;MAAAb,GAAA;MAAAgB,KAAA,EAED,SAAAa,aAAA,EAA+B;QAC7B,IAAI,IAAI,CAACC,YAAY,EAAE;UACrB,IAAI,CAACX,QAAQ,CAAC,IAAI,CAACW,YAAY,CAAC;QAClC;MACF;IAAC;MAAAjB,IAAA;MAAAb,GAAA;MAAAgB,KAAA,EAED,SAAAe,WAAqBC,iBAAuC,EAAQ;QAClEC,IAAA,CAAAC,eAAA,CA/CS7B,YAAY,CAAAH,SAAA,uBAAAE,IAAA,OA+CJ4B,iBAAiB;QAClC,IAAI,IAAI,CAACG,UAAU,IAAIH,iBAAiB,CAACI,GAAG,CAAC,OAAO,CAAC,EAAE;UACrD,IAAI,CAACjB,QAAQ,CAAC,IAAI,CAACH,KAAK,CAAC;QAC3B;MACF;IAAC;MAAAH,IAAA;MAAAb,GAAA;MAAAgB,KAAA,EAED,SAAAqB,OAAA,EAAmB;QACjB,IAAI,IAAI,CAACjB,KAAK,KAAKkB,SAAS,EAAE;UAC5B,OAAOhD,OAAO;QAChB;QACA,OAAOF,IAAK;AAChB,QAAQ,IAAI,CAACmD,KAAK,GACRnD,IAAK,MAAK,IAAI,CAACmD,KAAM,GAAE,IAAI,CAACC,QAAQ,GAAG,IAAI,GAAG,EAAG,MAAK,GACtD,EAAG;AACb;AACA,gBAAgB,IAAI,CAACC,IAAK;AAC1B,iBAAiB,IAAI,CAACrB,KAAM;AAC5B,oBAAoB,IAAI,CAACsB,QAAS;AAClC;AACA;AACA;AACA,iBAAiB,IAAI,CAACC,OAAO,KAAK,KAAM;AACxC,yBAAyB,IAAI,CAACC,SAAU;AACxC;AACA;AACA,QAAQ,IAAI,CAACC,aAAa,GAChBzD,IAAK;AACf,iCAAiC,IAAI,CAAC0D,SAAU;AAChD,gBAAgB,IAAI,CAACL,IAAI,CAACM,QAAQ,CAClB,6CACF,CAAE;AAChB;AACA,iBAAiB,GACPzD,OAAQ;AAClB,KAAK;MACH;IAAC;MAAAuB,IAAA;MAAAb,GAAA;MAAAgB,KAAA,EAED,SAAA4B,UAAkBI,EAAe,EAAQ;QACvCA,EAAE,CAACC,eAAe,CAAC,CAAC;QACpB,IAAI,CAAC7B,KAAK,GAAG4B,EAAE,CAACE,MAAM,CAAClC,KAAK;QAC5B,IAAImC,MAAM;QACV,IAAIR,OAAO,GAAG,IAAI;QAElB,IAAI,IAAI,CAACvB,KAAK,EAAE;UACd,IAAI;YACF+B,MAAM,GAAGjE,IAAI,CAAC,IAAI,CAACkC,KAAK,EAAE;cAAEC,MAAM,EAAE,IAAI,CAACC;YAAW,CAAC,CAAC;UACxD,CAAC,CAAC,OAAOG,GAAQ,EAAE;YACjB;YACAkB,OAAO,GAAG,KAAK;UACjB;QACF,CAAC,MAAM;UACLQ,MAAM,GAAG,CAAC,CAAC;QACb;QAEA,IAAI,CAACnC,KAAK,GAAGmC,MAAM;QACnB,IAAI,CAACR,OAAO,GAAGA,OAAO;QAEtBjD,SAAS,CAAC,IAAI,EAAE,eAAe,EAAE;UAAEsB,KAAK,EAAEmC,MAAM;UAAER;QAAQ,CAAQ,CAAC;MACrE;IAAC;MAAA9B,IAAA;MAAAb,GAAA;MAAAgB,KAAA,EAED,SAAAoC,KAAA,EAAW;QACT,OAAO,IAAI,CAAChC,KAAK;MACnB;IAAC;MAAAP,IAAA;MAAAb,GAAA;MAAAgB,KAAA,EAED,eAAA8B,UAAA,EAAyC;QACvC,IAAI,IAAI,CAACM,IAAI,EAAE;UACb,MAAMvD,eAAe,CAAC,IAAI,CAACuD,IAAI,CAAC;UAChCxD,SAAS,CAAC,IAAI,EAAE;YACdyD,OAAO,EAAE,IAAI,CAACZ,IAAI,CAACM,QAAQ,CAAC,4BAA4B;UAC1D,CAAC,CAAC;QACJ;MACF;IAAC;MAAAlC,IAAA;MAAAyC,MAAA;MAAAtD,GAAA;MAAAgB,KAAA,EAED,SAAAuC,OAAA,EAAoC;QAClC,OAAO,CACL5D,OAAO,EACPR,GAAI;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,CACF;MACH;IAAC;EAAA;AAAA,GA1I+BE,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}