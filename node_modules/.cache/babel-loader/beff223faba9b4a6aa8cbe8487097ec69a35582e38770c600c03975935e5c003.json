{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _decorate from \"@babel/runtime/helpers/decorate\";\nvar _templateObject, _templateObject2;\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { styleMap } from \"lit/directives/style-map\";\nimport memoizeOne from \"memoize-one\";\nimport { DEFAULT_MAX_KELVIN, DEFAULT_MIN_KELVIN } from \"../../../common/color/convert-light-color\";\nimport { computeDomain } from \"../../../common/entity/compute_domain\";\nimport { stateActive } from \"../../../common/entity/state_active\";\nimport \"../../../components/ha-control-slider\";\nimport { UNAVAILABLE } from \"../../../data/entity\";\nimport { DOMAIN_ATTRIBUTES_UNITS } from \"../../../data/entity_attributes\";\nimport { LightColorMode, lightSupportsColorMode } from \"../../../data/light\";\nimport { generateColorTemperatureGradient } from \"../../../dialogs/more-info/components/lights/light-color-temp-picker\";\nexport var supportsLightColorTempCardFeature = function supportsLightColorTempCardFeature(stateObj) {\n  var domain = computeDomain(stateObj.entity_id);\n  return domain === \"light\" && lightSupportsColorMode(stateObj, LightColorMode.COLOR_TEMP);\n};\nvar HuiLightColorTempCardFeature = _decorate([customElement(\"hui-light-color-temp-card-feature\")], function (_initialize, _LitElement) {\n  var HuiLightColorTempCardFeature = /*#__PURE__*/function (_LitElement2) {\n    _inherits(HuiLightColorTempCardFeature, _LitElement2);\n    function HuiLightColorTempCardFeature() {\n      var _this;\n      _classCallCheck(this, HuiLightColorTempCardFeature);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, HuiLightColorTempCardFeature, [].concat(args));\n      _initialize(_assertThisInitialized(_this));\n      return _this;\n    }\n    return _createClass(HuiLightColorTempCardFeature);\n  }(_LitElement);\n  return {\n    F: HuiLightColorTempCardFeature,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"stateObj\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_config\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      static: true,\n      key: \"getStubConfig\",\n      value: function getStubConfig() {\n        return {\n          type: \"light-color-temp\"\n        };\n      }\n    }, {\n      kind: \"method\",\n      key: \"setConfig\",\n      value: function setConfig(config) {\n        if (!config) {\n          throw new Error(\"Invalid configuration\");\n        }\n        this._config = config;\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var _this$stateObj$attrib, _this$stateObj$attrib2;\n        if (!this._config || !this.hass || !this.stateObj || !supportsLightColorTempCardFeature(this.stateObj)) {\n          return nothing;\n        }\n        var position = this.stateObj.attributes.color_temp_kelvin != null ? this.stateObj.attributes.color_temp_kelvin : undefined;\n        var minKelvin = (_this$stateObj$attrib = this.stateObj.attributes.min_color_temp_kelvin) !== null && _this$stateObj$attrib !== void 0 ? _this$stateObj$attrib : DEFAULT_MIN_KELVIN;\n        var maxKelvin = (_this$stateObj$attrib2 = this.stateObj.attributes.max_color_temp_kelvin) !== null && _this$stateObj$attrib2 !== void 0 ? _this$stateObj$attrib2 : DEFAULT_MAX_KELVIN;\n        var gradient = this._generateTemperatureGradient(minKelvin, maxKelvin);\n        return html(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      <div class=\\\"container\\\">\\n        <ha-control-slider\\n          .value=\", \"\\n          mode=\\\"cursor\\\"\\n          .showHandle=\", \"\\n          .disabled=\", \"\\n          @value-changed=\", \"\\n          .label=\", \"\\n          .min=\", \"\\n          .max=\", \"\\n          style=\", \"\\n          .unit=\", \"\\n          .locale=\", \"\\n        ></ha-control-slider>\\n      </div>\\n    \"])), position, stateActive(this.stateObj), this.stateObj.state === UNAVAILABLE, this._valueChanged, this.hass.localize(\"ui.card.light.color_temperature\"), minKelvin, maxKelvin, styleMap({\n          \"--gradient\": gradient\n        }), DOMAIN_ATTRIBUTES_UNITS.light.color_temp_kelvin, this.hass.locale);\n      }\n    }, {\n      kind: \"field\",\n      key: \"_generateTemperatureGradient\",\n      value: function value() {\n        return memoizeOne(function (min, max) {\n          return generateColorTemperatureGradient(min, max);\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_valueChanged\",\n      value: function _valueChanged(ev) {\n        ev.stopPropagation();\n        var value = ev.detail.value;\n        this.hass.callService(\"light\", \"turn_on\", {\n          entity_id: this.stateObj.entity_id,\n          color_temp_kelvin: value\n        });\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n      ha-control-slider {\\n        --control-slider-color: var(--feature-color);\\n        --control-slider-background: -webkit-linear-gradient(\\n          left,\\n          var(--gradient)\\n        );\\n        --control-slider-background-opacity: 1;\\n        --control-slider-thickness: 40px;\\n        --control-slider-border-radius: 10px;\\n      }\\n      .container {\\n        padding: 0 12px 12px 12px;\\n        width: auto;\\n      }\\n    \"])));\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","nothing","customElement","property","state","styleMap","memoizeOne","DEFAULT_MAX_KELVIN","DEFAULT_MIN_KELVIN","computeDomain","stateActive","UNAVAILABLE","DOMAIN_ATTRIBUTES_UNITS","LightColorMode","lightSupportsColorMode","generateColorTemperatureGradient","supportsLightColorTempCardFeature","stateObj","domain","entity_id","COLOR_TEMP","HuiLightColorTempCardFeature","_decorate","_initialize","_LitElement","_LitElement2","_inherits","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_assertThisInitialized","_createClass","F","d","kind","decorators","attribute","key","value","static","getStubConfig","type","setConfig","config","Error","_config","render","_this$stateObj$attrib","_this$stateObj$attrib2","hass","position","attributes","color_temp_kelvin","undefined","minKelvin","min_color_temp_kelvin","maxKelvin","max_color_temp_kelvin","gradient","_generateTemperatureGradient","_templateObject","_taggedTemplateLiteral","_valueChanged","localize","light","locale","min","max","ev","stopPropagation","detail","callService","styles","_templateObject2"],"sources":["/workspaces/frontend/src/panels/lovelace/card-features/hui-light-color-temp-card-feature.ts"],"sourcesContent":["import { HassEntity } from \"home-assistant-js-websocket\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { styleMap } from \"lit/directives/style-map\";\nimport memoizeOne from \"memoize-one\";\nimport {\n  DEFAULT_MAX_KELVIN,\n  DEFAULT_MIN_KELVIN,\n} from \"../../../common/color/convert-light-color\";\nimport { computeDomain } from \"../../../common/entity/compute_domain\";\nimport { stateActive } from \"../../../common/entity/state_active\";\nimport \"../../../components/ha-control-slider\";\nimport { UNAVAILABLE } from \"../../../data/entity\";\nimport { DOMAIN_ATTRIBUTES_UNITS } from \"../../../data/entity_attributes\";\nimport { LightColorMode, lightSupportsColorMode } from \"../../../data/light\";\nimport { generateColorTemperatureGradient } from \"../../../dialogs/more-info/components/lights/light-color-temp-picker\";\nimport { HomeAssistant } from \"../../../types\";\nimport { LovelaceCardFeature } from \"../types\";\nimport { LightColorTempCardFeatureConfig } from \"./types\";\n\nexport const supportsLightColorTempCardFeature = (stateObj: HassEntity) => {\n  const domain = computeDomain(stateObj.entity_id);\n  return (\n    domain === \"light\" &&\n    lightSupportsColorMode(stateObj, LightColorMode.COLOR_TEMP)\n  );\n};\n\n@customElement(\"hui-light-color-temp-card-feature\")\nclass HuiLightColorTempCardFeature\n  extends LitElement\n  implements LovelaceCardFeature\n{\n  @property({ attribute: false }) public hass?: HomeAssistant;\n\n  @property({ attribute: false }) public stateObj?: HassEntity;\n\n  @state() private _config?: LightColorTempCardFeatureConfig;\n\n  static getStubConfig(): LightColorTempCardFeatureConfig {\n    return {\n      type: \"light-color-temp\",\n    };\n  }\n\n  public setConfig(config: LightColorTempCardFeatureConfig): void {\n    if (!config) {\n      throw new Error(\"Invalid configuration\");\n    }\n    this._config = config;\n  }\n\n  protected render() {\n    if (\n      !this._config ||\n      !this.hass ||\n      !this.stateObj ||\n      !supportsLightColorTempCardFeature(this.stateObj)\n    ) {\n      return nothing;\n    }\n\n    const position =\n      this.stateObj.attributes.color_temp_kelvin != null\n        ? this.stateObj.attributes.color_temp_kelvin\n        : undefined;\n\n    const minKelvin =\n      this.stateObj.attributes.min_color_temp_kelvin ?? DEFAULT_MIN_KELVIN;\n    const maxKelvin =\n      this.stateObj.attributes.max_color_temp_kelvin ?? DEFAULT_MAX_KELVIN;\n\n    const gradient = this._generateTemperatureGradient(minKelvin!, maxKelvin);\n\n    return html`\n      <div class=\"container\">\n        <ha-control-slider\n          .value=${position}\n          mode=\"cursor\"\n          .showHandle=${stateActive(this.stateObj)}\n          .disabled=${this.stateObj!.state === UNAVAILABLE}\n          @value-changed=${this._valueChanged}\n          .label=${this.hass.localize(\"ui.card.light.color_temperature\")}\n          .min=${minKelvin}\n          .max=${maxKelvin}\n          style=${styleMap({\n            \"--gradient\": gradient,\n          })}\n          .unit=${DOMAIN_ATTRIBUTES_UNITS.light.color_temp_kelvin}\n          .locale=${this.hass.locale}\n        ></ha-control-slider>\n      </div>\n    `;\n  }\n\n  private _generateTemperatureGradient = memoizeOne(\n    (min: number, max: number) => generateColorTemperatureGradient(min, max)\n  );\n\n  private _valueChanged(ev: CustomEvent) {\n    ev.stopPropagation();\n    const value = ev.detail.value;\n\n    this.hass!.callService(\"light\", \"turn_on\", {\n      entity_id: this.stateObj!.entity_id,\n      color_temp_kelvin: value,\n    });\n  }\n\n  static get styles() {\n    return css`\n      ha-control-slider {\n        --control-slider-color: var(--feature-color);\n        --control-slider-background: -webkit-linear-gradient(\n          left,\n          var(--gradient)\n        );\n        --control-slider-background-opacity: 1;\n        --control-slider-thickness: 40px;\n        --control-slider-border-radius: 10px;\n      }\n      .container {\n        padding: 0 12px 12px 12px;\n        width: auto;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-light-color-temp-card-feature\": HuiLightColorTempCardFeature;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}