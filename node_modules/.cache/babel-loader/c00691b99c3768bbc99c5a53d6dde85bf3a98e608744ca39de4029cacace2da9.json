{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport \"@material/mwc-button\";\nconst mdiContentCopy = \"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\";\nconst mdiOpenInNew = \"M14,3V5H17.59L7.76,14.83L9.17,16.24L19,6.41V10H21V3M19,19H5V5H12V3H5C3.89,3 3,3.9 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V12H19V19Z\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { query, state } from \"lit/decorators\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { copyToClipboard } from \"../../../../common/util/copy-clipboard\";\nimport { createCloseHeading } from \"../../../../components/ha-dialog\";\nimport \"../../../../components/ha-textfield\";\nimport { showConfirmationDialog } from \"../../../../dialogs/generic/show-dialog-box\";\nimport { haStyle, haStyleDialog } from \"../../../../resources/styles\";\nimport { documentationUrl } from \"../../../../util/documentation-url\";\nimport { showToast } from \"../../../../util/toast\";\nexport let DialogManageCloudhook = _decorate(null, function (_initialize, _LitElement) {\n  class DialogManageCloudhook extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: DialogManageCloudhook,\n    d: [{\n      kind: \"field\",\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_params\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [query(\"ha-textfield\")],\n      key: \"_input\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"showDialog\",\n      value: function showDialog(params) {\n        this._params = params;\n      }\n    }, {\n      kind: \"method\",\n      key: \"closeDialog\",\n      value: function closeDialog() {\n        this._params = undefined;\n        fireEvent(this, \"dialog-closed\", {\n          dialog: this.localName\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this._params) {\n          return nothing;\n        }\n        const {\n          webhook,\n          cloudhook\n        } = this._params;\n        const docsUrl = webhook.domain === \"automation\" ? documentationUrl(this.hass, \"/docs/automation/trigger/#webhook-trigger\") : documentationUrl(this.hass, `/integrations/${webhook.domain}/`);\n        return html`\n      <ha-dialog\n        open\n        hideActions\n        @closed=${this.closeDialog}\n        .heading=${createCloseHeading(this.hass, this.hass.localize(\"ui.panel.config.cloud.dialog_cloudhook.webhook_for\", {\n          name: webhook.name\n        }))}\n      >\n        <div>\n          <p>\n            ${!cloudhook.managed ? html`\n                  ${this.hass.localize(\"ui.panel.config.cloud.dialog_cloudhook.managed_by_integration\")}\n                ` : html`\n                  ${this.hass.localize(\"ui.panel.config.cloud.dialog_cloudhook.info_disable_webhook\")}\n                  <button class=\"link\" @click=${this._disableWebhook}>\n                    ${this.hass.localize(\"ui.panel.config.cloud.dialog_cloudhook.link_disable_webhook\")}</button\n                  >.\n                `}\n            <br />\n            <a href=${docsUrl} target=\"_blank\" rel=\"noreferrer\">\n              ${this.hass.localize(\"ui.panel.config.cloud.dialog_cloudhook.view_documentation\")}\n              <ha-svg-icon .path=${mdiOpenInNew}></ha-svg-icon>\n            </a>\n          </p>\n          <ha-textfield\n            .label=${this.hass.localize(\"ui.panel.config.cloud.dialog_cloudhook.public_url\")}\n            .value=${cloudhook.cloudhook_url}\n            iconTrailing\n            readOnly\n            @click=${this.focusInput}\n          >\n            <ha-icon-button\n              @click=${this._copyUrl}\n              slot=\"trailingIcon\"\n              .path=${mdiContentCopy}\n            ></ha-icon-button>\n          </ha-textfield>\n        </div>\n\n        <a\n          href=${docsUrl}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          slot=\"secondaryAction\"\n        >\n          <mwc-button>\n            ${this.hass.localize(\"ui.panel.config.cloud.dialog_cloudhook.view_documentation\")}\n          </mwc-button>\n        </a>\n        <mwc-button @click=${this.closeDialog} slot=\"primaryAction\">\n          ${this.hass.localize(\"ui.panel.config.cloud.dialog_cloudhook.close\")}\n        </mwc-button>\n      </ha-dialog>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_disableWebhook\",\n      value: async function _disableWebhook() {\n        const confirmed = await showConfirmationDialog(this, {\n          title: this.hass.localize(\"ui.panel.config.cloud.dialog_cloudhook.confirm_disable_title\"),\n          text: this.hass.localize(\"ui.panel.config.cloud.dialog_cloudhook.confirm_disable_text\", {\n            name: this._params.webhook.name\n          }),\n          dismissText: this.hass.localize(\"ui.common.cancel\"),\n          confirmText: this.hass.localize(\"ui.common.disable\"),\n          destructive: true\n        });\n        if (confirmed) {\n          this._params.disableHook();\n          this.closeDialog();\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"focusInput\",\n      value: function focusInput(ev) {\n        const inputElement = ev.currentTarget;\n        inputElement.select();\n      }\n    }, {\n      kind: \"method\",\n      key: \"_copyUrl\",\n      value: async function _copyUrl(ev) {\n        if (!this.hass) return;\n        ev.stopPropagation();\n        const inputElement = ev.target.parentElement;\n        inputElement.select();\n        const url = this.hass.hassUrl(inputElement.value);\n        await copyToClipboard(url);\n        showToast(this, {\n          message: this.hass.localize(\"ui.common.copied_clipboard\")\n        });\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [haStyle, haStyleDialog, css`\n        ha-dialog {\n          width: 650px;\n        }\n        ha-textfield {\n          display: block;\n        }\n        ha-textfield > ha-icon-button {\n          --mdc-icon-button-size: 24px;\n          --mdc-icon-size: 18px;\n        }\n        button.link {\n          color: var(--primary-color);\n          text-decoration: none;\n        }\n        a {\n          text-decoration: none;\n        }\n        a ha-svg-icon {\n          --mdc-icon-size: 16px;\n        }\n        p {\n          margin-top: 0;\n          margin-bottom: 16px;\n        }\n      `];\n      }\n    }]\n  };\n}, LitElement);\ncustomElements.define(\"dialog-manage-cloudhook\", DialogManageCloudhook);","map":{"version":3,"names":["mdiContentCopy","mdiOpenInNew","css","html","LitElement","nothing","query","state","fireEvent","copyToClipboard","createCloseHeading","showConfirmationDialog","haStyle","haStyleDialog","documentationUrl","showToast","DialogManageCloudhook","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","key","value","decorators","showDialog","params","_params","closeDialog","undefined","dialog","localName","render","webhook","cloudhook","docsUrl","domain","hass","localize","name","managed","_disableWebhook","cloudhook_url","focusInput","_copyUrl","confirmed","title","text","dismissText","confirmText","destructive","disableHook","ev","inputElement","currentTarget","select","stopPropagation","target","parentElement","url","hassUrl","message","static","styles","customElements","define"],"sources":["/workspaces/frontend/src/panels/config/cloud/dialog-manage-cloudhook/dialog-manage-cloudhook.ts"],"sourcesContent":["import \"@material/mwc-button\";\nimport { mdiContentCopy, mdiOpenInNew } from \"@mdi/js\";\nimport { css, CSSResultGroup, html, LitElement, nothing } from \"lit\";\nimport { query, state } from \"lit/decorators\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { copyToClipboard } from \"../../../../common/util/copy-clipboard\";\nimport { createCloseHeading } from \"../../../../components/ha-dialog\";\nimport \"../../../../components/ha-textfield\";\nimport type { HaTextField } from \"../../../../components/ha-textfield\";\nimport { showConfirmationDialog } from \"../../../../dialogs/generic/show-dialog-box\";\nimport { haStyle, haStyleDialog } from \"../../../../resources/styles\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { documentationUrl } from \"../../../../util/documentation-url\";\nimport { showToast } from \"../../../../util/toast\";\nimport { WebhookDialogParams } from \"./show-dialog-manage-cloudhook\";\n\nexport class DialogManageCloudhook extends LitElement {\n  protected hass?: HomeAssistant;\n\n  @state() private _params?: WebhookDialogParams;\n\n  @query(\"ha-textfield\") _input!: HaTextField;\n\n  public showDialog(params: WebhookDialogParams) {\n    this._params = params;\n  }\n\n  public closeDialog() {\n    this._params = undefined;\n    fireEvent(this, \"dialog-closed\", { dialog: this.localName });\n  }\n\n  protected render() {\n    if (!this._params) {\n      return nothing;\n    }\n    const { webhook, cloudhook } = this._params;\n    const docsUrl =\n      webhook.domain === \"automation\"\n        ? documentationUrl(\n            this.hass!,\n            \"/docs/automation/trigger/#webhook-trigger\"\n          )\n        : documentationUrl(this.hass!, `/integrations/${webhook.domain}/`);\n    return html`\n      <ha-dialog\n        open\n        hideActions\n        @closed=${this.closeDialog}\n        .heading=${createCloseHeading(\n          this.hass!,\n          this.hass!.localize(\n            \"ui.panel.config.cloud.dialog_cloudhook.webhook_for\",\n            { name: webhook.name }\n          )\n        )}\n      >\n        <div>\n          <p>\n            ${!cloudhook.managed\n              ? html`\n                  ${this.hass!.localize(\n                    \"ui.panel.config.cloud.dialog_cloudhook.managed_by_integration\"\n                  )}\n                `\n              : html`\n                  ${this.hass!.localize(\n                    \"ui.panel.config.cloud.dialog_cloudhook.info_disable_webhook\"\n                  )}\n                  <button class=\"link\" @click=${this._disableWebhook}>\n                    ${this.hass!.localize(\n                      \"ui.panel.config.cloud.dialog_cloudhook.link_disable_webhook\"\n                    )}</button\n                  >.\n                `}\n            <br />\n            <a href=${docsUrl} target=\"_blank\" rel=\"noreferrer\">\n              ${this.hass!.localize(\n                \"ui.panel.config.cloud.dialog_cloudhook.view_documentation\"\n              )}\n              <ha-svg-icon .path=${mdiOpenInNew}></ha-svg-icon>\n            </a>\n          </p>\n          <ha-textfield\n            .label=${this.hass!.localize(\n              \"ui.panel.config.cloud.dialog_cloudhook.public_url\"\n            )}\n            .value=${cloudhook.cloudhook_url}\n            iconTrailing\n            readOnly\n            @click=${this.focusInput}\n          >\n            <ha-icon-button\n              @click=${this._copyUrl}\n              slot=\"trailingIcon\"\n              .path=${mdiContentCopy}\n            ></ha-icon-button>\n          </ha-textfield>\n        </div>\n\n        <a\n          href=${docsUrl}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          slot=\"secondaryAction\"\n        >\n          <mwc-button>\n            ${this.hass!.localize(\n              \"ui.panel.config.cloud.dialog_cloudhook.view_documentation\"\n            )}\n          </mwc-button>\n        </a>\n        <mwc-button @click=${this.closeDialog} slot=\"primaryAction\">\n          ${this.hass!.localize(\"ui.panel.config.cloud.dialog_cloudhook.close\")}\n        </mwc-button>\n      </ha-dialog>\n    `;\n  }\n\n  private async _disableWebhook() {\n    const confirmed = await showConfirmationDialog(this, {\n      title: this.hass!.localize(\n        \"ui.panel.config.cloud.dialog_cloudhook.confirm_disable_title\"\n      ),\n      text: this.hass!.localize(\n        \"ui.panel.config.cloud.dialog_cloudhook.confirm_disable_text\",\n        { name: this._params!.webhook.name }\n      ),\n      dismissText: this.hass!.localize(\"ui.common.cancel\"),\n      confirmText: this.hass!.localize(\"ui.common.disable\"),\n      destructive: true,\n    });\n    if (confirmed) {\n      this._params!.disableHook();\n      this.closeDialog();\n    }\n  }\n\n  private focusInput(ev) {\n    const inputElement = ev.currentTarget as HaTextField;\n    inputElement.select();\n  }\n\n  private async _copyUrl(ev): Promise<void> {\n    if (!this.hass) return;\n    ev.stopPropagation();\n    const inputElement = ev.target.parentElement as HaTextField;\n    inputElement.select();\n    const url = this.hass.hassUrl(inputElement.value);\n\n    await copyToClipboard(url);\n    showToast(this, {\n      message: this.hass.localize(\"ui.common.copied_clipboard\"),\n    });\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyle,\n      haStyleDialog,\n      css`\n        ha-dialog {\n          width: 650px;\n        }\n        ha-textfield {\n          display: block;\n        }\n        ha-textfield > ha-icon-button {\n          --mdc-icon-button-size: 24px;\n          --mdc-icon-size: 18px;\n        }\n        button.link {\n          color: var(--primary-color);\n          text-decoration: none;\n        }\n        a {\n          text-decoration: none;\n        }\n        a ha-svg-icon {\n          --mdc-icon-size: 16px;\n        }\n        p {\n          margin-top: 0;\n          margin-bottom: 16px;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"dialog-manage-cloudhook\": DialogManageCloudhook;\n  }\n}\n\ncustomElements.define(\"dialog-manage-cloudhook\", DialogManageCloudhook);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}