{"ast":null,"code":"/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n/**\n * Easing functions to use for web animations.\n *\n * **NOTE:** `EASING.EMPHASIZED` is approximated with unknown accuracy.\n *\n * TODO(b/241113345): replace with tokens\n */\nexport const EASING = {\n  STANDARD: 'cubic-bezier(0.2, 0, 0, 1)',\n  STANDARD_ACCELERATE: 'cubic-bezier(.3,0,1,1)',\n  STANDARD_DECELERATE: 'cubic-bezier(0,0,0,1)',\n  EMPHASIZED: 'cubic-bezier(.3,0,0,1)',\n  EMPHASIZED_ACCELERATE: 'cubic-bezier(.3,0,.8,.15)',\n  EMPHASIZED_DECELERATE: 'cubic-bezier(.05,.7,.1,1)'\n};\n/**\n * Creates an `AnimationSignal` that can be used to cancel a previous task.\n *\n * @example\n * class MyClass {\n *   private labelAnimationSignal = createAnimationSignal();\n *\n *   private async animateLabel() {\n *     // Start of the task. Previous tasks will be canceled.\n *     const signal = this.labelAnimationSignal.start();\n *\n *     // Do async work...\n *     if (signal.aborted) {\n *       // Use AbortSignal to check if a request was made to abort after some\n *       // asynchronous work.\n *       return;\n *     }\n *\n *     const animation = this.animate(...);\n *     // Add event listeners to be notified when the task should be canceled.\n *     signal.addEventListener('abort', () => {\n *       animation.cancel();\n *     });\n *\n *     animation.addEventListener('finish', () => {\n *       // Tell the signal that the current task is finished.\n *       this.labelAnimationSignal.finish();\n *     });\n *   }\n * }\n *\n * @return An `AnimationSignal`.\n */\nexport function createAnimationSignal() {\n  // The current animation's AbortController\n  let animationAbortController = null;\n  return {\n    start() {\n      var _animationAbortContro;\n      // Tell the previous animation to cancel.\n      (_animationAbortContro = animationAbortController) === null || _animationAbortContro === void 0 || _animationAbortContro.abort();\n      // Set up a new AbortController for the current animation.\n      animationAbortController = new AbortController();\n      // Provide the AbortSignal so that the caller can check aborted status\n      // and add listeners.\n      return animationAbortController.signal;\n    },\n    finish() {\n      animationAbortController = null;\n    }\n  };\n}\n/**\n * Returns a function which can be used to throttle function calls\n * mapped to a key via a given function that should produce a promise that\n * determines the throttle amount (defaults to requestAnimationFrame).\n */\nexport function createThrottle() {\n  const stack = new Set();\n  return async (key = '', cb, timeout = async () => {\n    await new Promise(requestAnimationFrame);\n  }) => {\n    if (!stack.has(key)) {\n      stack.add(key);\n      await timeout();\n      if (stack.has(key)) {\n        stack.delete(key);\n        cb();\n      }\n    }\n  };\n}\n/**\n * Parses an number in milliseconds from a css time value\n */\nexport function msFromTimeCSSValue(value) {\n  const match = value.trim().match(/([\\d.]+)(\\s*s$)?/);\n  const time = match === null || match === void 0 ? void 0 : match[1];\n  const seconds = match === null || match === void 0 ? void 0 : match[2];\n  return Number(time !== null && time !== void 0 ? time : 0) * (seconds ? 1000 : 1);\n}","map":{"version":3,"names":["EASING","STANDARD","STANDARD_ACCELERATE","STANDARD_DECELERATE","EMPHASIZED","EMPHASIZED_ACCELERATE","EMPHASIZED_DECELERATE","createAnimationSignal","animationAbortController","start","_animationAbortContro","abort","AbortController","signal","finish","createThrottle","stack","Set","key","cb","timeout","Promise","requestAnimationFrame","has","add","delete","msFromTimeCSSValue","value","match","trim","time","seconds","Number"],"sources":["animation.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Easing functions to use for web animations.\n *\n * **NOTE:** `EASING.EMPHASIZED` is approximated with unknown accuracy.\n *\n * TODO(b/241113345): replace with tokens\n */\nexport const EASING = {\n  STANDARD: 'cubic-bezier(0.2, 0, 0, 1)',\n  STANDARD_ACCELERATE: 'cubic-bezier(.3,0,1,1)',\n  STANDARD_DECELERATE: 'cubic-bezier(0,0,0,1)',\n  EMPHASIZED: 'cubic-bezier(.3,0,0,1)',\n  EMPHASIZED_ACCELERATE: 'cubic-bezier(.3,0,.8,.15)',\n  EMPHASIZED_DECELERATE: 'cubic-bezier(.05,.7,.1,1)',\n} as const;\n\n/**\n * A signal that is used for abortable tasks.\n */\nexport interface AnimationSignal {\n  /**\n   * Starts the abortable task. Any previous tasks started with this instance\n   * will be aborted.\n   *\n   * @return An `AbortSignal` for the current task.\n   */\n  start(): AbortSignal;\n  /**\n   * Complete the current task.\n   */\n  finish(): void;\n}\n\n/**\n * Creates an `AnimationSignal` that can be used to cancel a previous task.\n *\n * @example\n * class MyClass {\n *   private labelAnimationSignal = createAnimationSignal();\n *\n *   private async animateLabel() {\n *     // Start of the task. Previous tasks will be canceled.\n *     const signal = this.labelAnimationSignal.start();\n *\n *     // Do async work...\n *     if (signal.aborted) {\n *       // Use AbortSignal to check if a request was made to abort after some\n *       // asynchronous work.\n *       return;\n *     }\n *\n *     const animation = this.animate(...);\n *     // Add event listeners to be notified when the task should be canceled.\n *     signal.addEventListener('abort', () => {\n *       animation.cancel();\n *     });\n *\n *     animation.addEventListener('finish', () => {\n *       // Tell the signal that the current task is finished.\n *       this.labelAnimationSignal.finish();\n *     });\n *   }\n * }\n *\n * @return An `AnimationSignal`.\n */\nexport function createAnimationSignal(): AnimationSignal {\n  // The current animation's AbortController\n  let animationAbortController: AbortController | null = null;\n\n  return {\n    start() {\n      // Tell the previous animation to cancel.\n      animationAbortController?.abort();\n      // Set up a new AbortController for the current animation.\n      animationAbortController = new AbortController();\n      // Provide the AbortSignal so that the caller can check aborted status\n      // and add listeners.\n      return animationAbortController.signal;\n    },\n    finish() {\n      animationAbortController = null;\n    },\n  };\n}\n\n/**\n * Returns a function which can be used to throttle function calls\n * mapped to a key via a given function that should produce a promise that\n * determines the throttle amount (defaults to requestAnimationFrame).\n */\nexport function createThrottle() {\n  const stack = new Set();\n  return async (\n    key = '',\n    cb: (...args: unknown[]) => unknown,\n    timeout = async () => {\n      await new Promise(requestAnimationFrame);\n    },\n  ) => {\n    if (!stack.has(key)) {\n      stack.add(key);\n      await timeout();\n      if (stack.has(key)) {\n        stack.delete(key);\n        cb();\n      }\n    }\n  };\n}\n\n/**\n * Parses an number in milliseconds from a css time value\n */\nexport function msFromTimeCSSValue(value: string) {\n  const match = value.trim().match(/([\\d.]+)(\\s*s$)?/);\n  const time = match?.[1];\n  const seconds = match?.[2];\n  return Number(time ?? 0) * (seconds ? 1000 : 1);\n}\n"],"mappings":"AAAA;;;;;AAMA;;;;;;;AAOA,OAAO,MAAMA,MAAM,GAAG;EACpBC,QAAQ,EAAE,4BAA4B;EACtCC,mBAAmB,EAAE,wBAAwB;EAC7CC,mBAAmB,EAAE,uBAAuB;EAC5CC,UAAU,EAAE,wBAAwB;EACpCC,qBAAqB,EAAE,2BAA2B;EAClDC,qBAAqB,EAAE;CACf;AAmBV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA,OAAM,SAAUC,qBAAqBA,CAAA;EACnC;EACA,IAAIC,wBAAwB,GAA2B,IAAI;EAE3D,OAAO;IACLC,KAAKA,CAAA;MAAA,IAAAC,qBAAA;MACH;MACA,CAAAA,qBAAA,GAAAF,wBAAwB,cAAAE,qBAAA,eAAxBA,qBAAA,CAA0BC,KAAK,EAAE;MACjC;MACAH,wBAAwB,GAAG,IAAII,eAAe,EAAE;MAChD;MACA;MACA,OAAOJ,wBAAwB,CAACK,MAAM;IACxC,CAAC;IACDC,MAAMA,CAAA;MACJN,wBAAwB,GAAG,IAAI;IACjC;GACD;AACH;AAEA;;;;;AAKA,OAAM,SAAUO,cAAcA,CAAA;EAC5B,MAAMC,KAAK,GAAG,IAAIC,GAAG,EAAE;EACvB,OAAO,OACLC,GAAG,GAAG,EAAE,EACRC,EAAmC,EACnCC,OAAO,GAAG,MAAAA,CAAA,KAAW;IACnB,MAAM,IAAIC,OAAO,CAACC,qBAAqB,CAAC;EAC1C,CAAC,KACC;IACF,IAAI,CAACN,KAAK,CAACO,GAAG,CAACL,GAAG,CAAC,EAAE;MACnBF,KAAK,CAACQ,GAAG,CAACN,GAAG,CAAC;MACd,MAAME,OAAO,EAAE;MACf,IAAIJ,KAAK,CAACO,GAAG,CAACL,GAAG,CAAC,EAAE;QAClBF,KAAK,CAACS,MAAM,CAACP,GAAG,CAAC;QACjBC,EAAE,EAAE;;;EAGV,CAAC;AACH;AAEA;;;AAGA,OAAM,SAAUO,kBAAkBA,CAACC,KAAa;EAC9C,MAAMC,KAAK,GAAGD,KAAK,CAACE,IAAI,EAAE,CAACD,KAAK,CAAC,kBAAkB,CAAC;EACpD,MAAME,IAAI,GAAGF,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAG,CAAC,CAAC;EACvB,MAAMG,OAAO,GAAGH,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAG,CAAC,CAAC;EAC1B,OAAOI,MAAM,CAACF,IAAI,aAAJA,IAAI,cAAJA,IAAI,GAAI,CAAC,CAAC,IAAIC,OAAO,GAAG,IAAI,GAAG,CAAC,CAAC;AACjD"},"metadata":{},"sourceType":"module","externalDependencies":[]}