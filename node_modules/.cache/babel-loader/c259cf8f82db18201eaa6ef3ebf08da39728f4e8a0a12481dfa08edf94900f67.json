{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport { css, html, LitElement } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport \"../components/entity/state-info\";\nimport { computeUpdateStateDisplay } from \"../data/update\";\nimport { haStyle } from \"../resources/styles\";\nexport let StateCardUpdate = _decorate([customElement(\"state-card-update\")], function (_initialize, _LitElement) {\n  class StateCardUpdate extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: StateCardUpdate,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"stateObj\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"inDialog\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        return html`\n      <div class=\"horizontal justified layout\">\n        <state-info\n          .hass=${this.hass}\n          .stateObj=${this.stateObj}\n          .inDialog=${this.inDialog}\n        >\n        </state-info>\n        <div class=\"state\">\n          ${computeUpdateStateDisplay(this.stateObj, this.hass)}\n        </div>\n      </div>\n    `;\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [haStyle, css`\n        state-info {\n          flex: 0 1 fit-content;\n          min-width: 120px;\n        }\n        .state {\n          color: var(--primary-text-color);\n          margin-inline-start: 16px;\n          margin-inline-end: initial;\n          text-align: var(--float-end, right);\n          min-width: 50px;\n          flex: 0 1 fit-content;\n          word-break: break-word;\n          display: flex;\n          align-items: center;\n          justify-content: flex-end;\n        }\n      `];\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","customElement","property","computeUpdateStateDisplay","haStyle","StateCardUpdate","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","type","Boolean","render","hass","stateObj","inDialog","static","styles"],"sources":["/workspaces/frontend/src/state-summary/state-card-update.ts"],"sourcesContent":["import { css, CSSResultGroup, html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport \"../components/entity/state-info\";\nimport { computeUpdateStateDisplay, UpdateEntity } from \"../data/update\";\nimport { haStyle } from \"../resources/styles\";\nimport type { HomeAssistant } from \"../types\";\n\n@customElement(\"state-card-update\")\nexport class StateCardUpdate extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public stateObj!: UpdateEntity;\n\n  @property({ type: Boolean }) public inDialog = false;\n\n  protected render(): TemplateResult {\n    return html`\n      <div class=\"horizontal justified layout\">\n        <state-info\n          .hass=${this.hass}\n          .stateObj=${this.stateObj}\n          .inDialog=${this.inDialog}\n        >\n        </state-info>\n        <div class=\"state\">\n          ${computeUpdateStateDisplay(this.stateObj, this.hass)}\n        </div>\n      </div>\n    `;\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyle,\n      css`\n        state-info {\n          flex: 0 1 fit-content;\n          min-width: 120px;\n        }\n        .state {\n          color: var(--primary-text-color);\n          margin-inline-start: 16px;\n          margin-inline-end: initial;\n          text-align: var(--float-end, right);\n          min-width: 50px;\n          flex: 0 1 fit-content;\n          word-break: break-word;\n          display: flex;\n          align-items: center;\n          justify-content: flex-end;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"state-card-update\": StateCardUpdate;\n  }\n}\n"],"mappings":";AAAA,SAASA,GAAG,EAAkBC,IAAI,EAAEC,UAAU,QAAwB,KAAK;AAC3E,SAASC,aAAa,EAAEC,QAAQ,QAAQ,gBAAgB;AACxD,OAAO,iCAAiC;AACxC,SAASC,yBAAyB,QAAsB,gBAAgB;AACxE,SAASC,OAAO,QAAQ,qBAAqB;AAG7C,WACaC,eAAe,GAAAC,SAAA,EAD3BL,aAAa,CAAC,mBAAmB,CAAC,aAAAM,WAAA,EAAAC,WAAA;EAAnC,MACaH,eAAe,SAAAG,WAAA,CAAoB;IAAAC,YAAA,GAAAC,IAAA;MAAA,SAAAA,IAAA;MAAAH,WAAA;IAAA;EA8ChD;EAAC;IAAAI,CAAA,EA9CYN,eAAe;IAAAO,CAAA;MAAAC,IAAA;MAAAC,UAAA,GACzBZ,QAAQ,CAAC;QAAEa,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAC,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAE9BZ,QAAQ,CAAC;QAAEa,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAC,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAE9BZ,QAAQ,CAAC;QAAEgB,IAAI,EAAEC;MAAQ,CAAC,CAAC;MAAAH,GAAA;MAAAC,MAAA;QAAA,OAAmB,KAAK;MAAA;IAAA;MAAAJ,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAEpD,SAAAG,OAAA,EAAmC;QACjC,OAAOrB,IAAK;AAChB;AACA;AACA,kBAAkB,IAAI,CAACsB,IAAK;AAC5B,sBAAsB,IAAI,CAACC,QAAS;AACpC,sBAAsB,IAAI,CAACC,QAAS;AACpC;AACA;AACA;AACA,YAAYpB,yBAAyB,CAAC,IAAI,CAACmB,QAAQ,EAAE,IAAI,CAACD,IAAI,CAAE;AAChE;AACA;AACA,KAAK;MACH;IAAC;MAAAR,IAAA;MAAAW,MAAA;MAAAR,GAAA;MAAAC,KAAA,EAED,SAAAQ,OAAA,EAAoC;QAClC,OAAO,CACLrB,OAAO,EACPN,GAAI;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,CACF;MACH;IAAC;EAAA;AAAA,GA7CkCE,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}