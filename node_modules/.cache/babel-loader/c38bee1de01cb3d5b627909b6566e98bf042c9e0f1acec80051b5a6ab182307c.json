{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport { ResizeController } from \"@lit-labs/observers/resize-controller\";\nimport \"@material/mwc-list\";\nconst mdiChevronDown = \"M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z\";\nconst mdiPlus = \"M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z\";\nconst mdiRefresh = \"M17.65,6.35C16.2,4.9 14.21,4 12,4A8,8 0 0,0 4,12A8,8 0 0,0 12,20C15.73,20 18.84,17.45 19.73,14H17.65C16.83,16.33 14.61,18 12,18A6,6 0 0,1 6,12A6,6 0 0,1 12,6C13.66,6 15.14,6.69 16.22,7.78L13,11H20V4L17.65,6.35Z\";\nimport { LitElement, css, html, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { styleMap } from \"lit/directives/style-map\";\nimport { storage } from \"../../common/decorators/storage\";\nimport { computeStateName } from \"../../common/entity/compute_state_name\";\nimport \"../../components/ha-button\";\nimport \"../../components/ha-button-menu\";\nimport \"../../components/ha-card\";\nimport \"../../components/ha-check-list-item\";\nimport \"../../components/ha-icon-button\";\nimport \"../../components/ha-menu-button\";\nimport \"../../components/ha-state-icon\";\nimport \"../../components/ha-svg-icon\";\nimport \"../../components/ha-two-pane-top-app-bar-fixed\";\nimport { fetchCalendarEvents, getCalendars } from \"../../data/calendar\";\nimport { fetchIntegrationManifest } from \"../../data/integration\";\nimport { showConfigFlowDialog } from \"../../dialogs/config-flow/show-dialog-config-flow\";\nimport { haStyle } from \"../../resources/styles\";\nimport \"./ha-full-calendar\";\nlet PanelCalendar = _decorate([customElement(\"ha-panel-calendar\")], function (_initialize, _LitElement) {\n  class PanelCalendar extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: PanelCalendar,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        reflect: true\n      })],\n      key: \"narrow\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        reflect: true\n      })],\n      key: \"mobile\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_calendars\",\n      value() {\n        return [];\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_events\",\n      value() {\n        return [];\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_error\",\n      value() {\n        return undefined;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [storage({\n        key: \"deSelectedCalendars\",\n        state: true\n      })],\n      key: \"_deSelectedCalendars\",\n      value() {\n        return [];\n      }\n    }, {\n      kind: \"field\",\n      key: \"_start\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_end\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_showPaneController\",\n      value() {\n        return new ResizeController(this, {\n          callback: entries => {\n            var _entries$;\n            return ((_entries$ = entries[0]) === null || _entries$ === void 0 ? void 0 : _entries$.contentRect.width) > 750;\n          }\n        });\n      }\n    }, {\n      kind: \"field\",\n      key: \"_mql\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_headerHeight\",\n      value() {\n        return 56;\n      }\n    }, {\n      kind: \"method\",\n      key: \"connectedCallback\",\n      value: function connectedCallback() {\n        _get(_getPrototypeOf(PanelCalendar.prototype), \"connectedCallback\", this).call(this);\n        this._mql = window.matchMedia(\"(max-width: 450px), all and (max-height: 500px)\");\n        this._mql.addListener(this._setIsMobile);\n        this.mobile = this._mql.matches;\n        const computedStyles = getComputedStyle(this);\n        this._headerHeight = Number(computedStyles.getPropertyValue(\"--header-height\").replace(\"px\", \"\"));\n      }\n    }, {\n      kind: \"method\",\n      key: \"disconnectedCallback\",\n      value: function disconnectedCallback() {\n        var _this$_mql;\n        _get(_getPrototypeOf(PanelCalendar.prototype), \"disconnectedCallback\", this).call(this);\n        (_this$_mql = this._mql) === null || _this$_mql === void 0 || _this$_mql.removeListener(this._setIsMobile);\n        this._mql = undefined;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_setIsMobile\",\n      value() {\n        return ev => {\n          this.mobile = ev.matches;\n        };\n      }\n    }, {\n      kind: \"method\",\n      key: \"willUpdate\",\n      value: function willUpdate(changedProps) {\n        _get(_getPrototypeOf(PanelCalendar.prototype), \"willUpdate\", this).call(this, changedProps);\n        if (!this.hasUpdated) {\n          this._calendars = getCalendars(this.hass);\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var _this$_showPaneContro, _this$hass$user, _this$hass$user2;\n        const calendarItems = this._calendars.map(selCal => html`\n        <ha-check-list-item\n          @request-selected=${this._requestSelected}\n          graphic=\"icon\"\n          style=${styleMap({\n          \"--mdc-theme-secondary\": selCal.backgroundColor\n        })}\n          .value=${selCal.entity_id}\n          .selected=${!this._deSelectedCalendars.includes(selCal.entity_id)}\n        >\n          <ha-state-icon\n            slot=\"graphic\"\n            .hass=${this.hass}\n            .stateObj=${selCal}\n          ></ha-state-icon>\n          ${selCal.name}\n        </ha-check-list-item>\n      `);\n        const showPane = (_this$_showPaneContro = this._showPaneController.value) !== null && _this$_showPaneContro !== void 0 ? _this$_showPaneContro : !this.narrow;\n        return html`\n      <ha-two-pane-top-app-bar-fixed .pane=${showPane} footer>\n        <ha-menu-button\n          slot=\"navigationIcon\"\n          .hass=${this.hass}\n          .narrow=${this.narrow}\n        ></ha-menu-button>\n\n        ${!showPane ? html`<ha-button-menu\n              slot=\"title\"\n              class=\"lists\"\n              multi\n              fixed\n              .noAnchor=${this.mobile}\n              .y=${this.mobile ? this._headerHeight / 2 : this._headerHeight / 4}\n              .x=${this.mobile ? 0 : undefined}\n            >\n              <ha-button slot=\"trigger\">\n                ${this.hass.localize(\"ui.components.calendar.my_calendars\")}\n                <ha-svg-icon\n                  slot=\"trailingIcon\"\n                  .path=${mdiChevronDown}\n                ></ha-svg-icon>\n              </ha-button>\n              ${calendarItems}\n              ${(_this$hass$user = this.hass.user) !== null && _this$hass$user !== void 0 && _this$hass$user.is_admin ? html` <li divider role=\"separator\"></li>\n                    <ha-list-item graphic=\"icon\" @click=${this._addCalendar}>\n                      <ha-svg-icon\n                        .path=${mdiPlus}\n                        slot=\"graphic\"\n                      ></ha-svg-icon>\n                      ${this.hass.localize(\"ui.components.calendar.create_calendar\")}\n                    </ha-list-item>` : nothing}\n            </ha-button-menu>` : html`<div slot=\"title\">\n              ${this.hass.localize(\"ui.components.calendar.my_calendars\")}\n            </div>`}\n        <ha-icon-button\n          slot=\"actionItems\"\n          .path=${mdiRefresh}\n          .label=${this.hass.localize(\"ui.common.refresh\")}\n          @click=${this._handleRefresh}\n        ></ha-icon-button>\n        ${showPane && (_this$hass$user2 = this.hass.user) !== null && _this$hass$user2 !== void 0 && _this$hass$user2.is_admin ? html`<mwc-list slot=\"pane\" multi}>${calendarItems}</mwc-list>\n              <ha-list-item\n                graphic=\"icon\"\n                slot=\"pane-footer\"\n                @click=${this._addCalendar}\n              >\n                <ha-svg-icon .path=${mdiPlus} slot=\"graphic\"></ha-svg-icon>\n                ${this.hass.localize(\"ui.components.calendar.create_calendar\")}\n              </ha-list-item>` : nothing}\n        <ha-full-calendar\n          .events=${this._events}\n          .calendars=${this._calendars}\n          .narrow=${this.narrow}\n          .initialView=${this.narrow ? \"listWeek\" : \"dayGridMonth\"}\n          .hass=${this.hass}\n          .error=${this._error}\n          @view-changed=${this._handleViewChanged}\n        ></ha-full-calendar>\n      </ha-two-pane-top-app-bar-fixed>\n    `;\n      }\n    }, {\n      kind: \"get\",\n      key: \"_selectedCalendars\",\n      value: function _selectedCalendars() {\n        return this._calendars.filter(selCal => !this._deSelectedCalendars.includes(selCal.entity_id)).map(cal => cal);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_fetchEvents\",\n      value: async function _fetchEvents(start, end, calendars) {\n        if (!calendars.length || !start || !end) {\n          return {\n            events: [],\n            errors: []\n          };\n        }\n        return fetchCalendarEvents(this.hass, start, end, calendars);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_requestSelected\",\n      value: async function _requestSelected(ev) {\n        ev.stopPropagation();\n        const entityId = ev.target.value;\n        if (ev.detail.selected) {\n          this._deSelectedCalendars = this._deSelectedCalendars.filter(cal => cal !== entityId);\n          if (ev.detail.source === \"interaction\") {\n            // prevent adding the same calendar twice, an interaction event will be followed by a property event\n            return;\n          }\n          const calendar = this._calendars.find(cal => cal.entity_id === entityId);\n          if (!calendar) {\n            return;\n          }\n          const result = await this._fetchEvents(this._start, this._end, [calendar]);\n          this._events = [...this._events, ...result.events];\n          this._handleErrors(result.errors);\n        } else {\n          this._deSelectedCalendars = [...this._deSelectedCalendars, entityId];\n          this._events = this._events.filter(event => event.calendar !== entityId);\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_addCalendar\",\n      value: async function _addCalendar() {\n        var _this$hass$userData;\n        showConfigFlowDialog(this, {\n          startFlowHandler: \"local_calendar\",\n          showAdvanced: (_this$hass$userData = this.hass.userData) === null || _this$hass$userData === void 0 ? void 0 : _this$hass$userData.showAdvanced,\n          manifest: await fetchIntegrationManifest(this.hass, \"local_calendar\"),\n          dialogClosedCallback: ({\n            flowFinished\n          }) => {\n            if (flowFinished) {\n              this._calendars = getCalendars(this.hass);\n            }\n          }\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleViewChanged\",\n      value: async function _handleViewChanged(ev) {\n        this._start = ev.detail.start;\n        this._end = ev.detail.end;\n        const result = await this._fetchEvents(this._start, this._end, this._selectedCalendars);\n        this._events = result.events;\n        this._handleErrors(result.errors);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleRefresh\",\n      value: async function _handleRefresh() {\n        const result = await this._fetchEvents(this._start, this._end, this._selectedCalendars);\n        this._events = result.events;\n        this._handleErrors(result.errors);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleErrors\",\n      value: function _handleErrors(error_entity_ids) {\n        this._error = undefined;\n        if (error_entity_ids.length > 0) {\n          const nameList = error_entity_ids.map(error_entity_id => this.hass.states[error_entity_id] ? computeStateName(this.hass.states[error_entity_id]) : error_entity_id).join(\", \");\n          this._error = `${this.hass.localize(\"ui.components.calendar.event_retrieval_error\")} ${nameList}`;\n        }\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [haStyle, css`\n        :host {\n          display: block;\n        }\n        ha-full-calendar {\n          height: calc(100vh - var(--header-height));\n          --calendar-header-padding: 12px;\n          --calendar-border-radius: 0;\n          --calendar-border-width: 1px 0;\n        }\n        ha-button-menu ha-button {\n          --mdc-theme-primary: currentColor;\n          --mdc-typography-button-text-transform: none;\n          --mdc-typography-button-font-size: var(\n            --mdc-typography-headline6-font-size,\n            1.25rem\n          );\n          --mdc-typography-button-font-weight: var(\n            --mdc-typography-headline6-font-weight,\n            500\n          );\n          --mdc-typography-button-letter-spacing: var(\n            --mdc-typography-headline6-letter-spacing,\n            0.0125em\n          );\n          --mdc-typography-button-line-height: var(\n            --mdc-typography-headline6-line-height,\n            2rem\n          );\n          --button-height: 40px;\n        }\n        :host([mobile]) .lists {\n          --mdc-menu-min-width: 100vw;\n        }\n        :host([mobile]) ha-button-menu {\n          --mdc-shape-medium: 0 0 var(--mdc-shape-medium)\n            var(--mdc-shape-medium);\n        }\n      `];\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["ResizeController","mdiChevronDown","mdiPlus","mdiRefresh","LitElement","css","html","nothing","customElement","property","state","styleMap","storage","computeStateName","fetchCalendarEvents","getCalendars","fetchIntegrationManifest","showConfigFlowDialog","haStyle","PanelCalendar","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","type","Boolean","reflect","undefined","callback","entries","_entries$","contentRect","width","connectedCallback","_get","_getPrototypeOf","prototype","call","_mql","window","matchMedia","addListener","_setIsMobile","mobile","matches","computedStyles","getComputedStyle","_headerHeight","Number","getPropertyValue","replace","disconnectedCallback","_this$_mql","removeListener","ev","willUpdate","changedProps","hasUpdated","_calendars","hass","render","_this$_showPaneContro","_this$hass$user","_this$hass$user2","calendarItems","map","selCal","_requestSelected","backgroundColor","entity_id","_deSelectedCalendars","includes","name","showPane","_showPaneController","narrow","localize","user","is_admin","_addCalendar","_handleRefresh","_events","_error","_handleViewChanged","_selectedCalendars","filter","cal","_fetchEvents","start","end","calendars","length","events","errors","stopPropagation","entityId","target","detail","selected","source","calendar","find","result","_start","_end","_handleErrors","event","_this$hass$userData","startFlowHandler","showAdvanced","userData","manifest","dialogClosedCallback","flowFinished","error_entity_ids","nameList","error_entity_id","states","join","static","styles"],"sources":["/workspaces/frontend/src/panels/calendar/ha-panel-calendar.ts"],"sourcesContent":["import { ResizeController } from \"@lit-labs/observers/resize-controller\";\nimport \"@material/mwc-list\";\nimport type { RequestSelectedDetail } from \"@material/mwc-list/mwc-list-item\";\nimport { mdiChevronDown, mdiPlus, mdiRefresh } from \"@mdi/js\";\nimport {\n  CSSResultGroup,\n  LitElement,\n  PropertyValues,\n  TemplateResult,\n  css,\n  html,\n  nothing,\n} from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { styleMap } from \"lit/directives/style-map\";\nimport { storage } from \"../../common/decorators/storage\";\nimport { HASSDomEvent } from \"../../common/dom/fire_event\";\nimport { computeStateName } from \"../../common/entity/compute_state_name\";\nimport \"../../components/ha-button\";\nimport \"../../components/ha-button-menu\";\nimport \"../../components/ha-card\";\nimport \"../../components/ha-check-list-item\";\nimport \"../../components/ha-icon-button\";\nimport type { HaListItem } from \"../../components/ha-list-item\";\nimport \"../../components/ha-menu-button\";\nimport \"../../components/ha-state-icon\";\nimport \"../../components/ha-svg-icon\";\nimport \"../../components/ha-two-pane-top-app-bar-fixed\";\nimport {\n  Calendar,\n  CalendarEvent,\n  fetchCalendarEvents,\n  getCalendars,\n} from \"../../data/calendar\";\nimport { fetchIntegrationManifest } from \"../../data/integration\";\nimport { showConfigFlowDialog } from \"../../dialogs/config-flow/show-dialog-config-flow\";\nimport { haStyle } from \"../../resources/styles\";\nimport type { CalendarViewChanged, HomeAssistant } from \"../../types\";\nimport \"./ha-full-calendar\";\n\n@customElement(\"ha-panel-calendar\")\nclass PanelCalendar extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ type: Boolean, reflect: true }) public narrow = false;\n\n  @property({ type: Boolean, reflect: true }) public mobile = false;\n\n  @state() private _calendars: Calendar[] = [];\n\n  @state() private _events: CalendarEvent[] = [];\n\n  @state() private _error?: string = undefined;\n\n  @storage({\n    key: \"deSelectedCalendars\",\n    state: true,\n  })\n  private _deSelectedCalendars: string[] = [];\n\n  private _start?: Date;\n\n  private _end?: Date;\n\n  private _showPaneController = new ResizeController(this, {\n    callback: (entries) => entries[0]?.contentRect.width > 750,\n  });\n\n  private _mql?: MediaQueryList;\n\n  private _headerHeight = 56;\n\n  public connectedCallback() {\n    super.connectedCallback();\n    this._mql = window.matchMedia(\n      \"(max-width: 450px), all and (max-height: 500px)\"\n    );\n    this._mql.addListener(this._setIsMobile);\n    this.mobile = this._mql.matches;\n    const computedStyles = getComputedStyle(this);\n    this._headerHeight = Number(\n      computedStyles.getPropertyValue(\"--header-height\").replace(\"px\", \"\")\n    );\n  }\n\n  public disconnectedCallback() {\n    super.disconnectedCallback();\n    this._mql?.removeListener(this._setIsMobile!);\n    this._mql = undefined;\n  }\n\n  private _setIsMobile = (ev: MediaQueryListEvent) => {\n    this.mobile = ev.matches;\n  };\n\n  public willUpdate(changedProps: PropertyValues): void {\n    super.willUpdate(changedProps);\n    if (!this.hasUpdated) {\n      this._calendars = getCalendars(this.hass);\n    }\n  }\n\n  protected render(): TemplateResult {\n    const calendarItems = this._calendars.map(\n      (selCal) => html`\n        <ha-check-list-item\n          @request-selected=${this._requestSelected}\n          graphic=\"icon\"\n          style=${styleMap({\n            \"--mdc-theme-secondary\": selCal.backgroundColor!,\n          })}\n          .value=${selCal.entity_id}\n          .selected=${!this._deSelectedCalendars.includes(selCal.entity_id)}\n        >\n          <ha-state-icon\n            slot=\"graphic\"\n            .hass=${this.hass}\n            .stateObj=${selCal}\n          ></ha-state-icon>\n          ${selCal.name}\n        </ha-check-list-item>\n      `\n    );\n    const showPane = this._showPaneController.value ?? !this.narrow;\n    return html`\n      <ha-two-pane-top-app-bar-fixed .pane=${showPane} footer>\n        <ha-menu-button\n          slot=\"navigationIcon\"\n          .hass=${this.hass}\n          .narrow=${this.narrow}\n        ></ha-menu-button>\n\n        ${!showPane\n          ? html`<ha-button-menu\n              slot=\"title\"\n              class=\"lists\"\n              multi\n              fixed\n              .noAnchor=${this.mobile}\n              .y=${this.mobile\n                ? this._headerHeight / 2\n                : this._headerHeight / 4}\n              .x=${this.mobile ? 0 : undefined}\n            >\n              <ha-button slot=\"trigger\">\n                ${this.hass.localize(\"ui.components.calendar.my_calendars\")}\n                <ha-svg-icon\n                  slot=\"trailingIcon\"\n                  .path=${mdiChevronDown}\n                ></ha-svg-icon>\n              </ha-button>\n              ${calendarItems}\n              ${this.hass.user?.is_admin\n                ? html` <li divider role=\"separator\"></li>\n                    <ha-list-item graphic=\"icon\" @click=${this._addCalendar}>\n                      <ha-svg-icon\n                        .path=${mdiPlus}\n                        slot=\"graphic\"\n                      ></ha-svg-icon>\n                      ${this.hass.localize(\n                        \"ui.components.calendar.create_calendar\"\n                      )}\n                    </ha-list-item>`\n                : nothing}\n            </ha-button-menu>`\n          : html`<div slot=\"title\">\n              ${this.hass.localize(\"ui.components.calendar.my_calendars\")}\n            </div>`}\n        <ha-icon-button\n          slot=\"actionItems\"\n          .path=${mdiRefresh}\n          .label=${this.hass.localize(\"ui.common.refresh\")}\n          @click=${this._handleRefresh}\n        ></ha-icon-button>\n        ${showPane && this.hass.user?.is_admin\n          ? html`<mwc-list slot=\"pane\" multi}>${calendarItems}</mwc-list>\n              <ha-list-item\n                graphic=\"icon\"\n                slot=\"pane-footer\"\n                @click=${this._addCalendar}\n              >\n                <ha-svg-icon .path=${mdiPlus} slot=\"graphic\"></ha-svg-icon>\n                ${this.hass.localize(\"ui.components.calendar.create_calendar\")}\n              </ha-list-item>`\n          : nothing}\n        <ha-full-calendar\n          .events=${this._events}\n          .calendars=${this._calendars}\n          .narrow=${this.narrow}\n          .initialView=${this.narrow ? \"listWeek\" : \"dayGridMonth\"}\n          .hass=${this.hass}\n          .error=${this._error}\n          @view-changed=${this._handleViewChanged}\n        ></ha-full-calendar>\n      </ha-two-pane-top-app-bar-fixed>\n    `;\n  }\n\n  private get _selectedCalendars(): Calendar[] {\n    return this._calendars\n      .filter((selCal) => !this._deSelectedCalendars.includes(selCal.entity_id))\n      .map((cal) => cal);\n  }\n\n  private async _fetchEvents(\n    start: Date | undefined,\n    end: Date | undefined,\n    calendars: Calendar[]\n  ): Promise<{ events: CalendarEvent[]; errors: string[] }> {\n    if (!calendars.length || !start || !end) {\n      return { events: [], errors: [] };\n    }\n\n    return fetchCalendarEvents(this.hass, start, end, calendars);\n  }\n\n  private async _requestSelected(ev: CustomEvent<RequestSelectedDetail>) {\n    ev.stopPropagation();\n    const entityId = (ev.target as HaListItem).value;\n    if (ev.detail.selected) {\n      this._deSelectedCalendars = this._deSelectedCalendars.filter(\n        (cal) => cal !== entityId\n      );\n      if (ev.detail.source === \"interaction\") {\n        // prevent adding the same calendar twice, an interaction event will be followed by a property event\n        return;\n      }\n      const calendar = this._calendars.find(\n        (cal) => cal.entity_id === entityId\n      );\n      if (!calendar) {\n        return;\n      }\n      const result = await this._fetchEvents(this._start, this._end, [\n        calendar,\n      ]);\n      this._events = [...this._events, ...result.events];\n      this._handleErrors(result.errors);\n    } else {\n      this._deSelectedCalendars = [...this._deSelectedCalendars, entityId];\n      this._events = this._events.filter(\n        (event) => event.calendar !== entityId\n      );\n    }\n  }\n\n  private async _addCalendar(): Promise<void> {\n    showConfigFlowDialog(this, {\n      startFlowHandler: \"local_calendar\",\n      showAdvanced: this.hass.userData?.showAdvanced,\n      manifest: await fetchIntegrationManifest(this.hass, \"local_calendar\"),\n      dialogClosedCallback: ({ flowFinished }) => {\n        if (flowFinished) {\n          this._calendars = getCalendars(this.hass);\n        }\n      },\n    });\n  }\n\n  private async _handleViewChanged(\n    ev: HASSDomEvent<CalendarViewChanged>\n  ): Promise<void> {\n    this._start = ev.detail.start;\n    this._end = ev.detail.end;\n    const result = await this._fetchEvents(\n      this._start,\n      this._end,\n      this._selectedCalendars\n    );\n    this._events = result.events;\n    this._handleErrors(result.errors);\n  }\n\n  private async _handleRefresh(): Promise<void> {\n    const result = await this._fetchEvents(\n      this._start,\n      this._end,\n      this._selectedCalendars\n    );\n    this._events = result.events;\n    this._handleErrors(result.errors);\n  }\n\n  private _handleErrors(error_entity_ids: string[]) {\n    this._error = undefined;\n    if (error_entity_ids.length > 0) {\n      const nameList = error_entity_ids\n        .map((error_entity_id) =>\n          this.hass!.states[error_entity_id]\n            ? computeStateName(this.hass!.states[error_entity_id])\n            : error_entity_id\n        )\n        .join(\", \");\n\n      this._error = `${this.hass!.localize(\n        \"ui.components.calendar.event_retrieval_error\"\n      )} ${nameList}`;\n    }\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyle,\n      css`\n        :host {\n          display: block;\n        }\n        ha-full-calendar {\n          height: calc(100vh - var(--header-height));\n          --calendar-header-padding: 12px;\n          --calendar-border-radius: 0;\n          --calendar-border-width: 1px 0;\n        }\n        ha-button-menu ha-button {\n          --mdc-theme-primary: currentColor;\n          --mdc-typography-button-text-transform: none;\n          --mdc-typography-button-font-size: var(\n            --mdc-typography-headline6-font-size,\n            1.25rem\n          );\n          --mdc-typography-button-font-weight: var(\n            --mdc-typography-headline6-font-weight,\n            500\n          );\n          --mdc-typography-button-letter-spacing: var(\n            --mdc-typography-headline6-letter-spacing,\n            0.0125em\n          );\n          --mdc-typography-button-line-height: var(\n            --mdc-typography-headline6-line-height,\n            2rem\n          );\n          --button-height: 40px;\n        }\n        :host([mobile]) .lists {\n          --mdc-menu-min-width: 100vw;\n        }\n        :host([mobile]) ha-button-menu {\n          --mdc-shape-medium: 0 0 var(--mdc-shape-medium)\n            var(--mdc-shape-medium);\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-panel-calendar\": PanelCalendar;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}