{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport \"@material/mwc-button\";\nconst mdiContentCopy = \"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\";\nconst mdiContentCut = \"M19,3L13,9L15,11L22,4V3M12,12.5A0.5,0.5 0 0,1 11.5,12A0.5,0.5 0 0,1 12,11.5A0.5,0.5 0 0,1 12.5,12A0.5,0.5 0 0,1 12,12.5M6,20A2,2 0 0,1 4,18C4,16.89 4.9,16 6,16A2,2 0 0,1 8,18C8,19.11 7.1,20 6,20M6,8A2,2 0 0,1 4,6C4,4.89 4.9,4 6,4A2,2 0 0,1 8,6C8,7.11 7.1,8 6,8M9.64,7.64C9.87,7.14 10,6.59 10,6A4,4 0 0,0 6,2A4,4 0 0,0 2,6A4,4 0 0,0 6,10C6.59,10 7.14,9.87 7.64,9.64L10,12L7.64,14.36C7.14,14.13 6.59,14 6,14A4,4 0 0,0 2,18A4,4 0 0,0 6,22A4,4 0 0,0 10,18C10,17.41 9.87,16.86 9.64,16.36L12,14L19,21H22V20L9.64,7.64Z\";\nconst mdiContentDuplicate = \"M11,17H4A2,2 0 0,1 2,15V3A2,2 0 0,1 4,1H16V3H4V15H11V13L15,16L11,19V17M19,21V7H8V13H6V7A2,2 0 0,1 8,5H19A2,2 0 0,1 21,7V21A2,2 0 0,1 19,23H8A2,2 0 0,1 6,21V19H8V21H19Z\";\nconst mdiDelete = \"M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z\";\nconst mdiDotsVertical = \"M12,16A2,2 0 0,1 14,18A2,2 0 0,1 12,20A2,2 0 0,1 10,18A2,2 0 0,1 12,16M12,10A2,2 0 0,1 14,12A2,2 0 0,1 12,14A2,2 0 0,1 10,12A2,2 0 0,1 12,10M12,4A2,2 0 0,1 14,6A2,2 0 0,1 12,8A2,2 0 0,1 10,6A2,2 0 0,1 12,4Z\";\nconst mdiFileMoveOutline = \"M14 2H6C4.9 2 4 2.9 4 4V20C4 20.41 4.12 20.8 4.34 21.12C4.41 21.23 4.5 21.33 4.59 21.41C4.95 21.78 5.45 22 6 22H13.53C13 21.42 12.61 20.75 12.35 20H6V4H13V9H18V12C18.7 12 19.37 12.12 20 12.34V8L14 2M18 23L23 18.5L20 15.8L18 14V17H14V20H18V23Z\";\nconst mdiMinus = \"M19,13H5V11H19V13Z\";\nconst mdiPlus = \"M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z\";\nimport deepClone from \"deep-clone-simple\";\nimport { LitElement, css, html, nothing } from \"lit\";\nimport { customElement, property, queryAssignedNodes } from \"lit/decorators\";\nimport { storage } from \"../../../common/decorators/storage\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport \"../../../components/ha-button-menu\";\nimport \"../../../components/ha-icon-button\";\nimport \"../../../components/ha-list-item\";\nimport { saveConfig } from \"../../../data/lovelace/config/types\";\nimport { showAlertDialog, showPromptDialog } from \"../../../dialogs/generic/show-dialog-box\";\nimport { haStyle } from \"../../../resources/styles\";\nimport { showSaveSuccessToast } from \"../../../util/toast-saved-success\";\nimport { computeCardSize } from \"../common/compute-card-size\";\nimport { showEditCardDialog } from \"../editor/card-editor/show-edit-card-dialog\";\nimport { addCard, deleteCard, moveCard, moveCardToPosition, swapCard } from \"../editor/config-util\";\nimport { showSelectViewDialog } from \"../editor/select-view/show-select-view-dialog\";\nexport let HuiCardOptions = _decorate([customElement(\"hui-card-options\")], function (_initialize, _LitElement) {\n  class HuiCardOptions extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HuiCardOptions,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"lovelace\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Array\n      })],\n      key: \"path\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [queryAssignedNodes()],\n      key: \"_assignedNodes\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"hidePosition\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [storage({\n        key: \"lovelaceClipboard\",\n        state: false,\n        subscribe: false,\n        storage: \"sessionStorage\"\n      })],\n      key: \"_clipboard\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"getCardSize\",\n      value: function getCardSize() {\n        return this._assignedNodes ? computeCardSize(this._assignedNodes[0]) : 1;\n      }\n    }, {\n      kind: \"method\",\n      key: \"updated\",\n      value: function updated(changedProps) {\n        if (!changedProps.has(\"path\") || !this.path) {\n          return;\n        }\n        this.classList.toggle(\"panel\", this.lovelace.config.views[this.path[0]].panel);\n      }\n    }, {\n      kind: \"get\",\n      key: \"_currentView\",\n      value: function _currentView() {\n        return this.lovelace.config.views[this.path[0]];\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        return html`\n      <div class=\"card\"><slot></slot></div>\n      <ha-card>\n        <div class=\"card-actions\">\n          <mwc-button @click=${this._editCard}\n            >${this.hass.localize(\"ui.panel.lovelace.editor.edit_card.edit\")}</mwc-button\n          >\n          <div class=\"right\">\n            <slot name=\"buttons\"></slot>\n            ${!this.hidePosition ? html`\n                  <ha-icon-button\n                    .label=${this.hass.localize(\"ui.panel.lovelace.editor.edit_card.decrease_position\")}\n                    .path=${mdiMinus}\n                    class=\"move-arrow\"\n                    @click=${this._decreaseCardPosiion}\n                    ?disabled=${this.path[1] === 0}\n                  ></ha-icon-button>\n                  <ha-icon-button\n                    @click=${this._changeCardPosition}\n                    .label=${this.hass.localize(\"ui.panel.lovelace.editor.edit_card.change_position\")}\n                  >\n                    <div class=\"position-badge\">${this.path[1] + 1}</div>\n                  </ha-icon-button>\n                  <ha-icon-button\n                    .label=${this.hass.localize(\"ui.panel.lovelace.editor.edit_card.increase_position\")}\n                    .path=${mdiPlus}\n                    class=\"move-arrow\"\n                    @click=${this._increaseCardPosition}\n                    .disabled=${this._currentView.cards.length === this.path[1] + 1}\n                  ></ha-icon-button>\n                ` : nothing}\n            <ha-button-menu @action=${this._handleAction}>\n              <ha-icon-button\n                slot=\"trigger\"\n                .label=${this.hass.localize(\"ui.panel.lovelace.editor.edit_card.options\")}\n                .path=${mdiDotsVertical}\n              ></ha-icon-button>\n              <ha-list-item graphic=\"icon\">\n                <ha-svg-icon\n                  slot=\"graphic\"\n                  .path=${mdiFileMoveOutline}\n                ></ha-svg-icon>\n                ${this.hass.localize(\"ui.panel.lovelace.editor.edit_card.move\")}\n              </ha-list-item>\n              <ha-list-item graphic=\"icon\">\n                <ha-svg-icon\n                  slot=\"graphic\"\n                  .path=${mdiContentDuplicate}\n                ></ha-svg-icon>\n                ${this.hass.localize(\"ui.panel.lovelace.editor.edit_card.duplicate\")}\n              </ha-list-item>\n              <ha-list-item graphic=\"icon\">\n                <ha-svg-icon\n                  slot=\"graphic\"\n                  .path=${mdiContentCopy}\n                ></ha-svg-icon>\n                ${this.hass.localize(\"ui.panel.lovelace.editor.edit_card.copy\")}\n              </ha-list-item>\n              <ha-list-item graphic=\"icon\">\n                <ha-svg-icon\n                  slot=\"graphic\"\n                  .path=${mdiContentCut}\n                ></ha-svg-icon>\n                ${this.hass.localize(\"ui.panel.lovelace.editor.edit_card.cut\")}\n              </ha-list-item>\n              <li divider role=\"separator\"></li>\n              <ha-list-item class=\"warning\" graphic=\"icon\">\n                <ha-svg-icon\n                  class=\"warning\"\n                  slot=\"graphic\"\n                  .path=${mdiDelete}\n                ></ha-svg-icon>\n                ${this.hass.localize(\"ui.panel.lovelace.editor.edit_card.delete\")}\n              </ha-list-item>\n            </ha-button-menu>\n          </div>\n        </div>\n      </ha-card>\n    `;\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [haStyle, css`\n        :host(:hover) {\n          outline: 2px solid var(--primary-color);\n        }\n\n        :host(:not(.panel)) ::slotted(*) {\n          display: block;\n        }\n\n        :host(.panel) .card {\n          height: calc(100% - 59px);\n        }\n\n        ha-card {\n          border-top-right-radius: 0;\n          border-top-left-radius: 0;\n        }\n\n        .card-actions {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n        }\n\n        .right {\n          display: flex;\n          align-items: center;\n        }\n\n        .position-badge {\n          display: block;\n          width: 24px;\n          line-height: 24px;\n          box-sizing: border-box;\n          border-radius: 50%;\n          font-weight: 500;\n          text-align: center;\n          font-size: 14px;\n          background-color: var(--app-header-edit-background-color, #455a64);\n          color: var(--app-header-edit-text-color, white);\n        }\n\n        ha-icon-button {\n          color: var(--primary-text-color);\n        }\n\n        ha-icon-button.move-arrow[disabled] {\n          color: var(--disabled-text-color);\n        }\n\n        ha-list-item {\n          cursor: pointer;\n          white-space: nowrap;\n        }\n      `];\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleAction\",\n      value: function _handleAction(ev) {\n        switch (ev.detail.index) {\n          case 0:\n            this._moveCard();\n            break;\n          case 1:\n            this._duplicateCard();\n            break;\n          case 2:\n            this._copyCard();\n            break;\n          case 3:\n            this._cutCard();\n            break;\n          case 4:\n            this._deleteCard(true);\n            break;\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_duplicateCard\",\n      value: function _duplicateCard() {\n        const path = this.path;\n        const cardConfig = this._currentView.cards[path[1]];\n        showEditCardDialog(this, {\n          lovelaceConfig: this.lovelace.config,\n          cardConfig,\n          saveConfig: this.lovelace.saveConfig,\n          path: [path[0]]\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_editCard\",\n      value: function _editCard() {\n        fireEvent(this, \"ll-edit-card\", {\n          path: this.path\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_cutCard\",\n      value: function _cutCard() {\n        this._copyCard();\n        this._deleteCard(false);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_copyCard\",\n      value: function _copyCard() {\n        const cardConfig = this._currentView.cards[this.path[1]];\n        this._clipboard = deepClone(cardConfig);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_decreaseCardPosiion\",\n      value: function _decreaseCardPosiion() {\n        const lovelace = this.lovelace;\n        const path = this.path;\n        lovelace.saveConfig(swapCard(lovelace.config, path, [path[0], path[1] - 1]));\n      }\n    }, {\n      kind: \"method\",\n      key: \"_increaseCardPosition\",\n      value: function _increaseCardPosition() {\n        const lovelace = this.lovelace;\n        const path = this.path;\n        lovelace.saveConfig(swapCard(lovelace.config, path, [path[0], path[1] + 1]));\n      }\n    }, {\n      kind: \"method\",\n      key: \"_changeCardPosition\",\n      value: async function _changeCardPosition() {\n        const lovelace = this.lovelace;\n        const path = this.path;\n        const positionString = await showPromptDialog(this, {\n          title: this.hass.localize(\"ui.panel.lovelace.editor.change_position.title\"),\n          text: this.hass.localize(\"ui.panel.lovelace.editor.change_position.text\"),\n          inputType: \"number\",\n          inputMin: \"1\",\n          placeholder: String(path[1] + 1)\n        });\n        if (!positionString) return;\n        const position = parseInt(positionString);\n        if (isNaN(position)) return;\n        lovelace.saveConfig(moveCardToPosition(lovelace.config, path, position));\n      }\n    }, {\n      kind: \"method\",\n      key: \"_moveCard\",\n      value: function _moveCard() {\n        showSelectViewDialog(this, {\n          lovelaceConfig: this.lovelace.config,\n          urlPath: this.lovelace.urlPath,\n          allowDashboardChange: true,\n          header: this.hass.localize(\"ui.panel.lovelace.editor.move_card.header\"),\n          viewSelectedCallback: async (urlPath, selectedDashConfig, viewIndex) => {\n            if (urlPath === this.lovelace.urlPath) {\n              this.lovelace.saveConfig(moveCard(this.lovelace.config, this.path, [viewIndex]));\n              showSaveSuccessToast(this, this.hass);\n              return;\n            }\n            try {\n              await saveConfig(this.hass, urlPath, addCard(selectedDashConfig, [viewIndex], this._currentView.cards[this.path[1]]));\n              this.lovelace.saveConfig(deleteCard(this.lovelace.config, this.path));\n              showSaveSuccessToast(this, this.hass);\n            } catch (err) {\n              showAlertDialog(this, {\n                text: `Moving failed: ${err.message}`\n              });\n            }\n          }\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_deleteCard\",\n      value: function _deleteCard(confirm) {\n        fireEvent(this, \"ll-delete-card\", {\n          path: this.path,\n          confirm\n        });\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["mdiContentCopy","mdiContentCut","mdiContentDuplicate","mdiDelete","mdiDotsVertical","mdiFileMoveOutline","mdiMinus","mdiPlus","deepClone","LitElement","css","html","nothing","customElement","property","queryAssignedNodes","storage","fireEvent","saveConfig","showAlertDialog","showPromptDialog","haStyle","showSaveSuccessToast","computeCardSize","showEditCardDialog","addCard","deleteCard","moveCard","moveCardToPosition","swapCard","showSelectViewDialog","HuiCardOptions","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","type","Array","Boolean","state","subscribe","getCardSize","_assignedNodes","updated","changedProps","has","path","classList","toggle","lovelace","config","views","panel","_currentView","render","_editCard","hass","localize","hidePosition","_decreaseCardPosiion","_changeCardPosition","_increaseCardPosition","cards","length","_handleAction","static","styles","ev","detail","index","_moveCard","_duplicateCard","_copyCard","_cutCard","_deleteCard","cardConfig","lovelaceConfig","_clipboard","positionString","title","text","inputType","inputMin","placeholder","String","position","parseInt","isNaN","urlPath","allowDashboardChange","header","viewSelectedCallback","selectedDashConfig","viewIndex","err","message","confirm"],"sources":["/workspaces/frontend/src/panels/lovelace/components/hui-card-options.ts"],"sourcesContent":["import \"@material/mwc-button\";\nimport { ActionDetail } from \"@material/mwc-list/mwc-list-foundation\";\nimport {\n  mdiContentCopy,\n  mdiContentCut,\n  mdiContentDuplicate,\n  mdiDelete,\n  mdiDotsVertical,\n  mdiFileMoveOutline,\n  mdiMinus,\n  mdiPlus,\n} from \"@mdi/js\";\nimport deepClone from \"deep-clone-simple\";\nimport {\n  CSSResultGroup,\n  LitElement,\n  PropertyValues,\n  TemplateResult,\n  css,\n  html,\n  nothing,\n} from \"lit\";\nimport { customElement, property, queryAssignedNodes } from \"lit/decorators\";\nimport { storage } from \"../../../common/decorators/storage\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport \"../../../components/ha-button-menu\";\nimport \"../../../components/ha-icon-button\";\nimport \"../../../components/ha-list-item\";\nimport { LovelaceCardConfig } from \"../../../data/lovelace/config/card\";\nimport { saveConfig } from \"../../../data/lovelace/config/types\";\nimport { LovelaceViewConfig } from \"../../../data/lovelace/config/view\";\nimport {\n  showAlertDialog,\n  showPromptDialog,\n} from \"../../../dialogs/generic/show-dialog-box\";\nimport { haStyle } from \"../../../resources/styles\";\nimport { HomeAssistant } from \"../../../types\";\nimport { showSaveSuccessToast } from \"../../../util/toast-saved-success\";\nimport { computeCardSize } from \"../common/compute-card-size\";\nimport { showEditCardDialog } from \"../editor/card-editor/show-edit-card-dialog\";\nimport {\n  addCard,\n  deleteCard,\n  moveCard,\n  moveCardToPosition,\n  swapCard,\n} from \"../editor/config-util\";\nimport { showSelectViewDialog } from \"../editor/select-view/show-select-view-dialog\";\nimport { Lovelace, LovelaceCard } from \"../types\";\n\n@customElement(\"hui-card-options\")\nexport class HuiCardOptions extends LitElement {\n  @property({ attribute: false }) public hass?: HomeAssistant;\n\n  @property({ attribute: false }) public lovelace?: Lovelace;\n\n  @property({ type: Array }) public path?: [number, number];\n\n  @queryAssignedNodes() private _assignedNodes?: NodeListOf<LovelaceCard>;\n\n  @property({ type: Boolean }) public hidePosition = false;\n\n  @storage({\n    key: \"lovelaceClipboard\",\n    state: false,\n    subscribe: false,\n    storage: \"sessionStorage\",\n  })\n  protected _clipboard?: LovelaceCardConfig;\n\n  public getCardSize() {\n    return this._assignedNodes ? computeCardSize(this._assignedNodes[0]) : 1;\n  }\n\n  protected updated(changedProps: PropertyValues) {\n    if (!changedProps.has(\"path\") || !this.path) {\n      return;\n    }\n    this.classList.toggle(\n      \"panel\",\n      this.lovelace!.config.views[this.path![0]].panel\n    );\n  }\n\n  private get _currentView() {\n    return this.lovelace!.config.views[this.path![0]] as LovelaceViewConfig;\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      <div class=\"card\"><slot></slot></div>\n      <ha-card>\n        <div class=\"card-actions\">\n          <mwc-button @click=${this._editCard}\n            >${this.hass!.localize(\n              \"ui.panel.lovelace.editor.edit_card.edit\"\n            )}</mwc-button\n          >\n          <div class=\"right\">\n            <slot name=\"buttons\"></slot>\n            ${!this.hidePosition\n              ? html`\n                  <ha-icon-button\n                    .label=${this.hass!.localize(\n                      \"ui.panel.lovelace.editor.edit_card.decrease_position\"\n                    )}\n                    .path=${mdiMinus}\n                    class=\"move-arrow\"\n                    @click=${this._decreaseCardPosiion}\n                    ?disabled=${this.path![1] === 0}\n                  ></ha-icon-button>\n                  <ha-icon-button\n                    @click=${this._changeCardPosition}\n                    .label=${this.hass!.localize(\n                      \"ui.panel.lovelace.editor.edit_card.change_position\"\n                    )}\n                  >\n                    <div class=\"position-badge\">${this.path![1] + 1}</div>\n                  </ha-icon-button>\n                  <ha-icon-button\n                    .label=${this.hass!.localize(\n                      \"ui.panel.lovelace.editor.edit_card.increase_position\"\n                    )}\n                    .path=${mdiPlus}\n                    class=\"move-arrow\"\n                    @click=${this._increaseCardPosition}\n                    .disabled=${this._currentView.cards!.length ===\n                    this.path![1] + 1}\n                  ></ha-icon-button>\n                `\n              : nothing}\n            <ha-button-menu @action=${this._handleAction}>\n              <ha-icon-button\n                slot=\"trigger\"\n                .label=${this.hass!.localize(\n                  \"ui.panel.lovelace.editor.edit_card.options\"\n                )}\n                .path=${mdiDotsVertical}\n              ></ha-icon-button>\n              <ha-list-item graphic=\"icon\">\n                <ha-svg-icon\n                  slot=\"graphic\"\n                  .path=${mdiFileMoveOutline}\n                ></ha-svg-icon>\n                ${this.hass!.localize(\n                  \"ui.panel.lovelace.editor.edit_card.move\"\n                )}\n              </ha-list-item>\n              <ha-list-item graphic=\"icon\">\n                <ha-svg-icon\n                  slot=\"graphic\"\n                  .path=${mdiContentDuplicate}\n                ></ha-svg-icon>\n                ${this.hass!.localize(\n                  \"ui.panel.lovelace.editor.edit_card.duplicate\"\n                )}\n              </ha-list-item>\n              <ha-list-item graphic=\"icon\">\n                <ha-svg-icon\n                  slot=\"graphic\"\n                  .path=${mdiContentCopy}\n                ></ha-svg-icon>\n                ${this.hass!.localize(\n                  \"ui.panel.lovelace.editor.edit_card.copy\"\n                )}\n              </ha-list-item>\n              <ha-list-item graphic=\"icon\">\n                <ha-svg-icon\n                  slot=\"graphic\"\n                  .path=${mdiContentCut}\n                ></ha-svg-icon>\n                ${this.hass!.localize(\"ui.panel.lovelace.editor.edit_card.cut\")}\n              </ha-list-item>\n              <li divider role=\"separator\"></li>\n              <ha-list-item class=\"warning\" graphic=\"icon\">\n                <ha-svg-icon\n                  class=\"warning\"\n                  slot=\"graphic\"\n                  .path=${mdiDelete}\n                ></ha-svg-icon>\n                ${this.hass!.localize(\n                  \"ui.panel.lovelace.editor.edit_card.delete\"\n                )}\n              </ha-list-item>\n            </ha-button-menu>\n          </div>\n        </div>\n      </ha-card>\n    `;\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyle,\n      css`\n        :host(:hover) {\n          outline: 2px solid var(--primary-color);\n        }\n\n        :host(:not(.panel)) ::slotted(*) {\n          display: block;\n        }\n\n        :host(.panel) .card {\n          height: calc(100% - 59px);\n        }\n\n        ha-card {\n          border-top-right-radius: 0;\n          border-top-left-radius: 0;\n        }\n\n        .card-actions {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n        }\n\n        .right {\n          display: flex;\n          align-items: center;\n        }\n\n        .position-badge {\n          display: block;\n          width: 24px;\n          line-height: 24px;\n          box-sizing: border-box;\n          border-radius: 50%;\n          font-weight: 500;\n          text-align: center;\n          font-size: 14px;\n          background-color: var(--app-header-edit-background-color, #455a64);\n          color: var(--app-header-edit-text-color, white);\n        }\n\n        ha-icon-button {\n          color: var(--primary-text-color);\n        }\n\n        ha-icon-button.move-arrow[disabled] {\n          color: var(--disabled-text-color);\n        }\n\n        ha-list-item {\n          cursor: pointer;\n          white-space: nowrap;\n        }\n      `,\n    ];\n  }\n\n  private _handleAction(ev: CustomEvent<ActionDetail>) {\n    switch (ev.detail.index) {\n      case 0:\n        this._moveCard();\n        break;\n      case 1:\n        this._duplicateCard();\n        break;\n      case 2:\n        this._copyCard();\n        break;\n      case 3:\n        this._cutCard();\n        break;\n      case 4:\n        this._deleteCard(true);\n        break;\n    }\n  }\n\n  private _duplicateCard(): void {\n    const path = this.path!;\n    const cardConfig = this._currentView.cards![path[1]];\n    showEditCardDialog(this, {\n      lovelaceConfig: this.lovelace!.config,\n      cardConfig,\n      saveConfig: this.lovelace!.saveConfig,\n      path: [path[0]],\n    });\n  }\n\n  private _editCard(): void {\n    fireEvent(this, \"ll-edit-card\", { path: this.path! });\n  }\n\n  private _cutCard(): void {\n    this._copyCard();\n    this._deleteCard(false);\n  }\n\n  private _copyCard(): void {\n    const cardConfig = this._currentView.cards![this.path![1]];\n    this._clipboard = deepClone(cardConfig);\n  }\n\n  private _decreaseCardPosiion(): void {\n    const lovelace = this.lovelace!;\n    const path = this.path!;\n    lovelace.saveConfig(\n      swapCard(lovelace.config, path, [path[0], path[1] - 1])\n    );\n  }\n\n  private _increaseCardPosition(): void {\n    const lovelace = this.lovelace!;\n    const path = this.path!;\n    lovelace.saveConfig(\n      swapCard(lovelace.config, path, [path[0], path[1] + 1])\n    );\n  }\n\n  private async _changeCardPosition(): Promise<void> {\n    const lovelace = this.lovelace!;\n    const path = this.path!;\n\n    const positionString = await showPromptDialog(this, {\n      title: this.hass!.localize(\n        \"ui.panel.lovelace.editor.change_position.title\"\n      ),\n      text: this.hass!.localize(\n        \"ui.panel.lovelace.editor.change_position.text\"\n      ),\n      inputType: \"number\",\n      inputMin: \"1\",\n      placeholder: String(path[1] + 1),\n    });\n\n    if (!positionString) return;\n\n    const position = parseInt(positionString);\n\n    if (isNaN(position)) return;\n\n    lovelace.saveConfig(moveCardToPosition(lovelace.config, path, position));\n  }\n\n  private _moveCard(): void {\n    showSelectViewDialog(this, {\n      lovelaceConfig: this.lovelace!.config,\n      urlPath: this.lovelace!.urlPath,\n      allowDashboardChange: true,\n      header: this.hass!.localize(\"ui.panel.lovelace.editor.move_card.header\"),\n      viewSelectedCallback: async (urlPath, selectedDashConfig, viewIndex) => {\n        if (urlPath === this.lovelace!.urlPath) {\n          this.lovelace!.saveConfig(\n            moveCard(this.lovelace!.config, this.path!, [viewIndex])\n          );\n          showSaveSuccessToast(this, this.hass!);\n          return;\n        }\n        try {\n          await saveConfig(\n            this.hass!,\n            urlPath,\n            addCard(\n              selectedDashConfig,\n              [viewIndex],\n              this._currentView.cards![this.path![1]]\n            )\n          );\n          this.lovelace!.saveConfig(\n            deleteCard(this.lovelace!.config, this.path!)\n          );\n          showSaveSuccessToast(this, this.hass!);\n        } catch (err: any) {\n          showAlertDialog(this, {\n            text: `Moving failed: ${err.message}`,\n          });\n        }\n      },\n    });\n  }\n\n  private _deleteCard(confirm: boolean): void {\n    fireEvent(this, \"ll-delete-card\", { path: this.path!, confirm });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-card-options\": HuiCardOptions;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}