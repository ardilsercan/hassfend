{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _decorate from \"@babel/runtime/helpers/decorate\";\nvar _templateObject;\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport { html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { assert, assign, object, optional, string } from \"superstruct\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport \"../../../../components/entity/ha-entity-picker\";\nimport \"../../../../components/ha-theme-picker\";\nimport { baseLovelaceCardConfig } from \"../structs/base-card-struct\";\nvar cardConfigStruct = assign(baseLovelaceCardConfig, object({\n  entity: optional(string()),\n  theme: optional(string())\n}));\nvar includeDomains = [\"media_player\"];\nexport var HuiMediaControlCardEditor = _decorate([customElement(\"hui-media-control-card-editor\")], function (_initialize, _LitElement) {\n  var HuiMediaControlCardEditor = /*#__PURE__*/function (_LitElement2) {\n    _inherits(HuiMediaControlCardEditor, _LitElement2);\n    function HuiMediaControlCardEditor() {\n      var _this;\n      _classCallCheck(this, HuiMediaControlCardEditor);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, HuiMediaControlCardEditor, [].concat(args));\n      _initialize(_assertThisInitialized(_this));\n      return _this;\n    }\n    return _createClass(HuiMediaControlCardEditor);\n  }(_LitElement);\n  return {\n    F: HuiMediaControlCardEditor,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_config\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"setConfig\",\n      value: function setConfig(config) {\n        assert(config, cardConfigStruct);\n        this._config = config;\n      }\n    }, {\n      kind: \"get\",\n      key: \"_entity\",\n      value: function _entity() {\n        return this._config.entity || \"\";\n      }\n    }, {\n      kind: \"get\",\n      key: \"_theme\",\n      value: function _theme() {\n        return this._config.theme || \"\";\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this.hass || !this._config) {\n          return nothing;\n        }\n        return html(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      <div class=\\\"card-config\\\">\\n        <ha-entity-picker\\n          .label=\", \"\\n          .hass=\", \"\\n          .value=\", \"\\n          .configValue=\", \"\\n          .includeDomains=\", \"\\n          .required=\", \"\\n          @change=\", \"\\n          allow-custom-entity\\n        ></ha-entity-picker>\\n        <ha-theme-picker\\n          .label=\", \"\\n          .hass=\", \"\\n          .value=\", \"\\n          .configValue=\", \"\\n          @value-changed=\", \"\\n        ></ha-theme-picker>\\n      </div>\\n    \"])), this.hass.localize(\"ui.panel.lovelace.editor.card.generic.entity\"), this.hass, this._entity, \"entity\", includeDomains, true, this._valueChanged, \"\".concat(this.hass.localize(\"ui.panel.lovelace.editor.card.generic.theme\"), \" (\").concat(this.hass.localize(\"ui.panel.lovelace.editor.card.config.optional\"), \")\"), this.hass, this._theme, \"theme\", this._valueChanged);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_valueChanged\",\n      value: function _valueChanged(ev) {\n        if (!this._config || !this.hass) {\n          return;\n        }\n        var target = ev.target;\n        if (this[\"_\".concat(target.configValue)] === target.value) {\n          return;\n        }\n        if (target.configValue) {\n          if (target.value === \"\") {\n            this._config = Object.assign({}, this._config);\n            delete this._config[target.configValue];\n          } else {\n            this._config = Object.assign(Object.assign({}, this._config), {}, _defineProperty({}, target.configValue, target.value));\n          }\n        }\n        fireEvent(this, \"config-changed\", {\n          config: this._config\n        });\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["html","LitElement","nothing","customElement","property","state","assert","assign","object","optional","string","fireEvent","baseLovelaceCardConfig","cardConfigStruct","entity","theme","includeDomains","HuiMediaControlCardEditor","_decorate","_initialize","_LitElement","_LitElement2","_inherits","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_assertThisInitialized","_createClass","F","d","kind","decorators","attribute","key","value","setConfig","config","_config","_entity","_theme","render","hass","_templateObject","_taggedTemplateLiteral","localize","_valueChanged","ev","target","configValue","Object","_defineProperty"],"sources":["/workspaces/frontend/src/panels/lovelace/editor/config-elements/hui-media-control-card-editor.ts"],"sourcesContent":["import { html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { assert, assign, object, optional, string } from \"superstruct\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport \"../../../../components/entity/ha-entity-picker\";\nimport \"../../../../components/ha-theme-picker\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { MediaControlCardConfig } from \"../../cards/types\";\nimport { LovelaceCardEditor } from \"../../types\";\nimport { baseLovelaceCardConfig } from \"../structs/base-card-struct\";\nimport { EditorTarget, EntitiesEditorEvent } from \"../types\";\n\nconst cardConfigStruct = assign(\n  baseLovelaceCardConfig,\n  object({\n    entity: optional(string()),\n    theme: optional(string()),\n  })\n);\n\nconst includeDomains = [\"media_player\"];\n\n@customElement(\"hui-media-control-card-editor\")\nexport class HuiMediaControlCardEditor\n  extends LitElement\n  implements LovelaceCardEditor\n{\n  @property({ attribute: false }) public hass?: HomeAssistant;\n\n  @state() private _config?: MediaControlCardConfig;\n\n  public setConfig(config: MediaControlCardConfig): void {\n    assert(config, cardConfigStruct);\n    this._config = config;\n  }\n\n  get _entity(): string {\n    return this._config!.entity || \"\";\n  }\n\n  get _theme(): string {\n    return this._config!.theme || \"\";\n  }\n\n  protected render() {\n    if (!this.hass || !this._config) {\n      return nothing;\n    }\n\n    return html`\n      <div class=\"card-config\">\n        <ha-entity-picker\n          .label=${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.generic.entity\"\n          )}\n          .hass=${this.hass}\n          .value=${this._entity}\n          .configValue=${\"entity\"}\n          .includeDomains=${includeDomains}\n          .required=${true}\n          @change=${this._valueChanged}\n          allow-custom-entity\n        ></ha-entity-picker>\n        <ha-theme-picker\n          .label=${`${this.hass!.localize(\n            \"ui.panel.lovelace.editor.card.generic.theme\"\n          )} (${this.hass!.localize(\n            \"ui.panel.lovelace.editor.card.config.optional\"\n          )})`}\n          .hass=${this.hass}\n          .value=${this._theme}\n          .configValue=${\"theme\"}\n          @value-changed=${this._valueChanged}\n        ></ha-theme-picker>\n      </div>\n    `;\n  }\n\n  private _valueChanged(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n    if (this[`_${target.configValue}`] === target.value) {\n      return;\n    }\n    if (target.configValue) {\n      if (target.value === \"\") {\n        this._config = { ...this._config };\n        delete this._config[target.configValue!];\n      } else {\n        this._config = {\n          ...this._config,\n          [target.configValue!]: target.value,\n        };\n      }\n    }\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-media-control-card-editor\": HuiMediaControlCardEditor;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}