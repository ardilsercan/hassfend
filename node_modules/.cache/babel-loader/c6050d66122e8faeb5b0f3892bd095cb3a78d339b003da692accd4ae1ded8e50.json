{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport { html, LitElement } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { DOMAINS_TOGGLE } from \"../../../common/const\";\nimport { computeDomain } from \"../../../common/entity/compute_domain\";\nimport { processConfigEntities } from \"../common/process-config-entities\";\nimport \"../components/hui-buttons-base\";\nexport let HuiButtonsRow = _decorate([customElement(\"hui-buttons-row\")], function (_initialize, _LitElement) {\n  class HuiButtonsRow extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HuiButtonsRow,\n    d: [{\n      kind: \"method\",\n      static: true,\n      key: \"getStubConfig\",\n      value: function getStubConfig() {\n        return {\n          entities: []\n        };\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_configEntities\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"setConfig\",\n      value: function setConfig(config) {\n        this._configEntities = processConfigEntities(config.entities).map(entityConfig => ({\n          tap_action: {\n            action: entityConfig.entity && DOMAINS_TOGGLE.has(computeDomain(entityConfig.entity)) ? \"toggle\" : \"more-info\"\n          },\n          hold_action: {\n            action: \"more-info\"\n          },\n          ...entityConfig\n        }));\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        return html`\n      <hui-buttons-base\n        .hass=${this.hass}\n        .configEntities=${this._configEntities}\n      ></hui-buttons-base>\n    `;\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["html","LitElement","customElement","property","state","DOMAINS_TOGGLE","computeDomain","processConfigEntities","HuiButtonsRow","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","static","key","value","getStubConfig","entities","decorators","attribute","setConfig","config","_configEntities","map","entityConfig","tap_action","action","entity","has","hold_action","render","hass"],"sources":["/Users/sercanardil/Desktop/frontend/src/panels/lovelace/special-rows/hui-buttons-row.ts"],"sourcesContent":["import { html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { DOMAINS_TOGGLE } from \"../../../common/const\";\nimport { computeDomain } from \"../../../common/entity/compute_domain\";\nimport { HomeAssistant } from \"../../../types\";\nimport { processConfigEntities } from \"../common/process-config-entities\";\nimport \"../components/hui-buttons-base\";\nimport {\n  ButtonsRowConfig,\n  EntityConfig,\n  LovelaceRow,\n} from \"../entity-rows/types\";\n\n@customElement(\"hui-buttons-row\")\nexport class HuiButtonsRow extends LitElement implements LovelaceRow {\n  public static getStubConfig(): Record<string, unknown> {\n    return { entities: [] };\n  }\n\n  @property({ attribute: false }) public hass?: HomeAssistant;\n\n  @state() private _configEntities?: EntityConfig[];\n\n  public setConfig(config: ButtonsRowConfig): void {\n    this._configEntities = processConfigEntities(config.entities).map(\n      (entityConfig) => ({\n        tap_action: {\n          action:\n            entityConfig.entity &&\n            DOMAINS_TOGGLE.has(computeDomain(entityConfig.entity))\n              ? \"toggle\"\n              : \"more-info\",\n        },\n        hold_action: { action: \"more-info\" },\n        ...entityConfig,\n      })\n    );\n  }\n\n  protected render(): TemplateResult | void {\n    return html`\n      <hui-buttons-base\n        .hass=${this.hass}\n        .configEntities=${this._configEntities}\n      ></hui-buttons-base>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-buttons-row\": HuiButtonsRow;\n  }\n}\n"],"mappings":";AAAA,SAASA,IAAI,EAAEC,UAAU,QAAwB,KAAK;AACtD,SAASC,aAAa,EAAEC,QAAQ,EAAEC,KAAK,QAAQ,gBAAgB;AAC/D,SAASC,cAAc,QAAQ,uBAAuB;AACtD,SAASC,aAAa,QAAQ,uCAAuC;AAErE,SAASC,qBAAqB,QAAQ,mCAAmC;AACzE,OAAO,gCAAgC;AAOvC,WACaC,aAAa,GAAAC,SAAA,EADzBP,aAAa,CAAC,iBAAiB,CAAC,aAAAQ,WAAA,EAAAC,WAAA;EAAjC,MACaH,aAAa,SAAAG,WAAA,CAA2C;IAAAC,YAAA,GAAAC,IAAA;MAAA,SAAAA,IAAA;MAAAH,WAAA;IAAA;EAiCrE;EAAC;IAAAI,CAAA,EAjCYN,aAAa;IAAAO,CAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,GAAA;MAAAC,KAAA,EACxB,SAAAC,cAAA,EAAuD;QACrD,OAAO;UAAEC,QAAQ,EAAE;QAAG,CAAC;MACzB;IAAC;MAAAL,IAAA;MAAAM,UAAA,GAEAnB,QAAQ,CAAC;QAAEoB,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAL,GAAA;MAAAC,KAAA;IAAA;MAAAH,IAAA;MAAAM,UAAA,GAE9BlB,KAAK,CAAC,CAAC;MAAAc,GAAA;MAAAC,KAAA;IAAA;MAAAH,IAAA;MAAAE,GAAA;MAAAC,KAAA,EAER,SAAAK,UAAiBC,MAAwB,EAAQ;QAC/C,IAAI,CAACC,eAAe,GAAGnB,qBAAqB,CAACkB,MAAM,CAACJ,QAAQ,CAAC,CAACM,GAAG,CAC9DC,YAAY,KAAM;UACjBC,UAAU,EAAE;YACVC,MAAM,EACJF,YAAY,CAACG,MAAM,IACnB1B,cAAc,CAAC2B,GAAG,CAAC1B,aAAa,CAACsB,YAAY,CAACG,MAAM,CAAC,CAAC,GAClD,QAAQ,GACR;UACR,CAAC;UACDE,WAAW,EAAE;YAAEH,MAAM,EAAE;UAAY,CAAC;UACpC,GAAGF;QACL,CAAC,CACH,CAAC;MACH;IAAC;MAAAZ,IAAA;MAAAE,GAAA;MAAAC,KAAA,EAED,SAAAe,OAAA,EAA0C;QACxC,OAAOlC,IAAK;AAChB;AACA,gBAAgB,IAAI,CAACmC,IAAK;AAC1B,0BAA0B,IAAI,CAACT,eAAgB;AAC/C;AACA,KAAK;MACH;IAAC;EAAA;AAAA,GAhCgCzB,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}