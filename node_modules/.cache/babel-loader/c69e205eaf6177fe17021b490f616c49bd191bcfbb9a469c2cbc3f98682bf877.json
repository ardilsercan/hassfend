{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport { css, LitElement, nothing, svg } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nexport let HaSvgIcon = _decorate([customElement(\"ha-svg-icon\")], function (_initialize, _LitElement) {\n  class HaSvgIcon extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaSvgIcon,\n    d: [{\n      kind: \"field\",\n      decorators: [property()],\n      key: \"path\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"secondaryPath\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"viewBox\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        return svg`\n    <svg\n      viewBox=${this.viewBox || \"0 0 24 24\"}\n      preserveAspectRatio=\"xMidYMid meet\"\n      focusable=\"false\"\n      role=\"img\"\n      aria-hidden=\"true\"\n    >\n      <g>\n        ${this.path ? svg`<path class=\"primary-path\" d=${this.path}></path>` : nothing}\n        ${this.secondaryPath ? svg`<path class=\"secondary-path\" d=${this.secondaryPath}></path>` : nothing}\n      </g>\n    </svg>`;\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css`\n      :host {\n        display: var(--ha-icon-display, inline-flex);\n        align-items: center;\n        justify-content: center;\n        position: relative;\n        vertical-align: middle;\n        fill: var(--icon-primary-color, currentcolor);\n        width: var(--mdc-icon-size, 24px);\n        height: var(--mdc-icon-size, 24px);\n      }\n      svg {\n        width: 100%;\n        height: 100%;\n        pointer-events: none;\n        display: block;\n      }\n      path.primary-path {\n        opacity: var(--icon-primary-opactity, 1);\n      }\n      path.secondary-path {\n        fill: var(--icon-secondary-color, currentcolor);\n        opacity: var(--icon-secondary-opactity, 0.5);\n      }\n    `;\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","LitElement","nothing","svg","customElement","property","HaSvgIcon","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","key","value","render","viewBox","path","secondaryPath","static","styles"],"sources":["/workspaces/frontend/src/components/ha-svg-icon.ts"],"sourcesContent":["import {\n  css,\n  CSSResultGroup,\n  LitElement,\n  nothing,\n  svg,\n  SVGTemplateResult,\n} from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\n\n@customElement(\"ha-svg-icon\")\nexport class HaSvgIcon extends LitElement {\n  @property() public path?: string;\n\n  @property() public secondaryPath?: string;\n\n  @property() public viewBox?: string;\n\n  protected render(): SVGTemplateResult {\n    return svg`\n    <svg\n      viewBox=${this.viewBox || \"0 0 24 24\"}\n      preserveAspectRatio=\"xMidYMid meet\"\n      focusable=\"false\"\n      role=\"img\"\n      aria-hidden=\"true\"\n    >\n      <g>\n        ${\n          this.path\n            ? svg`<path class=\"primary-path\" d=${this.path}></path>`\n            : nothing\n        }\n        ${\n          this.secondaryPath\n            ? svg`<path class=\"secondary-path\" d=${this.secondaryPath}></path>`\n            : nothing\n        }\n      </g>\n    </svg>`;\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      :host {\n        display: var(--ha-icon-display, inline-flex);\n        align-items: center;\n        justify-content: center;\n        position: relative;\n        vertical-align: middle;\n        fill: var(--icon-primary-color, currentcolor);\n        width: var(--mdc-icon-size, 24px);\n        height: var(--mdc-icon-size, 24px);\n      }\n      svg {\n        width: 100%;\n        height: 100%;\n        pointer-events: none;\n        display: block;\n      }\n      path.primary-path {\n        opacity: var(--icon-primary-opactity, 1);\n      }\n      path.secondary-path {\n        fill: var(--icon-secondary-color, currentcolor);\n        opacity: var(--icon-secondary-opactity, 0.5);\n      }\n    `;\n  }\n}\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-svg-icon\": HaSvgIcon;\n  }\n}\n"],"mappings":";AAAA,SACEA,GAAG,EAEHC,UAAU,EACVC,OAAO,EACPC,GAAG,QAEE,KAAK;AACZ,SAASC,aAAa,EAAEC,QAAQ,QAAQ,gBAAgB;AAExD,WACaC,SAAS,GAAAC,SAAA,EADrBH,aAAa,CAAC,aAAa,CAAC,aAAAI,WAAA,EAAAC,WAAA;EAA7B,MACaH,SAAS,SAAAG,WAAA,CAAoB;IAAAC,YAAA,GAAAC,IAAA;MAAA,SAAAA,IAAA;MAAAH,WAAA;IAAA;EA0D1C;EAAC;IAAAI,CAAA,EA1DYN,SAAS;IAAAO,CAAA;MAAAC,IAAA;MAAAC,UAAA,GACnBV,QAAQ,CAAC,CAAC;MAAAW,GAAA;MAAAC,KAAA;IAAA;MAAAH,IAAA;MAAAC,UAAA,GAEVV,QAAQ,CAAC,CAAC;MAAAW,GAAA;MAAAC,KAAA;IAAA;MAAAH,IAAA;MAAAC,UAAA,GAEVV,QAAQ,CAAC,CAAC;MAAAW,GAAA;MAAAC,KAAA;IAAA;MAAAH,IAAA;MAAAE,GAAA;MAAAC,KAAA,EAEX,SAAAC,OAAA,EAAsC;QACpC,OAAOf,GAAI;AACf;AACA,gBAAgB,IAAI,CAACgB,OAAO,IAAI,WAAY;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,UACU,IAAI,CAACC,IAAI,GACLjB,GAAI,gCAA+B,IAAI,CAACiB,IAAK,UAAS,GACtDlB,OACL;AACT,UACU,IAAI,CAACmB,aAAa,GACdlB,GAAI,kCAAiC,IAAI,CAACkB,aAAc,UAAS,GACjEnB,OACL;AACT;AACA,WAAW;MACT;IAAC;MAAAY,IAAA;MAAAQ,MAAA;MAAAN,GAAA;MAAAC,KAAA,EAED,SAAAM,OAAA,EAAoC;QAClC,OAAOvB,GAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;MACH;IAAC;EAAA;AAAA,GAzD4BC,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}