{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport \"core-js/modules/es.array.join.js\";\nvar rotateVector = function rotateVector(_ref, _ref2) {\n  var _ref3 = _slicedToArray(_ref, 2),\n    _ref3$ = _slicedToArray(_ref3[0], 2),\n    a = _ref3$[0],\n    b = _ref3$[1],\n    _ref3$2 = _slicedToArray(_ref3[1], 2),\n    c = _ref3$2[0],\n    d = _ref3$2[1];\n  var _ref4 = _slicedToArray(_ref2, 2),\n    x = _ref4[0],\n    y = _ref4[1];\n  return [a * x + b * y, c * x + d * y];\n};\nvar createRotateMatrix = function createRotateMatrix(x) {\n  return [[Math.cos(x), -Math.sin(x)], [Math.sin(x), Math.cos(x)]];\n};\nvar addVector = function addVector(_ref5, _ref6) {\n  var _ref7 = _slicedToArray(_ref5, 2),\n    a1 = _ref7[0],\n    a2 = _ref7[1];\n  var _ref8 = _slicedToArray(_ref6, 2),\n    b1 = _ref8[0],\n    b2 = _ref8[1];\n  return [a1 + b1, a2 + b2];\n};\nexport var toRadian = function toRadian(angle) {\n  return angle / 180 * Math.PI;\n};\nexport var svgArc = function svgArc(options) {\n  var x = options.x,\n    y = options.y,\n    r = options.r,\n    start = options.start,\n    end = options.end,\n    _options$rotate = options.rotate,\n    rotate = _options$rotate === void 0 ? 0 : _options$rotate;\n  var cx = x;\n  var cy = y;\n  var rx = r;\n  var ry = r;\n  var t1 = toRadian(start);\n  var t2 = toRadian(end);\n  var delta = (t2 - t1) % (2 * Math.PI);\n  var phi = toRadian(rotate);\n  var rotMatrix = createRotateMatrix(phi);\n  var _addVector = addVector(rotateVector(rotMatrix, [rx * Math.cos(t1), ry * Math.sin(t1)]), [cx, cy]),\n    _addVector2 = _slicedToArray(_addVector, 2),\n    sX = _addVector2[0],\n    sY = _addVector2[1];\n  var _addVector3 = addVector(rotateVector(rotMatrix, [rx * Math.cos(t1 + delta), ry * Math.sin(t1 + delta)]), [cx, cy]),\n    _addVector4 = _slicedToArray(_addVector3, 2),\n    eX = _addVector4[0],\n    eY = _addVector4[1];\n  var fA = delta > Math.PI ? 1 : 0;\n  var fS = delta > 0 ? 1 : 0;\n  return [\"M\", sX, sY, \"A\", rx, ry, phi / (2 * Math.PI) * 360, fA, fS, eX, eY].join(\" \");\n};","map":{"version":3,"names":["rotateVector","_ref","_ref2","_ref3","_slicedToArray","_ref3$","a","b","_ref3$2","c","d","_ref4","x","y","createRotateMatrix","Math","cos","sin","addVector","_ref5","_ref6","_ref7","a1","a2","_ref8","b1","b2","toRadian","angle","PI","svgArc","options","r","start","end","_options$rotate","rotate","cx","cy","rx","ry","t1","t2","delta","phi","rotMatrix","_addVector","_addVector2","sX","sY","_addVector3","_addVector4","eX","eY","fA","fS","join"],"sources":["/workspaces/frontend/src/resources/svg-arc.ts"],"sourcesContent":["type Vector = [number, number];\ntype Matrix = [Vector, Vector];\n\nconst rotateVector = ([[a, b], [c, d]]: Matrix, [x, y]: Vector): Vector => [\n  a * x + b * y,\n  c * x + d * y,\n];\nconst createRotateMatrix = (x: number): Matrix => [\n  [Math.cos(x), -Math.sin(x)],\n  [Math.sin(x), Math.cos(x)],\n];\nconst addVector = ([a1, a2]: Vector, [b1, b2]: Vector): Vector => [\n  a1 + b1,\n  a2 + b2,\n];\n\nexport const toRadian = (angle: number) => (angle / 180) * Math.PI;\n\ntype ArcOptions = {\n  x: number;\n  y: number;\n  r: number;\n  start: number;\n  end: number;\n  rotate?: number;\n};\n\nexport const svgArc = (options: ArcOptions) => {\n  const { x, y, r, start, end, rotate = 0 } = options;\n  const cx = x;\n  const cy = y;\n  const rx = r;\n  const ry = r;\n  const t1 = toRadian(start);\n  const t2 = toRadian(end);\n  const delta = (t2 - t1) % (2 * Math.PI);\n  const phi = toRadian(rotate);\n\n  const rotMatrix = createRotateMatrix(phi);\n  const [sX, sY] = addVector(\n    rotateVector(rotMatrix, [rx * Math.cos(t1), ry * Math.sin(t1)]),\n    [cx, cy]\n  );\n  const [eX, eY] = addVector(\n    rotateVector(rotMatrix, [\n      rx * Math.cos(t1 + delta),\n      ry * Math.sin(t1 + delta),\n    ]),\n    [cx, cy]\n  );\n  const fA = delta > Math.PI ? 1 : 0;\n  const fS = delta > 0 ? 1 : 0;\n\n  return [\n    \"M\",\n    sX,\n    sY,\n    \"A\",\n    rx,\n    ry,\n    (phi / (2 * Math.PI)) * 360,\n    fA,\n    fS,\n    eX,\n    eY,\n  ].join(\" \");\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}