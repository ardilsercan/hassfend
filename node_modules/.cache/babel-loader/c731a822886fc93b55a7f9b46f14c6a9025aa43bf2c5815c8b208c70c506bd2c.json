{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport \"@material/mwc-button\";\nimport { css, html, LitElement } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport \"../components/ha-icon-button-arrow-prev\";\nimport \"../components/ha-menu-button\";\nimport \"../components/ha-alert\";\nlet HassErrorScreen = _decorate([customElement(\"hass-error-screen\")], function (_initialize, _LitElement) {\n  class HassErrorScreen extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HassErrorScreen,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"toolbar\",\n      value() {\n        return true;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"rootnav\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"narrow\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"error\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var _history$state, _this$hass;\n        return html`\n      ${this.toolbar ? html`<div class=\"toolbar\">\n            ${this.rootnav || (_history$state = history.state) !== null && _history$state !== void 0 && _history$state.root ? html`\n                  <ha-menu-button\n                    .hass=${this.hass}\n                    .narrow=${this.narrow}\n                  ></ha-menu-button>\n                ` : html`\n                  <ha-icon-button-arrow-prev\n                    .hass=${this.hass}\n                    @click=${this._handleBack}\n                  ></ha-icon-button-arrow-prev>\n                `}\n          </div>` : \"\"}\n      <div class=\"content\">\n        <ha-alert alert-type=\"error\">${this.error}</ha-alert>\n        <slot>\n          <mwc-button @click=${this._handleBack}>\n            ${(_this$hass = this.hass) === null || _this$hass === void 0 ? void 0 : _this$hass.localize(\"ui.common.back\")}\n          </mwc-button>\n        </slot>\n      </div>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleBack\",\n      value: function _handleBack() {\n        history.back();\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [css`\n        :host {\n          display: block;\n          height: 100%;\n          background-color: var(--primary-background-color);\n        }\n        .toolbar {\n          display: flex;\n          align-items: center;\n          font-size: 20px;\n          height: var(--header-height);\n          padding: 8px 12px;\n          pointer-events: none;\n          background-color: var(--app-header-background-color);\n          font-weight: 400;\n          color: var(--app-header-text-color, white);\n          border-bottom: var(--app-header-border-bottom, none);\n          box-sizing: border-box;\n        }\n        @media (max-width: 599px) {\n          .toolbar {\n            padding: 4px;\n          }\n        }\n        ha-icon-button-arrow-prev {\n          pointer-events: auto;\n        }\n        .content {\n          color: var(--primary-text-color);\n          height: calc(100% - var(--header-height));\n          display: flex;\n          padding: 16px;\n          align-items: center;\n          justify-content: center;\n          flex-direction: column;\n          box-sizing: border-box;\n        }\n        a {\n          color: var(--primary-color);\n        }\n        ha-alert {\n          margin-bottom: 16px;\n        }\n      `];\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","customElement","property","HassErrorScreen","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","type","Boolean","render","_history$state","_this$hass","toolbar","rootnav","history","state","root","hass","narrow","_handleBack","error","localize","back","static","styles"],"sources":["/workspaces/frontend/src/layouts/hass-error-screen.ts"],"sourcesContent":["import \"@material/mwc-button\";\nimport { css, CSSResultGroup, html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport \"../components/ha-icon-button-arrow-prev\";\nimport \"../components/ha-menu-button\";\nimport { HomeAssistant } from \"../types\";\nimport \"../components/ha-alert\";\n\n@customElement(\"hass-error-screen\")\nclass HassErrorScreen extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ type: Boolean }) public toolbar = true;\n\n  @property({ type: Boolean }) public rootnav = false;\n\n  @property({ type: Boolean }) public narrow = false;\n\n  @property() public error?: string;\n\n  protected render(): TemplateResult {\n    return html`\n      ${this.toolbar\n        ? html`<div class=\"toolbar\">\n            ${this.rootnav || history.state?.root\n              ? html`\n                  <ha-menu-button\n                    .hass=${this.hass}\n                    .narrow=${this.narrow}\n                  ></ha-menu-button>\n                `\n              : html`\n                  <ha-icon-button-arrow-prev\n                    .hass=${this.hass}\n                    @click=${this._handleBack}\n                  ></ha-icon-button-arrow-prev>\n                `}\n          </div>`\n        : \"\"}\n      <div class=\"content\">\n        <ha-alert alert-type=\"error\">${this.error}</ha-alert>\n        <slot>\n          <mwc-button @click=${this._handleBack}>\n            ${this.hass?.localize(\"ui.common.back\")}\n          </mwc-button>\n        </slot>\n      </div>\n    `;\n  }\n\n  private _handleBack(): void {\n    history.back();\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      css`\n        :host {\n          display: block;\n          height: 100%;\n          background-color: var(--primary-background-color);\n        }\n        .toolbar {\n          display: flex;\n          align-items: center;\n          font-size: 20px;\n          height: var(--header-height);\n          padding: 8px 12px;\n          pointer-events: none;\n          background-color: var(--app-header-background-color);\n          font-weight: 400;\n          color: var(--app-header-text-color, white);\n          border-bottom: var(--app-header-border-bottom, none);\n          box-sizing: border-box;\n        }\n        @media (max-width: 599px) {\n          .toolbar {\n            padding: 4px;\n          }\n        }\n        ha-icon-button-arrow-prev {\n          pointer-events: auto;\n        }\n        .content {\n          color: var(--primary-text-color);\n          height: calc(100% - var(--header-height));\n          display: flex;\n          padding: 16px;\n          align-items: center;\n          justify-content: center;\n          flex-direction: column;\n          box-sizing: border-box;\n        }\n        a {\n          color: var(--primary-color);\n        }\n        ha-alert {\n          margin-bottom: 16px;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hass-error-screen\": HassErrorScreen;\n  }\n}\n"],"mappings":";AAAA,OAAO,sBAAsB;AAC7B,SAASA,GAAG,EAAkBC,IAAI,EAAEC,UAAU,QAAwB,KAAK;AAC3E,SAASC,aAAa,EAAEC,QAAQ,QAAQ,gBAAgB;AACxD,OAAO,yCAAyC;AAChD,OAAO,8BAA8B;AAErC,OAAO,wBAAwB;AAAC,IAG1BC,eAAe,GAAAC,SAAA,EADpBH,aAAa,CAAC,mBAAmB,CAAC,aAAAI,WAAA,EAAAC,WAAA;EAAnC,MACMH,eAAe,SAAAG,WAAA,CAAoB;IAAAC,YAAA,GAAAC,IAAA;MAAA,SAAAA,IAAA;MAAAH,WAAA;IAAA;EA6FzC;EAAC;IAAAI,CAAA,EA7FKN,eAAe;IAAAO,CAAA;MAAAC,IAAA;MAAAC,UAAA,GAClBV,QAAQ,CAAC;QAAEW,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAC,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAE9BV,QAAQ,CAAC;QAAEc,IAAI,EAAEC;MAAQ,CAAC,CAAC;MAAAH,GAAA;MAAAC,MAAA;QAAA,OAAkB,IAAI;MAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAEjDV,QAAQ,CAAC;QAAEc,IAAI,EAAEC;MAAQ,CAAC,CAAC;MAAAH,GAAA;MAAAC,MAAA;QAAA,OAAkB,KAAK;MAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAElDV,QAAQ,CAAC;QAAEc,IAAI,EAAEC;MAAQ,CAAC,CAAC;MAAAH,GAAA;MAAAC,MAAA;QAAA,OAAiB,KAAK;MAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAEjDV,QAAQ,CAAC,CAAC;MAAAY,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAEX,SAAAG,OAAA,EAAmC;QAAA,IAAAC,cAAA,EAAAC,UAAA;QACjC,OAAOrB,IAAK;AAChB,QAAQ,IAAI,CAACsB,OAAO,GACVtB,IAAK;AACf,cAAc,IAAI,CAACuB,OAAO,KAAAH,cAAA,GAAII,OAAO,CAACC,KAAK,cAAAL,cAAA,eAAbA,cAAA,CAAeM,IAAI,GACjC1B,IAAK;AACrB;AACA,4BAA4B,IAAI,CAAC2B,IAAK;AACtC,8BAA8B,IAAI,CAACC,MAAO;AAC1C;AACA,iBAAiB,GACD5B,IAAK;AACrB;AACA,4BAA4B,IAAI,CAAC2B,IAAK;AACtC,6BAA6B,IAAI,CAACE,WAAY;AAC9C;AACA,iBAAkB;AAClB,iBAAiB,GACP,EAAG;AACb;AACA,uCAAuC,IAAI,CAACC,KAAM;AAClD;AACA,+BAA+B,IAAI,CAACD,WAAY;AAChD,cAAY,CAAAR,UAAA,GAAE,IAAI,CAACM,IAAI,cAAAN,UAAA,uBAATA,UAAA,CAAWU,QAAQ,CAAC,gBAAgB,CAAE;AACpD;AACA;AACA;AACA,KAAK;MACH;IAAC;MAAAnB,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAa,YAAA,EAA4B;QAC1BL,OAAO,CAACQ,IAAI,CAAC,CAAC;MAChB;IAAC;MAAApB,IAAA;MAAAqB,MAAA;MAAAlB,GAAA;MAAAC,KAAA,EAED,SAAAkB,OAAA,EAAoC;QAClC,OAAO,CACLnC,GAAI;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,CACF;MACH;IAAC;EAAA;AAAA,GA5F2BE,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}