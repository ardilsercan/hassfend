{"ast":null,"code":"const rotateVector = ([[a, b], [c, d]], [x, y]) => [a * x + b * y, c * x + d * y];\nconst createRotateMatrix = x => [[Math.cos(x), -Math.sin(x)], [Math.sin(x), Math.cos(x)]];\nconst addVector = ([a1, a2], [b1, b2]) => [a1 + b1, a2 + b2];\nexport const toRadian = angle => angle / 180 * Math.PI;\nexport const svgArc = options => {\n  const {\n    x,\n    y,\n    r,\n    start,\n    end,\n    rotate = 0\n  } = options;\n  const cx = x;\n  const cy = y;\n  const rx = r;\n  const ry = r;\n  const t1 = toRadian(start);\n  const t2 = toRadian(end);\n  const delta = (t2 - t1) % (2 * Math.PI);\n  const phi = toRadian(rotate);\n  const rotMatrix = createRotateMatrix(phi);\n  const [sX, sY] = addVector(rotateVector(rotMatrix, [rx * Math.cos(t1), ry * Math.sin(t1)]), [cx, cy]);\n  const [eX, eY] = addVector(rotateVector(rotMatrix, [rx * Math.cos(t1 + delta), ry * Math.sin(t1 + delta)]), [cx, cy]);\n  const fA = delta > Math.PI ? 1 : 0;\n  const fS = delta > 0 ? 1 : 0;\n  return [\"M\", sX, sY, \"A\", rx, ry, phi / (2 * Math.PI) * 360, fA, fS, eX, eY].join(\" \");\n};","map":{"version":3,"names":["rotateVector","a","b","c","d","x","y","createRotateMatrix","Math","cos","sin","addVector","a1","a2","b1","b2","toRadian","angle","PI","svgArc","options","r","start","end","rotate","cx","cy","rx","ry","t1","t2","delta","phi","rotMatrix","sX","sY","eX","eY","fA","fS","join"],"sources":["/workspaces/frontend/src/resources/svg-arc.ts"],"sourcesContent":["type Vector = [number, number];\ntype Matrix = [Vector, Vector];\n\nconst rotateVector = ([[a, b], [c, d]]: Matrix, [x, y]: Vector): Vector => [\n  a * x + b * y,\n  c * x + d * y,\n];\nconst createRotateMatrix = (x: number): Matrix => [\n  [Math.cos(x), -Math.sin(x)],\n  [Math.sin(x), Math.cos(x)],\n];\nconst addVector = ([a1, a2]: Vector, [b1, b2]: Vector): Vector => [\n  a1 + b1,\n  a2 + b2,\n];\n\nexport const toRadian = (angle: number) => (angle / 180) * Math.PI;\n\ntype ArcOptions = {\n  x: number;\n  y: number;\n  r: number;\n  start: number;\n  end: number;\n  rotate?: number;\n};\n\nexport const svgArc = (options: ArcOptions) => {\n  const { x, y, r, start, end, rotate = 0 } = options;\n  const cx = x;\n  const cy = y;\n  const rx = r;\n  const ry = r;\n  const t1 = toRadian(start);\n  const t2 = toRadian(end);\n  const delta = (t2 - t1) % (2 * Math.PI);\n  const phi = toRadian(rotate);\n\n  const rotMatrix = createRotateMatrix(phi);\n  const [sX, sY] = addVector(\n    rotateVector(rotMatrix, [rx * Math.cos(t1), ry * Math.sin(t1)]),\n    [cx, cy]\n  );\n  const [eX, eY] = addVector(\n    rotateVector(rotMatrix, [\n      rx * Math.cos(t1 + delta),\n      ry * Math.sin(t1 + delta),\n    ]),\n    [cx, cy]\n  );\n  const fA = delta > Math.PI ? 1 : 0;\n  const fS = delta > 0 ? 1 : 0;\n\n  return [\n    \"M\",\n    sX,\n    sY,\n    \"A\",\n    rx,\n    ry,\n    (phi / (2 * Math.PI)) * 360,\n    fA,\n    fS,\n    eX,\n    eY,\n  ].join(\" \");\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}