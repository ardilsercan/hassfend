{"ast":null,"code":"import { stringCompare } from \"../common/string/compare\";\nexport { subscribeAreaRegistry } from \"./ws-area_registry\";\nexport const createAreaRegistryEntry = (hass, values) => hass.callWS({\n  type: \"config/area_registry/create\",\n  ...values\n});\nexport const updateAreaRegistryEntry = (hass, areaId, updates) => hass.callWS({\n  type: \"config/area_registry/update\",\n  area_id: areaId,\n  ...updates\n});\nexport const deleteAreaRegistryEntry = (hass, areaId) => hass.callWS({\n  type: \"config/area_registry/delete\",\n  area_id: areaId\n});\nexport const getAreaEntityLookup = entities => {\n  const areaEntityLookup = {};\n  for (const entity of entities) {\n    if (!entity.area_id) {\n      continue;\n    }\n    if (!(entity.area_id in areaEntityLookup)) {\n      areaEntityLookup[entity.area_id] = [];\n    }\n    areaEntityLookup[entity.area_id].push(entity);\n  }\n  return areaEntityLookup;\n};\nexport const getAreaDeviceLookup = devices => {\n  const areaDeviceLookup = {};\n  for (const device of devices) {\n    if (!device.area_id) {\n      continue;\n    }\n    if (!(device.area_id in areaDeviceLookup)) {\n      areaDeviceLookup[device.area_id] = [];\n    }\n    areaDeviceLookup[device.area_id].push(device);\n  }\n  return areaDeviceLookup;\n};\nexport const areaCompare = (entries, order) => (a, b) => {\n  const indexA = order ? order.indexOf(a) : -1;\n  const indexB = order ? order.indexOf(b) : -1;\n  if (indexA === -1 && indexB === -1) {\n    var _entries$a$name, _entries$a, _entries$b$name, _entries$b;\n    const nameA = (_entries$a$name = entries === null || entries === void 0 || (_entries$a = entries[a]) === null || _entries$a === void 0 ? void 0 : _entries$a.name) !== null && _entries$a$name !== void 0 ? _entries$a$name : a;\n    const nameB = (_entries$b$name = entries === null || entries === void 0 || (_entries$b = entries[b]) === null || _entries$b === void 0 ? void 0 : _entries$b.name) !== null && _entries$b$name !== void 0 ? _entries$b$name : b;\n    return stringCompare(nameA, nameB);\n  }\n  if (indexA === -1) {\n    return 1;\n  }\n  if (indexB === -1) {\n    return -1;\n  }\n  return indexA - indexB;\n};","map":{"version":3,"names":["stringCompare","subscribeAreaRegistry","createAreaRegistryEntry","hass","values","callWS","type","updateAreaRegistryEntry","areaId","updates","area_id","deleteAreaRegistryEntry","getAreaEntityLookup","entities","areaEntityLookup","entity","push","getAreaDeviceLookup","devices","areaDeviceLookup","device","areaCompare","entries","order","a","b","indexA","indexOf","indexB","_entries$a$name","_entries$a","_entries$b$name","_entries$b","nameA","name","nameB"],"sources":["/Users/sercanardil/Desktop/frontend/src/data/area_registry.ts"],"sourcesContent":["import { stringCompare } from \"../common/string/compare\";\nimport { HomeAssistant } from \"../types\";\nimport { DeviceRegistryEntry } from \"./device_registry\";\nimport { EntityRegistryEntry } from \"./entity_registry\";\n\nexport { subscribeAreaRegistry } from \"./ws-area_registry\";\n\nexport interface AreaRegistryEntry {\n  area_id: string;\n  name: string;\n  picture: string | null;\n  icon: string | null;\n  aliases: string[];\n}\n\nexport interface AreaEntityLookup {\n  [areaId: string]: EntityRegistryEntry[];\n}\n\nexport interface AreaDeviceLookup {\n  [areaId: string]: DeviceRegistryEntry[];\n}\n\nexport interface AreaRegistryEntryMutableParams {\n  name: string;\n  picture?: string | null;\n  icon?: string | null;\n  aliases?: string[];\n}\n\nexport const createAreaRegistryEntry = (\n  hass: HomeAssistant,\n  values: AreaRegistryEntryMutableParams\n) =>\n  hass.callWS<AreaRegistryEntry>({\n    type: \"config/area_registry/create\",\n    ...values,\n  });\n\nexport const updateAreaRegistryEntry = (\n  hass: HomeAssistant,\n  areaId: string,\n  updates: Partial<AreaRegistryEntryMutableParams>\n) =>\n  hass.callWS<AreaRegistryEntry>({\n    type: \"config/area_registry/update\",\n    area_id: areaId,\n    ...updates,\n  });\n\nexport const deleteAreaRegistryEntry = (hass: HomeAssistant, areaId: string) =>\n  hass.callWS({\n    type: \"config/area_registry/delete\",\n    area_id: areaId,\n  });\n\nexport const getAreaEntityLookup = (\n  entities: EntityRegistryEntry[]\n): AreaEntityLookup => {\n  const areaEntityLookup: AreaEntityLookup = {};\n  for (const entity of entities) {\n    if (!entity.area_id) {\n      continue;\n    }\n    if (!(entity.area_id in areaEntityLookup)) {\n      areaEntityLookup[entity.area_id] = [];\n    }\n    areaEntityLookup[entity.area_id].push(entity);\n  }\n  return areaEntityLookup;\n};\n\nexport const getAreaDeviceLookup = (\n  devices: DeviceRegistryEntry[]\n): AreaDeviceLookup => {\n  const areaDeviceLookup: AreaDeviceLookup = {};\n  for (const device of devices) {\n    if (!device.area_id) {\n      continue;\n    }\n    if (!(device.area_id in areaDeviceLookup)) {\n      areaDeviceLookup[device.area_id] = [];\n    }\n    areaDeviceLookup[device.area_id].push(device);\n  }\n  return areaDeviceLookup;\n};\n\nexport const areaCompare =\n  (entries?: HomeAssistant[\"areas\"], order?: string[]) =>\n  (a: string, b: string) => {\n    const indexA = order ? order.indexOf(a) : -1;\n    const indexB = order ? order.indexOf(b) : -1;\n    if (indexA === -1 && indexB === -1) {\n      const nameA = entries?.[a]?.name ?? a;\n      const nameB = entries?.[b]?.name ?? b;\n      return stringCompare(nameA, nameB);\n    }\n    if (indexA === -1) {\n      return 1;\n    }\n    if (indexB === -1) {\n      return -1;\n    }\n    return indexA - indexB;\n  };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}