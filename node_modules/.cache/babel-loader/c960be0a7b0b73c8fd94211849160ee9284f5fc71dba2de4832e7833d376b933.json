{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _decorate from \"@babel/runtime/helpers/decorate\";\nvar _templateObject;\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport { html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { slugify } from \"../../../../common/string/slugify\";\nimport \"../../../../components/ha-form/ha-form\";\nimport { DEFAULT_VIEW_LAYOUT, PANEL_VIEW_LAYOUT, SIDEBAR_VIEW_LAYOUT } from \"../../views/const\";\nexport var HuiViewEditor = _decorate([customElement(\"hui-view-editor\")], function (_initialize, _LitElement) {\n  var HuiViewEditor = /*#__PURE__*/function (_LitElement2) {\n    _inherits(HuiViewEditor, _LitElement2);\n    function HuiViewEditor() {\n      var _this;\n      _classCallCheck(this, HuiViewEditor);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, HuiViewEditor, [].concat(args));\n      _initialize(_assertThisInitialized(_this));\n      return _this;\n    }\n    return _createClass(HuiViewEditor);\n  }(_LitElement);\n  return {\n    F: HuiViewEditor,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"isNew\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_config\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_suggestedPath\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_schema\",\n      value: function value() {\n        return memoizeOne(function (localize) {\n          return [{\n            name: \"title\",\n            selector: {\n              text: {}\n            }\n          }, {\n            name: \"icon\",\n            selector: {\n              icon: {}\n            }\n          }, {\n            name: \"path\",\n            selector: {\n              text: {}\n            }\n          }, {\n            name: \"theme\",\n            selector: {\n              theme: {}\n            }\n          }, {\n            name: \"type\",\n            selector: {\n              select: {\n                options: [DEFAULT_VIEW_LAYOUT, SIDEBAR_VIEW_LAYOUT, PANEL_VIEW_LAYOUT].map(function (type) {\n                  return {\n                    value: type,\n                    label: localize(\"ui.panel.lovelace.editor.edit_view.types.\".concat(type))\n                  };\n                })\n              }\n            }\n          }, {\n            name: \"subview\",\n            selector: {\n              boolean: {}\n            }\n          }];\n        });\n      }\n    }, {\n      kind: \"set\",\n      key: \"config\",\n      value: function config(_config) {\n        this._config = _config;\n      }\n    }, {\n      kind: \"get\",\n      key: \"_type\",\n      value: function _type() {\n        if (!this._config) {\n          return DEFAULT_VIEW_LAYOUT;\n        }\n        return this._config.panel ? PANEL_VIEW_LAYOUT : this._config.type || DEFAULT_VIEW_LAYOUT;\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this.hass) {\n          return nothing;\n        }\n        var schema = this._schema(this.hass.localize);\n        var data = Object.assign(Object.assign({}, this._config), {}, {\n          type: this._type\n        });\n        return html(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      <ha-form\\n        .hass=\", \"\\n        .data=\", \"\\n        .schema=\", \"\\n        .computeLabel=\", \"\\n        .computeHelper=\", \"\\n        @value-changed=\", \"\\n      ></ha-form>\\n    \"])), this.hass, data, schema, this._computeLabel, this._computeHelper, this._valueChanged);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_valueChanged\",\n      value: function _valueChanged(ev) {\n        var config = ev.detail.value;\n        if (config.type === \"masonry\") {\n          delete config.type;\n        }\n        if (this.isNew && !this._suggestedPath && config.title && (!this._config.path || config.path === slugify(this._config.title || \"\", \"-\"))) {\n          config.path = slugify(config.title, \"-\");\n        }\n        fireEvent(this, \"view-config-changed\", {\n          config: config\n        });\n      }\n    }, {\n      kind: \"field\",\n      key: \"_computeLabel\",\n      value: function value() {\n        var _this2 = this;\n        return function (schema) {\n          switch (schema.name) {\n            case \"path\":\n              return _this2.hass.localize(\"ui.panel.lovelace.editor.card.generic.url\");\n            case \"type\":\n              return _this2.hass.localize(\"ui.panel.lovelace.editor.edit_view.type\");\n            case \"subview\":\n              return _this2.hass.localize(\"ui.panel.lovelace.editor.edit_view.subview\");\n            default:\n              return _this2.hass.localize(\"ui.panel.lovelace.editor.card.generic.\".concat(schema.name));\n          }\n        };\n      }\n    }, {\n      kind: \"field\",\n      key: \"_computeHelper\",\n      value: function value() {\n        var _this3 = this;\n        return function (schema) {\n          switch (schema.name) {\n            case \"subview\":\n              return _this3.hass.localize(\"ui.panel.lovelace.editor.edit_view.subview_helper\");\n            default:\n              return undefined;\n          }\n        };\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["html","LitElement","nothing","customElement","property","state","memoizeOne","fireEvent","slugify","DEFAULT_VIEW_LAYOUT","PANEL_VIEW_LAYOUT","SIDEBAR_VIEW_LAYOUT","HuiViewEditor","_decorate","_initialize","_LitElement","_LitElement2","_inherits","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_assertThisInitialized","_createClass","F","d","kind","decorators","attribute","key","value","type","Boolean","localize","name","selector","text","icon","theme","select","options","map","label","boolean","config","_config","_type","panel","render","hass","schema","_schema","data","Object","assign","_templateObject","_taggedTemplateLiteral","_computeLabel","_computeHelper","_valueChanged","ev","detail","isNew","_suggestedPath","title","path","_this2","_this3","undefined"],"sources":["/workspaces/frontend/src/panels/lovelace/editor/view-editor/hui-view-editor.ts"],"sourcesContent":["import { html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { slugify } from \"../../../../common/string/slugify\";\nimport type { LocalizeFunc } from \"../../../../common/translations/localize\";\nimport \"../../../../components/ha-form/ha-form\";\nimport type { SchemaUnion } from \"../../../../components/ha-form/types\";\nimport type { HomeAssistant } from \"../../../../types\";\nimport {\n  DEFAULT_VIEW_LAYOUT,\n  PANEL_VIEW_LAYOUT,\n  SIDEBAR_VIEW_LAYOUT,\n} from \"../../views/const\";\nimport { LovelaceViewConfig } from \"../../../../data/lovelace/config/view\";\n\ndeclare global {\n  interface HASSDomEvents {\n    \"view-config-changed\": {\n      config: LovelaceViewConfig;\n    };\n  }\n}\n\n@customElement(\"hui-view-editor\")\nexport class HuiViewEditor extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ type: Boolean }) public isNew = false;\n\n  @state() private _config!: LovelaceViewConfig;\n\n  private _suggestedPath = false;\n\n  private _schema = memoizeOne(\n    (localize: LocalizeFunc) =>\n      [\n        { name: \"title\", selector: { text: {} } },\n        {\n          name: \"icon\",\n          selector: {\n            icon: {},\n          },\n        },\n        { name: \"path\", selector: { text: {} } },\n        { name: \"theme\", selector: { theme: {} } },\n        {\n          name: \"type\",\n          selector: {\n            select: {\n              options: (\n                [\n                  DEFAULT_VIEW_LAYOUT,\n                  SIDEBAR_VIEW_LAYOUT,\n                  PANEL_VIEW_LAYOUT,\n                ] as const\n              ).map((type) => ({\n                value: type,\n                label: localize(\n                  `ui.panel.lovelace.editor.edit_view.types.${type}`\n                ),\n              })),\n            },\n          },\n        },\n        {\n          name: \"subview\",\n          selector: {\n            boolean: {},\n          },\n        },\n      ] as const\n  );\n\n  set config(config: LovelaceViewConfig) {\n    this._config = config;\n  }\n\n  get _type(): string {\n    if (!this._config) {\n      return DEFAULT_VIEW_LAYOUT;\n    }\n    return this._config.panel\n      ? PANEL_VIEW_LAYOUT\n      : this._config.type || DEFAULT_VIEW_LAYOUT;\n  }\n\n  protected render() {\n    if (!this.hass) {\n      return nothing;\n    }\n\n    const schema = this._schema(this.hass.localize);\n\n    const data = {\n      ...this._config,\n      type: this._type,\n    };\n\n    return html`\n      <ha-form\n        .hass=${this.hass}\n        .data=${data}\n        .schema=${schema}\n        .computeLabel=${this._computeLabel}\n        .computeHelper=${this._computeHelper}\n        @value-changed=${this._valueChanged}\n      ></ha-form>\n    `;\n  }\n\n  private _valueChanged(ev: CustomEvent): void {\n    const config = ev.detail.value as LovelaceViewConfig;\n\n    if (config.type === \"masonry\") {\n      delete config.type;\n    }\n\n    if (\n      this.isNew &&\n      !this._suggestedPath &&\n      config.title &&\n      (!this._config.path ||\n        config.path === slugify(this._config.title || \"\", \"-\"))\n    ) {\n      config.path = slugify(config.title, \"-\");\n    }\n\n    fireEvent(this, \"view-config-changed\", { config });\n  }\n\n  private _computeLabel = (\n    schema: SchemaUnion<ReturnType<typeof this._schema>>\n  ) => {\n    switch (schema.name) {\n      case \"path\":\n        return this.hass!.localize(\"ui.panel.lovelace.editor.card.generic.url\");\n      case \"type\":\n        return this.hass.localize(\"ui.panel.lovelace.editor.edit_view.type\");\n      case \"subview\":\n        return this.hass.localize(\"ui.panel.lovelace.editor.edit_view.subview\");\n      default:\n        return this.hass!.localize(\n          `ui.panel.lovelace.editor.card.generic.${schema.name}`\n        );\n    }\n  };\n\n  private _computeHelper = (\n    schema: SchemaUnion<ReturnType<typeof this._schema>>\n  ) => {\n    switch (schema.name) {\n      case \"subview\":\n        return this.hass.localize(\n          \"ui.panel.lovelace.editor.edit_view.subview_helper\"\n        );\n      default:\n        return undefined;\n    }\n  };\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-view-editor\": HuiViewEditor;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}