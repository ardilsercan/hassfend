{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/helpers/regeneratorRuntime\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _decorate from \"@babel/runtime/helpers/decorate\";\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9;\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.values.js\";\nimport \"@material/mwc-button/mwc-button\";\nimport \"@material/mwc-linear-progress/mwc-linear-progress\";\nvar mdiCheckCircle = \"M12 2C6.5 2 2 6.5 2 12S6.5 22 12 22 22 17.5 22 12 17.5 2 12 2M10 17L5 12L6.41 10.59L10 14.17L17.59 6.58L19 8L10 17Z\";\nvar mdiCloseCircle = \"M12,2C17.53,2 22,6.47 22,12C22,17.53 17.53,22 12,22C6.47,22 2,17.53 2,12C2,6.47 6.47,2 12,2M15.59,7L12,10.59L8.41,7L7,8.41L10.59,12L7,15.59L8.41,17L12,13.41L15.59,17L17,15.59L13.41,12L17,8.41L15.59,7Z\";\nvar mdiStethoscope = \"M19,8C19.56,8 20,8.43 20,9A1,1 0 0,1 19,10C18.43,10 18,9.55 18,9C18,8.43 18.43,8 19,8M2,2V11C2,13.96 4.19,16.5 7.14,16.91C7.76,19.92 10.42,22 13.5,22A6.5,6.5 0 0,0 20,15.5V11.81C21.16,11.39 22,10.29 22,9A3,3 0 0,0 19,6A3,3 0 0,0 16,9C16,10.29 16.84,11.4 18,11.81V15.41C18,17.91 16,19.91 13.5,19.91C11.5,19.91 9.82,18.7 9.22,16.9C12,16.3 14,13.8 14,11V2H10V5H12V11A4,4 0 0,1 8,15A4,4 0 0,1 4,11V5H6V2H2Z\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { fireEvent } from \"../../../../../common/dom/fire_event\";\nimport { createCloseHeading } from \"../../../../../components/ha-dialog\";\nimport { fetchZwaveNetworkStatus, rebuildZwaveNetworkRoutes, stopRebuildingZwaveNetworkRoutes, subscribeRebuildZwaveNetworkRoutesProgress } from \"../../../../../data/zwave_js\";\nimport { haStyleDialog } from \"../../../../../resources/styles\";\nvar DialogZWaveJSRebuildNetworkRoutes = _decorate([customElement(\"dialog-zwave_js-rebuild-network-routes\")], function (_initialize, _LitElement) {\n  var DialogZWaveJSRebuildNetworkRoutes = /*#__PURE__*/function (_LitElement2) {\n    _inherits(DialogZWaveJSRebuildNetworkRoutes, _LitElement2);\n    function DialogZWaveJSRebuildNetworkRoutes() {\n      var _this;\n      _classCallCheck(this, DialogZWaveJSRebuildNetworkRoutes);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, DialogZWaveJSRebuildNetworkRoutes, [].concat(args));\n      _initialize(_assertThisInitialized(_this));\n      return _this;\n    }\n    return _createClass(DialogZWaveJSRebuildNetworkRoutes);\n  }(_LitElement);\n  return {\n    F: DialogZWaveJSRebuildNetworkRoutes,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"entry_id\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_status\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_progress_total\",\n      value: function value() {\n        return 0;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_progress_finished\",\n      value: function value() {\n        return 0;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_progress_in_progress\",\n      value: function value() {\n        return 0;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_subscribed\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"showDialog\",\n      value: function showDialog(params) {\n        this._progress_total = 0;\n        this.entry_id = params.entry_id;\n        this._fetchData();\n      }\n    }, {\n      kind: \"method\",\n      key: \"closeDialog\",\n      value: function closeDialog() {\n        this.entry_id = undefined;\n        this._status = undefined;\n        this._progress_total = 0;\n        this._unsubscribe();\n        fireEvent(this, \"dialog-closed\", {\n          dialog: this.localName\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this.entry_id) {\n          return nothing;\n        }\n        return html(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      <ha-dialog\\n        open\\n        @closed=\", \"\\n        .heading=\", \"\\n      >\\n        \", \"\\n        \", \"\\n        \", \"\\n        \", \"\\n        \", \"\\n        \", \"\\n      </ha-dialog>\\n    \"])), this.closeDialog, createCloseHeading(this.hass, this.hass.localize(\"ui.panel.config.zwave_js.rebuild_network_routes.title\")), !this._status ? html(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n              <div class=\\\"flex-container\\\">\\n                <ha-svg-icon\\n                  .path=\", \"\\n                  class=\\\"introduction\\\"\\n                ></ha-svg-icon>\\n                <div class=\\\"status\\\">\\n                  <p>\\n                    \", \"\\n                  </p>\\n                </div>\\n              </div>\\n              <p>\\n                <em>\\n                  \", \"\\n                </em>\\n              </p>\\n              <mwc-button\\n                slot=\\\"primaryAction\\\"\\n                @click=\", \"\\n              >\\n                \", \"\\n              </mwc-button>\\n            \"])), mdiStethoscope, this.hass.localize(\"ui.panel.config.zwave_js.rebuild_network_routes.introduction\"), this.hass.localize(\"ui.panel.config.zwave_js.rebuild_network_routes.traffic_warning\"), this._startRebuildingRoutes, this.hass.localize(\"ui.panel.config.zwave_js.rebuild_network_routes.start_rebuilding_routes\")) : \"\", this._status === \"started\" ? html(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n              <div class=\\\"status\\\">\\n                <p>\\n                  <b>\\n                    \", \"\\n                  </b>\\n                </p>\\n                <p>\\n                  \", \"\\n                </p>\\n              </div>\\n              \", \"\\n              <mwc-button\\n                slot=\\\"secondaryAction\\\"\\n                @click=\", \"\\n              >\\n                \", \"\\n              </mwc-button>\\n              <mwc-button slot=\\\"primaryAction\\\" @click=\", \">\\n                \", \"\\n              </mwc-button>\\n            \"])), this.hass.localize(\"ui.panel.config.zwave_js.rebuild_network_routes.in_progress\"), this.hass.localize(\"ui.panel.config.zwave_js.rebuild_network_routes.run_in_background\"), !this._progress_total ? html(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n                    <mwc-linear-progress indeterminate> </mwc-linear-progress>\\n                  \"]))) : \"\", this._stopRebuildingRoutes, this.hass.localize(\"ui.panel.config.zwave_js.rebuild_network_routes.stop_rebuilding_routes\"), this.closeDialog, this.hass.localize(\"ui.common.close\")) : \"\", this._status === \"failed\" ? html(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"\\n              <div class=\\\"flex-container\\\">\\n                <ha-svg-icon\\n                  .path=\", \"\\n                  class=\\\"failed\\\"\\n                ></ha-svg-icon>\\n                <div class=\\\"status\\\">\\n                  <p>\\n                    \", \"\\n                  </p>\\n                </div>\\n              </div>\\n              <mwc-button slot=\\\"primaryAction\\\" @click=\", \">\\n                \", \"\\n              </mwc-button>\\n            \"])), mdiCloseCircle, this.hass.localize(\"ui.panel.config.zwave_js.rebuild_network_routes.rebuilding_routes_failed\"), this.closeDialog, this.hass.localize(\"ui.common.close\")) : \"\", this._status === \"finished\" ? html(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"\\n              <div class=\\\"flex-container\\\">\\n                <ha-svg-icon\\n                  .path=\", \"\\n                  class=\\\"success\\\"\\n                ></ha-svg-icon>\\n                <div class=\\\"status\\\">\\n                  <p>\\n                    \", \"\\n                  </p>\\n                </div>\\n              </div>\\n              <mwc-button slot=\\\"primaryAction\\\" @click=\", \">\\n                \", \"\\n              </mwc-button>\\n            \"])), mdiCheckCircle, this.hass.localize(\"ui.panel.config.zwave_js.rebuild_network_routes.rebuilding_routes_complete\"), this.closeDialog, this.hass.localize(\"ui.common.close\")) : \"\", this._status === \"cancelled\" ? html(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral([\"\\n              <div class=\\\"flex-container\\\">\\n                <ha-svg-icon\\n                  .path=\", \"\\n                  class=\\\"failed\\\"\\n                ></ha-svg-icon>\\n                <div class=\\\"status\\\">\\n                  <p>\\n                    \", \"\\n                  </p>\\n                </div>\\n              </div>\\n              <mwc-button slot=\\\"primaryAction\\\" @click=\", \">\\n                \", \"\\n              </mwc-button>\\n            \"])), mdiCloseCircle, this.hass.localize(\"ui.panel.config.zwave_js.rebuild_network_routes.rebuilding_routes_cancelled\"), this.closeDialog, this.hass.localize(\"ui.common.close\")) : \"\", this._progress_total && this._status !== \"finished\" ? html(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral([\"\\n              <mwc-linear-progress\\n                determinate\\n                .progress=\", \"\\n                .buffer=\", \"\\n              >\\n              </mwc-linear-progress>\\n            \"])), this._progress_finished, this._progress_in_progress) : \"\");\n      }\n    }, {\n      kind: \"method\",\n      key: \"_fetchData\",\n      value: function () {\n        var _fetchData2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n          var network;\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                if (this.hass) {\n                  _context.next = 2;\n                  break;\n                }\n                return _context.abrupt(\"return\");\n              case 2:\n                _context.next = 4;\n                return fetchZwaveNetworkStatus(this.hass, {\n                  entry_id: this.entry_id\n                });\n              case 4:\n                network = _context.sent;\n                if (network.controller.is_rebuilding_routes) {\n                  this._status = \"started\";\n                  this._subscribed = subscribeRebuildZwaveNetworkRoutesProgress(this.hass, this.entry_id, this._handleMessage.bind(this));\n                }\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee, this);\n        }));\n        function _fetchData() {\n          return _fetchData2.apply(this, arguments);\n        }\n        return _fetchData;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"_startRebuildingRoutes\",\n      value: function _startRebuildingRoutes() {\n        if (!this.hass) {\n          return;\n        }\n        rebuildZwaveNetworkRoutes(this.hass, this.entry_id);\n        this._status = \"started\";\n        this._subscribed = subscribeRebuildZwaveNetworkRoutesProgress(this.hass, this.entry_id, this._handleMessage.bind(this));\n      }\n    }, {\n      kind: \"method\",\n      key: \"_stopRebuildingRoutes\",\n      value: function _stopRebuildingRoutes() {\n        if (!this.hass) {\n          return;\n        }\n        stopRebuildingZwaveNetworkRoutes(this.hass, this.entry_id);\n        this._unsubscribe();\n        this._status = \"cancelled\";\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleMessage\",\n      value: function _handleMessage(message) {\n        if (message.event === \"rebuild routes progress\") {\n          var finished = 0;\n          var in_progress = 0;\n          for (var _i = 0, _Object$values = Object.values(message.rebuild_routes_status); _i < _Object$values.length; _i++) {\n            var status = _Object$values[_i];\n            if (status === \"pending\") {\n              in_progress++;\n            }\n            if ([\"skipped\", \"failed\", \"done\"].includes(status)) {\n              finished++;\n            }\n          }\n          this._progress_total = Object.keys(message.rebuild_routes_status).length;\n          this._progress_finished = finished / this._progress_total;\n          this._progress_in_progress = in_progress / this._progress_total;\n        }\n        if (message.event === \"rebuild routes done\") {\n          this._unsubscribe();\n          this._status = \"finished\";\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_unsubscribe\",\n      value: function _unsubscribe() {\n        if (this._subscribed) {\n          this._subscribed.then(function (unsub) {\n            return unsub();\n          });\n          this._subscribed = undefined;\n        }\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [haStyleDialog, css(_templateObject9 || (_templateObject9 = _taggedTemplateLiteral([\"\\n        .success {\\n          color: var(--success-color);\\n        }\\n\\n        .failed {\\n          color: var(--error-color);\\n        }\\n\\n        .flex-container {\\n          display: flex;\\n          align-items: center;\\n        }\\n\\n        ha-svg-icon {\\n          width: 68px;\\n          height: 48px;\\n        }\\n\\n        ha-svg-icon.introduction {\\n          color: var(--primary-color);\\n        }\\n\\n        .flex-container ha-svg-icon {\\n          margin-right: 20px;\\n          margin-inline-end: 20px;\\n          margin-inline-start: initial;\\n        }\\n\\n        mwc-linear-progress {\\n          margin-top: 8px;\\n        }\\n      \"])))];\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["mdiCheckCircle","mdiCloseCircle","mdiStethoscope","css","html","LitElement","nothing","customElement","property","state","fireEvent","createCloseHeading","fetchZwaveNetworkStatus","rebuildZwaveNetworkRoutes","stopRebuildingZwaveNetworkRoutes","subscribeRebuildZwaveNetworkRoutesProgress","haStyleDialog","DialogZWaveJSRebuildNetworkRoutes","_decorate","_initialize","_LitElement","_LitElement2","_inherits","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_assertThisInitialized","_createClass","F","d","kind","decorators","attribute","key","value","showDialog","params","_progress_total","entry_id","_fetchData","closeDialog","undefined","_status","_unsubscribe","dialog","localName","render","_templateObject","_taggedTemplateLiteral","hass","localize","_templateObject2","_startRebuildingRoutes","_templateObject3","_templateObject4","_stopRebuildingRoutes","_templateObject5","_templateObject6","_templateObject7","_templateObject8","_progress_finished","_progress_in_progress","_fetchData2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","network","wrap","_callee$","_context","prev","next","abrupt","sent","controller","is_rebuilding_routes","_subscribed","_handleMessage","bind","stop","apply","message","event","finished","in_progress","_i","_Object$values","Object","values","rebuild_routes_status","status","includes","keys","then","unsub","static","styles","_templateObject9"],"sources":["/Users/sercanardil/Desktop/frontend/src/panels/config/integrations/integration-panels/zwave_js/dialog-zwave_js-rebuild-network-routes.ts"],"sourcesContent":["import \"@material/mwc-button/mwc-button\";\nimport \"@material/mwc-linear-progress/mwc-linear-progress\";\nimport { mdiCheckCircle, mdiCloseCircle, mdiStethoscope } from \"@mdi/js\";\nimport { UnsubscribeFunc } from \"home-assistant-js-websocket\";\nimport { css, CSSResultGroup, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { fireEvent } from \"../../../../../common/dom/fire_event\";\nimport { createCloseHeading } from \"../../../../../components/ha-dialog\";\nimport {\n  fetchZwaveNetworkStatus,\n  rebuildZwaveNetworkRoutes,\n  stopRebuildingZwaveNetworkRoutes,\n  subscribeRebuildZwaveNetworkRoutesProgress,\n  ZWaveJSRebuildRoutesStatusMessage,\n  ZWaveJSNetwork,\n} from \"../../../../../data/zwave_js\";\nimport { haStyleDialog } from \"../../../../../resources/styles\";\nimport { HomeAssistant } from \"../../../../../types\";\nimport { ZWaveJSRebuildNetworkRoutesDialogParams } from \"./show-dialog-zwave_js-rebuild-network-routes\";\n\n@customElement(\"dialog-zwave_js-rebuild-network-routes\")\nclass DialogZWaveJSRebuildNetworkRoutes extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @state() private entry_id?: string;\n\n  @state() private _status?: string;\n\n  @state() private _progress_total = 0;\n\n  @state() private _progress_finished = 0;\n\n  @state() private _progress_in_progress = 0;\n\n  private _subscribed?: Promise<UnsubscribeFunc>;\n\n  public showDialog(params: ZWaveJSRebuildNetworkRoutesDialogParams): void {\n    this._progress_total = 0;\n    this.entry_id = params.entry_id;\n    this._fetchData();\n  }\n\n  public closeDialog(): void {\n    this.entry_id = undefined;\n    this._status = undefined;\n    this._progress_total = 0;\n\n    this._unsubscribe();\n\n    fireEvent(this, \"dialog-closed\", { dialog: this.localName });\n  }\n\n  protected render() {\n    if (!this.entry_id) {\n      return nothing;\n    }\n\n    return html`\n      <ha-dialog\n        open\n        @closed=${this.closeDialog}\n        .heading=${createCloseHeading(\n          this.hass,\n          this.hass.localize(\n            \"ui.panel.config.zwave_js.rebuild_network_routes.title\"\n          )\n        )}\n      >\n        ${!this._status\n          ? html`\n              <div class=\"flex-container\">\n                <ha-svg-icon\n                  .path=${mdiStethoscope}\n                  class=\"introduction\"\n                ></ha-svg-icon>\n                <div class=\"status\">\n                  <p>\n                    ${this.hass.localize(\n                      \"ui.panel.config.zwave_js.rebuild_network_routes.introduction\"\n                    )}\n                  </p>\n                </div>\n              </div>\n              <p>\n                <em>\n                  ${this.hass.localize(\n                    \"ui.panel.config.zwave_js.rebuild_network_routes.traffic_warning\"\n                  )}\n                </em>\n              </p>\n              <mwc-button\n                slot=\"primaryAction\"\n                @click=${this._startRebuildingRoutes}\n              >\n                ${this.hass.localize(\n                  \"ui.panel.config.zwave_js.rebuild_network_routes.start_rebuilding_routes\"\n                )}\n              </mwc-button>\n            `\n          : ``}\n        ${this._status === \"started\"\n          ? html`\n              <div class=\"status\">\n                <p>\n                  <b>\n                    ${this.hass.localize(\n                      \"ui.panel.config.zwave_js.rebuild_network_routes.in_progress\"\n                    )}\n                  </b>\n                </p>\n                <p>\n                  ${this.hass.localize(\n                    \"ui.panel.config.zwave_js.rebuild_network_routes.run_in_background\"\n                  )}\n                </p>\n              </div>\n              ${!this._progress_total\n                ? html`\n                    <mwc-linear-progress indeterminate> </mwc-linear-progress>\n                  `\n                : \"\"}\n              <mwc-button\n                slot=\"secondaryAction\"\n                @click=${this._stopRebuildingRoutes}\n              >\n                ${this.hass.localize(\n                  \"ui.panel.config.zwave_js.rebuild_network_routes.stop_rebuilding_routes\"\n                )}\n              </mwc-button>\n              <mwc-button slot=\"primaryAction\" @click=${this.closeDialog}>\n                ${this.hass.localize(\"ui.common.close\")}\n              </mwc-button>\n            `\n          : ``}\n        ${this._status === \"failed\"\n          ? html`\n              <div class=\"flex-container\">\n                <ha-svg-icon\n                  .path=${mdiCloseCircle}\n                  class=\"failed\"\n                ></ha-svg-icon>\n                <div class=\"status\">\n                  <p>\n                    ${this.hass.localize(\n                      \"ui.panel.config.zwave_js.rebuild_network_routes.rebuilding_routes_failed\"\n                    )}\n                  </p>\n                </div>\n              </div>\n              <mwc-button slot=\"primaryAction\" @click=${this.closeDialog}>\n                ${this.hass.localize(\"ui.common.close\")}\n              </mwc-button>\n            `\n          : ``}\n        ${this._status === \"finished\"\n          ? html`\n              <div class=\"flex-container\">\n                <ha-svg-icon\n                  .path=${mdiCheckCircle}\n                  class=\"success\"\n                ></ha-svg-icon>\n                <div class=\"status\">\n                  <p>\n                    ${this.hass.localize(\n                      \"ui.panel.config.zwave_js.rebuild_network_routes.rebuilding_routes_complete\"\n                    )}\n                  </p>\n                </div>\n              </div>\n              <mwc-button slot=\"primaryAction\" @click=${this.closeDialog}>\n                ${this.hass.localize(\"ui.common.close\")}\n              </mwc-button>\n            `\n          : ``}\n        ${this._status === \"cancelled\"\n          ? html`\n              <div class=\"flex-container\">\n                <ha-svg-icon\n                  .path=${mdiCloseCircle}\n                  class=\"failed\"\n                ></ha-svg-icon>\n                <div class=\"status\">\n                  <p>\n                    ${this.hass.localize(\n                      \"ui.panel.config.zwave_js.rebuild_network_routes.rebuilding_routes_cancelled\"\n                    )}\n                  </p>\n                </div>\n              </div>\n              <mwc-button slot=\"primaryAction\" @click=${this.closeDialog}>\n                ${this.hass.localize(\"ui.common.close\")}\n              </mwc-button>\n            `\n          : ``}\n        ${this._progress_total && this._status !== \"finished\"\n          ? html`\n              <mwc-linear-progress\n                determinate\n                .progress=${this._progress_finished}\n                .buffer=${this._progress_in_progress}\n              >\n              </mwc-linear-progress>\n            `\n          : \"\"}\n      </ha-dialog>\n    `;\n  }\n\n  private async _fetchData(): Promise<void> {\n    if (!this.hass) {\n      return;\n    }\n    const network: ZWaveJSNetwork = await fetchZwaveNetworkStatus(this.hass!, {\n      entry_id: this.entry_id!,\n    });\n    if (network.controller.is_rebuilding_routes) {\n      this._status = \"started\";\n      this._subscribed = subscribeRebuildZwaveNetworkRoutesProgress(\n        this.hass,\n        this.entry_id!,\n        this._handleMessage.bind(this)\n      );\n    }\n  }\n\n  private _startRebuildingRoutes(): void {\n    if (!this.hass) {\n      return;\n    }\n    rebuildZwaveNetworkRoutes(this.hass, this.entry_id!);\n    this._status = \"started\";\n    this._subscribed = subscribeRebuildZwaveNetworkRoutesProgress(\n      this.hass,\n      this.entry_id!,\n      this._handleMessage.bind(this)\n    );\n  }\n\n  private _stopRebuildingRoutes(): void {\n    if (!this.hass) {\n      return;\n    }\n    stopRebuildingZwaveNetworkRoutes(this.hass, this.entry_id!);\n    this._unsubscribe();\n    this._status = \"cancelled\";\n  }\n\n  private _handleMessage(message: ZWaveJSRebuildRoutesStatusMessage): void {\n    if (message.event === \"rebuild routes progress\") {\n      let finished = 0;\n      let in_progress = 0;\n      for (const status of Object.values(message.rebuild_routes_status)) {\n        if (status === \"pending\") {\n          in_progress++;\n        }\n        if ([\"skipped\", \"failed\", \"done\"].includes(status)) {\n          finished++;\n        }\n      }\n      this._progress_total = Object.keys(message.rebuild_routes_status).length;\n      this._progress_finished = finished / this._progress_total;\n      this._progress_in_progress = in_progress / this._progress_total;\n    }\n    if (message.event === \"rebuild routes done\") {\n      this._unsubscribe();\n      this._status = \"finished\";\n    }\n  }\n\n  private _unsubscribe(): void {\n    if (this._subscribed) {\n      this._subscribed.then((unsub) => unsub());\n      this._subscribed = undefined;\n    }\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyleDialog,\n      css`\n        .success {\n          color: var(--success-color);\n        }\n\n        .failed {\n          color: var(--error-color);\n        }\n\n        .flex-container {\n          display: flex;\n          align-items: center;\n        }\n\n        ha-svg-icon {\n          width: 68px;\n          height: 48px;\n        }\n\n        ha-svg-icon.introduction {\n          color: var(--primary-color);\n        }\n\n        .flex-container ha-svg-icon {\n          margin-right: 20px;\n          margin-inline-end: 20px;\n          margin-inline-start: initial;\n        }\n\n        mwc-linear-progress {\n          margin-top: 8px;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"dialog-zwave_js-rebuild-network-routes\": DialogZWaveJSRebuildNetworkRoutes;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}