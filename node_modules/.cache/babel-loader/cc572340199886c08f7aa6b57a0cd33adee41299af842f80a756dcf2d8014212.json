{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _decorate from \"@babel/runtime/helpers/decorate\";\nvar _templateObject;\nimport \"core-js/modules/es.array.concat.js\";\nimport { FormfieldBase } from \"@material/mwc-formfield/mwc-formfield-base\";\nimport { styles } from \"@material/mwc-formfield/mwc-formfield.css\";\nimport { css } from \"lit\";\nimport { customElement } from \"lit/decorators\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nexport var HaFormfield = _decorate([customElement(\"ha-formfield\")], function (_initialize, _FormfieldBase) {\n  var HaFormfield = /*#__PURE__*/function (_FormfieldBase2) {\n    _inherits(HaFormfield, _FormfieldBase2);\n    function HaFormfield() {\n      var _this;\n      _classCallCheck(this, HaFormfield);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, HaFormfield, [].concat(args));\n      _initialize(_assertThisInitialized(_this));\n      return _this;\n    }\n    return _createClass(HaFormfield);\n  }(_FormfieldBase);\n  return {\n    F: HaFormfield,\n    d: [{\n      kind: \"method\",\n      key: \"_labelClick\",\n      value: function _labelClick() {\n        var input = this.input;\n        if (!input) return;\n        input.focus();\n        if (input.disabled) {\n          return;\n        }\n        switch (input.tagName) {\n          case \"HA-CHECKBOX\":\n            input.checked = !input.checked;\n            fireEvent(input, \"change\");\n            break;\n          case \"HA-RADIO\":\n            input.checked = true;\n            fireEvent(input, \"change\");\n            break;\n          default:\n            input.click();\n            break;\n        }\n      }\n    }, {\n      kind: \"field\",\n      static: true,\n      key: \"styles\",\n      value: function value() {\n        return [styles, css(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      :host(:not([alignEnd])) ::slotted(ha-switch) {\\n        margin-right: 10px;\\n        margin-inline-end: 10px;\\n        margin-inline-start: inline;\\n      }\\n      .mdc-form-field > label {\\n        direction: var(--direction);\\n        margin-inline-start: 0;\\n        margin-inline-end: auto;\\n        padding-inline-start: 4px;\\n        padding-inline-end: 0;\\n      }\\n    \"])))];\n      }\n    }]\n  };\n}, FormfieldBase);","map":{"version":3,"names":["FormfieldBase","styles","css","customElement","fireEvent","HaFormfield","_decorate","_initialize","_FormfieldBase","_FormfieldBase2","_inherits","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_assertThisInitialized","_createClass","F","d","kind","key","value","_labelClick","input","focus","disabled","tagName","checked","click","static","_templateObject","_taggedTemplateLiteral"],"sources":["/workspaces/frontend/src/components/ha-formfield.ts"],"sourcesContent":["import { FormfieldBase } from \"@material/mwc-formfield/mwc-formfield-base\";\nimport { styles } from \"@material/mwc-formfield/mwc-formfield.css\";\nimport { css } from \"lit\";\nimport { customElement } from \"lit/decorators\";\nimport { fireEvent } from \"../common/dom/fire_event\";\n\n@customElement(\"ha-formfield\")\nexport class HaFormfield extends FormfieldBase {\n  protected _labelClick() {\n    const input = this.input as HTMLInputElement | undefined;\n    if (!input) return;\n\n    input.focus();\n    if (input.disabled) {\n      return;\n    }\n    switch (input.tagName) {\n      case \"HA-CHECKBOX\":\n        input.checked = !input.checked;\n        fireEvent(input, \"change\");\n        break;\n      case \"HA-RADIO\":\n        input.checked = true;\n        fireEvent(input, \"change\");\n        break;\n      default:\n        input.click();\n        break;\n    }\n  }\n\n  static override styles = [\n    styles,\n    css`\n      :host(:not([alignEnd])) ::slotted(ha-switch) {\n        margin-right: 10px;\n        margin-inline-end: 10px;\n        margin-inline-start: inline;\n      }\n      .mdc-form-field > label {\n        direction: var(--direction);\n        margin-inline-start: 0;\n        margin-inline-end: auto;\n        padding-inline-start: 4px;\n        padding-inline-end: 0;\n      }\n    `,\n  ];\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-formfield\": HaFormfield;\n  }\n}\n"],"mappings":";;;;;;;;;AAAA,SAASA,aAAa,QAAQ,4CAA4C;AAC1E,SAASC,MAAM,QAAQ,2CAA2C;AAClE,SAASC,GAAG,QAAQ,KAAK;AACzB,SAASC,aAAa,QAAQ,gBAAgB;AAC9C,SAASC,SAAS,QAAQ,0BAA0B;AAEpD,WACaC,WAAW,GAAAC,SAAA,EADvBH,aAAa,CAAC,cAAc,CAAC,aAAAI,WAAA,EAAAC,cAAA;EAAA,IACjBH,WAAW,0BAAAI,eAAA;IAAAC,SAAA,CAAAL,WAAA,EAAAI,eAAA;IAAA,SAAAJ,YAAA;MAAA,IAAAM,KAAA;MAAAC,eAAA,OAAAP,WAAA;MAAA,SAAAQ,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAAC,IAAA,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;QAAAF,IAAA,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;MAAA;MAAAP,KAAA,GAAAQ,UAAA,OAAAd,WAAA,KAAAe,MAAA,CAAAJ,IAAA;MAAAT,WAAA,CAAAc,sBAAA,CAAAV,KAAA;MAAA,OAAAA,KAAA;IAAA;IAAA,OAAAW,YAAA,CAAAjB,WAAA;EAAA,EAAAG,cAAA;EAAA;IAAAe,CAAA,EAAXlB,WAAW;IAAAmB,CAAA;MAAAC,IAAA;MAAAC,GAAA;MAAAC,KAAA,EACtB,SAAAC,YAAA,EAAwB;QACtB,IAAMC,KAAK,GAAG,IAAI,CAACA,KAAqC;QACxD,IAAI,CAACA,KAAK,EAAE;QAEZA,KAAK,CAACC,KAAK,CAAC,CAAC;QACb,IAAID,KAAK,CAACE,QAAQ,EAAE;UAClB;QACF;QACA,QAAQF,KAAK,CAACG,OAAO;UACnB,KAAK,aAAa;YAChBH,KAAK,CAACI,OAAO,GAAG,CAACJ,KAAK,CAACI,OAAO;YAC9B7B,SAAS,CAACyB,KAAK,EAAE,QAAQ,CAAC;YAC1B;UACF,KAAK,UAAU;YACbA,KAAK,CAACI,OAAO,GAAG,IAAI;YACpB7B,SAAS,CAACyB,KAAK,EAAE,QAAQ,CAAC;YAC1B;UACF;YACEA,KAAK,CAACK,KAAK,CAAC,CAAC;YACb;QACJ;MACF;IAAC;MAAAT,IAAA;MAAAU,MAAA;MAAAT,GAAA;MAAAC,KAAA,WAAAA,MAAA;QAAA,OAEwB,CACvB1B,MAAM,EACNC,GAAG,CAAAkC,eAAA,KAAAA,eAAA,GAAAC,sBAAA,0YAcJ;MAAA;IAAA;EAAA;AAAA,GAxC8BrC,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}