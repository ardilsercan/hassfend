{"ast":null,"code":"import { timeCacheEntityPromiseFunc } from \"../common/util/time-cache-entity-promise-func\";\nimport { getSignedPath } from \"./auth\";\nexport const CAMERA_ORIENTATIONS = [1, 2, 3, 4, 6, 8];\nexport const CAMERA_SUPPORT_ON_OFF = 1;\nexport const CAMERA_SUPPORT_STREAM = 2;\nexport const STREAM_TYPE_HLS = \"hls\";\nexport const STREAM_TYPE_WEB_RTC = \"web_rtc\";\nexport const cameraUrlWithWidthHeight = (base_url, width, height) => `${base_url}&width=${width}&height=${height}`;\nexport const computeMJPEGStreamUrl = entity => `/api/camera_proxy_stream/${entity.entity_id}?token=${entity.attributes.access_token}`;\nexport const fetchThumbnailUrlWithCache = async (hass, entityId, width, height) => {\n  const base_url = await timeCacheEntityPromiseFunc(\"_cameraTmbUrl\", 9000, fetchThumbnailUrl, hass, entityId);\n  return cameraUrlWithWidthHeight(base_url, width, height);\n};\nexport const fetchThumbnailUrl = async (hass, entityId) => {\n  const path = await getSignedPath(hass, `/api/camera_proxy/${entityId}`);\n  return hass.hassUrl(path.path);\n};\nexport const fetchStreamUrl = async (hass, entityId, format) => {\n  const data = {\n    type: \"camera/stream\",\n    entity_id: entityId\n  };\n  if (format) {\n    // @ts-ignore\n    data.format = format;\n  }\n  const stream = await hass.callWS(data);\n  stream.url = hass.hassUrl(stream.url);\n  return stream;\n};\nexport const handleWebRtcOffer = (hass, entityId, offer) => hass.callWS({\n  type: \"camera/web_rtc_offer\",\n  entity_id: entityId,\n  offer: offer\n});\nexport const fetchCameraPrefs = (hass, entityId) => hass.callWS({\n  type: \"camera/get_prefs\",\n  entity_id: entityId\n});\nexport const updateCameraPrefs = (hass, entityId, prefs) => hass.callWS({\n  type: \"camera/update_prefs\",\n  entity_id: entityId,\n  ...prefs\n});\nconst CAMERA_MEDIA_SOURCE_PREFIX = \"media-source://camera/\";\nexport const isCameraMediaSource = mediaContentId => mediaContentId.startsWith(CAMERA_MEDIA_SOURCE_PREFIX);\nexport const getEntityIdFromCameraMediaSource = mediaContentId => mediaContentId.substring(CAMERA_MEDIA_SOURCE_PREFIX.length);","map":{"version":3,"names":["timeCacheEntityPromiseFunc","getSignedPath","CAMERA_ORIENTATIONS","CAMERA_SUPPORT_ON_OFF","CAMERA_SUPPORT_STREAM","STREAM_TYPE_HLS","STREAM_TYPE_WEB_RTC","cameraUrlWithWidthHeight","base_url","width","height","computeMJPEGStreamUrl","entity","entity_id","attributes","access_token","fetchThumbnailUrlWithCache","hass","entityId","fetchThumbnailUrl","path","hassUrl","fetchStreamUrl","format","data","type","stream","callWS","url","handleWebRtcOffer","offer","fetchCameraPrefs","updateCameraPrefs","prefs","CAMERA_MEDIA_SOURCE_PREFIX","isCameraMediaSource","mediaContentId","startsWith","getEntityIdFromCameraMediaSource","substring","length"],"sources":["/workspaces/frontend/src/data/camera.ts"],"sourcesContent":["import {\n  HassEntityAttributeBase,\n  HassEntityBase,\n} from \"home-assistant-js-websocket\";\nimport { timeCacheEntityPromiseFunc } from \"../common/util/time-cache-entity-promise-func\";\nimport { HomeAssistant } from \"../types\";\nimport { getSignedPath } from \"./auth\";\n\nexport const CAMERA_ORIENTATIONS = [1, 2, 3, 4, 6, 8];\nexport const CAMERA_SUPPORT_ON_OFF = 1;\nexport const CAMERA_SUPPORT_STREAM = 2;\n\nexport const STREAM_TYPE_HLS = \"hls\";\nexport const STREAM_TYPE_WEB_RTC = \"web_rtc\";\n\ninterface CameraEntityAttributes extends HassEntityAttributeBase {\n  model_name: string;\n  access_token: string;\n  brand: string;\n  motion_detection: boolean;\n  frontend_stream_type: string;\n}\n\nexport interface CameraEntity extends HassEntityBase {\n  attributes: CameraEntityAttributes;\n}\n\nexport interface CameraPreferences {\n  preload_stream: boolean;\n  orientation: number;\n}\n\nexport interface CameraThumbnail {\n  content_type: string;\n  content: string;\n}\n\nexport interface Stream {\n  url: string;\n}\n\nexport interface WebRtcAnswer {\n  answer: string;\n}\n\nexport const cameraUrlWithWidthHeight = (\n  base_url: string,\n  width: number,\n  height: number\n) => `${base_url}&width=${width}&height=${height}`;\n\nexport const computeMJPEGStreamUrl = (entity: CameraEntity) =>\n  `/api/camera_proxy_stream/${entity.entity_id}?token=${entity.attributes.access_token}`;\n\nexport const fetchThumbnailUrlWithCache = async (\n  hass: HomeAssistant,\n  entityId: string,\n  width: number,\n  height: number\n) => {\n  const base_url = await timeCacheEntityPromiseFunc(\n    \"_cameraTmbUrl\",\n    9000,\n    fetchThumbnailUrl,\n    hass,\n    entityId\n  );\n  return cameraUrlWithWidthHeight(base_url, width, height);\n};\n\nexport const fetchThumbnailUrl = async (\n  hass: HomeAssistant,\n  entityId: string\n) => {\n  const path = await getSignedPath(hass, `/api/camera_proxy/${entityId}`);\n  return hass.hassUrl(path.path);\n};\n\nexport const fetchStreamUrl = async (\n  hass: HomeAssistant,\n  entityId: string,\n  format?: \"hls\"\n) => {\n  const data = {\n    type: \"camera/stream\",\n    entity_id: entityId,\n  };\n  if (format) {\n    // @ts-ignore\n    data.format = format;\n  }\n  const stream = await hass.callWS<Stream>(data);\n  stream.url = hass.hassUrl(stream.url);\n  return stream;\n};\n\nexport const handleWebRtcOffer = (\n  hass: HomeAssistant,\n  entityId: string,\n  offer: string\n) =>\n  hass.callWS<WebRtcAnswer>({\n    type: \"camera/web_rtc_offer\",\n    entity_id: entityId,\n    offer: offer,\n  });\n\nexport const fetchCameraPrefs = (hass: HomeAssistant, entityId: string) =>\n  hass.callWS<CameraPreferences>({\n    type: \"camera/get_prefs\",\n    entity_id: entityId,\n  });\n\ntype ValueOf<T extends any[]> = T[number];\nexport const updateCameraPrefs = (\n  hass: HomeAssistant,\n  entityId: string,\n  prefs: {\n    preload_stream?: boolean;\n    orientation?: ValueOf<typeof CAMERA_ORIENTATIONS>;\n  }\n) =>\n  hass.callWS<CameraPreferences>({\n    type: \"camera/update_prefs\",\n    entity_id: entityId,\n    ...prefs,\n  });\n\nconst CAMERA_MEDIA_SOURCE_PREFIX = \"media-source://camera/\";\n\nexport const isCameraMediaSource = (mediaContentId: string) =>\n  mediaContentId.startsWith(CAMERA_MEDIA_SOURCE_PREFIX);\n\nexport const getEntityIdFromCameraMediaSource = (mediaContentId: string) =>\n  mediaContentId.substring(CAMERA_MEDIA_SOURCE_PREFIX.length);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}