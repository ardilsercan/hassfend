{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _decorate from \"@babel/runtime/helpers/decorate\";\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8;\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.pad-start.js\";\nimport \"@material/mwc-list/mwc-list-item\";\nimport { css, html, LitElement } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { ifDefined } from \"lit/directives/if-defined\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { stopPropagation } from \"../common/dom/stop_propagation\";\nimport \"./ha-select\";\nimport \"./ha-input-helper-text\";\nexport var HaBaseTimeInput = _decorate([customElement(\"ha-base-time-input\")], function (_initialize, _LitElement) {\n  var HaBaseTimeInput = /*#__PURE__*/function (_LitElement2) {\n    _inherits(HaBaseTimeInput, _LitElement2);\n    function HaBaseTimeInput() {\n      var _this;\n      _classCallCheck(this, HaBaseTimeInput);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, HaBaseTimeInput, [].concat(args));\n      _initialize(_assertThisInitialized(_this));\n      return _this;\n    }\n    return _createClass(HaBaseTimeInput);\n  }(_LitElement);\n  return {\n    F: HaBaseTimeInput,\n    d: [{\n      kind: \"field\",\n      decorators: [property()],\n      key: \"label\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"helper\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"autoValidate\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"required\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Number\n      })],\n      key: \"format\",\n      value: function value() {\n        return 12;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"disabled\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Number\n      })],\n      key: \"days\",\n      value: function value() {\n        return 0;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Number\n      })],\n      key: \"hours\",\n      value: function value() {\n        return 0;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Number\n      })],\n      key: \"minutes\",\n      value: function value() {\n        return 0;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Number\n      })],\n      key: \"seconds\",\n      value: function value() {\n        return 0;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Number\n      })],\n      key: \"milliseconds\",\n      value: function value() {\n        return 0;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"dayLabel\",\n      value: function value() {\n        return \"\";\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"hourLabel\",\n      value: function value() {\n        return \"\";\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"minLabel\",\n      value: function value() {\n        return \"\";\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"secLabel\",\n      value: function value() {\n        return \"\";\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"millisecLabel\",\n      value: function value() {\n        return \"\";\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"enableSecond\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"enableMillisecond\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"enableDay\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"noHoursLimit\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"amPm\",\n      value: function value() {\n        return \"AM\";\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value:\n      /**\n       * Label for the input\n       */\n\n      /**\n       * Helper for the input\n       */\n\n      /**\n       * auto validate time inputs\n       */\n\n      /**\n       * determines if inputs are required\n       */\n\n      /**\n       * 12 or 24 hr format\n       */\n\n      /**\n       * disables the inputs\n       */\n\n      /**\n       * day\n       */\n\n      /**\n       * hour\n       */\n\n      /**\n       * minute\n       */\n\n      /**\n       * second\n       */\n\n      /**\n       * milli second\n       */\n\n      /**\n       * Label for the day input\n       */\n\n      /**\n       * Label for the hour input\n       */\n\n      /**\n       * Label for the min input\n       */\n\n      /**\n       * Label for the sec input\n       */\n\n      /**\n       * Label for the milli sec input\n       */\n\n      /**\n       * show the sec field\n       */\n\n      /**\n       * show the milli sec field\n       */\n\n      /**\n       * show the day field\n       */\n\n      /**\n       * limit hours input\n       */\n\n      /**\n       * AM or PM\n       */\n\n      function render() {\n        return html(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      \", \"\\n      <div class=\\\"time-input-wrap\\\">\\n        \", \"\\n\\n        <ha-textfield\\n          id=\\\"hour\\\"\\n          type=\\\"number\\\"\\n          inputmode=\\\"numeric\\\"\\n          .value=\", \"\\n          .label=\", \"\\n          name=\\\"hours\\\"\\n          @change=\", \"\\n          @focusin=\", \"\\n          no-spinner\\n          .required=\", \"\\n          .autoValidate=\", \"\\n          maxlength=\\\"2\\\"\\n          max=\", \"\\n          min=\\\"0\\\"\\n          .disabled=\", \"\\n          suffix=\\\":\\\"\\n          class=\\\"hasSuffix\\\"\\n        >\\n        </ha-textfield>\\n        <ha-textfield\\n          id=\\\"min\\\"\\n          type=\\\"number\\\"\\n          inputmode=\\\"numeric\\\"\\n          .value=\", \"\\n          .label=\", \"\\n          @change=\", \"\\n          @focusin=\", \"\\n          name=\\\"minutes\\\"\\n          no-spinner\\n          .required=\", \"\\n          .autoValidate=\", \"\\n          maxlength=\\\"2\\\"\\n          max=\\\"59\\\"\\n          min=\\\"0\\\"\\n          .disabled=\", \"\\n          .suffix=\", \"\\n          class=\", \"\\n        >\\n        </ha-textfield>\\n        \", \"\\n        \", \"\\n        \", \"\\n      </div>\\n      \", \"\\n    \"])), this.label ? html(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"<label>\", \"\", \"</label>\"])), this.label, this.required ? \" *\" : \"\") : \"\", this.enableDay ? html(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n              <ha-textfield\\n                id=\\\"day\\\"\\n                type=\\\"number\\\"\\n                inputmode=\\\"numeric\\\"\\n                .value=\", \"\\n                .label=\", \"\\n                name=\\\"days\\\"\\n                @change=\", \"\\n                @focusin=\", \"\\n                no-spinner\\n                .required=\", \"\\n                .autoValidate=\", \"\\n                min=\\\"0\\\"\\n                .disabled=\", \"\\n                suffix=\\\":\\\"\\n                class=\\\"hasSuffix\\\"\\n              >\\n              </ha-textfield>\\n            \"])), this.days.toFixed(), this.dayLabel, this._valueChanged, this._onFocus, this.required, this.autoValidate, this.disabled) : \"\", this.hours.toFixed(), this.hourLabel, this._valueChanged, this._onFocus, this.required, this.autoValidate, ifDefined(this._hourMax), this.disabled, this._formatValue(this.minutes), this.minLabel, this._valueChanged, this._onFocus, this.required, this.autoValidate, this.disabled, this.enableSecond ? \":\" : \"\", this.enableSecond ? \"has-suffix\" : \"\", this.enableSecond ? html(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"<ha-textfield\\n              id=\\\"sec\\\"\\n              type=\\\"number\\\"\\n              inputmode=\\\"numeric\\\"\\n              .value=\", \"\\n              .label=\", \"\\n              @change=\", \"\\n              @focusin=\", \"\\n              name=\\\"seconds\\\"\\n              no-spinner\\n              .required=\", \"\\n              .autoValidate=\", \"\\n              maxlength=\\\"2\\\"\\n              max=\\\"59\\\"\\n              min=\\\"0\\\"\\n              .disabled=\", \"\\n              .suffix=\", \"\\n              class=\", \"\\n            >\\n            </ha-textfield>\"])), this._formatValue(this.seconds), this.secLabel, this._valueChanged, this._onFocus, this.required, this.autoValidate, this.disabled, this.enableMillisecond ? \":\" : \"\", this.enableMillisecond ? \"has-suffix\" : \"\") : \"\", this.enableMillisecond ? html(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"<ha-textfield\\n              id=\\\"millisec\\\"\\n              type=\\\"number\\\"\\n              .value=\", \"\\n              .label=\", \"\\n              @change=\", \"\\n              @focusin=\", \"\\n              name=\\\"milliseconds\\\"\\n              no-spinner\\n              .required=\", \"\\n              .autoValidate=\", \"\\n              maxlength=\\\"3\\\"\\n              max=\\\"999\\\"\\n              min=\\\"0\\\"\\n              .disabled=\", \"\\n            >\\n            </ha-textfield>\"])), this._formatValue(this.milliseconds, 3), this.millisecLabel, this._valueChanged, this._onFocus, this.required, this.autoValidate, this.disabled) : \"\", this.format === 24 ? \"\" : html(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"<ha-select\\n              .required=\", \"\\n              .value=\", \"\\n              .disabled=\", \"\\n              name=\\\"amPm\\\"\\n              naturalMenuWidth\\n              fixedMenuPosition\\n              @selected=\", \"\\n              @closed=\", \"\\n            >\\n              <mwc-list-item value=\\\"AM\\\">AM</mwc-list-item>\\n              <mwc-list-item value=\\\"PM\\\">PM</mwc-list-item>\\n            </ha-select>\"])), this.required, this.amPm, this.disabled, this._valueChanged, stopPropagation), this.helper ? html(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral([\"<ha-input-helper-text>\", \"</ha-input-helper-text>\"])), this.helper) : \"\");\n      }\n    }, {\n      kind: \"method\",\n      key: \"_valueChanged\",\n      value: function _valueChanged(ev) {\n        var textField = ev.currentTarget;\n        this[textField.name] = textField.name === \"amPm\" ? textField.value : Number(textField.value);\n        var value = {\n          hours: this.hours,\n          minutes: this.minutes,\n          seconds: this.seconds,\n          milliseconds: this.milliseconds\n        };\n        if (this.enableDay) {\n          value.days = this.days;\n        }\n        if (this.format === 12) {\n          value.amPm = this.amPm;\n        }\n        fireEvent(this, \"value-changed\", {\n          value: value\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_onFocus\",\n      value: function _onFocus(ev) {\n        ev.currentTarget.select();\n      }\n\n      /**\n       * Format time fragments\n       */\n    }, {\n      kind: \"method\",\n      key: \"_formatValue\",\n      value: function _formatValue(value) {\n        var padding = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n        return value.toString().padStart(padding, \"0\");\n      }\n\n      /**\n       * 24 hour format has a max hr of 23\n       */\n    }, {\n      kind: \"get\",\n      key: \"_hourMax\",\n      value: function _hourMax() {\n        if (this.noHoursLimit) {\n          return undefined;\n        }\n        if (this.format === 12) {\n          return 12;\n        }\n        return 23;\n      }\n    }, {\n      kind: \"field\",\n      static: true,\n      key: \"styles\",\n      value: function value() {\n        return css(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral([\"\\n    :host {\\n      display: block;\\n    }\\n    .time-input-wrap {\\n      display: flex;\\n      border-radius: var(--mdc-shape-small, 4px) var(--mdc-shape-small, 4px) 0 0;\\n      overflow: hidden;\\n      position: relative;\\n      direction: ltr;\\n    }\\n    ha-textfield {\\n      width: 40px;\\n      text-align: center;\\n      --mdc-shape-small: 0;\\n      --text-field-appearance: none;\\n      --text-field-padding: 0 4px;\\n      --text-field-suffix-padding-left: 2px;\\n      --text-field-suffix-padding-right: 0;\\n      --text-field-text-align: center;\\n    }\\n    ha-textfield.hasSuffix {\\n      --text-field-padding: 0 0 0 4px;\\n    }\\n    ha-textfield:first-child {\\n      --text-field-border-top-left-radius: var(--mdc-shape-medium);\\n    }\\n    ha-textfield:last-child {\\n      --text-field-border-top-right-radius: var(--mdc-shape-medium);\\n    }\\n    ha-select {\\n      --mdc-shape-small: 0;\\n      width: 85px;\\n    }\\n    label {\\n      -moz-osx-font-smoothing: grayscale;\\n      -webkit-font-smoothing: antialiased;\\n      font-family: var(\\n        --mdc-typography-body2-font-family,\\n        var(--mdc-typography-font-family, Roboto, sans-serif)\\n      );\\n      font-size: var(--mdc-typography-body2-font-size, 0.875rem);\\n      line-height: var(--mdc-typography-body2-line-height, 1.25rem);\\n      font-weight: var(--mdc-typography-body2-font-weight, 400);\\n      letter-spacing: var(\\n        --mdc-typography-body2-letter-spacing,\\n        0.0178571429em\\n      );\\n      text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\\n      text-transform: var(--mdc-typography-body2-text-transform, inherit);\\n      color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\\n      padding-left: 4px;\\n      padding-inline-start: 4px;\\n      padding-inline-end: initial;\\n    }\\n  \"])));\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","customElement","property","ifDefined","fireEvent","stopPropagation","HaBaseTimeInput","_decorate","_initialize","_LitElement","_LitElement2","_inherits","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_assertThisInitialized","_createClass","F","d","kind","decorators","key","value","type","Boolean","Number","render","_templateObject","_taggedTemplateLiteral","label","_templateObject2","required","enableDay","_templateObject3","days","toFixed","dayLabel","_valueChanged","_onFocus","autoValidate","disabled","hours","hourLabel","_hourMax","_formatValue","minutes","minLabel","enableSecond","_templateObject4","seconds","secLabel","enableMillisecond","_templateObject5","milliseconds","millisecLabel","format","_templateObject6","amPm","helper","_templateObject7","ev","textField","currentTarget","name","select","padding","undefined","toString","padStart","noHoursLimit","static","_templateObject8"],"sources":["/workspaces/frontend/src/components/ha-base-time-input.ts"],"sourcesContent":["import \"@material/mwc-list/mwc-list-item\";\nimport { css, html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { ifDefined } from \"lit/directives/if-defined\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { stopPropagation } from \"../common/dom/stop_propagation\";\nimport \"./ha-select\";\nimport { HaTextField } from \"./ha-textfield\";\nimport \"./ha-input-helper-text\";\n\nexport interface TimeChangedEvent {\n  days?: number;\n  hours: number;\n  minutes: number;\n  seconds: number;\n  milliseconds: number;\n  amPm?: \"AM\" | \"PM\";\n}\n\n@customElement(\"ha-base-time-input\")\nexport class HaBaseTimeInput extends LitElement {\n  /**\n   * Label for the input\n   */\n  @property() label?: string;\n\n  /**\n   * Helper for the input\n   */\n  @property() helper?: string;\n\n  /**\n   * auto validate time inputs\n   */\n  @property({ type: Boolean }) autoValidate = false;\n\n  /**\n   * determines if inputs are required\n   */\n  @property({ type: Boolean }) public required = false;\n\n  /**\n   * 12 or 24 hr format\n   */\n  @property({ type: Number }) format: 12 | 24 = 12;\n\n  /**\n   * disables the inputs\n   */\n  @property({ type: Boolean }) disabled = false;\n\n  /**\n   * day\n   */\n  @property({ type: Number }) days = 0;\n\n  /**\n   * hour\n   */\n  @property({ type: Number }) hours = 0;\n\n  /**\n   * minute\n   */\n  @property({ type: Number }) minutes = 0;\n\n  /**\n   * second\n   */\n  @property({ type: Number }) seconds = 0;\n\n  /**\n   * milli second\n   */\n  @property({ type: Number }) milliseconds = 0;\n\n  /**\n   * Label for the day input\n   */\n  @property() dayLabel = \"\";\n\n  /**\n   * Label for the hour input\n   */\n  @property() hourLabel = \"\";\n\n  /**\n   * Label for the min input\n   */\n  @property() minLabel = \"\";\n\n  /**\n   * Label for the sec input\n   */\n  @property() secLabel = \"\";\n\n  /**\n   * Label for the milli sec input\n   */\n  @property() millisecLabel = \"\";\n\n  /**\n   * show the sec field\n   */\n  @property({ type: Boolean }) enableSecond = false;\n\n  /**\n   * show the milli sec field\n   */\n  @property({ type: Boolean }) enableMillisecond = false;\n\n  /**\n   * show the day field\n   */\n  @property({ type: Boolean }) enableDay = false;\n\n  /**\n   * limit hours input\n   */\n  @property({ type: Boolean }) noHoursLimit = false;\n\n  /**\n   * AM or PM\n   */\n  @property() amPm: \"AM\" | \"PM\" = \"AM\";\n\n  protected render(): TemplateResult {\n    return html`\n      ${this.label\n        ? html`<label>${this.label}${this.required ? \" *\" : \"\"}</label>`\n        : \"\"}\n      <div class=\"time-input-wrap\">\n        ${this.enableDay\n          ? html`\n              <ha-textfield\n                id=\"day\"\n                type=\"number\"\n                inputmode=\"numeric\"\n                .value=${this.days.toFixed()}\n                .label=${this.dayLabel}\n                name=\"days\"\n                @change=${this._valueChanged}\n                @focusin=${this._onFocus}\n                no-spinner\n                .required=${this.required}\n                .autoValidate=${this.autoValidate}\n                min=\"0\"\n                .disabled=${this.disabled}\n                suffix=\":\"\n                class=\"hasSuffix\"\n              >\n              </ha-textfield>\n            `\n          : \"\"}\n\n        <ha-textfield\n          id=\"hour\"\n          type=\"number\"\n          inputmode=\"numeric\"\n          .value=${this.hours.toFixed()}\n          .label=${this.hourLabel}\n          name=\"hours\"\n          @change=${this._valueChanged}\n          @focusin=${this._onFocus}\n          no-spinner\n          .required=${this.required}\n          .autoValidate=${this.autoValidate}\n          maxlength=\"2\"\n          max=${ifDefined(this._hourMax)}\n          min=\"0\"\n          .disabled=${this.disabled}\n          suffix=\":\"\n          class=\"hasSuffix\"\n        >\n        </ha-textfield>\n        <ha-textfield\n          id=\"min\"\n          type=\"number\"\n          inputmode=\"numeric\"\n          .value=${this._formatValue(this.minutes)}\n          .label=${this.minLabel}\n          @change=${this._valueChanged}\n          @focusin=${this._onFocus}\n          name=\"minutes\"\n          no-spinner\n          .required=${this.required}\n          .autoValidate=${this.autoValidate}\n          maxlength=\"2\"\n          max=\"59\"\n          min=\"0\"\n          .disabled=${this.disabled}\n          .suffix=${this.enableSecond ? \":\" : \"\"}\n          class=${this.enableSecond ? \"has-suffix\" : \"\"}\n        >\n        </ha-textfield>\n        ${this.enableSecond\n          ? html`<ha-textfield\n              id=\"sec\"\n              type=\"number\"\n              inputmode=\"numeric\"\n              .value=${this._formatValue(this.seconds)}\n              .label=${this.secLabel}\n              @change=${this._valueChanged}\n              @focusin=${this._onFocus}\n              name=\"seconds\"\n              no-spinner\n              .required=${this.required}\n              .autoValidate=${this.autoValidate}\n              maxlength=\"2\"\n              max=\"59\"\n              min=\"0\"\n              .disabled=${this.disabled}\n              .suffix=${this.enableMillisecond ? \":\" : \"\"}\n              class=${this.enableMillisecond ? \"has-suffix\" : \"\"}\n            >\n            </ha-textfield>`\n          : \"\"}\n        ${this.enableMillisecond\n          ? html`<ha-textfield\n              id=\"millisec\"\n              type=\"number\"\n              .value=${this._formatValue(this.milliseconds, 3)}\n              .label=${this.millisecLabel}\n              @change=${this._valueChanged}\n              @focusin=${this._onFocus}\n              name=\"milliseconds\"\n              no-spinner\n              .required=${this.required}\n              .autoValidate=${this.autoValidate}\n              maxlength=\"3\"\n              max=\"999\"\n              min=\"0\"\n              .disabled=${this.disabled}\n            >\n            </ha-textfield>`\n          : \"\"}\n        ${this.format === 24\n          ? \"\"\n          : html`<ha-select\n              .required=${this.required}\n              .value=${this.amPm}\n              .disabled=${this.disabled}\n              name=\"amPm\"\n              naturalMenuWidth\n              fixedMenuPosition\n              @selected=${this._valueChanged}\n              @closed=${stopPropagation}\n            >\n              <mwc-list-item value=\"AM\">AM</mwc-list-item>\n              <mwc-list-item value=\"PM\">PM</mwc-list-item>\n            </ha-select>`}\n      </div>\n      ${this.helper\n        ? html`<ha-input-helper-text>${this.helper}</ha-input-helper-text>`\n        : \"\"}\n    `;\n  }\n\n  private _valueChanged(ev: InputEvent) {\n    const textField = ev.currentTarget as HaTextField;\n    this[textField.name] =\n      textField.name === \"amPm\" ? textField.value : Number(textField.value);\n    const value: TimeChangedEvent = {\n      hours: this.hours,\n      minutes: this.minutes,\n      seconds: this.seconds,\n      milliseconds: this.milliseconds,\n    };\n    if (this.enableDay) {\n      value.days = this.days;\n    }\n    if (this.format === 12) {\n      value.amPm = this.amPm;\n    }\n    fireEvent(this, \"value-changed\", {\n      value,\n    });\n  }\n\n  private _onFocus(ev: FocusEvent) {\n    (ev.currentTarget as HaTextField).select();\n  }\n\n  /**\n   * Format time fragments\n   */\n  private _formatValue(value: number, padding = 2) {\n    return value.toString().padStart(padding, \"0\");\n  }\n\n  /**\n   * 24 hour format has a max hr of 23\n   */\n  private get _hourMax() {\n    if (this.noHoursLimit) {\n      return undefined;\n    }\n    if (this.format === 12) {\n      return 12;\n    }\n    return 23;\n  }\n\n  static styles = css`\n    :host {\n      display: block;\n    }\n    .time-input-wrap {\n      display: flex;\n      border-radius: var(--mdc-shape-small, 4px) var(--mdc-shape-small, 4px) 0 0;\n      overflow: hidden;\n      position: relative;\n      direction: ltr;\n    }\n    ha-textfield {\n      width: 40px;\n      text-align: center;\n      --mdc-shape-small: 0;\n      --text-field-appearance: none;\n      --text-field-padding: 0 4px;\n      --text-field-suffix-padding-left: 2px;\n      --text-field-suffix-padding-right: 0;\n      --text-field-text-align: center;\n    }\n    ha-textfield.hasSuffix {\n      --text-field-padding: 0 0 0 4px;\n    }\n    ha-textfield:first-child {\n      --text-field-border-top-left-radius: var(--mdc-shape-medium);\n    }\n    ha-textfield:last-child {\n      --text-field-border-top-right-radius: var(--mdc-shape-medium);\n    }\n    ha-select {\n      --mdc-shape-small: 0;\n      width: 85px;\n    }\n    label {\n      -moz-osx-font-smoothing: grayscale;\n      -webkit-font-smoothing: antialiased;\n      font-family: var(\n        --mdc-typography-body2-font-family,\n        var(--mdc-typography-font-family, Roboto, sans-serif)\n      );\n      font-size: var(--mdc-typography-body2-font-size, 0.875rem);\n      line-height: var(--mdc-typography-body2-line-height, 1.25rem);\n      font-weight: var(--mdc-typography-body2-font-weight, 400);\n      letter-spacing: var(\n        --mdc-typography-body2-letter-spacing,\n        0.0178571429em\n      );\n      text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n      text-transform: var(--mdc-typography-body2-text-transform, inherit);\n      color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n      padding-left: 4px;\n      padding-inline-start: 4px;\n      padding-inline-end: initial;\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-base-time-input\": HaBaseTimeInput;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}