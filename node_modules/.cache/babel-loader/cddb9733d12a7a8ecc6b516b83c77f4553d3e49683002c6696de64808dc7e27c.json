{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, eventOptions, property, queryAll, state } from \"lit/decorators\";\nimport { isComponentLoaded } from \"../../common/config/is_component_loaded\";\nimport { restoreScroll } from \"../../common/decorators/restore-scroll\";\nimport { loadVirtualizer } from \"../../resources/virtualizer\";\nimport \"./state-history-chart-line\";\nimport \"./state-history-chart-timeline\";\nconst CANVAS_TIMELINE_ROWS_CHUNK = 10; // Split up the canvases to avoid hitting the render limit\n\nconst chunkData = (inputArray, chunks) => inputArray.reduce((results, item, idx) => {\n  const chunkIdx = Math.floor(idx / chunks);\n  if (!results[chunkIdx]) {\n    results[chunkIdx] = [];\n  }\n  results[chunkIdx].push(item);\n  return results;\n}, []);\nexport let StateHistoryCharts = _decorate([customElement(\"state-history-charts\")], function (_initialize, _LitElement) {\n  class StateHistoryCharts extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: StateHistoryCharts,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"historyData\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"narrow\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"names\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        reflect: true\n      })],\n      key: \"virtualize\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"endTime\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"startTime\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        attribute: \"up-to-now\"\n      })],\n      key: \"upToNow\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Number\n      })],\n      key: \"hoursToShow\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"showNames\",\n      value() {\n        return true;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"clickForMoreInfo\",\n      value() {\n        return true;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"isLoadingData\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"logarithmicScale\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Number\n      })],\n      key: \"minYAxis\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Number\n      })],\n      key: \"maxYAxis\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"fitYData\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_computedStartTime\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_computedEndTime\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_maxYWidth\",\n      value() {\n        return 0;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_childYWidths\",\n      value() {\n        return [];\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_chartCount\",\n      value() {\n        return 0;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [restoreScroll(\".container\")],\n      key: \"_savedScrollPos\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [queryAll(\"state-history-chart-line\")],\n      key: \"_charts\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"resize\",\n      value() {\n        return options => {\n          var _this$_charts;\n          (_this$_charts = this._charts) === null || _this$_charts === void 0 || _this$_charts.forEach(chart => chart.resize(options));\n        };\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value:\n      // @ts-ignore\n\n      function render() {\n        if (!isComponentLoaded(this.hass, \"history\")) {\n          return html`<div class=\"info\">\n        ${this.hass.localize(\"ui.components.history_charts.history_disabled\")}\n      </div>`;\n        }\n        if (this.isLoadingData && !this.historyData) {\n          return html`<div class=\"info\">\n        ${this.hass.localize(\"ui.components.history_charts.loading_history\")}\n      </div>`;\n        }\n        if (this._isHistoryEmpty()) {\n          return html`<div class=\"info\">\n        ${this.hass.localize(\"ui.components.history_charts.no_history_found\")}\n      </div>`;\n        }\n        const combinedItems = this.historyData.timeline.length ? (this.virtualize ? chunkData(this.historyData.timeline, CANVAS_TIMELINE_ROWS_CHUNK) : [this.historyData.timeline]).concat(this.historyData.line) : this.historyData.line;\n        this._chartCount = combinedItems.length;\n        return this.virtualize ? html`<div class=\"container ha-scrollbar\" @scroll=${this._saveScrollPos}>\n          <lit-virtualizer\n            scroller\n            class=\"ha-scrollbar\"\n            .items=${combinedItems}\n            .renderItem=${this._renderHistoryItem}\n          >\n          </lit-virtualizer>\n        </div>` : html`${combinedItems.map((item, index) => this._renderHistoryItem(item, index))}`;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_renderHistoryItem\",\n      value() {\n        return (item, index) => {\n          if (!item || index === undefined) {\n            return nothing;\n          }\n          if (!Array.isArray(item)) {\n            return html`<div class=\"entry-container\">\n        <state-history-chart-line\n          .hass=${this.hass}\n          .unit=${item.unit}\n          .data=${item.data}\n          .identifier=${item.identifier}\n          .showNames=${this.showNames}\n          .startTime=${this._computedStartTime}\n          .endTime=${this._computedEndTime}\n          .paddingYAxis=${this._maxYWidth}\n          .names=${this.names}\n          .chartIndex=${index}\n          .clickForMoreInfo=${this.clickForMoreInfo}\n          .logarithmicScale=${this.logarithmicScale}\n          .minYAxis=${this.minYAxis}\n          .maxYAxis=${this.maxYAxis}\n          .fitYData=${this.fitYData}\n          @y-width-changed=${this._yWidthChanged}\n        ></state-history-chart-line>\n      </div> `;\n          }\n          return html`<div class=\"entry-container\">\n      <state-history-chart-timeline\n        .hass=${this.hass}\n        .data=${item}\n        .startTime=${this._computedStartTime}\n        .endTime=${this._computedEndTime}\n        .showNames=${this.showNames}\n        .names=${this.names}\n        .narrow=${this.narrow}\n        .chunked=${this.virtualize}\n        .paddingYAxis=${this._maxYWidth}\n        .chartIndex=${index}\n        .clickForMoreInfo=${this.clickForMoreInfo}\n        @y-width-changed=${this._yWidthChanged}\n      ></state-history-chart-timeline>\n    </div> `;\n        };\n      }\n    }, {\n      kind: \"method\",\n      key: \"shouldUpdate\",\n      value: function shouldUpdate(changedProps) {\n        if (changedProps.size === 1 && changedProps.has(\"hass\")) {\n          return false;\n        }\n        if (changedProps.size === 1 && changedProps.has(\"_maxYWidth\") && changedProps.get(\"_maxYWidth\") === this._maxYWidth) {\n          return false;\n        }\n        return true;\n      }\n    }, {\n      kind: \"method\",\n      key: \"willUpdate\",\n      value: function willUpdate(changedProps) {\n        if (!this.hasUpdated) {\n          loadVirtualizer();\n        }\n        if ([...changedProps.keys()].some(prop => ![\"_maxYWidth\", \"_childYWidths\", \"_chartCount\"].includes(prop))) {\n          // Don't recompute times when we just want to update layout\n          const now = new Date();\n          this._computedEndTime = this.upToNow || !this.endTime || this.endTime > now ? now : this.endTime;\n          if (this.startTime) {\n            this._computedStartTime = this.startTime;\n          } else if (this.hoursToShow) {\n            this._computedStartTime = new Date(new Date().getTime() - 60 * 60 * this.hoursToShow * 1000);\n          } else {\n            var _this$historyData$tim, _this$historyData;\n            this._computedStartTime = new Date(((_this$historyData$tim = (_this$historyData = this.historyData) === null || _this$historyData === void 0 ? void 0 : _this$historyData.timeline) !== null && _this$historyData$tim !== void 0 ? _this$historyData$tim : []).reduce((minTime, stateInfo) => Math.min(minTime, new Date(stateInfo.data[0].last_changed).getTime()), new Date().getTime()));\n          }\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"updated\",\n      value: function updated(changedProps) {\n        if (changedProps.has(\"_chartCount\")) {\n          if (this._chartCount < this._childYWidths.length) {\n            this._childYWidths.length = this._chartCount;\n            this._maxYWidth = Math.max(...Object.values(this._childYWidths), 0);\n          }\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_yWidthChanged\",\n      value: function _yWidthChanged(e) {\n        this._childYWidths[e.detail.chartIndex] = e.detail.value;\n        this._maxYWidth = Math.max(...Object.values(this._childYWidths), 0);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_isHistoryEmpty\",\n      value: function _isHistoryEmpty() {\n        const historyDataEmpty = !this.historyData || !this.historyData.timeline || !this.historyData.line || this.historyData.timeline.length === 0 && this.historyData.line.length === 0;\n        return !this.isLoadingData && historyDataEmpty;\n      }\n    }, {\n      kind: \"method\",\n      decorators: [eventOptions({\n        passive: true\n      })],\n      key: \"_saveScrollPos\",\n      value: function _saveScrollPos(e) {\n        this._savedScrollPos = e.target.scrollTop;\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css`\n      :host {\n        display: block;\n        /* height of single timeline chart = 60px */\n        min-height: 60px;\n      }\n\n      :host([virtualize]) {\n        height: 100%;\n      }\n\n      .info {\n        text-align: center;\n        line-height: 60px;\n        color: var(--secondary-text-color);\n      }\n\n      .container {\n        max-height: var(--history-max-height);\n      }\n\n      .entry-container {\n        width: 100%;\n      }\n\n      .entry-container:hover {\n        z-index: 1;\n      }\n\n      :host([virtualize]) .entry-container {\n        padding-left: 1px;\n        padding-right: 1px;\n        padding-inline-start: 1px;\n        padding-inline-end: 1px;\n      }\n\n      .entry-container:not(:first-child) {\n        border-top: 2px solid var(--divider-color);\n        margin-top: 16px;\n      }\n\n      .container,\n      lit-virtualizer {\n        height: 100%;\n        width: 100%;\n      }\n\n      lit-virtualizer {\n        contain: size layout !important;\n      }\n\n      state-history-chart-timeline,\n      state-history-chart-line {\n        width: 100%;\n      }\n    `;\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","nothing","customElement","eventOptions","property","queryAll","state","isComponentLoaded","restoreScroll","loadVirtualizer","CANVAS_TIMELINE_ROWS_CHUNK","chunkData","inputArray","chunks","reduce","results","item","idx","chunkIdx","Math","floor","push","StateHistoryCharts","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","type","Boolean","reflect","Number","options","_this$_charts","_charts","forEach","chart","resize","render","hass","localize","isLoadingData","historyData","_isHistoryEmpty","combinedItems","timeline","length","virtualize","concat","line","_chartCount","_saveScrollPos","_renderHistoryItem","map","index","undefined","Array","isArray","unit","data","identifier","showNames","_computedStartTime","_computedEndTime","_maxYWidth","names","clickForMoreInfo","logarithmicScale","minYAxis","maxYAxis","fitYData","_yWidthChanged","narrow","shouldUpdate","changedProps","size","has","get","willUpdate","hasUpdated","keys","some","prop","includes","now","Date","upToNow","endTime","startTime","hoursToShow","getTime","_this$historyData$tim","_this$historyData","minTime","stateInfo","min","last_changed","updated","_childYWidths","max","Object","values","e","detail","chartIndex","historyDataEmpty","passive","_savedScrollPos","target","scrollTop","static","styles"],"sources":["/workspaces/frontend/src/components/chart/state-history-charts.ts"],"sourcesContent":["import {\n  css,\n  CSSResultGroup,\n  html,\n  LitElement,\n  nothing,\n  PropertyValues,\n} from \"lit\";\nimport {\n  customElement,\n  eventOptions,\n  property,\n  queryAll,\n  state,\n} from \"lit/decorators\";\nimport { isComponentLoaded } from \"../../common/config/is_component_loaded\";\nimport { restoreScroll } from \"../../common/decorators/restore-scroll\";\nimport {\n  HistoryResult,\n  LineChartUnit,\n  TimelineEntity,\n} from \"../../data/history\";\nimport { loadVirtualizer } from \"../../resources/virtualizer\";\nimport type { HomeAssistant } from \"../../types\";\nimport \"./state-history-chart-line\";\nimport \"./state-history-chart-timeline\";\nimport type { StateHistoryChartLine } from \"./state-history-chart-line\";\nimport type { StateHistoryChartTimeline } from \"./state-history-chart-timeline\";\nimport { ChartResizeOptions } from \"./ha-chart-base\";\n\nconst CANVAS_TIMELINE_ROWS_CHUNK = 10; // Split up the canvases to avoid hitting the render limit\n\nconst chunkData = (inputArray: any[], chunks: number) =>\n  inputArray.reduce((results, item, idx) => {\n    const chunkIdx = Math.floor(idx / chunks);\n    if (!results[chunkIdx]) {\n      results[chunkIdx] = [];\n    }\n    results[chunkIdx].push(item);\n    return results;\n  }, []);\n\ndeclare global {\n  interface HASSDomEvents {\n    \"y-width-changed\": { value: number; chartIndex: number };\n  }\n}\n\n@customElement(\"state-history-charts\")\nexport class StateHistoryCharts extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public historyData!: HistoryResult;\n\n  @property({ type: Boolean }) public narrow = false;\n\n  @property({ attribute: false }) public names?: Record<string, string>;\n\n  @property({ type: Boolean, reflect: true }) public virtualize = false;\n\n  @property({ attribute: false }) public endTime?: Date;\n\n  @property({ attribute: false }) public startTime?: Date;\n\n  @property({ type: Boolean, attribute: \"up-to-now\" }) public upToNow = false;\n\n  @property({ type: Number }) public hoursToShow?: number;\n\n  @property({ type: Boolean }) public showNames = true;\n\n  @property({ type: Boolean }) public clickForMoreInfo = true;\n\n  @property({ type: Boolean }) public isLoadingData = false;\n\n  @property({ type: Boolean }) public logarithmicScale = false;\n\n  @property({ type: Number }) public minYAxis?: number;\n\n  @property({ type: Number }) public maxYAxis?: number;\n\n  @property({ type: Boolean }) public fitYData = false;\n\n  private _computedStartTime!: Date;\n\n  private _computedEndTime!: Date;\n\n  @state() private _maxYWidth = 0;\n\n  @state() private _childYWidths: number[] = [];\n\n  @state() private _chartCount = 0;\n\n  // @ts-ignore\n  @restoreScroll(\".container\") private _savedScrollPos?: number;\n\n  @queryAll(\"state-history-chart-line\")\n  private _charts?: StateHistoryChartLine[];\n\n  public resize = (options?: ChartResizeOptions): void => {\n    this._charts?.forEach(\n      (chart: StateHistoryChartLine | StateHistoryChartTimeline) =>\n        chart.resize(options)\n    );\n  };\n\n  protected render() {\n    if (!isComponentLoaded(this.hass, \"history\")) {\n      return html`<div class=\"info\">\n        ${this.hass.localize(\"ui.components.history_charts.history_disabled\")}\n      </div>`;\n    }\n\n    if (this.isLoadingData && !this.historyData) {\n      return html`<div class=\"info\">\n        ${this.hass.localize(\"ui.components.history_charts.loading_history\")}\n      </div>`;\n    }\n\n    if (this._isHistoryEmpty()) {\n      return html`<div class=\"info\">\n        ${this.hass.localize(\"ui.components.history_charts.no_history_found\")}\n      </div>`;\n    }\n    const combinedItems = this.historyData.timeline.length\n      ? (this.virtualize\n          ? chunkData(this.historyData.timeline, CANVAS_TIMELINE_ROWS_CHUNK)\n          : [this.historyData.timeline]\n        ).concat(this.historyData.line)\n      : this.historyData.line;\n\n    this._chartCount = combinedItems.length;\n\n    return this.virtualize\n      ? html`<div class=\"container ha-scrollbar\" @scroll=${this._saveScrollPos}>\n          <lit-virtualizer\n            scroller\n            class=\"ha-scrollbar\"\n            .items=${combinedItems}\n            .renderItem=${this._renderHistoryItem}\n          >\n          </lit-virtualizer>\n        </div>`\n      : html`${combinedItems.map((item, index) =>\n          this._renderHistoryItem(item, index)\n        )}`;\n  }\n\n  private _renderHistoryItem = (\n    item: TimelineEntity[] | LineChartUnit,\n    index: number\n  ) => {\n    if (!item || index === undefined) {\n      return nothing;\n    }\n    if (!Array.isArray(item)) {\n      return html`<div class=\"entry-container\">\n        <state-history-chart-line\n          .hass=${this.hass}\n          .unit=${item.unit}\n          .data=${item.data}\n          .identifier=${item.identifier}\n          .showNames=${this.showNames}\n          .startTime=${this._computedStartTime}\n          .endTime=${this._computedEndTime}\n          .paddingYAxis=${this._maxYWidth}\n          .names=${this.names}\n          .chartIndex=${index}\n          .clickForMoreInfo=${this.clickForMoreInfo}\n          .logarithmicScale=${this.logarithmicScale}\n          .minYAxis=${this.minYAxis}\n          .maxYAxis=${this.maxYAxis}\n          .fitYData=${this.fitYData}\n          @y-width-changed=${this._yWidthChanged}\n        ></state-history-chart-line>\n      </div> `;\n    }\n    return html`<div class=\"entry-container\">\n      <state-history-chart-timeline\n        .hass=${this.hass}\n        .data=${item}\n        .startTime=${this._computedStartTime}\n        .endTime=${this._computedEndTime}\n        .showNames=${this.showNames}\n        .names=${this.names}\n        .narrow=${this.narrow}\n        .chunked=${this.virtualize}\n        .paddingYAxis=${this._maxYWidth}\n        .chartIndex=${index}\n        .clickForMoreInfo=${this.clickForMoreInfo}\n        @y-width-changed=${this._yWidthChanged}\n      ></state-history-chart-timeline>\n    </div> `;\n  };\n\n  protected shouldUpdate(changedProps: PropertyValues): boolean {\n    if (changedProps.size === 1 && changedProps.has(\"hass\")) {\n      return false;\n    }\n    if (\n      changedProps.size === 1 &&\n      changedProps.has(\"_maxYWidth\") &&\n      changedProps.get(\"_maxYWidth\") === this._maxYWidth\n    ) {\n      return false;\n    }\n    return true;\n  }\n\n  protected willUpdate(changedProps: PropertyValues) {\n    if (!this.hasUpdated) {\n      loadVirtualizer();\n    }\n    if (\n      [...changedProps.keys()].some(\n        (prop) =>\n          !(\n            [\"_maxYWidth\", \"_childYWidths\", \"_chartCount\"] as PropertyKey[]\n          ).includes(prop)\n      )\n    ) {\n      // Don't recompute times when we just want to update layout\n      const now = new Date();\n\n      this._computedEndTime =\n        this.upToNow || !this.endTime || this.endTime > now\n          ? now\n          : this.endTime;\n\n      if (this.startTime) {\n        this._computedStartTime = this.startTime;\n      } else if (this.hoursToShow) {\n        this._computedStartTime = new Date(\n          new Date().getTime() - 60 * 60 * this.hoursToShow * 1000\n        );\n      } else {\n        this._computedStartTime = new Date(\n          (this.historyData?.timeline ?? []).reduce(\n            (minTime, stateInfo) =>\n              Math.min(\n                minTime,\n                new Date(stateInfo.data[0].last_changed).getTime()\n              ),\n            new Date().getTime()\n          )\n        );\n      }\n    }\n  }\n\n  protected updated(changedProps: PropertyValues) {\n    if (changedProps.has(\"_chartCount\")) {\n      if (this._chartCount < this._childYWidths.length) {\n        this._childYWidths.length = this._chartCount;\n        this._maxYWidth = Math.max(...Object.values(this._childYWidths), 0);\n      }\n    }\n  }\n\n  private _yWidthChanged(e: CustomEvent<HASSDomEvents[\"y-width-changed\"]>) {\n    this._childYWidths[e.detail.chartIndex] = e.detail.value;\n    this._maxYWidth = Math.max(...Object.values(this._childYWidths), 0);\n  }\n\n  private _isHistoryEmpty(): boolean {\n    const historyDataEmpty =\n      !this.historyData ||\n      !this.historyData.timeline ||\n      !this.historyData.line ||\n      (this.historyData.timeline.length === 0 &&\n        this.historyData.line.length === 0);\n    return !this.isLoadingData && historyDataEmpty;\n  }\n\n  @eventOptions({ passive: true })\n  private _saveScrollPos(e: Event) {\n    this._savedScrollPos = (e.target as HTMLDivElement).scrollTop;\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      :host {\n        display: block;\n        /* height of single timeline chart = 60px */\n        min-height: 60px;\n      }\n\n      :host([virtualize]) {\n        height: 100%;\n      }\n\n      .info {\n        text-align: center;\n        line-height: 60px;\n        color: var(--secondary-text-color);\n      }\n\n      .container {\n        max-height: var(--history-max-height);\n      }\n\n      .entry-container {\n        width: 100%;\n      }\n\n      .entry-container:hover {\n        z-index: 1;\n      }\n\n      :host([virtualize]) .entry-container {\n        padding-left: 1px;\n        padding-right: 1px;\n        padding-inline-start: 1px;\n        padding-inline-end: 1px;\n      }\n\n      .entry-container:not(:first-child) {\n        border-top: 2px solid var(--divider-color);\n        margin-top: 16px;\n      }\n\n      .container,\n      lit-virtualizer {\n        height: 100%;\n        width: 100%;\n      }\n\n      lit-virtualizer {\n        contain: size layout !important;\n      }\n\n      state-history-chart-timeline,\n      state-history-chart-line {\n        width: 100%;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"state-history-charts\": StateHistoryCharts;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}