{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/helpers/regeneratorRuntime\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _templateObject, _templateObject2, _templateObject3;\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport { css, html, LitElement } from \"lit\";\nimport { customElement, property, state, query } from \"lit/decorators\";\nimport { isComponentLoaded } from \"../common/config/is_component_loaded\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { handleWebRtcOffer } from \"../data/camera\";\nimport { fetchWebRtcSettings } from \"../data/rtsp_to_webrtc\";\nimport \"./ha-alert\";\n\n/**\n * A WebRTC stream is established by first sending an offer through a signal\n * path via an integration. An answer is returned, then the rest of the stream\n * is handled entirely client side.\n */\nvar HaWebRtcPlayer = _decorate([customElement(\"ha-web-rtc-player\")], function (_initialize, _LitElement) {\n  var HaWebRtcPlayer = /*#__PURE__*/function (_LitElement2) {\n    _inherits(HaWebRtcPlayer, _LitElement2);\n    function HaWebRtcPlayer() {\n      var _this;\n      _classCallCheck(this, HaWebRtcPlayer);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, HaWebRtcPlayer, [].concat(args));\n      _initialize(_assertThisInitialized(_this));\n      return _this;\n    }\n    return _createClass(HaWebRtcPlayer);\n  }(_LitElement);\n  return {\n    F: HaWebRtcPlayer,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"entityid\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        attribute: \"controls\"\n      })],\n      key: \"controls\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        attribute: \"muted\"\n      })],\n      key: \"muted\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        attribute: \"autoplay\"\n      })],\n      key: \"autoPlay\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        attribute: \"playsinline\"\n      })],\n      key: \"playsInline\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"posterUrl\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_error\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [query(\"#remote-stream\")],\n      key: \"_videoEl\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_peerConnection\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_remoteStream\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value:\n      // don't cache this, as we remove it on disconnects\n\n      function render() {\n        if (this._error) {\n          return html(_templateObject || (_templateObject = _taggedTemplateLiteral([\"<ha-alert alert-type=\\\"error\\\">\", \"</ha-alert>\"])), this._error);\n        }\n        return html(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n      <video\\n        id=\\\"remote-stream\\\"\\n        ?autoplay=\", \"\\n        .muted=\", \"\\n        ?playsinline=\", \"\\n        ?controls=\", \"\\n        .poster=\", \"\\n        @loadeddata=\", \"\\n      ></video>\\n    \"])), this.autoPlay, this.muted, this.playsInline, this.controls, this.posterUrl, this._loadedData);\n      }\n    }, {\n      kind: \"method\",\n      key: \"connectedCallback\",\n      value: function connectedCallback() {\n        _get(_getPrototypeOf(HaWebRtcPlayer.prototype), \"connectedCallback\", this).call(this);\n        if (this.hasUpdated) {\n          this._startWebRtc();\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"disconnectedCallback\",\n      value: function disconnectedCallback() {\n        _get(_getPrototypeOf(HaWebRtcPlayer.prototype), \"disconnectedCallback\", this).call(this);\n        this._cleanUp();\n      }\n    }, {\n      kind: \"method\",\n      key: \"updated\",\n      value: function updated(changedProperties) {\n        if (!changedProperties.has(\"entityid\")) {\n          return;\n        }\n        if (!this._videoEl) {\n          return;\n        }\n        this._startWebRtc();\n      }\n    }, {\n      kind: \"method\",\n      key: \"_startWebRtc\",\n      value: function () {\n        var _startWebRtc2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n          var _this2 = this;\n          var configuration, peerConnection, offerOptions, offer, candidates, iceResolver, offer_sdp, webRtcAnswer, remoteStream, remoteDesc;\n          return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n            while (1) switch (_context2.prev = _context2.next) {\n              case 0:\n                this._error = undefined;\n                _context2.next = 3;\n                return this._fetchPeerConfiguration();\n              case 3:\n                configuration = _context2.sent;\n                peerConnection = new RTCPeerConnection(configuration); // Some cameras (such as nest) require a data channel to establish a stream\n                // however, not used by any integrations.\n                peerConnection.createDataChannel(\"dataSendChannel\");\n                peerConnection.addTransceiver(\"audio\", {\n                  direction: \"recvonly\"\n                });\n                peerConnection.addTransceiver(\"video\", {\n                  direction: \"recvonly\"\n                });\n                offerOptions = {\n                  offerToReceiveAudio: true,\n                  offerToReceiveVideo: true\n                };\n                _context2.next = 11;\n                return peerConnection.createOffer(offerOptions);\n              case 11:\n                offer = _context2.sent;\n                _context2.next = 14;\n                return peerConnection.setLocalDescription(offer);\n              case 14:\n                candidates = \"\"; // Build an Offer SDP string with ice candidates\n                iceResolver = new Promise(function (resolve) {\n                  peerConnection.addEventListener(\"icecandidate\", /*#__PURE__*/function () {\n                    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(event) {\n                      return _regeneratorRuntime().wrap(function _callee$(_context) {\n                        while (1) switch (_context.prev = _context.next) {\n                          case 0:\n                            if (event.candidate) {\n                              _context.next = 3;\n                              break;\n                            }\n                            resolve(); // Gathering complete\n                            return _context.abrupt(\"return\");\n                          case 3:\n                            candidates += \"a=\".concat(event.candidate.candidate, \"\\r\\n\");\n                          case 4:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }, _callee);\n                    }));\n                    return function (_x) {\n                      return _ref.apply(this, arguments);\n                    };\n                  }());\n                });\n                _context2.next = 18;\n                return iceResolver;\n              case 18:\n                offer_sdp = offer.sdp + candidates;\n                _context2.prev = 19;\n                _context2.next = 22;\n                return handleWebRtcOffer(this.hass, this.entityid, offer_sdp);\n              case 22:\n                webRtcAnswer = _context2.sent;\n                _context2.next = 30;\n                break;\n              case 25:\n                _context2.prev = 25;\n                _context2.t0 = _context2[\"catch\"](19);\n                this._error = \"Failed to start WebRTC stream: \" + _context2.t0.message;\n                peerConnection.close();\n                return _context2.abrupt(\"return\");\n              case 30:\n                // Setup callbacks to render remote stream once media tracks are discovered.\n                remoteStream = new MediaStream();\n                peerConnection.addEventListener(\"track\", function (event) {\n                  remoteStream.addTrack(event.track);\n                  _this2._videoEl.srcObject = remoteStream;\n                });\n                this._remoteStream = remoteStream;\n\n                // Initiate the stream with the remote device\n                remoteDesc = new RTCSessionDescription({\n                  type: \"answer\",\n                  sdp: webRtcAnswer.answer\n                });\n                _context2.prev = 34;\n                _context2.next = 37;\n                return peerConnection.setRemoteDescription(remoteDesc);\n              case 37:\n                _context2.next = 44;\n                break;\n              case 39:\n                _context2.prev = 39;\n                _context2.t1 = _context2[\"catch\"](34);\n                this._error = \"Failed to connect WebRTC stream: \" + _context2.t1.message;\n                peerConnection.close();\n                return _context2.abrupt(\"return\");\n              case 44:\n                this._peerConnection = peerConnection;\n              case 45:\n              case \"end\":\n                return _context2.stop();\n            }\n          }, _callee2, this, [[19, 25], [34, 39]]);\n        }));\n        function _startWebRtc() {\n          return _startWebRtc2.apply(this, arguments);\n        }\n        return _startWebRtc;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"_fetchPeerConfiguration\",\n      value: function () {\n        var _fetchPeerConfiguration2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n          var settings;\n          return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n            while (1) switch (_context3.prev = _context3.next) {\n              case 0:\n                if (isComponentLoaded(this.hass, \"rtsp_to_webrtc\")) {\n                  _context3.next = 2;\n                  break;\n                }\n                return _context3.abrupt(\"return\", {});\n              case 2:\n                _context3.next = 4;\n                return fetchWebRtcSettings(this.hass);\n              case 4:\n                settings = _context3.sent;\n                if (!(!settings || !settings.stun_server)) {\n                  _context3.next = 7;\n                  break;\n                }\n                return _context3.abrupt(\"return\", {});\n              case 7:\n                return _context3.abrupt(\"return\", {\n                  iceServers: [{\n                    urls: [\"stun:\".concat(settings.stun_server)]\n                  }]\n                });\n              case 8:\n              case \"end\":\n                return _context3.stop();\n            }\n          }, _callee3, this);\n        }));\n        function _fetchPeerConfiguration() {\n          return _fetchPeerConfiguration2.apply(this, arguments);\n        }\n        return _fetchPeerConfiguration;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"_cleanUp\",\n      value: function _cleanUp() {\n        if (this._remoteStream) {\n          this._remoteStream.getTracks().forEach(function (track) {\n            track.stop();\n          });\n          this._remoteStream = undefined;\n        }\n        if (this._videoEl) {\n          this._videoEl.removeAttribute(\"src\");\n          this._videoEl.load();\n        }\n        if (this._peerConnection) {\n          this._peerConnection.close();\n          this._peerConnection = undefined;\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_loadedData\",\n      value: function _loadedData() {\n        // @ts-ignore\n        fireEvent(this, \"load\");\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n      :host,\\n      video {\\n        display: block;\\n      }\\n\\n      video {\\n        width: 100%;\\n        max-height: var(--video-max-height, calc(100vh - 97px));\\n      }\\n    \"])));\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","customElement","property","state","query","isComponentLoaded","fireEvent","handleWebRtcOffer","fetchWebRtcSettings","HaWebRtcPlayer","_decorate","_initialize","_LitElement","_LitElement2","_inherits","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_assertThisInitialized","_createClass","F","d","kind","decorators","attribute","key","value","type","Boolean","render","_error","_templateObject","_taggedTemplateLiteral","_templateObject2","autoPlay","muted","playsInline","controls","posterUrl","_loadedData","connectedCallback","_get","_getPrototypeOf","prototype","call","hasUpdated","_startWebRtc","disconnectedCallback","_cleanUp","updated","changedProperties","has","_videoEl","_startWebRtc2","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","_this2","configuration","peerConnection","offerOptions","offer","candidates","iceResolver","offer_sdp","webRtcAnswer","remoteStream","remoteDesc","wrap","_callee2$","_context2","prev","next","undefined","_fetchPeerConfiguration","sent","RTCPeerConnection","createDataChannel","addTransceiver","direction","offerToReceiveAudio","offerToReceiveVideo","createOffer","setLocalDescription","Promise","resolve","addEventListener","_ref","_callee","event","_callee$","_context","candidate","abrupt","stop","_x","apply","sdp","hass","entityid","t0","message","close","MediaStream","addTrack","track","srcObject","_remoteStream","RTCSessionDescription","answer","setRemoteDescription","t1","_peerConnection","_fetchPeerConfiguration2","_callee3","settings","_callee3$","_context3","stun_server","iceServers","urls","getTracks","forEach","removeAttribute","load","static","styles","_templateObject3"],"sources":["/Users/sercanardil/Desktop/frontend/src/components/ha-web-rtc-player.ts"],"sourcesContent":["import {\n  css,\n  CSSResultGroup,\n  html,\n  LitElement,\n  PropertyValues,\n  TemplateResult,\n} from \"lit\";\nimport { customElement, property, state, query } from \"lit/decorators\";\nimport { isComponentLoaded } from \"../common/config/is_component_loaded\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { handleWebRtcOffer, WebRtcAnswer } from \"../data/camera\";\nimport { fetchWebRtcSettings } from \"../data/rtsp_to_webrtc\";\nimport type { HomeAssistant } from \"../types\";\nimport \"./ha-alert\";\n\n/**\n * A WebRTC stream is established by first sending an offer through a signal\n * path via an integration. An answer is returned, then the rest of the stream\n * is handled entirely client side.\n */\n@customElement(\"ha-web-rtc-player\")\nclass HaWebRtcPlayer extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property() public entityid!: string;\n\n  @property({ type: Boolean, attribute: \"controls\" })\n  public controls = false;\n\n  @property({ type: Boolean, attribute: \"muted\" })\n  public muted = false;\n\n  @property({ type: Boolean, attribute: \"autoplay\" })\n  public autoPlay = false;\n\n  @property({ type: Boolean, attribute: \"playsinline\" })\n  public playsInline = false;\n\n  @property() public posterUrl!: string;\n\n  @state() private _error?: string;\n\n  // don't cache this, as we remove it on disconnects\n  @query(\"#remote-stream\") private _videoEl!: HTMLVideoElement;\n\n  private _peerConnection?: RTCPeerConnection;\n\n  private _remoteStream?: MediaStream;\n\n  protected override render(): TemplateResult {\n    if (this._error) {\n      return html`<ha-alert alert-type=\"error\">${this._error}</ha-alert>`;\n    }\n    return html`\n      <video\n        id=\"remote-stream\"\n        ?autoplay=${this.autoPlay}\n        .muted=${this.muted}\n        ?playsinline=${this.playsInline}\n        ?controls=${this.controls}\n        .poster=${this.posterUrl}\n        @loadeddata=${this._loadedData}\n      ></video>\n    `;\n  }\n\n  public override connectedCallback() {\n    super.connectedCallback();\n    if (this.hasUpdated) {\n      this._startWebRtc();\n    }\n  }\n\n  public override disconnectedCallback() {\n    super.disconnectedCallback();\n    this._cleanUp();\n  }\n\n  protected override updated(changedProperties: PropertyValues<this>) {\n    if (!changedProperties.has(\"entityid\")) {\n      return;\n    }\n    if (!this._videoEl) {\n      return;\n    }\n    this._startWebRtc();\n  }\n\n  private async _startWebRtc(): Promise<void> {\n    this._error = undefined;\n\n    const configuration = await this._fetchPeerConfiguration();\n    const peerConnection = new RTCPeerConnection(configuration);\n    // Some cameras (such as nest) require a data channel to establish a stream\n    // however, not used by any integrations.\n    peerConnection.createDataChannel(\"dataSendChannel\");\n    peerConnection.addTransceiver(\"audio\", { direction: \"recvonly\" });\n    peerConnection.addTransceiver(\"video\", { direction: \"recvonly\" });\n\n    const offerOptions: RTCOfferOptions = {\n      offerToReceiveAudio: true,\n      offerToReceiveVideo: true,\n    };\n    const offer: RTCSessionDescriptionInit =\n      await peerConnection.createOffer(offerOptions);\n    await peerConnection.setLocalDescription(offer);\n\n    let candidates = \"\"; // Build an Offer SDP string with ice candidates\n    const iceResolver = new Promise<void>((resolve) => {\n      peerConnection.addEventListener(\"icecandidate\", async (event) => {\n        if (!event.candidate) {\n          resolve(); // Gathering complete\n          return;\n        }\n        candidates += `a=${event.candidate.candidate}\\r\\n`;\n      });\n    });\n    await iceResolver;\n    const offer_sdp = offer.sdp! + candidates;\n\n    let webRtcAnswer: WebRtcAnswer;\n    try {\n      webRtcAnswer = await handleWebRtcOffer(\n        this.hass,\n        this.entityid,\n        offer_sdp\n      );\n    } catch (err: any) {\n      this._error = \"Failed to start WebRTC stream: \" + err.message;\n      peerConnection.close();\n      return;\n    }\n\n    // Setup callbacks to render remote stream once media tracks are discovered.\n    const remoteStream = new MediaStream();\n    peerConnection.addEventListener(\"track\", (event) => {\n      remoteStream.addTrack(event.track);\n      this._videoEl.srcObject = remoteStream;\n    });\n    this._remoteStream = remoteStream;\n\n    // Initiate the stream with the remote device\n    const remoteDesc = new RTCSessionDescription({\n      type: \"answer\",\n      sdp: webRtcAnswer.answer,\n    });\n    try {\n      await peerConnection.setRemoteDescription(remoteDesc);\n    } catch (err: any) {\n      this._error = \"Failed to connect WebRTC stream: \" + err.message;\n      peerConnection.close();\n      return;\n    }\n    this._peerConnection = peerConnection;\n  }\n\n  private async _fetchPeerConfiguration(): Promise<RTCConfiguration> {\n    if (!isComponentLoaded(this.hass!, \"rtsp_to_webrtc\")) {\n      return {};\n    }\n    const settings = await fetchWebRtcSettings(this.hass!);\n    if (!settings || !settings.stun_server) {\n      return {};\n    }\n    return {\n      iceServers: [\n        {\n          urls: [`stun:${settings.stun_server!}`],\n        },\n      ],\n    };\n  }\n\n  private _cleanUp() {\n    if (this._remoteStream) {\n      this._remoteStream.getTracks().forEach((track) => {\n        track.stop();\n      });\n      this._remoteStream = undefined;\n    }\n    if (this._videoEl) {\n      this._videoEl.removeAttribute(\"src\");\n      this._videoEl.load();\n    }\n    if (this._peerConnection) {\n      this._peerConnection.close();\n      this._peerConnection = undefined;\n    }\n  }\n\n  private _loadedData() {\n    // @ts-ignore\n    fireEvent(this, \"load\");\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      :host,\n      video {\n        display: block;\n      }\n\n      video {\n        width: 100%;\n        max-height: var(--video-max-height, calc(100vh - 97px));\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-web-rtc-player\": HaWebRtcPlayer;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}