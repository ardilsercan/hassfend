{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport \"@material/mwc-button/mwc-button\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport { debounce } from \"../../../common/util/debounce\";\nimport \"../../../components/ha-alert\";\nimport \"../../../components/ha-circular-progress\";\nimport \"../../../components/ha-code-editor\";\nimport { subscribeRenderTemplate } from \"../../../data/ws-templates\";\nimport { showConfirmationDialog } from \"../../../dialogs/generic/show-dialog-box\";\nimport { haStyle } from \"../../../resources/styles\";\nimport { documentationUrl } from \"../../../util/documentation-url\";\nconst DEMO_TEMPLATE = `{## Imitate available variables: ##}\n{% set my_test_json = {\n  \"temperature\": 25,\n  \"unit\": \"Â°C\"\n} %}\n\nThe temperature is {{ my_test_json.temperature }} {{ my_test_json.unit }}.\n\n{% if is_state(\"sun.sun\", \"above_horizon\") -%}\n  The sun rose {{ relative_time(states.sun.sun.last_changed) }} ago.\n{%- else -%}\n  The sun will rise at {{ as_timestamp(state_attr(\"sun.sun\", \"next_rising\")) | timestamp_local }}.\n{%- endif %}\n\nFor loop example getting entity values in the weather domain:\n\n{% for state in states.weather -%}\n  {%- if loop.first %}The {% elif loop.last %} and the {% else %}, the {% endif -%}\n  {{ state.name | lower }} is {{state.state_with_unit}}\n{%- endfor %}.`;\nlet HaPanelDevTemplate = _decorate([customElement(\"developer-tools-template\")], function (_initialize, _LitElement) {\n  class HaPanelDevTemplate extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaPanelDevTemplate,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"narrow\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_error\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_errorLevel\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_rendering\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_templateResult\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_unsubRenderTemplate\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_template\",\n      value() {\n        return \"\";\n      }\n    }, {\n      kind: \"field\",\n      key: \"_inited\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"method\",\n      key: \"connectedCallback\",\n      value: function connectedCallback() {\n        _get(_getPrototypeOf(HaPanelDevTemplate.prototype), \"connectedCallback\", this).call(this);\n        if (this._template && !this._unsubRenderTemplate) {\n          this._subscribeTemplate();\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"disconnectedCallback\",\n      value: function disconnectedCallback() {\n        _get(_getPrototypeOf(HaPanelDevTemplate.prototype), \"disconnectedCallback\", this).call(this);\n        this._unsubscribeTemplate();\n      }\n    }, {\n      kind: \"method\",\n      key: \"firstUpdated\",\n      value: function firstUpdated() {\n        if (localStorage && localStorage[\"panel-dev-template-template\"]) {\n          this._template = localStorage[\"panel-dev-template-template\"];\n        } else {\n          this._template = DEMO_TEMPLATE;\n        }\n        this._subscribeTemplate();\n        this._inited = true;\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var _this$_templateResult, _this$_templateResult2, _this$_errorLevel;\n        const type = typeof ((_this$_templateResult = this._templateResult) === null || _this$_templateResult === void 0 ? void 0 : _this$_templateResult.result);\n        const resultType = type === \"object\" ? Array.isArray((_this$_templateResult2 = this._templateResult) === null || _this$_templateResult2 === void 0 ? void 0 : _this$_templateResult2.result) ? \"list\" : \"dict\" : type;\n        return html`\n      <div\n        class=\"content ${classMap({\n          layout: !this.narrow,\n          horizontal: !this.narrow\n        })}\"\n      >\n        <div class=\"edit-pane\">\n          <p>\n            ${this.hass.localize(\"ui.panel.developer-tools.tabs.templates.description\")}\n          </p>\n          <ul>\n            <li>\n              <a\n                href=\"https://jinja.palletsprojects.com/en/latest/templates/\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                >${this.hass.localize(\"ui.panel.developer-tools.tabs.templates.jinja_documentation\")}\n              </a>\n            </li>\n            <li>\n              <a\n                href=${documentationUrl(this.hass, \"/docs/configuration/templating/\")}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                ${this.hass.localize(\"ui.panel.developer-tools.tabs.templates.template_extensions\")}</a\n              >\n            </li>\n          </ul>\n          <p>\n            ${this.hass.localize(\"ui.panel.developer-tools.tabs.templates.editor\")}\n          </p>\n          <ha-code-editor\n            mode=\"jinja2\"\n            .hass=${this.hass}\n            .value=${this._template}\n            .error=${this._error}\n            autofocus\n            autocomplete-entities\n            autocomplete-icons\n            @value-changed=${this._templateChanged}\n            dir=\"ltr\"\n          ></ha-code-editor>\n          <mwc-button @click=${this._restoreDemo}>\n            ${this.hass.localize(\"ui.panel.developer-tools.tabs.templates.reset\")}\n          </mwc-button>\n          <mwc-button @click=${this._clear}>\n            ${this.hass.localize(\"ui.common.clear\")}\n          </mwc-button>\n        </div>\n\n        <div class=\"render-pane\">\n          ${this._rendering ? html`<ha-circular-progress\n                class=\"render-spinner\"\n                indeterminate\n                size=\"small\"\n              ></ha-circular-progress>` : \"\"}\n          ${this._error ? html`<ha-alert\n                alert-type=${((_this$_errorLevel = this._errorLevel) === null || _this$_errorLevel === void 0 ? void 0 : _this$_errorLevel.toLowerCase()) || \"error\"}\n                >${this._error}</ha-alert\n              >` : nothing}\n          ${this._templateResult ? html`${this.hass.localize(\"ui.panel.developer-tools.tabs.templates.result_type\")}:\n                ${resultType}\n                <!-- prettier-ignore -->\n                <pre class=\"rendered ${classMap({\n          [resultType]: resultType\n        })}\"\n                >${type === \"object\" ? JSON.stringify(this._templateResult.result, null, 2) : this._templateResult.result}</pre>\n                ${this._templateResult.listeners.time ? html`\n                      <p>\n                        ${this.hass.localize(\"ui.panel.developer-tools.tabs.templates.time\")}\n                      </p>\n                    ` : \"\"}\n                ${!this._templateResult.listeners ? nothing : this._templateResult.listeners.all ? html`\n                        <p class=\"all_listeners\">\n                          ${this.hass.localize(\"ui.panel.developer-tools.tabs.templates.all_listeners\")}\n                        </p>\n                      ` : this._templateResult.listeners.domains.length || this._templateResult.listeners.entities.length ? html`\n                          <p>\n                            ${this.hass.localize(\"ui.panel.developer-tools.tabs.templates.listeners\")}\n                          </p>\n                          <ul>\n                            ${this._templateResult.listeners.domains.sort().map(domain => html`\n                                  <li>\n                                    <b\n                                      >${this.hass.localize(\"ui.panel.developer-tools.tabs.templates.domain\")}</b\n                                    >: ${domain}\n                                  </li>\n                                `)}\n                            ${this._templateResult.listeners.entities.sort().map(entity_id => html`\n                                  <li>\n                                    <b\n                                      >${this.hass.localize(\"ui.panel.developer-tools.tabs.templates.entity\")}</b\n                                    >: ${entity_id}\n                                  </li>\n                                `)}\n                          </ul>\n                        ` : !this._templateResult.listeners.time ? html`<span class=\"all_listeners\">\n                            ${this.hass.localize(\"ui.panel.developer-tools.tabs.templates.no_listeners\")}\n                          </span>` : nothing}` : nothing}\n        </div>\n      </div>\n    `;\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [haStyle, css`\n        :host {\n          -ms-user-select: initial;\n          -webkit-user-select: initial;\n          -moz-user-select: initial;\n        }\n\n        .content {\n          padding: 16px;\n          padding: max(16px, env(safe-area-inset-top))\n            max(16px, env(safe-area-inset-right))\n            max(16px, env(safe-area-inset-bottom))\n            max(16px, env(safe-area-inset-left));\n        }\n\n        .edit-pane {\n          margin-right: 16px;\n          margin-inline-start: initial;\n          margin-inline-end: 16px;\n          direction: var(--direction);\n        }\n\n        .edit-pane a {\n          color: var(--primary-color);\n        }\n\n        .horizontal .edit-pane {\n          max-width: 50%;\n        }\n\n        .render-pane {\n          position: relative;\n          max-width: 50%;\n          flex: 1;\n        }\n\n        .render-spinner {\n          position: absolute;\n          top: 8px;\n          right: 8px;\n        }\n\n        ha-alert {\n          margin-bottom: 8px;\n          display: block;\n        }\n\n        .rendered {\n          @apply --paper-font-code1;\n          clear: both;\n          white-space: pre-wrap;\n          background-color: var(--secondary-background-color);\n          padding: 8px;\n          direction: ltr;\n        }\n\n        .all_listeners {\n          color: var(--warning-color);\n        }\n\n        @media all and (max-width: 870px) {\n          .render-pane {\n            max-width: 100%;\n          }\n        }\n      `];\n      }\n    }, {\n      kind: \"field\",\n      key: \"_debounceRender\",\n      value() {\n        return debounce(() => {\n          this._subscribeTemplate();\n          this._storeTemplate();\n        }, 500, false);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_templateChanged\",\n      value: function _templateChanged(ev) {\n        this._template = ev.detail.value;\n        if (this._error) {\n          this._error = undefined;\n          this._errorLevel = undefined;\n        }\n        this._debounceRender();\n      }\n    }, {\n      kind: \"method\",\n      key: \"_subscribeTemplate\",\n      value: async function _subscribeTemplate() {\n        this._rendering = true;\n        await this._unsubscribeTemplate();\n        this._error = undefined;\n        this._errorLevel = undefined;\n        this._templateResult = undefined;\n        try {\n          this._unsubRenderTemplate = subscribeRenderTemplate(this.hass.connection, result => {\n            if (\"error\" in result) {\n              // We show the latest error, or a warning if there are no errors\n              if (result.level === \"ERROR\" || this._errorLevel !== \"ERROR\") {\n                this._error = result.error;\n                this._errorLevel = result.level;\n              }\n            } else {\n              this._templateResult = result;\n            }\n          }, {\n            template: this._template,\n            timeout: 3,\n            report_errors: true\n          });\n          await this._unsubRenderTemplate;\n        } catch (err) {\n          this._error = \"Unknown error\";\n          this._errorLevel = undefined;\n          if (err.message) {\n            this._error = err.message;\n            this._errorLevel = undefined;\n            this._templateResult = undefined;\n          }\n          this._unsubRenderTemplate = undefined;\n        } finally {\n          this._rendering = false;\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_unsubscribeTemplate\",\n      value: async function _unsubscribeTemplate() {\n        if (!this._unsubRenderTemplate) {\n          return;\n        }\n        try {\n          const unsub = await this._unsubRenderTemplate;\n          unsub();\n          this._unsubRenderTemplate = undefined;\n        } catch (err) {\n          if (err.code === \"not_found\") {\n            // If we get here, the connection was probably already closed. Ignore.\n          } else {\n            throw err;\n          }\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_storeTemplate\",\n      value: function _storeTemplate() {\n        if (!this._inited) {\n          return;\n        }\n        localStorage[\"panel-dev-template-template\"] = this._template;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_restoreDemo\",\n      value: async function _restoreDemo() {\n        if (!(await showConfirmationDialog(this, {\n          text: this.hass.localize(\"ui.panel.developer-tools.tabs.templates.confirm_reset\"),\n          warning: true\n        }))) {\n          return;\n        }\n        this._template = DEMO_TEMPLATE;\n        this._subscribeTemplate();\n        delete localStorage[\"panel-dev-template-template\"];\n      }\n    }, {\n      kind: \"method\",\n      key: \"_clear\",\n      value: async function _clear() {\n        if (!(await showConfirmationDialog(this, {\n          text: this.hass.localize(\"ui.panel.developer-tools.tabs.templates.confirm_clear\"),\n          warning: true\n        }))) {\n          return;\n        }\n        this._unsubscribeTemplate();\n        this._template = \"\";\n        // Reset to empty result. Setting to 'undefined' results in a different visual\n        // behaviour compared to manually emptying the template input box.\n        this._templateResult = {\n          result: \"\",\n          listeners: {\n            all: false,\n            entities: [],\n            domains: [],\n            time: false\n          }\n        };\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","nothing","customElement","property","state","classMap","debounce","subscribeRenderTemplate","showConfirmationDialog","haStyle","documentationUrl","DEMO_TEMPLATE","HaPanelDevTemplate","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","type","Boolean","connectedCallback","_get","_getPrototypeOf","prototype","call","_template","_unsubRenderTemplate","_subscribeTemplate","disconnectedCallback","_unsubscribeTemplate","firstUpdated","localStorage","_inited","render","_this$_templateResult","_this$_templateResult2","_this$_errorLevel","_templateResult","result","resultType","Array","isArray","layout","narrow","horizontal","hass","localize","_error","_templateChanged","_restoreDemo","_clear","_rendering","_errorLevel","toLowerCase","JSON","stringify","listeners","time","all","domains","length","entities","sort","map","domain","entity_id","static","styles","_storeTemplate","ev","detail","undefined","_debounceRender","connection","level","error","template","timeout","report_errors","err","message","unsub","code","text","warning"],"sources":["/Users/sercanardil/Desktop/frontend/src/panels/developer-tools/template/developer-tools-template.ts"],"sourcesContent":["import \"@material/mwc-button/mwc-button\";\nimport { UnsubscribeFunc } from \"home-assistant-js-websocket\";\nimport { css, CSSResultGroup, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport { debounce } from \"../../../common/util/debounce\";\nimport \"../../../components/ha-alert\";\nimport \"../../../components/ha-circular-progress\";\nimport \"../../../components/ha-code-editor\";\nimport {\n  RenderTemplateResult,\n  subscribeRenderTemplate,\n} from \"../../../data/ws-templates\";\nimport { showConfirmationDialog } from \"../../../dialogs/generic/show-dialog-box\";\nimport { haStyle } from \"../../../resources/styles\";\nimport { HomeAssistant } from \"../../../types\";\nimport { documentationUrl } from \"../../../util/documentation-url\";\n\nconst DEMO_TEMPLATE = `{## Imitate available variables: ##}\n{% set my_test_json = {\n  \"temperature\": 25,\n  \"unit\": \"Â°C\"\n} %}\n\nThe temperature is {{ my_test_json.temperature }} {{ my_test_json.unit }}.\n\n{% if is_state(\"sun.sun\", \"above_horizon\") -%}\n  The sun rose {{ relative_time(states.sun.sun.last_changed) }} ago.\n{%- else -%}\n  The sun will rise at {{ as_timestamp(state_attr(\"sun.sun\", \"next_rising\")) | timestamp_local }}.\n{%- endif %}\n\nFor loop example getting entity values in the weather domain:\n\n{% for state in states.weather -%}\n  {%- if loop.first %}The {% elif loop.last %} and the {% else %}, the {% endif -%}\n  {{ state.name | lower }} is {{state.state_with_unit}}\n{%- endfor %}.`;\n\n@customElement(\"developer-tools-template\")\nclass HaPanelDevTemplate extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ type: Boolean }) public narrow = false;\n\n  @state() private _error?: string;\n\n  @state() private _errorLevel?: \"ERROR\" | \"WARNING\";\n\n  @state() private _rendering = false;\n\n  @state() private _templateResult?: RenderTemplateResult;\n\n  @state() private _unsubRenderTemplate?: Promise<UnsubscribeFunc>;\n\n  private _template = \"\";\n\n  private _inited = false;\n\n  public connectedCallback() {\n    super.connectedCallback();\n    if (this._template && !this._unsubRenderTemplate) {\n      this._subscribeTemplate();\n    }\n  }\n\n  public disconnectedCallback() {\n    super.disconnectedCallback();\n    this._unsubscribeTemplate();\n  }\n\n  protected firstUpdated() {\n    if (localStorage && localStorage[\"panel-dev-template-template\"]) {\n      this._template = localStorage[\"panel-dev-template-template\"];\n    } else {\n      this._template = DEMO_TEMPLATE;\n    }\n    this._subscribeTemplate();\n    this._inited = true;\n  }\n\n  protected render() {\n    const type = typeof this._templateResult?.result;\n    const resultType =\n      type === \"object\"\n        ? Array.isArray(this._templateResult?.result)\n          ? \"list\"\n          : \"dict\"\n        : type;\n    return html`\n      <div\n        class=\"content ${classMap({\n          layout: !this.narrow,\n          horizontal: !this.narrow,\n        })}\"\n      >\n        <div class=\"edit-pane\">\n          <p>\n            ${this.hass.localize(\n              \"ui.panel.developer-tools.tabs.templates.description\"\n            )}\n          </p>\n          <ul>\n            <li>\n              <a\n                href=\"https://jinja.palletsprojects.com/en/latest/templates/\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                >${this.hass.localize(\n                  \"ui.panel.developer-tools.tabs.templates.jinja_documentation\"\n                )}\n              </a>\n            </li>\n            <li>\n              <a\n                href=${documentationUrl(\n                  this.hass,\n                  \"/docs/configuration/templating/\"\n                )}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                ${this.hass.localize(\n                  \"ui.panel.developer-tools.tabs.templates.template_extensions\"\n                )}</a\n              >\n            </li>\n          </ul>\n          <p>\n            ${this.hass.localize(\n              \"ui.panel.developer-tools.tabs.templates.editor\"\n            )}\n          </p>\n          <ha-code-editor\n            mode=\"jinja2\"\n            .hass=${this.hass}\n            .value=${this._template}\n            .error=${this._error}\n            autofocus\n            autocomplete-entities\n            autocomplete-icons\n            @value-changed=${this._templateChanged}\n            dir=\"ltr\"\n          ></ha-code-editor>\n          <mwc-button @click=${this._restoreDemo}>\n            ${this.hass.localize(\n              \"ui.panel.developer-tools.tabs.templates.reset\"\n            )}\n          </mwc-button>\n          <mwc-button @click=${this._clear}>\n            ${this.hass.localize(\"ui.common.clear\")}\n          </mwc-button>\n        </div>\n\n        <div class=\"render-pane\">\n          ${this._rendering\n            ? html`<ha-circular-progress\n                class=\"render-spinner\"\n                indeterminate\n                size=\"small\"\n              ></ha-circular-progress>`\n            : \"\"}\n          ${this._error\n            ? html`<ha-alert\n                alert-type=${this._errorLevel?.toLowerCase() || \"error\"}\n                >${this._error}</ha-alert\n              >`\n            : nothing}\n          ${this._templateResult\n            ? html`${this.hass.localize(\n                  \"ui.panel.developer-tools.tabs.templates.result_type\"\n                )}:\n                ${resultType}\n                <!-- prettier-ignore -->\n                <pre class=\"rendered ${classMap({\n                  [resultType]: resultType,\n                })}\"\n                >${type === \"object\"\n                  ? JSON.stringify(this._templateResult.result, null, 2)\n                  : this._templateResult.result}</pre>\n                ${this._templateResult.listeners.time\n                  ? html`\n                      <p>\n                        ${this.hass.localize(\n                          \"ui.panel.developer-tools.tabs.templates.time\"\n                        )}\n                      </p>\n                    `\n                  : \"\"}\n                ${!this._templateResult.listeners\n                  ? nothing\n                  : this._templateResult.listeners.all\n                    ? html`\n                        <p class=\"all_listeners\">\n                          ${this.hass.localize(\n                            \"ui.panel.developer-tools.tabs.templates.all_listeners\"\n                          )}\n                        </p>\n                      `\n                    : this._templateResult.listeners.domains.length ||\n                        this._templateResult.listeners.entities.length\n                      ? html`\n                          <p>\n                            ${this.hass.localize(\n                              \"ui.panel.developer-tools.tabs.templates.listeners\"\n                            )}\n                          </p>\n                          <ul>\n                            ${this._templateResult.listeners.domains\n                              .sort()\n                              .map(\n                                (domain) => html`\n                                  <li>\n                                    <b\n                                      >${this.hass.localize(\n                                        \"ui.panel.developer-tools.tabs.templates.domain\"\n                                      )}</b\n                                    >: ${domain}\n                                  </li>\n                                `\n                              )}\n                            ${this._templateResult.listeners.entities\n                              .sort()\n                              .map(\n                                (entity_id) => html`\n                                  <li>\n                                    <b\n                                      >${this.hass.localize(\n                                        \"ui.panel.developer-tools.tabs.templates.entity\"\n                                      )}</b\n                                    >: ${entity_id}\n                                  </li>\n                                `\n                              )}\n                          </ul>\n                        `\n                      : !this._templateResult.listeners.time\n                        ? html`<span class=\"all_listeners\">\n                            ${this.hass.localize(\n                              \"ui.panel.developer-tools.tabs.templates.no_listeners\"\n                            )}\n                          </span>`\n                        : nothing}`\n            : nothing}\n        </div>\n      </div>\n    `;\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyle,\n      css`\n        :host {\n          -ms-user-select: initial;\n          -webkit-user-select: initial;\n          -moz-user-select: initial;\n        }\n\n        .content {\n          padding: 16px;\n          padding: max(16px, env(safe-area-inset-top))\n            max(16px, env(safe-area-inset-right))\n            max(16px, env(safe-area-inset-bottom))\n            max(16px, env(safe-area-inset-left));\n        }\n\n        .edit-pane {\n          margin-right: 16px;\n          margin-inline-start: initial;\n          margin-inline-end: 16px;\n          direction: var(--direction);\n        }\n\n        .edit-pane a {\n          color: var(--primary-color);\n        }\n\n        .horizontal .edit-pane {\n          max-width: 50%;\n        }\n\n        .render-pane {\n          position: relative;\n          max-width: 50%;\n          flex: 1;\n        }\n\n        .render-spinner {\n          position: absolute;\n          top: 8px;\n          right: 8px;\n        }\n\n        ha-alert {\n          margin-bottom: 8px;\n          display: block;\n        }\n\n        .rendered {\n          @apply --paper-font-code1;\n          clear: both;\n          white-space: pre-wrap;\n          background-color: var(--secondary-background-color);\n          padding: 8px;\n          direction: ltr;\n        }\n\n        .all_listeners {\n          color: var(--warning-color);\n        }\n\n        @media all and (max-width: 870px) {\n          .render-pane {\n            max-width: 100%;\n          }\n        }\n      `,\n    ];\n  }\n\n  private _debounceRender = debounce(\n    () => {\n      this._subscribeTemplate();\n      this._storeTemplate();\n    },\n    500,\n    false\n  );\n\n  private _templateChanged(ev) {\n    this._template = ev.detail.value;\n    if (this._error) {\n      this._error = undefined;\n      this._errorLevel = undefined;\n    }\n    this._debounceRender();\n  }\n\n  private async _subscribeTemplate() {\n    this._rendering = true;\n    await this._unsubscribeTemplate();\n    this._error = undefined;\n    this._errorLevel = undefined;\n    this._templateResult = undefined;\n    try {\n      this._unsubRenderTemplate = subscribeRenderTemplate(\n        this.hass.connection,\n        (result) => {\n          if (\"error\" in result) {\n            // We show the latest error, or a warning if there are no errors\n            if (result.level === \"ERROR\" || this._errorLevel !== \"ERROR\") {\n              this._error = result.error;\n              this._errorLevel = result.level;\n            }\n          } else {\n            this._templateResult = result;\n          }\n        },\n        {\n          template: this._template,\n          timeout: 3,\n          report_errors: true,\n        }\n      );\n      await this._unsubRenderTemplate;\n    } catch (err: any) {\n      this._error = \"Unknown error\";\n      this._errorLevel = undefined;\n      if (err.message) {\n        this._error = err.message;\n        this._errorLevel = undefined;\n        this._templateResult = undefined;\n      }\n      this._unsubRenderTemplate = undefined;\n    } finally {\n      this._rendering = false;\n    }\n  }\n\n  private async _unsubscribeTemplate(): Promise<void> {\n    if (!this._unsubRenderTemplate) {\n      return;\n    }\n\n    try {\n      const unsub = await this._unsubRenderTemplate;\n      unsub();\n      this._unsubRenderTemplate = undefined;\n    } catch (err: any) {\n      if (err.code === \"not_found\") {\n        // If we get here, the connection was probably already closed. Ignore.\n      } else {\n        throw err;\n      }\n    }\n  }\n\n  private _storeTemplate() {\n    if (!this._inited) {\n      return;\n    }\n    localStorage[\"panel-dev-template-template\"] = this._template;\n  }\n\n  private async _restoreDemo() {\n    if (\n      !(await showConfirmationDialog(this, {\n        text: this.hass.localize(\n          \"ui.panel.developer-tools.tabs.templates.confirm_reset\"\n        ),\n        warning: true,\n      }))\n    ) {\n      return;\n    }\n    this._template = DEMO_TEMPLATE;\n    this._subscribeTemplate();\n    delete localStorage[\"panel-dev-template-template\"];\n  }\n\n  private async _clear() {\n    if (\n      !(await showConfirmationDialog(this, {\n        text: this.hass.localize(\n          \"ui.panel.developer-tools.tabs.templates.confirm_clear\"\n        ),\n        warning: true,\n      }))\n    ) {\n      return;\n    }\n    this._unsubscribeTemplate();\n    this._template = \"\";\n    // Reset to empty result. Setting to 'undefined' results in a different visual\n    // behaviour compared to manually emptying the template input box.\n    this._templateResult = {\n      result: \"\",\n      listeners: { all: false, entities: [], domains: [], time: false },\n    };\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"developer-tools-template\": HaPanelDevTemplate;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}