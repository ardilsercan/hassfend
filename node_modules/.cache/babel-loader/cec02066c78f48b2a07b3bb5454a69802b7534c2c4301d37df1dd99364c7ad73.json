{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport \"@material/mwc-button\";\nimport { css, html, LitElement } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport \"../../components/ha-area-picker\";\nimport { computeDeviceName, updateDeviceRegistryEntry } from \"../../data/device_registry\";\nimport { showAlertDialog } from \"../generic/show-dialog-box\";\nimport { configFlowContentStyles } from \"./styles\";\nlet StepFlowCreateEntry = _decorate([customElement(\"step-flow-create-entry\")], function (_initialize, _LitElement) {\n  class StepFlowCreateEntry extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: StepFlowCreateEntry,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"flowConfig\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"step\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"devices\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var _this$step$result;\n        const localize = this.hass.localize;\n        return html`\n      <h2>${localize(\"ui.panel.config.integrations.config_flow.success\")}!</h2>\n      <div class=\"content\">\n        ${this.flowConfig.renderCreateEntryDescription(this.hass, this.step)}\n        ${((_this$step$result = this.step.result) === null || _this$step$result === void 0 ? void 0 : _this$step$result.state) === \"not_loaded\" ? html`<span class=\"error\"\n              >${localize(\"ui.panel.config.integrations.config_flow.not_loaded\")}</span\n            >` : \"\"}\n        ${this.devices.length === 0 ? \"\" : html`\n              <p>\n                ${localize(\"ui.panel.config.integrations.config_flow.found_following_devices\")}:\n              </p>\n              <div class=\"devices\">\n                ${this.devices.map(device => {\n          var _device$area_id;\n          return html`\n                    <div class=\"device\">\n                      <div>\n                        <b>${computeDeviceName(device, this.hass)}</b><br />\n                        ${!device.model && !device.manufacturer ? html`&nbsp;` : html`${device.model}\n                            ${device.manufacturer ? html`(${device.manufacturer})` : \"\"}`}\n                      </div>\n                      <ha-area-picker\n                        .hass=${this.hass}\n                        .device=${device.id}\n                        .value=${(_device$area_id = device.area_id) !== null && _device$area_id !== void 0 ? _device$area_id : undefined}\n                        @value-changed=${this._areaPicked}\n                      ></ha-area-picker>\n                    </div>\n                  `;\n        })}\n              </div>\n            `}\n      </div>\n      <div class=\"buttons\">\n        <mwc-button @click=${this._flowDone}\n          >${localize(\"ui.panel.config.integrations.config_flow.finish\")}</mwc-button\n        >\n      </div>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_flowDone\",\n      value: function _flowDone() {\n        fireEvent(this, \"flow-update\", {\n          step: undefined\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_areaPicked\",\n      value: async function _areaPicked(ev) {\n        const picker = ev.currentTarget;\n        const device = picker.device;\n        const area = ev.detail.value;\n        try {\n          await updateDeviceRegistryEntry(this.hass, device, {\n            area_id: area\n          });\n        } catch (err) {\n          showAlertDialog(this, {\n            text: this.hass.localize(\"ui.panel.config.integrations.config_flow.error_saving_area\", {\n              error: err.message\n            })\n          });\n          picker.value = null;\n        }\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [configFlowContentStyles, css`\n        .devices {\n          display: flex;\n          flex-wrap: wrap;\n          margin: -4px;\n          max-height: 600px;\n          overflow-y: auto;\n        }\n        .device {\n          border: 1px solid var(--divider-color);\n          padding: 5px;\n          border-radius: 4px;\n          margin: 4px;\n          display: inline-block;\n          width: 250px;\n        }\n        .buttons > *:last-child {\n          margin-left: auto;\n          margin-inline-start: auto;\n          margin-inline-end: initial;\n        }\n        @media all and (max-width: 450px), all and (max-height: 500px) {\n          .device {\n            width: 100%;\n          }\n        }\n        .error {\n          color: var(--error-color);\n        }\n      `];\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","customElement","property","fireEvent","computeDeviceName","updateDeviceRegistryEntry","showAlertDialog","configFlowContentStyles","StepFlowCreateEntry","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","render","_this$step$result","localize","hass","flowConfig","renderCreateEntryDescription","step","result","state","devices","length","map","device","_device$area_id","model","manufacturer","id","area_id","undefined","_areaPicked","_flowDone","ev","picker","currentTarget","area","detail","err","text","error","message","static","styles"],"sources":["/workspaces/frontend/src/dialogs/config-flow/step-flow-create-entry.ts"],"sourcesContent":["import \"@material/mwc-button\";\nimport { css, CSSResultGroup, html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport \"../../components/ha-area-picker\";\nimport { DataEntryFlowStepCreateEntry } from \"../../data/data_entry_flow\";\nimport {\n  computeDeviceName,\n  DeviceRegistryEntry,\n  updateDeviceRegistryEntry,\n} from \"../../data/device_registry\";\nimport { HomeAssistant } from \"../../types\";\nimport { showAlertDialog } from \"../generic/show-dialog-box\";\nimport { FlowConfig } from \"./show-dialog-data-entry-flow\";\nimport { configFlowContentStyles } from \"./styles\";\n\n@customElement(\"step-flow-create-entry\")\nclass StepFlowCreateEntry extends LitElement {\n  @property({ attribute: false }) public flowConfig!: FlowConfig;\n\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public step!: DataEntryFlowStepCreateEntry;\n\n  @property({ attribute: false }) public devices!: DeviceRegistryEntry[];\n\n  protected render(): TemplateResult {\n    const localize = this.hass.localize;\n\n    return html`\n      <h2>${localize(\"ui.panel.config.integrations.config_flow.success\")}!</h2>\n      <div class=\"content\">\n        ${this.flowConfig.renderCreateEntryDescription(this.hass, this.step)}\n        ${this.step.result?.state === \"not_loaded\"\n          ? html`<span class=\"error\"\n              >${localize(\n                \"ui.panel.config.integrations.config_flow.not_loaded\"\n              )}</span\n            >`\n          : \"\"}\n        ${this.devices.length === 0\n          ? \"\"\n          : html`\n              <p>\n                ${localize(\n                  \"ui.panel.config.integrations.config_flow.found_following_devices\"\n                )}:\n              </p>\n              <div class=\"devices\">\n                ${this.devices.map(\n                  (device) => html`\n                    <div class=\"device\">\n                      <div>\n                        <b>${computeDeviceName(device, this.hass)}</b><br />\n                        ${!device.model && !device.manufacturer\n                          ? html`&nbsp;`\n                          : html`${device.model}\n                            ${device.manufacturer\n                              ? html`(${device.manufacturer})`\n                              : \"\"}`}\n                      </div>\n                      <ha-area-picker\n                        .hass=${this.hass}\n                        .device=${device.id}\n                        .value=${device.area_id ?? undefined}\n                        @value-changed=${this._areaPicked}\n                      ></ha-area-picker>\n                    </div>\n                  `\n                )}\n              </div>\n            `}\n      </div>\n      <div class=\"buttons\">\n        <mwc-button @click=${this._flowDone}\n          >${localize(\n            \"ui.panel.config.integrations.config_flow.finish\"\n          )}</mwc-button\n        >\n      </div>\n    `;\n  }\n\n  private _flowDone(): void {\n    fireEvent(this, \"flow-update\", { step: undefined });\n  }\n\n  private async _areaPicked(ev: CustomEvent) {\n    const picker = ev.currentTarget as any;\n    const device = picker.device;\n\n    const area = ev.detail.value;\n    try {\n      await updateDeviceRegistryEntry(this.hass, device, {\n        area_id: area,\n      });\n    } catch (err: any) {\n      showAlertDialog(this, {\n        text: this.hass.localize(\n          \"ui.panel.config.integrations.config_flow.error_saving_area\",\n          { error: err.message }\n        ),\n      });\n      picker.value = null;\n    }\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      configFlowContentStyles,\n      css`\n        .devices {\n          display: flex;\n          flex-wrap: wrap;\n          margin: -4px;\n          max-height: 600px;\n          overflow-y: auto;\n        }\n        .device {\n          border: 1px solid var(--divider-color);\n          padding: 5px;\n          border-radius: 4px;\n          margin: 4px;\n          display: inline-block;\n          width: 250px;\n        }\n        .buttons > *:last-child {\n          margin-left: auto;\n          margin-inline-start: auto;\n          margin-inline-end: initial;\n        }\n        @media all and (max-width: 450px), all and (max-height: 500px) {\n          .device {\n            width: 100%;\n          }\n        }\n        .error {\n          color: var(--error-color);\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"step-flow-create-entry\": StepFlowCreateEntry;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}