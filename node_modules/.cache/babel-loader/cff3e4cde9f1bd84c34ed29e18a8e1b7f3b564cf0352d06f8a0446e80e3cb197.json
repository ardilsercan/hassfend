{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.number.constructor.js\";\n/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport './iron-overlay-backdrop.js';\nimport { IronA11yKeysBehavior } from '@polymer/iron-a11y-keys-behavior/iron-a11y-keys-behavior.js';\nimport { dom } from '@polymer/polymer/lib/legacy/polymer.dom.js';\nimport * as gestures from '@polymer/polymer/lib/utils/gestures.js';\n\n/**\n * @package\n */\nexport var IronOverlayManagerClass = /*#__PURE__*/function () {\n  function IronOverlayManagerClass() {\n    _classCallCheck(this, IronOverlayManagerClass);\n    /**\n     * Used to keep track of the opened overlays.\n     * @private {!Array<!Element>}\n     */\n    this._overlays = [];\n\n    /**\n     * iframes have a default z-index of 100,\n     * so this default should be at least that.\n     * @private {number}\n     */\n    this._minimumZ = 101;\n\n    /**\n     * Memoized backdrop element.\n     * @private {Element|null}\n     */\n    this._backdropElement = null;\n\n    // Enable document-wide tap recognizer.\n    // NOTE: Use useCapture=true to avoid accidentally prevention of the closing\n    // of an overlay via event.stopPropagation(). The only way to prevent\n    // closing of an overlay should be through its APIs.\n    // NOTE: enable tap on <html> to workaround Polymer/polymer#4459\n    // Pass no-op function because MSEdge 15 doesn't handle null as 2nd argument\n    // https://github.com/Microsoft/ChakraCore/issues/3863\n    gestures.addListener(document.documentElement, 'tap', function () {});\n    document.addEventListener('tap', this._onCaptureClick.bind(this), true);\n    document.addEventListener('focus', this._onCaptureFocus.bind(this), true);\n    document.addEventListener('keydown', this._onCaptureKeyDown.bind(this), true);\n  }\n\n  /**\n   * The shared backdrop element.\n   * @return {!Element} backdropElement\n   */\n  _createClass(IronOverlayManagerClass, [{\n    key: \"backdropElement\",\n    get: function get() {\n      if (!this._backdropElement) {\n        this._backdropElement = document.createElement('iron-overlay-backdrop');\n      }\n      return this._backdropElement;\n    }\n\n    /**\n     * The deepest active element.\n     * @return {!Element} activeElement the active element\n     */\n  }, {\n    key: \"deepActiveElement\",\n    get: function get() {\n      var active = document.activeElement;\n      // document.activeElement can be null\n      // https://developer.mozilla.org/en-US/docs/Web/API/Document/activeElement\n      // In IE 11, it can also be an object when operating in iframes.\n      // In these cases, default it to document.body.\n      if (!active || active instanceof Element === false) {\n        active = document.body;\n      }\n      while (active.root && dom(active.root).activeElement) {\n        active = dom(active.root).activeElement;\n      }\n      return active;\n    }\n\n    /**\n     * Brings the overlay at the specified index to the front.\n     * @param {number} i\n     * @private\n     */\n  }, {\n    key: \"_bringOverlayAtIndexToFront\",\n    value: function _bringOverlayAtIndexToFront(i) {\n      var overlay = this._overlays[i];\n      if (!overlay) {\n        return;\n      }\n      var lastI = this._overlays.length - 1;\n      var currentOverlay = this._overlays[lastI];\n      // Ensure always-on-top overlay stays on top.\n      if (currentOverlay && this._shouldBeBehindOverlay(overlay, currentOverlay)) {\n        lastI--;\n      }\n      // If already the top element, return.\n      if (i >= lastI) {\n        return;\n      }\n      // Update z-index to be on top.\n      var minimumZ = Math.max(this.currentOverlayZ(), this._minimumZ);\n      if (this._getZ(overlay) <= minimumZ) {\n        this._applyOverlayZ(overlay, minimumZ);\n      }\n\n      // Shift other overlays behind the new on top.\n      while (i < lastI) {\n        this._overlays[i] = this._overlays[i + 1];\n        i++;\n      }\n      this._overlays[lastI] = overlay;\n    }\n\n    /**\n     * Adds the overlay and updates its z-index if it's opened, or removes it if\n     * it's closed. Also updates the backdrop z-index.\n     * @param {!Element} overlay\n     */\n  }, {\n    key: \"addOrRemoveOverlay\",\n    value: function addOrRemoveOverlay(overlay) {\n      if (overlay.opened) {\n        this.addOverlay(overlay);\n      } else {\n        this.removeOverlay(overlay);\n      }\n    }\n\n    /**\n     * Tracks overlays for z-index and focus management.\n     * Ensures the last added overlay with always-on-top remains on top.\n     * @param {!Element} overlay\n     */\n  }, {\n    key: \"addOverlay\",\n    value: function addOverlay(overlay) {\n      var i = this._overlays.indexOf(overlay);\n      if (i >= 0) {\n        this._bringOverlayAtIndexToFront(i);\n        this.trackBackdrop();\n        return;\n      }\n      var insertionIndex = this._overlays.length;\n      var currentOverlay = this._overlays[insertionIndex - 1];\n      var minimumZ = Math.max(this._getZ(currentOverlay), this._minimumZ);\n      var newZ = this._getZ(overlay);\n\n      // Ensure always-on-top overlay stays on top.\n      if (currentOverlay && this._shouldBeBehindOverlay(overlay, currentOverlay)) {\n        // This bumps the z-index of +2.\n        this._applyOverlayZ(currentOverlay, minimumZ);\n        insertionIndex--;\n        // Update minimumZ to match previous overlay's z-index.\n        var previousOverlay = this._overlays[insertionIndex - 1];\n        minimumZ = Math.max(this._getZ(previousOverlay), this._minimumZ);\n      }\n\n      // Update z-index and insert overlay.\n      if (newZ <= minimumZ) {\n        this._applyOverlayZ(overlay, minimumZ);\n      }\n      this._overlays.splice(insertionIndex, 0, overlay);\n      this.trackBackdrop();\n    }\n\n    /**\n     * @param {!Element} overlay\n     */\n  }, {\n    key: \"removeOverlay\",\n    value: function removeOverlay(overlay) {\n      var i = this._overlays.indexOf(overlay);\n      if (i === -1) {\n        return;\n      }\n      this._overlays.splice(i, 1);\n      this.trackBackdrop();\n    }\n\n    /**\n     * Returns the current overlay.\n     * @return {!Element|undefined}\n     */\n  }, {\n    key: \"currentOverlay\",\n    value: function currentOverlay() {\n      var i = this._overlays.length - 1;\n      return this._overlays[i];\n    }\n\n    /**\n     * Returns the current overlay z-index.\n     * @return {number}\n     */\n  }, {\n    key: \"currentOverlayZ\",\n    value: function currentOverlayZ() {\n      return this._getZ(this.currentOverlay());\n    }\n\n    /**\n     * Ensures that the minimum z-index of new overlays is at least `minimumZ`.\n     * This does not effect the z-index of any existing overlays.\n     * @param {number} minimumZ\n     */\n  }, {\n    key: \"ensureMinimumZ\",\n    value: function ensureMinimumZ(minimumZ) {\n      this._minimumZ = Math.max(this._minimumZ, minimumZ);\n    }\n  }, {\n    key: \"focusOverlay\",\n    value: function focusOverlay() {\n      var current = /** @type {?} */this.currentOverlay();\n      if (current) {\n        current._applyFocus();\n      }\n    }\n\n    /**\n     * Updates the backdrop z-index.\n     */\n  }, {\n    key: \"trackBackdrop\",\n    value: function trackBackdrop() {\n      var overlay = this._overlayWithBackdrop();\n      // Avoid creating the backdrop if there is no overlay with backdrop.\n      if (!overlay && !this._backdropElement) {\n        return;\n      }\n      this.backdropElement.style.zIndex = this._getZ(overlay) - 1;\n      this.backdropElement.opened = !!overlay;\n      // Property observers are not fired until element is attached\n      // in Polymer 2.x, so we ensure element is attached if needed.\n      // https://github.com/Polymer/polymer/issues/4526\n      this.backdropElement.prepare();\n    }\n\n    /**\n     * @return {!Array<!Element>}\n     */\n  }, {\n    key: \"getBackdrops\",\n    value: function getBackdrops() {\n      var backdrops = [];\n      for (var i = 0; i < this._overlays.length; i++) {\n        if (this._overlays[i].withBackdrop) {\n          backdrops.push(this._overlays[i]);\n        }\n      }\n      return backdrops;\n    }\n\n    /**\n     * Returns the z-index for the backdrop.\n     * @return {number}\n     */\n  }, {\n    key: \"backdropZ\",\n    value: function backdropZ() {\n      return this._getZ(this._overlayWithBackdrop()) - 1;\n    }\n\n    /**\n     * Returns the top opened overlay that has a backdrop.\n     * @return {!Element|undefined}\n     * @private\n     */\n  }, {\n    key: \"_overlayWithBackdrop\",\n    value: function _overlayWithBackdrop() {\n      for (var i = this._overlays.length - 1; i >= 0; i--) {\n        if (this._overlays[i].withBackdrop) {\n          return this._overlays[i];\n        }\n      }\n    }\n\n    /**\n     * Calculates the minimum z-index for the overlay.\n     * @param {Element=} overlay\n     * @private\n     */\n  }, {\n    key: \"_getZ\",\n    value: function _getZ(overlay) {\n      var z = this._minimumZ;\n      if (overlay) {\n        var z1 = Number(overlay.style.zIndex || window.getComputedStyle(overlay).zIndex);\n        // Check if is a number\n        // Number.isNaN not supported in IE 10+\n        if (z1 === z1) {\n          z = z1;\n        }\n      }\n      return z;\n    }\n\n    /**\n     * @param {!Element} element\n     * @param {number|string} z\n     * @private\n     */\n  }, {\n    key: \"_setZ\",\n    value: function _setZ(element, z) {\n      element.style.zIndex = z;\n    }\n\n    /**\n     * @param {!Element} overlay\n     * @param {number} aboveZ\n     * @private\n     */\n  }, {\n    key: \"_applyOverlayZ\",\n    value: function _applyOverlayZ(overlay, aboveZ) {\n      this._setZ(overlay, aboveZ + 2);\n    }\n\n    /**\n     * Returns the deepest overlay in the path.\n     * @param {!Array<!Element>=} path\n     * @return {!Element|undefined}\n     * @suppress {missingProperties}\n     * @private\n     */\n  }, {\n    key: \"_overlayInPath\",\n    value: function _overlayInPath(path) {\n      path = path || [];\n      for (var i = 0; i < path.length; i++) {\n        if (path[i]._manager === this) {\n          return path[i];\n        }\n      }\n    }\n\n    /**\n     * Ensures the click event is delegated to the right overlay.\n     * @param {!Event} event\n     * @private\n     */\n  }, {\n    key: \"_onCaptureClick\",\n    value: function _onCaptureClick(event) {\n      var i = this._overlays.length - 1;\n      if (i === -1) return;\n      var path = /** @type {!Array<!EventTarget>} */dom(event).path;\n      var overlay;\n      // Check if clicked outside of overlay.\n      while ((overlay = /** @type {?} */this._overlays[i]) && this._overlayInPath(path) !== overlay) {\n        overlay._onCaptureClick(event);\n        if (overlay.allowClickThrough) {\n          i--;\n        } else {\n          break;\n        }\n      }\n    }\n\n    /**\n     * Ensures the focus event is delegated to the right overlay.\n     * @param {!Event} event\n     * @private\n     */\n  }, {\n    key: \"_onCaptureFocus\",\n    value: function _onCaptureFocus(event) {\n      var overlay = /** @type {?} */this.currentOverlay();\n      if (overlay) {\n        overlay._onCaptureFocus(event);\n      }\n    }\n\n    /**\n     * Ensures TAB and ESC keyboard events are delegated to the right overlay.\n     * @param {!Event} event\n     * @private\n     */\n  }, {\n    key: \"_onCaptureKeyDown\",\n    value: function _onCaptureKeyDown(event) {\n      var overlay = /** @type {?} */this.currentOverlay();\n      if (overlay) {\n        if (IronA11yKeysBehavior.keyboardEventMatchesKeys(event, 'esc')) {\n          overlay._onCaptureEsc(event);\n        } else if (IronA11yKeysBehavior.keyboardEventMatchesKeys(event, 'tab')) {\n          overlay._onCaptureTab(event);\n        }\n      }\n    }\n\n    /**\n     * Returns if the overlay1 should be behind overlay2.\n     * @param {!Element} overlay1\n     * @param {!Element} overlay2\n     * @return {boolean}\n     * @suppress {missingProperties}\n     * @private\n     */\n  }, {\n    key: \"_shouldBeBehindOverlay\",\n    value: function _shouldBeBehindOverlay(overlay1, overlay2) {\n      return !overlay1.alwaysOnTop && overlay2.alwaysOnTop;\n    }\n  }]);\n  return IronOverlayManagerClass;\n}();\n;\nexport var IronOverlayManager = new IronOverlayManagerClass();","map":{"version":3,"names":["IronA11yKeysBehavior","dom","gestures","IronOverlayManagerClass","_classCallCheck","_overlays","_minimumZ","_backdropElement","addListener","document","documentElement","addEventListener","_onCaptureClick","bind","_onCaptureFocus","_onCaptureKeyDown","_createClass","key","get","createElement","active","activeElement","Element","body","root","value","_bringOverlayAtIndexToFront","i","overlay","lastI","length","currentOverlay","_shouldBeBehindOverlay","minimumZ","Math","max","currentOverlayZ","_getZ","_applyOverlayZ","addOrRemoveOverlay","opened","addOverlay","removeOverlay","indexOf","trackBackdrop","insertionIndex","newZ","previousOverlay","splice","ensureMinimumZ","focusOverlay","current","_applyFocus","_overlayWithBackdrop","backdropElement","style","zIndex","prepare","getBackdrops","backdrops","withBackdrop","push","backdropZ","z","z1","Number","window","getComputedStyle","_setZ","element","aboveZ","_overlayInPath","path","_manager","event","allowClickThrough","keyboardEventMatchesKeys","_onCaptureEsc","_onCaptureTab","overlay1","overlay2","alwaysOnTop","IronOverlayManager"],"sources":["/workspaces/frontend/node_modules/@polymer/iron-overlay-behavior/iron-overlay-manager.js"],"sourcesContent":["/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport './iron-overlay-backdrop.js';\n\nimport {IronA11yKeysBehavior} from '@polymer/iron-a11y-keys-behavior/iron-a11y-keys-behavior.js';\nimport {dom} from '@polymer/polymer/lib/legacy/polymer.dom.js';\nimport * as gestures from '@polymer/polymer/lib/utils/gestures.js';\n\n/**\n * @package\n */\nexport class IronOverlayManagerClass {\n  constructor() {\n    /**\n     * Used to keep track of the opened overlays.\n     * @private {!Array<!Element>}\n     */\n    this._overlays = [];\n\n    /**\n     * iframes have a default z-index of 100,\n     * so this default should be at least that.\n     * @private {number}\n     */\n    this._minimumZ = 101;\n\n    /**\n     * Memoized backdrop element.\n     * @private {Element|null}\n     */\n    this._backdropElement = null;\n\n    // Enable document-wide tap recognizer.\n    // NOTE: Use useCapture=true to avoid accidentally prevention of the closing\n    // of an overlay via event.stopPropagation(). The only way to prevent\n    // closing of an overlay should be through its APIs.\n    // NOTE: enable tap on <html> to workaround Polymer/polymer#4459\n    // Pass no-op function because MSEdge 15 doesn't handle null as 2nd argument\n    // https://github.com/Microsoft/ChakraCore/issues/3863\n    gestures.addListener(document.documentElement, 'tap', function() {});\n    document.addEventListener('tap', this._onCaptureClick.bind(this), true);\n    document.addEventListener('focus', this._onCaptureFocus.bind(this), true);\n    document.addEventListener(\n        'keydown', this._onCaptureKeyDown.bind(this), true);\n  }\n\n  /**\n   * The shared backdrop element.\n   * @return {!Element} backdropElement\n   */\n  get backdropElement() {\n    if (!this._backdropElement) {\n      this._backdropElement = document.createElement('iron-overlay-backdrop');\n    }\n    return this._backdropElement;\n  }\n\n  /**\n   * The deepest active element.\n   * @return {!Element} activeElement the active element\n   */\n  get deepActiveElement() {\n    var active = document.activeElement;\n    // document.activeElement can be null\n    // https://developer.mozilla.org/en-US/docs/Web/API/Document/activeElement\n    // In IE 11, it can also be an object when operating in iframes.\n    // In these cases, default it to document.body.\n    if (!active || active instanceof Element === false) {\n      active = document.body;\n    }\n    while (active.root && dom(active.root).activeElement) {\n      active = dom(active.root).activeElement;\n    }\n    return active;\n  }\n\n  /**\n   * Brings the overlay at the specified index to the front.\n   * @param {number} i\n   * @private\n   */\n  _bringOverlayAtIndexToFront(i) {\n    var overlay = this._overlays[i];\n    if (!overlay) {\n      return;\n    }\n    var lastI = this._overlays.length - 1;\n    var currentOverlay = this._overlays[lastI];\n    // Ensure always-on-top overlay stays on top.\n    if (currentOverlay &&\n        this._shouldBeBehindOverlay(overlay, currentOverlay)) {\n      lastI--;\n    }\n    // If already the top element, return.\n    if (i >= lastI) {\n      return;\n    }\n    // Update z-index to be on top.\n    var minimumZ = Math.max(this.currentOverlayZ(), this._minimumZ);\n    if (this._getZ(overlay) <= minimumZ) {\n      this._applyOverlayZ(overlay, minimumZ);\n    }\n\n    // Shift other overlays behind the new on top.\n    while (i < lastI) {\n      this._overlays[i] = this._overlays[i + 1];\n      i++;\n    }\n    this._overlays[lastI] = overlay;\n  }\n\n  /**\n   * Adds the overlay and updates its z-index if it's opened, or removes it if\n   * it's closed. Also updates the backdrop z-index.\n   * @param {!Element} overlay\n   */\n  addOrRemoveOverlay(overlay) {\n    if (overlay.opened) {\n      this.addOverlay(overlay);\n    } else {\n      this.removeOverlay(overlay);\n    }\n  }\n\n  /**\n   * Tracks overlays for z-index and focus management.\n   * Ensures the last added overlay with always-on-top remains on top.\n   * @param {!Element} overlay\n   */\n  addOverlay(overlay) {\n    var i = this._overlays.indexOf(overlay);\n    if (i >= 0) {\n      this._bringOverlayAtIndexToFront(i);\n      this.trackBackdrop();\n      return;\n    }\n    var insertionIndex = this._overlays.length;\n    var currentOverlay = this._overlays[insertionIndex - 1];\n    var minimumZ = Math.max(this._getZ(currentOverlay), this._minimumZ);\n    var newZ = this._getZ(overlay);\n\n    // Ensure always-on-top overlay stays on top.\n    if (currentOverlay &&\n        this._shouldBeBehindOverlay(overlay, currentOverlay)) {\n      // This bumps the z-index of +2.\n      this._applyOverlayZ(currentOverlay, minimumZ);\n      insertionIndex--;\n      // Update minimumZ to match previous overlay's z-index.\n      var previousOverlay = this._overlays[insertionIndex - 1];\n      minimumZ = Math.max(this._getZ(previousOverlay), this._minimumZ);\n    }\n\n    // Update z-index and insert overlay.\n    if (newZ <= minimumZ) {\n      this._applyOverlayZ(overlay, minimumZ);\n    }\n    this._overlays.splice(insertionIndex, 0, overlay);\n\n    this.trackBackdrop();\n  }\n\n  /**\n   * @param {!Element} overlay\n   */\n  removeOverlay(overlay) {\n    var i = this._overlays.indexOf(overlay);\n    if (i === -1) {\n      return;\n    }\n    this._overlays.splice(i, 1);\n\n    this.trackBackdrop();\n  }\n\n  /**\n   * Returns the current overlay.\n   * @return {!Element|undefined}\n   */\n  currentOverlay() {\n    var i = this._overlays.length - 1;\n    return this._overlays[i];\n  }\n\n  /**\n   * Returns the current overlay z-index.\n   * @return {number}\n   */\n  currentOverlayZ() {\n    return this._getZ(this.currentOverlay());\n  }\n\n  /**\n   * Ensures that the minimum z-index of new overlays is at least `minimumZ`.\n   * This does not effect the z-index of any existing overlays.\n   * @param {number} minimumZ\n   */\n  ensureMinimumZ(minimumZ) {\n    this._minimumZ = Math.max(this._minimumZ, minimumZ);\n  }\n\n  focusOverlay() {\n    var current = /** @type {?} */ (this.currentOverlay());\n    if (current) {\n      current._applyFocus();\n    }\n  }\n\n  /**\n   * Updates the backdrop z-index.\n   */\n  trackBackdrop() {\n    var overlay = this._overlayWithBackdrop();\n    // Avoid creating the backdrop if there is no overlay with backdrop.\n    if (!overlay && !this._backdropElement) {\n      return;\n    }\n    this.backdropElement.style.zIndex = this._getZ(overlay) - 1;\n    this.backdropElement.opened = !!overlay;\n    // Property observers are not fired until element is attached\n    // in Polymer 2.x, so we ensure element is attached if needed.\n    // https://github.com/Polymer/polymer/issues/4526\n    this.backdropElement.prepare();\n  }\n\n  /**\n   * @return {!Array<!Element>}\n   */\n  getBackdrops() {\n    var backdrops = [];\n    for (var i = 0; i < this._overlays.length; i++) {\n      if (this._overlays[i].withBackdrop) {\n        backdrops.push(this._overlays[i]);\n      }\n    }\n    return backdrops;\n  }\n\n  /**\n   * Returns the z-index for the backdrop.\n   * @return {number}\n   */\n  backdropZ() {\n    return this._getZ(this._overlayWithBackdrop()) - 1;\n  }\n\n  /**\n   * Returns the top opened overlay that has a backdrop.\n   * @return {!Element|undefined}\n   * @private\n   */\n  _overlayWithBackdrop() {\n    for (var i = this._overlays.length - 1; i >= 0; i--) {\n      if (this._overlays[i].withBackdrop) {\n        return this._overlays[i];\n      }\n    }\n  }\n\n  /**\n   * Calculates the minimum z-index for the overlay.\n   * @param {Element=} overlay\n   * @private\n   */\n  _getZ(overlay) {\n    var z = this._minimumZ;\n    if (overlay) {\n      var z1 = Number(\n          overlay.style.zIndex || window.getComputedStyle(overlay).zIndex);\n      // Check if is a number\n      // Number.isNaN not supported in IE 10+\n      if (z1 === z1) {\n        z = z1;\n      }\n    }\n    return z;\n  }\n\n  /**\n   * @param {!Element} element\n   * @param {number|string} z\n   * @private\n   */\n  _setZ(element, z) {\n    element.style.zIndex = z;\n  }\n\n  /**\n   * @param {!Element} overlay\n   * @param {number} aboveZ\n   * @private\n   */\n  _applyOverlayZ(overlay, aboveZ) {\n    this._setZ(overlay, aboveZ + 2);\n  }\n\n  /**\n   * Returns the deepest overlay in the path.\n   * @param {!Array<!Element>=} path\n   * @return {!Element|undefined}\n   * @suppress {missingProperties}\n   * @private\n   */\n  _overlayInPath(path) {\n    path = path || [];\n    for (var i = 0; i < path.length; i++) {\n      if (path[i]._manager === this) {\n        return path[i];\n      }\n    }\n  }\n\n  /**\n   * Ensures the click event is delegated to the right overlay.\n   * @param {!Event} event\n   * @private\n   */\n  _onCaptureClick(event) {\n    var i = this._overlays.length - 1;\n    if (i === -1)\n      return;\n    var path = /** @type {!Array<!EventTarget>} */ (dom(event).path);\n    var overlay;\n    // Check if clicked outside of overlay.\n    while ((overlay = /** @type {?} */ (this._overlays[i])) &&\n           this._overlayInPath(path) !== overlay) {\n      overlay._onCaptureClick(event);\n      if (overlay.allowClickThrough) {\n        i--;\n      } else {\n        break;\n      }\n    }\n  }\n\n  /**\n   * Ensures the focus event is delegated to the right overlay.\n   * @param {!Event} event\n   * @private\n   */\n  _onCaptureFocus(event) {\n    var overlay = /** @type {?} */ (this.currentOverlay());\n    if (overlay) {\n      overlay._onCaptureFocus(event);\n    }\n  }\n\n  /**\n   * Ensures TAB and ESC keyboard events are delegated to the right overlay.\n   * @param {!Event} event\n   * @private\n   */\n  _onCaptureKeyDown(event) {\n    var overlay = /** @type {?} */ (this.currentOverlay());\n    if (overlay) {\n      if (IronA11yKeysBehavior.keyboardEventMatchesKeys(event, 'esc')) {\n        overlay._onCaptureEsc(event);\n      } else if (IronA11yKeysBehavior.keyboardEventMatchesKeys(event, 'tab')) {\n        overlay._onCaptureTab(event);\n      }\n    }\n  }\n\n  /**\n   * Returns if the overlay1 should be behind overlay2.\n   * @param {!Element} overlay1\n   * @param {!Element} overlay2\n   * @return {boolean}\n   * @suppress {missingProperties}\n   * @private\n   */\n  _shouldBeBehindOverlay(overlay1, overlay2) {\n    return !overlay1.alwaysOnTop && overlay2.alwaysOnTop;\n  }\n};\n\nexport const IronOverlayManager = new IronOverlayManagerClass();\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}