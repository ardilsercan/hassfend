{"ast":null,"code":"import { getOptimisticCollection } from \"./collection\";\nexport const fetchFrontendUserData = async (conn, key) => {\n  const result = await conn.sendMessagePromise({\n    type: \"frontend/get_user_data\",\n    key\n  });\n  return result.value;\n};\nexport const saveFrontendUserData = async (conn, key, value) => conn.sendMessagePromise({\n  type: \"frontend/set_user_data\",\n  key,\n  value\n});\nexport const getOptimisticFrontendUserDataCollection = (conn, userDataKey) => getOptimisticCollection((_conn, data) => saveFrontendUserData(conn, userDataKey,\n// @ts-ignore\ndata), conn, `_frontendUserData-${userDataKey}`, () => fetchFrontendUserData(conn, userDataKey));\nexport const subscribeFrontendUserData = (conn, userDataKey, onChange) => getOptimisticFrontendUserDataCollection(conn, userDataKey).subscribe(onChange);","map":{"version":3,"names":["getOptimisticCollection","fetchFrontendUserData","conn","key","result","sendMessagePromise","type","value","saveFrontendUserData","getOptimisticFrontendUserDataCollection","userDataKey","_conn","data","subscribeFrontendUserData","onChange","subscribe"],"sources":["/Users/sercanardil/Desktop/frontend/src/data/frontend.ts"],"sourcesContent":["import { Connection } from \"home-assistant-js-websocket\";\nimport { getOptimisticCollection } from \"./collection\";\n\nexport interface CoreFrontendUserData {\n  showAdvanced?: boolean;\n}\n\ndeclare global {\n  interface FrontendUserData {\n    core: CoreFrontendUserData;\n  }\n}\n\nexport type ValidUserDataKey = keyof FrontendUserData;\n\nexport const fetchFrontendUserData = async <\n  UserDataKey extends ValidUserDataKey,\n>(\n  conn: Connection,\n  key: UserDataKey\n): Promise<FrontendUserData[UserDataKey] | null> => {\n  const result = await conn.sendMessagePromise<{\n    value: FrontendUserData[UserDataKey] | null;\n  }>({\n    type: \"frontend/get_user_data\",\n    key,\n  });\n  return result.value;\n};\n\nexport const saveFrontendUserData = async <\n  UserDataKey extends ValidUserDataKey,\n>(\n  conn: Connection,\n  key: UserDataKey,\n  value: FrontendUserData[UserDataKey]\n): Promise<void> =>\n  conn.sendMessagePromise<void>({\n    type: \"frontend/set_user_data\",\n    key,\n    value,\n  });\n\nexport const getOptimisticFrontendUserDataCollection = <\n  UserDataKey extends ValidUserDataKey,\n>(\n  conn: Connection,\n  userDataKey: UserDataKey\n) =>\n  getOptimisticCollection(\n    (_conn, data) =>\n      saveFrontendUserData(\n        conn,\n        userDataKey,\n        // @ts-ignore\n        data\n      ),\n    conn,\n    `_frontendUserData-${userDataKey}`,\n    () => fetchFrontendUserData(conn, userDataKey)\n  );\n\nexport const subscribeFrontendUserData = <UserDataKey extends ValidUserDataKey>(\n  conn: Connection,\n  userDataKey: UserDataKey,\n  onChange: (state: FrontendUserData[UserDataKey] | null) => void\n) =>\n  getOptimisticFrontendUserDataCollection(conn, userDataKey).subscribe(\n    onChange\n  );\n"],"mappings":"AACA,SAASA,uBAAuB,QAAQ,cAAc;AActD,OAAO,MAAMC,qBAAqB,GAAG,MAAAA,CAGnCC,IAAgB,EAChBC,GAAgB,KACkC;EAClD,MAAMC,MAAM,GAAG,MAAMF,IAAI,CAACG,kBAAkB,CAEzC;IACDC,IAAI,EAAE,wBAAwB;IAC9BH;EACF,CAAC,CAAC;EACF,OAAOC,MAAM,CAACG,KAAK;AACrB,CAAC;AAED,OAAO,MAAMC,oBAAoB,GAAG,MAAAA,CAGlCN,IAAgB,EAChBC,GAAgB,EAChBI,KAAoC,KAEpCL,IAAI,CAACG,kBAAkB,CAAO;EAC5BC,IAAI,EAAE,wBAAwB;EAC9BH,GAAG;EACHI;AACF,CAAC,CAAC;AAEJ,OAAO,MAAME,uCAAuC,GAAGA,CAGrDP,IAAgB,EAChBQ,WAAwB,KAExBV,uBAAuB,CACrB,CAACW,KAAK,EAAEC,IAAI,KACVJ,oBAAoB,CAClBN,IAAI,EACJQ,WAAW;AACX;AACAE,IACF,CAAC,EACHV,IAAI,EACH,qBAAoBQ,WAAY,EAAC,EAClC,MAAMT,qBAAqB,CAACC,IAAI,EAAEQ,WAAW,CAC/C,CAAC;AAEH,OAAO,MAAMG,yBAAyB,GAAGA,CACvCX,IAAgB,EAChBQ,WAAwB,EACxBI,QAA+D,KAE/DL,uCAAuC,CAACP,IAAI,EAAEQ,WAAW,CAAC,CAACK,SAAS,CAClED,QACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}