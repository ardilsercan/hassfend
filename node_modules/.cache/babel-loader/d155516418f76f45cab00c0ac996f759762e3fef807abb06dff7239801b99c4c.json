{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.parse-int.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\n/**\n * @license\n * Copyright (c) 2015 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { get } from '@vaadin/component-base/src/path-utils.js';\nimport { generateUniqueId } from '@vaadin/component-base/src/unique-id-utils.js';\nimport { Virtualizer } from '@vaadin/component-base/src/virtualizer.js';\nimport { ComboBoxPlaceholder } from './vaadin-combo-box-placeholder.js';\n\n/**\n * @polymerMixin\n */\nexport var ComboBoxScrollerMixin = function ComboBoxScrollerMixin(superClass) {\n  return /*#__PURE__*/function (_superClass) {\n    _inherits(ComboBoxScrollerMixin, _superClass);\n    function ComboBoxScrollerMixin() {\n      var _this;\n      _classCallCheck(this, ComboBoxScrollerMixin);\n      _this = _callSuper(this, ComboBoxScrollerMixin);\n      _this.__boundOnItemClick = _this.__onItemClick.bind(_assertThisInitialized(_this));\n      return _this;\n    }\n\n    /** @private */\n    _createClass(ComboBoxScrollerMixin, [{\n      key: \"_viewportTotalPaddingBottom\",\n      get: function get() {\n        if (this._cachedViewportTotalPaddingBottom === undefined) {\n          var itemsStyle = window.getComputedStyle(this.$.selector);\n          this._cachedViewportTotalPaddingBottom = [itemsStyle.paddingBottom, itemsStyle.borderBottomWidth].map(function (v) {\n            return parseInt(v, 10);\n          }).reduce(function (sum, v) {\n            return sum + v;\n          });\n        }\n        return this._cachedViewportTotalPaddingBottom;\n      }\n\n      /** @protected */\n    }, {\n      key: \"ready\",\n      value: function ready() {\n        _get(_getPrototypeOf(ComboBoxScrollerMixin.prototype), \"ready\", this).call(this);\n        this.setAttribute('role', 'listbox');\n\n        // Ensure every instance has unique ID\n        this.id = \"\".concat(this.localName, \"-\").concat(generateUniqueId());\n\n        // Allow extensions to customize tag name for the items\n        this.__hostTagName = this.constructor.is.replace('-scroller', '');\n        this.addEventListener('click', function (e) {\n          return e.stopPropagation();\n        });\n        this.__patchWheelOverScrolling();\n        this.__virtualizer = new Virtualizer({\n          createElements: this.__createElements.bind(this),\n          updateElement: this._updateElement.bind(this),\n          elementsContainer: this,\n          scrollTarget: this,\n          scrollContainer: this.$.selector\n        });\n      }\n\n      /**\n       * Requests an update for the virtualizer to re-render items.\n       */\n    }, {\n      key: \"requestContentUpdate\",\n      value: function requestContentUpdate() {\n        if (this.__virtualizer) {\n          this.__virtualizer.update();\n        }\n      }\n\n      /**\n       * Scrolls an item at given index into view and adjusts `scrollTop`\n       * so that the element gets fully visible on Arrow Down key press.\n       * @param {number} index\n       */\n    }, {\n      key: \"scrollIntoView\",\n      value: function scrollIntoView(index) {\n        var _this2 = this;\n        if (!(this.opened && index >= 0)) {\n          return;\n        }\n        var visibleItemsCount = this._visibleItemsCount();\n        var targetIndex = index;\n        if (index > this.__virtualizer.lastVisibleIndex - 1) {\n          // Index is below the bottom, scrolling down. Make the item appear at the bottom.\n          // First scroll to target (will be at the top of the scroller) to make sure it's rendered.\n          this.__virtualizer.scrollToIndex(index);\n          // Then calculate the index for the following scroll (to get the target to bottom of the scroller).\n          targetIndex = index - visibleItemsCount + 1;\n        } else if (index > this.__virtualizer.firstVisibleIndex) {\n          // The item is already visible, scrolling is unnecessary per se. But we need to trigger iron-list to set\n          // the correct scrollTop on the scrollTarget. Scrolling to firstVisibleIndex.\n          targetIndex = this.__virtualizer.firstVisibleIndex;\n        }\n        this.__virtualizer.scrollToIndex(Math.max(0, targetIndex));\n\n        // Sometimes the item is partly below the bottom edge, detect and adjust.\n        var lastPhysicalItem = _toConsumableArray(this.children).find(function (el) {\n          return !el.hidden && el.index === _this2.__virtualizer.lastVisibleIndex;\n        });\n        if (!lastPhysicalItem || index !== lastPhysicalItem.index) {\n          return;\n        }\n        var lastPhysicalItemRect = lastPhysicalItem.getBoundingClientRect();\n        var scrollerRect = this.getBoundingClientRect();\n        var scrollTopAdjust = lastPhysicalItemRect.bottom - scrollerRect.bottom + this._viewportTotalPaddingBottom;\n        if (scrollTopAdjust > 0) {\n          this.scrollTop += scrollTopAdjust;\n        }\n      }\n\n      /**\n       * @param {string | object} item\n       * @param {string | object} selectedItem\n       * @param {string} itemIdPath\n       * @protected\n       */\n    }, {\n      key: \"_isItemSelected\",\n      value: function _isItemSelected(item, selectedItem, itemIdPath) {\n        if (item instanceof ComboBoxPlaceholder) {\n          return false;\n        } else if (itemIdPath && item !== undefined && selectedItem !== undefined) {\n          return get(itemIdPath, item) === get(itemIdPath, selectedItem);\n        }\n        return item === selectedItem;\n      }\n\n      /** @private */\n    }, {\n      key: \"__itemsChanged\",\n      value: function __itemsChanged(items) {\n        if (this.__virtualizer && items) {\n          this.__virtualizer.size = items.length;\n          this.__virtualizer.flush();\n          this.requestContentUpdate();\n        }\n      }\n\n      /** @private */\n    }, {\n      key: \"__loadingChanged\",\n      value: function __loadingChanged() {\n        this.requestContentUpdate();\n      }\n\n      /** @private */\n    }, {\n      key: \"__openedChanged\",\n      value: function __openedChanged(opened) {\n        if (opened) {\n          this.requestContentUpdate();\n        }\n      }\n\n      /** @private */\n    }, {\n      key: \"__selectedItemChanged\",\n      value: function __selectedItemChanged() {\n        this.requestContentUpdate();\n      }\n\n      /** @private */\n    }, {\n      key: \"__focusedIndexChanged\",\n      value: function __focusedIndexChanged(index, oldIndex) {\n        if (index !== oldIndex) {\n          this.requestContentUpdate();\n        }\n\n        // Do not jump back to the previously focused item while loading\n        // when requesting next page from the data provider on scroll.\n        if (index >= 0 && !this.loading) {\n          this.scrollIntoView(index);\n        }\n      }\n\n      /** @private */\n    }, {\n      key: \"__rendererChanged\",\n      value: function __rendererChanged(renderer, oldRenderer) {\n        if (renderer || oldRenderer) {\n          this.requestContentUpdate();\n        }\n      }\n\n      /** @private */\n    }, {\n      key: \"__createElements\",\n      value: function __createElements(count) {\n        var _this3 = this;\n        return _toConsumableArray(Array(count)).map(function () {\n          var item = document.createElement(\"\".concat(_this3.__hostTagName, \"-item\"));\n          item.addEventListener('click', _this3.__boundOnItemClick);\n          // Negative tabindex prevents the item content from being focused.\n          item.tabIndex = '-1';\n          item.style.width = '100%';\n          return item;\n        });\n      }\n\n      /**\n       * @param {HTMLElement} el\n       * @param {number} index\n       * @protected\n       */\n    }, {\n      key: \"_updateElement\",\n      value: function _updateElement(el, index) {\n        var item = this.items[index];\n        var focusedIndex = this.focusedIndex;\n        var selected = this._isItemSelected(item, this.selectedItem, this.itemIdPath);\n        el.setProperties({\n          item: item,\n          index: index,\n          label: this.getItemLabel(item),\n          selected: selected,\n          renderer: this.renderer,\n          focused: !this.loading && focusedIndex === index\n        });\n        el.id = \"\".concat(this.__hostTagName, \"-item-\").concat(index);\n        el.setAttribute('role', index !== undefined ? 'option' : false);\n        el.setAttribute('aria-selected', selected.toString());\n        el.setAttribute('aria-posinset', index + 1);\n        el.setAttribute('aria-setsize', this.items.length);\n        if (this.theme) {\n          el.setAttribute('theme', this.theme);\n        } else {\n          el.removeAttribute('theme');\n        }\n        if (item instanceof ComboBoxPlaceholder) {\n          this.__requestItemByIndex(index);\n        }\n      }\n\n      /** @private */\n    }, {\n      key: \"__onItemClick\",\n      value: function __onItemClick(e) {\n        this.dispatchEvent(new CustomEvent('selection-changed', {\n          detail: {\n            item: e.currentTarget.item\n          }\n        }));\n      }\n\n      /**\n       * We want to prevent the kinetic scrolling energy from being transferred from the overlay contents over to the parent.\n       * Further improvement ideas: after the contents have been scrolled to the top or bottom and scrolling has stopped, it could allow\n       * scrolling the parent similarly to touch scrolling.\n       * @private\n       */\n    }, {\n      key: \"__patchWheelOverScrolling\",\n      value: function __patchWheelOverScrolling() {\n        var _this4 = this;\n        this.$.selector.addEventListener('wheel', function (e) {\n          var scrolledToTop = _this4.scrollTop === 0;\n          var scrolledToBottom = _this4.scrollHeight - _this4.scrollTop - _this4.clientHeight <= 1;\n          if (scrolledToTop && e.deltaY < 0) {\n            e.preventDefault();\n          } else if (scrolledToBottom && e.deltaY > 0) {\n            e.preventDefault();\n          }\n        });\n      }\n\n      /**\n       * Dispatches an `index-requested` event for the given index to notify\n       * the data provider that it should start loading the page containing the requested index.\n       *\n       * The event is dispatched asynchronously to prevent an immediate page request and therefore\n       * a possible infinite recursion in case the data provider implements page request cancelation logic\n       * by invoking data provider page callbacks with an empty array.\n       * The infinite recursion may occur otherwise since invoking a data provider page callback with an empty array\n       * triggers a synchronous scroller update and, if the callback corresponds to the currently visible page,\n       * the scroller will synchronously request the page again which may lead to looping in the end.\n       * That was the case for the Flow counterpart:\n       * https://github.com/vaadin/flow-components/issues/3553#issuecomment-1239344828\n       * @private\n       */\n    }, {\n      key: \"__requestItemByIndex\",\n      value: function __requestItemByIndex(index) {\n        var _this5 = this;\n        requestAnimationFrame(function () {\n          _this5.dispatchEvent(new CustomEvent('index-requested', {\n            detail: {\n              index: index,\n              currentScrollerPos: _this5._oldScrollerPosition\n            }\n          }));\n        });\n      }\n\n      /** @private */\n    }, {\n      key: \"_visibleItemsCount\",\n      value: function _visibleItemsCount() {\n        // Ensure items are positioned\n        this.__virtualizer.scrollToIndex(this.__virtualizer.firstVisibleIndex);\n        var hasItems = this.__virtualizer.size > 0;\n        return hasItems ? this.__virtualizer.lastVisibleIndex - this.__virtualizer.firstVisibleIndex + 1 : 0;\n      }\n    }], [{\n      key: \"properties\",\n      get: function get() {\n        return {\n          /**\n           * A full set of items to filter the visible options from.\n           * Set to an empty array when combo-box is not opened.\n           */\n          items: {\n            type: Array,\n            observer: '__itemsChanged'\n          },\n          /**\n           * Index of an item that has focus outline and is scrolled into view.\n           * The actual focus still remains in the input field.\n           */\n          focusedIndex: {\n            type: Number,\n            observer: '__focusedIndexChanged'\n          },\n          /**\n           * Set to true while combo-box fetches new page from the data provider.\n           */\n          loading: {\n            type: Boolean,\n            observer: '__loadingChanged'\n          },\n          /**\n           * Whether the combo-box is currently opened or not. If set to false,\n           * calling `scrollIntoView` does not have any effect.\n           */\n          opened: {\n            type: Boolean,\n            observer: '__openedChanged'\n          },\n          /**\n           * The selected item from the `items` array.\n           */\n          selectedItem: {\n            type: Object,\n            observer: '__selectedItemChanged'\n          },\n          /**\n           * Path for the id of the item, used to detect whether the item is selected.\n           */\n          itemIdPath: {\n            type: String\n          },\n          /**\n           * Reference to the owner (combo-box owner), used by the item elements.\n           */\n          owner: {\n            type: Object\n          },\n          /**\n           * Function used to set a label for every combo-box item.\n           */\n          getItemLabel: {\n            type: Object\n          },\n          /**\n           * Function used to render the content of every combo-box item.\n           */\n          renderer: {\n            type: Object,\n            observer: '__rendererChanged'\n          },\n          /**\n           * Used to propagate the `theme` attribute from the host element.\n           */\n          theme: {\n            type: String\n          }\n        };\n      }\n    }]);\n    return ComboBoxScrollerMixin;\n  }(superClass);\n};","map":{"version":3,"names":["get","generateUniqueId","Virtualizer","ComboBoxPlaceholder","ComboBoxScrollerMixin","superClass","_superClass","_inherits","_this","_classCallCheck","_callSuper","__boundOnItemClick","__onItemClick","bind","_assertThisInitialized","_createClass","key","_cachedViewportTotalPaddingBottom","undefined","itemsStyle","window","getComputedStyle","$","selector","paddingBottom","borderBottomWidth","map","v","parseInt","reduce","sum","value","ready","_get","_getPrototypeOf","prototype","call","setAttribute","id","concat","localName","__hostTagName","constructor","is","replace","addEventListener","e","stopPropagation","__patchWheelOverScrolling","__virtualizer","createElements","__createElements","updateElement","_updateElement","elementsContainer","scrollTarget","scrollContainer","requestContentUpdate","update","scrollIntoView","index","_this2","opened","visibleItemsCount","_visibleItemsCount","targetIndex","lastVisibleIndex","scrollToIndex","firstVisibleIndex","Math","max","lastPhysicalItem","_toConsumableArray","children","find","el","hidden","lastPhysicalItemRect","getBoundingClientRect","scrollerRect","scrollTopAdjust","bottom","_viewportTotalPaddingBottom","scrollTop","_isItemSelected","item","selectedItem","itemIdPath","__itemsChanged","items","size","length","flush","__loadingChanged","__openedChanged","__selectedItemChanged","__focusedIndexChanged","oldIndex","loading","__rendererChanged","renderer","oldRenderer","count","_this3","Array","document","createElement","tabIndex","style","width","focusedIndex","selected","setProperties","label","getItemLabel","focused","toString","theme","removeAttribute","__requestItemByIndex","dispatchEvent","CustomEvent","detail","currentTarget","_this4","scrolledToTop","scrolledToBottom","scrollHeight","clientHeight","deltaY","preventDefault","_this5","requestAnimationFrame","currentScrollerPos","_oldScrollerPosition","hasItems","type","observer","Number","Boolean","Object","String","owner"],"sources":["/workspaces/frontend/node_modules/@vaadin/combo-box/src/vaadin-combo-box-scroller-mixin.js"],"sourcesContent":["/**\n * @license\n * Copyright (c) 2015 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { get } from '@vaadin/component-base/src/path-utils.js';\nimport { generateUniqueId } from '@vaadin/component-base/src/unique-id-utils.js';\nimport { Virtualizer } from '@vaadin/component-base/src/virtualizer.js';\nimport { ComboBoxPlaceholder } from './vaadin-combo-box-placeholder.js';\n\n/**\n * @polymerMixin\n */\nexport const ComboBoxScrollerMixin = (superClass) =>\n  class ComboBoxScrollerMixin extends superClass {\n    static get properties() {\n      return {\n        /**\n         * A full set of items to filter the visible options from.\n         * Set to an empty array when combo-box is not opened.\n         */\n        items: {\n          type: Array,\n          observer: '__itemsChanged',\n        },\n\n        /**\n         * Index of an item that has focus outline and is scrolled into view.\n         * The actual focus still remains in the input field.\n         */\n        focusedIndex: {\n          type: Number,\n          observer: '__focusedIndexChanged',\n        },\n\n        /**\n         * Set to true while combo-box fetches new page from the data provider.\n         */\n        loading: {\n          type: Boolean,\n          observer: '__loadingChanged',\n        },\n\n        /**\n         * Whether the combo-box is currently opened or not. If set to false,\n         * calling `scrollIntoView` does not have any effect.\n         */\n        opened: {\n          type: Boolean,\n          observer: '__openedChanged',\n        },\n\n        /**\n         * The selected item from the `items` array.\n         */\n        selectedItem: {\n          type: Object,\n          observer: '__selectedItemChanged',\n        },\n\n        /**\n         * Path for the id of the item, used to detect whether the item is selected.\n         */\n        itemIdPath: {\n          type: String,\n        },\n\n        /**\n         * Reference to the owner (combo-box owner), used by the item elements.\n         */\n        owner: {\n          type: Object,\n        },\n\n        /**\n         * Function used to set a label for every combo-box item.\n         */\n        getItemLabel: {\n          type: Object,\n        },\n\n        /**\n         * Function used to render the content of every combo-box item.\n         */\n        renderer: {\n          type: Object,\n          observer: '__rendererChanged',\n        },\n\n        /**\n         * Used to propagate the `theme` attribute from the host element.\n         */\n        theme: {\n          type: String,\n        },\n      };\n    }\n\n    constructor() {\n      super();\n      this.__boundOnItemClick = this.__onItemClick.bind(this);\n    }\n\n    /** @private */\n    get _viewportTotalPaddingBottom() {\n      if (this._cachedViewportTotalPaddingBottom === undefined) {\n        const itemsStyle = window.getComputedStyle(this.$.selector);\n        this._cachedViewportTotalPaddingBottom = [itemsStyle.paddingBottom, itemsStyle.borderBottomWidth]\n          .map((v) => {\n            return parseInt(v, 10);\n          })\n          .reduce((sum, v) => {\n            return sum + v;\n          });\n      }\n\n      return this._cachedViewportTotalPaddingBottom;\n    }\n\n    /** @protected */\n    ready() {\n      super.ready();\n\n      this.setAttribute('role', 'listbox');\n\n      // Ensure every instance has unique ID\n      this.id = `${this.localName}-${generateUniqueId()}`;\n\n      // Allow extensions to customize tag name for the items\n      this.__hostTagName = this.constructor.is.replace('-scroller', '');\n\n      this.addEventListener('click', (e) => e.stopPropagation());\n\n      this.__patchWheelOverScrolling();\n\n      this.__virtualizer = new Virtualizer({\n        createElements: this.__createElements.bind(this),\n        updateElement: this._updateElement.bind(this),\n        elementsContainer: this,\n        scrollTarget: this,\n        scrollContainer: this.$.selector,\n      });\n    }\n\n    /**\n     * Requests an update for the virtualizer to re-render items.\n     */\n    requestContentUpdate() {\n      if (this.__virtualizer) {\n        this.__virtualizer.update();\n      }\n    }\n\n    /**\n     * Scrolls an item at given index into view and adjusts `scrollTop`\n     * so that the element gets fully visible on Arrow Down key press.\n     * @param {number} index\n     */\n    scrollIntoView(index) {\n      if (!(this.opened && index >= 0)) {\n        return;\n      }\n\n      const visibleItemsCount = this._visibleItemsCount();\n\n      let targetIndex = index;\n\n      if (index > this.__virtualizer.lastVisibleIndex - 1) {\n        // Index is below the bottom, scrolling down. Make the item appear at the bottom.\n        // First scroll to target (will be at the top of the scroller) to make sure it's rendered.\n        this.__virtualizer.scrollToIndex(index);\n        // Then calculate the index for the following scroll (to get the target to bottom of the scroller).\n        targetIndex = index - visibleItemsCount + 1;\n      } else if (index > this.__virtualizer.firstVisibleIndex) {\n        // The item is already visible, scrolling is unnecessary per se. But we need to trigger iron-list to set\n        // the correct scrollTop on the scrollTarget. Scrolling to firstVisibleIndex.\n        targetIndex = this.__virtualizer.firstVisibleIndex;\n      }\n      this.__virtualizer.scrollToIndex(Math.max(0, targetIndex));\n\n      // Sometimes the item is partly below the bottom edge, detect and adjust.\n      const lastPhysicalItem = [...this.children].find(\n        (el) => !el.hidden && el.index === this.__virtualizer.lastVisibleIndex,\n      );\n      if (!lastPhysicalItem || index !== lastPhysicalItem.index) {\n        return;\n      }\n      const lastPhysicalItemRect = lastPhysicalItem.getBoundingClientRect();\n      const scrollerRect = this.getBoundingClientRect();\n      const scrollTopAdjust = lastPhysicalItemRect.bottom - scrollerRect.bottom + this._viewportTotalPaddingBottom;\n      if (scrollTopAdjust > 0) {\n        this.scrollTop += scrollTopAdjust;\n      }\n    }\n\n    /**\n     * @param {string | object} item\n     * @param {string | object} selectedItem\n     * @param {string} itemIdPath\n     * @protected\n     */\n    _isItemSelected(item, selectedItem, itemIdPath) {\n      if (item instanceof ComboBoxPlaceholder) {\n        return false;\n      } else if (itemIdPath && item !== undefined && selectedItem !== undefined) {\n        return get(itemIdPath, item) === get(itemIdPath, selectedItem);\n      }\n      return item === selectedItem;\n    }\n\n    /** @private */\n    __itemsChanged(items) {\n      if (this.__virtualizer && items) {\n        this.__virtualizer.size = items.length;\n        this.__virtualizer.flush();\n        this.requestContentUpdate();\n      }\n    }\n\n    /** @private */\n    __loadingChanged() {\n      this.requestContentUpdate();\n    }\n\n    /** @private */\n    __openedChanged(opened) {\n      if (opened) {\n        this.requestContentUpdate();\n      }\n    }\n\n    /** @private */\n    __selectedItemChanged() {\n      this.requestContentUpdate();\n    }\n\n    /** @private */\n    __focusedIndexChanged(index, oldIndex) {\n      if (index !== oldIndex) {\n        this.requestContentUpdate();\n      }\n\n      // Do not jump back to the previously focused item while loading\n      // when requesting next page from the data provider on scroll.\n      if (index >= 0 && !this.loading) {\n        this.scrollIntoView(index);\n      }\n    }\n\n    /** @private */\n    __rendererChanged(renderer, oldRenderer) {\n      if (renderer || oldRenderer) {\n        this.requestContentUpdate();\n      }\n    }\n\n    /** @private */\n    __createElements(count) {\n      return [...Array(count)].map(() => {\n        const item = document.createElement(`${this.__hostTagName}-item`);\n        item.addEventListener('click', this.__boundOnItemClick);\n        // Negative tabindex prevents the item content from being focused.\n        item.tabIndex = '-1';\n        item.style.width = '100%';\n        return item;\n      });\n    }\n\n    /**\n     * @param {HTMLElement} el\n     * @param {number} index\n     * @protected\n     */\n    _updateElement(el, index) {\n      const item = this.items[index];\n      const focusedIndex = this.focusedIndex;\n      const selected = this._isItemSelected(item, this.selectedItem, this.itemIdPath);\n\n      el.setProperties({\n        item,\n        index,\n        label: this.getItemLabel(item),\n        selected,\n        renderer: this.renderer,\n        focused: !this.loading && focusedIndex === index,\n      });\n\n      el.id = `${this.__hostTagName}-item-${index}`;\n      el.setAttribute('role', index !== undefined ? 'option' : false);\n      el.setAttribute('aria-selected', selected.toString());\n      el.setAttribute('aria-posinset', index + 1);\n      el.setAttribute('aria-setsize', this.items.length);\n\n      if (this.theme) {\n        el.setAttribute('theme', this.theme);\n      } else {\n        el.removeAttribute('theme');\n      }\n\n      if (item instanceof ComboBoxPlaceholder) {\n        this.__requestItemByIndex(index);\n      }\n    }\n\n    /** @private */\n    __onItemClick(e) {\n      this.dispatchEvent(new CustomEvent('selection-changed', { detail: { item: e.currentTarget.item } }));\n    }\n\n    /**\n     * We want to prevent the kinetic scrolling energy from being transferred from the overlay contents over to the parent.\n     * Further improvement ideas: after the contents have been scrolled to the top or bottom and scrolling has stopped, it could allow\n     * scrolling the parent similarly to touch scrolling.\n     * @private\n     */\n    __patchWheelOverScrolling() {\n      this.$.selector.addEventListener('wheel', (e) => {\n        const scrolledToTop = this.scrollTop === 0;\n        const scrolledToBottom = this.scrollHeight - this.scrollTop - this.clientHeight <= 1;\n        if (scrolledToTop && e.deltaY < 0) {\n          e.preventDefault();\n        } else if (scrolledToBottom && e.deltaY > 0) {\n          e.preventDefault();\n        }\n      });\n    }\n\n    /**\n     * Dispatches an `index-requested` event for the given index to notify\n     * the data provider that it should start loading the page containing the requested index.\n     *\n     * The event is dispatched asynchronously to prevent an immediate page request and therefore\n     * a possible infinite recursion in case the data provider implements page request cancelation logic\n     * by invoking data provider page callbacks with an empty array.\n     * The infinite recursion may occur otherwise since invoking a data provider page callback with an empty array\n     * triggers a synchronous scroller update and, if the callback corresponds to the currently visible page,\n     * the scroller will synchronously request the page again which may lead to looping in the end.\n     * That was the case for the Flow counterpart:\n     * https://github.com/vaadin/flow-components/issues/3553#issuecomment-1239344828\n     * @private\n     */\n    __requestItemByIndex(index) {\n      requestAnimationFrame(() => {\n        this.dispatchEvent(\n          new CustomEvent('index-requested', {\n            detail: {\n              index,\n              currentScrollerPos: this._oldScrollerPosition,\n            },\n          }),\n        );\n      });\n    }\n\n    /** @private */\n    _visibleItemsCount() {\n      // Ensure items are positioned\n      this.__virtualizer.scrollToIndex(this.__virtualizer.firstVisibleIndex);\n      const hasItems = this.__virtualizer.size > 0;\n      return hasItems ? this.__virtualizer.lastVisibleIndex - this.__virtualizer.firstVisibleIndex + 1 : 0;\n    }\n  };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}