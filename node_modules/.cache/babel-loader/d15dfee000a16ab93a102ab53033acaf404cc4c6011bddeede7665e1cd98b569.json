{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport { css, html, LitElement } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport { deleteConfigEntry } from \"../../../data/config_entries\";\nimport { showConfirmationDialog } from \"../../../dialogs/generic/show-dialog-box\";\nimport \"./ha-integration-action-card\";\nimport \"../../../components/ha-button\";\nexport let HaIgnoredConfigEntryCard = _decorate([customElement(\"ha-ignored-config-entry-card\")], function (_initialize, _LitElement) {\n  class HaIgnoredConfigEntryCard extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaIgnoredConfigEntryCard,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"entry\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"manifest\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        return html`\n      <ha-integration-action-card\n        .hass=${this.hass}\n        .manifest=${this.manifest}\n        .banner=${this.hass.localize(\"ui.panel.config.integrations.ignore.ignored\")}\n        .domain=${this.entry.domain}\n        .localizedDomainName=${this.entry.localized_domain_name}\n        .label=${this.entry.title === \"Ignored\" ?\n        // In 2020.2 we added support for entry.title. All ignored entries before\n        // that have title \"Ignored\" so we fallback to localized domain name.\n        this.entry.localized_domain_name : this.entry.title}\n      >\n        <ha-button\n          @click=${this._removeIgnoredIntegration}\n          .label=${this.hass.localize(\"ui.panel.config.integrations.ignore.stop_ignore\")}\n        ></ha-button>\n      </ha-integration-action-card>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_removeIgnoredIntegration\",\n      value: async function _removeIgnoredIntegration() {\n        showConfirmationDialog(this, {\n          title: this.hass.localize(\"ui.panel.config.integrations.ignore.confirm_delete_ignore_title\", {\n            name: this.hass.localize(`component.${this.entry.domain}.title`)\n          }),\n          text: this.hass.localize(\"ui.panel.config.integrations.ignore.confirm_delete_ignore\"),\n          confirmText: this.hass.localize(\"ui.panel.config.integrations.ignore.stop_ignore\"),\n          confirm: async () => {\n            const result = await deleteConfigEntry(this.hass, this.entry.entry_id);\n            if (result.require_restart) {\n              alert(this.hass.localize(\"ui.panel.config.integrations.config_entry.restart_confirm\"));\n            }\n            fireEvent(this, \"change\", undefined, {\n              bubbles: false\n            });\n          }\n        });\n      }\n    }, {\n      kind: \"field\",\n      static: true,\n      key: \"styles\",\n      value() {\n        return css`\n    :host {\n      --state-color: var(--divider-color, #e0e0e0);\n    }\n\n    ha-button {\n      --mdc-theme-primary: var(--primary-color);\n    }\n  `;\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","customElement","property","fireEvent","deleteConfigEntry","showConfirmationDialog","HaIgnoredConfigEntryCard","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","render","hass","manifest","localize","entry","domain","localized_domain_name","title","_removeIgnoredIntegration","name","text","confirmText","confirm","result","entry_id","require_restart","alert","undefined","bubbles","static"],"sources":["/Users/sercanardil/Desktop/frontend/src/panels/config/integrations/ha-ignored-config-entry-card.ts"],"sourcesContent":["import { css, html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport { deleteConfigEntry } from \"../../../data/config_entries\";\nimport type { IntegrationManifest } from \"../../../data/integration\";\nimport { showConfirmationDialog } from \"../../../dialogs/generic/show-dialog-box\";\nimport type { HomeAssistant } from \"../../../types\";\nimport type { ConfigEntryExtended } from \"./ha-config-integrations\";\nimport \"./ha-integration-action-card\";\nimport \"../../../components/ha-button\";\n\n@customElement(\"ha-ignored-config-entry-card\")\nexport class HaIgnoredConfigEntryCard extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public entry!: ConfigEntryExtended;\n\n  @property({ attribute: false }) public manifest?: IntegrationManifest;\n\n  protected render(): TemplateResult {\n    return html`\n      <ha-integration-action-card\n        .hass=${this.hass}\n        .manifest=${this.manifest}\n        .banner=${this.hass.localize(\n          \"ui.panel.config.integrations.ignore.ignored\"\n        )}\n        .domain=${this.entry.domain}\n        .localizedDomainName=${this.entry.localized_domain_name}\n        .label=${this.entry.title === \"Ignored\"\n          ? // In 2020.2 we added support for entry.title. All ignored entries before\n            // that have title \"Ignored\" so we fallback to localized domain name.\n            this.entry.localized_domain_name\n          : this.entry.title}\n      >\n        <ha-button\n          @click=${this._removeIgnoredIntegration}\n          .label=${this.hass.localize(\n            \"ui.panel.config.integrations.ignore.stop_ignore\"\n          )}\n        ></ha-button>\n      </ha-integration-action-card>\n    `;\n  }\n\n  private async _removeIgnoredIntegration() {\n    showConfirmationDialog(this, {\n      title: this.hass!.localize(\n        \"ui.panel.config.integrations.ignore.confirm_delete_ignore_title\",\n        { name: this.hass.localize(`component.${this.entry.domain}.title`) }\n      ),\n      text: this.hass!.localize(\n        \"ui.panel.config.integrations.ignore.confirm_delete_ignore\"\n      ),\n      confirmText: this.hass!.localize(\n        \"ui.panel.config.integrations.ignore.stop_ignore\"\n      ),\n      confirm: async () => {\n        const result = await deleteConfigEntry(this.hass, this.entry.entry_id);\n        if (result.require_restart) {\n          alert(\n            this.hass.localize(\n              \"ui.panel.config.integrations.config_entry.restart_confirm\"\n            )\n          );\n        }\n        fireEvent(this, \"change\", undefined, {\n          bubbles: false,\n        });\n      },\n    });\n  }\n\n  static styles = css`\n    :host {\n      --state-color: var(--divider-color, #e0e0e0);\n    }\n\n    ha-button {\n      --mdc-theme-primary: var(--primary-color);\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-ignored-config-entry-card\": HaIgnoredConfigEntryCard;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}