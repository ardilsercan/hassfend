{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/helpers/regeneratorRuntime\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _decorate from \"@babel/runtime/helpers/decorate\";\nvar _templateObject, _templateObject2, _templateObject3;\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport \"../../../../components/ha-button\";\nimport \"../../../../components/ha-form/ha-form\";\nimport { showTTSTryDialog } from \"../../../../dialogs/tts-try/show-dialog-tts-try\";\nexport var AssistPipelineDetailTTS = _decorate([customElement(\"assist-pipeline-detail-tts\")], function (_initialize, _LitElement) {\n  var AssistPipelineDetailTTS = /*#__PURE__*/function (_LitElement2) {\n    _inherits(AssistPipelineDetailTTS, _LitElement2);\n    function AssistPipelineDetailTTS() {\n      var _this;\n      _classCallCheck(this, AssistPipelineDetailTTS);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, AssistPipelineDetailTTS, [].concat(args));\n      _initialize(_assertThisInitialized(_this));\n      return _this;\n    }\n    return _createClass(AssistPipelineDetailTTS);\n  }(_LitElement);\n  return {\n    F: AssistPipelineDetailTTS,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"data\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_supportedLanguages\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_schema\",\n      value: function value() {\n        return memoizeOne(function (language, supportedLanguages) {\n          return [{\n            name: \"\",\n            type: \"grid\",\n            schema: [{\n              name: \"tts_engine\",\n              selector: {\n                tts: {\n                  language: language\n                }\n              }\n            }, supportedLanguages !== null && supportedLanguages !== void 0 && supportedLanguages.length ? {\n              name: \"tts_language\",\n              required: true,\n              selector: {\n                language: {\n                  languages: supportedLanguages,\n                  no_sort: true\n                }\n              }\n            } : {\n              name: \"\",\n              type: \"constant\"\n            }, {\n              name: \"tts_voice\",\n              selector: {\n                tts_voice: {}\n              },\n              context: {\n                language: \"tts_language\",\n                engineId: \"tts_engine\"\n              },\n              required: true\n            }]\n          }];\n        });\n      }\n    }, {\n      kind: \"field\",\n      key: \"_computeLabel\",\n      value: function value() {\n        var _this2 = this;\n        return function (schema) {\n          return schema.name ? _this2.hass.localize(\"ui.panel.config.voice_assistants.assistants.pipeline.detail.form.\".concat(schema.name)) : \"\";\n        };\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var _this$data, _this$data2;\n        return html(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      <div class=\\\"section\\\">\\n        <div class=\\\"content\\\">\\n          <div class=\\\"intro\\\">\\n          <h3>\\n            \", \"\\n          </h3>\\n          <p>\\n            \", \"\\n          </p>\\n          </div>\\n          <ha-form\\n            .schema=\", \"\\n            .data=\", \"\\n            .hass=\", \"\\n            .computeLabel=\", \"\\n            @supported-languages-changed=\", \"\\n          ></ha-form>\\n        </div>\\n\\n       \", \"\\n        </div>\\n      </div>\\n    \"])), this.hass.localize(\"ui.panel.config.voice_assistants.assistants.pipeline.detail.steps.tts.title\"), this.hass.localize(\"ui.panel.config.voice_assistants.assistants.pipeline.detail.steps.tts.description\"), this._schema((_this$data = this.data) === null || _this$data === void 0 ? void 0 : _this$data.language, this._supportedLanguages), this.data, this.hass, this._computeLabel, this._supportedLanguagesChanged, (_this$data2 = this.data) !== null && _this$data2 !== void 0 && _this$data2.tts_engine ? html(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"<div class=\\\"footer\\\">\\n               <ha-button\\n                 .label=\", \"\\n                 @click=\", \"\\n               >\\n               </ha-button>\\n             </div>\"])), this.hass.localize(\"ui.panel.config.voice_assistants.assistants.pipeline.detail.try_tts\"), this._preview) : nothing);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_preview\",\n      value: function () {\n        var _preview2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n          var engine, language, voice;\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                if (this.data) {\n                  _context.next = 2;\n                  break;\n                }\n                return _context.abrupt(\"return\");\n              case 2:\n                engine = this.data.tts_engine;\n                language = this.data.tts_language || undefined;\n                voice = this.data.tts_voice || undefined;\n                if (engine) {\n                  _context.next = 7;\n                  break;\n                }\n                return _context.abrupt(\"return\");\n              case 7:\n                showTTSTryDialog(this, {\n                  engine: engine,\n                  language: language,\n                  voice: voice\n                });\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee, this);\n        }));\n        function _preview() {\n          return _preview2.apply(this, arguments);\n        }\n        return _preview;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"_supportedLanguagesChanged\",\n      value: function _supportedLanguagesChanged(ev) {\n        this._supportedLanguages = ev.detail.value;\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n      .section {\\n        border: 1px solid var(--divider-color);\\n        border-radius: 8px;\\n      }\\n      .content {\\n        padding: 16px;\\n      }\\n      .intro {\\n        margin-bottom: 16px;\\n      }\\n      h3 {\\n        font-weight: normal;\\n        font-size: 22px;\\n        line-height: 28px;\\n        margin-top: 0;\\n        margin-bottom: 4px;\\n      }\\n      p {\\n        color: var(--secondary-text-color);\\n        font-size: var(--mdc-typography-body2-font-size, 0.875rem);\\n        margin-top: 0;\\n        margin-bottom: 0;\\n      }\\n      .footer {\\n        border-top: 1px solid var(--divider-color);\\n        padding: 8px 16px;\\n      }\\n    \"])));\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","nothing","customElement","property","state","memoizeOne","showTTSTryDialog","AssistPipelineDetailTTS","_decorate","_initialize","_LitElement","_LitElement2","_inherits","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_assertThisInitialized","_createClass","F","d","kind","decorators","attribute","key","value","language","supportedLanguages","name","type","schema","selector","tts","required","languages","no_sort","tts_voice","context","engineId","_this2","hass","localize","render","_this$data","_this$data2","_templateObject","_taggedTemplateLiteral","_schema","data","_supportedLanguages","_computeLabel","_supportedLanguagesChanged","tts_engine","_templateObject2","_preview","_preview2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","engine","voice","wrap","_callee$","_context","prev","next","abrupt","tts_language","undefined","stop","apply","ev","detail","static","styles","_templateObject3"],"sources":["/Users/sercanardil/Desktop/frontend/src/panels/config/voice-assistants/assist-pipeline-detail/assist-pipeline-detail-tts.ts"],"sourcesContent":["import { css, CSSResultGroup, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { LocalizeKeys } from \"../../../../common/translations/localize\";\nimport \"../../../../components/ha-button\";\nimport \"../../../../components/ha-form/ha-form\";\nimport { AssistPipeline } from \"../../../../data/assist_pipeline\";\nimport { showTTSTryDialog } from \"../../../../dialogs/tts-try/show-dialog-tts-try\";\nimport { HomeAssistant } from \"../../../../types\";\n\n@customElement(\"assist-pipeline-detail-tts\")\nexport class AssistPipelineDetailTTS extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public data?: Partial<AssistPipeline>;\n\n  @state() private _supportedLanguages?: string[];\n\n  private _schema = memoizeOne(\n    (language?: string, supportedLanguages?: string[]) =>\n      [\n        {\n          name: \"\",\n          type: \"grid\",\n          schema: [\n            {\n              name: \"tts_engine\",\n              selector: {\n                tts: {\n                  language,\n                },\n              },\n            },\n            supportedLanguages?.length\n              ? {\n                  name: \"tts_language\",\n                  required: true,\n                  selector: {\n                    language: { languages: supportedLanguages, no_sort: true },\n                  },\n                }\n              : { name: \"\", type: \"constant\" },\n            {\n              name: \"tts_voice\",\n              selector: {\n                tts_voice: {},\n              },\n              context: { language: \"tts_language\", engineId: \"tts_engine\" },\n              required: true,\n            },\n          ] as const,\n        },\n      ] as const\n  );\n\n  private _computeLabel = (schema): string =>\n    schema.name\n      ? this.hass.localize(\n          `ui.panel.config.voice_assistants.assistants.pipeline.detail.form.${schema.name}` as LocalizeKeys\n        )\n      : \"\";\n\n  protected render() {\n    return html`\n      <div class=\"section\">\n        <div class=\"content\">\n          <div class=\"intro\">\n          <h3>\n            ${this.hass.localize(\n              `ui.panel.config.voice_assistants.assistants.pipeline.detail.steps.tts.title`\n            )}\n          </h3>\n          <p>\n            ${this.hass.localize(\n              `ui.panel.config.voice_assistants.assistants.pipeline.detail.steps.tts.description`\n            )}\n          </p>\n          </div>\n          <ha-form\n            .schema=${this._schema(\n              this.data?.language,\n              this._supportedLanguages\n            )}\n            .data=${this.data}\n            .hass=${this.hass}\n            .computeLabel=${this._computeLabel}\n            @supported-languages-changed=${this._supportedLanguagesChanged}\n          ></ha-form>\n        </div>\n\n       ${\n         this.data?.tts_engine\n           ? html`<div class=\"footer\">\n               <ha-button\n                 .label=${this.hass.localize(\n                   \"ui.panel.config.voice_assistants.assistants.pipeline.detail.try_tts\"\n                 )}\n                 @click=${this._preview}\n               >\n               </ha-button>\n             </div>`\n           : nothing\n       }\n        </div>\n      </div>\n    `;\n  }\n\n  private async _preview() {\n    if (!this.data) return;\n\n    const engine = this.data.tts_engine;\n    const language = this.data.tts_language || undefined;\n    const voice = this.data.tts_voice || undefined;\n\n    if (!engine) return;\n\n    showTTSTryDialog(this, {\n      engine,\n      language,\n      voice,\n    });\n  }\n\n  private _supportedLanguagesChanged(ev) {\n    this._supportedLanguages = ev.detail.value;\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      .section {\n        border: 1px solid var(--divider-color);\n        border-radius: 8px;\n      }\n      .content {\n        padding: 16px;\n      }\n      .intro {\n        margin-bottom: 16px;\n      }\n      h3 {\n        font-weight: normal;\n        font-size: 22px;\n        line-height: 28px;\n        margin-top: 0;\n        margin-bottom: 4px;\n      }\n      p {\n        color: var(--secondary-text-color);\n        font-size: var(--mdc-typography-body2-font-size, 0.875rem);\n        margin-top: 0;\n        margin-bottom: 0;\n      }\n      .footer {\n        border-top: 1px solid var(--divider-color);\n        padding: 8px 16px;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"assist-pipeline-detail-tts\": AssistPipelineDetailTTS;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}