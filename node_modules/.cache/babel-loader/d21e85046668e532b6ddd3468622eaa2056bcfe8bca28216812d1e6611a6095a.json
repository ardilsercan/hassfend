{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport \"@material/mwc-ripple\";\nconst mdiFan = \"M12,11A1,1 0 0,0 11,12A1,1 0 0,0 12,13A1,1 0 0,0 13,12A1,1 0 0,0 12,11M12.5,2C17,2 17.11,5.57 14.75,6.75C13.76,7.24 13.32,8.29 13.13,9.22C13.61,9.42 14.03,9.73 14.35,10.13C18.05,8.13 22.03,8.92 22.03,12.5C22.03,17 18.46,17.1 17.28,14.73C16.78,13.74 15.72,13.3 14.79,13.11C14.59,13.59 14.28,14 13.88,14.34C15.87,18.03 15.08,22 11.5,22C7,22 6.91,18.42 9.27,17.24C10.25,16.75 10.69,15.71 10.89,14.79C10.4,14.59 9.97,14.27 9.65,13.87C5.96,15.85 2,15.07 2,11.5C2,7 5.56,6.89 6.74,9.26C7.24,10.25 8.29,10.68 9.22,10.87C9.41,10.39 9.73,9.97 10.14,9.65C8.15,5.96 8.94,2 12.5,2Z\";\nconst mdiFanOff = \"M12.5,2C9.64,2 8.57,4.55 9.29,7.47L15,13.16C15.87,13.37 16.81,13.81 17.28,14.73C18.46,17.1 22.03,17 22.03,12.5C22.03,8.92 18.05,8.13 14.35,10.13C14.03,9.73 13.61,9.42 13.13,9.22C13.32,8.29 13.76,7.24 14.75,6.75C17.11,5.57 17,2 12.5,2M3.28,4L2,5.27L4.47,7.73C3.22,7.74 2,8.87 2,11.5C2,15.07 5.96,15.85 9.65,13.87C9.97,14.27 10.4,14.59 10.89,14.79C10.69,15.71 10.25,16.75 9.27,17.24C6.91,18.42 7,22 11.5,22C13.8,22 14.94,20.36 14.94,18.21L18.73,22L20,20.72L3.28,4Z\";\nconst mdiLightbulbMultiple = \"M17 16V18C17 18.55 16.53 19 16 19H12C11.42 19 11 18.55 11 18V16C8.77 14.34 8.32 11.21 10 9S14.77 6.34 17 8 19.63 12.79 18 15C17.69 15.38 17.35 15.72 17 16M16 20H12V21C12 21.55 12.42 22 13 22H15C15.53 22 16 21.55 16 21M7.66 15H7V16C7 16.55 7.42 17 8 17H9V16.88C8.44 16.33 8 15.7 7.66 15M13.58 5C12.46 2.47 9.5 1.33 7 2.45S3.31 6.5 4.43 9.04C4.77 9.81 5.3 10.5 6 11V13C6 13.55 6.42 14 7 14H7.28C7.07 13.35 6.97 12.68 7 12C6.97 8.29 9.87 5.21 13.58 5Z\";\nconst mdiLightbulbMultipleOff = \"M20.84 22.73L16.74 18.63C16.55 18.85 16.29 19 16 19H12C11.42 19 11 18.55 11 18V16C9.37 14.8 8.71 12.82 9.1 11L7.5 9.39C7.17 10.2 6.97 11.08 7 12C6.97 12.68 7.07 13.35 7.28 14H7C6.42 14 6 13.55 6 13V11C5.3 10.5 4.77 9.81 4.43 9.04C4 8.05 3.91 7 4.12 6L1.11 3L2.39 1.73L22.11 21.46L20.84 22.73M13.58 5C12.46 2.47 9.5 1.33 7 2.45C6.68 2.58 6.39 2.75 6.13 2.93L9.67 6.47C10.76 5.63 12.1 5.08 13.58 5M18.06 14.86C19.6 12.66 19.14 9.62 17 8C15.2 6.67 12.84 6.72 11.12 7.92L18.06 14.86M12 21C12 21.55 12.42 22 13 22H15C15.53 22 16 21.55 16 21V20H12V21M7 15V16C7 16.55 7.42 17 8 17H9V16.88C8.43 16.33 8 15.7 7.66 15H7Z\";\nconst mdiRun = \"M13.5,5.5C14.59,5.5 15.5,4.58 15.5,3.5C15.5,2.38 14.59,1.5 13.5,1.5C12.39,1.5 11.5,2.38 11.5,3.5C11.5,4.58 12.39,5.5 13.5,5.5M9.89,19.38L10.89,15L13,17V23H15V15.5L12.89,13.5L13.5,10.5C14.79,12 16.79,13 19,13V11C17.09,11 15.5,10 14.69,8.58L13.69,7C13.29,6.38 12.69,6 12,6C11.69,6 11.5,6.08 11.19,6.08L6,8.28V13H8V9.58L9.79,8.88L8.19,17L3.29,16L2.89,18L9.89,19.38Z\";\nconst mdiToggleSwitch = \"M17,7H7A5,5 0 0,0 2,12A5,5 0 0,0 7,17H17A5,5 0 0,0 22,12A5,5 0 0,0 17,7M17,15A3,3 0 0,1 14,12A3,3 0 0,1 17,9A3,3 0 0,1 20,12A3,3 0 0,1 17,15Z\";\nconst mdiToggleSwitchOff = \"M17,7H7A5,5 0 0,0 2,12A5,5 0 0,0 7,17H17A5,5 0 0,0 22,12A5,5 0 0,0 17,7M7,15A3,3 0 0,1 4,12A3,3 0 0,1 7,9A3,3 0 0,1 10,12A3,3 0 0,1 7,15Z\";\nconst mdiWaterAlert = \"M10 3.25C10 3.25 16 10 16 14C16 17.31 13.31 20 10 20S4 17.31 4 14C4 10 10 3.25 10 3.25M20 7V13H18V7H20M18 17H20V15H18V17Z\";\nimport { LitElement, css, html, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport { styleMap } from \"lit/directives/style-map\";\nimport memoizeOne from \"memoize-one\";\nimport { STATES_OFF } from \"../../../common/const\";\nimport { applyThemesOnElement } from \"../../../common/dom/apply_themes_on_element\";\nimport { computeDomain } from \"../../../common/entity/compute_domain\";\nimport { navigate } from \"../../../common/navigate\";\nimport { formatNumber, isNumericState } from \"../../../common/number/format_number\";\nimport { blankBeforeUnit } from \"../../../common/translations/blank_before_unit\";\nimport parseAspectRatio from \"../../../common/util/parse-aspect-ratio\";\nimport { subscribeOne } from \"../../../common/util/subscribe-one\";\nimport \"../../../components/ha-card\";\nimport \"../../../components/ha-domain-icon\";\nimport \"../../../components/ha-icon-button\";\nimport \"../../../components/ha-state-icon\";\nimport { subscribeAreaRegistry } from \"../../../data/area_registry\";\nimport { subscribeDeviceRegistry } from \"../../../data/device_registry\";\nimport { isUnavailableState } from \"../../../data/entity\";\nimport { subscribeEntityRegistry } from \"../../../data/entity_registry\";\nimport { forwardHaptic } from \"../../../data/haptics\";\nimport { SubscribeMixin } from \"../../../mixins/subscribe-mixin\";\nimport \"../components/hui-image\";\nimport \"../components/hui-warning\";\nexport const DEFAULT_ASPECT_RATIO = \"16:9\";\nconst SENSOR_DOMAINS = [\"sensor\"];\nconst ALERT_DOMAINS = [\"binary_sensor\"];\nconst TOGGLE_DOMAINS = [\"light\", \"switch\", \"fan\"];\nconst OTHER_DOMAINS = [\"camera\"];\nexport const DEVICE_CLASSES = {\n  sensor: [\"temperature\", \"humidity\"],\n  binary_sensor: [\"motion\", \"moisture\"]\n};\nconst DOMAIN_ICONS = {\n  light: {\n    on: mdiLightbulbMultiple,\n    off: mdiLightbulbMultipleOff\n  },\n  switch: {\n    on: mdiToggleSwitch,\n    off: mdiToggleSwitchOff\n  },\n  fan: {\n    on: mdiFan,\n    off: mdiFanOff\n  },\n  binary_sensor: {\n    motion: mdiRun,\n    moisture: mdiWaterAlert\n  }\n};\nexport let HuiAreaCard = _decorate([customElement(\"hui-area-card\")], function (_initialize, _SubscribeMixin) {\n  class HuiAreaCard extends _SubscribeMixin {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HuiAreaCard,\n    d: [{\n      kind: \"method\",\n      static: true,\n      key: \"getConfigElement\",\n      value: async function getConfigElement() {\n        await import(\"../editor/config-elements/hui-area-card-editor\");\n        return document.createElement(\"hui-area-card-editor\");\n      }\n    }, {\n      kind: \"method\",\n      static: true,\n      key: \"getStubConfig\",\n      value: async function getStubConfig(hass) {\n        var _areas$;\n        const areas = await subscribeOne(hass.connection, subscribeAreaRegistry);\n        return {\n          type: \"area\",\n          area: ((_areas$ = areas[0]) === null || _areas$ === void 0 ? void 0 : _areas$.area_id) || \"\"\n        };\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_config\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_entities\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_devices\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_areas\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_deviceClasses\",\n      value() {\n        return DEVICE_CLASSES;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_ratio\",\n      value() {\n        return null;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_entitiesByDomain\",\n      value() {\n        return memoizeOne((areaId, devicesInArea, registryEntities, deviceClasses, states) => {\n          const entitiesInArea = registryEntities.filter(entry => !entry.entity_category && !entry.hidden_by && (entry.area_id ? entry.area_id === areaId : entry.device_id && devicesInArea.has(entry.device_id))).map(entry => entry.entity_id);\n          const entitiesByDomain = {};\n          for (const entity of entitiesInArea) {\n            const domain = computeDomain(entity);\n            if (!TOGGLE_DOMAINS.includes(domain) && !SENSOR_DOMAINS.includes(domain) && !ALERT_DOMAINS.includes(domain) && !OTHER_DOMAINS.includes(domain)) {\n              continue;\n            }\n            const stateObj = states[entity];\n            if (!stateObj) {\n              continue;\n            }\n            if ((SENSOR_DOMAINS.includes(domain) || ALERT_DOMAINS.includes(domain)) && !deviceClasses[domain].includes(stateObj.attributes.device_class || \"\")) {\n              continue;\n            }\n            if (!(domain in entitiesByDomain)) {\n              entitiesByDomain[domain] = [];\n            }\n            entitiesByDomain[domain].push(stateObj);\n          }\n          return entitiesByDomain;\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_isOn\",\n      value: function _isOn(domain, deviceClass) {\n        const entities = this._entitiesByDomain(this._config.area, this._devicesInArea(this._config.area, this._devices), this._entities, this._deviceClasses, this.hass.states)[domain];\n        if (!entities) {\n          return undefined;\n        }\n        return (deviceClass ? entities.filter(entity => entity.attributes.device_class === deviceClass) : entities).find(entity => !isUnavailableState(entity.state) && !STATES_OFF.includes(entity.state));\n      }\n    }, {\n      kind: \"method\",\n      key: \"_average\",\n      value: function _average(domain, deviceClass) {\n        const entities = this._entitiesByDomain(this._config.area, this._devicesInArea(this._config.area, this._devices), this._entities, this._deviceClasses, this.hass.states)[domain].filter(entity => deviceClass ? entity.attributes.device_class === deviceClass : true);\n        if (!entities) {\n          return undefined;\n        }\n        let uom;\n        const values = entities.filter(entity => {\n          if (!isNumericState(entity) || isNaN(Number(entity.state))) {\n            return false;\n          }\n          if (!uom) {\n            uom = entity.attributes.unit_of_measurement;\n            return true;\n          }\n          return entity.attributes.unit_of_measurement === uom;\n        });\n        if (!values.length) {\n          return undefined;\n        }\n        const sum = values.reduce((total, entity) => total + Number(entity.state), 0);\n        return `${formatNumber(sum / values.length, this.hass.locale, {\n          maximumFractionDigits: 1\n        })}${uom ? blankBeforeUnit(uom, this.hass.locale) : \"\"}${uom || \"\"}`;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_area\",\n      value() {\n        return memoizeOne((areaId, areas) => areas.find(area => area.area_id === areaId) || null);\n      }\n    }, {\n      kind: \"field\",\n      key: \"_devicesInArea\",\n      value() {\n        return memoizeOne((areaId, devices) => new Set(areaId ? devices.filter(device => device.area_id === areaId).map(device => device.id) : []));\n      }\n    }, {\n      kind: \"method\",\n      key: \"hassSubscribe\",\n      value: function hassSubscribe() {\n        return [subscribeAreaRegistry(this.hass.connection, areas => {\n          this._areas = areas;\n        }), subscribeDeviceRegistry(this.hass.connection, devices => {\n          this._devices = devices;\n        }), subscribeEntityRegistry(this.hass.connection, entries => {\n          this._entities = entries;\n        })];\n      }\n    }, {\n      kind: \"method\",\n      key: \"getCardSize\",\n      value: function getCardSize() {\n        return 3;\n      }\n    }, {\n      kind: \"method\",\n      key: \"setConfig\",\n      value: function setConfig(config) {\n        if (!config.area) {\n          throw new Error(\"Area Required\");\n        }\n        this._config = config;\n        this._deviceClasses = {\n          ...DEVICE_CLASSES\n        };\n        if (config.sensor_classes) {\n          this._deviceClasses.sensor = config.sensor_classes;\n        }\n        if (config.alert_classes) {\n          this._deviceClasses.binary_sensor = config.alert_classes;\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"shouldUpdate\",\n      value: function shouldUpdate(changedProps) {\n        if (changedProps.has(\"_config\") || !this._config) {\n          return true;\n        }\n        if (changedProps.has(\"_devicesInArea\") || changedProps.has(\"_areas\") || changedProps.has(\"_entities\")) {\n          return true;\n        }\n        if (!changedProps.has(\"hass\")) {\n          return false;\n        }\n        const oldHass = changedProps.get(\"hass\");\n        if (!oldHass || oldHass.themes !== this.hass.themes || oldHass.locale !== this.hass.locale) {\n          return true;\n        }\n        if (!this._devices || !this._devicesInArea(this._config.area, this._devices) || !this._entities) {\n          return false;\n        }\n        const entities = this._entitiesByDomain(this._config.area, this._devicesInArea(this._config.area, this._devices), this._entities, this._deviceClasses, this.hass.states);\n        for (const domainEntities of Object.values(entities)) {\n          for (const stateObj of domainEntities) {\n            if (oldHass.states[stateObj.entity_id] !== stateObj) {\n              return true;\n            }\n          }\n        }\n        return false;\n      }\n    }, {\n      kind: \"method\",\n      key: \"willUpdate\",\n      value: function willUpdate(changedProps) {\n        if (changedProps.has(\"_config\") || this._ratio === null) {\n          var _this$_config, _this$_config2;\n          this._ratio = (_this$_config = this._config) !== null && _this$_config !== void 0 && _this$_config.aspect_ratio ? parseAspectRatio((_this$_config2 = this._config) === null || _this$_config2 === void 0 ? void 0 : _this$_config2.aspect_ratio) : null;\n          if (this._ratio === null || this._ratio.w <= 0 || this._ratio.h <= 0) {\n            this._ratio = parseAspectRatio(DEFAULT_ASPECT_RATIO);\n          }\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this._config || !this.hass || !this._areas || !this._devices || !this._entities) {\n          return nothing;\n        }\n        const entitiesByDomain = this._entitiesByDomain(this._config.area, this._devicesInArea(this._config.area, this._devices), this._entities, this._deviceClasses, this.hass.states);\n        const area = this._area(this._config.area, this._areas);\n        if (area === null) {\n          return html`\n        <hui-warning>\n          ${this.hass.localize(\"ui.card.area.area_not_found\")}\n        </hui-warning>\n      `;\n        }\n        const sensors = [];\n        SENSOR_DOMAINS.forEach(domain => {\n          if (!(domain in entitiesByDomain)) {\n            return;\n          }\n          this._deviceClasses[domain].forEach(deviceClass => {\n            if (entitiesByDomain[domain].some(entity => entity.attributes.device_class === deviceClass)) {\n              sensors.push(html`\n            <div class=\"sensor\">\n              <ha-domain-icon\n                .hass=${this.hass}\n                .domain=${domain}\n                .deviceClass=${deviceClass}\n              ></ha-domain-icon>\n              ${this._average(domain, deviceClass)}\n            </div>\n          `);\n            }\n          });\n        });\n        let cameraEntityId;\n        if (this._config.show_camera && \"camera\" in entitiesByDomain) {\n          cameraEntityId = entitiesByDomain.camera[0].entity_id;\n        }\n        const imageClass = area.picture || cameraEntityId;\n        return html`\n      <ha-card\n        class=${imageClass ? \"image\" : \"\"}\n        style=${styleMap({\n          paddingBottom: imageClass ? \"0\" : `${(100 * this._ratio.h / this._ratio.w).toFixed(2)}%`\n        })}\n      >\n        ${area.picture || cameraEntityId ? html`<hui-image\n              .config=${this._config}\n              .hass=${this.hass}\n              .image=${area.picture ? area.picture : undefined}\n              .cameraImage=${cameraEntityId}\n              .cameraView=${this._config.camera_view}\n              .aspectRatio=${this._config.aspect_ratio || DEFAULT_ASPECT_RATIO}\n            ></hui-image>` : \"\"}\n\n        <div\n          class=\"container ${classMap({\n          navigate: this._config.navigation_path !== undefined\n        })}\"\n          @click=${this._handleNavigation}\n        >\n          <div class=\"alerts\">\n            ${ALERT_DOMAINS.map(domain => {\n          if (!(domain in entitiesByDomain)) {\n            return nothing;\n          }\n          return this._deviceClasses[domain].map(deviceClass => {\n            const entity = this._isOn(domain, deviceClass);\n            return entity ? html`\n                      <ha-state-icon\n                        class=\"alert\"\n                        .hass=${this.hass}\n                        .stateObj=${entity}\n                      ></ha-state-icon>\n                    ` : nothing;\n          });\n        })}\n          </div>\n          <div class=\"bottom\">\n            <div>\n              <div class=\"name\">${area.name}</div>\n              ${sensors.length ? html`<div class=\"sensors\">${sensors}</div>` : \"\"}\n            </div>\n            <div class=\"buttons\">\n              ${TOGGLE_DOMAINS.map(domain => {\n          if (!(domain in entitiesByDomain)) {\n            return \"\";\n          }\n          const on = this._isOn(domain);\n          return TOGGLE_DOMAINS.includes(domain) ? html`\n                      <ha-icon-button\n                        class=${on ? \"on\" : \"off\"}\n                        .path=${DOMAIN_ICONS[domain][on ? \"on\" : \"off\"]}\n                        .domain=${domain}\n                        @click=${this._toggle}\n                      >\n                      </ha-icon-button>\n                    ` : \"\";\n        })}\n            </div>\n          </div>\n        </div>\n      </ha-card>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"updated\",\n      value: function updated(changedProps) {\n        _get(_getPrototypeOf(HuiAreaCard.prototype), \"updated\", this).call(this, changedProps);\n        if (!this._config || !this.hass) {\n          return;\n        }\n        const oldHass = changedProps.get(\"hass\");\n        const oldConfig = changedProps.get(\"_config\");\n        if (changedProps.has(\"hass\") && (!oldHass || oldHass.themes !== this.hass.themes) || changedProps.has(\"_config\") && (!oldConfig || oldConfig.theme !== this._config.theme)) {\n          applyThemesOnElement(this, this.hass.themes, this._config.theme);\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleNavigation\",\n      value: function _handleNavigation() {\n        if (this._config.navigation_path) {\n          navigate(this._config.navigation_path);\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_toggle\",\n      value: function _toggle(ev) {\n        ev.stopPropagation();\n        const domain = ev.currentTarget.domain;\n        if (TOGGLE_DOMAINS.includes(domain)) {\n          this.hass.callService(domain, this._isOn(domain) ? \"turn_off\" : \"turn_on\", undefined, {\n            area_id: this._config.area\n          });\n        }\n        forwardHaptic(\"light\");\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css`\n      ha-card {\n        overflow: hidden;\n        position: relative;\n        background-size: cover;\n      }\n\n      .container {\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        background: linear-gradient(\n          0,\n          rgba(33, 33, 33, 0.9) 0%,\n          rgba(33, 33, 33, 0) 45%\n        );\n      }\n\n      ha-card:not(.image) .container::before {\n        position: absolute;\n        content: \"\";\n        width: 100%;\n        height: 100%;\n        background-color: var(--sidebar-selected-icon-color);\n        opacity: 0.12;\n      }\n\n      .sensors {\n        color: #e3e3e3;\n        font-size: 16px;\n        --mdc-icon-size: 24px;\n        opacity: 0.6;\n        margin-top: 8px;\n      }\n\n      .sensor {\n        white-space: nowrap;\n        float: left;\n        margin-right: 4px;\n        margin-inline-end: 4px;\n        margin-inline-start: initial;\n      }\n\n      .alerts {\n        padding: 16px;\n      }\n\n      ha-state-icon {\n        display: inline-flex;\n        align-items: center;\n        justify-content: center;\n        position: relative;\n      }\n\n      .alerts ha-state-icon {\n        background: var(--accent-color);\n        color: var(--text-accent-color, var(--text-primary-color));\n        padding: 8px;\n        margin-right: 8px;\n        margin-inline-end: 8px;\n        margin-inline-start: initial;\n        border-radius: 50%;\n      }\n\n      .name {\n        color: white;\n        font-size: 24px;\n      }\n\n      .bottom {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        padding: 16px;\n      }\n\n      .navigate {\n        cursor: pointer;\n      }\n\n      ha-icon-button {\n        color: white;\n        background-color: var(--area-button-color, #727272b2);\n        border-radius: 50%;\n        margin-left: 8px;\n        margin-inline-start: 8px;\n        margin-inline-end: initial;\n        --mdc-icon-button-size: 44px;\n      }\n      .on {\n        color: var(--state-light-active-color);\n      }\n    `;\n      }\n    }]\n  };\n}, SubscribeMixin(LitElement));","map":{"version":3,"names":["mdiFan","mdiFanOff","mdiLightbulbMultiple","mdiLightbulbMultipleOff","mdiRun","mdiToggleSwitch","mdiToggleSwitchOff","mdiWaterAlert","LitElement","css","html","nothing","customElement","property","state","classMap","styleMap","memoizeOne","STATES_OFF","applyThemesOnElement","computeDomain","navigate","formatNumber","isNumericState","blankBeforeUnit","parseAspectRatio","subscribeOne","subscribeAreaRegistry","subscribeDeviceRegistry","isUnavailableState","subscribeEntityRegistry","forwardHaptic","SubscribeMixin","DEFAULT_ASPECT_RATIO","SENSOR_DOMAINS","ALERT_DOMAINS","TOGGLE_DOMAINS","OTHER_DOMAINS","DEVICE_CLASSES","sensor","binary_sensor","DOMAIN_ICONS","light","on","off","switch","fan","motion","moisture","HuiAreaCard","_decorate","_initialize","_SubscribeMixin","constructor","args","F","d","kind","static","key","value","getConfigElement","document","createElement","getStubConfig","hass","_areas$","areas","connection","type","area","area_id","decorators","attribute","areaId","devicesInArea","registryEntities","deviceClasses","states","entitiesInArea","filter","entry","entity_category","hidden_by","device_id","has","map","entity_id","entitiesByDomain","entity","domain","includes","stateObj","attributes","device_class","push","_isOn","deviceClass","entities","_entitiesByDomain","_config","_devicesInArea","_devices","_entities","_deviceClasses","undefined","find","_average","uom","values","isNaN","Number","unit_of_measurement","length","sum","reduce","total","locale","maximumFractionDigits","devices","Set","device","id","hassSubscribe","_areas","entries","getCardSize","setConfig","config","Error","sensor_classes","alert_classes","shouldUpdate","changedProps","oldHass","get","themes","domainEntities","Object","willUpdate","_ratio","_this$_config","_this$_config2","aspect_ratio","w","h","render","_area","localize","sensors","forEach","some","cameraEntityId","show_camera","camera","imageClass","picture","paddingBottom","toFixed","camera_view","navigation_path","_handleNavigation","name","_toggle","updated","_get","_getPrototypeOf","prototype","call","oldConfig","theme","ev","stopPropagation","currentTarget","callService","styles"],"sources":["/workspaces/frontend/src/panels/lovelace/cards/hui-area-card.ts"],"sourcesContent":["import \"@material/mwc-ripple\";\nimport {\n  mdiFan,\n  mdiFanOff,\n  mdiLightbulbMultiple,\n  mdiLightbulbMultipleOff,\n  mdiRun,\n  mdiToggleSwitch,\n  mdiToggleSwitchOff,\n  mdiWaterAlert,\n} from \"@mdi/js\";\nimport type { HassEntity, UnsubscribeFunc } from \"home-assistant-js-websocket\";\nimport {\n  CSSResultGroup,\n  LitElement,\n  PropertyValues,\n  TemplateResult,\n  css,\n  html,\n  nothing,\n} from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport { styleMap } from \"lit/directives/style-map\";\nimport memoizeOne from \"memoize-one\";\nimport { STATES_OFF } from \"../../../common/const\";\nimport { applyThemesOnElement } from \"../../../common/dom/apply_themes_on_element\";\nimport { computeDomain } from \"../../../common/entity/compute_domain\";\nimport { navigate } from \"../../../common/navigate\";\nimport {\n  formatNumber,\n  isNumericState,\n} from \"../../../common/number/format_number\";\nimport { blankBeforeUnit } from \"../../../common/translations/blank_before_unit\";\nimport parseAspectRatio from \"../../../common/util/parse-aspect-ratio\";\nimport { subscribeOne } from \"../../../common/util/subscribe-one\";\nimport \"../../../components/ha-card\";\nimport \"../../../components/ha-domain-icon\";\nimport \"../../../components/ha-icon-button\";\nimport \"../../../components/ha-state-icon\";\nimport {\n  AreaRegistryEntry,\n  subscribeAreaRegistry,\n} from \"../../../data/area_registry\";\nimport {\n  DeviceRegistryEntry,\n  subscribeDeviceRegistry,\n} from \"../../../data/device_registry\";\nimport { isUnavailableState } from \"../../../data/entity\";\nimport {\n  EntityRegistryEntry,\n  subscribeEntityRegistry,\n} from \"../../../data/entity_registry\";\nimport { forwardHaptic } from \"../../../data/haptics\";\nimport { SubscribeMixin } from \"../../../mixins/subscribe-mixin\";\nimport { HomeAssistant } from \"../../../types\";\nimport \"../components/hui-image\";\nimport \"../components/hui-warning\";\nimport { LovelaceCard, LovelaceCardEditor } from \"../types\";\nimport { AreaCardConfig } from \"./types\";\n\nexport const DEFAULT_ASPECT_RATIO = \"16:9\";\n\nconst SENSOR_DOMAINS = [\"sensor\"];\n\nconst ALERT_DOMAINS = [\"binary_sensor\"];\n\nconst TOGGLE_DOMAINS = [\"light\", \"switch\", \"fan\"];\n\nconst OTHER_DOMAINS = [\"camera\"];\n\nexport const DEVICE_CLASSES = {\n  sensor: [\"temperature\", \"humidity\"],\n  binary_sensor: [\"motion\", \"moisture\"],\n};\n\nconst DOMAIN_ICONS = {\n  light: { on: mdiLightbulbMultiple, off: mdiLightbulbMultipleOff },\n  switch: { on: mdiToggleSwitch, off: mdiToggleSwitchOff },\n  fan: { on: mdiFan, off: mdiFanOff },\n  binary_sensor: {\n    motion: mdiRun,\n    moisture: mdiWaterAlert,\n  },\n};\n\n@customElement(\"hui-area-card\")\nexport class HuiAreaCard\n  extends SubscribeMixin(LitElement)\n  implements LovelaceCard\n{\n  public static async getConfigElement(): Promise<LovelaceCardEditor> {\n    await import(\"../editor/config-elements/hui-area-card-editor\");\n    return document.createElement(\"hui-area-card-editor\");\n  }\n\n  public static async getStubConfig(\n    hass: HomeAssistant\n  ): Promise<AreaCardConfig> {\n    const areas = await subscribeOne(hass.connection, subscribeAreaRegistry);\n    return { type: \"area\", area: areas[0]?.area_id || \"\" };\n  }\n\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @state() private _config?: AreaCardConfig;\n\n  @state() private _entities?: EntityRegistryEntry[];\n\n  @state() private _devices?: DeviceRegistryEntry[];\n\n  @state() private _areas?: AreaRegistryEntry[];\n\n  private _deviceClasses: { [key: string]: string[] } = DEVICE_CLASSES;\n\n  private _ratio: {\n    w: number;\n    h: number;\n  } | null = null;\n\n  private _entitiesByDomain = memoizeOne(\n    (\n      areaId: string,\n      devicesInArea: Set<string>,\n      registryEntities: EntityRegistryEntry[],\n      deviceClasses: { [key: string]: string[] },\n      states: HomeAssistant[\"states\"]\n    ) => {\n      const entitiesInArea = registryEntities\n        .filter(\n          (entry) =>\n            !entry.entity_category &&\n            !entry.hidden_by &&\n            (entry.area_id\n              ? entry.area_id === areaId\n              : entry.device_id && devicesInArea.has(entry.device_id))\n        )\n        .map((entry) => entry.entity_id);\n\n      const entitiesByDomain: { [domain: string]: HassEntity[] } = {};\n\n      for (const entity of entitiesInArea) {\n        const domain = computeDomain(entity);\n        if (\n          !TOGGLE_DOMAINS.includes(domain) &&\n          !SENSOR_DOMAINS.includes(domain) &&\n          !ALERT_DOMAINS.includes(domain) &&\n          !OTHER_DOMAINS.includes(domain)\n        ) {\n          continue;\n        }\n        const stateObj: HassEntity | undefined = states[entity];\n\n        if (!stateObj) {\n          continue;\n        }\n\n        if (\n          (SENSOR_DOMAINS.includes(domain) || ALERT_DOMAINS.includes(domain)) &&\n          !deviceClasses[domain].includes(\n            stateObj.attributes.device_class || \"\"\n          )\n        ) {\n          continue;\n        }\n\n        if (!(domain in entitiesByDomain)) {\n          entitiesByDomain[domain] = [];\n        }\n        entitiesByDomain[domain].push(stateObj);\n      }\n\n      return entitiesByDomain;\n    }\n  );\n\n  private _isOn(domain: string, deviceClass?: string): HassEntity | undefined {\n    const entities = this._entitiesByDomain(\n      this._config!.area,\n      this._devicesInArea(this._config!.area, this._devices!),\n      this._entities!,\n      this._deviceClasses,\n      this.hass.states\n    )[domain];\n    if (!entities) {\n      return undefined;\n    }\n    return (\n      deviceClass\n        ? entities.filter(\n            (entity) => entity.attributes.device_class === deviceClass\n          )\n        : entities\n    ).find(\n      (entity) =>\n        !isUnavailableState(entity.state) && !STATES_OFF.includes(entity.state)\n    );\n  }\n\n  private _average(domain: string, deviceClass?: string): string | undefined {\n    const entities = this._entitiesByDomain(\n      this._config!.area,\n      this._devicesInArea(this._config!.area, this._devices!),\n      this._entities!,\n      this._deviceClasses,\n      this.hass.states\n    )[domain].filter((entity) =>\n      deviceClass ? entity.attributes.device_class === deviceClass : true\n    );\n    if (!entities) {\n      return undefined;\n    }\n    let uom;\n    const values = entities.filter((entity) => {\n      if (!isNumericState(entity) || isNaN(Number(entity.state))) {\n        return false;\n      }\n      if (!uom) {\n        uom = entity.attributes.unit_of_measurement;\n        return true;\n      }\n      return entity.attributes.unit_of_measurement === uom;\n    });\n    if (!values.length) {\n      return undefined;\n    }\n    const sum = values.reduce(\n      (total, entity) => total + Number(entity.state),\n      0\n    );\n    return `${formatNumber(sum / values.length, this.hass!.locale, {\n      maximumFractionDigits: 1,\n    })}${uom ? blankBeforeUnit(uom, this.hass!.locale) : \"\"}${uom || \"\"}`;\n  }\n\n  private _area = memoizeOne(\n    (areaId: string | undefined, areas: AreaRegistryEntry[]) =>\n      areas.find((area) => area.area_id === areaId) || null\n  );\n\n  private _devicesInArea = memoizeOne(\n    (areaId: string | undefined, devices: DeviceRegistryEntry[]) =>\n      new Set(\n        areaId\n          ? devices\n              .filter((device) => device.area_id === areaId)\n              .map((device) => device.id)\n          : []\n      )\n  );\n\n  public hassSubscribe(): UnsubscribeFunc[] {\n    return [\n      subscribeAreaRegistry(this.hass!.connection, (areas) => {\n        this._areas = areas;\n      }),\n      subscribeDeviceRegistry(this.hass!.connection, (devices) => {\n        this._devices = devices;\n      }),\n      subscribeEntityRegistry(this.hass!.connection, (entries) => {\n        this._entities = entries;\n      }),\n    ];\n  }\n\n  public getCardSize(): number {\n    return 3;\n  }\n\n  public setConfig(config: AreaCardConfig): void {\n    if (!config.area) {\n      throw new Error(\"Area Required\");\n    }\n\n    this._config = config;\n\n    this._deviceClasses = { ...DEVICE_CLASSES };\n    if (config.sensor_classes) {\n      this._deviceClasses.sensor = config.sensor_classes;\n    }\n    if (config.alert_classes) {\n      this._deviceClasses.binary_sensor = config.alert_classes;\n    }\n  }\n\n  protected shouldUpdate(changedProps: PropertyValues): boolean {\n    if (changedProps.has(\"_config\") || !this._config) {\n      return true;\n    }\n\n    if (\n      changedProps.has(\"_devicesInArea\") ||\n      changedProps.has(\"_areas\") ||\n      changedProps.has(\"_entities\")\n    ) {\n      return true;\n    }\n\n    if (!changedProps.has(\"hass\")) {\n      return false;\n    }\n\n    const oldHass = changedProps.get(\"hass\") as HomeAssistant | undefined;\n\n    if (\n      !oldHass ||\n      oldHass.themes !== this.hass!.themes ||\n      oldHass.locale !== this.hass!.locale\n    ) {\n      return true;\n    }\n\n    if (\n      !this._devices ||\n      !this._devicesInArea(this._config.area, this._devices) ||\n      !this._entities\n    ) {\n      return false;\n    }\n\n    const entities = this._entitiesByDomain(\n      this._config.area,\n      this._devicesInArea(this._config.area, this._devices),\n      this._entities,\n      this._deviceClasses,\n      this.hass.states\n    );\n\n    for (const domainEntities of Object.values(entities)) {\n      for (const stateObj of domainEntities) {\n        if (oldHass!.states[stateObj.entity_id] !== stateObj) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  public willUpdate(changedProps: PropertyValues) {\n    if (changedProps.has(\"_config\") || this._ratio === null) {\n      this._ratio = this._config?.aspect_ratio\n        ? parseAspectRatio(this._config?.aspect_ratio)\n        : null;\n\n      if (this._ratio === null || this._ratio.w <= 0 || this._ratio.h <= 0) {\n        this._ratio = parseAspectRatio(DEFAULT_ASPECT_RATIO);\n      }\n    }\n  }\n\n  protected render() {\n    if (\n      !this._config ||\n      !this.hass ||\n      !this._areas ||\n      !this._devices ||\n      !this._entities\n    ) {\n      return nothing;\n    }\n\n    const entitiesByDomain = this._entitiesByDomain(\n      this._config.area,\n      this._devicesInArea(this._config.area, this._devices),\n      this._entities,\n      this._deviceClasses,\n      this.hass.states\n    );\n    const area = this._area(this._config.area, this._areas);\n\n    if (area === null) {\n      return html`\n        <hui-warning>\n          ${this.hass.localize(\"ui.card.area.area_not_found\")}\n        </hui-warning>\n      `;\n    }\n\n    const sensors: TemplateResult[] = [];\n    SENSOR_DOMAINS.forEach((domain) => {\n      if (!(domain in entitiesByDomain)) {\n        return;\n      }\n      this._deviceClasses[domain].forEach((deviceClass) => {\n        if (\n          entitiesByDomain[domain].some(\n            (entity) => entity.attributes.device_class === deviceClass\n          )\n        ) {\n          sensors.push(html`\n            <div class=\"sensor\">\n              <ha-domain-icon\n                .hass=${this.hass}\n                .domain=${domain}\n                .deviceClass=${deviceClass}\n              ></ha-domain-icon>\n              ${this._average(domain, deviceClass)}\n            </div>\n          `);\n        }\n      });\n    });\n\n    let cameraEntityId: string | undefined;\n    if (this._config.show_camera && \"camera\" in entitiesByDomain) {\n      cameraEntityId = entitiesByDomain.camera[0].entity_id;\n    }\n\n    const imageClass = area.picture || cameraEntityId;\n    return html`\n      <ha-card\n        class=${imageClass ? \"image\" : \"\"}\n        style=${styleMap({\n          paddingBottom: imageClass\n            ? \"0\"\n            : `${((100 * this._ratio!.h) / this._ratio!.w).toFixed(2)}%`,\n        })}\n      >\n        ${area.picture || cameraEntityId\n          ? html`<hui-image\n              .config=${this._config}\n              .hass=${this.hass}\n              .image=${area.picture ? area.picture : undefined}\n              .cameraImage=${cameraEntityId}\n              .cameraView=${this._config.camera_view}\n              .aspectRatio=${this._config.aspect_ratio || DEFAULT_ASPECT_RATIO}\n            ></hui-image>`\n          : \"\"}\n\n        <div\n          class=\"container ${classMap({\n            navigate: this._config.navigation_path !== undefined,\n          })}\"\n          @click=${this._handleNavigation}\n        >\n          <div class=\"alerts\">\n            ${ALERT_DOMAINS.map((domain) => {\n              if (!(domain in entitiesByDomain)) {\n                return nothing;\n              }\n              return this._deviceClasses[domain].map((deviceClass) => {\n                const entity = this._isOn(domain, deviceClass);\n                return entity\n                  ? html`\n                      <ha-state-icon\n                        class=\"alert\"\n                        .hass=${this.hass}\n                        .stateObj=${entity}\n                      ></ha-state-icon>\n                    `\n                  : nothing;\n              });\n            })}\n          </div>\n          <div class=\"bottom\">\n            <div>\n              <div class=\"name\">${area.name}</div>\n              ${sensors.length\n                ? html`<div class=\"sensors\">${sensors}</div>`\n                : \"\"}\n            </div>\n            <div class=\"buttons\">\n              ${TOGGLE_DOMAINS.map((domain) => {\n                if (!(domain in entitiesByDomain)) {\n                  return \"\";\n                }\n\n                const on = this._isOn(domain)!;\n                return TOGGLE_DOMAINS.includes(domain)\n                  ? html`\n                      <ha-icon-button\n                        class=${on ? \"on\" : \"off\"}\n                        .path=${DOMAIN_ICONS[domain][on ? \"on\" : \"off\"]}\n                        .domain=${domain}\n                        @click=${this._toggle}\n                      >\n                      </ha-icon-button>\n                    `\n                  : \"\";\n              })}\n            </div>\n          </div>\n        </div>\n      </ha-card>\n    `;\n  }\n\n  protected updated(changedProps: PropertyValues): void {\n    super.updated(changedProps);\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const oldHass = changedProps.get(\"hass\") as HomeAssistant | undefined;\n    const oldConfig = changedProps.get(\"_config\") as AreaCardConfig | undefined;\n\n    if (\n      (changedProps.has(\"hass\") &&\n        (!oldHass || oldHass.themes !== this.hass.themes)) ||\n      (changedProps.has(\"_config\") &&\n        (!oldConfig || oldConfig.theme !== this._config.theme))\n    ) {\n      applyThemesOnElement(this, this.hass.themes, this._config.theme);\n    }\n  }\n\n  private _handleNavigation() {\n    if (this._config!.navigation_path) {\n      navigate(this._config!.navigation_path);\n    }\n  }\n\n  private _toggle(ev: Event) {\n    ev.stopPropagation();\n    const domain = (ev.currentTarget as any).domain as string;\n    if (TOGGLE_DOMAINS.includes(domain)) {\n      this.hass.callService(\n        domain,\n        this._isOn(domain) ? \"turn_off\" : \"turn_on\",\n        undefined,\n        {\n          area_id: this._config!.area,\n        }\n      );\n    }\n    forwardHaptic(\"light\");\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      ha-card {\n        overflow: hidden;\n        position: relative;\n        background-size: cover;\n      }\n\n      .container {\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        background: linear-gradient(\n          0,\n          rgba(33, 33, 33, 0.9) 0%,\n          rgba(33, 33, 33, 0) 45%\n        );\n      }\n\n      ha-card:not(.image) .container::before {\n        position: absolute;\n        content: \"\";\n        width: 100%;\n        height: 100%;\n        background-color: var(--sidebar-selected-icon-color);\n        opacity: 0.12;\n      }\n\n      .sensors {\n        color: #e3e3e3;\n        font-size: 16px;\n        --mdc-icon-size: 24px;\n        opacity: 0.6;\n        margin-top: 8px;\n      }\n\n      .sensor {\n        white-space: nowrap;\n        float: left;\n        margin-right: 4px;\n        margin-inline-end: 4px;\n        margin-inline-start: initial;\n      }\n\n      .alerts {\n        padding: 16px;\n      }\n\n      ha-state-icon {\n        display: inline-flex;\n        align-items: center;\n        justify-content: center;\n        position: relative;\n      }\n\n      .alerts ha-state-icon {\n        background: var(--accent-color);\n        color: var(--text-accent-color, var(--text-primary-color));\n        padding: 8px;\n        margin-right: 8px;\n        margin-inline-end: 8px;\n        margin-inline-start: initial;\n        border-radius: 50%;\n      }\n\n      .name {\n        color: white;\n        font-size: 24px;\n      }\n\n      .bottom {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        padding: 16px;\n      }\n\n      .navigate {\n        cursor: pointer;\n      }\n\n      ha-icon-button {\n        color: white;\n        background-color: var(--area-button-color, #727272b2);\n        border-radius: 50%;\n        margin-left: 8px;\n        margin-inline-start: 8px;\n        margin-inline-end: initial;\n        --mdc-icon-button-size: 44px;\n      }\n      .on {\n        color: var(--state-light-active-color);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-area-card\": HuiAreaCard;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}