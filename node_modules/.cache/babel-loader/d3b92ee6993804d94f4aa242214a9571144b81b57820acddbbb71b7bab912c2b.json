{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport { FormfieldBase } from \"@material/mwc-formfield/mwc-formfield-base\";\nimport { styles } from \"@material/mwc-formfield/mwc-formfield.css\";\nimport { css } from \"lit\";\nimport { customElement } from \"lit/decorators\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nexport let HaFormfield = _decorate([customElement(\"ha-formfield\")], function (_initialize, _FormfieldBase) {\n  class HaFormfield extends _FormfieldBase {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaFormfield,\n    d: [{\n      kind: \"method\",\n      key: \"_labelClick\",\n      value: function _labelClick() {\n        const input = this.input;\n        if (!input) return;\n        input.focus();\n        if (input.disabled) {\n          return;\n        }\n        switch (input.tagName) {\n          case \"HA-CHECKBOX\":\n            input.checked = !input.checked;\n            fireEvent(input, \"change\");\n            break;\n          case \"HA-RADIO\":\n            input.checked = true;\n            fireEvent(input, \"change\");\n            break;\n          default:\n            input.click();\n            break;\n        }\n      }\n    }, {\n      kind: \"field\",\n      static: true,\n      key: \"styles\",\n      value() {\n        return [styles, css`\n      :host(:not([alignEnd])) ::slotted(ha-switch) {\n        margin-right: 10px;\n        margin-inline-end: 10px;\n        margin-inline-start: inline;\n      }\n      .mdc-form-field > label {\n        direction: var(--direction);\n        margin-inline-start: 0;\n        margin-inline-end: auto;\n        padding-inline-start: 4px;\n        padding-inline-end: 0;\n      }\n    `];\n      }\n    }]\n  };\n}, FormfieldBase);","map":{"version":3,"names":["FormfieldBase","styles","css","customElement","fireEvent","HaFormfield","_decorate","_initialize","_FormfieldBase","constructor","args","F","d","kind","key","value","_labelClick","input","focus","disabled","tagName","checked","click","static"],"sources":["/workspaces/frontend/src/components/ha-formfield.ts"],"sourcesContent":["import { FormfieldBase } from \"@material/mwc-formfield/mwc-formfield-base\";\nimport { styles } from \"@material/mwc-formfield/mwc-formfield.css\";\nimport { css } from \"lit\";\nimport { customElement } from \"lit/decorators\";\nimport { fireEvent } from \"../common/dom/fire_event\";\n\n@customElement(\"ha-formfield\")\nexport class HaFormfield extends FormfieldBase {\n  protected _labelClick() {\n    const input = this.input as HTMLInputElement | undefined;\n    if (!input) return;\n\n    input.focus();\n    if (input.disabled) {\n      return;\n    }\n    switch (input.tagName) {\n      case \"HA-CHECKBOX\":\n        input.checked = !input.checked;\n        fireEvent(input, \"change\");\n        break;\n      case \"HA-RADIO\":\n        input.checked = true;\n        fireEvent(input, \"change\");\n        break;\n      default:\n        input.click();\n        break;\n    }\n  }\n\n  static override styles = [\n    styles,\n    css`\n      :host(:not([alignEnd])) ::slotted(ha-switch) {\n        margin-right: 10px;\n        margin-inline-end: 10px;\n        margin-inline-start: inline;\n      }\n      .mdc-form-field > label {\n        direction: var(--direction);\n        margin-inline-start: 0;\n        margin-inline-end: auto;\n        padding-inline-start: 4px;\n        padding-inline-end: 0;\n      }\n    `,\n  ];\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-formfield\": HaFormfield;\n  }\n}\n"],"mappings":";AAAA,SAASA,aAAa,QAAQ,4CAA4C;AAC1E,SAASC,MAAM,QAAQ,2CAA2C;AAClE,SAASC,GAAG,QAAQ,KAAK;AACzB,SAASC,aAAa,QAAQ,gBAAgB;AAC9C,SAASC,SAAS,QAAQ,0BAA0B;AAEpD,WACaC,WAAW,GAAAC,SAAA,EADvBH,aAAa,CAAC,cAAc,CAAC,aAAAI,WAAA,EAAAC,cAAA;EAA9B,MACaH,WAAW,SAAAG,cAAA,CAAuB;IAAAC,YAAA,GAAAC,IAAA;MAAA,SAAAA,IAAA;MAAAH,WAAA;IAAA;EAyC/C;EAAC;IAAAI,CAAA,EAzCYN,WAAW;IAAAO,CAAA;MAAAC,IAAA;MAAAC,GAAA;MAAAC,KAAA,EACtB,SAAAC,YAAA,EAAwB;QACtB,MAAMC,KAAK,GAAG,IAAI,CAACA,KAAqC;QACxD,IAAI,CAACA,KAAK,EAAE;QAEZA,KAAK,CAACC,KAAK,CAAC,CAAC;QACb,IAAID,KAAK,CAACE,QAAQ,EAAE;UAClB;QACF;QACA,QAAQF,KAAK,CAACG,OAAO;UACnB,KAAK,aAAa;YAChBH,KAAK,CAACI,OAAO,GAAG,CAACJ,KAAK,CAACI,OAAO;YAC9BjB,SAAS,CAACa,KAAK,EAAE,QAAQ,CAAC;YAC1B;UACF,KAAK,UAAU;YACbA,KAAK,CAACI,OAAO,GAAG,IAAI;YACpBjB,SAAS,CAACa,KAAK,EAAE,QAAQ,CAAC;YAC1B;UACF;YACEA,KAAK,CAACK,KAAK,CAAC,CAAC;YACb;QACJ;MACF;IAAC;MAAAT,IAAA;MAAAU,MAAA;MAAAT,GAAA;MAAAC,MAAA;QAAA,OAEwB,CACvBd,MAAM,EACNC,GAAI;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,CACF;MAAA;IAAA;EAAA;AAAA,GAxC8BF,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}