{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _decorate from \"@babel/runtime/helpers/decorate\";\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5;\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { computeAttributeNameDisplay } from \"../common/entity/compute_attribute_display\";\nimport { STATE_ATTRIBUTES } from \"../data/entity_attributes\";\nimport { haStyle } from \"../resources/styles\";\nimport \"./ha-attribute-value\";\nimport \"./ha-expansion-panel\";\nvar HaAttributes = _decorate([customElement(\"ha-attributes\")], function (_initialize, _LitElement) {\n  var HaAttributes = /*#__PURE__*/function (_LitElement2) {\n    _inherits(HaAttributes, _LitElement2);\n    function HaAttributes() {\n      var _this;\n      _classCallCheck(this, HaAttributes);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, HaAttributes, [].concat(args));\n      _initialize(_assertThisInitialized(_this));\n      return _this;\n    }\n    return _createClass(HaAttributes);\n  }(_LitElement);\n  return {\n    F: HaAttributes,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"stateObj\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: \"extra-filters\"\n      })],\n      key: \"extraFilters\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_expanded\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"get\",\n      key: \"_filteredAttributes\",\n      value: function _filteredAttributes() {\n        return this.computeDisplayAttributes(STATE_ATTRIBUTES.concat(this.extraFilters ? this.extraFilters.split(\",\") : []));\n      }\n    }, {\n      kind: \"method\",\n      key: \"willUpdate\",\n      value: function willUpdate(changedProperties) {\n        if (changedProperties.has(\"extraFilters\") || changedProperties.has(\"stateObj\")) {\n          this.toggleAttribute(\"empty\", this._filteredAttributes.length === 0);\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var _this2 = this;\n        if (!this.stateObj) {\n          return nothing;\n        }\n        var attributes = this._filteredAttributes;\n        if (attributes.length === 0) {\n          return nothing;\n        }\n        return html(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      <ha-expansion-panel\\n        .header=\", \"\\n        outlined\\n        @expanded-will-change=\", \"\\n      >\\n        <div class=\\\"attribute-container\\\">\\n          \", \"\\n        </div>\\n      </ha-expansion-panel>\\n      \", \"\\n    \"])), this.hass.localize(\"ui.components.attributes.expansion_header\"), this.expandedChanged, this._expanded ? html(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n                \", \"\\n              \"])), attributes.map(function (attribute) {\n          return html(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n                    <div class=\\\"data-entry\\\">\\n                      <div class=\\\"key\\\">\\n                        \", \"\\n                      </div>\\n                      <div class=\\\"value\\\">\\n                        <ha-attribute-value\\n                          .hass=\", \"\\n                          .attribute=\", \"\\n                          .stateObj=\", \"\\n                        ></ha-attribute-value>\\n                      </div>\\n                    </div>\\n                  \"])), computeAttributeNameDisplay(_this2.hass.localize, _this2.stateObj, _this2.hass.entities, attribute), _this2.hass, attribute, _this2.stateObj);\n        })) : \"\", this.stateObj.attributes.attribution ? html(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n            <div class=\\\"attribution\\\">\\n              \", \"\\n            </div>\\n          \"])), this.stateObj.attributes.attribution) : \"\");\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [haStyle, css(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"\\n        .attribute-container {\\n          margin-bottom: 8px;\\n          direction: ltr;\\n        }\\n        .data-entry {\\n          display: flex;\\n          flex-direction: row;\\n          justify-content: space-between;\\n        }\\n        .data-entry .value {\\n          max-width: 60%;\\n          overflow-wrap: break-word;\\n          text-align: right;\\n        }\\n        .key {\\n          flex-grow: 1;\\n        }\\n        .attribution {\\n          color: var(--secondary-text-color);\\n          text-align: center;\\n          margin-top: 16px;\\n        }\\n        hr {\\n          border-color: var(--divider-color);\\n          border-bottom: none;\\n          margin: 16px 0;\\n        }\\n      \"])))];\n      }\n    }, {\n      kind: \"method\",\n      key: \"computeDisplayAttributes\",\n      value: function computeDisplayAttributes(filtersArray) {\n        if (!this.stateObj) {\n          return [];\n        }\n        return Object.keys(this.stateObj.attributes).filter(function (key) {\n          return filtersArray.indexOf(key) === -1;\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"expandedChanged\",\n      value: function expandedChanged(ev) {\n        this._expanded = ev.detail.expanded;\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","nothing","customElement","property","state","computeAttributeNameDisplay","STATE_ATTRIBUTES","haStyle","HaAttributes","_decorate","_initialize","_LitElement","_LitElement2","_inherits","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_assertThisInitialized","_createClass","F","d","kind","decorators","attribute","key","value","_filteredAttributes","computeDisplayAttributes","extraFilters","split","willUpdate","changedProperties","has","toggleAttribute","render","_this2","stateObj","attributes","_templateObject","_taggedTemplateLiteral","hass","localize","expandedChanged","_expanded","_templateObject2","map","_templateObject3","entities","attribution","_templateObject4","static","styles","_templateObject5","filtersArray","Object","keys","filter","indexOf","ev","detail","expanded"],"sources":["/workspaces/frontend/src/components/ha-attributes.ts"],"sourcesContent":["import { HassEntity } from \"home-assistant-js-websocket\";\nimport {\n  css,\n  CSSResultGroup,\n  html,\n  LitElement,\n  nothing,\n  PropertyValues,\n} from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { computeAttributeNameDisplay } from \"../common/entity/compute_attribute_display\";\nimport { STATE_ATTRIBUTES } from \"../data/entity_attributes\";\nimport { haStyle } from \"../resources/styles\";\nimport { HomeAssistant } from \"../types\";\nimport \"./ha-attribute-value\";\nimport \"./ha-expansion-panel\";\n\n@customElement(\"ha-attributes\")\nclass HaAttributes extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public stateObj?: HassEntity;\n\n  @property({ attribute: \"extra-filters\" }) public extraFilters?: string;\n\n  @state() private _expanded = false;\n\n  private get _filteredAttributes() {\n    return this.computeDisplayAttributes(\n      STATE_ATTRIBUTES.concat(\n        this.extraFilters ? this.extraFilters.split(\",\") : []\n      )\n    );\n  }\n\n  protected willUpdate(changedProperties: PropertyValues): void {\n    if (\n      changedProperties.has(\"extraFilters\") ||\n      changedProperties.has(\"stateObj\")\n    ) {\n      this.toggleAttribute(\"empty\", this._filteredAttributes.length === 0);\n    }\n  }\n\n  protected render() {\n    if (!this.stateObj) {\n      return nothing;\n    }\n\n    const attributes = this._filteredAttributes;\n\n    if (attributes.length === 0) {\n      return nothing;\n    }\n\n    return html`\n      <ha-expansion-panel\n        .header=${this.hass.localize(\n          \"ui.components.attributes.expansion_header\"\n        )}\n        outlined\n        @expanded-will-change=${this.expandedChanged}\n      >\n        <div class=\"attribute-container\">\n          ${this._expanded\n            ? html`\n                ${attributes.map(\n                  (attribute) => html`\n                    <div class=\"data-entry\">\n                      <div class=\"key\">\n                        ${computeAttributeNameDisplay(\n                          this.hass.localize,\n                          this.stateObj!,\n                          this.hass.entities,\n                          attribute\n                        )}\n                      </div>\n                      <div class=\"value\">\n                        <ha-attribute-value\n                          .hass=${this.hass}\n                          .attribute=${attribute}\n                          .stateObj=${this.stateObj}\n                        ></ha-attribute-value>\n                      </div>\n                    </div>\n                  `\n                )}\n              `\n            : \"\"}\n        </div>\n      </ha-expansion-panel>\n      ${this.stateObj.attributes.attribution\n        ? html`\n            <div class=\"attribution\">\n              ${this.stateObj.attributes.attribution}\n            </div>\n          `\n        : \"\"}\n    `;\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyle,\n      css`\n        .attribute-container {\n          margin-bottom: 8px;\n          direction: ltr;\n        }\n        .data-entry {\n          display: flex;\n          flex-direction: row;\n          justify-content: space-between;\n        }\n        .data-entry .value {\n          max-width: 60%;\n          overflow-wrap: break-word;\n          text-align: right;\n        }\n        .key {\n          flex-grow: 1;\n        }\n        .attribution {\n          color: var(--secondary-text-color);\n          text-align: center;\n          margin-top: 16px;\n        }\n        hr {\n          border-color: var(--divider-color);\n          border-bottom: none;\n          margin: 16px 0;\n        }\n      `,\n    ];\n  }\n\n  private computeDisplayAttributes(filtersArray: string[]): string[] {\n    if (!this.stateObj) {\n      return [];\n    }\n    return Object.keys(this.stateObj.attributes).filter(\n      (key) => filtersArray.indexOf(key) === -1\n    );\n  }\n\n  private expandedChanged(ev) {\n    this._expanded = ev.detail.expanded;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-attributes\": HaAttributes;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}