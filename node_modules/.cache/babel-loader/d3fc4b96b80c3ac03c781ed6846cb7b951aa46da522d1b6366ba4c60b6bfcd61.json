{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { css, html, LitElement } from 'lit';\nimport { eventOptions, property, query } from 'lit/decorators.js';\nimport { cache } from 'lit/directives/cache.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { repeat } from 'lit/directives/repeat.js';\nimport { toUTCDate } from 'nodemod/dist/calendar/helpers/to-utc-date.js';\nimport { iconChevronLeft, iconChevronRight } from './app-datepicker-icons.js';\nimport { datepickerVariables, resetButton } from './common-styles.js';\nimport { ALL_NAV_KEYS_SET } from './constants.js';\nimport './custom_typings.js';\nimport { animateElement } from './helpers/animate-element.js';\nimport { computeNextFocusedDate } from './helpers/compute-next-focus-date.js';\nimport { dispatchCustomEvent } from './helpers/dispatch-custom-event.js';\nimport { findShadowTarget } from './helpers/find-shadow-target.js';\nimport { getDateRange } from './helpers/get-date-range.js';\nimport { getFormatters } from './helpers/get-formatters.js';\nimport { getMultiCalendars } from './helpers/get-multi-calendars.js';\nimport { getResolvedDate } from './helpers/get-resolved-date.js';\nimport { getResolvedLocale } from './helpers/get-resolved-locale.js';\nimport { hasClass } from './helpers/has-class.js';\nimport { isValidDate } from './helpers/is-valid-date.js';\nimport { makeNumberPrecise } from './helpers/make-number-precise.js';\nimport { passiveHandler } from './helpers/passive-handler.js';\nimport { splitString } from './helpers/split-string.js';\nimport { targetScrollTo } from './helpers/target-scroll-to.js';\nimport { toFormattedDateString } from './helpers/to-formatted-date-string.js';\nimport { toYearList } from './helpers/to-year-list.js';\nimport { updateYearWithMinMax } from './helpers/update-year-with-min-max.js';\nimport { Tracker } from './tracker.js';\nexport class Datepicker extends LitElement {\n  constructor() {\n    super();\n    this.firstDayOfWeek = 0;\n    this.showWeekNumber = false;\n    this.weekNumberType = 'first-4-day-week';\n    this.landscape = false;\n    this.locale = getResolvedLocale();\n    this.disabledDays = '';\n    this.disabledDates = '';\n    this.weekLabel = 'Wk';\n    this.inline = false;\n    this.dragRatio = .15;\n    this._hasMin = false;\n    this._hasMax = false;\n    this._disabledDaysSet = new Set();\n    this._disabledDatesSet = new Set();\n    this._dx = -Infinity;\n    this._hasNativeWebAnimation = 'animate' in HTMLElement.prototype;\n    this._updatingDateWithKey = false;\n    const todayDate = getResolvedDate();\n    const allFormatters = getFormatters(this.locale);\n    const formattedTodayDate = toFormattedDateString(todayDate);\n    const max = getResolvedDate('2100-12-31');\n    this.value = formattedTodayDate;\n    this.startView = 'calendar';\n    this._min = new Date(todayDate);\n    this._max = new Date(max);\n    this._todayDate = todayDate;\n    this._maxDate = max;\n    this._yearList = toYearList(todayDate, max);\n    this._selectedDate = new Date(todayDate);\n    this._focusedDate = new Date(todayDate);\n    this._formatters = allFormatters;\n  }\n  get startView() {\n    return this._startView;\n  }\n  set startView(val) {\n    const defaultVal = !val ? 'calendar' : val;\n    if (defaultVal !== 'calendar' && defaultVal !== 'yearList') return;\n    const oldVal = this._startView;\n    this._startView = defaultVal;\n    this.requestUpdate('startView', oldVal);\n  }\n  get min() {\n    return this._hasMin ? toFormattedDateString(this._min) : '';\n  }\n  set min(val) {\n    const valDate = getResolvedDate(val);\n    const isValidMin = isValidDate(val, valDate);\n    this._min = isValidMin ? valDate : this._todayDate;\n    this._hasMin = isValidMin;\n    this.requestUpdate('min');\n  }\n  get max() {\n    return this._hasMax ? toFormattedDateString(this._max) : '';\n  }\n  set max(val) {\n    const valDate = getResolvedDate(val);\n    const isValidMax = isValidDate(val, valDate);\n    this._max = isValidMax ? valDate : this._maxDate;\n    this._hasMax = isValidMax;\n    this.requestUpdate('max');\n  }\n  get value() {\n    return toFormattedDateString(this._focusedDate);\n  }\n  set value(val) {\n    const valDate = getResolvedDate(val);\n    const validValue = isValidDate(val, valDate) ? valDate : this._todayDate;\n    this._focusedDate = new Date(validValue);\n    this._selectedDate = this._lastSelectedDate = new Date(validValue);\n  }\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    if (this._tracker) {\n      this._tracker.disconnect();\n      this._tracker = undefined;\n    }\n  }\n  render() {\n    if (this._formatters.locale !== this.locale) this._formatters = getFormatters(this.locale);\n    const datepickerBodyContent = 'yearList' === this._startView ? this._renderDatepickerYearList() : this._renderDatepickerCalendar();\n    const datepickerHeaderContent = this.inline ? null : html`<div class=\"datepicker-header\" part=\"header\">${this._renderHeaderSelectorButton()}</div>`;\n    return html`\n    ${datepickerHeaderContent}\n    <div class=\"datepicker-body\" part=\"body\">${cache(datepickerBodyContent)}</div>\n    `;\n  }\n  firstUpdated() {\n    let firstFocusableElement;\n    if ('calendar' === this._startView) {\n      firstFocusableElement = this.inline ? this.shadowRoot.querySelector('.btn__month-selector') : this._buttonSelectorYear;\n    } else {\n      firstFocusableElement = this._yearViewListItem;\n    }\n    dispatchCustomEvent(this, 'datepicker-first-updated', {\n      firstFocusableElement,\n      value: this.value\n    });\n  }\n  async updated(changed) {\n    const startView = this._startView;\n    if (changed.has('min') || changed.has('max')) {\n      this._yearList = toYearList(this._min, this._max);\n      if ('yearList' === startView) this.requestUpdate();\n      const minTime = +this._min;\n      const maxTime = +this._max;\n      if (getDateRange(minTime, maxTime) > 864e5) {\n        const focusedDateTime = +this._focusedDate;\n        let newValue = focusedDateTime;\n        if (focusedDateTime < minTime) newValue = minTime;\n        if (focusedDateTime > maxTime) newValue = maxTime;\n        this.value = toFormattedDateString(new Date(newValue));\n      }\n    }\n    if (changed.has('_startView') || changed.has('startView')) {\n      if ('yearList' === startView) {\n        const selectedYearScrollTop = 48 * (this._selectedDate.getUTCFullYear() - this._min.getUTCFullYear() - 2);\n        targetScrollTo(this._yearViewFullList, {\n          top: selectedYearScrollTop,\n          left: 0\n        });\n      }\n      if ('calendar' === startView && null == this._tracker) {\n        const calendarsContainer = this.calendarsContainer;\n        let $down = false;\n        let $move = false;\n        let $transitioning = false;\n        if (calendarsContainer) {\n          const handlers = {\n            down: () => {\n              if ($transitioning) return;\n              $down = true;\n              this._dx = 0;\n            },\n            move: (pointer, oldPointer) => {\n              if ($transitioning || !$down) return;\n              const dx = this._dx;\n              const hasMin = dx < 0 && hasClass(calendarsContainer, 'has-max-date') || dx > 0 && hasClass(calendarsContainer, 'has-min-date');\n              if (!hasMin && Math.abs(dx) > 0 && $down) {\n                $move = true;\n                calendarsContainer.style.transform = `translateX(${makeNumberPrecise(dx)}px)`;\n              }\n              this._dx = hasMin ? 0 : dx + (pointer.x - oldPointer.x);\n            },\n            up: async (_$, _$$, ev) => {\n              if ($down && $move) {\n                const dx = this._dx;\n                const maxWidth = calendarsContainer.getBoundingClientRect().width / 3;\n                const didPassThreshold = Math.abs(dx) > Number(this.dragRatio) * maxWidth;\n                const transitionDuration = 350;\n                const transitionEasing = 'cubic-bezier(0, 0, .4, 1)';\n                const transformTo = didPassThreshold ? makeNumberPrecise(maxWidth * (dx < 0 ? -1 : 1)) : 0;\n                $transitioning = true;\n                await animateElement(calendarsContainer, {\n                  hasNativeWebAnimation: this._hasNativeWebAnimation,\n                  keyframes: [{\n                    transform: `translateX(${dx}px)`\n                  }, {\n                    transform: `translateX(${transformTo}px)`\n                  }],\n                  options: {\n                    duration: transitionDuration,\n                    easing: transitionEasing\n                  }\n                });\n                if (didPassThreshold) {\n                  this._updateMonth(dx < 0 ? 'next' : 'previous').handleEvent();\n                }\n                $down = $move = $transitioning = false;\n                this._dx = -Infinity;\n                calendarsContainer.removeAttribute('style');\n                dispatchCustomEvent(this, 'datepicker-animation-finished');\n              } else if ($down) {\n                this._updateFocusedDate(ev);\n                $down = $move = false;\n                this._dx = -Infinity;\n              }\n            }\n          };\n          this._tracker = new Tracker(calendarsContainer, handlers);\n        }\n      }\n      if (changed.get('_startView') && 'calendar' === startView) {\n        this._focusElement('[part=\"year-selector\"]');\n      }\n    }\n    if (this._updatingDateWithKey) {\n      this._focusElement('[part=\"calendars\"]:nth-of-type(2) .day--focused');\n      this._updatingDateWithKey = false;\n    }\n  }\n  _focusElement(selector) {\n    const focusedTarget = this.shadowRoot.querySelector(selector);\n    if (focusedTarget) focusedTarget.focus();\n  }\n  _renderHeaderSelectorButton() {\n    const {\n      yearFormat,\n      dateFormat\n    } = this._formatters;\n    const isCalendarView = this.startView === 'calendar';\n    const focusedDate = this._focusedDate;\n    const formattedDate = dateFormat(focusedDate);\n    const formatterFy = yearFormat(focusedDate);\n    return html`\n    <button\n      class=\"${classMap({\n      'btn__year-selector': true,\n      selected: !isCalendarView\n    })}\"\n      type=\"button\"\n      part=\"year-selector\"\n      data-view=\"${'yearList'}\"\n      @click=\"${this._updateView('yearList')}\">${formatterFy}</button>\n\n    <div class=\"datepicker-toolbar\" part=\"toolbar\">\n      <button\n        class=\"${classMap({\n      'btn__calendar-selector': true,\n      selected: isCalendarView\n    })}\"\n        type=\"button\"\n        part=\"calendar-selector\"\n        data-view=\"${'calendar'}\"\n        @click=\"${this._updateView('calendar')}\">${formattedDate}</button>\n    </div>\n    `;\n  }\n  _renderDatepickerYearList() {\n    const {\n      yearFormat\n    } = this._formatters;\n    const focusedDateFy = this._focusedDate.getUTCFullYear();\n    return html`\n    <div class=\"datepicker-body__year-list-view\" part=\"year-list-view\">\n      <div class=\"year-list-view__full-list\" part=\"year-list\" @click=\"${this._updateYear}\">\n      ${this._yearList.map(n => html`<button\n        class=\"${classMap({\n      'year-list-view__list-item': true,\n      'year--selected': focusedDateFy === n\n    })}\"\n        type=\"button\"\n        part=\"year\"\n        .year=\"${n}\">${yearFormat(toUTCDate(n, 0, 1))}</button>`)}</div>\n    </div>\n    `;\n  }\n  _renderDatepickerCalendar() {\n    const {\n      longMonthYearFormat,\n      dayFormat,\n      fullDateFormat,\n      longWeekdayFormat,\n      narrowWeekdayFormat\n    } = this._formatters;\n    const disabledDays = splitString(this.disabledDays, Number);\n    const disabledDates = splitString(this.disabledDates, getResolvedDate);\n    const showWeekNumber = this.showWeekNumber;\n    const $focusedDate = this._focusedDate;\n    const firstDayOfWeek = this.firstDayOfWeek;\n    const todayDate = getResolvedDate();\n    const $selectedDate = this._selectedDate;\n    const $max = this._max;\n    const $min = this._min;\n    const {\n      calendars,\n      disabledDaysSet,\n      disabledDatesSet,\n      weekdays\n    } = getMultiCalendars({\n      dayFormat,\n      fullDateFormat,\n      longWeekdayFormat,\n      narrowWeekdayFormat,\n      firstDayOfWeek,\n      disabledDays,\n      disabledDates,\n      locale: this.locale,\n      selectedDate: $selectedDate,\n      showWeekNumber: this.showWeekNumber,\n      weekNumberType: this.weekNumberType,\n      max: $max,\n      min: $min,\n      weekLabel: this.weekLabel\n    });\n    const hasMinDate = !calendars[0].calendar.length;\n    const hasMaxDate = !calendars[2].calendar.length;\n    const weekdaysContent = weekdays.map(o => html`<th\n        class=\"calendar-weekday\"\n        part=\"calendar-weekday\"\n        role=\"columnheader\"\n        aria-label=\"${o.label}\"\n      >\n        <div class=\"weekday\" part=\"weekday\">${o.value}</div>\n      </th>`);\n    const calendarsContent = repeat(calendars, n => n.key, ({\n      calendar\n    }, ci) => {\n      if (!calendar.length) {\n        return html`<div class=\"calendar-container\" part=\"calendar\"></div>`;\n      }\n      const calendarAriaId = `calendarcaption${ci}`;\n      const midCalendarFullDate = calendar[1][1].fullDate;\n      const isMidCalendar = ci === 1;\n      const $newFocusedDate = isMidCalendar && !this._isInVisibleMonth($focusedDate, $selectedDate) ? computeNextFocusedDate({\n        disabledDaysSet,\n        disabledDatesSet,\n        hasAltKey: false,\n        keyCode: 36,\n        focusedDate: $focusedDate,\n        selectedDate: $selectedDate,\n        minTime: +$min,\n        maxTime: +$max\n      }) : $focusedDate;\n      return html`\n      <div class=\"calendar-container\" part=\"calendar\">\n        <table class=\"calendar-table\" part=\"table\" role=\"grid\" aria-labelledby=\"${calendarAriaId}\">\n          <caption id=\"${calendarAriaId}\">\n            <div class=\"calendar-label\" part=\"label\">${midCalendarFullDate ? longMonthYearFormat(midCalendarFullDate) : ''}</div>\n          </caption>\n\n          <thead role=\"rowgroup\">\n            <tr class=\"calendar-weekdays\" part=\"weekdays\" role=\"row\">${weekdaysContent}</tr>\n          </thead>\n\n          <tbody role=\"rowgroup\">${calendar.map(calendarRow => {\n        return html`<tr role=\"row\">${calendarRow.map((calendarCol, i) => {\n          const {\n            disabled,\n            fullDate,\n            label,\n            value\n          } = calendarCol;\n          if (!fullDate && value && showWeekNumber && i < 1) {\n            return html`<th\n                      class=\"full-calendar__day weekday-label\"\n                      part=\"calendar-day\"\n                      scope=\"row\"\n                      role=\"rowheader\"\n                      abbr=\"${label}\"\n                      aria-label=\"${label}\"\n                    >${value}</th>`;\n          }\n          if (!value || !fullDate) {\n            return html`<td class=\"full-calendar__day day--empty\" part=\"calendar-day\"></td>`;\n          }\n          const curTime = +new Date(fullDate);\n          const isCurrentDate = +$focusedDate === curTime;\n          const shouldTab = isMidCalendar && $newFocusedDate.getUTCDate() === Number(value);\n          return html`\n                  <td\n                    tabindex=\"${shouldTab ? '0' : '-1'}\"\n                    class=\"${classMap({\n            'full-calendar__day': true,\n            'day--disabled': disabled,\n            'day--today': +todayDate === curTime,\n            'day--focused': !disabled && isCurrentDate\n          })}\"\n                    part=\"calendar-day${+todayDate === curTime ? ' calendar-today' : ''}\"\n                    role=\"gridcell\"\n                    aria-disabled=\"${disabled ? 'true' : 'false'}\"\n                    aria-label=\"${label}\"\n                    aria-selected=\"${isCurrentDate ? 'true' : 'false'}\"\n                    .fullDate=\"${fullDate}\"\n                    .day=\"${value}\"\n                  >\n                    <div\n                      class=\"calendar-day\"\n                      part=\"day${+todayDate === curTime ? ' today' : ''}\"\n                    >${value}</div>\n                  </td>\n                  `;\n        })}</tr>`;\n      })}</tbody>\n        </table>\n      </div>\n      `;\n    });\n    this._disabledDatesSet = disabledDatesSet;\n    this._disabledDaysSet = disabledDaysSet;\n    return html`\n    <div class=\"datepicker-body__calendar-view\" part=\"calendar-view\">\n      <div class=\"calendar-view__month-selector\" part=\"month-selectors\">\n        <div class=\"month-selector-container\">${hasMinDate ? null : html`\n          <button\n            class=\"btn__month-selector\"\n            type=\"button\"\n            part=\"month-selector\"\n            aria-label=\"Previous month\"\n            @click=\"${this._updateMonth('previous')}\"\n          >${iconChevronLeft}</button>\n        `}</div>\n\n        <div class=\"month-selector-container\">${hasMaxDate ? null : html`\n          <button\n            class=\"btn__month-selector\"\n            type=\"button\"\n            part=\"month-selector\"\n            aria-label=\"Next month\"\n            @click=\"${this._updateMonth('next')}\"\n          >${iconChevronRight}</button>\n        `}</div>\n      </div>\n\n      <div\n        class=\"${classMap({\n      'calendars-container': true,\n      'has-min-date': hasMinDate,\n      'has-max-date': hasMaxDate\n    })}\"\n        part=\"calendars\"\n        @keyup=\"${this._updateFocusedDateWithKeyboard}\"\n      >${calendarsContent}</div>\n    </div>\n    `;\n  }\n  _updateView(view) {\n    const handleUpdateView = () => {\n      if ('calendar' === view) {\n        this._selectedDate = this._lastSelectedDate = new Date(updateYearWithMinMax(this._focusedDate, this._min, this._max));\n      }\n      this._startView = view;\n    };\n    return passiveHandler(handleUpdateView);\n  }\n  _updateMonth(updateType) {\n    const handleUpdateMonth = () => {\n      const calendarsContainer = this.calendarsContainer;\n      if (null == calendarsContainer) return this.updateComplete;\n      const dateDate = this._lastSelectedDate || this._selectedDate;\n      const minDate = this._min;\n      const maxDate = this._max;\n      const isPreviousMonth = updateType === 'previous';\n      const newSelectedDate = toUTCDate(dateDate.getUTCFullYear(), dateDate.getUTCMonth() + (isPreviousMonth ? -1 : 1), 1);\n      const newSelectedDateFy = newSelectedDate.getUTCFullYear();\n      const newSelectedDateM = newSelectedDate.getUTCMonth();\n      const minDateFy = minDate.getUTCFullYear();\n      const minDateM = minDate.getUTCMonth();\n      const maxDateFy = maxDate.getUTCFullYear();\n      const maxDateM = maxDate.getUTCMonth();\n      const isLessThanYearAndMonth = newSelectedDateFy < minDateFy || newSelectedDateFy <= minDateFy && newSelectedDateM < minDateM;\n      const isMoreThanYearAndMonth = newSelectedDateFy > maxDateFy || newSelectedDateFy >= maxDateFy && newSelectedDateM > maxDateM;\n      if (isLessThanYearAndMonth || isMoreThanYearAndMonth) return this.updateComplete;\n      this._lastSelectedDate = newSelectedDate;\n      this._selectedDate = this._lastSelectedDate;\n      return this.updateComplete;\n    };\n    return passiveHandler(handleUpdateMonth);\n  }\n  _updateYear(ev) {\n    const selectedYearEl = findShadowTarget(ev, n => hasClass(n, 'year-list-view__list-item'));\n    if (selectedYearEl == null) return;\n    const newFocusedDate = updateYearWithMinMax(new Date(this._focusedDate).setUTCFullYear(+selectedYearEl.year), this._min, this._max);\n    this._selectedDate = this._lastSelectedDate = new Date(newFocusedDate);\n    this._focusedDate = new Date(newFocusedDate);\n    this._startView = 'calendar';\n  }\n  _updateFocusedDate(ev) {\n    const selectedDayEl = findShadowTarget(ev, n => hasClass(n, 'full-calendar__day'));\n    if (selectedDayEl == null || ['day--empty', 'day--disabled', 'day--focused', 'weekday-label'].some(n => hasClass(selectedDayEl, n))) return;\n    this._focusedDate = new Date(selectedDayEl.fullDate);\n    dispatchCustomEvent(this, 'datepicker-value-updated', {\n      isKeypress: false,\n      value: this.value\n    });\n  }\n  _updateFocusedDateWithKeyboard(ev) {\n    const keyCode = ev.keyCode;\n    if (13 === keyCode || 32 === keyCode) {\n      dispatchCustomEvent(this, 'datepicker-value-updated', {\n        keyCode,\n        isKeypress: true,\n        value: this.value\n      });\n      this._focusedDate = new Date(this._selectedDate);\n      return;\n    }\n    if (keyCode === 9 || !ALL_NAV_KEYS_SET.has(keyCode)) return;\n    const selectedDate = this._selectedDate;\n    const nextFocusedDate = computeNextFocusedDate({\n      keyCode,\n      selectedDate,\n      disabledDatesSet: this._disabledDatesSet,\n      disabledDaysSet: this._disabledDaysSet,\n      focusedDate: this._focusedDate,\n      hasAltKey: ev.altKey,\n      maxTime: +this._max,\n      minTime: +this._min\n    });\n    if (!this._isInVisibleMonth(nextFocusedDate, selectedDate)) {\n      this._selectedDate = this._lastSelectedDate = nextFocusedDate;\n    }\n    this._focusedDate = nextFocusedDate;\n    this._updatingDateWithKey = true;\n    dispatchCustomEvent(this, 'datepicker-value-updated', {\n      keyCode,\n      isKeypress: true,\n      value: this.value\n    });\n  }\n  _isInVisibleMonth(dateA, dateB) {\n    const dateAFy = dateA.getUTCFullYear();\n    const dateAM = dateA.getUTCMonth();\n    const dateBFY = dateB.getUTCFullYear();\n    const dateBM = dateB.getUTCMonth();\n    return dateAFy === dateBFY && dateAM === dateBM;\n  }\n  get calendarsContainer() {\n    return this.shadowRoot.querySelector('.calendars-container');\n  }\n}\nDatepicker.styles = [datepickerVariables, resetButton, css`\n    :host {\n      width: 312px;\n      /** NOTE: Magic number as 16:9 aspect ratio does not look good */\n      /* height: calc((var(--app-datepicker-width) / .66) - var(--app-datepicker-footer-height, 56px)); */\n      background-color: var(--app-datepicker-bg-color, #fff);\n      color: var(--app-datepicker-color, #000);\n      border-radius:\n        var(--app-datepicker-border-top-left-radius, 0)\n        var(--app-datepicker-border-top-right-radius, 0)\n        var(--app-datepicker-border-bottom-right-radius, 0)\n        var(--app-datepicker-border-bottom-left-radius, 0);\n      contain: content;\n      overflow: hidden;\n    }\n    :host([landscape]) {\n      display: flex;\n\n      /** <iphone-5-landscape-width> - <standard-side-margin-width> */\n      min-width: calc(568px - 16px * 2);\n      width: calc(568px - 16px * 2);\n    }\n\n    .datepicker-header + .datepicker-body {\n      border-top: 1px solid var(--app-datepicker-separator-color, #ddd);\n    }\n    :host([landscape]) > .datepicker-header + .datepicker-body {\n      border-top: none;\n      border-left: 1px solid var(--app-datepicker-separator-color, #ddd);\n    }\n\n    .datepicker-header {\n      display: flex;\n      flex-direction: column;\n      align-items: flex-start;\n\n      position: relative;\n      padding: 16px 24px;\n    }\n    :host([landscape]) > .datepicker-header {\n      /** :this.<one-liner-month-day-width> + :this.<side-padding-width> */\n      min-width: calc(14ch + 24px * 2);\n    }\n\n    .btn__year-selector,\n    .btn__calendar-selector {\n      color: var(--app-datepicker-selector-color, rgba(0, 0, 0, .55));\n      cursor: pointer;\n      /* outline: none; */\n    }\n    .btn__year-selector.selected,\n    .btn__calendar-selector.selected {\n      color: currentColor;\n    }\n\n    /**\n      * NOTE: IE11-only fix. This prevents formatted focused date from overflowing the container.\n      */\n    .datepicker-toolbar {\n      width: 100%;\n    }\n\n    .btn__year-selector {\n      font-size: 16px;\n      font-weight: 700;\n    }\n    .btn__calendar-selector {\n      font-size: 36px;\n      font-weight: 700;\n      line-height: 1;\n    }\n\n    .datepicker-body {\n      position: relative;\n      width: 100%;\n      overflow: hidden;\n    }\n\n    .datepicker-body__calendar-view {\n      min-height: 56px;\n    }\n\n    .calendar-view__month-selector {\n      display: flex;\n      align-items: center;\n\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      padding: 0 8px;\n      z-index: 1;\n    }\n\n    .month-selector-container {\n      max-height: 56px;\n      height: 100%;\n    }\n    .month-selector-container + .month-selector-container {\n      margin: 0 0 0 auto;\n    }\n\n    .btn__month-selector {\n      padding: calc((56px - 24px) / 2);\n      /**\n        * NOTE: button element contains no text, only SVG.\n        * No extra height will incur with such setting.\n        */\n      line-height: 0;\n    }\n    .btn__month-selector > svg {\n      fill: currentColor;\n    }\n\n    .calendars-container {\n      display: flex;\n      justify-content: center;\n\n      position: relative;\n      top: 0;\n      left: calc(-100%);\n      width: calc(100% * 3);\n      transform: translateZ(0);\n      will-change: transform;\n      /**\n        * NOTE: Required for Pointer Events API to work on touch devices.\n        * Native \\`pan-y\\` action will be fired by the browsers since we only care about the\n        * horizontal direction. This is great as vertical scrolling still works even when touch\n        * event happens on a datepicker's calendar.\n        */\n      touch-action: pan-y;\n      /* outline: none; */\n    }\n\n    .year-list-view__full-list {\n      max-height: calc(48px * 7);\n      overflow-y: auto;\n\n      scrollbar-color: var(--app-datepicker-scrollbar-thumb-bg-color, rgba(0, 0, 0, .35)) rgba(0, 0, 0, 0);\n      scrollbar-width: thin;\n    }\n    .year-list-view__full-list::-webkit-scrollbar {\n      width: 8px;\n      background-color: rgba(0, 0, 0, 0);\n    }\n    .year-list-view__full-list::-webkit-scrollbar-thumb {\n      background-color: var(--app-datepicker-scrollbar-thumb-bg-color, rgba(0, 0, 0, .35));\n      border-radius: 50px;\n    }\n    .year-list-view__full-list::-webkit-scrollbar-thumb:hover {\n      background-color: var(--app-datepicker-scrollbar-thumb-hover-bg-color, rgba(0, 0, 0, .5));\n    }\n\n    .calendar-weekdays > th,\n    .weekday-label {\n      color: var(--app-datepicker-weekday-color, rgba(0, 0, 0, .55));\n      font-weight: 400;\n      transform: translateZ(0);\n      will-change: transform;\n    }\n\n    .calendar-container,\n    .calendar-label,\n    .calendar-table {\n      width: 100%;\n    }\n\n    .calendar-container {\n      position: relative;\n      padding: 0 16px 16px;\n    }\n\n    .calendar-table {\n      -moz-user-select: none;\n      -webkit-user-select: none;\n      user-select: none;\n\n      border-collapse: collapse;\n      border-spacing: 0;\n      text-align: center;\n    }\n\n    .calendar-label {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n\n      height: 56px;\n      font-weight: 500;\n      text-align: center;\n    }\n\n    .calendar-weekday,\n    .full-calendar__day {\n      position: relative;\n      width: calc(100% / 7);\n      height: 0;\n      padding: calc(100% / 7 / 2) 0;\n      outline: none;\n      text-align: center;\n    }\n    .full-calendar__day:not(.day--disabled):focus {\n      outline: #000 dotted 1px;\n      outline: -webkit-focus-ring-color auto 1px;\n    }\n    :host([showweeknumber]) .calendar-weekday,\n    :host([showweeknumber]) .full-calendar__day {\n      width: calc(100% / 8);\n      padding-top: calc(100% / 8);\n      padding-bottom: 0;\n    }\n    :host([showweeknumber]) th.weekday-label {\n      padding: 0;\n    }\n\n    /**\n      * NOTE: Interesting fact! That is ::after will trigger paint when dragging. This will trigger\n      * layout and paint on **ONLY** affected nodes. This is much cheaper as compared to rendering\n      * all :::after of all calendar day elements. When dragging the entire calendar container,\n      * because of all layout and paint trigger on each and every ::after, this becomes a expensive\n      * task for the browsers especially on low-end devices. Even though animating opacity is much\n      * cheaper, the technique does not work here. Adding 'will-change' will further reduce overall\n      * painting at the expense of memory consumption as many cells in a table has been promoted\n      * a its own layer.\n      */\n    .full-calendar__day:not(.day--empty):not(.day--disabled):not(.weekday-label) {\n      transform: translateZ(0);\n      will-change: transform;\n    }\n    .full-calendar__day:not(.day--empty):not(.day--disabled):not(.weekday-label).day--focused::after,\n    .full-calendar__day:not(.day--empty):not(.day--disabled):not(.day--focused):not(.weekday-label):hover::after {\n      content: '';\n      display: block;\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background-color: var(--app-datepicker-accent-color, #1a73e8);\n      border-radius: 50%;\n      opacity: 0;\n      pointer-events: none;\n    }\n    .full-calendar__day:not(.day--empty):not(.day--disabled):not(.weekday-label) {\n      cursor: pointer;\n      pointer-events: auto;\n      -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n    }\n    .full-calendar__day.day--focused:not(.day--empty):not(.day--disabled):not(.weekday-label)::after,\n    .full-calendar__day.day--today.day--focused:not(.day--empty):not(.day--disabled):not(.weekday-label)::after {\n      opacity: 1;\n    }\n\n    .calendar-weekday > .weekday,\n    .full-calendar__day > .calendar-day {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n\n      position: absolute;\n      top: 5%;\n      left: 5%;\n      width: 90%;\n      height: 90%;\n      color: currentColor;\n      font-size: 14px;\n      pointer-events: none;\n      z-index: 1;\n    }\n    .full-calendar__day.day--today {\n      color: var(--app-datepicker-accent-color, #1a73e8);\n    }\n    .full-calendar__day.day--focused,\n    .full-calendar__day.day--today.day--focused {\n      color: var(--app-datepicker-focused-day-color, #fff);\n    }\n    .full-calendar__day.day--empty,\n    .full-calendar__day.weekday-label,\n    .full-calendar__day.day--disabled > .calendar-day {\n      pointer-events: none;\n    }\n    .full-calendar__day.day--disabled:not(.day--today) {\n      color: var(--app-datepicker-disabled-day-color, rgba(0, 0, 0, .55));\n    }\n\n    .year-list-view__list-item {\n      position: relative;\n      width: 100%;\n      padding: 12px 16px;\n      text-align: center;\n      /** NOTE: Reduce paint when hovering and scrolling, but this increases memory usage */\n      /* will-change: opacity; */\n      /* outline: none; */\n    }\n    .year-list-view__list-item::after {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background-color: var(--app-datepicker-focused-year-bg-color, #000);\n      opacity: 0;\n      pointer-events: none;\n    }\n    .year-list-view__list-item:focus::after {\n      opacity: .05;\n    }\n    .year-list-view__list-item.year--selected {\n      color: var(--app-datepicker-accent-color, #1a73e8);\n      font-size: 24px;\n      font-weight: 500;\n    }\n\n    @media (any-hover: hover) {\n      .btn__month-selector:hover,\n      .year-list-view__list-item:hover {\n        cursor: pointer;\n      }\n      .full-calendar__day:not(.day--empty):not(.day--disabled):not(.day--focused):not(.weekday-label):hover::after {\n        opacity: .15;\n      }\n      .year-list-view__list-item:hover::after {\n        opacity: .05;\n      }\n    }\n\n    @supports (background: -webkit-canvas(squares)) {\n      .calendar-container {\n        padding: 56px 16px 16px;\n      }\n\n      table > caption {\n        position: absolute;\n        top: 0;\n        left: 50%;\n        transform: translate3d(-50%, 0, 0);\n        will-change: transform;\n      }\n    }\n    `];\n__decorate([property({\n  type: Number,\n  reflect: true\n})], Datepicker.prototype, \"firstDayOfWeek\", void 0);\n__decorate([property({\n  type: Boolean,\n  reflect: true\n})], Datepicker.prototype, \"showWeekNumber\", void 0);\n__decorate([property({\n  type: String,\n  reflect: true\n})], Datepicker.prototype, \"weekNumberType\", void 0);\n__decorate([property({\n  type: Boolean,\n  reflect: true\n})], Datepicker.prototype, \"landscape\", void 0);\n__decorate([property({\n  type: String,\n  reflect: true\n})], Datepicker.prototype, \"startView\", null);\n__decorate([property({\n  type: String,\n  reflect: true\n})], Datepicker.prototype, \"min\", null);\n__decorate([property({\n  type: String,\n  reflect: true\n})], Datepicker.prototype, \"max\", null);\n__decorate([property({\n  type: String\n})], Datepicker.prototype, \"value\", null);\n__decorate([property({\n  type: String\n})], Datepicker.prototype, \"locale\", void 0);\n__decorate([property({\n  type: String\n})], Datepicker.prototype, \"disabledDays\", void 0);\n__decorate([property({\n  type: String\n})], Datepicker.prototype, \"disabledDates\", void 0);\n__decorate([property({\n  type: String\n})], Datepicker.prototype, \"weekLabel\", void 0);\n__decorate([property({\n  type: Boolean\n})], Datepicker.prototype, \"inline\", void 0);\n__decorate([property({\n  type: Number\n})], Datepicker.prototype, \"dragRatio\", void 0);\n__decorate([property({\n  type: Date,\n  attribute: false\n})], Datepicker.prototype, \"_selectedDate\", void 0);\n__decorate([property({\n  type: Date,\n  attribute: false\n})], Datepicker.prototype, \"_focusedDate\", void 0);\n__decorate([property({\n  type: String,\n  attribute: false\n})], Datepicker.prototype, \"_startView\", void 0);\n__decorate([query('.year-list-view__full-list')], Datepicker.prototype, \"_yearViewFullList\", void 0);\n__decorate([query('.btn__year-selector')], Datepicker.prototype, \"_buttonSelectorYear\", void 0);\n__decorate([query('.year-list-view__list-item')], Datepicker.prototype, \"_yearViewListItem\", void 0);\n__decorate([eventOptions({\n  passive: true\n})], Datepicker.prototype, \"_updateYear\", null);\n__decorate([eventOptions({\n  passive: true\n})], Datepicker.prototype, \"_updateFocusedDateWithKeyboard\", null);","map":{"version":3,"names":["__decorate","css","html","LitElement","eventOptions","property","query","cache","classMap","repeat","toUTCDate","iconChevronLeft","iconChevronRight","datepickerVariables","resetButton","ALL_NAV_KEYS_SET","animateElement","computeNextFocusedDate","dispatchCustomEvent","findShadowTarget","getDateRange","getFormatters","getMultiCalendars","getResolvedDate","getResolvedLocale","hasClass","isValidDate","makeNumberPrecise","passiveHandler","splitString","targetScrollTo","toFormattedDateString","toYearList","updateYearWithMinMax","Tracker","Datepicker","constructor","firstDayOfWeek","showWeekNumber","weekNumberType","landscape","locale","disabledDays","disabledDates","weekLabel","inline","dragRatio","_hasMin","_hasMax","_disabledDaysSet","Set","_disabledDatesSet","_dx","Infinity","_hasNativeWebAnimation","HTMLElement","prototype","_updatingDateWithKey","todayDate","allFormatters","formattedTodayDate","max","value","startView","_min","Date","_max","_todayDate","_maxDate","_yearList","_selectedDate","_focusedDate","_formatters","_startView","val","defaultVal","oldVal","requestUpdate","min","valDate","isValidMin","isValidMax","validValue","_lastSelectedDate","disconnectedCallback","_tracker","disconnect","undefined","render","datepickerBodyContent","_renderDatepickerYearList","_renderDatepickerCalendar","datepickerHeaderContent","_renderHeaderSelectorButton","firstUpdated","firstFocusableElement","shadowRoot","querySelector","_buttonSelectorYear","_yearViewListItem","updated","changed","has","minTime","maxTime","focusedDateTime","newValue","selectedYearScrollTop","getUTCFullYear","_yearViewFullList","top","left","calendarsContainer","$down","$move","$transitioning","handlers","down","move","pointer","oldPointer","dx","hasMin","Math","abs","style","transform","x","up","_$","_$$","ev","maxWidth","getBoundingClientRect","width","didPassThreshold","Number","transitionDuration","transitionEasing","transformTo","hasNativeWebAnimation","keyframes","options","duration","easing","_updateMonth","handleEvent","removeAttribute","_updateFocusedDate","get","_focusElement","selector","focusedTarget","focus","yearFormat","dateFormat","isCalendarView","focusedDate","formattedDate","formatterFy","selected","_updateView","focusedDateFy","_updateYear","map","n","longMonthYearFormat","dayFormat","fullDateFormat","longWeekdayFormat","narrowWeekdayFormat","$focusedDate","$selectedDate","$max","$min","calendars","disabledDaysSet","disabledDatesSet","weekdays","selectedDate","hasMinDate","calendar","length","hasMaxDate","weekdaysContent","o","label","calendarsContent","key","ci","calendarAriaId","midCalendarFullDate","fullDate","isMidCalendar","$newFocusedDate","_isInVisibleMonth","hasAltKey","keyCode","calendarRow","calendarCol","i","disabled","curTime","isCurrentDate","shouldTab","getUTCDate","_updateFocusedDateWithKeyboard","view","handleUpdateView","updateType","handleUpdateMonth","updateComplete","dateDate","minDate","maxDate","isPreviousMonth","newSelectedDate","getUTCMonth","newSelectedDateFy","newSelectedDateM","minDateFy","minDateM","maxDateFy","maxDateM","isLessThanYearAndMonth","isMoreThanYearAndMonth","selectedYearEl","newFocusedDate","setUTCFullYear","year","selectedDayEl","some","isKeypress","nextFocusedDate","altKey","dateA","dateB","dateAFy","dateAM","dateBFY","dateBM","styles","type","reflect","Boolean","String","attribute","passive"],"sources":["/workspaces/frontend/node_modules/app-datepicker/dist/datepicker.js"],"sourcesContent":["import { __decorate } from \"tslib\";\nimport { css, html, LitElement, } from 'lit';\nimport { eventOptions, property, query } from 'lit/decorators.js';\nimport { cache } from 'lit/directives/cache.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { repeat } from 'lit/directives/repeat.js';\nimport { toUTCDate } from 'nodemod/dist/calendar/helpers/to-utc-date.js';\nimport { iconChevronLeft, iconChevronRight } from './app-datepicker-icons.js';\nimport { datepickerVariables, resetButton } from './common-styles.js';\nimport { ALL_NAV_KEYS_SET } from './constants.js';\nimport './custom_typings.js';\nimport { animateElement } from './helpers/animate-element.js';\nimport { computeNextFocusedDate } from './helpers/compute-next-focus-date.js';\nimport { dispatchCustomEvent } from './helpers/dispatch-custom-event.js';\nimport { findShadowTarget } from './helpers/find-shadow-target.js';\nimport { getDateRange } from './helpers/get-date-range.js';\nimport { getFormatters } from './helpers/get-formatters.js';\nimport { getMultiCalendars } from './helpers/get-multi-calendars.js';\nimport { getResolvedDate } from './helpers/get-resolved-date.js';\nimport { getResolvedLocale } from './helpers/get-resolved-locale.js';\nimport { hasClass } from './helpers/has-class.js';\nimport { isValidDate } from './helpers/is-valid-date.js';\nimport { makeNumberPrecise } from './helpers/make-number-precise.js';\nimport { passiveHandler } from './helpers/passive-handler.js';\nimport { splitString } from './helpers/split-string.js';\nimport { targetScrollTo } from './helpers/target-scroll-to.js';\nimport { toFormattedDateString } from './helpers/to-formatted-date-string.js';\nimport { toYearList } from './helpers/to-year-list.js';\nimport { updateYearWithMinMax } from './helpers/update-year-with-min-max.js';\nimport { Tracker } from './tracker.js';\nexport class Datepicker extends LitElement {\n    constructor() {\n        super();\n        this.firstDayOfWeek = 0;\n        this.showWeekNumber = false;\n        this.weekNumberType = 'first-4-day-week';\n        this.landscape = false;\n        this.locale = getResolvedLocale();\n        this.disabledDays = '';\n        this.disabledDates = '';\n        this.weekLabel = 'Wk';\n        this.inline = false;\n        this.dragRatio = .15;\n        this._hasMin = false;\n        this._hasMax = false;\n        this._disabledDaysSet = new Set();\n        this._disabledDatesSet = new Set();\n        this._dx = -Infinity;\n        this._hasNativeWebAnimation = 'animate' in HTMLElement.prototype;\n        this._updatingDateWithKey = false;\n        const todayDate = getResolvedDate();\n        const allFormatters = getFormatters(this.locale);\n        const formattedTodayDate = toFormattedDateString(todayDate);\n        const max = getResolvedDate('2100-12-31');\n        this.value = formattedTodayDate;\n        this.startView = 'calendar';\n        this._min = new Date(todayDate);\n        this._max = new Date(max);\n        this._todayDate = todayDate;\n        this._maxDate = max;\n        this._yearList = toYearList(todayDate, max);\n        this._selectedDate = new Date(todayDate);\n        this._focusedDate = new Date(todayDate);\n        this._formatters = allFormatters;\n    }\n    get startView() {\n        return this._startView;\n    }\n    set startView(val) {\n        const defaultVal = !val ? 'calendar' : val;\n        if (defaultVal !== 'calendar' && defaultVal !== 'yearList')\n            return;\n        const oldVal = this._startView;\n        this._startView = defaultVal;\n        this.requestUpdate('startView', oldVal);\n    }\n    get min() {\n        return this._hasMin ? toFormattedDateString(this._min) : '';\n    }\n    set min(val) {\n        const valDate = getResolvedDate(val);\n        const isValidMin = isValidDate(val, valDate);\n        this._min = isValidMin ? valDate : this._todayDate;\n        this._hasMin = isValidMin;\n        this.requestUpdate('min');\n    }\n    get max() {\n        return this._hasMax ? toFormattedDateString(this._max) : '';\n    }\n    set max(val) {\n        const valDate = getResolvedDate(val);\n        const isValidMax = isValidDate(val, valDate);\n        this._max = isValidMax ? valDate : this._maxDate;\n        this._hasMax = isValidMax;\n        this.requestUpdate('max');\n    }\n    get value() {\n        return toFormattedDateString(this._focusedDate);\n    }\n    set value(val) {\n        const valDate = getResolvedDate(val);\n        const validValue = isValidDate(val, valDate) ? valDate : this._todayDate;\n        this._focusedDate = new Date(validValue);\n        this._selectedDate = this._lastSelectedDate = new Date(validValue);\n    }\n    disconnectedCallback() {\n        super.disconnectedCallback();\n        if (this._tracker) {\n            this._tracker.disconnect();\n            this._tracker = undefined;\n        }\n    }\n    render() {\n        if (this._formatters.locale !== this.locale)\n            this._formatters = getFormatters(this.locale);\n        const datepickerBodyContent = 'yearList' === this._startView ?\n            this._renderDatepickerYearList() : this._renderDatepickerCalendar();\n        const datepickerHeaderContent = this.inline ?\n            null :\n            html `<div class=\"datepicker-header\" part=\"header\">${this._renderHeaderSelectorButton()}</div>`;\n        return html `\n    ${datepickerHeaderContent}\n    <div class=\"datepicker-body\" part=\"body\">${cache(datepickerBodyContent)}</div>\n    `;\n    }\n    firstUpdated() {\n        let firstFocusableElement;\n        if ('calendar' === this._startView) {\n            firstFocusableElement = (this.inline ?\n                this.shadowRoot.querySelector('.btn__month-selector') :\n                this._buttonSelectorYear);\n        }\n        else {\n            firstFocusableElement = this._yearViewListItem;\n        }\n        dispatchCustomEvent(this, 'datepicker-first-updated', { firstFocusableElement, value: this.value });\n    }\n    async updated(changed) {\n        const startView = this._startView;\n        if (changed.has('min') || changed.has('max')) {\n            this._yearList = toYearList(this._min, this._max);\n            if ('yearList' === startView)\n                this.requestUpdate();\n            const minTime = +this._min;\n            const maxTime = +this._max;\n            if (getDateRange(minTime, maxTime) > 864e5) {\n                const focusedDateTime = +this._focusedDate;\n                let newValue = focusedDateTime;\n                if (focusedDateTime < minTime)\n                    newValue = minTime;\n                if (focusedDateTime > maxTime)\n                    newValue = maxTime;\n                this.value = toFormattedDateString(new Date(newValue));\n            }\n        }\n        if (changed.has('_startView') || changed.has('startView')) {\n            if ('yearList' === startView) {\n                const selectedYearScrollTop = 48 * (this._selectedDate.getUTCFullYear() - this._min.getUTCFullYear() - 2);\n                targetScrollTo(this._yearViewFullList, { top: selectedYearScrollTop, left: 0 });\n            }\n            if ('calendar' === startView && null == this._tracker) {\n                const calendarsContainer = this.calendarsContainer;\n                let $down = false;\n                let $move = false;\n                let $transitioning = false;\n                if (calendarsContainer) {\n                    const handlers = {\n                        down: () => {\n                            if ($transitioning)\n                                return;\n                            $down = true;\n                            this._dx = 0;\n                        },\n                        move: (pointer, oldPointer) => {\n                            if ($transitioning || !$down)\n                                return;\n                            const dx = this._dx;\n                            const hasMin = (dx < 0 && hasClass(calendarsContainer, 'has-max-date')) ||\n                                (dx > 0 && hasClass(calendarsContainer, 'has-min-date'));\n                            if (!hasMin && Math.abs(dx) > 0 && $down) {\n                                $move = true;\n                                calendarsContainer.style.transform = `translateX(${makeNumberPrecise(dx)}px)`;\n                            }\n                            this._dx = hasMin ? 0 : dx + (pointer.x - oldPointer.x);\n                        },\n                        up: async (_$, _$$, ev) => {\n                            if ($down && $move) {\n                                const dx = this._dx;\n                                const maxWidth = calendarsContainer.getBoundingClientRect().width / 3;\n                                const didPassThreshold = Math.abs(dx) > (Number(this.dragRatio) * maxWidth);\n                                const transitionDuration = 350;\n                                const transitionEasing = 'cubic-bezier(0, 0, .4, 1)';\n                                const transformTo = didPassThreshold ? makeNumberPrecise(maxWidth * (dx < 0 ? -1 : 1)) : 0;\n                                $transitioning = true;\n                                await animateElement(calendarsContainer, {\n                                    hasNativeWebAnimation: this._hasNativeWebAnimation,\n                                    keyframes: [\n                                        { transform: `translateX(${dx}px)` },\n                                        {\n                                            transform: `translateX(${transformTo}px)`,\n                                        },\n                                    ],\n                                    options: {\n                                        duration: transitionDuration,\n                                        easing: transitionEasing,\n                                    },\n                                });\n                                if (didPassThreshold) {\n                                    this._updateMonth(dx < 0 ? 'next' : 'previous').handleEvent();\n                                }\n                                $down = $move = $transitioning = false;\n                                this._dx = -Infinity;\n                                calendarsContainer.removeAttribute('style');\n                                dispatchCustomEvent(this, 'datepicker-animation-finished');\n                            }\n                            else if ($down) {\n                                this._updateFocusedDate(ev);\n                                $down = $move = false;\n                                this._dx = -Infinity;\n                            }\n                        },\n                    };\n                    this._tracker = new Tracker(calendarsContainer, handlers);\n                }\n            }\n            if (changed.get('_startView') && 'calendar' === startView) {\n                this._focusElement('[part=\"year-selector\"]');\n            }\n        }\n        if (this._updatingDateWithKey) {\n            this._focusElement('[part=\"calendars\"]:nth-of-type(2) .day--focused');\n            this._updatingDateWithKey = false;\n        }\n    }\n    _focusElement(selector) {\n        const focusedTarget = this.shadowRoot.querySelector(selector);\n        if (focusedTarget)\n            focusedTarget.focus();\n    }\n    _renderHeaderSelectorButton() {\n        const { yearFormat, dateFormat } = this._formatters;\n        const isCalendarView = this.startView === 'calendar';\n        const focusedDate = this._focusedDate;\n        const formattedDate = dateFormat(focusedDate);\n        const formatterFy = yearFormat(focusedDate);\n        return html `\n    <button\n      class=\"${classMap({ 'btn__year-selector': true, selected: !isCalendarView })}\"\n      type=\"button\"\n      part=\"year-selector\"\n      data-view=\"${'yearList'}\"\n      @click=\"${this._updateView('yearList')}\">${formatterFy}</button>\n\n    <div class=\"datepicker-toolbar\" part=\"toolbar\">\n      <button\n        class=\"${classMap({ 'btn__calendar-selector': true, selected: isCalendarView })}\"\n        type=\"button\"\n        part=\"calendar-selector\"\n        data-view=\"${'calendar'}\"\n        @click=\"${this._updateView('calendar')}\">${formattedDate}</button>\n    </div>\n    `;\n    }\n    _renderDatepickerYearList() {\n        const { yearFormat } = this._formatters;\n        const focusedDateFy = this._focusedDate.getUTCFullYear();\n        return html `\n    <div class=\"datepicker-body__year-list-view\" part=\"year-list-view\">\n      <div class=\"year-list-view__full-list\" part=\"year-list\" @click=\"${this._updateYear}\">\n      ${this._yearList.map(n => html `<button\n        class=\"${classMap({\n            'year-list-view__list-item': true,\n            'year--selected': focusedDateFy === n,\n        })}\"\n        type=\"button\"\n        part=\"year\"\n        .year=\"${n}\">${yearFormat(toUTCDate(n, 0, 1))}</button>`)}</div>\n    </div>\n    `;\n    }\n    _renderDatepickerCalendar() {\n        const { longMonthYearFormat, dayFormat, fullDateFormat, longWeekdayFormat, narrowWeekdayFormat, } = this._formatters;\n        const disabledDays = splitString(this.disabledDays, Number);\n        const disabledDates = splitString(this.disabledDates, getResolvedDate);\n        const showWeekNumber = this.showWeekNumber;\n        const $focusedDate = this._focusedDate;\n        const firstDayOfWeek = this.firstDayOfWeek;\n        const todayDate = getResolvedDate();\n        const $selectedDate = this._selectedDate;\n        const $max = this._max;\n        const $min = this._min;\n        const { calendars, disabledDaysSet, disabledDatesSet, weekdays } = getMultiCalendars({\n            dayFormat,\n            fullDateFormat,\n            longWeekdayFormat,\n            narrowWeekdayFormat,\n            firstDayOfWeek,\n            disabledDays,\n            disabledDates,\n            locale: this.locale,\n            selectedDate: $selectedDate,\n            showWeekNumber: this.showWeekNumber,\n            weekNumberType: this.weekNumberType,\n            max: $max,\n            min: $min,\n            weekLabel: this.weekLabel,\n        });\n        const hasMinDate = !calendars[0].calendar.length;\n        const hasMaxDate = !calendars[2].calendar.length;\n        const weekdaysContent = weekdays.map(o => html `<th\n        class=\"calendar-weekday\"\n        part=\"calendar-weekday\"\n        role=\"columnheader\"\n        aria-label=\"${o.label}\"\n      >\n        <div class=\"weekday\" part=\"weekday\">${o.value}</div>\n      </th>`);\n        const calendarsContent = repeat(calendars, n => n.key, ({ calendar }, ci) => {\n            if (!calendar.length) {\n                return html `<div class=\"calendar-container\" part=\"calendar\"></div>`;\n            }\n            const calendarAriaId = `calendarcaption${ci}`;\n            const midCalendarFullDate = calendar[1][1].fullDate;\n            const isMidCalendar = ci === 1;\n            const $newFocusedDate = isMidCalendar && !this._isInVisibleMonth($focusedDate, $selectedDate) ?\n                computeNextFocusedDate({\n                    disabledDaysSet,\n                    disabledDatesSet,\n                    hasAltKey: false,\n                    keyCode: 36,\n                    focusedDate: $focusedDate,\n                    selectedDate: $selectedDate,\n                    minTime: +$min,\n                    maxTime: +$max,\n                }) :\n                $focusedDate;\n            return html `\n      <div class=\"calendar-container\" part=\"calendar\">\n        <table class=\"calendar-table\" part=\"table\" role=\"grid\" aria-labelledby=\"${calendarAriaId}\">\n          <caption id=\"${calendarAriaId}\">\n            <div class=\"calendar-label\" part=\"label\">${midCalendarFullDate ? longMonthYearFormat(midCalendarFullDate) : ''}</div>\n          </caption>\n\n          <thead role=\"rowgroup\">\n            <tr class=\"calendar-weekdays\" part=\"weekdays\" role=\"row\">${weekdaysContent}</tr>\n          </thead>\n\n          <tbody role=\"rowgroup\">${calendar.map((calendarRow) => {\n                return html `<tr role=\"row\">${calendarRow.map((calendarCol, i) => {\n                    const { disabled, fullDate, label, value } = calendarCol;\n                    if (!fullDate && value && showWeekNumber && i < 1) {\n                        return html `<th\n                      class=\"full-calendar__day weekday-label\"\n                      part=\"calendar-day\"\n                      scope=\"row\"\n                      role=\"rowheader\"\n                      abbr=\"${label}\"\n                      aria-label=\"${label}\"\n                    >${value}</th>`;\n                    }\n                    if (!value || !fullDate) {\n                        return html `<td class=\"full-calendar__day day--empty\" part=\"calendar-day\"></td>`;\n                    }\n                    const curTime = +new Date(fullDate);\n                    const isCurrentDate = +$focusedDate === curTime;\n                    const shouldTab = isMidCalendar && $newFocusedDate.getUTCDate() === Number(value);\n                    return html `\n                  <td\n                    tabindex=\"${shouldTab ? '0' : '-1'}\"\n                    class=\"${classMap({\n                        'full-calendar__day': true,\n                        'day--disabled': disabled,\n                        'day--today': +todayDate === curTime,\n                        'day--focused': !disabled && isCurrentDate,\n                    })}\"\n                    part=\"calendar-day${+todayDate === curTime ? ' calendar-today' : ''}\"\n                    role=\"gridcell\"\n                    aria-disabled=\"${disabled ? 'true' : 'false'}\"\n                    aria-label=\"${label}\"\n                    aria-selected=\"${isCurrentDate ? 'true' : 'false'}\"\n                    .fullDate=\"${fullDate}\"\n                    .day=\"${value}\"\n                  >\n                    <div\n                      class=\"calendar-day\"\n                      part=\"day${+todayDate === curTime ? ' today' : ''}\"\n                    >${value}</div>\n                  </td>\n                  `;\n                })}</tr>`;\n            })}</tbody>\n        </table>\n      </div>\n      `;\n        });\n        this._disabledDatesSet = disabledDatesSet;\n        this._disabledDaysSet = disabledDaysSet;\n        return html `\n    <div class=\"datepicker-body__calendar-view\" part=\"calendar-view\">\n      <div class=\"calendar-view__month-selector\" part=\"month-selectors\">\n        <div class=\"month-selector-container\">${hasMinDate ? null : html `\n          <button\n            class=\"btn__month-selector\"\n            type=\"button\"\n            part=\"month-selector\"\n            aria-label=\"Previous month\"\n            @click=\"${this._updateMonth('previous')}\"\n          >${iconChevronLeft}</button>\n        `}</div>\n\n        <div class=\"month-selector-container\">${hasMaxDate ? null : html `\n          <button\n            class=\"btn__month-selector\"\n            type=\"button\"\n            part=\"month-selector\"\n            aria-label=\"Next month\"\n            @click=\"${this._updateMonth('next')}\"\n          >${iconChevronRight}</button>\n        `}</div>\n      </div>\n\n      <div\n        class=\"${classMap({\n            'calendars-container': true,\n            'has-min-date': hasMinDate,\n            'has-max-date': hasMaxDate,\n        })}\"\n        part=\"calendars\"\n        @keyup=\"${this._updateFocusedDateWithKeyboard}\"\n      >${calendarsContent}</div>\n    </div>\n    `;\n    }\n    _updateView(view) {\n        const handleUpdateView = () => {\n            if ('calendar' === view) {\n                this._selectedDate = this._lastSelectedDate =\n                    new Date(updateYearWithMinMax(this._focusedDate, this._min, this._max));\n            }\n            this._startView = view;\n        };\n        return passiveHandler(handleUpdateView);\n    }\n    _updateMonth(updateType) {\n        const handleUpdateMonth = () => {\n            const calendarsContainer = this.calendarsContainer;\n            if (null == calendarsContainer)\n                return this.updateComplete;\n            const dateDate = this._lastSelectedDate || this._selectedDate;\n            const minDate = this._min;\n            const maxDate = this._max;\n            const isPreviousMonth = updateType === 'previous';\n            const newSelectedDate = toUTCDate(dateDate.getUTCFullYear(), dateDate.getUTCMonth() + (isPreviousMonth ? -1 : 1), 1);\n            const newSelectedDateFy = newSelectedDate.getUTCFullYear();\n            const newSelectedDateM = newSelectedDate.getUTCMonth();\n            const minDateFy = minDate.getUTCFullYear();\n            const minDateM = minDate.getUTCMonth();\n            const maxDateFy = maxDate.getUTCFullYear();\n            const maxDateM = maxDate.getUTCMonth();\n            const isLessThanYearAndMonth = newSelectedDateFy < minDateFy ||\n                (newSelectedDateFy <= minDateFy && newSelectedDateM < minDateM);\n            const isMoreThanYearAndMonth = newSelectedDateFy > maxDateFy ||\n                (newSelectedDateFy >= maxDateFy && newSelectedDateM > maxDateM);\n            if (isLessThanYearAndMonth || isMoreThanYearAndMonth)\n                return this.updateComplete;\n            this._lastSelectedDate = newSelectedDate;\n            this._selectedDate = this._lastSelectedDate;\n            return this.updateComplete;\n        };\n        return passiveHandler(handleUpdateMonth);\n    }\n    _updateYear(ev) {\n        const selectedYearEl = findShadowTarget(ev, (n) => hasClass(n, 'year-list-view__list-item'));\n        if (selectedYearEl == null)\n            return;\n        const newFocusedDate = updateYearWithMinMax(new Date(this._focusedDate).setUTCFullYear(+selectedYearEl.year), this._min, this._max);\n        this._selectedDate = this._lastSelectedDate = new Date(newFocusedDate);\n        this._focusedDate = new Date(newFocusedDate);\n        this._startView = 'calendar';\n    }\n    _updateFocusedDate(ev) {\n        const selectedDayEl = findShadowTarget(ev, (n) => hasClass(n, 'full-calendar__day'));\n        if (selectedDayEl == null ||\n            [\n                'day--empty',\n                'day--disabled',\n                'day--focused',\n                'weekday-label',\n            ].some(n => hasClass(selectedDayEl, n)))\n            return;\n        this._focusedDate = new Date(selectedDayEl.fullDate);\n        dispatchCustomEvent(this, 'datepicker-value-updated', {\n            isKeypress: false,\n            value: this.value,\n        });\n    }\n    _updateFocusedDateWithKeyboard(ev) {\n        const keyCode = ev.keyCode;\n        if (13 === keyCode || 32 === keyCode) {\n            dispatchCustomEvent(this, 'datepicker-value-updated', {\n                keyCode,\n                isKeypress: true,\n                value: this.value,\n            });\n            this._focusedDate = new Date(this._selectedDate);\n            return;\n        }\n        if (keyCode === 9 || !ALL_NAV_KEYS_SET.has(keyCode))\n            return;\n        const selectedDate = this._selectedDate;\n        const nextFocusedDate = computeNextFocusedDate({\n            keyCode,\n            selectedDate,\n            disabledDatesSet: this._disabledDatesSet,\n            disabledDaysSet: this._disabledDaysSet,\n            focusedDate: this._focusedDate,\n            hasAltKey: ev.altKey,\n            maxTime: +this._max,\n            minTime: +this._min,\n        });\n        if (!this._isInVisibleMonth(nextFocusedDate, selectedDate)) {\n            this._selectedDate = this._lastSelectedDate = nextFocusedDate;\n        }\n        this._focusedDate = nextFocusedDate;\n        this._updatingDateWithKey = true;\n        dispatchCustomEvent(this, 'datepicker-value-updated', {\n            keyCode,\n            isKeypress: true,\n            value: this.value,\n        });\n    }\n    _isInVisibleMonth(dateA, dateB) {\n        const dateAFy = dateA.getUTCFullYear();\n        const dateAM = dateA.getUTCMonth();\n        const dateBFY = dateB.getUTCFullYear();\n        const dateBM = dateB.getUTCMonth();\n        return dateAFy === dateBFY && dateAM === dateBM;\n    }\n    get calendarsContainer() {\n        return this.shadowRoot.querySelector('.calendars-container');\n    }\n}\nDatepicker.styles = [\n    datepickerVariables,\n    resetButton,\n    css `\n    :host {\n      width: 312px;\n      /** NOTE: Magic number as 16:9 aspect ratio does not look good */\n      /* height: calc((var(--app-datepicker-width) / .66) - var(--app-datepicker-footer-height, 56px)); */\n      background-color: var(--app-datepicker-bg-color, #fff);\n      color: var(--app-datepicker-color, #000);\n      border-radius:\n        var(--app-datepicker-border-top-left-radius, 0)\n        var(--app-datepicker-border-top-right-radius, 0)\n        var(--app-datepicker-border-bottom-right-radius, 0)\n        var(--app-datepicker-border-bottom-left-radius, 0);\n      contain: content;\n      overflow: hidden;\n    }\n    :host([landscape]) {\n      display: flex;\n\n      /** <iphone-5-landscape-width> - <standard-side-margin-width> */\n      min-width: calc(568px - 16px * 2);\n      width: calc(568px - 16px * 2);\n    }\n\n    .datepicker-header + .datepicker-body {\n      border-top: 1px solid var(--app-datepicker-separator-color, #ddd);\n    }\n    :host([landscape]) > .datepicker-header + .datepicker-body {\n      border-top: none;\n      border-left: 1px solid var(--app-datepicker-separator-color, #ddd);\n    }\n\n    .datepicker-header {\n      display: flex;\n      flex-direction: column;\n      align-items: flex-start;\n\n      position: relative;\n      padding: 16px 24px;\n    }\n    :host([landscape]) > .datepicker-header {\n      /** :this.<one-liner-month-day-width> + :this.<side-padding-width> */\n      min-width: calc(14ch + 24px * 2);\n    }\n\n    .btn__year-selector,\n    .btn__calendar-selector {\n      color: var(--app-datepicker-selector-color, rgba(0, 0, 0, .55));\n      cursor: pointer;\n      /* outline: none; */\n    }\n    .btn__year-selector.selected,\n    .btn__calendar-selector.selected {\n      color: currentColor;\n    }\n\n    /**\n      * NOTE: IE11-only fix. This prevents formatted focused date from overflowing the container.\n      */\n    .datepicker-toolbar {\n      width: 100%;\n    }\n\n    .btn__year-selector {\n      font-size: 16px;\n      font-weight: 700;\n    }\n    .btn__calendar-selector {\n      font-size: 36px;\n      font-weight: 700;\n      line-height: 1;\n    }\n\n    .datepicker-body {\n      position: relative;\n      width: 100%;\n      overflow: hidden;\n    }\n\n    .datepicker-body__calendar-view {\n      min-height: 56px;\n    }\n\n    .calendar-view__month-selector {\n      display: flex;\n      align-items: center;\n\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      padding: 0 8px;\n      z-index: 1;\n    }\n\n    .month-selector-container {\n      max-height: 56px;\n      height: 100%;\n    }\n    .month-selector-container + .month-selector-container {\n      margin: 0 0 0 auto;\n    }\n\n    .btn__month-selector {\n      padding: calc((56px - 24px) / 2);\n      /**\n        * NOTE: button element contains no text, only SVG.\n        * No extra height will incur with such setting.\n        */\n      line-height: 0;\n    }\n    .btn__month-selector > svg {\n      fill: currentColor;\n    }\n\n    .calendars-container {\n      display: flex;\n      justify-content: center;\n\n      position: relative;\n      top: 0;\n      left: calc(-100%);\n      width: calc(100% * 3);\n      transform: translateZ(0);\n      will-change: transform;\n      /**\n        * NOTE: Required for Pointer Events API to work on touch devices.\n        * Native \\`pan-y\\` action will be fired by the browsers since we only care about the\n        * horizontal direction. This is great as vertical scrolling still works even when touch\n        * event happens on a datepicker's calendar.\n        */\n      touch-action: pan-y;\n      /* outline: none; */\n    }\n\n    .year-list-view__full-list {\n      max-height: calc(48px * 7);\n      overflow-y: auto;\n\n      scrollbar-color: var(--app-datepicker-scrollbar-thumb-bg-color, rgba(0, 0, 0, .35)) rgba(0, 0, 0, 0);\n      scrollbar-width: thin;\n    }\n    .year-list-view__full-list::-webkit-scrollbar {\n      width: 8px;\n      background-color: rgba(0, 0, 0, 0);\n    }\n    .year-list-view__full-list::-webkit-scrollbar-thumb {\n      background-color: var(--app-datepicker-scrollbar-thumb-bg-color, rgba(0, 0, 0, .35));\n      border-radius: 50px;\n    }\n    .year-list-view__full-list::-webkit-scrollbar-thumb:hover {\n      background-color: var(--app-datepicker-scrollbar-thumb-hover-bg-color, rgba(0, 0, 0, .5));\n    }\n\n    .calendar-weekdays > th,\n    .weekday-label {\n      color: var(--app-datepicker-weekday-color, rgba(0, 0, 0, .55));\n      font-weight: 400;\n      transform: translateZ(0);\n      will-change: transform;\n    }\n\n    .calendar-container,\n    .calendar-label,\n    .calendar-table {\n      width: 100%;\n    }\n\n    .calendar-container {\n      position: relative;\n      padding: 0 16px 16px;\n    }\n\n    .calendar-table {\n      -moz-user-select: none;\n      -webkit-user-select: none;\n      user-select: none;\n\n      border-collapse: collapse;\n      border-spacing: 0;\n      text-align: center;\n    }\n\n    .calendar-label {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n\n      height: 56px;\n      font-weight: 500;\n      text-align: center;\n    }\n\n    .calendar-weekday,\n    .full-calendar__day {\n      position: relative;\n      width: calc(100% / 7);\n      height: 0;\n      padding: calc(100% / 7 / 2) 0;\n      outline: none;\n      text-align: center;\n    }\n    .full-calendar__day:not(.day--disabled):focus {\n      outline: #000 dotted 1px;\n      outline: -webkit-focus-ring-color auto 1px;\n    }\n    :host([showweeknumber]) .calendar-weekday,\n    :host([showweeknumber]) .full-calendar__day {\n      width: calc(100% / 8);\n      padding-top: calc(100% / 8);\n      padding-bottom: 0;\n    }\n    :host([showweeknumber]) th.weekday-label {\n      padding: 0;\n    }\n\n    /**\n      * NOTE: Interesting fact! That is ::after will trigger paint when dragging. This will trigger\n      * layout and paint on **ONLY** affected nodes. This is much cheaper as compared to rendering\n      * all :::after of all calendar day elements. When dragging the entire calendar container,\n      * because of all layout and paint trigger on each and every ::after, this becomes a expensive\n      * task for the browsers especially on low-end devices. Even though animating opacity is much\n      * cheaper, the technique does not work here. Adding 'will-change' will further reduce overall\n      * painting at the expense of memory consumption as many cells in a table has been promoted\n      * a its own layer.\n      */\n    .full-calendar__day:not(.day--empty):not(.day--disabled):not(.weekday-label) {\n      transform: translateZ(0);\n      will-change: transform;\n    }\n    .full-calendar__day:not(.day--empty):not(.day--disabled):not(.weekday-label).day--focused::after,\n    .full-calendar__day:not(.day--empty):not(.day--disabled):not(.day--focused):not(.weekday-label):hover::after {\n      content: '';\n      display: block;\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background-color: var(--app-datepicker-accent-color, #1a73e8);\n      border-radius: 50%;\n      opacity: 0;\n      pointer-events: none;\n    }\n    .full-calendar__day:not(.day--empty):not(.day--disabled):not(.weekday-label) {\n      cursor: pointer;\n      pointer-events: auto;\n      -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n    }\n    .full-calendar__day.day--focused:not(.day--empty):not(.day--disabled):not(.weekday-label)::after,\n    .full-calendar__day.day--today.day--focused:not(.day--empty):not(.day--disabled):not(.weekday-label)::after {\n      opacity: 1;\n    }\n\n    .calendar-weekday > .weekday,\n    .full-calendar__day > .calendar-day {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n\n      position: absolute;\n      top: 5%;\n      left: 5%;\n      width: 90%;\n      height: 90%;\n      color: currentColor;\n      font-size: 14px;\n      pointer-events: none;\n      z-index: 1;\n    }\n    .full-calendar__day.day--today {\n      color: var(--app-datepicker-accent-color, #1a73e8);\n    }\n    .full-calendar__day.day--focused,\n    .full-calendar__day.day--today.day--focused {\n      color: var(--app-datepicker-focused-day-color, #fff);\n    }\n    .full-calendar__day.day--empty,\n    .full-calendar__day.weekday-label,\n    .full-calendar__day.day--disabled > .calendar-day {\n      pointer-events: none;\n    }\n    .full-calendar__day.day--disabled:not(.day--today) {\n      color: var(--app-datepicker-disabled-day-color, rgba(0, 0, 0, .55));\n    }\n\n    .year-list-view__list-item {\n      position: relative;\n      width: 100%;\n      padding: 12px 16px;\n      text-align: center;\n      /** NOTE: Reduce paint when hovering and scrolling, but this increases memory usage */\n      /* will-change: opacity; */\n      /* outline: none; */\n    }\n    .year-list-view__list-item::after {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background-color: var(--app-datepicker-focused-year-bg-color, #000);\n      opacity: 0;\n      pointer-events: none;\n    }\n    .year-list-view__list-item:focus::after {\n      opacity: .05;\n    }\n    .year-list-view__list-item.year--selected {\n      color: var(--app-datepicker-accent-color, #1a73e8);\n      font-size: 24px;\n      font-weight: 500;\n    }\n\n    @media (any-hover: hover) {\n      .btn__month-selector:hover,\n      .year-list-view__list-item:hover {\n        cursor: pointer;\n      }\n      .full-calendar__day:not(.day--empty):not(.day--disabled):not(.day--focused):not(.weekday-label):hover::after {\n        opacity: .15;\n      }\n      .year-list-view__list-item:hover::after {\n        opacity: .05;\n      }\n    }\n\n    @supports (background: -webkit-canvas(squares)) {\n      .calendar-container {\n        padding: 56px 16px 16px;\n      }\n\n      table > caption {\n        position: absolute;\n        top: 0;\n        left: 50%;\n        transform: translate3d(-50%, 0, 0);\n        will-change: transform;\n      }\n    }\n    `,\n];\n__decorate([\n    property({ type: Number, reflect: true })\n], Datepicker.prototype, \"firstDayOfWeek\", void 0);\n__decorate([\n    property({ type: Boolean, reflect: true })\n], Datepicker.prototype, \"showWeekNumber\", void 0);\n__decorate([\n    property({ type: String, reflect: true })\n], Datepicker.prototype, \"weekNumberType\", void 0);\n__decorate([\n    property({ type: Boolean, reflect: true })\n], Datepicker.prototype, \"landscape\", void 0);\n__decorate([\n    property({ type: String, reflect: true })\n], Datepicker.prototype, \"startView\", null);\n__decorate([\n    property({ type: String, reflect: true })\n], Datepicker.prototype, \"min\", null);\n__decorate([\n    property({ type: String, reflect: true })\n], Datepicker.prototype, \"max\", null);\n__decorate([\n    property({ type: String })\n], Datepicker.prototype, \"value\", null);\n__decorate([\n    property({ type: String })\n], Datepicker.prototype, \"locale\", void 0);\n__decorate([\n    property({ type: String })\n], Datepicker.prototype, \"disabledDays\", void 0);\n__decorate([\n    property({ type: String })\n], Datepicker.prototype, \"disabledDates\", void 0);\n__decorate([\n    property({ type: String })\n], Datepicker.prototype, \"weekLabel\", void 0);\n__decorate([\n    property({ type: Boolean })\n], Datepicker.prototype, \"inline\", void 0);\n__decorate([\n    property({ type: Number })\n], Datepicker.prototype, \"dragRatio\", void 0);\n__decorate([\n    property({ type: Date, attribute: false })\n], Datepicker.prototype, \"_selectedDate\", void 0);\n__decorate([\n    property({ type: Date, attribute: false })\n], Datepicker.prototype, \"_focusedDate\", void 0);\n__decorate([\n    property({ type: String, attribute: false })\n], Datepicker.prototype, \"_startView\", void 0);\n__decorate([\n    query('.year-list-view__full-list')\n], Datepicker.prototype, \"_yearViewFullList\", void 0);\n__decorate([\n    query('.btn__year-selector')\n], Datepicker.prototype, \"_buttonSelectorYear\", void 0);\n__decorate([\n    query('.year-list-view__list-item')\n], Datepicker.prototype, \"_yearViewListItem\", void 0);\n__decorate([\n    eventOptions({ passive: true })\n], Datepicker.prototype, \"_updateYear\", null);\n__decorate([\n    eventOptions({ passive: true })\n], Datepicker.prototype, \"_updateFocusedDateWithKeyboard\", null);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}