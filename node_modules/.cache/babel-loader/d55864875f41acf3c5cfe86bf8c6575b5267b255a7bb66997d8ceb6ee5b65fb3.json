{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport \"@material/mwc-button/mwc-button\";\nconst mdiDelete = \"M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z\";\nimport { css, html, LitElement } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { relativeTime } from \"../../common/datetime/relative_time\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport \"../../components/ha-card\";\nimport \"../../components/ha-settings-row\";\nimport \"../../components/ha-icon-button\";\nimport { showAlertDialog, showConfirmationDialog, showPromptDialog } from \"../../dialogs/generic/show-dialog-box\";\nimport { haStyle } from \"../../resources/styles\";\nimport { showLongLivedAccessTokenDialog } from \"./show-long-lived-access-token-dialog\";\nlet HaLongLivedTokens = _decorate([customElement(\"ha-long-lived-access-tokens-card\")], function (_initialize, _LitElement) {\n  class HaLongLivedTokens extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaLongLivedTokens,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"refreshTokens\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_accessTokens\",\n      value() {\n        return memoizeOne(refreshTokens => refreshTokens === null || refreshTokens === void 0 ? void 0 : refreshTokens.filter(token => token.type === \"long_lived_access_token\").reverse());\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        const accessTokens = this._accessTokens(this.refreshTokens);\n        return html`\n      <ha-card\n        .header=${this.hass.localize(\"ui.panel.profile.long_lived_access_tokens.header\")}\n      >\n        <div class=\"card-content\">\n          ${this.hass.localize(\"ui.panel.profile.long_lived_access_tokens.description\")}\n\n          <a\n            href=\"https://developers.home-assistant.io/docs/auth_api/#making-authenticated-requests\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            ${this.hass.localize(\"ui.panel.profile.long_lived_access_tokens.learn_auth_requests\")}\n          </a>\n          ${!(accessTokens !== null && accessTokens !== void 0 && accessTokens.length) ? html`<p>\n                ${this.hass.localize(\"ui.panel.profile.long_lived_access_tokens.empty_state\")}\n              </p>` : accessTokens.map(token => html`<ha-settings-row two-line>\n                    <span slot=\"heading\">${token.client_name}</span>\n                    <div slot=\"description\">\n                      ${this.hass.localize(\"ui.panel.profile.long_lived_access_tokens.created\", {\n          date: relativeTime(new Date(token.created_at), this.hass.locale)\n        })}\n                    </div>\n                    <ha-icon-button\n                      .token=${token}\n                      .disabled=${token.is_current}\n                      .label=${this.hass.localize(\"ui.common.delete\")}\n                      .path=${mdiDelete}\n                      @click=${this._deleteToken}\n                    ></ha-icon-button>\n                  </ha-settings-row>`)}\n        </div>\n\n        <div class=\"card-actions\">\n          <mwc-button @click=${this._createToken}>\n            ${this.hass.localize(\"ui.panel.profile.long_lived_access_tokens.create\")}\n          </mwc-button>\n        </div>\n      </ha-card>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_createToken\",\n      value: async function _createToken() {\n        const name = await showPromptDialog(this, {\n          text: this.hass.localize(\"ui.panel.profile.long_lived_access_tokens.prompt_name\"),\n          inputLabel: this.hass.localize(\"ui.panel.profile.long_lived_access_tokens.name\")\n        });\n        if (!name) {\n          return;\n        }\n        try {\n          const token = await this.hass.callWS({\n            type: \"auth/long_lived_access_token\",\n            lifespan: 3650,\n            client_name: name\n          });\n          showLongLivedAccessTokenDialog(this, {\n            token,\n            name\n          });\n          fireEvent(this, \"hass-refresh-tokens\");\n        } catch (err) {\n          showAlertDialog(this, {\n            title: this.hass.localize(\"ui.panel.profile.long_lived_access_tokens.create_failed\"),\n            text: err.message\n          });\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_deleteToken\",\n      value: async function _deleteToken(ev) {\n        const token = ev.currentTarget.token;\n        if (!(await showConfirmationDialog(this, {\n          text: this.hass.localize(\"ui.panel.profile.long_lived_access_tokens.confirm_delete\", {\n            name: token.client_name\n          })\n        }))) {\n          return;\n        }\n        try {\n          await this.hass.callWS({\n            type: \"auth/delete_refresh_token\",\n            refresh_token_id: token.id\n          });\n          fireEvent(this, \"hass-refresh-tokens\");\n        } catch (err) {\n          await showAlertDialog(this, {\n            title: this.hass.localize(\"ui.panel.profile.long_lived_access_tokens.delete_failed\"),\n            text: err.message\n          });\n        }\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [haStyle, css`\n        ha-settings-row {\n          padding: 0;\n        }\n        a {\n          color: var(--primary-color);\n        }\n        mwc-button {\n          --mdc-theme-primary: var(--primary-color);\n        }\n        ha-icon-button {\n          color: var(--primary-text-color);\n        }\n      `];\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["mdiDelete","css","html","LitElement","customElement","property","memoizeOne","relativeTime","fireEvent","showAlertDialog","showConfirmationDialog","showPromptDialog","haStyle","showLongLivedAccessTokenDialog","HaLongLivedTokens","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","refreshTokens","filter","token","type","reverse","render","accessTokens","_accessTokens","hass","localize","length","map","client_name","date","Date","created_at","locale","is_current","_deleteToken","_createToken","name","text","inputLabel","callWS","lifespan","err","title","message","ev","currentTarget","refresh_token_id","id","static","styles"],"sources":["/workspaces/frontend/src/panels/profile/ha-long-lived-access-tokens-card.ts"],"sourcesContent":["import \"@material/mwc-button/mwc-button\";\nimport { mdiDelete } from \"@mdi/js\";\nimport { css, CSSResultGroup, html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { relativeTime } from \"../../common/datetime/relative_time\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport \"../../components/ha-card\";\nimport \"../../components/ha-settings-row\";\nimport \"../../components/ha-icon-button\";\nimport { RefreshToken } from \"../../data/refresh_token\";\nimport {\n  showAlertDialog,\n  showConfirmationDialog,\n  showPromptDialog,\n} from \"../../dialogs/generic/show-dialog-box\";\nimport { haStyle } from \"../../resources/styles\";\nimport { HomeAssistant } from \"../../types\";\nimport { showLongLivedAccessTokenDialog } from \"./show-long-lived-access-token-dialog\";\n\n@customElement(\"ha-long-lived-access-tokens-card\")\nclass HaLongLivedTokens extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public refreshTokens?: RefreshToken[];\n\n  private _accessTokens = memoizeOne(\n    (refreshTokens: RefreshToken[]): RefreshToken[] =>\n      refreshTokens\n        ?.filter((token) => token.type === \"long_lived_access_token\")\n        .reverse()\n  );\n\n  protected render(): TemplateResult {\n    const accessTokens = this._accessTokens(this.refreshTokens!);\n\n    return html`\n      <ha-card\n        .header=${this.hass.localize(\n          \"ui.panel.profile.long_lived_access_tokens.header\"\n        )}\n      >\n        <div class=\"card-content\">\n          ${this.hass.localize(\n            \"ui.panel.profile.long_lived_access_tokens.description\"\n          )}\n\n          <a\n            href=\"https://developers.home-assistant.io/docs/auth_api/#making-authenticated-requests\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            ${this.hass.localize(\n              \"ui.panel.profile.long_lived_access_tokens.learn_auth_requests\"\n            )}\n          </a>\n          ${!accessTokens?.length\n            ? html`<p>\n                ${this.hass.localize(\n                  \"ui.panel.profile.long_lived_access_tokens.empty_state\"\n                )}\n              </p>`\n            : accessTokens!.map(\n                (token) =>\n                  html`<ha-settings-row two-line>\n                    <span slot=\"heading\">${token.client_name}</span>\n                    <div slot=\"description\">\n                      ${this.hass.localize(\n                        \"ui.panel.profile.long_lived_access_tokens.created\",\n                        {\n                          date: relativeTime(\n                            new Date(token.created_at),\n                            this.hass.locale\n                          ),\n                        }\n                      )}\n                    </div>\n                    <ha-icon-button\n                      .token=${token}\n                      .disabled=${token.is_current}\n                      .label=${this.hass.localize(\"ui.common.delete\")}\n                      .path=${mdiDelete}\n                      @click=${this._deleteToken}\n                    ></ha-icon-button>\n                  </ha-settings-row>`\n              )}\n        </div>\n\n        <div class=\"card-actions\">\n          <mwc-button @click=${this._createToken}>\n            ${this.hass.localize(\n              \"ui.panel.profile.long_lived_access_tokens.create\"\n            )}\n          </mwc-button>\n        </div>\n      </ha-card>\n    `;\n  }\n\n  private async _createToken(): Promise<void> {\n    const name = await showPromptDialog(this, {\n      text: this.hass.localize(\n        \"ui.panel.profile.long_lived_access_tokens.prompt_name\"\n      ),\n      inputLabel: this.hass.localize(\n        \"ui.panel.profile.long_lived_access_tokens.name\"\n      ),\n    });\n\n    if (!name) {\n      return;\n    }\n\n    try {\n      const token = await this.hass.callWS<string>({\n        type: \"auth/long_lived_access_token\",\n        lifespan: 3650,\n        client_name: name,\n      });\n\n      showLongLivedAccessTokenDialog(this, { token, name });\n\n      fireEvent(this, \"hass-refresh-tokens\");\n    } catch (err: any) {\n      showAlertDialog(this, {\n        title: this.hass.localize(\n          \"ui.panel.profile.long_lived_access_tokens.create_failed\"\n        ),\n        text: err.message,\n      });\n    }\n  }\n\n  private async _deleteToken(ev: Event): Promise<void> {\n    const token = (ev.currentTarget as any).token;\n    if (\n      !(await showConfirmationDialog(this, {\n        text: this.hass.localize(\n          \"ui.panel.profile.long_lived_access_tokens.confirm_delete\",\n          { name: token.client_name }\n        ),\n      }))\n    ) {\n      return;\n    }\n    try {\n      await this.hass.callWS({\n        type: \"auth/delete_refresh_token\",\n        refresh_token_id: token.id,\n      });\n      fireEvent(this, \"hass-refresh-tokens\");\n    } catch (err: any) {\n      await showAlertDialog(this, {\n        title: this.hass.localize(\n          \"ui.panel.profile.long_lived_access_tokens.delete_failed\"\n        ),\n        text: err.message,\n      });\n    }\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyle,\n      css`\n        ha-settings-row {\n          padding: 0;\n        }\n        a {\n          color: var(--primary-color);\n        }\n        mwc-button {\n          --mdc-theme-primary: var(--primary-color);\n        }\n        ha-icon-button {\n          color: var(--primary-text-color);\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-long-lived-access-tokens-card\": HaLongLivedTokens;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}