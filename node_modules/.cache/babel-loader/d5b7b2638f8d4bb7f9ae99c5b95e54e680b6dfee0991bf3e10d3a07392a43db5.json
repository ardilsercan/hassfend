{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport \"@material/mwc-button/mwc-button\";\nimport formatISO9075 from \"date-fns/formatISO9075\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { formatDateTime } from \"../../../common/datetime/format_date_time\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport \"../../../components/ha-circular-progress\";\nimport \"../../../components/ha-dialog\";\nimport \"../../../components/ha-form/ha-form\";\nimport \"../../../components/ha-selector/ha-selector-datetime\";\nimport \"../../../components/ha-selector/ha-selector-number\";\nimport \"../../../components/ha-svg-icon\";\nimport \"../../../components/ha-icon-next\";\nimport \"../../../components/ha-list-item\";\nimport { adjustStatisticsSum, fetchStatistics, getDisplayUnit } from \"../../../data/recorder\";\nimport { showAlertDialog } from \"../../../dialogs/generic/show-dialog-box\";\nimport { haStyle, haStyleDialog } from \"../../../resources/styles\";\nimport { showToast } from \"../../../util/toast\";\nexport let DialogStatisticsFixUnsupportedUnitMetadata = _decorate([customElement(\"dialog-statistics-adjust-sum\")], function (_initialize, _LitElement) {\n  class DialogStatisticsFixUnsupportedUnitMetadata extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: DialogStatisticsFixUnsupportedUnitMetadata,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_params\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_busy\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_moment\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_stats5min\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_statsHour\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_chosenStat\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_origAmount\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_amount\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_dateTimeSelector\",\n      value() {\n        return {\n          datetime: {}\n        };\n      }\n    }, {\n      kind: \"field\",\n      key: \"_amountSelector\",\n      value() {\n        return memoizeOne(unit_of_measurement => ({\n          number: {\n            step: 0.01,\n            unit_of_measurement,\n            mode: \"box\"\n          }\n        }));\n      }\n    }, {\n      kind: \"method\",\n      key: \"showDialog\",\n      value: function showDialog(params) {\n        this._params = params;\n        // moment is in format YYYY-MM-DD HH:mm:ss because of selector\n        // Here we create a date with minutes set to %5\n        const now = new Date();\n        now.setMinutes(now.getMinutes() - now.getMinutes() % 5, 0);\n        this._moment = formatISO9075(now);\n        this._fetchStats();\n      }\n    }, {\n      kind: \"method\",\n      key: \"closeDialog\",\n      value: function closeDialog() {\n        this._params = undefined;\n        this._moment = undefined;\n        this._stats5min = undefined;\n        this._statsHour = undefined;\n        this._origAmount = undefined;\n        this._amount = undefined;\n        this._chosenStat = undefined;\n        this._busy = false;\n        fireEvent(this, \"dialog-closed\", {\n          dialog: this.localName\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this._params) {\n          return nothing;\n        }\n        let content;\n        if (!this._chosenStat) {\n          content = this._renderPickStatistic();\n        } else {\n          content = this._renderAdjustStat();\n        }\n        return html`\n      <ha-dialog\n        open\n        scrimClickAction\n        escapeKeyAction\n        @closed=${this.closeDialog}\n        .heading=${this.hass.localize(\"ui.panel.developer-tools.tabs.statistics.fix_issue.adjust_sum.title\")}\n      >\n        ${content}\n      </ha-dialog>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"shouldUpdate\",\n      value: function shouldUpdate(changedProps) {\n        if (changedProps.size !== 1 || !changedProps.has(\"hass\")) {\n          return true;\n        }\n        // We only respond to hass changes if the translations changed\n        const oldHass = changedProps.get(\"hass\");\n        return !oldHass || oldHass.localize !== this.hass.localize;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_renderPickStatistic\",\n      value: function _renderPickStatistic() {\n        let stats;\n        if (!this._stats5min || !this._statsHour) {\n          stats = html`<ha-circular-progress indeterminate></ha-circular-progress>`;\n        } else if (this._statsHour.length < 1 && this._stats5min.length < 1) {\n          stats = html`<p>\n        ${this.hass.localize(\"ui.panel.developer-tools.tabs.statistics.fix_issue.adjust_sum.no_statistics_found\")}\n      </p>`;\n        } else {\n          const data = this._stats5min.length >= 1 ? this._stats5min : this._statsHour;\n          const unit = getDisplayUnit(this.hass, this._params.statistic.statistic_id, this._params.statistic);\n          const rows = [];\n          for (let i = 0; i < data.length; i++) {\n            const stat = data[i];\n            const growth = Math.round(stat.change * 100) / 100;\n            rows.push(html`\n          <ha-list-item\n            twoline\n            hasMeta\n            .stat=${stat}\n            @click=${this._setChosenStatistic}\n          >\n            <span>${growth} ${unit}</span>\n            <span slot=\"secondary\">\n              ${formatDateTime(new Date(stat.start), this.hass.locale, this.hass.config)}\n            </span>\n            <ha-icon-next slot=\"meta\"></ha-icon-next>\n          </ha-list-item>\n        `);\n          }\n          stats = html`${rows}`;\n        }\n        return html`\n      <div class=\"text-content\">\n        ${this.hass.localize(\"ui.panel.developer-tools.tabs.statistics.fix_issue.adjust_sum.info_text_1\")}\n      </div>\n      <div class=\"text-content\">\n        <b\n          >${this.hass.localize(\"ui.panel.developer-tools.tabs.statistics.fix_issue.adjust_sum.statistic\")}</b\n        >\n        ${this._params.statistic.statistic_id}\n      </div>\n      <ha-selector-datetime\n        .label=${this.hass.localize(\"ui.panel.developer-tools.tabs.statistics.fix_issue.adjust_sum.pick_a_time\")}\n        .hass=${this.hass}\n        .selector=${this._dateTimeSelector}\n        .value=${this._moment}\n        @value-changed=${this._dateTimeSelectorChanged}\n      ></ha-selector-datetime>\n      <div class=\"stat-list\">${stats}</div>\n      <mwc-button\n        slot=\"primaryAction\"\n        dialogAction=\"cancel\"\n        .label=${this.hass.localize(\"ui.common.close\")}\n      ></mwc-button>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_clearChosenStatistic\",\n      value: function _clearChosenStatistic() {\n        this._chosenStat = undefined;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_setChosenStatistic\",\n      value: function _setChosenStatistic(ev) {\n        const stat = ev.currentTarget.stat;\n        const growth = Math.round(stat.change * 100) / 100;\n        this._chosenStat = stat;\n        this._origAmount = growth;\n        this._amount = growth;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_dateTimeSelectorChanged\",\n      value: function _dateTimeSelectorChanged(ev) {\n        this._moment = ev.detail.value;\n        this._fetchStats();\n      }\n    }, {\n      kind: \"method\",\n      key: \"_renderAdjustStat\",\n      value: function _renderAdjustStat() {\n        const unit = getDisplayUnit(this.hass, this._params.statistic.statistic_id, this._params.statistic);\n        return html`\n      <div class=\"text-content\">\n        <b\n          >${this.hass.localize(\"ui.panel.developer-tools.tabs.statistics.fix_issue.adjust_sum.statistic\")}</b\n        >\n        ${this._params.statistic.statistic_id}\n      </div>\n\n      <div class=\"table-row\">\n        <span\n          >${this.hass.localize(\"ui.panel.developer-tools.tabs.statistics.fix_issue.adjust_sum.start\")}</span\n        >\n        <span\n          >${formatDateTime(new Date(this._chosenStat.start), this.hass.locale, this.hass.config)}</span\n        >\n      </div>\n\n      <div class=\"table-row\">\n        <span\n          >${this.hass.localize(\"ui.panel.developer-tools.tabs.statistics.fix_issue.adjust_sum.end\")}</span\n        >\n        <span\n          >${formatDateTime(new Date(this._chosenStat.end), this.hass.locale, this.hass.config)}</span\n        >\n      </div>\n\n      <ha-selector-number\n        .label=${this.hass.localize(\"ui.panel.developer-tools.tabs.statistics.fix_issue.adjust_sum.new_value\")}\n        .hass=${this.hass}\n        .selector=${this._amountSelector(unit || undefined)}\n        .value=${this._amount}\n        .disabled=${this._busy}\n        @value-changed=${this._amountChanged}\n      ></ha-selector-number>\n\n      <mwc-button\n        slot=\"primaryAction\"\n        .label=${this.hass.localize(\"ui.panel.developer-tools.tabs.statistics.fix_issue.adjust_sum.adjust\")}\n        .disabled=${this._busy}\n        @click=${this._fixIssue}\n      ></mwc-button>\n      <mwc-button\n        slot=\"secondaryAction\"\n        .label=${this.hass.localize(\"ui.common.back\")}\n        .disabled=${this._busy}\n        @click=${this._clearChosenStatistic}\n      ></mwc-button>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_amountChanged\",\n      value: function _amountChanged(ev) {\n        this._amount = ev.detail.value;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_fetchStats\",\n      value: async function _fetchStats() {\n        this._stats5min = undefined;\n        this._statsHour = undefined;\n        const statId = this._params.statistic.statistic_id;\n\n        // moment is in format YYYY-MM-DD HH:mm:ss because of selector\n        // Here we convert it to an ISO string.\n        const moment = new Date(this._moment.replace(\" \", \"T\"));\n\n        // Search 2 hours before and 3 hours after chosen time\n        const hourStatStart = new Date(moment.getTime());\n        hourStatStart.setTime(hourStatStart.getTime() - 2 * 3600 * 1000);\n        const hourStatEnd = new Date(moment.getTime());\n        hourStatEnd.setTime(hourStatEnd.getTime() + 3 * 3600 * 1000);\n        const statsHourData = await fetchStatistics(this.hass, hourStatStart, hourStatEnd, [statId], \"hour\");\n        this._statsHour = statId in statsHourData ? statsHourData[statId].slice(0, 5) : [];\n\n        // Can't have 5 min data if no hourly data\n        if (this._statsHour.length === 0) {\n          this._stats5min = [];\n          return;\n        }\n\n        // Search 10 minutes before and 15 minutes after chosen time\n        const minStatStart = new Date(moment.getTime());\n        minStatStart.setTime(minStatStart.getTime() - 10 * 60 * 1000);\n        const minStatEnd = new Date(moment.getTime());\n        minStatEnd.setTime(minStatEnd.getTime() + 15 * 60 * 1000);\n        const stats5MinData = await fetchStatistics(this.hass, minStatStart, minStatEnd, [statId], \"5minute\");\n        this._stats5min = statId in stats5MinData ? stats5MinData[statId].slice(0, 5) : [];\n      }\n    }, {\n      kind: \"method\",\n      key: \"_fixIssue\",\n      value: async function _fixIssue() {\n        const unit = getDisplayUnit(this.hass, this._params.statistic.statistic_id, this._params.statistic);\n        this._busy = true;\n        try {\n          await adjustStatisticsSum(this.hass, this._params.statistic.statistic_id, this._chosenStat.start, this._amount - this._origAmount, unit || null);\n        } catch (err) {\n          this._busy = false;\n          showAlertDialog(this, {\n            text: this.hass.localize(\"ui.panel.developer-tools.tabs.statistics.fix_issue.adjust_sum.error_sum_adjusted\", {\n              message: err.message || err\n            })\n          });\n          return;\n        }\n        showToast(this, {\n          message: this.hass.localize(\"ui.panel.developer-tools.tabs.statistics.fix_issue.adjust_sum.sum_adjusted\")\n        });\n        this.closeDialog();\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [haStyle, haStyleDialog, css`\n        @media all and (max-width: 450px), all and (max-height: 500px) {\n          /* overrule the ha-style-dialog max-height on small screens */\n          ha-dialog {\n            --mdc-dialog-max-height: 100%;\n            height: 100%;\n          }\n        }\n\n        @media all and (min-width: 850px) {\n          ha-dialog {\n            --mdc-dialog-max-height: 80%;\n            --mdc-dialog-max-height: 80%;\n          }\n        }\n\n        @media all and (min-width: 451px) and (min-height: 501px) {\n          ha-dialog {\n            --mdc-dialog-max-width: 480px;\n          }\n        }\n\n        .text-content,\n        ha-selector-datetime,\n        ha-selector-number {\n          margin-bottom: 20px;\n        }\n        ha-list-item {\n          margin: 0 -24px;\n          --mdc-list-side-padding: 24px;\n        }\n        .table-row {\n          display: flex;\n          justify-content: space-between;\n          margin-bottom: 20px;\n        }\n        .stat-list {\n          min-height: 360px;\n          display: flex;\n          flex-direction: column;\n        }\n        .stat-list ha-circular-progress {\n          margin: 0 auto;\n        }\n      `];\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["formatISO9075","css","html","LitElement","nothing","customElement","property","state","memoizeOne","formatDateTime","fireEvent","adjustStatisticsSum","fetchStatistics","getDisplayUnit","showAlertDialog","haStyle","haStyleDialog","showToast","DialogStatisticsFixUnsupportedUnitMetadata","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","datetime","unit_of_measurement","number","step","mode","showDialog","params","_params","now","Date","setMinutes","getMinutes","_moment","_fetchStats","closeDialog","undefined","_stats5min","_statsHour","_origAmount","_amount","_chosenStat","_busy","dialog","localName","render","content","_renderPickStatistic","_renderAdjustStat","hass","localize","shouldUpdate","changedProps","size","has","oldHass","get","stats","length","data","unit","statistic","statistic_id","rows","i","stat","growth","Math","round","change","push","_setChosenStatistic","start","locale","config","_dateTimeSelector","_dateTimeSelectorChanged","_clearChosenStatistic","ev","currentTarget","detail","end","_amountSelector","_amountChanged","_fixIssue","statId","moment","replace","hourStatStart","getTime","setTime","hourStatEnd","statsHourData","slice","minStatStart","minStatEnd","stats5MinData","err","text","message","static","styles"],"sources":["/workspaces/frontend/src/panels/developer-tools/statistics/dialog-statistics-adjust-sum.ts"],"sourcesContent":["import \"@material/mwc-button/mwc-button\";\nimport formatISO9075 from \"date-fns/formatISO9075\";\nimport {\n  css,\n  CSSResultGroup,\n  html,\n  LitElement,\n  nothing,\n  PropertyValues,\n  TemplateResult,\n} from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { formatDateTime } from \"../../../common/datetime/format_date_time\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport \"../../../components/ha-circular-progress\";\nimport \"../../../components/ha-dialog\";\nimport \"../../../components/ha-form/ha-form\";\nimport \"../../../components/ha-selector/ha-selector-datetime\";\nimport \"../../../components/ha-selector/ha-selector-number\";\nimport \"../../../components/ha-svg-icon\";\nimport \"../../../components/ha-icon-next\";\nimport \"../../../components/ha-list-item\";\nimport {\n  adjustStatisticsSum,\n  fetchStatistics,\n  getDisplayUnit,\n  StatisticValue,\n} from \"../../../data/recorder\";\nimport type { DateTimeSelector, NumberSelector } from \"../../../data/selector\";\nimport { showAlertDialog } from \"../../../dialogs/generic/show-dialog-box\";\nimport { haStyle, haStyleDialog } from \"../../../resources/styles\";\nimport { HomeAssistant } from \"../../../types\";\nimport { showToast } from \"../../../util/toast\";\nimport type { DialogStatisticsAdjustSumParams } from \"./show-dialog-statistics-adjust-sum\";\n\n@customElement(\"dialog-statistics-adjust-sum\")\nexport class DialogStatisticsFixUnsupportedUnitMetadata extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @state() private _params?: DialogStatisticsAdjustSumParams;\n\n  @state() private _busy = false;\n\n  @state() private _moment?: string;\n\n  @state() private _stats5min?: StatisticValue[];\n\n  @state() private _statsHour?: StatisticValue[];\n\n  @state() private _chosenStat?: StatisticValue;\n\n  private _origAmount?: number;\n\n  @state() private _amount?: number;\n\n  private _dateTimeSelector: DateTimeSelector = {\n    datetime: {},\n  };\n\n  private _amountSelector = memoizeOne(\n    (unit_of_measurement: string | undefined): NumberSelector => ({\n      number: {\n        step: 0.01,\n        unit_of_measurement,\n        mode: \"box\",\n      },\n    })\n  );\n\n  public showDialog(params: DialogStatisticsAdjustSumParams): void {\n    this._params = params;\n    // moment is in format YYYY-MM-DD HH:mm:ss because of selector\n    // Here we create a date with minutes set to %5\n    const now = new Date();\n    now.setMinutes(now.getMinutes() - (now.getMinutes() % 5), 0);\n    this._moment = formatISO9075(now);\n    this._fetchStats();\n  }\n\n  public closeDialog(): void {\n    this._params = undefined;\n    this._moment = undefined;\n    this._stats5min = undefined;\n    this._statsHour = undefined;\n    this._origAmount = undefined;\n    this._amount = undefined;\n    this._chosenStat = undefined;\n    this._busy = false;\n    fireEvent(this, \"dialog-closed\", { dialog: this.localName });\n  }\n\n  protected render() {\n    if (!this._params) {\n      return nothing;\n    }\n\n    let content: TemplateResult;\n\n    if (!this._chosenStat) {\n      content = this._renderPickStatistic();\n    } else {\n      content = this._renderAdjustStat();\n    }\n\n    return html`\n      <ha-dialog\n        open\n        scrimClickAction\n        escapeKeyAction\n        @closed=${this.closeDialog}\n        .heading=${this.hass.localize(\n          \"ui.panel.developer-tools.tabs.statistics.fix_issue.adjust_sum.title\"\n        )}\n      >\n        ${content}\n      </ha-dialog>\n    `;\n  }\n\n  protected shouldUpdate(changedProps: PropertyValues): boolean {\n    if (changedProps.size !== 1 || !changedProps.has(\"hass\")) {\n      return true;\n    }\n    // We only respond to hass changes if the translations changed\n    const oldHass = changedProps.get(\"hass\") as HomeAssistant | undefined;\n    return !oldHass || oldHass.localize !== this.hass.localize;\n  }\n\n  private _renderPickStatistic() {\n    let stats: TemplateResult;\n\n    if (!this._stats5min || !this._statsHour) {\n      stats = html`<ha-circular-progress indeterminate></ha-circular-progress>`;\n    } else if (this._statsHour.length < 1 && this._stats5min.length < 1) {\n      stats = html`<p>\n        ${this.hass.localize(\n          \"ui.panel.developer-tools.tabs.statistics.fix_issue.adjust_sum.no_statistics_found\"\n        )}\n      </p>`;\n    } else {\n      const data =\n        this._stats5min.length >= 1 ? this._stats5min : this._statsHour;\n      const unit = getDisplayUnit(\n        this.hass,\n        this._params!.statistic.statistic_id,\n        this._params!.statistic\n      );\n      const rows: TemplateResult[] = [];\n      for (let i = 0; i < data.length; i++) {\n        const stat = data[i];\n        const growth = Math.round(stat.change! * 100) / 100;\n        rows.push(html`\n          <ha-list-item\n            twoline\n            hasMeta\n            .stat=${stat}\n            @click=${this._setChosenStatistic}\n          >\n            <span>${growth} ${unit}</span>\n            <span slot=\"secondary\">\n              ${formatDateTime(\n                new Date(stat.start),\n                this.hass.locale,\n                this.hass.config\n              )}\n            </span>\n            <ha-icon-next slot=\"meta\"></ha-icon-next>\n          </ha-list-item>\n        `);\n      }\n      stats = html`${rows}`;\n    }\n\n    return html`\n      <div class=\"text-content\">\n        ${this.hass.localize(\n          \"ui.panel.developer-tools.tabs.statistics.fix_issue.adjust_sum.info_text_1\"\n        )}\n      </div>\n      <div class=\"text-content\">\n        <b\n          >${this.hass.localize(\n            \"ui.panel.developer-tools.tabs.statistics.fix_issue.adjust_sum.statistic\"\n          )}</b\n        >\n        ${this._params!.statistic.statistic_id}\n      </div>\n      <ha-selector-datetime\n        .label=${this.hass.localize(\n          \"ui.panel.developer-tools.tabs.statistics.fix_issue.adjust_sum.pick_a_time\"\n        )}\n        .hass=${this.hass}\n        .selector=${this._dateTimeSelector}\n        .value=${this._moment}\n        @value-changed=${this._dateTimeSelectorChanged}\n      ></ha-selector-datetime>\n      <div class=\"stat-list\">${stats}</div>\n      <mwc-button\n        slot=\"primaryAction\"\n        dialogAction=\"cancel\"\n        .label=${this.hass.localize(\"ui.common.close\")}\n      ></mwc-button>\n    `;\n  }\n\n  private _clearChosenStatistic() {\n    this._chosenStat = undefined;\n  }\n\n  private _setChosenStatistic(ev) {\n    const stat = ev.currentTarget.stat;\n    const growth = Math.round(stat.change! * 100) / 100;\n\n    this._chosenStat = stat;\n    this._origAmount = growth;\n    this._amount = growth;\n  }\n\n  private _dateTimeSelectorChanged(ev) {\n    this._moment = ev.detail.value;\n    this._fetchStats();\n  }\n\n  private _renderAdjustStat() {\n    const unit = getDisplayUnit(\n      this.hass,\n      this._params!.statistic.statistic_id,\n      this._params!.statistic\n    );\n    return html`\n      <div class=\"text-content\">\n        <b\n          >${this.hass.localize(\n            \"ui.panel.developer-tools.tabs.statistics.fix_issue.adjust_sum.statistic\"\n          )}</b\n        >\n        ${this._params!.statistic.statistic_id}\n      </div>\n\n      <div class=\"table-row\">\n        <span\n          >${this.hass.localize(\n            \"ui.panel.developer-tools.tabs.statistics.fix_issue.adjust_sum.start\"\n          )}</span\n        >\n        <span\n          >${formatDateTime(\n            new Date(this._chosenStat!.start),\n            this.hass.locale,\n            this.hass.config\n          )}</span\n        >\n      </div>\n\n      <div class=\"table-row\">\n        <span\n          >${this.hass.localize(\n            \"ui.panel.developer-tools.tabs.statistics.fix_issue.adjust_sum.end\"\n          )}</span\n        >\n        <span\n          >${formatDateTime(\n            new Date(this._chosenStat!.end),\n            this.hass.locale,\n            this.hass.config\n          )}</span\n        >\n      </div>\n\n      <ha-selector-number\n        .label=${this.hass.localize(\n          \"ui.panel.developer-tools.tabs.statistics.fix_issue.adjust_sum.new_value\"\n        )}\n        .hass=${this.hass}\n        .selector=${this._amountSelector(unit || undefined)}\n        .value=${this._amount}\n        .disabled=${this._busy}\n        @value-changed=${this._amountChanged}\n      ></ha-selector-number>\n\n      <mwc-button\n        slot=\"primaryAction\"\n        .label=${this.hass.localize(\n          \"ui.panel.developer-tools.tabs.statistics.fix_issue.adjust_sum.adjust\"\n        )}\n        .disabled=${this._busy}\n        @click=${this._fixIssue}\n      ></mwc-button>\n      <mwc-button\n        slot=\"secondaryAction\"\n        .label=${this.hass.localize(\"ui.common.back\")}\n        .disabled=${this._busy}\n        @click=${this._clearChosenStatistic}\n      ></mwc-button>\n    `;\n  }\n\n  private _amountChanged(ev) {\n    this._amount = ev.detail.value;\n  }\n\n  private async _fetchStats(): Promise<void> {\n    this._stats5min = undefined;\n    this._statsHour = undefined;\n    const statId = this._params!.statistic.statistic_id;\n\n    // moment is in format YYYY-MM-DD HH:mm:ss because of selector\n    // Here we convert it to an ISO string.\n    const moment = new Date(this._moment!.replace(\" \", \"T\"));\n\n    // Search 2 hours before and 3 hours after chosen time\n    const hourStatStart = new Date(moment.getTime());\n    hourStatStart.setTime(hourStatStart.getTime() - 2 * 3600 * 1000);\n    const hourStatEnd = new Date(moment.getTime());\n    hourStatEnd.setTime(hourStatEnd.getTime() + 3 * 3600 * 1000);\n\n    const statsHourData = await fetchStatistics(\n      this.hass,\n      hourStatStart,\n      hourStatEnd,\n      [statId],\n      \"hour\"\n    );\n    this._statsHour =\n      statId in statsHourData ? statsHourData[statId].slice(0, 5) : [];\n\n    // Can't have 5 min data if no hourly data\n    if (this._statsHour.length === 0) {\n      this._stats5min = [];\n      return;\n    }\n\n    // Search 10 minutes before and 15 minutes after chosen time\n    const minStatStart = new Date(moment.getTime());\n    minStatStart.setTime(minStatStart.getTime() - 10 * 60 * 1000);\n    const minStatEnd = new Date(moment.getTime());\n    minStatEnd.setTime(minStatEnd.getTime() + 15 * 60 * 1000);\n\n    const stats5MinData = await fetchStatistics(\n      this.hass,\n      minStatStart,\n      minStatEnd,\n      [statId],\n      \"5minute\"\n    );\n\n    this._stats5min =\n      statId in stats5MinData ? stats5MinData[statId].slice(0, 5) : [];\n  }\n\n  private async _fixIssue(): Promise<void> {\n    const unit = getDisplayUnit(\n      this.hass,\n      this._params!.statistic.statistic_id,\n      this._params!.statistic\n    );\n    this._busy = true;\n    try {\n      await adjustStatisticsSum(\n        this.hass,\n        this._params!.statistic.statistic_id,\n        this._chosenStat!.start,\n        this._amount! - this._origAmount!,\n        unit || null\n      );\n    } catch (err: any) {\n      this._busy = false;\n      showAlertDialog(this, {\n        text: this.hass.localize(\n          \"ui.panel.developer-tools.tabs.statistics.fix_issue.adjust_sum.error_sum_adjusted\",\n          { message: err.message || err }\n        ),\n      });\n      return;\n    }\n    showToast(this, {\n      message: this.hass.localize(\n        \"ui.panel.developer-tools.tabs.statistics.fix_issue.adjust_sum.sum_adjusted\"\n      ),\n    });\n    this.closeDialog();\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyle,\n      haStyleDialog,\n      css`\n        @media all and (max-width: 450px), all and (max-height: 500px) {\n          /* overrule the ha-style-dialog max-height on small screens */\n          ha-dialog {\n            --mdc-dialog-max-height: 100%;\n            height: 100%;\n          }\n        }\n\n        @media all and (min-width: 850px) {\n          ha-dialog {\n            --mdc-dialog-max-height: 80%;\n            --mdc-dialog-max-height: 80%;\n          }\n        }\n\n        @media all and (min-width: 451px) and (min-height: 501px) {\n          ha-dialog {\n            --mdc-dialog-max-width: 480px;\n          }\n        }\n\n        .text-content,\n        ha-selector-datetime,\n        ha-selector-number {\n          margin-bottom: 20px;\n        }\n        ha-list-item {\n          margin: 0 -24px;\n          --mdc-list-side-padding: 24px;\n        }\n        .table-row {\n          display: flex;\n          justify-content: space-between;\n          margin-bottom: 20px;\n        }\n        .stat-list {\n          min-height: 360px;\n          display: flex;\n          flex-direction: column;\n        }\n        .stat-list ha-circular-progress {\n          margin: 0 auto;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"dialog-statistics-adjust-sum\": DialogStatisticsFixUnsupportedUnitMetadata;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}