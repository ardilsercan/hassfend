{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport \"@material/mwc-button\";\nimport \"@material/mwc-list/mwc-list-item\";\nconst mdiCodeBraces = \"M8,3A2,2 0 0,0 6,5V9A2,2 0 0,1 4,11H3V13H4A2,2 0 0,1 6,15V19A2,2 0 0,0 8,21H10V19H8V14A2,2 0 0,0 6,12A2,2 0 0,0 8,10V5H10V3M16,3A2,2 0 0,1 18,5V9A2,2 0 0,0 20,11H21V13H20A2,2 0 0,0 18,15V19A2,2 0 0,1 16,21H14V19H16V14A2,2 0 0,1 18,12A2,2 0 0,1 16,10V5H14V3H16Z\";\nconst mdiCommentProcessingOutline = \"M9,22A1,1 0 0,1 8,21V18H4A2,2 0 0,1 2,16V4C2,2.89 2.9,2 4,2H20A2,2 0 0,1 22,4V16A2,2 0 0,1 20,18H13.9L10.2,21.71C10,21.9 9.75,22 9.5,22V22H9M10,16V19.08L13.08,16H20V4H4V16H10M17,11H15V9H17V11M13,11H11V9H13V11M9,11H7V9H9V11Z\";\nconst mdiDotsVertical = \"M12,16A2,2 0 0,1 14,18A2,2 0 0,1 12,20A2,2 0 0,1 10,18A2,2 0 0,1 12,16M12,10A2,2 0 0,1 14,12A2,2 0 0,1 12,14A2,2 0 0,1 10,12A2,2 0 0,1 12,10M12,4A2,2 0 0,1 14,6A2,2 0 0,1 12,8A2,2 0 0,1 10,6A2,2 0 0,1 12,4Z\";\nconst mdiFileMultiple = \"M15,7H20.5L15,1.5V7M8,0H16L22,6V18A2,2 0 0,1 20,20H8C6.89,20 6,19.1 6,18V2A2,2 0 0,1 8,0M4,4V22H20V24H4A2,2 0 0,1 2,22V4H4Z\";\nconst mdiFormatListBulletedTriangle = \"M5,15.5L7.5,20H2.5L5,15.5M9,19H21V17H9V19M5,9.5L7.5,14H2.5L5,9.5M9,13H21V11H9V13M5,3.5L7.5,8H2.5L5,3.5M9,7H21V5H9V7Z\";\nconst mdiHelpCircle = \"M15.07,11.25L14.17,12.17C13.45,12.89 13,13.5 13,15H11V14.5C11,13.39 11.45,12.39 12.17,11.67L13.41,10.41C13.78,10.05 14,9.55 14,9C14,7.89 13.1,7 12,7A2,2 0 0,0 10,9H8A4,4 0 0,1 12,5A4,4 0 0,1 16,9C16,9.88 15.64,10.67 15.07,11.25M13,19H11V17H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12C22,6.47 17.5,2 12,2Z\";\nconst mdiMagnify = \"M9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.44,13.73L14.71,14H15.5L20.5,19L19,20.5L14,15.5V14.71L13.73,14.44C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3M9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5Z\";\nconst mdiPencil = \"M20.71,7.04C21.1,6.65 21.1,6 20.71,5.63L18.37,3.29C18,2.9 17.35,2.9 16.96,3.29L15.12,5.12L18.87,8.87M3,17.25V21H6.75L17.81,9.93L14.06,6.18L3,17.25Z\";\nconst mdiPlus = \"M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z\";\nconst mdiRefresh = \"M17.65,6.35C16.2,4.9 14.21,4 12,4A8,8 0 0,0 4,12A8,8 0 0,0 12,20C15.73,20 18.84,17.45 19.73,14H17.65C16.83,16.33 14.61,18 12,18A6,6 0 0,1 6,12A6,6 0 0,1 12,6C13.66,6 15.14,6.69 16.22,7.78L13,11H20V4L17.65,6.35Z\";\nconst mdiShape = \"M11,13.5V21.5H3V13.5H11M12,2L17.5,11H6.5L12,2M17.5,13C20,13 22,15 22,17.5C22,20 20,22 17.5,22C15,22 13,20 13,17.5C13,15 15,13 17.5,13Z\";\nconst mdiViewDashboard = \"M13,3V9H21V3M13,21H21V11H13M3,21H11V15H3M3,13H11V3H3V13Z\";\nimport \"@polymer/paper-tabs/paper-tab\";\nimport \"@polymer/paper-tabs/paper-tabs\";\nimport { LitElement, css, html } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport { ifDefined } from \"lit/directives/if-defined\";\nimport memoizeOne from \"memoize-one\";\nimport { isComponentLoaded } from \"../../common/config/is_component_loaded\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { shouldHandleRequestSelectedEvent } from \"../../common/mwc/handle-request-selected-event\";\nimport { navigate } from \"../../common/navigate\";\nimport { constructUrlCurrentPath } from \"../../common/url/construct-url\";\nimport { addSearchParam, extractSearchParamsObject, removeSearchParam } from \"../../common/url/search-params\";\nimport { computeRTLDirection } from \"../../common/util/compute_rtl\";\nimport { debounce } from \"../../common/util/debounce\";\nimport { afterNextRender } from \"../../common/util/render-status\";\nimport \"../../components/ha-button-menu\";\nimport \"../../components/ha-icon\";\nimport \"../../components/ha-icon-button\";\nimport \"../../components/ha-icon-button-arrow-next\";\nimport \"../../components/ha-icon-button-arrow-prev\";\nimport \"../../components/ha-menu-button\";\nimport \"../../components/ha-svg-icon\";\nimport \"../../components/ha-tabs\";\nimport { showAlertDialog, showConfirmationDialog } from \"../../dialogs/generic/show-dialog-box\";\nimport { showQuickBar } from \"../../dialogs/quick-bar/show-dialog-quick-bar\";\nimport { showVoiceCommandDialog } from \"../../dialogs/voice-command-dialog/show-ha-voice-command-dialog\";\nimport { haStyle } from \"../../resources/styles\";\nimport { documentationUrl } from \"../../util/documentation-url\";\nimport { swapView } from \"./editor/config-util\";\nimport { showEditLovelaceDialog } from \"./editor/lovelace-editor/show-edit-lovelace-dialog\";\nimport { showEditViewDialog } from \"./editor/view-editor/show-edit-view-dialog\";\nimport { showDashboardStrategyEditorDialog } from \"./strategies/device-registry-detail/show-dialog-dashboard-strategy-editor\";\nimport \"./views/hui-view\";\nimport { isStrategyDashboard } from \"../../data/lovelace/config/types\";\nimport { showSaveDialog } from \"./editor/show-save-config-dialog\";\nimport { isLegacyStrategyConfig } from \"./strategies/legacy-strategy\";\nlet HUIRoot = _decorate([customElement(\"hui-root\")], function (_initialize, _LitElement) {\n  class HUIRoot extends _LitElement {\n    constructor() {\n      super();\n      // The view can trigger a re-render when it knows that certain\n      // web components have been loaded.\n      _initialize(this);\n      this._debouncedConfigChanged = debounce(() => this._selectView(this._curView, true), 100, false);\n    }\n  }\n  return {\n    F: HUIRoot,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"lovelace\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"narrow\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"route\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_curView\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_viewCache\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_debouncedConfigChanged\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_conversation\",\n      value() {\n        return memoizeOne(_components => isComponentLoaded(this.hass, \"conversation\"));\n      }\n    }, {\n      kind: \"method\",\n      key: \"_renderActionItems\",\n      value: function _renderActionItems() {\n        var _this$hass$userData, _this$hass$panels$lov, _user;\n        const result = [];\n        if (this._editMode) {\n          result.push(html`<mwc-button\n            outlined\n            class=\"exit-edit-mode\"\n            .label=${this.hass.localize(\"ui.panel.lovelace.menu.exit_edit_mode\")}\n            @click=${this._editModeDisable}\n          ></mwc-button>\n          <a\n            href=${documentationUrl(this.hass, \"/dashboards/\")}\n            rel=\"noreferrer\"\n            class=\"menu-link\"\n            target=\"_blank\"\n          >\n            <ha-icon-button\n              .label=${this.hass.localize(\"ui.panel.lovelace.menu.help\")}\n              .path=${mdiHelpCircle}\n            ></ha-icon-button>\n          </a>`);\n        }\n        const items = [{\n          icon: mdiFormatListBulletedTriangle,\n          key: \"ui.panel.lovelace.unused_entities.title\",\n          overflowAction: this._handleUnusedEntities,\n          visible: this._editMode && !__DEMO__,\n          overflow: true\n        }, {\n          icon: mdiCodeBraces,\n          key: \"ui.panel.lovelace.editor.menu.raw_editor\",\n          overflowAction: this._handleRawEditor,\n          visible: this._editMode,\n          overflow: true\n        }, {\n          icon: mdiViewDashboard,\n          key: \"ui.panel.lovelace.editor.menu.manage_dashboards\",\n          overflowAction: this._handleManageDashboards,\n          visible: this._editMode && !__DEMO__,\n          overflow: true\n        }, {\n          icon: mdiFileMultiple,\n          key: \"ui.panel.lovelace.editor.menu.manage_resources\",\n          overflowAction: this._handleManageResources,\n          visible: this._editMode && ((_this$hass$userData = this.hass.userData) === null || _this$hass$userData === void 0 ? void 0 : _this$hass$userData.showAdvanced),\n          overflow: true\n        }, {\n          icon: mdiMagnify,\n          key: \"ui.panel.lovelace.menu.search\",\n          buttonAction: this._showQuickBar,\n          overflowAction: this._handleShowQuickBar,\n          visible: !this._editMode,\n          overflow: this.narrow\n        }, {\n          icon: mdiCommentProcessingOutline,\n          key: \"ui.panel.lovelace.menu.assist\",\n          buttonAction: this._showVoiceCommandDialog,\n          overflowAction: this._handleShowVoiceCommandDialog,\n          visible: !this._editMode && this._conversation(this.hass.config.components),\n          overflow: this.narrow\n        }, {\n          icon: mdiRefresh,\n          key: \"ui.common.refresh\",\n          overflowAction: this._handleRefresh,\n          visible: !this._editMode && this._yamlMode,\n          overflow: true\n        }, {\n          icon: mdiShape,\n          key: \"ui.panel.lovelace.unused_entities.title\",\n          overflowAction: this._handleUnusedEntities,\n          visible: !this._editMode && this._yamlMode,\n          overflow: true\n        }, {\n          icon: mdiRefresh,\n          key: \"ui.panel.lovelace.menu.reload_resources\",\n          overflowAction: this._handleReloadResources,\n          visible: !this._editMode && ((_this$hass$panels$lov = this.hass.panels.lovelace) === null || _this$hass$panels$lov === void 0 || (_this$hass$panels$lov = _this$hass$panels$lov.config) === null || _this$hass$panels$lov === void 0 ? void 0 : _this$hass$panels$lov.mode) === \"yaml\",\n          overflow: true\n        }, {\n          icon: mdiPencil,\n          key: \"ui.panel.lovelace.menu.configure_ui\",\n          overflowAction: this._handleEnableEditMode,\n          buttonAction: this._enableEditMode,\n          visible: !this._editMode && ((_user = this.hass.user) === null || _user === void 0 ? void 0 : _user.is_admin) && !this.hass.config.recovery_mode,\n          overflow: true,\n          overflow_can_promote: true\n        }];\n        const overflowItems = items.filter(i => i.visible && i.overflow);\n        const overflowCanPromote = overflowItems.length === 1 && overflowItems[0].overflow_can_promote;\n        const buttonItems = items.filter(i => i.visible && (!i.overflow || overflowCanPromote));\n        buttonItems.forEach(i => {\n          result.push(html`<ha-icon-button\n          slot=\"actionItems\"\n          .label=${this.hass.localize(i.key)}\n          .path=${i.icon}\n          @click=${i.buttonAction}\n        ></ha-icon-button>`);\n        });\n        if (overflowItems.length && !overflowCanPromote) {\n          const listItems = [];\n          overflowItems.forEach(i => {\n            listItems.push(html`<mwc-list-item\n            graphic=\"icon\"\n            @request-selected=${i.overflowAction}\n          >\n            ${this.hass.localize(i.key)}\n            <ha-svg-icon slot=\"graphic\" .path=${i.icon}></ha-svg-icon>\n          </mwc-list-item>`);\n          });\n          result.push(html`<ha-button-menu slot=\"actionItems\">\n          <ha-icon-button\n            slot=\"trigger\"\n            .label=${this.hass.localize(\"ui.panel.lovelace.editor.menu.open\")}\n            .path=${mdiDotsVertical}\n          ></ha-icon-button>\n          ${listItems}\n        </ha-button-menu>`);\n        }\n        return html`${result}`;\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var _this$lovelace$config, _this$lovelace;\n        const views = (_this$lovelace$config = (_this$lovelace = this.lovelace) === null || _this$lovelace === void 0 ? void 0 : _this$lovelace.config.views) !== null && _this$lovelace$config !== void 0 ? _this$lovelace$config : [];\n        const curViewConfig = typeof this._curView === \"number\" ? views[this._curView] : undefined;\n        return html`\n      <div\n        class=${classMap({\n          \"edit-mode\": this._editMode\n        })}\n      >\n        <div class=\"header\">\n          <div class=\"toolbar\">\n            ${this._editMode ? html`\n                  <div class=\"main-title\">\n                    ${this.config.title || this.hass.localize(\"ui.panel.lovelace.editor.header\")}\n                    <ha-icon-button\n                      slot=\"actionItems\"\n                      .label=${this.hass.localize(\"ui.panel.lovelace.editor.edit_lovelace.edit_title\")}\n                      .path=${mdiPencil}\n                      class=\"edit-icon\"\n                      @click=${this._editLovelace}\n                    ></ha-icon-button>\n                  </div>\n                  <div class=\"action-items\">${this._renderActionItems()}</div>\n                ` : html`\n                  ${curViewConfig !== null && curViewConfig !== void 0 && curViewConfig.subview ? html`\n                        <ha-icon-button-arrow-prev\n                          slot=\"navigationIcon\"\n                          @click=${this._goBack}\n                        ></ha-icon-button-arrow-prev>\n                      ` : html`\n                        <ha-menu-button\n                          slot=\"navigationIcon\"\n                          .hass=${this.hass}\n                          .narrow=${this.narrow}\n                        ></ha-menu-button>\n                      `}\n                  ${curViewConfig !== null && curViewConfig !== void 0 && curViewConfig.subview ? html`<div class=\"main-title\">${curViewConfig.title}</div>` : views.filter(view => !view.subview).length > 1 ? html`\n                          <ha-tabs\n                            slot=\"title\"\n                            scrollable\n                            .selected=${this._curView}\n                            @iron-activate=${this._handleViewSelected}\n                            dir=${computeRTLDirection(this.hass)}\n                          >\n                            ${views.map(view => html`\n                                <paper-tab\n                                  aria-label=${ifDefined(view.title)}\n                                  class=${classMap({\n          \"hide-tab\": Boolean(view.subview || view.visible !== undefined && (Array.isArray(view.visible) && !view.visible.some(e => {\n            var _user2;\n            return e.user === ((_user2 = this.hass.user) === null || _user2 === void 0 ? void 0 : _user2.id);\n          }) || view.visible === false))\n        })}\n                                >\n                                  ${view.icon ? html`\n                                        <ha-icon\n                                          title=${ifDefined(view.title)}\n                                          .icon=${view.icon}\n                                        ></ha-icon>\n                                      ` : view.title || \"Unnamed view\"}\n                                </paper-tab>\n                              `)}\n                          </ha-tabs>\n                        ` : html`<div class=\"main-title\">\n                          ${this.config.title}\n                        </div>`}\n                  <div class=\"action-items\">${this._renderActionItems()}</div>\n                `}\n          </div>\n          ${this._editMode ? html`\n                <paper-tabs\n                  scrollable\n                  .selected=${this._curView}\n                  @iron-activate=${this._handleViewSelected}\n                  dir=${computeRTLDirection(this.hass)}\n                >\n                  ${views.map(view => html`\n                      <paper-tab\n                        aria-label=${ifDefined(view.title)}\n                        class=${classMap({\n          \"hide-tab\": Boolean(!this._editMode && view.visible !== undefined && (Array.isArray(view.visible) && !view.visible.some(e => {\n            var _user3;\n            return e.user === ((_user3 = this.hass.user) === null || _user3 === void 0 ? void 0 : _user3.id);\n          }) || view.visible === false))\n        })}\n                      >\n                        ${this._editMode ? html`\n                              <ha-icon-button-arrow-prev\n                                .hass=${this.hass}\n                                .label=${this.hass.localize(\"ui.panel.lovelace.editor.edit_view.move_left\")}\n                                class=\"edit-icon view\"\n                                @click=${this._moveViewLeft}\n                                ?disabled=${this._curView === 0}\n                              ></ha-icon-button-arrow-prev>\n                            ` : \"\"}\n                        ${view.icon ? html`\n                              <ha-icon\n                                class=${classMap({\n          \"child-view-icon\": Boolean(view.subview)\n        })}\n                                title=${ifDefined(view.title)}\n                                .icon=${view.icon}\n                              ></ha-icon>\n                            ` : view.title || \"Unnamed view\"}\n                        ${this._editMode ? html`\n                              <ha-svg-icon\n                                title=${this.hass.localize(\"ui.panel.lovelace.editor.edit_view.edit\")}\n                                class=\"edit-icon view\"\n                                .path=${mdiPencil}\n                                @click=${this._editView}\n                              ></ha-svg-icon>\n                              <ha-icon-button-arrow-next\n                                .hass=${this.hass}\n                                .label=${this.hass.localize(\"ui.panel.lovelace.editor.edit_view.move_right\")}\n                                class=\"edit-icon view\"\n                                @click=${this._moveViewRight}\n                                ?disabled=${this._curView + 1 === views.length}\n                              ></ha-icon-button-arrow-next>\n                            ` : \"\"}\n                      </paper-tab>\n                    `)}\n                  ${this._editMode ? html`\n                        <ha-icon-button\n                          id=\"add-view\"\n                          @click=${this._addView}\n                          .label=${this.hass.localize(\"ui.panel.lovelace.editor.edit_view.add\")}\n                          .path=${mdiPlus}\n                        ></ha-icon-button>\n                      ` : \"\"}\n                </paper-tabs>\n              ` : \"\"}\n        </div>\n        <div id=\"view\" @ll-rebuild=${this._debouncedConfigChanged}></div>\n      </div>\n    `;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_handleWindowScroll\",\n      value() {\n        return () => {\n          this.toggleAttribute(\"scrolled\", window.scrollY !== 0);\n        };\n      }\n    }, {\n      kind: \"field\",\n      key: \"_isVisible\",\n      value() {\n        return view => Boolean(this._editMode || view.visible === undefined || view.visible === true || Array.isArray(view.visible) && view.visible.some(show => {\n          var _user4;\n          return show.user === ((_user4 = this.hass.user) === null || _user4 === void 0 ? void 0 : _user4.id);\n        }));\n      }\n    }, {\n      kind: \"method\",\n      key: \"_clearParam\",\n      value: function _clearParam(param) {\n        window.history.replaceState(null, \"\", constructUrlCurrentPath(removeSearchParam(param)));\n      }\n    }, {\n      kind: \"method\",\n      key: \"firstUpdated\",\n      value: function firstUpdated(changedProps) {\n        _get(_getPrototypeOf(HUIRoot.prototype), \"firstUpdated\", this).call(this, changedProps);\n        // Check for requested edit mode\n        const searchParams = extractSearchParamsObject();\n        if (searchParams.edit === \"1\") {\n          var _user5;\n          this._clearParam(\"edit\");\n          if ((_user5 = this.hass.user) !== null && _user5 !== void 0 && _user5.is_admin && this.lovelace.mode === \"storage\") {\n            this.lovelace.setEditMode(true);\n          }\n        } else if (searchParams.conversation === \"1\") {\n          this._clearParam(\"conversation\");\n          this._showVoiceCommandDialog();\n        }\n        window.addEventListener(\"scroll\", this._handleWindowScroll, {\n          passive: true\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"disconnectedCallback\",\n      value: function disconnectedCallback() {\n        _get(_getPrototypeOf(HUIRoot.prototype), \"disconnectedCallback\", this).call(this);\n        window.removeEventListener(\"scroll\", this._handleWindowScroll);\n      }\n    }, {\n      kind: \"method\",\n      key: \"updated\",\n      value: function updated(changedProperties) {\n        _get(_getPrototypeOf(HUIRoot.prototype), \"updated\", this).call(this, changedProperties);\n        const view = this._viewRoot;\n        const huiView = view.lastChild;\n        if (changedProperties.has(\"hass\") && huiView) {\n          huiView.hass = this.hass;\n        }\n        if (changedProperties.has(\"narrow\") && huiView) {\n          huiView.narrow = this.narrow;\n        }\n        let newSelectView;\n        let force = false;\n        let viewPath = this.route.path.split(\"/\")[1];\n        viewPath = viewPath ? decodeURI(viewPath) : undefined;\n        if (changedProperties.has(\"route\")) {\n          const views = this.config.views;\n          if (!viewPath && views.length) {\n            newSelectView = views.findIndex(this._isVisible);\n            this._navigateToView(views[newSelectView].path || newSelectView, true);\n          } else if (viewPath === \"hass-unused-entities\") {\n            newSelectView = \"hass-unused-entities\";\n          } else if (viewPath) {\n            const selectedView = viewPath;\n            const selectedViewInt = Number(selectedView);\n            let index = 0;\n            for (let i = 0; i < views.length; i++) {\n              if (views[i].path === selectedView || i === selectedViewInt) {\n                index = i;\n                break;\n              }\n            }\n            newSelectView = index;\n          }\n\n          // Will allow to override history scroll restoration when using back button\n          setTimeout(() => scrollTo({\n            behavior: \"auto\",\n            top: 0\n          }), 1);\n        }\n        if (changedProperties.has(\"lovelace\")) {\n          const oldLovelace = changedProperties.get(\"lovelace\");\n          if (!oldLovelace || oldLovelace.config !== this.lovelace.config) {\n            // On config change, recreate the current view from scratch.\n            force = true;\n          }\n          if (!oldLovelace || oldLovelace.editMode !== this.lovelace.editMode) {\n            const views = this.config && this.config.views;\n\n            // Leave unused entities when leaving edit mode\n            if (this.lovelace.mode === \"storage\" && viewPath === \"hass-unused-entities\") {\n              newSelectView = views.findIndex(this._isVisible);\n              this._navigateToView(views[newSelectView].path || newSelectView, true);\n            }\n          }\n          if (!force && huiView) {\n            huiView.lovelace = this.lovelace;\n          }\n        }\n        if (newSelectView !== undefined || force) {\n          if (force && newSelectView === undefined) {\n            newSelectView = this._curView;\n          }\n          // Will allow for ripples to start rendering\n          afterNextRender(() => this._selectView(newSelectView, force));\n        }\n      }\n    }, {\n      kind: \"get\",\n      key: \"config\",\n      value: function config() {\n        return this.lovelace.config;\n      }\n    }, {\n      kind: \"get\",\n      key: \"_yamlMode\",\n      value: function _yamlMode() {\n        return this.lovelace.mode === \"yaml\";\n      }\n    }, {\n      kind: \"get\",\n      key: \"_editMode\",\n      value: function _editMode() {\n        return this.lovelace.editMode;\n      }\n    }, {\n      kind: \"get\",\n      key: \"_viewRoot\",\n      value: function _viewRoot() {\n        return this.shadowRoot.getElementById(\"view\");\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleRefresh\",\n      value: function _handleRefresh(ev) {\n        if (!shouldHandleRequestSelectedEvent(ev)) {\n          return;\n        }\n        fireEvent(this, \"config-refresh\");\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleReloadResources\",\n      value: function _handleReloadResources(ev) {\n        if (!shouldHandleRequestSelectedEvent(ev)) {\n          return;\n        }\n        this.hass.callService(\"lovelace\", \"reload_resources\");\n        showConfirmationDialog(this, {\n          title: this.hass.localize(\"ui.panel.lovelace.reload_resources.refresh_header\"),\n          text: this.hass.localize(\"ui.panel.lovelace.reload_resources.refresh_body\"),\n          confirmText: this.hass.localize(\"ui.common.refresh\"),\n          dismissText: this.hass.localize(\"ui.common.not_now\"),\n          confirm: () => location.reload()\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleShowQuickBar\",\n      value: function _handleShowQuickBar(ev) {\n        if (!shouldHandleRequestSelectedEvent(ev)) {\n          return;\n        }\n        this._showQuickBar();\n      }\n    }, {\n      kind: \"method\",\n      key: \"_showQuickBar\",\n      value: function _showQuickBar() {\n        showQuickBar(this, {\n          commandMode: false,\n          hint: this.hass.localize(\"ui.tips.key_e_hint\")\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_goBack\",\n      value: function _goBack() {\n        var _this$lovelace$config2, _this$lovelace2;\n        const views = (_this$lovelace$config2 = (_this$lovelace2 = this.lovelace) === null || _this$lovelace2 === void 0 ? void 0 : _this$lovelace2.config.views) !== null && _this$lovelace$config2 !== void 0 ? _this$lovelace$config2 : [];\n        const curViewConfig = typeof this._curView === \"number\" ? views[this._curView] : undefined;\n        if ((curViewConfig === null || curViewConfig === void 0 ? void 0 : curViewConfig.back_path) != null) {\n          navigate(curViewConfig.back_path, {\n            replace: true\n          });\n        } else if (history.length > 1) {\n          history.back();\n        } else if (!views[0].subview) {\n          navigate(this.route.prefix, {\n            replace: true\n          });\n        } else {\n          navigate(\"/\");\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleRawEditor\",\n      value: function _handleRawEditor(ev) {\n        if (!shouldHandleRequestSelectedEvent(ev)) {\n          return;\n        }\n        this.lovelace.enableFullEditMode();\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleManageDashboards\",\n      value: function _handleManageDashboards(ev) {\n        if (!shouldHandleRequestSelectedEvent(ev)) {\n          return;\n        }\n        navigate(\"/config/lovelace/dashboards\");\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleManageResources\",\n      value: function _handleManageResources(ev) {\n        if (!shouldHandleRequestSelectedEvent(ev)) {\n          return;\n        }\n        navigate(\"/config/lovelace/resources\");\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleUnusedEntities\",\n      value: function _handleUnusedEntities(ev) {\n        var _this$route;\n        if (!shouldHandleRequestSelectedEvent(ev)) {\n          return;\n        }\n        navigate(`${(_this$route = this.route) === null || _this$route === void 0 ? void 0 : _this$route.prefix}/hass-unused-entities`);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleShowVoiceCommandDialog\",\n      value: function _handleShowVoiceCommandDialog(ev) {\n        if (!shouldHandleRequestSelectedEvent(ev)) {\n          return;\n        }\n        this._showVoiceCommandDialog();\n      }\n    }, {\n      kind: \"method\",\n      key: \"_showVoiceCommandDialog\",\n      value: function _showVoiceCommandDialog() {\n        showVoiceCommandDialog(this, this.hass, {\n          pipeline_id: \"last_used\"\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleEnableEditMode\",\n      value: function _handleEnableEditMode(ev) {\n        if (!shouldHandleRequestSelectedEvent(ev)) {\n          return;\n        }\n        this._enableEditMode();\n      }\n    }, {\n      kind: \"method\",\n      key: \"_enableEditMode\",\n      value: function _enableEditMode() {\n        if (this._yamlMode) {\n          showAlertDialog(this, {\n            text: this.hass.localize(\"ui.panel.lovelace.editor.yaml_unsupported\")\n          });\n          return;\n        }\n        if (isStrategyDashboard(this.lovelace.rawConfig) && !isLegacyStrategyConfig(this.lovelace.rawConfig.strategy)) {\n          showDashboardStrategyEditorDialog(this, {\n            config: this.lovelace.rawConfig,\n            saveConfig: this.lovelace.saveConfig,\n            takeControl: () => {\n              showSaveDialog(this, {\n                lovelace: this.lovelace,\n                mode: \"storage\",\n                narrow: this.narrow\n              });\n            },\n            showRawConfigEditor: () => {\n              this.lovelace.enableFullEditMode();\n            }\n          });\n          return;\n        }\n        this.lovelace.setEditMode(true);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_editModeDisable\",\n      value: function _editModeDisable() {\n        this.lovelace.setEditMode(false);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_editLovelace\",\n      value: function _editLovelace() {\n        showEditLovelaceDialog(this, this.lovelace);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_navigateToView\",\n      value: function _navigateToView(path, replace) {\n        const url = this.lovelace.editMode ? `${this.route.prefix}/${path}?${addSearchParam({\n          edit: \"1\"\n        })}` : `${this.route.prefix}/${path}${location.search}`;\n        const currentUrl = `${location.pathname}${location.search}`;\n        if (currentUrl !== url) {\n          navigate(url, {\n            replace\n          });\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_editView\",\n      value: function _editView() {\n        showEditViewDialog(this, {\n          lovelace: this.lovelace,\n          viewIndex: this._curView\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_moveViewLeft\",\n      value: function _moveViewLeft(ev) {\n        ev.stopPropagation();\n        if (this._curView === 0) {\n          return;\n        }\n        const lovelace = this.lovelace;\n        const oldIndex = this._curView;\n        const newIndex = this._curView - 1;\n        this._curView = newIndex;\n        if (!this.config.views[oldIndex].path) {\n          this._navigateToView(newIndex, true);\n        }\n        lovelace.saveConfig(swapView(lovelace.config, oldIndex, newIndex));\n      }\n    }, {\n      kind: \"method\",\n      key: \"_moveViewRight\",\n      value: function _moveViewRight(ev) {\n        ev.stopPropagation();\n        if (this._curView + 1 === this.lovelace.config.views.length) {\n          return;\n        }\n        const lovelace = this.lovelace;\n        const oldIndex = this._curView;\n        const newIndex = this._curView + 1;\n        this._curView = newIndex;\n        if (!this.config.views[oldIndex].path) {\n          this._navigateToView(newIndex, true);\n        }\n        lovelace.saveConfig(swapView(lovelace.config, oldIndex, newIndex));\n      }\n    }, {\n      kind: \"method\",\n      key: \"_addView\",\n      value: function _addView() {\n        showEditViewDialog(this, {\n          lovelace: this.lovelace,\n          saveCallback: (viewIndex, viewConfig) => {\n            const path = viewConfig.path || viewIndex;\n            this._navigateToView(path);\n          }\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleViewSelected\",\n      value: function _handleViewSelected(ev) {\n        ev.preventDefault();\n        const viewIndex = ev.detail.selected;\n        if (viewIndex !== this._curView) {\n          const path = this.config.views[viewIndex].path || viewIndex;\n          this._navigateToView(path);\n        } else if (!this._editMode) {\n          scrollTo({\n            behavior: \"smooth\",\n            top: 0\n          });\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_selectView\",\n      value: function _selectView(viewIndex, force) {\n        if (!force && this._curView === viewIndex) {\n          return;\n        }\n        viewIndex = viewIndex === undefined ? 0 : viewIndex;\n        this._curView = viewIndex;\n        if (force) {\n          this._viewCache = {};\n        }\n\n        // Recreate a new element to clear the applied themes.\n        const root = this._viewRoot;\n        if (root.lastChild) {\n          root.removeChild(root.lastChild);\n        }\n        if (viewIndex === \"hass-unused-entities\") {\n          const unusedEntities = document.createElement(\"hui-unused-entities\");\n          // Wait for promise to resolve so that the element has been upgraded.\n          import(\"./editor/unused-entities/hui-unused-entities\").then(() => {\n            unusedEntities.hass = this.hass;\n            unusedEntities.lovelace = this.lovelace;\n            unusedEntities.narrow = this.narrow;\n          });\n          root.appendChild(unusedEntities);\n          return;\n        }\n        let view;\n        const viewConfig = this.config.views[viewIndex];\n        if (!viewConfig) {\n          this.lovelace.setEditMode(true);\n          return;\n        }\n        if (!force && this._viewCache[viewIndex]) {\n          view = this._viewCache[viewIndex];\n        } else {\n          view = document.createElement(\"hui-view\");\n          view.index = viewIndex;\n          this._viewCache[viewIndex] = view;\n        }\n        view.lovelace = this.lovelace;\n        view.hass = this.hass;\n        view.narrow = this.narrow;\n        const configBackground = viewConfig.background || this.config.background;\n        if (configBackground) {\n          this.style.setProperty(\"--lovelace-background\", configBackground);\n        } else {\n          this.style.removeProperty(\"--lovelace-background\");\n        }\n        root.appendChild(view);\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [haStyle, css`\n        :host {\n          -ms-user-select: none;\n          -webkit-user-select: none;\n          -moz-user-select: none;\n        }\n        .header {\n          background-color: var(--app-header-background-color);\n          color: var(--app-header-text-color, white);\n          border-bottom: var(--app-header-border-bottom, none);\n          position: fixed;\n          top: 0;\n          width: var(--mdc-top-app-bar-width, 100%);\n          padding-top: env(safe-area-inset-top);\n          z-index: 4;\n          transition: box-shadow 200ms linear;\n        }\n        :host([scrolled]) .header {\n          box-shadow: var(\n            --mdc-top-app-bar-fixed-box-shadow,\n            0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n            0px 4px 5px 0px rgba(0, 0, 0, 0.14),\n            0px 1px 10px 0px rgba(0, 0, 0, 0.12)\n          );\n        }\n        .edit-mode .header {\n          background-color: var(--app-header-edit-background-color, #455a64);\n          color: var(--app-header-edit-text-color, white);\n        }\n        .toolbar {\n          height: var(--header-height);\n          display: flex;\n          align-items: center;\n          font-size: 20px;\n          padding: 0px 12px;\n          font-weight: 400;\n          box-sizing: border-box;\n        }\n        @media (max-width: 599px) {\n          .toolbar {\n            padding: 0 4px;\n          }\n        }\n        .main-title {\n          margin: var(--margin-title);\n          line-height: 20px;\n          flex-grow: 1;\n        }\n        .action-items {\n          white-space: nowrap;\n          display: flex;\n          align-items: center;\n        }\n        ha-tabs {\n          width: 100%;\n          height: 100%;\n          margin-left: 4px;\n          margin-inline-start: 4px;\n          margin-inline-end: initial;\n        }\n        ha-tabs,\n        paper-tabs {\n          --paper-tabs-selection-bar-color: var(\n            --app-header-selection-bar-color,\n            var(--app-header-text-color, #fff)\n          );\n          text-transform: uppercase;\n        }\n        .edit-mode div[main-title] {\n          pointer-events: auto;\n        }\n        .edit-mode paper-tabs {\n          background-color: var(--app-header-edit-background-color, #455a64);\n          color: var(--app-header-edit-text-color, #fff);\n        }\n        paper-tab.iron-selected .edit-icon {\n          display: inline-flex;\n        }\n        .edit-icon {\n          color: var(--accent-color);\n          padding-left: 8px;\n          padding-inline-start: 8px;\n          vertical-align: middle;\n          --mdc-theme-text-disabled-on-light: var(--disabled-text-color);\n          direction: var(--direction);\n        }\n        .edit-icon.view {\n          display: none;\n        }\n        #add-view {\n          position: absolute;\n          height: 44px;\n        }\n        #add-view ha-svg-icon {\n          background-color: var(--accent-color);\n          border-radius: 4px;\n        }\n        a {\n          color: var(--text-primary-color, white);\n        }\n        mwc-button.warning:not([disabled]) {\n          color: var(--error-color);\n        }\n        #view {\n          position: relative;\n          display: flex;\n          padding-top: calc(var(--header-height) + env(safe-area-inset-top));\n          min-height: 100vh;\n          box-sizing: border-box;\n          padding-left: env(safe-area-inset-left);\n          padding-right: env(safe-area-inset-right);\n          padding-inline-start: env(safe-area-inset-left);\n          padding-inline-end: env(safe-area-inset-right);\n          padding-bottom: env(safe-area-inset-bottom);\n        }\n        hui-view {\n          background: var(\n            --lovelace-background,\n            var(--primary-background-color)\n          );\n        }\n        #view > * {\n          flex: 1 1 100%;\n          max-width: 100%;\n        }\n        /**\n         * In edit mode we have the tab bar on a new line *\n         */\n        .edit-mode #view {\n          padding-top: calc(\n            var(--header-height) + 48px + env(safe-area-inset-top)\n          );\n        }\n        .hide-tab {\n          display: none;\n        }\n        .menu-link {\n          text-decoration: none;\n        }\n        .exit-edit-mode {\n          --mdc-theme-primary: var(--app-header-edit-text-color, #fff);\n          --mdc-button-outline-color: var(--app-header-edit-text-color, #fff);\n          --mdc-typography-button-font-size: 14px;\n        }\n        .child-view-icon {\n          opacity: 0.5;\n        }\n      `];\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["mdiCodeBraces","mdiCommentProcessingOutline","mdiDotsVertical","mdiFileMultiple","mdiFormatListBulletedTriangle","mdiHelpCircle","mdiMagnify","mdiPencil","mdiPlus","mdiRefresh","mdiShape","mdiViewDashboard","LitElement","css","html","customElement","property","state","classMap","ifDefined","memoizeOne","isComponentLoaded","fireEvent","shouldHandleRequestSelectedEvent","navigate","constructUrlCurrentPath","addSearchParam","extractSearchParamsObject","removeSearchParam","computeRTLDirection","debounce","afterNextRender","showAlertDialog","showConfirmationDialog","showQuickBar","showVoiceCommandDialog","haStyle","documentationUrl","swapView","showEditLovelaceDialog","showEditViewDialog","showDashboardStrategyEditorDialog","isStrategyDashboard","showSaveDialog","isLegacyStrategyConfig","HUIRoot","_decorate","_initialize","_LitElement","constructor","_debouncedConfigChanged","_selectView","_curView","F","d","kind","decorators","attribute","key","value","type","Boolean","_components","hass","_renderActionItems","_this$hass$userData","_this$hass$panels$lov","_user","result","_editMode","push","localize","_editModeDisable","items","icon","overflowAction","_handleUnusedEntities","visible","__DEMO__","overflow","_handleRawEditor","_handleManageDashboards","_handleManageResources","userData","showAdvanced","buttonAction","_showQuickBar","_handleShowQuickBar","narrow","_showVoiceCommandDialog","_handleShowVoiceCommandDialog","_conversation","config","components","_handleRefresh","_yamlMode","_handleReloadResources","panels","lovelace","mode","_handleEnableEditMode","_enableEditMode","user","is_admin","recovery_mode","overflow_can_promote","overflowItems","filter","i","overflowCanPromote","length","buttonItems","forEach","listItems","render","_this$lovelace$config","_this$lovelace","views","curViewConfig","undefined","title","_editLovelace","subview","_goBack","view","_handleViewSelected","map","Array","isArray","some","e","_user2","id","_user3","_moveViewLeft","_editView","_moveViewRight","_addView","toggleAttribute","window","scrollY","show","_user4","_clearParam","param","history","replaceState","firstUpdated","changedProps","_get","_getPrototypeOf","prototype","call","searchParams","edit","_user5","setEditMode","conversation","addEventListener","_handleWindowScroll","passive","disconnectedCallback","removeEventListener","updated","changedProperties","_viewRoot","huiView","lastChild","has","newSelectView","force","viewPath","route","path","split","decodeURI","findIndex","_isVisible","_navigateToView","selectedView","selectedViewInt","Number","index","setTimeout","scrollTo","behavior","top","oldLovelace","get","editMode","shadowRoot","getElementById","ev","callService","text","confirmText","dismissText","confirm","location","reload","commandMode","hint","_this$lovelace$config2","_this$lovelace2","back_path","replace","back","prefix","enableFullEditMode","_this$route","pipeline_id","rawConfig","strategy","saveConfig","takeControl","showRawConfigEditor","url","search","currentUrl","pathname","viewIndex","stopPropagation","oldIndex","newIndex","saveCallback","viewConfig","preventDefault","detail","selected","_viewCache","root","removeChild","unusedEntities","document","createElement","then","appendChild","configBackground","background","style","setProperty","removeProperty","static","styles"],"sources":["/Users/sercanardil/Desktop/frontend/src/panels/lovelace/hui-root.ts"],"sourcesContent":["import \"@material/mwc-button\";\nimport \"@material/mwc-list/mwc-list-item\";\nimport type { RequestSelectedDetail } from \"@material/mwc-list/mwc-list-item\";\nimport {\n  mdiCodeBraces,\n  mdiCommentProcessingOutline,\n  mdiDotsVertical,\n  mdiFileMultiple,\n  mdiFormatListBulletedTriangle,\n  mdiHelpCircle,\n  mdiMagnify,\n  mdiPencil,\n  mdiPlus,\n  mdiRefresh,\n  mdiShape,\n  mdiViewDashboard,\n} from \"@mdi/js\";\nimport \"@polymer/paper-tabs/paper-tab\";\nimport \"@polymer/paper-tabs/paper-tabs\";\nimport {\n  CSSResultGroup,\n  LitElement,\n  PropertyValues,\n  TemplateResult,\n  css,\n  html,\n} from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport { ifDefined } from \"lit/directives/if-defined\";\nimport memoizeOne from \"memoize-one\";\nimport { isComponentLoaded } from \"../../common/config/is_component_loaded\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { shouldHandleRequestSelectedEvent } from \"../../common/mwc/handle-request-selected-event\";\nimport { navigate } from \"../../common/navigate\";\nimport { constructUrlCurrentPath } from \"../../common/url/construct-url\";\nimport {\n  addSearchParam,\n  extractSearchParamsObject,\n  removeSearchParam,\n} from \"../../common/url/search-params\";\nimport { computeRTLDirection } from \"../../common/util/compute_rtl\";\nimport { debounce } from \"../../common/util/debounce\";\nimport { afterNextRender } from \"../../common/util/render-status\";\nimport \"../../components/ha-button-menu\";\nimport \"../../components/ha-icon\";\nimport \"../../components/ha-icon-button\";\nimport \"../../components/ha-icon-button-arrow-next\";\nimport \"../../components/ha-icon-button-arrow-prev\";\nimport \"../../components/ha-menu-button\";\nimport \"../../components/ha-svg-icon\";\nimport \"../../components/ha-tabs\";\nimport type { LovelacePanelConfig } from \"../../data/lovelace\";\nimport {\n  showAlertDialog,\n  showConfirmationDialog,\n} from \"../../dialogs/generic/show-dialog-box\";\nimport { showQuickBar } from \"../../dialogs/quick-bar/show-dialog-quick-bar\";\nimport { showVoiceCommandDialog } from \"../../dialogs/voice-command-dialog/show-ha-voice-command-dialog\";\nimport { haStyle } from \"../../resources/styles\";\nimport type { HomeAssistant } from \"../../types\";\nimport { documentationUrl } from \"../../util/documentation-url\";\nimport { swapView } from \"./editor/config-util\";\nimport { showEditLovelaceDialog } from \"./editor/lovelace-editor/show-edit-lovelace-dialog\";\nimport { showEditViewDialog } from \"./editor/view-editor/show-edit-view-dialog\";\nimport { showDashboardStrategyEditorDialog } from \"./strategies/device-registry-detail/show-dialog-dashboard-strategy-editor\";\nimport type { Lovelace } from \"./types\";\nimport \"./views/hui-view\";\nimport type { HUIView } from \"./views/hui-view\";\nimport { LovelaceViewConfig } from \"../../data/lovelace/config/view\";\nimport {\n  LovelaceConfig,\n  isStrategyDashboard,\n} from \"../../data/lovelace/config/types\";\nimport { showSaveDialog } from \"./editor/show-save-config-dialog\";\nimport { isLegacyStrategyConfig } from \"./strategies/legacy-strategy\";\nimport { LocalizeKeys } from \"../../common/translations/localize\";\n\n@customElement(\"hui-root\")\nclass HUIRoot extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public lovelace?: Lovelace;\n\n  @property({ type: Boolean }) public narrow = false;\n\n  @property({ attribute: false }) public route?: {\n    path: string;\n    prefix: string;\n  };\n\n  @state() private _curView?: number | \"hass-unused-entities\";\n\n  private _viewCache?: { [viewId: string]: HUIView };\n\n  private _debouncedConfigChanged: () => void;\n\n  private _conversation = memoizeOne((_components) =>\n    isComponentLoaded(this.hass, \"conversation\")\n  );\n\n  constructor() {\n    super();\n    // The view can trigger a re-render when it knows that certain\n    // web components have been loaded.\n    this._debouncedConfigChanged = debounce(\n      () => this._selectView(this._curView, true),\n      100,\n      false\n    );\n  }\n\n  private _renderActionItems(): TemplateResult {\n    const result: TemplateResult[] = [];\n    if (this._editMode) {\n      result.push(\n        html`<mwc-button\n            outlined\n            class=\"exit-edit-mode\"\n            .label=${this.hass!.localize(\n              \"ui.panel.lovelace.menu.exit_edit_mode\"\n            )}\n            @click=${this._editModeDisable}\n          ></mwc-button>\n          <a\n            href=${documentationUrl(this.hass, \"/dashboards/\")}\n            rel=\"noreferrer\"\n            class=\"menu-link\"\n            target=\"_blank\"\n          >\n            <ha-icon-button\n              .label=${this.hass!.localize(\"ui.panel.lovelace.menu.help\")}\n              .path=${mdiHelpCircle}\n            ></ha-icon-button>\n          </a>`\n      );\n    }\n\n    const items: {\n      icon: string;\n      key: LocalizeKeys;\n      overflowAction?: any;\n      buttonAction?: any;\n      visible: boolean | undefined;\n      overflow: boolean;\n      overflow_can_promote?: boolean;\n    }[] = [\n      {\n        icon: mdiFormatListBulletedTriangle,\n        key: \"ui.panel.lovelace.unused_entities.title\",\n        overflowAction: this._handleUnusedEntities,\n        visible: this._editMode && !__DEMO__,\n        overflow: true,\n      },\n      {\n        icon: mdiCodeBraces,\n        key: \"ui.panel.lovelace.editor.menu.raw_editor\",\n        overflowAction: this._handleRawEditor,\n        visible: this._editMode,\n        overflow: true,\n      },\n      {\n        icon: mdiViewDashboard,\n        key: \"ui.panel.lovelace.editor.menu.manage_dashboards\",\n        overflowAction: this._handleManageDashboards,\n        visible: this._editMode && !__DEMO__,\n        overflow: true,\n      },\n      {\n        icon: mdiFileMultiple,\n        key: \"ui.panel.lovelace.editor.menu.manage_resources\",\n        overflowAction: this._handleManageResources,\n        visible: this._editMode && this.hass.userData?.showAdvanced,\n        overflow: true,\n      },\n      {\n        icon: mdiMagnify,\n        key: \"ui.panel.lovelace.menu.search\",\n        buttonAction: this._showQuickBar,\n        overflowAction: this._handleShowQuickBar,\n        visible: !this._editMode,\n        overflow: this.narrow,\n      },\n      {\n        icon: mdiCommentProcessingOutline,\n        key: \"ui.panel.lovelace.menu.assist\",\n        buttonAction: this._showVoiceCommandDialog,\n        overflowAction: this._handleShowVoiceCommandDialog,\n        visible:\n          !this._editMode && this._conversation(this.hass.config.components),\n        overflow: this.narrow,\n      },\n      {\n        icon: mdiRefresh,\n        key: \"ui.common.refresh\",\n        overflowAction: this._handleRefresh,\n        visible: !this._editMode && this._yamlMode,\n        overflow: true,\n      },\n      {\n        icon: mdiShape,\n        key: \"ui.panel.lovelace.unused_entities.title\",\n        overflowAction: this._handleUnusedEntities,\n        visible: !this._editMode && this._yamlMode,\n        overflow: true,\n      },\n      {\n        icon: mdiRefresh,\n        key: \"ui.panel.lovelace.menu.reload_resources\",\n        overflowAction: this._handleReloadResources,\n        visible:\n          !this._editMode &&\n          (this.hass.panels.lovelace?.config as LovelacePanelConfig)?.mode ===\n            \"yaml\",\n        overflow: true,\n      },\n      {\n        icon: mdiPencil,\n        key: \"ui.panel.lovelace.menu.configure_ui\",\n        overflowAction: this._handleEnableEditMode,\n        buttonAction: this._enableEditMode,\n        visible:\n          !this._editMode &&\n          this.hass!.user?.is_admin &&\n          !this.hass!.config.recovery_mode,\n        overflow: true,\n        overflow_can_promote: true,\n      },\n    ];\n\n    const overflowItems = items.filter((i) => i.visible && i.overflow);\n    const overflowCanPromote =\n      overflowItems.length === 1 && overflowItems[0].overflow_can_promote;\n    const buttonItems = items.filter(\n      (i) => i.visible && (!i.overflow || overflowCanPromote)\n    );\n\n    buttonItems.forEach((i) => {\n      result.push(\n        html`<ha-icon-button\n          slot=\"actionItems\"\n          .label=${this.hass!.localize(i.key)}\n          .path=${i.icon}\n          @click=${i.buttonAction}\n        ></ha-icon-button>`\n      );\n    });\n    if (overflowItems.length && !overflowCanPromote) {\n      const listItems: TemplateResult[] = [];\n      overflowItems.forEach((i) => {\n        listItems.push(\n          html`<mwc-list-item\n            graphic=\"icon\"\n            @request-selected=${i.overflowAction}\n          >\n            ${this.hass!.localize(i.key)}\n            <ha-svg-icon slot=\"graphic\" .path=${i.icon}></ha-svg-icon>\n          </mwc-list-item>`\n        );\n      });\n      result.push(\n        html`<ha-button-menu slot=\"actionItems\">\n          <ha-icon-button\n            slot=\"trigger\"\n            .label=${this.hass!.localize(\"ui.panel.lovelace.editor.menu.open\")}\n            .path=${mdiDotsVertical}\n          ></ha-icon-button>\n          ${listItems}\n        </ha-button-menu>`\n      );\n    }\n    return html`${result}`;\n  }\n\n  protected render(): TemplateResult {\n    const views = this.lovelace?.config.views ?? [];\n\n    const curViewConfig =\n      typeof this._curView === \"number\" ? views[this._curView] : undefined;\n\n    return html`\n      <div\n        class=${classMap({\n          \"edit-mode\": this._editMode,\n        })}\n      >\n        <div class=\"header\">\n          <div class=\"toolbar\">\n            ${this._editMode\n              ? html`\n                  <div class=\"main-title\">\n                    ${this.config.title ||\n                    this.hass!.localize(\"ui.panel.lovelace.editor.header\")}\n                    <ha-icon-button\n                      slot=\"actionItems\"\n                      .label=${this.hass!.localize(\n                        \"ui.panel.lovelace.editor.edit_lovelace.edit_title\"\n                      )}\n                      .path=${mdiPencil}\n                      class=\"edit-icon\"\n                      @click=${this._editLovelace}\n                    ></ha-icon-button>\n                  </div>\n                  <div class=\"action-items\">${this._renderActionItems()}</div>\n                `\n              : html`\n                  ${curViewConfig?.subview\n                    ? html`\n                        <ha-icon-button-arrow-prev\n                          slot=\"navigationIcon\"\n                          @click=${this._goBack}\n                        ></ha-icon-button-arrow-prev>\n                      `\n                    : html`\n                        <ha-menu-button\n                          slot=\"navigationIcon\"\n                          .hass=${this.hass}\n                          .narrow=${this.narrow}\n                        ></ha-menu-button>\n                      `}\n                  ${curViewConfig?.subview\n                    ? html`<div class=\"main-title\">${curViewConfig.title}</div>`\n                    : views.filter((view) => !view.subview).length > 1\n                      ? html`\n                          <ha-tabs\n                            slot=\"title\"\n                            scrollable\n                            .selected=${this._curView}\n                            @iron-activate=${this._handleViewSelected}\n                            dir=${computeRTLDirection(this.hass!)}\n                          >\n                            ${views.map(\n                              (view) => html`\n                                <paper-tab\n                                  aria-label=${ifDefined(view.title)}\n                                  class=${classMap({\n                                    \"hide-tab\": Boolean(\n                                      view.subview ||\n                                        (view.visible !== undefined &&\n                                          ((Array.isArray(view.visible) &&\n                                            !view.visible.some(\n                                              (e) =>\n                                                e.user === this.hass!.user?.id\n                                            )) ||\n                                            view.visible === false))\n                                    ),\n                                  })}\n                                >\n                                  ${view.icon\n                                    ? html`\n                                        <ha-icon\n                                          title=${ifDefined(view.title)}\n                                          .icon=${view.icon}\n                                        ></ha-icon>\n                                      `\n                                    : view.title || \"Unnamed view\"}\n                                </paper-tab>\n                              `\n                            )}\n                          </ha-tabs>\n                        `\n                      : html`<div class=\"main-title\">\n                          ${this.config.title}\n                        </div>`}\n                  <div class=\"action-items\">${this._renderActionItems()}</div>\n                `}\n          </div>\n          ${this._editMode\n            ? html`\n                <paper-tabs\n                  scrollable\n                  .selected=${this._curView}\n                  @iron-activate=${this._handleViewSelected}\n                  dir=${computeRTLDirection(this.hass!)}\n                >\n                  ${views.map(\n                    (view) => html`\n                      <paper-tab\n                        aria-label=${ifDefined(view.title)}\n                        class=${classMap({\n                          \"hide-tab\": Boolean(\n                            !this._editMode &&\n                              view.visible !== undefined &&\n                              ((Array.isArray(view.visible) &&\n                                !view.visible.some(\n                                  (e) => e.user === this.hass!.user?.id\n                                )) ||\n                                view.visible === false)\n                          ),\n                        })}\n                      >\n                        ${this._editMode\n                          ? html`\n                              <ha-icon-button-arrow-prev\n                                .hass=${this.hass}\n                                .label=${this.hass!.localize(\n                                  \"ui.panel.lovelace.editor.edit_view.move_left\"\n                                )}\n                                class=\"edit-icon view\"\n                                @click=${this._moveViewLeft}\n                                ?disabled=${this._curView === 0}\n                              ></ha-icon-button-arrow-prev>\n                            `\n                          : \"\"}\n                        ${view.icon\n                          ? html`\n                              <ha-icon\n                                class=${classMap({\n                                  \"child-view-icon\": Boolean(view.subview),\n                                })}\n                                title=${ifDefined(view.title)}\n                                .icon=${view.icon}\n                              ></ha-icon>\n                            `\n                          : view.title || \"Unnamed view\"}\n                        ${this._editMode\n                          ? html`\n                              <ha-svg-icon\n                                title=${this.hass!.localize(\n                                  \"ui.panel.lovelace.editor.edit_view.edit\"\n                                )}\n                                class=\"edit-icon view\"\n                                .path=${mdiPencil}\n                                @click=${this._editView}\n                              ></ha-svg-icon>\n                              <ha-icon-button-arrow-next\n                                .hass=${this.hass}\n                                .label=${this.hass!.localize(\n                                  \"ui.panel.lovelace.editor.edit_view.move_right\"\n                                )}\n                                class=\"edit-icon view\"\n                                @click=${this._moveViewRight}\n                                ?disabled=${(this._curView! as number) + 1 ===\n                                views.length}\n                              ></ha-icon-button-arrow-next>\n                            `\n                          : \"\"}\n                      </paper-tab>\n                    `\n                  )}\n                  ${this._editMode\n                    ? html`\n                        <ha-icon-button\n                          id=\"add-view\"\n                          @click=${this._addView}\n                          .label=${this.hass!.localize(\n                            \"ui.panel.lovelace.editor.edit_view.add\"\n                          )}\n                          .path=${mdiPlus}\n                        ></ha-icon-button>\n                      `\n                    : \"\"}\n                </paper-tabs>\n              `\n            : \"\"}\n        </div>\n        <div id=\"view\" @ll-rebuild=${this._debouncedConfigChanged}></div>\n      </div>\n    `;\n  }\n\n  private _handleWindowScroll = () => {\n    this.toggleAttribute(\"scrolled\", window.scrollY !== 0);\n  };\n\n  private _isVisible = (view: LovelaceViewConfig) =>\n    Boolean(\n      this._editMode ||\n        view.visible === undefined ||\n        view.visible === true ||\n        (Array.isArray(view.visible) &&\n          view.visible.some((show) => show.user === this.hass!.user?.id))\n    );\n\n  private _clearParam(param: string) {\n    window.history.replaceState(\n      null,\n      \"\",\n      constructUrlCurrentPath(removeSearchParam(param))\n    );\n  }\n\n  protected firstUpdated(changedProps: PropertyValues) {\n    super.firstUpdated(changedProps);\n    // Check for requested edit mode\n    const searchParams = extractSearchParamsObject();\n    if (searchParams.edit === \"1\") {\n      this._clearParam(\"edit\");\n      if (this.hass!.user?.is_admin && this.lovelace!.mode === \"storage\") {\n        this.lovelace!.setEditMode(true);\n      }\n    } else if (searchParams.conversation === \"1\") {\n      this._clearParam(\"conversation\");\n      this._showVoiceCommandDialog();\n    }\n    window.addEventListener(\"scroll\", this._handleWindowScroll, {\n      passive: true,\n    });\n  }\n\n  public disconnectedCallback(): void {\n    super.disconnectedCallback();\n    window.removeEventListener(\"scroll\", this._handleWindowScroll);\n  }\n\n  protected updated(changedProperties: PropertyValues): void {\n    super.updated(changedProperties);\n\n    const view = this._viewRoot;\n    const huiView = view.lastChild as HUIView;\n\n    if (changedProperties.has(\"hass\") && huiView) {\n      huiView.hass = this.hass;\n    }\n\n    if (changedProperties.has(\"narrow\") && huiView) {\n      huiView.narrow = this.narrow;\n    }\n\n    let newSelectView;\n    let force = false;\n\n    let viewPath: string | undefined = this.route!.path.split(\"/\")[1];\n    viewPath = viewPath ? decodeURI(viewPath) : undefined;\n\n    if (changedProperties.has(\"route\")) {\n      const views = this.config.views;\n\n      if (!viewPath && views.length) {\n        newSelectView = views.findIndex(this._isVisible);\n        this._navigateToView(views[newSelectView].path || newSelectView, true);\n      } else if (viewPath === \"hass-unused-entities\") {\n        newSelectView = \"hass-unused-entities\";\n      } else if (viewPath) {\n        const selectedView = viewPath;\n        const selectedViewInt = Number(selectedView);\n        let index = 0;\n        for (let i = 0; i < views.length; i++) {\n          if (views[i].path === selectedView || i === selectedViewInt) {\n            index = i;\n            break;\n          }\n        }\n        newSelectView = index;\n      }\n\n      // Will allow to override history scroll restoration when using back button\n      setTimeout(() => scrollTo({ behavior: \"auto\", top: 0 }), 1);\n    }\n\n    if (changedProperties.has(\"lovelace\")) {\n      const oldLovelace = changedProperties.get(\"lovelace\") as\n        | Lovelace\n        | undefined;\n\n      if (!oldLovelace || oldLovelace.config !== this.lovelace!.config) {\n        // On config change, recreate the current view from scratch.\n        force = true;\n      }\n\n      if (!oldLovelace || oldLovelace.editMode !== this.lovelace!.editMode) {\n        const views = this.config && this.config.views;\n\n        // Leave unused entities when leaving edit mode\n        if (\n          this.lovelace!.mode === \"storage\" &&\n          viewPath === \"hass-unused-entities\"\n        ) {\n          newSelectView = views.findIndex(this._isVisible);\n          this._navigateToView(\n            views[newSelectView].path || newSelectView,\n            true\n          );\n        }\n      }\n\n      if (!force && huiView) {\n        huiView.lovelace = this.lovelace!;\n      }\n    }\n\n    if (newSelectView !== undefined || force) {\n      if (force && newSelectView === undefined) {\n        newSelectView = this._curView;\n      }\n      // Will allow for ripples to start rendering\n      afterNextRender(() => this._selectView(newSelectView, force));\n    }\n  }\n\n  private get config(): LovelaceConfig {\n    return this.lovelace!.config;\n  }\n\n  private get _yamlMode(): boolean {\n    return this.lovelace!.mode === \"yaml\";\n  }\n\n  private get _editMode() {\n    return this.lovelace!.editMode;\n  }\n\n  private get _viewRoot(): HTMLDivElement {\n    return this.shadowRoot!.getElementById(\"view\") as HTMLDivElement;\n  }\n\n  private _handleRefresh(ev: CustomEvent<RequestSelectedDetail>): void {\n    if (!shouldHandleRequestSelectedEvent(ev)) {\n      return;\n    }\n    fireEvent(this, \"config-refresh\");\n  }\n\n  private _handleReloadResources(ev: CustomEvent<RequestSelectedDetail>): void {\n    if (!shouldHandleRequestSelectedEvent(ev)) {\n      return;\n    }\n    this.hass.callService(\"lovelace\", \"reload_resources\");\n    showConfirmationDialog(this, {\n      title: this.hass!.localize(\n        \"ui.panel.lovelace.reload_resources.refresh_header\"\n      ),\n      text: this.hass!.localize(\n        \"ui.panel.lovelace.reload_resources.refresh_body\"\n      ),\n      confirmText: this.hass.localize(\"ui.common.refresh\"),\n      dismissText: this.hass.localize(\"ui.common.not_now\"),\n      confirm: () => location.reload(),\n    });\n  }\n\n  private _handleShowQuickBar(ev: CustomEvent<RequestSelectedDetail>): void {\n    if (!shouldHandleRequestSelectedEvent(ev)) {\n      return;\n    }\n    this._showQuickBar();\n  }\n\n  private _showQuickBar(): void {\n    showQuickBar(this, {\n      commandMode: false,\n      hint: this.hass.localize(\"ui.tips.key_e_hint\"),\n    });\n  }\n\n  private _goBack(): void {\n    const views = this.lovelace?.config.views ?? [];\n    const curViewConfig =\n      typeof this._curView === \"number\" ? views[this._curView] : undefined;\n\n    if (curViewConfig?.back_path != null) {\n      navigate(curViewConfig.back_path, { replace: true });\n    } else if (history.length > 1) {\n      history.back();\n    } else if (!views[0].subview) {\n      navigate(this.route!.prefix, { replace: true });\n    } else {\n      navigate(\"/\");\n    }\n  }\n\n  private _handleRawEditor(ev: CustomEvent<RequestSelectedDetail>): void {\n    if (!shouldHandleRequestSelectedEvent(ev)) {\n      return;\n    }\n    this.lovelace!.enableFullEditMode();\n  }\n\n  private _handleManageDashboards(\n    ev: CustomEvent<RequestSelectedDetail>\n  ): void {\n    if (!shouldHandleRequestSelectedEvent(ev)) {\n      return;\n    }\n    navigate(\"/config/lovelace/dashboards\");\n  }\n\n  private _handleManageResources(ev: CustomEvent<RequestSelectedDetail>): void {\n    if (!shouldHandleRequestSelectedEvent(ev)) {\n      return;\n    }\n    navigate(\"/config/lovelace/resources\");\n  }\n\n  private _handleUnusedEntities(ev: CustomEvent<RequestSelectedDetail>): void {\n    if (!shouldHandleRequestSelectedEvent(ev)) {\n      return;\n    }\n    navigate(`${this.route?.prefix}/hass-unused-entities`);\n  }\n\n  private _handleShowVoiceCommandDialog(\n    ev: CustomEvent<RequestSelectedDetail>\n  ): void {\n    if (!shouldHandleRequestSelectedEvent(ev)) {\n      return;\n    }\n    this._showVoiceCommandDialog();\n  }\n\n  private _showVoiceCommandDialog(): void {\n    showVoiceCommandDialog(this, this.hass, { pipeline_id: \"last_used\" });\n  }\n\n  private _handleEnableEditMode(ev: CustomEvent<RequestSelectedDetail>): void {\n    if (!shouldHandleRequestSelectedEvent(ev)) {\n      return;\n    }\n    this._enableEditMode();\n  }\n\n  private _enableEditMode(): void {\n    if (this._yamlMode) {\n      showAlertDialog(this, {\n        text: this.hass!.localize(\"ui.panel.lovelace.editor.yaml_unsupported\"),\n      });\n      return;\n    }\n    if (\n      isStrategyDashboard(this.lovelace!.rawConfig) &&\n      !isLegacyStrategyConfig(this.lovelace!.rawConfig.strategy)\n    ) {\n      showDashboardStrategyEditorDialog(this, {\n        config: this.lovelace!.rawConfig,\n        saveConfig: this.lovelace!.saveConfig,\n        takeControl: () => {\n          showSaveDialog(this, {\n            lovelace: this.lovelace!,\n            mode: \"storage\",\n            narrow: this.narrow!,\n          });\n        },\n        showRawConfigEditor: () => {\n          this.lovelace!.enableFullEditMode();\n        },\n      });\n      return;\n    }\n    this.lovelace!.setEditMode(true);\n  }\n\n  private _editModeDisable(): void {\n    this.lovelace!.setEditMode(false);\n  }\n\n  private _editLovelace() {\n    showEditLovelaceDialog(this, this.lovelace!);\n  }\n\n  private _navigateToView(path: string | number, replace?: boolean) {\n    const url = this.lovelace!.editMode\n      ? `${this.route!.prefix}/${path}?${addSearchParam({ edit: \"1\" })}`\n      : `${this.route!.prefix}/${path}${location.search}`;\n\n    const currentUrl = `${location.pathname}${location.search}`;\n    if (currentUrl !== url) {\n      navigate(url, { replace });\n    }\n  }\n\n  private _editView() {\n    showEditViewDialog(this, {\n      lovelace: this.lovelace!,\n      viewIndex: this._curView as number,\n    });\n  }\n\n  private _moveViewLeft(ev) {\n    ev.stopPropagation();\n    if (this._curView === 0) {\n      return;\n    }\n    const lovelace = this.lovelace!;\n    const oldIndex = this._curView as number;\n    const newIndex = (this._curView as number) - 1;\n    this._curView = newIndex;\n    if (!this.config.views[oldIndex].path) {\n      this._navigateToView(newIndex, true);\n    }\n    lovelace.saveConfig(swapView(lovelace.config, oldIndex, newIndex));\n  }\n\n  private _moveViewRight(ev) {\n    ev.stopPropagation();\n    if ((this._curView! as number) + 1 === this.lovelace!.config.views.length) {\n      return;\n    }\n    const lovelace = this.lovelace!;\n    const oldIndex = this._curView as number;\n    const newIndex = (this._curView as number) + 1;\n    this._curView = newIndex;\n    if (!this.config.views[oldIndex].path) {\n      this._navigateToView(newIndex, true);\n    }\n    lovelace.saveConfig(swapView(lovelace.config, oldIndex, newIndex));\n  }\n\n  private _addView() {\n    showEditViewDialog(this, {\n      lovelace: this.lovelace!,\n      saveCallback: (viewIndex: number, viewConfig: LovelaceViewConfig) => {\n        const path = viewConfig.path || viewIndex;\n        this._navigateToView(path);\n      },\n    });\n  }\n\n  private _handleViewSelected(ev) {\n    ev.preventDefault();\n    const viewIndex = ev.detail.selected as number;\n    if (viewIndex !== this._curView) {\n      const path = this.config.views[viewIndex].path || viewIndex;\n      this._navigateToView(path);\n    } else if (!this._editMode) {\n      scrollTo({ behavior: \"smooth\", top: 0 });\n    }\n  }\n\n  private _selectView(viewIndex: HUIRoot[\"_curView\"], force: boolean): void {\n    if (!force && this._curView === viewIndex) {\n      return;\n    }\n\n    viewIndex = viewIndex === undefined ? 0 : viewIndex;\n\n    this._curView = viewIndex;\n\n    if (force) {\n      this._viewCache = {};\n    }\n\n    // Recreate a new element to clear the applied themes.\n    const root = this._viewRoot;\n\n    if (root.lastChild) {\n      root.removeChild(root.lastChild);\n    }\n\n    if (viewIndex === \"hass-unused-entities\") {\n      const unusedEntities = document.createElement(\"hui-unused-entities\");\n      // Wait for promise to resolve so that the element has been upgraded.\n      import(\"./editor/unused-entities/hui-unused-entities\").then(() => {\n        unusedEntities.hass = this.hass!;\n        unusedEntities.lovelace = this.lovelace!;\n        unusedEntities.narrow = this.narrow;\n      });\n      root.appendChild(unusedEntities);\n      return;\n    }\n\n    let view;\n    const viewConfig = this.config.views[viewIndex];\n\n    if (!viewConfig) {\n      this.lovelace!.setEditMode(true);\n      return;\n    }\n\n    if (!force && this._viewCache![viewIndex]) {\n      view = this._viewCache![viewIndex];\n    } else {\n      view = document.createElement(\"hui-view\");\n      view.index = viewIndex;\n      this._viewCache![viewIndex] = view;\n    }\n\n    view.lovelace = this.lovelace;\n    view.hass = this.hass;\n    view.narrow = this.narrow;\n\n    const configBackground = viewConfig.background || this.config.background;\n\n    if (configBackground) {\n      this.style.setProperty(\"--lovelace-background\", configBackground);\n    } else {\n      this.style.removeProperty(\"--lovelace-background\");\n    }\n\n    root.appendChild(view);\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyle,\n      css`\n        :host {\n          -ms-user-select: none;\n          -webkit-user-select: none;\n          -moz-user-select: none;\n        }\n        .header {\n          background-color: var(--app-header-background-color);\n          color: var(--app-header-text-color, white);\n          border-bottom: var(--app-header-border-bottom, none);\n          position: fixed;\n          top: 0;\n          width: var(--mdc-top-app-bar-width, 100%);\n          padding-top: env(safe-area-inset-top);\n          z-index: 4;\n          transition: box-shadow 200ms linear;\n        }\n        :host([scrolled]) .header {\n          box-shadow: var(\n            --mdc-top-app-bar-fixed-box-shadow,\n            0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n            0px 4px 5px 0px rgba(0, 0, 0, 0.14),\n            0px 1px 10px 0px rgba(0, 0, 0, 0.12)\n          );\n        }\n        .edit-mode .header {\n          background-color: var(--app-header-edit-background-color, #455a64);\n          color: var(--app-header-edit-text-color, white);\n        }\n        .toolbar {\n          height: var(--header-height);\n          display: flex;\n          align-items: center;\n          font-size: 20px;\n          padding: 0px 12px;\n          font-weight: 400;\n          box-sizing: border-box;\n        }\n        @media (max-width: 599px) {\n          .toolbar {\n            padding: 0 4px;\n          }\n        }\n        .main-title {\n          margin: var(--margin-title);\n          line-height: 20px;\n          flex-grow: 1;\n        }\n        .action-items {\n          white-space: nowrap;\n          display: flex;\n          align-items: center;\n        }\n        ha-tabs {\n          width: 100%;\n          height: 100%;\n          margin-left: 4px;\n          margin-inline-start: 4px;\n          margin-inline-end: initial;\n        }\n        ha-tabs,\n        paper-tabs {\n          --paper-tabs-selection-bar-color: var(\n            --app-header-selection-bar-color,\n            var(--app-header-text-color, #fff)\n          );\n          text-transform: uppercase;\n        }\n        .edit-mode div[main-title] {\n          pointer-events: auto;\n        }\n        .edit-mode paper-tabs {\n          background-color: var(--app-header-edit-background-color, #455a64);\n          color: var(--app-header-edit-text-color, #fff);\n        }\n        paper-tab.iron-selected .edit-icon {\n          display: inline-flex;\n        }\n        .edit-icon {\n          color: var(--accent-color);\n          padding-left: 8px;\n          padding-inline-start: 8px;\n          vertical-align: middle;\n          --mdc-theme-text-disabled-on-light: var(--disabled-text-color);\n          direction: var(--direction);\n        }\n        .edit-icon.view {\n          display: none;\n        }\n        #add-view {\n          position: absolute;\n          height: 44px;\n        }\n        #add-view ha-svg-icon {\n          background-color: var(--accent-color);\n          border-radius: 4px;\n        }\n        a {\n          color: var(--text-primary-color, white);\n        }\n        mwc-button.warning:not([disabled]) {\n          color: var(--error-color);\n        }\n        #view {\n          position: relative;\n          display: flex;\n          padding-top: calc(var(--header-height) + env(safe-area-inset-top));\n          min-height: 100vh;\n          box-sizing: border-box;\n          padding-left: env(safe-area-inset-left);\n          padding-right: env(safe-area-inset-right);\n          padding-inline-start: env(safe-area-inset-left);\n          padding-inline-end: env(safe-area-inset-right);\n          padding-bottom: env(safe-area-inset-bottom);\n        }\n        hui-view {\n          background: var(\n            --lovelace-background,\n            var(--primary-background-color)\n          );\n        }\n        #view > * {\n          flex: 1 1 100%;\n          max-width: 100%;\n        }\n        /**\n         * In edit mode we have the tab bar on a new line *\n         */\n        .edit-mode #view {\n          padding-top: calc(\n            var(--header-height) + 48px + env(safe-area-inset-top)\n          );\n        }\n        .hide-tab {\n          display: none;\n        }\n        .menu-link {\n          text-decoration: none;\n        }\n        .exit-edit-mode {\n          --mdc-theme-primary: var(--app-header-edit-text-color, #fff);\n          --mdc-button-outline-color: var(--app-header-edit-text-color, #fff);\n          --mdc-typography-button-font-size: 14px;\n        }\n        .child-view-icon {\n          opacity: 0.5;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-root\": HUIRoot;\n  }\n}\n"],"mappings":"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,CAACpC,MAAM,GAAG,IAAI,CAACA,MAAM;QAEzB,MAAMqJ,gBAAgB,GAAGZ,UAAU,CAACa,UAAU,IAAI,IAAI,CAAClJ,MAAM,CAACkJ,UAAU;QAExE,IAAID,gBAAgB,EAAE;UACpB,IAAI,CAACE,KAAK,CAACC,WAAW,CAAC,uBAAuB,EAAEH,gBAAgB,CAAC;QACnE,CAAC,MAAM;UACL,IAAI,CAACE,KAAK,CAACE,cAAc,CAAC,uBAAuB,CAAC;QACpD;QAEAX,IAAI,CAACM,WAAW,CAAChH,IAAI,CAAC;MACxB;IAAC;MAAArE,IAAA;MAAA2L,MAAA;MAAAxL,GAAA;MAAAC,KAAA,EAED,SAAAwL,OAAA,EAAoC;QAClC,OAAO,CACL/M,OAAO,EACPvB,GAAI;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,CACF;MACH;IAAC;EAAA;AAAA,GA17BmBD,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}