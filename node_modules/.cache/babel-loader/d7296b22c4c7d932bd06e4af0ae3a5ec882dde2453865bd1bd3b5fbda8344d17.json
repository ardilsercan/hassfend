{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nconst mdiCancel = \"M12 2C17.5 2 22 6.5 22 12S17.5 22 12 22 2 17.5 2 12 6.5 2 12 2M12 4C10.1 4 8.4 4.6 7.1 5.7L18.3 16.9C19.3 15.5 20 13.8 20 12C20 7.6 16.4 4 12 4M16.9 18.3L5.7 7.1C4.6 8.4 4 10.1 4 12C4 16.4 7.6 20 12 20C13.9 20 15.6 19.4 16.9 18.3Z\";\nconst mdiContentDuplicate = \"M11,17H4A2,2 0 0,1 2,15V3A2,2 0 0,1 4,1H16V3H4V15H11V13L15,16L11,19V17M19,21V7H8V13H6V7A2,2 0 0,1 8,5H19A2,2 0 0,1 21,7V21A2,2 0 0,1 19,23H8A2,2 0 0,1 6,21V19H8V21H19Z\";\nconst mdiDelete = \"M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z\";\nconst mdiHelpCircle = \"M15.07,11.25L14.17,12.17C13.45,12.89 13,13.5 13,15H11V14.5C11,13.39 11.45,12.39 12.17,11.67L13.41,10.41C13.78,10.05 14,9.55 14,9C14,7.89 13.1,7 12,7A2,2 0 0,0 10,9H8A4,4 0 0,1 12,5A4,4 0 0,1 16,9C16,9.88 15.64,10.67 15.07,11.25M13,19H11V17H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12C22,6.47 17.5,2 12,2Z\";\nconst mdiInformationOutline = \"M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M11,17H13V11H11V17Z\";\nconst mdiPlay = \"M8,5.14V19.14L19,12.14L8,5.14Z\";\nconst mdiPlayCircleOutline = \"M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M10,16.5L16,12L10,7.5V16.5Z\";\nconst mdiPlus = \"M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z\";\nconst mdiRobotHappy = \"M22 14H21C21 10.13 17.87 7 14 7H13V5.73C13.6 5.39 14 4.74 14 4C14 2.9 13.11 2 12 2S10 2.9 10 4C10 4.74 10.4 5.39 11 5.73V7H10C6.13 7 3 10.13 3 14H2C1.45 14 1 14.45 1 15V18C1 18.55 1.45 19 2 19H3V20C3 21.11 3.9 22 5 22H19C20.11 22 21 21.11 21 20V19H22C22.55 19 23 18.55 23 18V15C23 14.45 22.55 14 22 14M9.79 16.5C9.4 15.62 8.53 15 7.5 15S5.6 15.62 5.21 16.5C5.08 16.19 5 15.86 5 15.5C5 14.12 6.12 13 7.5 13S10 14.12 10 15.5C10 15.86 9.92 16.19 9.79 16.5M18.79 16.5C18.4 15.62 17.5 15 16.5 15S14.6 15.62 14.21 16.5C14.08 16.19 14 15.86 14 15.5C14 14.12 15.12 13 16.5 13S19 14.12 19 15.5C19 15.86 18.92 16.19 18.79 16.5Z\";\nconst mdiStopCircleOutline = \"M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4M9,9V15H15V9\";\nconst mdiTransitConnection = \"M15,12C15,10.7 14.16,9.6 13,9.18V6.82C14.16,6.4 15,5.3 15,4A3,3 0 0,0 12,1A3,3 0 0,0 9,4C9,5.3 9.84,6.4 11,6.82V9.19C9.84,9.6 9,10.7 9,12C9,13.3 9.84,14.4 11,14.82V17.18C9.84,17.6 9,18.7 9,20A3,3 0 0,0 12,23A3,3 0 0,0 15,20C15,18.7 14.16,17.6 13,17.18V14.82C14.16,14.4 15,13.3 15,12M12,3A1,1 0 0,1 13,4A1,1 0 0,1 12,5A1,1 0 0,1 11,4A1,1 0 0,1 12,3M12,21A1,1 0 0,1 11,20A1,1 0 0,1 12,19A1,1 0 0,1 13,20A1,1 0 0,1 12,21Z\";\nimport \"@lrnwebcomponents/simple-tooltip/simple-tooltip\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { differenceInDays } from \"date-fns/esm\";\nimport { styleMap } from \"lit/directives/style-map\";\nimport { isComponentLoaded } from \"../../../common/config/is_component_loaded\";\nimport { formatShortDateTime } from \"../../../common/datetime/format_date_time\";\nimport { relativeTime } from \"../../../common/datetime/relative_time\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport { computeStateName } from \"../../../common/entity/compute_state_name\";\nimport { navigate } from \"../../../common/navigate\";\nimport \"../../../components/ha-button-related-filter-menu\";\nimport \"../../../components/ha-label\";\nimport \"../../../components/ha-fab\";\nimport \"../../../components/ha-icon-button\";\nimport \"../../../components/ha-icon-overflow-menu\";\nimport \"../../../components/ha-svg-icon\";\nimport { deleteAutomation, duplicateAutomation, fetchAutomationFileConfig, getAutomationStateConfig, showAutomationEditor, triggerAutomationActions } from \"../../../data/automation\";\nimport { showAlertDialog, showConfirmationDialog } from \"../../../dialogs/generic/show-dialog-box\";\nimport \"../../../layouts/hass-tabs-subpage-data-table\";\nimport { haStyle } from \"../../../resources/styles\";\nimport { documentationUrl } from \"../../../util/documentation-url\";\nimport { configSections } from \"../ha-panel-config\";\nimport { showNewAutomationDialog } from \"./show-dialog-new-automation\";\nimport { findRelated } from \"../../../data/search\";\nimport { fetchBlueprints } from \"../../../data/blueprint\";\nimport { UNAVAILABLE } from \"../../../data/entity\";\nlet HaAutomationPicker = _decorate([customElement(\"ha-automation-picker\")], function (_initialize, _LitElement) {\n  class HaAutomationPicker extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaAutomationPicker,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"isWide\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"narrow\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"route\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"automations\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_activeFilters\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_searchParms\",\n      value() {\n        return new URLSearchParams(window.location.search);\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_filteredAutomations\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_filterValue\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_automations\",\n      value() {\n        return memoizeOne((automations, filteredAutomations) => {\n          if (filteredAutomations === null) {\n            return [];\n          }\n          return (filteredAutomations ? automations.filter(automation => filteredAutomations.includes(automation.entity_id)) : automations).map(automation => ({\n            ...automation,\n            name: computeStateName(automation),\n            last_triggered: automation.attributes.last_triggered || undefined,\n            disabled: automation.state === \"off\"\n          }));\n        });\n      }\n    }, {\n      kind: \"field\",\n      key: \"_columns\",\n      value() {\n        return memoizeOne((narrow, _locale) => {\n          const columns = {\n            icon: {\n              title: \"\",\n              label: this.hass.localize(\"ui.panel.config.automation.picker.headers.state\"),\n              type: \"icon\",\n              template: automation => html`<ha-state-icon\n              .hass=${this.hass}\n              .stateObj=${automation}\n              style=${styleMap({\n                color: automation.state === UNAVAILABLE ? \"var(--error-color)\" : \"unset\"\n              })}\n            ></ha-state-icon>`\n            },\n            name: {\n              title: this.hass.localize(\"ui.panel.config.automation.picker.headers.name\"),\n              main: true,\n              sortable: true,\n              filterable: true,\n              direction: \"asc\",\n              grows: true,\n              template: narrow ? automation => {\n                const date = new Date(automation.attributes.last_triggered);\n                const now = new Date();\n                const dayDifference = differenceInDays(now, date);\n                return html`\n                  ${automation.name}\n                  <div class=\"secondary\">\n                    ${this.hass.localize(\"ui.card.automation.last_triggered\")}:\n                    ${automation.attributes.last_triggered ? dayDifference > 3 ? formatShortDateTime(date, this.hass.locale, this.hass.config) : relativeTime(date, this.hass.locale) : this.hass.localize(\"ui.components.relative_time.never\")}\n                  </div>\n                `;\n              } : undefined\n            }\n          };\n          if (!narrow) {\n            columns.last_triggered = {\n              sortable: true,\n              width: \"20%\",\n              title: this.hass.localize(\"ui.card.automation.last_triggered\"),\n              template: automation => {\n                if (!automation.last_triggered) {\n                  return this.hass.localize(\"ui.components.relative_time.never\");\n                }\n                const date = new Date(automation.last_triggered);\n                const now = new Date();\n                const dayDifference = differenceInDays(now, date);\n                return html`\n              ${dayDifference > 3 ? formatShortDateTime(date, this.hass.locale, this.hass.config) : relativeTime(date, this.hass.locale)}\n            `;\n              }\n            };\n          }\n          columns.disabled = this.narrow ? {\n            title: \"\",\n            template: automation => automation.disabled ? html`\n                    <simple-tooltip animation-delay=\"0\" position=\"left\">\n                      ${this.hass.localize(\"ui.panel.config.automation.picker.disabled\")}\n                    </simple-tooltip>\n                    <ha-svg-icon\n                      .path=${mdiCancel}\n                      style=\"color: var(--secondary-text-color)\"\n                    ></ha-svg-icon>\n                  ` : \"\"\n          } : {\n            width: \"20%\",\n            title: \"\",\n            template: automation => automation.disabled ? html`\n                    <ha-label>\n                      ${this.hass.localize(\"ui.panel.config.automation.picker.disabled\")}\n                    </ha-label>\n                  ` : \"\"\n          };\n          columns.actions = {\n            title: \"\",\n            width: this.narrow ? undefined : \"10%\",\n            type: \"overflow-menu\",\n            template: automation => html`\n          <ha-icon-overflow-menu\n            .hass=${this.hass}\n            narrow\n            .items=${[{\n              path: mdiInformationOutline,\n              label: this.hass.localize(\"ui.panel.config.automation.editor.show_info\"),\n              action: () => this._showInfo(automation)\n            }, {\n              path: mdiPlay,\n              label: this.hass.localize(\"ui.panel.config.automation.editor.run\"),\n              action: () => this._runActions(automation)\n            }, {\n              path: mdiTransitConnection,\n              label: this.hass.localize(\"ui.panel.config.automation.editor.show_trace\"),\n              action: () => this._showTrace(automation)\n            }, {\n              divider: true\n            }, {\n              path: mdiContentDuplicate,\n              label: this.hass.localize(\"ui.panel.config.automation.picker.duplicate\"),\n              action: () => this.duplicate(automation)\n            }, {\n              path: automation.state === \"off\" ? mdiPlayCircleOutline : mdiStopCircleOutline,\n              label: automation.state === \"off\" ? this.hass.localize(\"ui.panel.config.automation.editor.enable\") : this.hass.localize(\"ui.panel.config.automation.editor.disable\"),\n              action: () => this._toggle(automation)\n            }, {\n              label: this.hass.localize(\"ui.panel.config.automation.picker.delete\"),\n              path: mdiDelete,\n              action: () => this._deleteConfirm(automation),\n              warning: true\n            }]}\n          >\n          </ha-icon-overflow-menu>\n        `\n          };\n          return columns;\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var _this$hass$user;\n        return html`\n      <hass-tabs-subpage-data-table\n        .hass=${this.hass}\n        .narrow=${this.narrow}\n        back-path=\"/config\"\n        id=\"entity_id\"\n        .route=${this.route}\n        .tabs=${configSections.automations}\n        .activeFilters=${this._activeFilters}\n        .columns=${this._columns(this.narrow, this.hass.locale)}\n        .data=${this._automations(this.automations, this._filteredAutomations)}\n        .empty=${!this.automations.length}\n        @row-click=${this._handleRowClicked}\n        .noDataText=${this.hass.localize(\"ui.panel.config.automation.picker.no_automations\")}\n        @clear-filter=${this._clearFilter}\n        hasFab\n        clickable\n      >\n        <ha-icon-button\n          slot=\"toolbar-icon\"\n          .label=${this.hass.localize(\"ui.common.help\")}\n          .path=${mdiHelpCircle}\n          @click=${this._showHelp}\n        ></ha-icon-button>\n        <ha-button-related-filter-menu\n          slot=\"filter-menu\"\n          .narrow=${this.narrow}\n          .hass=${this.hass}\n          .value=${this._filterValue}\n          exclude-domains='[\"automation\"]'\n          @related-changed=${this._relatedFilterChanged}\n        >\n        </ha-button-related-filter-menu>\n        ${!this.automations.length ? html`<div class=\"empty\" slot=\"empty\">\n              <ha-svg-icon .path=${mdiRobotHappy}></ha-svg-icon>\n              <h1>\n                ${this.hass.localize(\"ui.panel.config.automation.picker.empty_header\")}\n              </h1>\n              <p>\n                ${this.hass.localize(\"ui.panel.config.automation.picker.empty_text_1\")}\n              </p>\n              <p>\n                ${this.hass.localize(\"ui.panel.config.automation.picker.empty_text_2\", {\n          user: ((_this$hass$user = this.hass.user) === null || _this$hass$user === void 0 ? void 0 : _this$hass$user.name) || \"Alice\"\n        })}\n              </p>\n              <a\n                href=${documentationUrl(this.hass, \"/docs/automation/editor/\")}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                <ha-button>\n                  ${this.hass.localize(\"ui.panel.config.common.learn_more\")}\n                </ha-button>\n              </a>\n            </div>` : nothing}\n        <ha-fab\n          slot=\"fab\"\n          .label=${this.hass.localize(\"ui.panel.config.automation.picker.add_automation\")}\n          extended\n          @click=${this._createNew}\n        >\n          <ha-svg-icon slot=\"icon\" .path=${mdiPlus}></ha-svg-icon>\n        </ha-fab>\n      </hass-tabs-subpage-data-table>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"firstUpdated\",\n      value: function firstUpdated() {\n        if (this._searchParms.has(\"blueprint\")) {\n          this._filterBlueprint();\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_filterBlueprint\",\n      value: async function _filterBlueprint() {\n        const blueprint = this._searchParms.get(\"blueprint\");\n        if (!blueprint) {\n          return;\n        }\n        const [related, blueprints] = await Promise.all([findRelated(this.hass, \"automation_blueprint\", blueprint), fetchBlueprints(this.hass, \"automation\")]);\n        this._filteredAutomations = related.automation || [];\n        const blueprintMeta = blueprints[blueprint];\n        this._activeFilters = [this.hass.localize(\"ui.panel.config.automation.picker.filtered_by_blueprint\", {\n          name: !blueprintMeta || \"error\" in blueprintMeta ? blueprint : blueprintMeta.metadata.name || blueprint\n        })];\n      }\n    }, {\n      kind: \"method\",\n      key: \"_relatedFilterChanged\",\n      value: function _relatedFilterChanged(ev) {\n        this._filterValue = ev.detail.value;\n        if (!this._filterValue) {\n          this._clearFilter();\n          return;\n        }\n        this._activeFilters = [ev.detail.filter];\n        this._filteredAutomations = ev.detail.items.automation || null;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_clearFilter\",\n      value: function _clearFilter() {\n        this._filteredAutomations = undefined;\n        this._activeFilters = undefined;\n        this._filterValue = undefined;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_showInfo\",\n      value: function _showInfo(automation) {\n        fireEvent(this, \"hass-more-info\", {\n          entityId: automation.entity_id\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_runActions\",\n      value: function _runActions(automation) {\n        triggerAutomationActions(this.hass, automation.entity_id);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_showTrace\",\n      value: function _showTrace(automation) {\n        if (!automation.attributes.id) {\n          showAlertDialog(this, {\n            text: this.hass.localize(\"ui.panel.config.automation.picker.traces_not_available\")\n          });\n          return;\n        }\n        navigate(`/config/automation/trace/${automation.attributes.id}`);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_toggle\",\n      value: async function _toggle(automation) {\n        const service = automation.state === \"off\" ? \"turn_on\" : \"turn_off\";\n        await this.hass.callService(\"automation\", service, {\n          entity_id: automation.entity_id\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_deleteConfirm\",\n      value: async function _deleteConfirm(automation) {\n        showConfirmationDialog(this, {\n          title: this.hass.localize(\"ui.panel.config.automation.picker.delete_confirm_title\"),\n          text: this.hass.localize(\"ui.panel.config.automation.picker.delete_confirm_text\", {\n            name: automation.name\n          }),\n          confirmText: this.hass.localize(\"ui.common.delete\"),\n          dismissText: this.hass.localize(\"ui.common.cancel\"),\n          confirm: () => this._delete(automation),\n          destructive: true\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_delete\",\n      value: async function _delete(automation) {\n        try {\n          await deleteAutomation(this.hass, automation.attributes.id);\n        } catch (err) {\n          await showAlertDialog(this, {\n            text: err.status_code === 400 ? this.hass.localize(\"ui.panel.config.automation.editor.load_error_not_deletable\") : this.hass.localize(\"ui.panel.config.automation.editor.load_error_unknown\", {\n              err_no: err.status_code\n            })\n          });\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"duplicate\",\n      value: async function duplicate(automation) {\n        try {\n          const config = await fetchAutomationFileConfig(this.hass, automation.attributes.id);\n          duplicateAutomation(config);\n        } catch (err) {\n          if (err.status_code === 404) {\n            const response = await getAutomationStateConfig(this.hass, automation.entity_id);\n            showAutomationEditor({\n              ...response.config,\n              id: undefined\n            });\n            return;\n          }\n          await showAlertDialog(this, {\n            text: this.hass.localize(\"ui.panel.config.automation.editor.load_error_unknown\", {\n              err_no: err.status_code\n            })\n          });\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_showHelp\",\n      value: function _showHelp() {\n        showAlertDialog(this, {\n          title: this.hass.localize(\"ui.panel.config.automation.caption\"),\n          text: html`\n        ${this.hass.localize(\"ui.panel.config.automation.picker.introduction\")}\n        <p>\n          <a\n            href=${documentationUrl(this.hass, \"/docs/automation/editor/\")}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            ${this.hass.localize(\"ui.panel.config.automation.picker.learn_more\")}\n          </a>\n        </p>\n      `\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleRowClicked\",\n      value: function _handleRowClicked(ev) {\n        const automation = this.automations.find(a => a.entity_id === ev.detail.id);\n        if (automation !== null && automation !== void 0 && automation.attributes.id) {\n          navigate(`/config/automation/edit/${automation.attributes.id}`);\n        } else {\n          navigate(`/config/automation/show/${ev.detail.id}`);\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_createNew\",\n      value: function _createNew() {\n        if (isComponentLoaded(this.hass, \"blueprint\")) {\n          showNewAutomationDialog(this, {\n            mode: \"automation\"\n          });\n        } else {\n          navigate(\"/config/automation/edit/new\");\n        }\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [haStyle, css`\n        .empty {\n          --paper-font-headline_-_font-size: 28px;\n          --mdc-icon-size: 80px;\n          max-width: 500px;\n        }\n      `];\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","nothing","customElement","property","state","memoizeOne","differenceInDays","styleMap","isComponentLoaded","formatShortDateTime","relativeTime","fireEvent","computeStateName","navigate","deleteAutomation","duplicateAutomation","fetchAutomationFileConfig","getAutomationStateConfig","showAutomationEditor","triggerAutomationActions","showAlertDialog","showConfirmationDialog","haStyle","documentationUrl","configSections","showNewAutomationDialog","findRelated","fetchBlueprints","UNAVAILABLE","HaAutomationPicker","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","type","Boolean","URLSearchParams","window","location","search","automations","filteredAutomations","filter","automation","includes","entity_id","map","name","last_triggered","attributes","undefined","disabled","narrow","_locale","columns","icon","title","label","hass","localize","template","color","main","sortable","filterable","direction","grows","date","Date","now","dayDifference","locale","config","width","mdiCancel","actions","path","mdiInformationOutline","action","_showInfo","mdiPlay","_runActions","mdiTransitConnection","_showTrace","divider","mdiContentDuplicate","duplicate","mdiPlayCircleOutline","mdiStopCircleOutline","_toggle","mdiDelete","_deleteConfirm","warning","render","_this$hass$user","route","_activeFilters","_columns","_automations","_filteredAutomations","length","_handleRowClicked","_clearFilter","mdiHelpCircle","_showHelp","_filterValue","_relatedFilterChanged","mdiRobotHappy","user","_createNew","mdiPlus","firstUpdated","_searchParms","has","_filterBlueprint","blueprint","get","related","blueprints","Promise","all","blueprintMeta","metadata","ev","detail","items","entityId","id","text","service","callService","confirmText","dismissText","confirm","_delete","destructive","err","status_code","err_no","response","find","a","mode","static","styles"],"sources":["/workspaces/frontend/src/panels/config/automation/ha-automation-picker.ts"],"sourcesContent":["import {\n  mdiCancel,\n  mdiContentDuplicate,\n  mdiDelete,\n  mdiHelpCircle,\n  mdiInformationOutline,\n  mdiPlay,\n  mdiPlayCircleOutline,\n  mdiPlus,\n  mdiRobotHappy,\n  mdiStopCircleOutline,\n  mdiTransitConnection,\n} from \"@mdi/js\";\nimport \"@lrnwebcomponents/simple-tooltip/simple-tooltip\";\nimport {\n  css,\n  CSSResultGroup,\n  html,\n  LitElement,\n  nothing,\n  TemplateResult,\n} from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { differenceInDays } from \"date-fns/esm\";\nimport { styleMap } from \"lit/directives/style-map\";\nimport { isComponentLoaded } from \"../../../common/config/is_component_loaded\";\nimport { formatShortDateTime } from \"../../../common/datetime/format_date_time\";\nimport { relativeTime } from \"../../../common/datetime/relative_time\";\nimport { fireEvent, HASSDomEvent } from \"../../../common/dom/fire_event\";\nimport { computeStateName } from \"../../../common/entity/compute_state_name\";\nimport { navigate } from \"../../../common/navigate\";\nimport type {\n  DataTableColumnContainer,\n  RowClickedEvent,\n} from \"../../../components/data-table/ha-data-table\";\nimport \"../../../components/ha-button-related-filter-menu\";\nimport \"../../../components/ha-label\";\nimport \"../../../components/ha-fab\";\nimport \"../../../components/ha-icon-button\";\nimport \"../../../components/ha-icon-overflow-menu\";\nimport \"../../../components/ha-svg-icon\";\nimport {\n  AutomationEntity,\n  deleteAutomation,\n  duplicateAutomation,\n  fetchAutomationFileConfig,\n  getAutomationStateConfig,\n  showAutomationEditor,\n  triggerAutomationActions,\n} from \"../../../data/automation\";\nimport {\n  showAlertDialog,\n  showConfirmationDialog,\n} from \"../../../dialogs/generic/show-dialog-box\";\nimport \"../../../layouts/hass-tabs-subpage-data-table\";\nimport { haStyle } from \"../../../resources/styles\";\nimport { HomeAssistant, Route } from \"../../../types\";\nimport { documentationUrl } from \"../../../util/documentation-url\";\nimport { configSections } from \"../ha-panel-config\";\nimport { showNewAutomationDialog } from \"./show-dialog-new-automation\";\nimport { findRelated } from \"../../../data/search\";\nimport { fetchBlueprints } from \"../../../data/blueprint\";\nimport { UNAVAILABLE } from \"../../../data/entity\";\n\ntype AutomationItem = AutomationEntity & {\n  name: string;\n  last_triggered?: string | undefined;\n  disabled: boolean;\n};\n\n@customElement(\"ha-automation-picker\")\nclass HaAutomationPicker extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ type: Boolean }) public isWide = false;\n\n  @property({ type: Boolean }) public narrow = false;\n\n  @property({ attribute: false }) public route!: Route;\n\n  @property({ attribute: false }) public automations!: AutomationEntity[];\n\n  @state() private _activeFilters?: string[];\n\n  @state() private _searchParms = new URLSearchParams(window.location.search);\n\n  @state() private _filteredAutomations?: string[] | null;\n\n  @state() private _filterValue?;\n\n  private _automations = memoizeOne(\n    (\n      automations: AutomationEntity[],\n      filteredAutomations?: string[] | null\n    ): AutomationItem[] => {\n      if (filteredAutomations === null) {\n        return [];\n      }\n      return (\n        filteredAutomations\n          ? automations.filter((automation) =>\n              filteredAutomations!.includes(automation.entity_id)\n            )\n          : automations\n      ).map((automation) => ({\n        ...automation,\n        name: computeStateName(automation),\n        last_triggered: automation.attributes.last_triggered || undefined,\n        disabled: automation.state === \"off\",\n      }));\n    }\n  );\n\n  private _columns = memoizeOne(\n    (narrow: boolean, _locale): DataTableColumnContainer => {\n      const columns: DataTableColumnContainer<AutomationItem> = {\n        icon: {\n          title: \"\",\n          label: this.hass.localize(\n            \"ui.panel.config.automation.picker.headers.state\"\n          ),\n          type: \"icon\",\n          template: (automation) =>\n            html`<ha-state-icon\n              .hass=${this.hass}\n              .stateObj=${automation}\n              style=${styleMap({\n                color:\n                  automation.state === UNAVAILABLE\n                    ? \"var(--error-color)\"\n                    : \"unset\",\n              })}\n            ></ha-state-icon>`,\n        },\n        name: {\n          title: this.hass.localize(\n            \"ui.panel.config.automation.picker.headers.name\"\n          ),\n          main: true,\n          sortable: true,\n          filterable: true,\n          direction: \"asc\",\n          grows: true,\n          template: narrow\n            ? (automation) => {\n                const date = new Date(automation.attributes.last_triggered);\n                const now = new Date();\n                const dayDifference = differenceInDays(now, date);\n                return html`\n                  ${automation.name}\n                  <div class=\"secondary\">\n                    ${this.hass.localize(\"ui.card.automation.last_triggered\")}:\n                    ${automation.attributes.last_triggered\n                      ? dayDifference > 3\n                        ? formatShortDateTime(\n                            date,\n                            this.hass.locale,\n                            this.hass.config\n                          )\n                        : relativeTime(date, this.hass.locale)\n                      : this.hass.localize(\"ui.components.relative_time.never\")}\n                  </div>\n                `;\n              }\n            : undefined,\n        },\n      };\n      if (!narrow) {\n        columns.last_triggered = {\n          sortable: true,\n          width: \"20%\",\n          title: this.hass.localize(\"ui.card.automation.last_triggered\"),\n          template: (automation) => {\n            if (!automation.last_triggered) {\n              return this.hass.localize(\"ui.components.relative_time.never\");\n            }\n            const date = new Date(automation.last_triggered);\n            const now = new Date();\n            const dayDifference = differenceInDays(now, date);\n            return html`\n              ${dayDifference > 3\n                ? formatShortDateTime(date, this.hass.locale, this.hass.config)\n                : relativeTime(date, this.hass.locale)}\n            `;\n          },\n        };\n      }\n\n      columns.disabled = this.narrow\n        ? {\n            title: \"\",\n            template: (automation) =>\n              automation.disabled\n                ? html`\n                    <simple-tooltip animation-delay=\"0\" position=\"left\">\n                      ${this.hass.localize(\n                        \"ui.panel.config.automation.picker.disabled\"\n                      )}\n                    </simple-tooltip>\n                    <ha-svg-icon\n                      .path=${mdiCancel}\n                      style=\"color: var(--secondary-text-color)\"\n                    ></ha-svg-icon>\n                  `\n                : \"\",\n          }\n        : {\n            width: \"20%\",\n            title: \"\",\n            template: (automation) =>\n              automation.disabled\n                ? html`\n                    <ha-label>\n                      ${this.hass.localize(\n                        \"ui.panel.config.automation.picker.disabled\"\n                      )}\n                    </ha-label>\n                  `\n                : \"\",\n          };\n\n      columns.actions = {\n        title: \"\",\n        width: this.narrow ? undefined : \"10%\",\n        type: \"overflow-menu\",\n        template: (automation) => html`\n          <ha-icon-overflow-menu\n            .hass=${this.hass}\n            narrow\n            .items=${[\n              {\n                path: mdiInformationOutline,\n                label: this.hass.localize(\n                  \"ui.panel.config.automation.editor.show_info\"\n                ),\n                action: () => this._showInfo(automation),\n              },\n              {\n                path: mdiPlay,\n                label: this.hass.localize(\n                  \"ui.panel.config.automation.editor.run\"\n                ),\n                action: () => this._runActions(automation),\n              },\n              {\n                path: mdiTransitConnection,\n                label: this.hass.localize(\n                  \"ui.panel.config.automation.editor.show_trace\"\n                ),\n                action: () => this._showTrace(automation),\n              },\n              {\n                divider: true,\n              },\n              {\n                path: mdiContentDuplicate,\n                label: this.hass.localize(\n                  \"ui.panel.config.automation.picker.duplicate\"\n                ),\n                action: () => this.duplicate(automation),\n              },\n              {\n                path:\n                  automation.state === \"off\"\n                    ? mdiPlayCircleOutline\n                    : mdiStopCircleOutline,\n                label:\n                  automation.state === \"off\"\n                    ? this.hass.localize(\n                        \"ui.panel.config.automation.editor.enable\"\n                      )\n                    : this.hass.localize(\n                        \"ui.panel.config.automation.editor.disable\"\n                      ),\n                action: () => this._toggle(automation),\n              },\n              {\n                label: this.hass.localize(\n                  \"ui.panel.config.automation.picker.delete\"\n                ),\n                path: mdiDelete,\n                action: () => this._deleteConfirm(automation),\n                warning: true,\n              },\n            ]}\n          >\n          </ha-icon-overflow-menu>\n        `,\n      };\n      return columns;\n    }\n  );\n\n  protected render(): TemplateResult {\n    return html`\n      <hass-tabs-subpage-data-table\n        .hass=${this.hass}\n        .narrow=${this.narrow}\n        back-path=\"/config\"\n        id=\"entity_id\"\n        .route=${this.route}\n        .tabs=${configSections.automations}\n        .activeFilters=${this._activeFilters}\n        .columns=${this._columns(this.narrow, this.hass.locale)}\n        .data=${this._automations(this.automations, this._filteredAutomations)}\n        .empty=${!this.automations.length}\n        @row-click=${this._handleRowClicked}\n        .noDataText=${this.hass.localize(\n          \"ui.panel.config.automation.picker.no_automations\"\n        )}\n        @clear-filter=${this._clearFilter}\n        hasFab\n        clickable\n      >\n        <ha-icon-button\n          slot=\"toolbar-icon\"\n          .label=${this.hass.localize(\"ui.common.help\")}\n          .path=${mdiHelpCircle}\n          @click=${this._showHelp}\n        ></ha-icon-button>\n        <ha-button-related-filter-menu\n          slot=\"filter-menu\"\n          .narrow=${this.narrow}\n          .hass=${this.hass}\n          .value=${this._filterValue}\n          exclude-domains='[\"automation\"]'\n          @related-changed=${this._relatedFilterChanged}\n        >\n        </ha-button-related-filter-menu>\n        ${!this.automations.length\n          ? html`<div class=\"empty\" slot=\"empty\">\n              <ha-svg-icon .path=${mdiRobotHappy}></ha-svg-icon>\n              <h1>\n                ${this.hass.localize(\n                  \"ui.panel.config.automation.picker.empty_header\"\n                )}\n              </h1>\n              <p>\n                ${this.hass.localize(\n                  \"ui.panel.config.automation.picker.empty_text_1\"\n                )}\n              </p>\n              <p>\n                ${this.hass.localize(\n                  \"ui.panel.config.automation.picker.empty_text_2\",\n                  { user: this.hass.user?.name || \"Alice\" }\n                )}\n              </p>\n              <a\n                href=${documentationUrl(this.hass, \"/docs/automation/editor/\")}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                <ha-button>\n                  ${this.hass.localize(\"ui.panel.config.common.learn_more\")}\n                </ha-button>\n              </a>\n            </div>`\n          : nothing}\n        <ha-fab\n          slot=\"fab\"\n          .label=${this.hass.localize(\n            \"ui.panel.config.automation.picker.add_automation\"\n          )}\n          extended\n          @click=${this._createNew}\n        >\n          <ha-svg-icon slot=\"icon\" .path=${mdiPlus}></ha-svg-icon>\n        </ha-fab>\n      </hass-tabs-subpage-data-table>\n    `;\n  }\n\n  firstUpdated() {\n    if (this._searchParms.has(\"blueprint\")) {\n      this._filterBlueprint();\n    }\n  }\n\n  private async _filterBlueprint() {\n    const blueprint = this._searchParms.get(\"blueprint\");\n    if (!blueprint) {\n      return;\n    }\n    const [related, blueprints] = await Promise.all([\n      findRelated(this.hass, \"automation_blueprint\", blueprint),\n      fetchBlueprints(this.hass, \"automation\"),\n    ]);\n    this._filteredAutomations = related.automation || [];\n    const blueprintMeta = blueprints[blueprint];\n    this._activeFilters = [\n      this.hass.localize(\n        \"ui.panel.config.automation.picker.filtered_by_blueprint\",\n        {\n          name:\n            !blueprintMeta || \"error\" in blueprintMeta\n              ? blueprint\n              : blueprintMeta.metadata.name || blueprint,\n        }\n      ),\n    ];\n  }\n\n  private _relatedFilterChanged(ev: CustomEvent) {\n    this._filterValue = ev.detail.value;\n    if (!this._filterValue) {\n      this._clearFilter();\n      return;\n    }\n    this._activeFilters = [ev.detail.filter];\n    this._filteredAutomations = ev.detail.items.automation || null;\n  }\n\n  private _clearFilter() {\n    this._filteredAutomations = undefined;\n    this._activeFilters = undefined;\n    this._filterValue = undefined;\n  }\n\n  private _showInfo(automation: any) {\n    fireEvent(this, \"hass-more-info\", { entityId: automation.entity_id });\n  }\n\n  private _runActions(automation: any) {\n    triggerAutomationActions(this.hass, automation.entity_id);\n  }\n\n  private _showTrace(automation: any) {\n    if (!automation.attributes.id) {\n      showAlertDialog(this, {\n        text: this.hass.localize(\n          \"ui.panel.config.automation.picker.traces_not_available\"\n        ),\n      });\n      return;\n    }\n    navigate(`/config/automation/trace/${automation.attributes.id}`);\n  }\n\n  private async _toggle(automation): Promise<void> {\n    const service = automation.state === \"off\" ? \"turn_on\" : \"turn_off\";\n    await this.hass.callService(\"automation\", service, {\n      entity_id: automation.entity_id,\n    });\n  }\n\n  private async _deleteConfirm(automation) {\n    showConfirmationDialog(this, {\n      title: this.hass.localize(\n        \"ui.panel.config.automation.picker.delete_confirm_title\"\n      ),\n      text: this.hass.localize(\n        \"ui.panel.config.automation.picker.delete_confirm_text\",\n        { name: automation.name }\n      ),\n      confirmText: this.hass!.localize(\"ui.common.delete\"),\n      dismissText: this.hass!.localize(\"ui.common.cancel\"),\n      confirm: () => this._delete(automation),\n      destructive: true,\n    });\n  }\n\n  private async _delete(automation) {\n    try {\n      await deleteAutomation(this.hass, automation.attributes.id);\n    } catch (err: any) {\n      await showAlertDialog(this, {\n        text:\n          err.status_code === 400\n            ? this.hass.localize(\n                \"ui.panel.config.automation.editor.load_error_not_deletable\"\n              )\n            : this.hass.localize(\n                \"ui.panel.config.automation.editor.load_error_unknown\",\n                { err_no: err.status_code }\n              ),\n      });\n    }\n  }\n\n  private async duplicate(automation) {\n    try {\n      const config = await fetchAutomationFileConfig(\n        this.hass,\n        automation.attributes.id\n      );\n      duplicateAutomation(config);\n    } catch (err: any) {\n      if (err.status_code === 404) {\n        const response = await getAutomationStateConfig(\n          this.hass,\n          automation.entity_id\n        );\n        showAutomationEditor({ ...response.config, id: undefined });\n        return;\n      }\n      await showAlertDialog(this, {\n        text: this.hass.localize(\n          \"ui.panel.config.automation.editor.load_error_unknown\",\n          { err_no: err.status_code }\n        ),\n      });\n    }\n  }\n\n  private _showHelp() {\n    showAlertDialog(this, {\n      title: this.hass.localize(\"ui.panel.config.automation.caption\"),\n      text: html`\n        ${this.hass.localize(\"ui.panel.config.automation.picker.introduction\")}\n        <p>\n          <a\n            href=${documentationUrl(this.hass, \"/docs/automation/editor/\")}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            ${this.hass.localize(\n              \"ui.panel.config.automation.picker.learn_more\"\n            )}\n          </a>\n        </p>\n      `,\n    });\n  }\n\n  private _handleRowClicked(ev: HASSDomEvent<RowClickedEvent>) {\n    const automation = this.automations.find(\n      (a) => a.entity_id === ev.detail.id\n    );\n\n    if (automation?.attributes.id) {\n      navigate(`/config/automation/edit/${automation.attributes.id}`);\n    } else {\n      navigate(`/config/automation/show/${ev.detail.id}`);\n    }\n  }\n\n  private _createNew() {\n    if (isComponentLoaded(this.hass, \"blueprint\")) {\n      showNewAutomationDialog(this, { mode: \"automation\" });\n    } else {\n      navigate(\"/config/automation/edit/new\");\n    }\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyle,\n      css`\n        .empty {\n          --paper-font-headline_-_font-size: 28px;\n          --mdc-icon-size: 80px;\n          max-width: 500px;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-automation-picker\": HaAutomationPicker;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}