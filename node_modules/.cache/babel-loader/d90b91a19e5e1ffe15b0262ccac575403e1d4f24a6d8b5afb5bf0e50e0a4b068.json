{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _decorate from \"@babel/runtime/helpers/decorate\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _templateObject, _templateObject2;\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport { css, html, LitElement, unsafeCSS } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { styleMap } from \"lit/directives/style-map\";\nimport { computeAttributeNameDisplay } from \"../../common/entity/compute_attribute_display\";\nimport { stateColorCss } from \"../../common/entity/state_color\";\nimport \"../../components/ha-control-slider\";\nimport { UNAVAILABLE } from \"../../data/entity\";\nimport { DOMAIN_ATTRIBUTES_UNITS } from \"../../data/entity_attributes\";\nexport function generateTiltSliderTrackBackgroundGradient() {\n  var count = 24;\n  var minStrokeWidth = 0.2;\n  var gradient = [];\n  for (var i = 0; i < count; i++) {\n    var stopOffset1 = i / count;\n    var stopOffset2 = stopOffset1 + i / Math.pow(count, 2) * (1 - minStrokeWidth) + minStrokeWidth / count;\n    if (i !== 0) {\n      gradient.push([stopOffset1, \"transparent\"]);\n    }\n    gradient.push([stopOffset1, \"var(--control-slider-color)\"]);\n    gradient.push([stopOffset2, \"var(--control-slider-color)\"]);\n    gradient.push([stopOffset2, \"transparent\"]);\n  }\n  return unsafeCSS(gradient.map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n      stop = _ref2[0],\n      color = _ref2[1];\n    return \"\".concat(color, \" \").concat(stop * 100, \"%\");\n  }).join(\", \"));\n}\nvar GRADIENT = generateTiltSliderTrackBackgroundGradient();\nexport var HaStateControlInfoCoverTiltPosition = _decorate([customElement(\"ha-state-control-cover-tilt-position\")], function (_initialize, _LitElement) {\n  var HaStateControlInfoCoverTiltPosition = /*#__PURE__*/function (_LitElement2) {\n    _inherits(HaStateControlInfoCoverTiltPosition, _LitElement2);\n    function HaStateControlInfoCoverTiltPosition() {\n      var _this;\n      _classCallCheck(this, HaStateControlInfoCoverTiltPosition);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, HaStateControlInfoCoverTiltPosition, [].concat(args));\n      _initialize(_assertThisInitialized(_this));\n      return _this;\n    }\n    return _createClass(HaStateControlInfoCoverTiltPosition);\n  }(_LitElement);\n  return {\n    F: HaStateControlInfoCoverTiltPosition,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"stateObj\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"value\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"updated\",\n      value: function updated(changedProp) {\n        if (changedProp.has(\"stateObj\")) {\n          this.value = this.stateObj.attributes.current_tilt_position != null ? Math.round(this.stateObj.attributes.current_tilt_position) : undefined;\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_valueChanged\",\n      value: function _valueChanged(ev) {\n        var value = ev.detail.value;\n        if (isNaN(value)) return;\n        this.hass.callService(\"cover\", \"set_cover_tilt_position\", {\n          entity_id: this.stateObj.entity_id,\n          tilt_position: value\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var openColor = stateColorCss(this.stateObj, \"open\");\n        var color = stateColorCss(this.stateObj);\n        return html(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      <ha-control-slider\\n        vertical\\n        .value=\", \"\\n        min=\\\"0\\\"\\n        max=\\\"100\\\"\\n        mode=\\\"cursor\\\"\\n        @value-changed=\", \"\\n        .ariaLabel=\", \"\\n        style=\", \"\\n        .disabled=\", \"\\n        .unit=\", \"\\n        .locale=\", \"\\n      >\\n        <div slot=\\\"background\\\" class=\\\"gradient\\\"></div>\\n      </ha-control-slider>\\n    \"])), this.value, this._valueChanged, computeAttributeNameDisplay(this.hass.localize, this.stateObj, this.hass.entities, \"current_tilt_position\"), styleMap({\n          // Use open color for inactive state to avoid grey slider that looks disabled\n          \"--state-cover-inactive-color\": openColor,\n          \"--control-slider-color\": color,\n          \"--control-slider-background\": color\n        }), this.stateObj.state === UNAVAILABLE, DOMAIN_ATTRIBUTES_UNITS.cover.current_tilt_position, this.hass.locale);\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n      ha-control-slider {\\n        height: 45vh;\\n        max-height: 320px;\\n        min-height: 200px;\\n        --control-slider-thickness: 100px;\\n        --control-slider-border-radius: 24px;\\n        --control-slider-color: var(--primary-color);\\n        --control-slider-background: var(--disabled-color);\\n        --control-slider-background-opacity: 0.2;\\n        --control-slider-tooltip-font-size: 20px;\\n      }\\n      .gradient {\\n        background: -webkit-linear-gradient(top, \", \");\\n        opacity: 0.6;\\n      }\\n    \"])), GRADIENT);\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","unsafeCSS","customElement","property","state","styleMap","computeAttributeNameDisplay","stateColorCss","UNAVAILABLE","DOMAIN_ATTRIBUTES_UNITS","generateTiltSliderTrackBackgroundGradient","count","minStrokeWidth","gradient","i","stopOffset1","stopOffset2","Math","pow","push","map","_ref","_ref2","_slicedToArray","stop","color","concat","join","GRADIENT","HaStateControlInfoCoverTiltPosition","_decorate","_initialize","_LitElement","_LitElement2","_inherits","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","_assertThisInitialized","_createClass","F","d","kind","decorators","attribute","key","value","updated","changedProp","has","stateObj","attributes","current_tilt_position","round","undefined","_valueChanged","ev","detail","isNaN","hass","callService","entity_id","tilt_position","render","openColor","_templateObject","_taggedTemplateLiteral","localize","entities","cover","locale","static","styles","_templateObject2"],"sources":["/workspaces/frontend/src/state-control/cover/ha-state-control-cover-tilt-position.ts"],"sourcesContent":["import {\n  css,\n  CSSResultGroup,\n  html,\n  LitElement,\n  TemplateResult,\n  unsafeCSS,\n} from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { styleMap } from \"lit/directives/style-map\";\nimport { computeAttributeNameDisplay } from \"../../common/entity/compute_attribute_display\";\nimport { stateColorCss } from \"../../common/entity/state_color\";\nimport \"../../components/ha-control-slider\";\nimport { CoverEntity } from \"../../data/cover\";\nimport { UNAVAILABLE } from \"../../data/entity\";\nimport { DOMAIN_ATTRIBUTES_UNITS } from \"../../data/entity_attributes\";\nimport { HomeAssistant } from \"../../types\";\n\nexport function generateTiltSliderTrackBackgroundGradient() {\n  const count = 24;\n  const minStrokeWidth = 0.2;\n  const gradient: [number, string][] = [];\n\n  for (let i = 0; i < count; i++) {\n    const stopOffset1 = i / count;\n    const stopOffset2 =\n      stopOffset1 +\n      (i / count ** 2) * (1 - minStrokeWidth) +\n      minStrokeWidth / count;\n\n    if (i !== 0) {\n      gradient.push([stopOffset1, \"transparent\"]);\n    }\n    gradient.push([stopOffset1, \"var(--control-slider-color)\"]);\n    gradient.push([stopOffset2, \"var(--control-slider-color)\"]);\n    gradient.push([stopOffset2, \"transparent\"]);\n  }\n\n  return unsafeCSS(\n    gradient\n      .map(([stop, color]) => `${color} ${(stop as number) * 100}%`)\n      .join(\", \")\n  );\n}\n\nconst GRADIENT = generateTiltSliderTrackBackgroundGradient();\n\n@customElement(\"ha-state-control-cover-tilt-position\")\nexport class HaStateControlInfoCoverTiltPosition extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public stateObj!: CoverEntity;\n\n  @state() value?: number;\n\n  protected updated(changedProp: Map<string | number | symbol, unknown>): void {\n    if (changedProp.has(\"stateObj\")) {\n      this.value =\n        this.stateObj.attributes.current_tilt_position != null\n          ? Math.round(this.stateObj.attributes.current_tilt_position)\n          : undefined;\n    }\n  }\n\n  private _valueChanged(ev: CustomEvent) {\n    const value = (ev.detail as any).value;\n    if (isNaN(value)) return;\n\n    this.hass.callService(\"cover\", \"set_cover_tilt_position\", {\n      entity_id: this.stateObj!.entity_id,\n      tilt_position: value,\n    });\n  }\n\n  protected render(): TemplateResult {\n    const openColor = stateColorCss(this.stateObj, \"open\");\n    const color = stateColorCss(this.stateObj);\n\n    return html`\n      <ha-control-slider\n        vertical\n        .value=${this.value}\n        min=\"0\"\n        max=\"100\"\n        mode=\"cursor\"\n        @value-changed=${this._valueChanged}\n        .ariaLabel=${computeAttributeNameDisplay(\n          this.hass.localize,\n          this.stateObj,\n          this.hass.entities,\n          \"current_tilt_position\"\n        )}\n        style=${styleMap({\n          // Use open color for inactive state to avoid grey slider that looks disabled\n          \"--state-cover-inactive-color\": openColor,\n          \"--control-slider-color\": color,\n          \"--control-slider-background\": color,\n        })}\n        .disabled=${this.stateObj.state === UNAVAILABLE}\n        .unit=${DOMAIN_ATTRIBUTES_UNITS.cover.current_tilt_position}\n        .locale=${this.hass.locale}\n      >\n        <div slot=\"background\" class=\"gradient\"></div>\n      </ha-control-slider>\n    `;\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      ha-control-slider {\n        height: 45vh;\n        max-height: 320px;\n        min-height: 200px;\n        --control-slider-thickness: 100px;\n        --control-slider-border-radius: 24px;\n        --control-slider-color: var(--primary-color);\n        --control-slider-background: var(--disabled-color);\n        --control-slider-background-opacity: 0.2;\n        --control-slider-tooltip-font-size: 20px;\n      }\n      .gradient {\n        background: -webkit-linear-gradient(top, ${GRADIENT});\n        opacity: 0.6;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-state-control-cover-tilt-position\": HaStateControlInfoCoverTiltPosition;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}