{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { hideOthers } from './aria-hidden.js';\n\n/**\n * A controller for handling modal state on the elements with `dialog` and `alertdialog` role.\n * See https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-modal\n *\n * Note, the actual `role` and `aria-modal` attributes are supposed to be handled by the\n * consumer web component. This is done in to ensure the controller only does one thing.\n */\nexport var AriaModalController = /*#__PURE__*/function () {\n  /**\n   * @param {HTMLElement} host\n   */\n  function AriaModalController(host, callback) {\n    _classCallCheck(this, AriaModalController);\n    /**\n     * The controller host element.\n     *\n     * @type {HTMLElement}\n     */\n    this.host = host;\n\n    /**\n     * The callback used to detect which element\n     * to use as a target. Defaults to the host.\n     *\n     * @type {Function}\n     */\n    this.callback = typeof callback === 'function' ? callback : function () {\n      return host;\n    };\n  }\n\n  /**\n   * Make the controller host modal by hiding other elements from screen readers\n   * using `aria-hidden` attribute (can be replaced with `inert` in the future).\n   *\n   * The method name is chosen to align with the one provided by native `<dialog>`:\n   * https://developer.mozilla.org/en-US/docs/Web/API/HTMLDialogElement/showModal\n   */\n  _createClass(AriaModalController, [{\n    key: \"showModal\",\n    value: function showModal() {\n      var targets = this.callback();\n      this.__showOthers = hideOthers(targets);\n    }\n\n    /**\n     * Remove `aria-hidden` from other elements unless there are any other\n     * controller hosts on the page activated by using `showModal()` call.\n     */\n  }, {\n    key: \"close\",\n    value: function close() {\n      if (this.__showOthers) {\n        this.__showOthers();\n        this.__showOthers = null;\n      }\n    }\n  }]);\n  return AriaModalController;\n}();","map":{"version":3,"names":["hideOthers","AriaModalController","host","callback","_classCallCheck","_createClass","key","value","showModal","targets","__showOthers","close"],"sources":["/workspaces/frontend/node_modules/@vaadin/a11y-base/src/aria-modal-controller.js"],"sourcesContent":["/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { hideOthers } from './aria-hidden.js';\n\n/**\n * A controller for handling modal state on the elements with `dialog` and `alertdialog` role.\n * See https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-modal\n *\n * Note, the actual `role` and `aria-modal` attributes are supposed to be handled by the\n * consumer web component. This is done in to ensure the controller only does one thing.\n */\nexport class AriaModalController {\n  /**\n   * @param {HTMLElement} host\n   */\n  constructor(host, callback) {\n    /**\n     * The controller host element.\n     *\n     * @type {HTMLElement}\n     */\n    this.host = host;\n\n    /**\n     * The callback used to detect which element\n     * to use as a target. Defaults to the host.\n     *\n     * @type {Function}\n     */\n    this.callback = typeof callback === 'function' ? callback : () => host;\n  }\n\n  /**\n   * Make the controller host modal by hiding other elements from screen readers\n   * using `aria-hidden` attribute (can be replaced with `inert` in the future).\n   *\n   * The method name is chosen to align with the one provided by native `<dialog>`:\n   * https://developer.mozilla.org/en-US/docs/Web/API/HTMLDialogElement/showModal\n   */\n  showModal() {\n    const targets = this.callback();\n    this.__showOthers = hideOthers(targets);\n  }\n\n  /**\n   * Remove `aria-hidden` from other elements unless there are any other\n   * controller hosts on the page activated by using `showModal()` call.\n   */\n  close() {\n    if (this.__showOthers) {\n      this.__showOthers();\n      this.__showOthers = null;\n    }\n  }\n}\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA,SAASA,UAAU,QAAQ,kBAAkB;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAaC,mBAAmB;EAC9B;AACF;AACA;EACE,SAAAA,oBAAYC,IAAI,EAAEC,QAAQ,EAAE;IAAAC,eAAA,OAAAH,mBAAA;IAC1B;AACJ;AACA;AACA;AACA;IACI,IAAI,CAACC,IAAI,GAAGA,IAAI;;IAEhB;AACJ;AACA;AACA;AACA;AACA;IACI,IAAI,CAACC,QAAQ,GAAG,OAAOA,QAAQ,KAAK,UAAU,GAAGA,QAAQ,GAAG;MAAA,OAAMD,IAAI;IAAA;EACxE;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANEG,YAAA,CAAAJ,mBAAA;IAAAK,GAAA;IAAAC,KAAA,EAOA,SAAAC,UAAA,EAAY;MACV,IAAMC,OAAO,GAAG,IAAI,CAACN,QAAQ,CAAC,CAAC;MAC/B,IAAI,CAACO,YAAY,GAAGV,UAAU,CAACS,OAAO,CAAC;IACzC;;IAEA;AACF;AACA;AACA;EAHE;IAAAH,GAAA;IAAAC,KAAA,EAIA,SAAAI,MAAA,EAAQ;MACN,IAAI,IAAI,CAACD,YAAY,EAAE;QACrB,IAAI,CAACA,YAAY,CAAC,CAAC;QACnB,IAAI,CAACA,YAAY,GAAG,IAAI;MAC1B;IACF;EAAC;EAAA,OAAAT,mBAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}