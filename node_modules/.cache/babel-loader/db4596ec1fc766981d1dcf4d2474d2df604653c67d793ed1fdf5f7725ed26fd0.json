{"ast":null,"code":"import { subscribeUser, userCollection } from \"../data/ws-user\";\nimport { clearState } from \"../util/ha-pref-storage\";\nexport default (superClass => class extends superClass {\n  firstUpdated(changedProps) {\n    super.firstUpdated(changedProps);\n    this.addEventListener(\"hass-logout\", () => this._handleLogout());\n    this.addEventListener(\"hass-refresh-current-user\", () => {\n      userCollection(this.hass.connection).refresh();\n    });\n  }\n  hassConnected() {\n    super.hassConnected();\n    subscribeUser(this.hass.connection, user => this._updateHass({\n      user\n    }));\n  }\n  async _handleLogout() {\n    try {\n      await this.hass.auth.revoke();\n      this.hass.connection.close();\n      clearState();\n      document.location.href = \"/\";\n    } catch (err) {\n      // eslint-disable-next-line\n      console.error(err);\n      alert(\"Log out failed\");\n    }\n  }\n});","map":{"version":3,"names":["subscribeUser","userCollection","clearState","superClass","firstUpdated","changedProps","addEventListener","_handleLogout","hass","connection","refresh","hassConnected","user","_updateHass","auth","revoke","close","document","location","href","err","console","error","alert"],"sources":["/workspaces/frontend/src/state/auth-mixin.ts"],"sourcesContent":["import { subscribeUser, userCollection } from \"../data/ws-user\";\nimport { Constructor } from \"../types\";\nimport { clearState } from \"../util/ha-pref-storage\";\nimport { HassBaseEl } from \"./hass-base-mixin\";\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    \"hass-refresh-current-user\": undefined;\n  }\n}\n\nexport default <T extends Constructor<HassBaseEl>>(superClass: T) =>\n  class extends superClass {\n    protected firstUpdated(changedProps) {\n      super.firstUpdated(changedProps);\n      this.addEventListener(\"hass-logout\", () => this._handleLogout());\n      this.addEventListener(\"hass-refresh-current-user\", () => {\n        userCollection(this.hass!.connection).refresh();\n      });\n    }\n\n    protected hassConnected() {\n      super.hassConnected();\n      subscribeUser(this.hass!.connection, (user) =>\n        this._updateHass({ user })\n      );\n    }\n\n    private async _handleLogout() {\n      try {\n        await this.hass!.auth.revoke();\n        this.hass!.connection.close();\n        clearState();\n        document.location.href = \"/\";\n      } catch (err: any) {\n        // eslint-disable-next-line\n        console.error(err);\n        alert(\"Log out failed\");\n      }\n    }\n  };\n"],"mappings":"AAAA,SAASA,aAAa,EAAEC,cAAc,QAAQ,iBAAiB;AAE/D,SAASC,UAAU,QAAQ,yBAAyB;AAUpD,gBAAmDC,UAAa,IAC9D,cAAcA,UAAU,CAAC;EACbC,YAAYA,CAACC,YAAY,EAAE;IACnC,KAAK,CAACD,YAAY,CAACC,YAAY,CAAC;IAChC,IAAI,CAACC,gBAAgB,CAAC,aAAa,EAAE,MAAM,IAAI,CAACC,aAAa,CAAC,CAAC,CAAC;IAChE,IAAI,CAACD,gBAAgB,CAAC,2BAA2B,EAAE,MAAM;MACvDL,cAAc,CAAC,IAAI,CAACO,IAAI,CAAEC,UAAU,CAAC,CAACC,OAAO,CAAC,CAAC;IACjD,CAAC,CAAC;EACJ;EAEUC,aAAaA,CAAA,EAAG;IACxB,KAAK,CAACA,aAAa,CAAC,CAAC;IACrBX,aAAa,CAAC,IAAI,CAACQ,IAAI,CAAEC,UAAU,EAAGG,IAAI,IACxC,IAAI,CAACC,WAAW,CAAC;MAAED;IAAK,CAAC,CAC3B,CAAC;EACH;EAEA,MAAcL,aAAaA,CAAA,EAAG;IAC5B,IAAI;MACF,MAAM,IAAI,CAACC,IAAI,CAAEM,IAAI,CAACC,MAAM,CAAC,CAAC;MAC9B,IAAI,CAACP,IAAI,CAAEC,UAAU,CAACO,KAAK,CAAC,CAAC;MAC7Bd,UAAU,CAAC,CAAC;MACZe,QAAQ,CAACC,QAAQ,CAACC,IAAI,GAAG,GAAG;IAC9B,CAAC,CAAC,OAAOC,GAAQ,EAAE;MACjB;MACAC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MAClBG,KAAK,CAAC,gBAAgB,CAAC;IACzB;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}