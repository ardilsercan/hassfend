{"ast":null,"code":"import { utcToZonedTime, zonedTimeToUtc } from \"date-fns-tz\";\nimport { TimeZone } from \"../../data/translation\";\nvar calcZonedDate = function calcZonedDate(date, tz, fn, options) {\n  var inputZoned = utcToZonedTime(date, tz);\n  var fnZoned = fn(inputZoned, options);\n  if (fnZoned instanceof Date) {\n    return zonedTimeToUtc(fnZoned, tz);\n  }\n  return fnZoned;\n};\nexport var calcDate = function calcDate(date, fn, locale, config, options) {\n  return locale.time_zone === TimeZone.server ? calcZonedDate(date, config.time_zone, fn, options) : fn(date, options);\n};\nexport var calcDateProperty = function calcDateProperty(date, fn, locale, config, options) {\n  return locale.time_zone === TimeZone.server ? calcZonedDate(date, config.time_zone, fn, options) : fn(date, options);\n};","map":{"version":3,"names":["utcToZonedTime","zonedTimeToUtc","TimeZone","calcZonedDate","date","tz","fn","options","inputZoned","fnZoned","Date","calcDate","locale","config","time_zone","server","calcDateProperty"],"sources":["/workspaces/frontend/src/common/datetime/calc_date.ts"],"sourcesContent":["import { utcToZonedTime, zonedTimeToUtc } from \"date-fns-tz\";\nimport { HassConfig } from \"home-assistant-js-websocket\";\nimport { FrontendLocaleData, TimeZone } from \"../../data/translation\";\n\nconst calcZonedDate = (\n  date: Date,\n  tz: string,\n  fn: (date: Date, options?: any) => Date | number | boolean,\n  options?\n) => {\n  const inputZoned = utcToZonedTime(date, tz);\n  const fnZoned = fn(inputZoned, options);\n  if (fnZoned instanceof Date) {\n    return zonedTimeToUtc(fnZoned, tz) as Date;\n  }\n  return fnZoned;\n};\n\nexport const calcDate = (\n  date: Date,\n  fn: (date: Date, options?: any) => Date,\n  locale: FrontendLocaleData,\n  config: HassConfig,\n  options?\n) =>\n  locale.time_zone === TimeZone.server\n    ? (calcZonedDate(date, config.time_zone, fn, options) as Date)\n    : fn(date, options);\n\nexport const calcDateProperty = (\n  date: Date,\n  fn: (date: Date, options?: any) => boolean | number,\n  locale: FrontendLocaleData,\n  config: HassConfig,\n  options?\n) =>\n  locale.time_zone === TimeZone.server\n    ? (calcZonedDate(date, config.time_zone, fn, options) as number | boolean)\n    : fn(date, options);\n"],"mappings":"AAAA,SAASA,cAAc,EAAEC,cAAc,QAAQ,aAAa;AAE5D,SAA6BC,QAAQ,QAAQ,wBAAwB;AAErE,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CACjBC,IAAU,EACVC,EAAU,EACVC,EAA0D,EAC1DC,OAAQ,EACL;EACH,IAAMC,UAAU,GAAGR,cAAc,CAACI,IAAI,EAAEC,EAAE,CAAC;EAC3C,IAAMI,OAAO,GAAGH,EAAE,CAACE,UAAU,EAAED,OAAO,CAAC;EACvC,IAAIE,OAAO,YAAYC,IAAI,EAAE;IAC3B,OAAOT,cAAc,CAACQ,OAAO,EAAEJ,EAAE,CAAC;EACpC;EACA,OAAOI,OAAO;AAChB,CAAC;AAED,OAAO,IAAME,QAAQ,GAAG,SAAXA,QAAQA,CACnBP,IAAU,EACVE,EAAuC,EACvCM,MAA0B,EAC1BC,MAAkB,EAClBN,OAAQ;EAAA,OAERK,MAAM,CAACE,SAAS,KAAKZ,QAAQ,CAACa,MAAM,GAC/BZ,aAAa,CAACC,IAAI,EAAES,MAAM,CAACC,SAAS,EAAER,EAAE,EAAEC,OAAO,CAAC,GACnDD,EAAE,CAACF,IAAI,EAAEG,OAAO,CAAC;AAAA;AAEvB,OAAO,IAAMS,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAC3BZ,IAAU,EACVE,EAAmD,EACnDM,MAA0B,EAC1BC,MAAkB,EAClBN,OAAQ;EAAA,OAERK,MAAM,CAACE,SAAS,KAAKZ,QAAQ,CAACa,MAAM,GAC/BZ,aAAa,CAACC,IAAI,EAAES,MAAM,CAACC,SAAS,EAAER,EAAE,EAAEC,OAAO,CAAC,GACnDD,EAAE,CAACF,IAAI,EAAEG,OAAO,CAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}