{"ast":null,"code":"/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport ApplyShim from '../src/apply-shim.js';\nimport templateMap from '../src/template-map.js';\n// prettier-ignore\nimport { getIsExtends, toCssText, elementHasBuiltCss } from '../src/style-util.js';\nimport * as ApplyShimUtils from '../src/apply-shim-utils.js';\n// prettier-ignore\nimport { getComputedStyleValue as _getComputedStyleValue, updateNativeProperties } from '../src/common-utils.js';\nimport { CustomStyleInterfaceInterface } from '../src/custom-style-interface.js'; // eslint-disable-line @typescript-eslint/no-unused-vars\n// prettier-ignore\nimport { nativeCssVariables, nativeShadow, cssBuild, disableRuntime } from '../src/style-settings.js';\n\n/** @const {ApplyShim} */\nvar applyShim = new ApplyShim();\nvar ApplyShimInterface = /*#__PURE__*/function () {\n  function ApplyShimInterface() {\n    _classCallCheck(this, ApplyShimInterface);\n    /** @type {?CustomStyleInterfaceInterface} */\n    this.customStyleInterface = null;\n    applyShim['invalidCallback'] = ApplyShimUtils.invalidate;\n  }\n  _createClass(ApplyShimInterface, [{\n    key: \"ensure\",\n    value: function ensure() {\n      var _this = this;\n      if (this.customStyleInterface) {\n        return;\n      }\n      if (window.ShadyCSS.CustomStyleInterface) {\n        this.customStyleInterface = /** @type {!CustomStyleInterfaceInterface} */window.ShadyCSS.CustomStyleInterface;\n        this.customStyleInterface['transformCallback'] = function (style) {\n          applyShim.transformCustomStyle(style);\n        };\n        this.customStyleInterface['validateCallback'] = function () {\n          requestAnimationFrame(function () {\n            if (_this.customStyleInterface['enqueued']) {\n              _this.flushCustomStyles();\n            }\n          });\n        };\n      }\n    }\n    /**\n     * @param {!HTMLTemplateElement} template\n     * @param {string} elementName\n     */\n  }, {\n    key: \"prepareTemplate\",\n    value: function prepareTemplate(template, elementName) {\n      this.ensure();\n      if (elementHasBuiltCss(template)) {\n        return;\n      }\n      templateMap[elementName] = template;\n      var ast = applyShim.transformTemplate(template, elementName);\n      // save original style ast to use for revalidating instances\n      template['_styleAst'] = ast;\n    }\n  }, {\n    key: \"flushCustomStyles\",\n    value: function flushCustomStyles() {\n      this.ensure();\n      if (!this.customStyleInterface) {\n        return;\n      }\n      var styles = this.customStyleInterface['processStyles']();\n      if (!this.customStyleInterface['enqueued']) {\n        return;\n      }\n      for (var i = 0; i < styles.length; i++) {\n        var cs = styles[i];\n        var style = this.customStyleInterface['getStyleForCustomStyle'](cs);\n        if (style) {\n          applyShim.transformCustomStyle(style);\n        }\n      }\n      this.customStyleInterface['enqueued'] = false;\n    }\n    /**\n     * @param {HTMLElement} element\n     * @param {Object=} properties\n     */\n  }, {\n    key: \"styleSubtree\",\n    value: function styleSubtree(element, properties) {\n      this.ensure();\n      if (properties) {\n        updateNativeProperties(element, properties);\n      }\n      if (element.shadowRoot) {\n        this.styleElement(element);\n        var shadowChildren = /** @type {!ParentNode} */element.shadowRoot.children || element.shadowRoot.childNodes;\n        for (var i = 0; i < shadowChildren.length; i++) {\n          this.styleSubtree( /** @type {HTMLElement} */shadowChildren[i]);\n        }\n      } else {\n        var children = element.children || element.childNodes;\n        for (var _i = 0; _i < children.length; _i++) {\n          this.styleSubtree( /** @type {HTMLElement} */children[_i]);\n        }\n      }\n    }\n    /**\n     * @param {HTMLElement} element\n     */\n  }, {\n    key: \"styleElement\",\n    value: function styleElement(element) {\n      this.ensure();\n      var _getIsExtends = getIsExtends(element),\n        is = _getIsExtends.is;\n      var template = templateMap[is];\n      if (template && elementHasBuiltCss(template)) {\n        return;\n      }\n      if (template && !ApplyShimUtils.templateIsValid(template)) {\n        // only revalidate template once\n        if (!ApplyShimUtils.templateIsValidating(template)) {\n          this.prepareTemplate(template, is);\n          ApplyShimUtils.startValidatingTemplate(template);\n        }\n        // update this element instance\n        var root = element.shadowRoot;\n        if (root) {\n          var style = /** @type {HTMLStyleElement} */root.querySelector('style');\n          if (style) {\n            // reuse the template's style ast, it has all the original css text\n            style['__cssRules'] = template['_styleAst'];\n            style.textContent = toCssText(template['_styleAst']);\n          }\n        }\n      }\n    }\n    /**\n     * @param {Object=} properties\n     */\n  }, {\n    key: \"styleDocument\",\n    value: function styleDocument(properties) {\n      this.ensure();\n      this.styleSubtree(document.body, properties);\n    }\n  }]);\n  return ApplyShimInterface;\n}();\nif (!window.ShadyCSS || !window.ShadyCSS.ScopingShim) {\n  var applyShimInterface = new ApplyShimInterface();\n  var CustomStyleInterface = window.ShadyCSS && window.ShadyCSS.CustomStyleInterface;\n\n  /** @suppress {duplicate} */\n  window.ShadyCSS = {\n    /**\n     * @param {!HTMLTemplateElement} template\n     * @param {string} elementName\n     * @param {string=} elementExtends\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    prepareTemplate: function prepareTemplate(template, elementName, elementExtends) {\n      applyShimInterface.flushCustomStyles();\n      applyShimInterface.prepareTemplate(template, elementName);\n    },\n    /**\n     * @param {!HTMLTemplateElement} template\n     * @param {string} elementName\n     * @param {string=} elementExtends\n     */\n    prepareTemplateStyles: function prepareTemplateStyles(template, elementName, elementExtends) {\n      window.ShadyCSS.prepareTemplate(template, elementName, elementExtends);\n    },\n    /**\n     * @param {!HTMLTemplateElement} template\n     * @param {string} elementName\n     */\n    prepareTemplateDom: function prepareTemplateDom(template, elementName) {},\n    // eslint-disable-line @typescript-eslint/no-unused-vars\n    /**\n     * @param {!HTMLElement} element\n     * @param {Object=} properties\n     */\n    styleSubtree: function styleSubtree(element, properties) {\n      applyShimInterface.flushCustomStyles();\n      applyShimInterface.styleSubtree(element, properties);\n    },\n    /**\n     * @param {!HTMLElement} element\n     */\n    styleElement: function styleElement(element) {\n      applyShimInterface.flushCustomStyles();\n      applyShimInterface.styleElement(element);\n    },\n    /**\n     * @param {Object=} properties\n     */\n    styleDocument: function styleDocument(properties) {\n      applyShimInterface.flushCustomStyles();\n      applyShimInterface.styleDocument(properties);\n    },\n    /**\n     * @param {Element} element\n     * @param {string} property\n     * @return {string}\n     */\n    getComputedStyleValue: function getComputedStyleValue(element, property) {\n      return _getComputedStyleValue(element, property);\n    },\n    flushCustomStyles: function flushCustomStyles() {\n      applyShimInterface.flushCustomStyles();\n    },\n    nativeCss: nativeCssVariables,\n    nativeShadow: nativeShadow,\n    cssBuild: cssBuild,\n    disableRuntime: disableRuntime\n  };\n  if (CustomStyleInterface) {\n    window.ShadyCSS.CustomStyleInterface = CustomStyleInterface;\n  }\n}\nwindow.ShadyCSS.ApplyShim = applyShim;","map":{"version":3,"names":["_classCallCheck","_createClass","ApplyShim","templateMap","getIsExtends","toCssText","elementHasBuiltCss","ApplyShimUtils","getComputedStyleValue","updateNativeProperties","CustomStyleInterfaceInterface","nativeCssVariables","nativeShadow","cssBuild","disableRuntime","applyShim","ApplyShimInterface","customStyleInterface","invalidate","key","value","ensure","_this","window","ShadyCSS","CustomStyleInterface","style","transformCustomStyle","requestAnimationFrame","flushCustomStyles","prepareTemplate","template","elementName","ast","transformTemplate","styles","i","length","cs","styleSubtree","element","properties","shadowRoot","styleElement","shadowChildren","children","childNodes","_getIsExtends","is","templateIsValid","templateIsValidating","startValidatingTemplate","root","querySelector","textContent","styleDocument","document","body","ScopingShim","applyShimInterface","elementExtends","prepareTemplateStyles","prepareTemplateDom","property","nativeCss"],"sources":["/workspaces/frontend/node_modules/@webcomponents/shadycss/entrypoints/apply-shim.js"],"sourcesContent":["/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport ApplyShim from '../src/apply-shim.js';\nimport templateMap from '../src/template-map.js';\n// prettier-ignore\nimport {getIsExtends, toCssText, elementHasBuiltCss} from '../src/style-util.js';\nimport * as ApplyShimUtils from '../src/apply-shim-utils.js';\n// prettier-ignore\nimport {getComputedStyleValue, updateNativeProperties} from '../src/common-utils.js';\nimport {CustomStyleInterfaceInterface} from '../src/custom-style-interface.js'; // eslint-disable-line @typescript-eslint/no-unused-vars\n// prettier-ignore\nimport {nativeCssVariables, nativeShadow, cssBuild, disableRuntime} from '../src/style-settings.js';\n\n/** @const {ApplyShim} */\nconst applyShim = new ApplyShim();\n\nclass ApplyShimInterface {\n  constructor() {\n    /** @type {?CustomStyleInterfaceInterface} */\n    this.customStyleInterface = null;\n    applyShim['invalidCallback'] = ApplyShimUtils.invalidate;\n  }\n  ensure() {\n    if (this.customStyleInterface) {\n      return;\n    }\n    if (window.ShadyCSS.CustomStyleInterface) {\n      this.customStyleInterface = /** @type {!CustomStyleInterfaceInterface} */ (window\n        .ShadyCSS.CustomStyleInterface);\n      this.customStyleInterface['transformCallback'] = (style) => {\n        applyShim.transformCustomStyle(style);\n      };\n      this.customStyleInterface['validateCallback'] = () => {\n        requestAnimationFrame(() => {\n          if (this.customStyleInterface['enqueued']) {\n            this.flushCustomStyles();\n          }\n        });\n      };\n    }\n  }\n  /**\n   * @param {!HTMLTemplateElement} template\n   * @param {string} elementName\n   */\n  prepareTemplate(template, elementName) {\n    this.ensure();\n    if (elementHasBuiltCss(template)) {\n      return;\n    }\n    templateMap[elementName] = template;\n    let ast = applyShim.transformTemplate(template, elementName);\n    // save original style ast to use for revalidating instances\n    template['_styleAst'] = ast;\n  }\n  flushCustomStyles() {\n    this.ensure();\n    if (!this.customStyleInterface) {\n      return;\n    }\n    let styles = this.customStyleInterface['processStyles']();\n    if (!this.customStyleInterface['enqueued']) {\n      return;\n    }\n    for (let i = 0; i < styles.length; i++) {\n      let cs = styles[i];\n      let style = this.customStyleInterface['getStyleForCustomStyle'](cs);\n      if (style) {\n        applyShim.transformCustomStyle(style);\n      }\n    }\n    this.customStyleInterface['enqueued'] = false;\n  }\n  /**\n   * @param {HTMLElement} element\n   * @param {Object=} properties\n   */\n  styleSubtree(element, properties) {\n    this.ensure();\n    if (properties) {\n      updateNativeProperties(element, properties);\n    }\n    if (element.shadowRoot) {\n      this.styleElement(element);\n      let shadowChildren =\n        /** @type {!ParentNode} */ (element.shadowRoot).children ||\n        element.shadowRoot.childNodes;\n      for (let i = 0; i < shadowChildren.length; i++) {\n        this.styleSubtree(/** @type {HTMLElement} */ (shadowChildren[i]));\n      }\n    } else {\n      let children = element.children || element.childNodes;\n      for (let i = 0; i < children.length; i++) {\n        this.styleSubtree(/** @type {HTMLElement} */ (children[i]));\n      }\n    }\n  }\n  /**\n   * @param {HTMLElement} element\n   */\n  styleElement(element) {\n    this.ensure();\n    let {is} = getIsExtends(element);\n    let template = templateMap[is];\n    if (template && elementHasBuiltCss(template)) {\n      return;\n    }\n    if (template && !ApplyShimUtils.templateIsValid(template)) {\n      // only revalidate template once\n      if (!ApplyShimUtils.templateIsValidating(template)) {\n        this.prepareTemplate(template, is);\n        ApplyShimUtils.startValidatingTemplate(template);\n      }\n      // update this element instance\n      let root = element.shadowRoot;\n      if (root) {\n        let style = /** @type {HTMLStyleElement} */ (root.querySelector(\n          'style'\n        ));\n        if (style) {\n          // reuse the template's style ast, it has all the original css text\n          style['__cssRules'] = template['_styleAst'];\n          style.textContent = toCssText(template['_styleAst']);\n        }\n      }\n    }\n  }\n  /**\n   * @param {Object=} properties\n   */\n  styleDocument(properties) {\n    this.ensure();\n    this.styleSubtree(document.body, properties);\n  }\n}\n\nif (!window.ShadyCSS || !window.ShadyCSS.ScopingShim) {\n  const applyShimInterface = new ApplyShimInterface();\n  let CustomStyleInterface =\n    window.ShadyCSS && window.ShadyCSS.CustomStyleInterface;\n\n  /** @suppress {duplicate} */\n  window.ShadyCSS = {\n    /**\n     * @param {!HTMLTemplateElement} template\n     * @param {string} elementName\n     * @param {string=} elementExtends\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    prepareTemplate(template, elementName, elementExtends) {\n      applyShimInterface.flushCustomStyles();\n      applyShimInterface.prepareTemplate(template, elementName);\n    },\n\n    /**\n     * @param {!HTMLTemplateElement} template\n     * @param {string} elementName\n     * @param {string=} elementExtends\n     */\n    prepareTemplateStyles(template, elementName, elementExtends) {\n      window.ShadyCSS.prepareTemplate(template, elementName, elementExtends);\n    },\n\n    /**\n     * @param {!HTMLTemplateElement} template\n     * @param {string} elementName\n     */\n    prepareTemplateDom(template, elementName) {}, // eslint-disable-line @typescript-eslint/no-unused-vars\n\n    /**\n     * @param {!HTMLElement} element\n     * @param {Object=} properties\n     */\n    styleSubtree(element, properties) {\n      applyShimInterface.flushCustomStyles();\n      applyShimInterface.styleSubtree(element, properties);\n    },\n\n    /**\n     * @param {!HTMLElement} element\n     */\n    styleElement(element) {\n      applyShimInterface.flushCustomStyles();\n      applyShimInterface.styleElement(element);\n    },\n\n    /**\n     * @param {Object=} properties\n     */\n    styleDocument(properties) {\n      applyShimInterface.flushCustomStyles();\n      applyShimInterface.styleDocument(properties);\n    },\n\n    /**\n     * @param {Element} element\n     * @param {string} property\n     * @return {string}\n     */\n    getComputedStyleValue(element, property) {\n      return getComputedStyleValue(element, property);\n    },\n\n    flushCustomStyles() {\n      applyShimInterface.flushCustomStyles();\n    },\n\n    nativeCss: nativeCssVariables,\n    nativeShadow: nativeShadow,\n    cssBuild: cssBuild,\n    disableRuntime: disableRuntime,\n  };\n\n  if (CustomStyleInterface) {\n    window.ShadyCSS.CustomStyleInterface = CustomStyleInterface;\n  }\n}\n\nwindow.ShadyCSS.ApplyShim = applyShim;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAAC,OAAAA,eAAA;AAAA,OAAAC,YAAA;AAEb,OAAOC,SAAS,MAAM,sBAAsB;AAC5C,OAAOC,WAAW,MAAM,wBAAwB;AAChD;AACA,SAAQC,YAAY,EAAEC,SAAS,EAAEC,kBAAkB,QAAO,sBAAsB;AAChF,OAAO,KAAKC,cAAc,MAAM,4BAA4B;AAC5D;AACA,SAAQC,qBAAqB,IAArBA,sBAAqB,EAAEC,sBAAsB,QAAO,wBAAwB;AACpF,SAAQC,6BAA6B,QAAO,kCAAkC,CAAC,CAAC;AAChF;AACA,SAAQC,kBAAkB,EAAEC,YAAY,EAAEC,QAAQ,EAAEC,cAAc,QAAO,0BAA0B;;AAEnG;AACA,IAAMC,SAAS,GAAG,IAAIb,SAAS,CAAC,CAAC;AAAC,IAE5Bc,kBAAkB;EACtB,SAAAA,mBAAA,EAAc;IAAAhB,eAAA,OAAAgB,kBAAA;IACZ;IACA,IAAI,CAACC,oBAAoB,GAAG,IAAI;IAChCF,SAAS,CAAC,iBAAiB,CAAC,GAAGR,cAAc,CAACW,UAAU;EAC1D;EAACjB,YAAA,CAAAe,kBAAA;IAAAG,GAAA;IAAAC,KAAA,EACD,SAAAC,OAAA,EAAS;MAAA,IAAAC,KAAA;MACP,IAAI,IAAI,CAACL,oBAAoB,EAAE;QAC7B;MACF;MACA,IAAIM,MAAM,CAACC,QAAQ,CAACC,oBAAoB,EAAE;QACxC,IAAI,CAACR,oBAAoB,GAAG,6CAA+CM,MAAM,CAC9EC,QAAQ,CAACC,oBAAqB;QACjC,IAAI,CAACR,oBAAoB,CAAC,mBAAmB,CAAC,GAAG,UAACS,KAAK,EAAK;UAC1DX,SAAS,CAACY,oBAAoB,CAACD,KAAK,CAAC;QACvC,CAAC;QACD,IAAI,CAACT,oBAAoB,CAAC,kBAAkB,CAAC,GAAG,YAAM;UACpDW,qBAAqB,CAAC,YAAM;YAC1B,IAAIN,KAAI,CAACL,oBAAoB,CAAC,UAAU,CAAC,EAAE;cACzCK,KAAI,CAACO,iBAAiB,CAAC,CAAC;YAC1B;UACF,CAAC,CAAC;QACJ,CAAC;MACH;IACF;IACA;AACF;AACA;AACA;EAHE;IAAAV,GAAA;IAAAC,KAAA,EAIA,SAAAU,gBAAgBC,QAAQ,EAAEC,WAAW,EAAE;MACrC,IAAI,CAACX,MAAM,CAAC,CAAC;MACb,IAAIf,kBAAkB,CAACyB,QAAQ,CAAC,EAAE;QAChC;MACF;MACA5B,WAAW,CAAC6B,WAAW,CAAC,GAAGD,QAAQ;MACnC,IAAIE,GAAG,GAAGlB,SAAS,CAACmB,iBAAiB,CAACH,QAAQ,EAAEC,WAAW,CAAC;MAC5D;MACAD,QAAQ,CAAC,WAAW,CAAC,GAAGE,GAAG;IAC7B;EAAC;IAAAd,GAAA;IAAAC,KAAA,EACD,SAAAS,kBAAA,EAAoB;MAClB,IAAI,CAACR,MAAM,CAAC,CAAC;MACb,IAAI,CAAC,IAAI,CAACJ,oBAAoB,EAAE;QAC9B;MACF;MACA,IAAIkB,MAAM,GAAG,IAAI,CAAClB,oBAAoB,CAAC,eAAe,CAAC,CAAC,CAAC;MACzD,IAAI,CAAC,IAAI,CAACA,oBAAoB,CAAC,UAAU,CAAC,EAAE;QAC1C;MACF;MACA,KAAK,IAAImB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,MAAM,CAACE,MAAM,EAAED,CAAC,EAAE,EAAE;QACtC,IAAIE,EAAE,GAAGH,MAAM,CAACC,CAAC,CAAC;QAClB,IAAIV,KAAK,GAAG,IAAI,CAACT,oBAAoB,CAAC,wBAAwB,CAAC,CAACqB,EAAE,CAAC;QACnE,IAAIZ,KAAK,EAAE;UACTX,SAAS,CAACY,oBAAoB,CAACD,KAAK,CAAC;QACvC;MACF;MACA,IAAI,CAACT,oBAAoB,CAAC,UAAU,CAAC,GAAG,KAAK;IAC/C;IACA;AACF;AACA;AACA;EAHE;IAAAE,GAAA;IAAAC,KAAA,EAIA,SAAAmB,aAAaC,OAAO,EAAEC,UAAU,EAAE;MAChC,IAAI,CAACpB,MAAM,CAAC,CAAC;MACb,IAAIoB,UAAU,EAAE;QACdhC,sBAAsB,CAAC+B,OAAO,EAAEC,UAAU,CAAC;MAC7C;MACA,IAAID,OAAO,CAACE,UAAU,EAAE;QACtB,IAAI,CAACC,YAAY,CAACH,OAAO,CAAC;QAC1B,IAAII,cAAc,GAChB,0BAA4BJ,OAAO,CAACE,UAAU,CAAEG,QAAQ,IACxDL,OAAO,CAACE,UAAU,CAACI,UAAU;QAC/B,KAAK,IAAIV,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGQ,cAAc,CAACP,MAAM,EAAED,CAAC,EAAE,EAAE;UAC9C,IAAI,CAACG,YAAY,EAAC,0BAA4BK,cAAc,CAACR,CAAC,CAAE,CAAC;QACnE;MACF,CAAC,MAAM;QACL,IAAIS,QAAQ,GAAGL,OAAO,CAACK,QAAQ,IAAIL,OAAO,CAACM,UAAU;QACrD,KAAK,IAAIV,EAAC,GAAG,CAAC,EAAEA,EAAC,GAAGS,QAAQ,CAACR,MAAM,EAAED,EAAC,EAAE,EAAE;UACxC,IAAI,CAACG,YAAY,EAAC,0BAA4BM,QAAQ,CAACT,EAAC,CAAE,CAAC;QAC7D;MACF;IACF;IACA;AACF;AACA;EAFE;IAAAjB,GAAA;IAAAC,KAAA,EAGA,SAAAuB,aAAaH,OAAO,EAAE;MACpB,IAAI,CAACnB,MAAM,CAAC,CAAC;MACb,IAAA0B,aAAA,GAAW3C,YAAY,CAACoC,OAAO,CAAC;QAA3BQ,EAAE,GAAAD,aAAA,CAAFC,EAAE;MACP,IAAIjB,QAAQ,GAAG5B,WAAW,CAAC6C,EAAE,CAAC;MAC9B,IAAIjB,QAAQ,IAAIzB,kBAAkB,CAACyB,QAAQ,CAAC,EAAE;QAC5C;MACF;MACA,IAAIA,QAAQ,IAAI,CAACxB,cAAc,CAAC0C,eAAe,CAAClB,QAAQ,CAAC,EAAE;QACzD;QACA,IAAI,CAACxB,cAAc,CAAC2C,oBAAoB,CAACnB,QAAQ,CAAC,EAAE;UAClD,IAAI,CAACD,eAAe,CAACC,QAAQ,EAAEiB,EAAE,CAAC;UAClCzC,cAAc,CAAC4C,uBAAuB,CAACpB,QAAQ,CAAC;QAClD;QACA;QACA,IAAIqB,IAAI,GAAGZ,OAAO,CAACE,UAAU;QAC7B,IAAIU,IAAI,EAAE;UACR,IAAI1B,KAAK,GAAG,+BAAiC0B,IAAI,CAACC,aAAa,CAC7D,OACF,CAAE;UACF,IAAI3B,KAAK,EAAE;YACT;YACAA,KAAK,CAAC,YAAY,CAAC,GAAGK,QAAQ,CAAC,WAAW,CAAC;YAC3CL,KAAK,CAAC4B,WAAW,GAAGjD,SAAS,CAAC0B,QAAQ,CAAC,WAAW,CAAC,CAAC;UACtD;QACF;MACF;IACF;IACA;AACF;AACA;EAFE;IAAAZ,GAAA;IAAAC,KAAA,EAGA,SAAAmC,cAAcd,UAAU,EAAE;MACxB,IAAI,CAACpB,MAAM,CAAC,CAAC;MACb,IAAI,CAACkB,YAAY,CAACiB,QAAQ,CAACC,IAAI,EAAEhB,UAAU,CAAC;IAC9C;EAAC;EAAA,OAAAzB,kBAAA;AAAA;AAGH,IAAI,CAACO,MAAM,CAACC,QAAQ,IAAI,CAACD,MAAM,CAACC,QAAQ,CAACkC,WAAW,EAAE;EACpD,IAAMC,kBAAkB,GAAG,IAAI3C,kBAAkB,CAAC,CAAC;EACnD,IAAIS,oBAAoB,GACtBF,MAAM,CAACC,QAAQ,IAAID,MAAM,CAACC,QAAQ,CAACC,oBAAoB;;EAEzD;EACAF,MAAM,CAACC,QAAQ,GAAG;IAChB;AACJ;AACA;AACA;AACA;IACI;IACAM,eAAe,WAAAA,gBAACC,QAAQ,EAAEC,WAAW,EAAE4B,cAAc,EAAE;MACrDD,kBAAkB,CAAC9B,iBAAiB,CAAC,CAAC;MACtC8B,kBAAkB,CAAC7B,eAAe,CAACC,QAAQ,EAAEC,WAAW,CAAC;IAC3D,CAAC;IAED;AACJ;AACA;AACA;AACA;IACI6B,qBAAqB,WAAAA,sBAAC9B,QAAQ,EAAEC,WAAW,EAAE4B,cAAc,EAAE;MAC3DrC,MAAM,CAACC,QAAQ,CAACM,eAAe,CAACC,QAAQ,EAAEC,WAAW,EAAE4B,cAAc,CAAC;IACxE,CAAC;IAED;AACJ;AACA;AACA;IACIE,kBAAkB,WAAAA,mBAAC/B,QAAQ,EAAEC,WAAW,EAAE,CAAC,CAAC;IAAE;IAE9C;AACJ;AACA;AACA;IACIO,YAAY,WAAAA,aAACC,OAAO,EAAEC,UAAU,EAAE;MAChCkB,kBAAkB,CAAC9B,iBAAiB,CAAC,CAAC;MACtC8B,kBAAkB,CAACpB,YAAY,CAACC,OAAO,EAAEC,UAAU,CAAC;IACtD,CAAC;IAED;AACJ;AACA;IACIE,YAAY,WAAAA,aAACH,OAAO,EAAE;MACpBmB,kBAAkB,CAAC9B,iBAAiB,CAAC,CAAC;MACtC8B,kBAAkB,CAAChB,YAAY,CAACH,OAAO,CAAC;IAC1C,CAAC;IAED;AACJ;AACA;IACIe,aAAa,WAAAA,cAACd,UAAU,EAAE;MACxBkB,kBAAkB,CAAC9B,iBAAiB,CAAC,CAAC;MACtC8B,kBAAkB,CAACJ,aAAa,CAACd,UAAU,CAAC;IAC9C,CAAC;IAED;AACJ;AACA;AACA;AACA;IACIjC,qBAAqB,WAAAA,sBAACgC,OAAO,EAAEuB,QAAQ,EAAE;MACvC,OAAOvD,sBAAqB,CAACgC,OAAO,EAAEuB,QAAQ,CAAC;IACjD,CAAC;IAEDlC,iBAAiB,WAAAA,kBAAA,EAAG;MAClB8B,kBAAkB,CAAC9B,iBAAiB,CAAC,CAAC;IACxC,CAAC;IAEDmC,SAAS,EAAErD,kBAAkB;IAC7BC,YAAY,EAAEA,YAAY;IAC1BC,QAAQ,EAAEA,QAAQ;IAClBC,cAAc,EAAEA;EAClB,CAAC;EAED,IAAIW,oBAAoB,EAAE;IACxBF,MAAM,CAACC,QAAQ,CAACC,oBAAoB,GAAGA,oBAAoB;EAC7D;AACF;AAEAF,MAAM,CAACC,QAAQ,CAACtB,SAAS,GAAGa,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}