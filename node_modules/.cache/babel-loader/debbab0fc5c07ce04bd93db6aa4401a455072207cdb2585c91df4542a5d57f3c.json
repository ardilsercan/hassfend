{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport { createCollection } from \"home-assistant-js-websocket\";\nimport { debounce } from \"../common/util/debounce\";\nexport var integrationsWithPanel = {\n  matter: \"config/matter\",\n  mqtt: \"config/mqtt\",\n  thread: \"config/thread\",\n  zha: \"config/zha/dashboard\",\n  zwave_js: \"config/zwave_js/dashboard\"\n};\nexport var LogSeverity = /*#__PURE__*/function (LogSeverity) {\n  LogSeverity[LogSeverity[\"CRITICAL\"] = 50] = \"CRITICAL\";\n  LogSeverity[LogSeverity[\"ERROR\"] = 40] = \"ERROR\";\n  LogSeverity[LogSeverity[\"WARNING\"] = 30] = \"WARNING\";\n  LogSeverity[LogSeverity[\"INFO\"] = 20] = \"INFO\";\n  LogSeverity[LogSeverity[\"DEBUG\"] = 10] = \"DEBUG\";\n  LogSeverity[LogSeverity[\"NOTSET\"] = 0] = \"NOTSET\";\n  return LogSeverity;\n}({});\nexport var integrationIssuesUrl = function integrationIssuesUrl(domain, manifest) {\n  return manifest.issue_tracker || \"https://github.com/home-assistant/core/issues?q=is%3Aissue+is%3Aopen+label%3A%22integration%3A+\".concat(domain, \"%22\");\n};\nexport var domainToName = function domainToName(localize, domain, manifest) {\n  return localize(\"component.\".concat(domain, \".title\")) || (manifest === null || manifest === void 0 ? void 0 : manifest.name) || domain;\n};\nexport var fetchIntegrationManifests = function fetchIntegrationManifests(hass, integrations) {\n  var params = {\n    type: \"manifest/list\"\n  };\n  if (integrations) {\n    params.integrations = integrations;\n  }\n  return hass.callWS(params);\n};\nexport var fetchIntegrationManifest = function fetchIntegrationManifest(hass, integration) {\n  return hass.callWS({\n    type: \"manifest/get\",\n    integration: integration\n  });\n};\nexport var fetchIntegrationSetups = function fetchIntegrationSetups(hass) {\n  return hass.callWS({\n    type: \"integration/setup_info\"\n  });\n};\nexport var fetchIntegrationLogInfo = function fetchIntegrationLogInfo(conn) {\n  return conn.sendMessagePromise({\n    type: \"logger/log_info\"\n  });\n};\nexport var setIntegrationLogLevel = function setIntegrationLogLevel(hass, integration, level, persistence) {\n  return hass.callWS({\n    type: \"logger/integration_log_level\",\n    integration: integration,\n    level: level,\n    persistence: persistence\n  });\n};\nvar subscribeLogInfoUpdates = function subscribeLogInfoUpdates(conn, store) {\n  return conn.subscribeEvents(debounce(function () {\n    return fetchIntegrationLogInfo(conn).then(function (log_infos) {\n      return store.setState(log_infos, true);\n    });\n  }, 200, true), \"logging_changed\");\n};\nexport var subscribeLogInfo = function subscribeLogInfo(conn, onChange) {\n  return createCollection(\"_integration_log_info\", fetchIntegrationLogInfo, subscribeLogInfoUpdates, conn, onChange);\n};","map":{"version":3,"names":["createCollection","debounce","integrationsWithPanel","matter","mqtt","thread","zha","zwave_js","LogSeverity","integrationIssuesUrl","domain","manifest","issue_tracker","concat","domainToName","localize","name","fetchIntegrationManifests","hass","integrations","params","type","callWS","fetchIntegrationManifest","integration","fetchIntegrationSetups","fetchIntegrationLogInfo","conn","sendMessagePromise","setIntegrationLogLevel","level","persistence","subscribeLogInfoUpdates","store","subscribeEvents","then","log_infos","setState","subscribeLogInfo","onChange"],"sources":["/Users/sercanardil/Desktop/frontend/src/data/integration.ts"],"sourcesContent":["import { Connection, createCollection } from \"home-assistant-js-websocket\";\nimport { LocalizeFunc } from \"../common/translations/localize\";\nimport { HomeAssistant } from \"../types\";\nimport { debounce } from \"../common/util/debounce\";\n\nexport const integrationsWithPanel = {\n  matter: \"config/matter\",\n  mqtt: \"config/mqtt\",\n  thread: \"config/thread\",\n  zha: \"config/zha/dashboard\",\n  zwave_js: \"config/zwave_js/dashboard\",\n};\n\nexport type IntegrationType =\n  | \"device\"\n  | \"helper\"\n  | \"hub\"\n  | \"service\"\n  | \"hardware\"\n  | \"entity\"\n  | \"system\";\n\nexport interface IntegrationManifest {\n  is_built_in: boolean;\n  domain: string;\n  name: string;\n  config_flow: boolean;\n  documentation: string;\n  issue_tracker?: string;\n  dependencies?: string[];\n  after_dependencies?: string[];\n  codeowners?: string[];\n  requirements?: string[];\n  ssdp?: Array<{ manufacturer?: string; modelName?: string; st?: string }>;\n  zeroconf?: string[];\n  homekit?: { models: string[] };\n  integration_type?: IntegrationType;\n  loggers?: string[];\n  quality_scale?: \"gold\" | \"internal\" | \"platinum\" | \"silver\";\n  iot_class:\n    | \"assumed_state\"\n    | \"cloud_polling\"\n    | \"cloud_push\"\n    | \"local_polling\"\n    | \"local_push\";\n}\nexport interface IntegrationSetup {\n  domain: string;\n  seconds?: number;\n}\n\nexport interface IntegrationLogInfo {\n  domain: string;\n  level?: number;\n}\n\nexport enum LogSeverity {\n  CRITICAL = 50,\n  ERROR = 40,\n  WARNING = 30,\n  INFO = 20,\n  DEBUG = 10,\n  NOTSET = 0,\n}\n\nexport type IntegrationLogPersistance = \"none\" | \"once\" | \"permanent\";\n\nexport const integrationIssuesUrl = (\n  domain: string,\n  manifest: IntegrationManifest\n) =>\n  manifest.issue_tracker ||\n  `https://github.com/home-assistant/core/issues?q=is%3Aissue+is%3Aopen+label%3A%22integration%3A+${domain}%22`;\n\nexport const domainToName = (\n  localize: LocalizeFunc,\n  domain: string,\n  manifest?: IntegrationManifest\n) => localize(`component.${domain}.title`) || manifest?.name || domain;\n\nexport const fetchIntegrationManifests = (\n  hass: HomeAssistant,\n  integrations?: string[]\n) => {\n  const params: any = {\n    type: \"manifest/list\",\n  };\n  if (integrations) {\n    params.integrations = integrations;\n  }\n  return hass.callWS<IntegrationManifest[]>(params);\n};\n\nexport const fetchIntegrationManifest = (\n  hass: HomeAssistant,\n  integration: string\n) => hass.callWS<IntegrationManifest>({ type: \"manifest/get\", integration });\n\nexport const fetchIntegrationSetups = (hass: HomeAssistant) =>\n  hass.callWS<IntegrationSetup[]>({ type: \"integration/setup_info\" });\n\nexport const fetchIntegrationLogInfo = (conn) =>\n  conn.sendMessagePromise({\n    type: \"logger/log_info\",\n  });\n\nexport const setIntegrationLogLevel = (\n  hass: HomeAssistant,\n  integration: string,\n  level: string,\n  persistence: IntegrationLogPersistance\n) =>\n  hass.callWS({\n    type: \"logger/integration_log_level\",\n    integration,\n    level,\n    persistence,\n  });\n\nconst subscribeLogInfoUpdates = (conn, store) =>\n  conn.subscribeEvents(\n    debounce(\n      () =>\n        fetchIntegrationLogInfo(conn).then((log_infos) =>\n          store.setState(log_infos, true)\n        ),\n      200,\n      true\n    ),\n    \"logging_changed\"\n  );\n\nexport const subscribeLogInfo = (\n  conn: Connection,\n  onChange: (devices: IntegrationLogInfo[]) => void\n) =>\n  createCollection<IntegrationLogInfo[]>(\n    \"_integration_log_info\",\n    fetchIntegrationLogInfo,\n    subscribeLogInfoUpdates,\n    conn,\n    onChange\n  );\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}