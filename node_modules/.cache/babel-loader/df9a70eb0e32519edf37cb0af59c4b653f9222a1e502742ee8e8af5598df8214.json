{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\n/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { dedupingMixin } from '@polymer/polymer/lib/utils/mixin.js';\n\n/**\n * A mixin to provide required state and validation logic.\n *\n * @polymerMixin\n */\nexport var ValidateMixin = dedupingMixin(function (superclass) {\n  return /*#__PURE__*/function (_superclass) {\n    _inherits(ValidateMixinClass, _superclass);\n    function ValidateMixinClass() {\n      _classCallCheck(this, ValidateMixinClass);\n      return _callSuper(this, ValidateMixinClass, arguments);\n    }\n    _createClass(ValidateMixinClass, [{\n      key: \"validate\",\n      value:\n      /**\n       * Validates the field and sets the `invalid` property based on the result.\n       *\n       * The method fires a `validated` event with the result of the validation.\n       *\n       * @return {boolean} True if the value is valid.\n       */\n      function validate() {\n        var isValid = this.checkValidity();\n        this._setInvalid(!isValid);\n        this.dispatchEvent(new CustomEvent('validated', {\n          detail: {\n            valid: isValid\n          }\n        }));\n        return isValid;\n      }\n\n      /**\n       * Returns true if the field value satisfies all constraints (if any).\n       *\n       * @return {boolean}\n       */\n    }, {\n      key: \"checkValidity\",\n      value: function checkValidity() {\n        return !this.required || !!this.value;\n      }\n\n      /**\n       * @param {boolean} invalid\n       * @protected\n       */\n    }, {\n      key: \"_setInvalid\",\n      value: function _setInvalid(invalid) {\n        if (this._shouldSetInvalid(invalid)) {\n          this.invalid = invalid;\n        }\n      }\n\n      /**\n       * Override this method to define whether the given `invalid` state should be set.\n       *\n       * @param {boolean} _invalid\n       * @return {boolean}\n       * @protected\n       */\n    }, {\n      key: \"_shouldSetInvalid\",\n      value: function _shouldSetInvalid(_invalid) {\n        return true;\n      }\n\n      /**\n       * Fired whenever the field is validated.\n       *\n       * @event validated\n       * @param {Object} detail\n       * @param {boolean} detail.valid the result of the validation.\n       */\n    }], [{\n      key: \"properties\",\n      get: function get() {\n        return {\n          /**\n           * Set to true when the field is invalid.\n           */\n          invalid: {\n            type: Boolean,\n            reflectToAttribute: true,\n            notify: true,\n            value: false\n          },\n          /**\n           * Specifies that the user must fill in a value.\n           */\n          required: {\n            type: Boolean,\n            reflectToAttribute: true\n          }\n        };\n      }\n    }]);\n    return ValidateMixinClass;\n  }(superclass);\n});","map":{"version":3,"names":["dedupingMixin","ValidateMixin","superclass","_superclass","_inherits","ValidateMixinClass","_classCallCheck","_callSuper","arguments","_createClass","key","value","validate","isValid","checkValidity","_setInvalid","dispatchEvent","CustomEvent","detail","valid","required","invalid","_shouldSetInvalid","_invalid","get","type","Boolean","reflectToAttribute","notify"],"sources":["/workspaces/frontend/node_modules/@vaadin/field-base/src/validate-mixin.js"],"sourcesContent":["/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { dedupingMixin } from '@polymer/polymer/lib/utils/mixin.js';\n\n/**\n * A mixin to provide required state and validation logic.\n *\n * @polymerMixin\n */\nexport const ValidateMixin = dedupingMixin(\n  (superclass) =>\n    class ValidateMixinClass extends superclass {\n      static get properties() {\n        return {\n          /**\n           * Set to true when the field is invalid.\n           */\n          invalid: {\n            type: Boolean,\n            reflectToAttribute: true,\n            notify: true,\n            value: false,\n          },\n\n          /**\n           * Specifies that the user must fill in a value.\n           */\n          required: {\n            type: Boolean,\n            reflectToAttribute: true,\n          },\n        };\n      }\n\n      /**\n       * Validates the field and sets the `invalid` property based on the result.\n       *\n       * The method fires a `validated` event with the result of the validation.\n       *\n       * @return {boolean} True if the value is valid.\n       */\n      validate() {\n        const isValid = this.checkValidity();\n        this._setInvalid(!isValid);\n        this.dispatchEvent(new CustomEvent('validated', { detail: { valid: isValid } }));\n        return isValid;\n      }\n\n      /**\n       * Returns true if the field value satisfies all constraints (if any).\n       *\n       * @return {boolean}\n       */\n      checkValidity() {\n        return !this.required || !!this.value;\n      }\n\n      /**\n       * @param {boolean} invalid\n       * @protected\n       */\n      _setInvalid(invalid) {\n        if (this._shouldSetInvalid(invalid)) {\n          this.invalid = invalid;\n        }\n      }\n\n      /**\n       * Override this method to define whether the given `invalid` state should be set.\n       *\n       * @param {boolean} _invalid\n       * @return {boolean}\n       * @protected\n       */\n      _shouldSetInvalid(_invalid) {\n        return true;\n      }\n\n      /**\n       * Fired whenever the field is validated.\n       *\n       * @event validated\n       * @param {Object} detail\n       * @param {boolean} detail.valid the result of the validation.\n       */\n    },\n);\n"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA,SAASA,aAAa,QAAQ,qCAAqC;;AAEnE;AACA;AACA;AACA;AACA;AACA,OAAO,IAAMC,aAAa,GAAGD,aAAa,CACxC,UAACE,UAAU;EAAA,8BAAAC,WAAA;IAAAC,SAAA,CAAAC,kBAAA,EAAAF,WAAA;IAAA,SAAAE,mBAAA;MAAAC,eAAA,OAAAD,kBAAA;MAAA,OAAAE,UAAA,OAAAF,kBAAA,EAAAG,SAAA;IAAA;IAAAC,YAAA,CAAAJ,kBAAA;MAAAK,GAAA;MAAAC,KAAA;MAwBP;AACN;AACA;AACA;AACA;AACA;AACA;MACM,SAAAC,SAAA,EAAW;QACT,IAAMC,OAAO,GAAG,IAAI,CAACC,aAAa,CAAC,CAAC;QACpC,IAAI,CAACC,WAAW,CAAC,CAACF,OAAO,CAAC;QAC1B,IAAI,CAACG,aAAa,CAAC,IAAIC,WAAW,CAAC,WAAW,EAAE;UAAEC,MAAM,EAAE;YAAEC,KAAK,EAAEN;UAAQ;QAAE,CAAC,CAAC,CAAC;QAChF,OAAOA,OAAO;MAChB;;MAEA;AACN;AACA;AACA;AACA;IAJM;MAAAH,GAAA;MAAAC,KAAA,EAKA,SAAAG,cAAA,EAAgB;QACd,OAAO,CAAC,IAAI,CAACM,QAAQ,IAAI,CAAC,CAAC,IAAI,CAACT,KAAK;MACvC;;MAEA;AACN;AACA;AACA;IAHM;MAAAD,GAAA;MAAAC,KAAA,EAIA,SAAAI,YAAYM,OAAO,EAAE;QACnB,IAAI,IAAI,CAACC,iBAAiB,CAACD,OAAO,CAAC,EAAE;UACnC,IAAI,CAACA,OAAO,GAAGA,OAAO;QACxB;MACF;;MAEA;AACN;AACA;AACA;AACA;AACA;AACA;IANM;MAAAX,GAAA;MAAAC,KAAA,EAOA,SAAAW,kBAAkBC,QAAQ,EAAE;QAC1B,OAAO,IAAI;MACb;;MAEA;AACN;AACA;AACA;AACA;AACA;AACA;IANM;MAAAb,GAAA;MAAAc,GAAA,EAlEA,SAAAA,IAAA,EAAwB;QACtB,OAAO;UACL;AACV;AACA;UACUH,OAAO,EAAE;YACPI,IAAI,EAAEC,OAAO;YACbC,kBAAkB,EAAE,IAAI;YACxBC,MAAM,EAAE,IAAI;YACZjB,KAAK,EAAE;UACT,CAAC;UAED;AACV;AACA;UACUS,QAAQ,EAAE;YACRK,IAAI,EAAEC,OAAO;YACbC,kBAAkB,EAAE;UACtB;QACF,CAAC;MACH;IAAC;IAAA,OAAAtB,kBAAA;EAAA,EArB8BH,UAAU;AAAA,CA2E/C,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}