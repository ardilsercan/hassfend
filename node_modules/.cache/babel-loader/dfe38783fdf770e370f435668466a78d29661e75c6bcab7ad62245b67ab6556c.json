{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _wrapNativeSuper from \"@babel/runtime/helpers/wrapNativeSuper\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"../../../components/entity/ha-state-label-badge\";\nimport { createErrorBadgeConfig } from \"../badges/hui-error-badge\";\nimport { createBadgeElement } from \"../create-element/create-badge-element\";\nexport var HuiBadgePreview = /*#__PURE__*/function (_HTMLElement) {\n  _inherits(HuiBadgePreview, _HTMLElement);\n  function HuiBadgePreview() {\n    var _this;\n    _classCallCheck(this, HuiBadgePreview);\n    _this = _callSuper(this, HuiBadgePreview);\n    _this._hass = void 0;\n    _this._element = void 0;\n    _this._config = void 0;\n    _this.addEventListener(\"ll-rebuild\", function () {\n      _this._cleanup();\n      if (_this._config) {\n        _this.config = _this._config;\n      }\n    });\n    return _this;\n  }\n  _createClass(HuiBadgePreview, [{\n    key: \"_error\",\n    get: function get() {\n      var _this$_element;\n      return ((_this$_element = this._element) === null || _this$_element === void 0 ? void 0 : _this$_element.tagName) === \"HUI-ERROR-CARD\";\n    }\n  }, {\n    key: \"hass\",\n    set: function set(hass) {\n      this._hass = hass;\n      if (this._element) {\n        this._element.hass = hass;\n      }\n    }\n  }, {\n    key: \"error\",\n    set: function set(error) {\n      this._createBadge(createErrorBadgeConfig(\"\".concat(error.type, \": \").concat(error.message)));\n    }\n  }, {\n    key: \"config\",\n    set: function set(configValue) {\n      var curConfig = this._config;\n      this._config = configValue;\n      if (!configValue) {\n        this._cleanup();\n        return;\n      }\n      if (!this._element) {\n        this._createBadge(configValue);\n        return;\n      }\n\n      // in case the element was an error element we always want to recreate it\n      if (!this._error && curConfig && configValue.type === curConfig.type) {\n        this._element.setConfig(configValue);\n      } else {\n        this._createBadge(configValue);\n      }\n    }\n  }, {\n    key: \"_createBadge\",\n    value: function _createBadge(configValue) {\n      this._cleanup();\n      this._element = createBadgeElement(configValue);\n      if (this._hass) {\n        this._element.hass = this._hass;\n      }\n      this.appendChild(this._element);\n    }\n  }, {\n    key: \"_cleanup\",\n    value: function _cleanup() {\n      if (!this._element) {\n        return;\n      }\n      this.removeChild(this._element);\n      this._element = undefined;\n    }\n  }]);\n  return HuiBadgePreview;\n}( /*#__PURE__*/_wrapNativeSuper(HTMLElement));\ncustomElements.define(\"hui-badge-preview\", HuiBadgePreview);","map":{"version":3,"names":["createErrorBadgeConfig","createBadgeElement","HuiBadgePreview","_HTMLElement","_inherits","_this","_classCallCheck","_callSuper","_hass","_element","_config","addEventListener","_cleanup","config","_createClass","key","get","_this$_element","tagName","set","hass","error","_createBadge","concat","type","message","configValue","curConfig","_error","setConfig","value","appendChild","removeChild","undefined","_wrapNativeSuper","HTMLElement","customElements","define"],"sources":["/Users/sercanardil/Desktop/frontend/src/panels/lovelace/editor/hui-badge-preview.ts"],"sourcesContent":["import \"../../../components/entity/ha-state-label-badge\";\nimport { LovelaceBadgeConfig } from \"../../../data/lovelace/config/badge\";\nimport { HomeAssistant } from \"../../../types\";\nimport { createErrorBadgeConfig } from \"../badges/hui-error-badge\";\nimport { createBadgeElement } from \"../create-element/create-badge-element\";\nimport { LovelaceBadge } from \"../types\";\nimport { ConfigError } from \"./types\";\n\nexport class HuiBadgePreview extends HTMLElement {\n  private _hass?: HomeAssistant;\n\n  private _element?: LovelaceBadge;\n\n  private _config?: LovelaceBadgeConfig;\n\n  private get _error() {\n    return this._element?.tagName === \"HUI-ERROR-CARD\";\n  }\n\n  constructor() {\n    super();\n    this.addEventListener(\"ll-rebuild\", () => {\n      this._cleanup();\n      if (this._config) {\n        this.config = this._config;\n      }\n    });\n  }\n\n  set hass(hass: HomeAssistant) {\n    this._hass = hass;\n    if (this._element) {\n      this._element.hass = hass;\n    }\n  }\n\n  set error(error: ConfigError) {\n    this._createBadge(\n      createErrorBadgeConfig(`${error.type}: ${error.message}`)\n    );\n  }\n\n  set config(configValue: LovelaceBadgeConfig) {\n    const curConfig = this._config;\n    this._config = configValue;\n\n    if (!configValue) {\n      this._cleanup();\n      return;\n    }\n\n    if (!this._element) {\n      this._createBadge(configValue);\n      return;\n    }\n\n    // in case the element was an error element we always want to recreate it\n    if (!this._error && curConfig && configValue.type === curConfig.type) {\n      this._element.setConfig(configValue);\n    } else {\n      this._createBadge(configValue);\n    }\n  }\n\n  private _createBadge(configValue: LovelaceBadgeConfig): void {\n    this._cleanup();\n    this._element = createBadgeElement(configValue);\n\n    if (this._hass) {\n      this._element!.hass = this._hass;\n    }\n\n    this.appendChild(this._element!);\n  }\n\n  private _cleanup() {\n    if (!this._element) {\n      return;\n    }\n    this.removeChild(this._element);\n    this._element = undefined;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-badge-preview\": HuiBadgePreview;\n  }\n}\n\ncustomElements.define(\"hui-badge-preview\", HuiBadgePreview);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}