{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport \"@material/mwc-button/mwc-button\";\nconst mdiFire = \"M17.66 11.2C17.43 10.9 17.15 10.64 16.89 10.38C16.22 9.78 15.46 9.35 14.82 8.72C13.33 7.26 13 4.85 13.95 3C13 3.23 12.17 3.75 11.46 4.32C8.87 6.4 7.85 10.07 9.07 13.22C9.11 13.32 9.15 13.42 9.15 13.55C9.15 13.77 9 13.97 8.8 14.05C8.57 14.15 8.33 14.09 8.14 13.93C8.08 13.88 8.04 13.83 8 13.76C6.87 12.33 6.69 10.28 7.45 8.64C5.78 10 4.87 12.3 5 14.47C5.06 14.97 5.12 15.47 5.29 15.97C5.43 16.57 5.7 17.17 6 17.7C7.08 19.43 8.95 20.67 10.96 20.92C13.1 21.19 15.39 20.8 17.03 19.32C18.86 17.66 19.5 15 18.56 12.72L18.43 12.46C18.22 12 17.66 11.2 17.66 11.2M14.5 17.5C14.22 17.74 13.76 18 13.4 18.1C12.28 18.5 11.16 17.94 10.5 17.28C11.69 17 12.4 16.12 12.61 15.23C12.78 14.43 12.46 13.77 12.33 13C12.21 12.26 12.23 11.63 12.5 10.94C12.69 11.32 12.89 11.7 13.13 12C13.9 13 15.11 13.44 15.37 14.8C15.41 14.94 15.43 15.08 15.43 15.23C15.46 16.05 15.1 16.95 14.5 17.5H14.5Z\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport \"../../../../components/entity/ha-entity-picker\";\nimport \"../../../../components/entity/ha-statistic-picker\";\nimport \"../../../../components/ha-dialog\";\nimport \"../../../../components/ha-formfield\";\nimport \"../../../../components/ha-radio\";\nimport \"../../../../components/ha-textfield\";\nimport { emptyGasEnergyPreference, energyStatisticHelpUrl } from \"../../../../data/energy\";\nimport { getDisplayUnit, getStatisticMetadata, isExternalStatistic } from \"../../../../data/recorder\";\nimport { getSensorDeviceClassConvertibleUnits } from \"../../../../data/sensor\";\nimport { haStyle, haStyleDialog } from \"../../../../resources/styles\";\nconst gasDeviceClasses = [\"gas\", \"energy\"];\nconst gasUnitClasses = [\"volume\", \"energy\"];\nexport let DialogEnergyGasSettings = _decorate([customElement(\"dialog-energy-gas-settings\")], function (_initialize, _LitElement) {\n  class DialogEnergyGasSettings extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: DialogEnergyGasSettings,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_params\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_source\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_costs\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_pickedDisplayUnit\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_energy_units\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_gas_units\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_error\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_excludeList\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"showDialog\",\n      value: async function showDialog(params) {\n        var _params$source;\n        this._params = params;\n        this._source = params.source ? {\n          ...params.source\n        } : emptyGasEnergyPreference();\n        this._pickedDisplayUnit = getDisplayUnit(this.hass, (_params$source = params.source) === null || _params$source === void 0 ? void 0 : _params$source.stat_energy_from, params.metadata);\n        this._costs = this._source.entity_energy_price ? \"entity\" : this._source.number_energy_price ? \"number\" : this._source.stat_cost ? \"statistic\" : \"no-costs\";\n        this._energy_units = (await getSensorDeviceClassConvertibleUnits(this.hass, \"energy\")).units;\n        this._gas_units = (await getSensorDeviceClassConvertibleUnits(this.hass, \"gas\")).units;\n        this._excludeList = this._params.gas_sources.map(entry => entry.stat_energy_from).filter(id => {\n          var _this$_source;\n          return id !== ((_this$_source = this._source) === null || _this$_source === void 0 ? void 0 : _this$_source.stat_energy_from);\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"closeDialog\",\n      value: function closeDialog() {\n        this._params = undefined;\n        this._source = undefined;\n        this._pickedDisplayUnit = undefined;\n        this._error = undefined;\n        this._excludeList = undefined;\n        fireEvent(this, \"dialog-closed\", {\n          dialog: this.localName\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var _this$_energy_units, _this$_gas_units;\n        if (!this._params || !this._source) {\n          return nothing;\n        }\n        const pickableUnit = this._params.allowedGasUnitClass === undefined ? [...(this._gas_units || []), ...(this._energy_units || [])].join(\", \") : this._params.allowedGasUnitClass === \"energy\" ? ((_this$_energy_units = this._energy_units) === null || _this$_energy_units === void 0 ? void 0 : _this$_energy_units.join(\", \")) || \"\" : ((_this$_gas_units = this._gas_units) === null || _this$_gas_units === void 0 ? void 0 : _this$_gas_units.join(\", \")) || \"\";\n        const unitPrice = this._pickedDisplayUnit ? `${this.hass.config.currency}/${this._pickedDisplayUnit}` : undefined;\n        const externalSource = this._source.stat_energy_from && isExternalStatistic(this._source.stat_energy_from);\n        return html`\n      <ha-dialog\n        open\n        .heading=${html`<ha-svg-icon\n            .path=${mdiFire}\n            style=\"--mdc-icon-size: 32px;\"\n          ></ha-svg-icon>\n          ${this.hass.localize(\"ui.panel.config.energy.gas.dialog.header\")}`}\n        @closed=${this.closeDialog}\n      >\n        ${this._error ? html`<p class=\"error\">${this._error}</p>` : \"\"}\n        <div>\n          <p>\n            ${this.hass.localize(\"ui.panel.config.energy.gas.dialog.paragraph\")}\n          </p>\n          <p>\n            ${this.hass.localize(\"ui.panel.config.energy.gas.dialog.entity_para\", {\n          unit: pickableUnit\n        })}\n          </p>\n          <p>\n            ${this.hass.localize(\"ui.panel.config.energy.gas.dialog.note_para\")}\n          </p>\n        </div>\n\n        <ha-statistic-picker\n          .hass=${this.hass}\n          .helpMissingEntityUrl=${energyStatisticHelpUrl}\n          .includeUnitClass=${this._params.allowedGasUnitClass || gasUnitClasses}\n          .includeDeviceClass=${gasDeviceClasses}\n          .value=${this._source.stat_energy_from}\n          .label=${this.hass.localize(\"ui.panel.config.energy.gas.dialog.gas_usage\")}\n          .excludeStatistics=${this._excludeList}\n          @value-changed=${this._statisticChanged}\n          dialogInitialFocus\n        ></ha-statistic-picker>\n\n        <p>\n          ${this.hass.localize(\"ui.panel.config.energy.gas.dialog.cost_para\")}\n        </p>\n\n        <ha-formfield\n          .label=${this.hass.localize(\"ui.panel.config.energy.gas.dialog.no_cost\")}\n        >\n          <ha-radio\n            value=\"no-costs\"\n            name=\"costs\"\n            .checked=${this._costs === \"no-costs\"}\n            @change=${this._handleCostChanged}\n          ></ha-radio>\n        </ha-formfield>\n        <ha-formfield\n          .label=${this.hass.localize(\"ui.panel.config.energy.gas.dialog.cost_stat\")}\n        >\n          <ha-radio\n            value=\"statistic\"\n            name=\"costs\"\n            .checked=${this._costs === \"statistic\"}\n            @change=${this._handleCostChanged}\n          ></ha-radio>\n        </ha-formfield>\n        ${this._costs === \"statistic\" ? html`<ha-statistic-picker\n              class=\"price-options\"\n              .hass=${this.hass}\n              statistic-types=\"sum\"\n              .value=${this._source.stat_cost}\n              .label=${`${this.hass.localize(\"ui.panel.config.energy.gas.dialog.cost_stat_input\")} (${this.hass.config.currency})`}\n              @value-changed=${this._priceStatChanged}\n            ></ha-statistic-picker>` : \"\"}\n        <ha-formfield\n          .label=${this.hass.localize(\"ui.panel.config.energy.gas.dialog.cost_entity\")}\n        >\n          <ha-radio\n            value=\"entity\"\n            name=\"costs\"\n            .checked=${this._costs === \"entity\"}\n            .disabled=${externalSource}\n            @change=${this._handleCostChanged}\n          ></ha-radio>\n        </ha-formfield>\n        ${this._costs === \"entity\" ? html`<ha-entity-picker\n              class=\"price-options\"\n              .hass=${this.hass}\n              include-domains='[\"sensor\", \"input_number\"]'\n              .value=${this._source.entity_energy_price}\n              .label=${`${this.hass.localize(\"ui.panel.config.energy.gas.dialog.cost_entity_input\")} ${unitPrice ? ` (${unitPrice})` : \"\"}`}\n              @value-changed=${this._priceEntityChanged}\n            ></ha-entity-picker>` : \"\"}\n        <ha-formfield\n          .label=${this.hass.localize(\"ui.panel.config.energy.gas.dialog.cost_number\")}\n        >\n          <ha-radio\n            value=\"number\"\n            name=\"costs\"\n            .checked=${this._costs === \"number\"}\n            .disabled=${externalSource}\n            @change=${this._handleCostChanged}\n          ></ha-radio>\n        </ha-formfield>\n        ${this._costs === \"number\" ? html`<ha-textfield\n              .label=${`${this.hass.localize(\"ui.panel.config.energy.gas.dialog.cost_number_input\")} ${unitPrice ? ` (${unitPrice})` : \"\"}`}\n              class=\"price-options\"\n              step=\"any\"\n              type=\"number\"\n              .value=${this._source.number_energy_price}\n              @change=${this._numberPriceChanged}\n              .suffix=${unitPrice || \"\"}\n            >\n            </ha-textfield>` : \"\"}\n\n        <mwc-button @click=${this.closeDialog} slot=\"secondaryAction\">\n          ${this.hass.localize(\"ui.common.cancel\")}\n        </mwc-button>\n        <mwc-button\n          @click=${this._save}\n          .disabled=${!this._source.stat_energy_from}\n          slot=\"primaryAction\"\n        >\n          ${this.hass.localize(\"ui.common.save\")}\n        </mwc-button>\n      </ha-dialog>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleCostChanged\",\n      value: function _handleCostChanged(ev) {\n        const input = ev.currentTarget;\n        this._costs = input.value;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_numberPriceChanged\",\n      value: function _numberPriceChanged(ev) {\n        this._source = {\n          ...this._source,\n          number_energy_price: Number(ev.target.value),\n          entity_energy_price: null,\n          stat_cost: null\n        };\n      }\n    }, {\n      kind: \"method\",\n      key: \"_priceStatChanged\",\n      value: function _priceStatChanged(ev) {\n        this._source = {\n          ...this._source,\n          entity_energy_price: null,\n          number_energy_price: null,\n          stat_cost: ev.detail.value\n        };\n      }\n    }, {\n      kind: \"method\",\n      key: \"_priceEntityChanged\",\n      value: function _priceEntityChanged(ev) {\n        this._source = {\n          ...this._source,\n          entity_energy_price: ev.detail.value,\n          number_energy_price: null,\n          stat_cost: null\n        };\n      }\n    }, {\n      kind: \"method\",\n      key: \"_statisticChanged\",\n      value: async function _statisticChanged(ev) {\n        if (ev.detail.value) {\n          const metadata = await getStatisticMetadata(this.hass, [ev.detail.value]);\n          this._pickedDisplayUnit = getDisplayUnit(this.hass, ev.detail.value, metadata[0]);\n        } else {\n          this._pickedDisplayUnit = undefined;\n        }\n        if (isExternalStatistic(ev.detail.value) && this._costs !== \"statistic\") {\n          this._costs = \"no-costs\";\n        }\n        this._source = {\n          ...this._source,\n          stat_energy_from: ev.detail.value\n        };\n      }\n    }, {\n      kind: \"method\",\n      key: \"_save\",\n      value: async function _save() {\n        try {\n          if (this._costs === \"no-costs\") {\n            this._source.entity_energy_price = null;\n            this._source.number_energy_price = null;\n            this._source.stat_cost = null;\n          }\n          await this._params.saveCallback(this._source);\n          this.closeDialog();\n        } catch (err) {\n          this._error = err.message;\n        }\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [haStyle, haStyleDialog, css`\n        ha-dialog {\n          --mdc-dialog-max-width: 430px;\n        }\n        ha-formfield {\n          display: block;\n        }\n        .price-options {\n          display: block;\n          padding-left: 52px;\n          padding-inline-start: 52px;\n          padding-inline-end: initial;\n          margin-top: -8px;\n        }\n      `];\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["mdiFire","css","html","LitElement","nothing","customElement","property","state","fireEvent","emptyGasEnergyPreference","energyStatisticHelpUrl","getDisplayUnit","getStatisticMetadata","isExternalStatistic","getSensorDeviceClassConvertibleUnits","haStyle","haStyleDialog","gasDeviceClasses","gasUnitClasses","DialogEnergyGasSettings","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","showDialog","params","_params$source","_params","_source","source","_pickedDisplayUnit","hass","stat_energy_from","metadata","_costs","entity_energy_price","number_energy_price","stat_cost","_energy_units","units","_gas_units","_excludeList","gas_sources","map","entry","filter","id","_this$_source","closeDialog","undefined","_error","dialog","localName","render","_this$_energy_units","_this$_gas_units","pickableUnit","allowedGasUnitClass","join","unitPrice","config","currency","externalSource","localize","unit","_statisticChanged","_handleCostChanged","_priceStatChanged","_priceEntityChanged","_numberPriceChanged","_save","ev","input","currentTarget","Number","target","detail","saveCallback","err","message","static","styles"],"sources":["/Users/sercanardil/Desktop/frontend/src/panels/config/energy/dialogs/dialog-energy-gas-settings.ts"],"sourcesContent":["import \"@material/mwc-button/mwc-button\";\nimport { mdiFire } from \"@mdi/js\";\nimport { css, CSSResultGroup, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport \"../../../../components/entity/ha-entity-picker\";\nimport \"../../../../components/entity/ha-statistic-picker\";\nimport \"../../../../components/ha-dialog\";\nimport \"../../../../components/ha-formfield\";\nimport \"../../../../components/ha-radio\";\nimport type { HaRadio } from \"../../../../components/ha-radio\";\nimport \"../../../../components/ha-textfield\";\nimport {\n  emptyGasEnergyPreference,\n  GasSourceTypeEnergyPreference,\n  energyStatisticHelpUrl,\n} from \"../../../../data/energy\";\nimport {\n  getDisplayUnit,\n  getStatisticMetadata,\n  isExternalStatistic,\n} from \"../../../../data/recorder\";\nimport { getSensorDeviceClassConvertibleUnits } from \"../../../../data/sensor\";\nimport { HassDialog } from \"../../../../dialogs/make-dialog-manager\";\nimport { haStyle, haStyleDialog } from \"../../../../resources/styles\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { EnergySettingsGasDialogParams } from \"./show-dialogs-energy\";\n\nconst gasDeviceClasses = [\"gas\", \"energy\"];\nconst gasUnitClasses = [\"volume\", \"energy\"];\n\n@customElement(\"dialog-energy-gas-settings\")\nexport class DialogEnergyGasSettings\n  extends LitElement\n  implements HassDialog<EnergySettingsGasDialogParams>\n{\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @state() private _params?: EnergySettingsGasDialogParams;\n\n  @state() private _source?: GasSourceTypeEnergyPreference;\n\n  @state() private _costs?: \"no-costs\" | \"number\" | \"entity\" | \"statistic\";\n\n  @state() private _pickedDisplayUnit?: string | null;\n\n  @state() private _energy_units?: string[];\n\n  @state() private _gas_units?: string[];\n\n  @state() private _error?: string;\n\n  private _excludeList?: string[];\n\n  public async showDialog(\n    params: EnergySettingsGasDialogParams\n  ): Promise<void> {\n    this._params = params;\n    this._source = params.source\n      ? { ...params.source }\n      : emptyGasEnergyPreference();\n    this._pickedDisplayUnit = getDisplayUnit(\n      this.hass,\n      params.source?.stat_energy_from,\n      params.metadata\n    );\n    this._costs = this._source.entity_energy_price\n      ? \"entity\"\n      : this._source.number_energy_price\n        ? \"number\"\n        : this._source.stat_cost\n          ? \"statistic\"\n          : \"no-costs\";\n    this._energy_units = (\n      await getSensorDeviceClassConvertibleUnits(this.hass, \"energy\")\n    ).units;\n    this._gas_units = (\n      await getSensorDeviceClassConvertibleUnits(this.hass, \"gas\")\n    ).units;\n    this._excludeList = this._params.gas_sources\n      .map((entry) => entry.stat_energy_from)\n      .filter((id) => id !== this._source?.stat_energy_from);\n  }\n\n  public closeDialog(): void {\n    this._params = undefined;\n    this._source = undefined;\n    this._pickedDisplayUnit = undefined;\n    this._error = undefined;\n    this._excludeList = undefined;\n    fireEvent(this, \"dialog-closed\", { dialog: this.localName });\n  }\n\n  protected render() {\n    if (!this._params || !this._source) {\n      return nothing;\n    }\n\n    const pickableUnit =\n      this._params.allowedGasUnitClass === undefined\n        ? [...(this._gas_units || []), ...(this._energy_units || [])].join(\", \")\n        : this._params.allowedGasUnitClass === \"energy\"\n          ? this._energy_units?.join(\", \") || \"\"\n          : this._gas_units?.join(\", \") || \"\";\n\n    const unitPrice = this._pickedDisplayUnit\n      ? `${this.hass.config.currency}/${this._pickedDisplayUnit}`\n      : undefined;\n\n    const externalSource =\n      this._source.stat_energy_from &&\n      isExternalStatistic(this._source.stat_energy_from);\n\n    return html`\n      <ha-dialog\n        open\n        .heading=${html`<ha-svg-icon\n            .path=${mdiFire}\n            style=\"--mdc-icon-size: 32px;\"\n          ></ha-svg-icon>\n          ${this.hass.localize(\"ui.panel.config.energy.gas.dialog.header\")}`}\n        @closed=${this.closeDialog}\n      >\n        ${this._error ? html`<p class=\"error\">${this._error}</p>` : \"\"}\n        <div>\n          <p>\n            ${this.hass.localize(\"ui.panel.config.energy.gas.dialog.paragraph\")}\n          </p>\n          <p>\n            ${this.hass.localize(\n              \"ui.panel.config.energy.gas.dialog.entity_para\",\n              { unit: pickableUnit }\n            )}\n          </p>\n          <p>\n            ${this.hass.localize(\"ui.panel.config.energy.gas.dialog.note_para\")}\n          </p>\n        </div>\n\n        <ha-statistic-picker\n          .hass=${this.hass}\n          .helpMissingEntityUrl=${energyStatisticHelpUrl}\n          .includeUnitClass=${this._params.allowedGasUnitClass ||\n          gasUnitClasses}\n          .includeDeviceClass=${gasDeviceClasses}\n          .value=${this._source.stat_energy_from}\n          .label=${this.hass.localize(\n            \"ui.panel.config.energy.gas.dialog.gas_usage\"\n          )}\n          .excludeStatistics=${this._excludeList}\n          @value-changed=${this._statisticChanged}\n          dialogInitialFocus\n        ></ha-statistic-picker>\n\n        <p>\n          ${this.hass.localize(\"ui.panel.config.energy.gas.dialog.cost_para\")}\n        </p>\n\n        <ha-formfield\n          .label=${this.hass.localize(\n            \"ui.panel.config.energy.gas.dialog.no_cost\"\n          )}\n        >\n          <ha-radio\n            value=\"no-costs\"\n            name=\"costs\"\n            .checked=${this._costs === \"no-costs\"}\n            @change=${this._handleCostChanged}\n          ></ha-radio>\n        </ha-formfield>\n        <ha-formfield\n          .label=${this.hass.localize(\n            \"ui.panel.config.energy.gas.dialog.cost_stat\"\n          )}\n        >\n          <ha-radio\n            value=\"statistic\"\n            name=\"costs\"\n            .checked=${this._costs === \"statistic\"}\n            @change=${this._handleCostChanged}\n          ></ha-radio>\n        </ha-formfield>\n        ${this._costs === \"statistic\"\n          ? html`<ha-statistic-picker\n              class=\"price-options\"\n              .hass=${this.hass}\n              statistic-types=\"sum\"\n              .value=${this._source.stat_cost}\n              .label=${`${this.hass.localize(\n                \"ui.panel.config.energy.gas.dialog.cost_stat_input\"\n              )} (${this.hass.config.currency})`}\n              @value-changed=${this._priceStatChanged}\n            ></ha-statistic-picker>`\n          : \"\"}\n        <ha-formfield\n          .label=${this.hass.localize(\n            \"ui.panel.config.energy.gas.dialog.cost_entity\"\n          )}\n        >\n          <ha-radio\n            value=\"entity\"\n            name=\"costs\"\n            .checked=${this._costs === \"entity\"}\n            .disabled=${externalSource}\n            @change=${this._handleCostChanged}\n          ></ha-radio>\n        </ha-formfield>\n        ${this._costs === \"entity\"\n          ? html`<ha-entity-picker\n              class=\"price-options\"\n              .hass=${this.hass}\n              include-domains='[\"sensor\", \"input_number\"]'\n              .value=${this._source.entity_energy_price}\n              .label=${`${this.hass.localize(\n                \"ui.panel.config.energy.gas.dialog.cost_entity_input\"\n              )} ${unitPrice ? ` (${unitPrice})` : \"\"}`}\n              @value-changed=${this._priceEntityChanged}\n            ></ha-entity-picker>`\n          : \"\"}\n        <ha-formfield\n          .label=${this.hass.localize(\n            \"ui.panel.config.energy.gas.dialog.cost_number\"\n          )}\n        >\n          <ha-radio\n            value=\"number\"\n            name=\"costs\"\n            .checked=${this._costs === \"number\"}\n            .disabled=${externalSource}\n            @change=${this._handleCostChanged}\n          ></ha-radio>\n        </ha-formfield>\n        ${this._costs === \"number\"\n          ? html`<ha-textfield\n              .label=${`${this.hass.localize(\n                \"ui.panel.config.energy.gas.dialog.cost_number_input\"\n              )} ${unitPrice ? ` (${unitPrice})` : \"\"}`}\n              class=\"price-options\"\n              step=\"any\"\n              type=\"number\"\n              .value=${this._source.number_energy_price}\n              @change=${this._numberPriceChanged}\n              .suffix=${unitPrice || \"\"}\n            >\n            </ha-textfield>`\n          : \"\"}\n\n        <mwc-button @click=${this.closeDialog} slot=\"secondaryAction\">\n          ${this.hass.localize(\"ui.common.cancel\")}\n        </mwc-button>\n        <mwc-button\n          @click=${this._save}\n          .disabled=${!this._source.stat_energy_from}\n          slot=\"primaryAction\"\n        >\n          ${this.hass.localize(\"ui.common.save\")}\n        </mwc-button>\n      </ha-dialog>\n    `;\n  }\n\n  private _handleCostChanged(ev: CustomEvent) {\n    const input = ev.currentTarget as HaRadio;\n    this._costs = input.value as any;\n  }\n\n  private _numberPriceChanged(ev) {\n    this._source = {\n      ...this._source!,\n      number_energy_price: Number(ev.target.value),\n      entity_energy_price: null,\n      stat_cost: null,\n    };\n  }\n\n  private _priceStatChanged(ev: CustomEvent) {\n    this._source = {\n      ...this._source!,\n      entity_energy_price: null,\n      number_energy_price: null,\n      stat_cost: ev.detail.value,\n    };\n  }\n\n  private _priceEntityChanged(ev: CustomEvent) {\n    this._source = {\n      ...this._source!,\n      entity_energy_price: ev.detail.value,\n      number_energy_price: null,\n      stat_cost: null,\n    };\n  }\n\n  private async _statisticChanged(ev: CustomEvent<{ value: string }>) {\n    if (ev.detail.value) {\n      const metadata = await getStatisticMetadata(this.hass, [ev.detail.value]);\n      this._pickedDisplayUnit = getDisplayUnit(\n        this.hass,\n        ev.detail.value,\n        metadata[0]\n      );\n    } else {\n      this._pickedDisplayUnit = undefined;\n    }\n    if (isExternalStatistic(ev.detail.value) && this._costs !== \"statistic\") {\n      this._costs = \"no-costs\";\n    }\n    this._source = {\n      ...this._source!,\n      stat_energy_from: ev.detail.value,\n    };\n  }\n\n  private async _save() {\n    try {\n      if (this._costs === \"no-costs\") {\n        this._source!.entity_energy_price = null;\n        this._source!.number_energy_price = null;\n        this._source!.stat_cost = null;\n      }\n      await this._params!.saveCallback(this._source!);\n      this.closeDialog();\n    } catch (err: any) {\n      this._error = err.message;\n    }\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyle,\n      haStyleDialog,\n      css`\n        ha-dialog {\n          --mdc-dialog-max-width: 430px;\n        }\n        ha-formfield {\n          display: block;\n        }\n        .price-options {\n          display: block;\n          padding-left: 52px;\n          padding-inline-start: 52px;\n          padding-inline-end: initial;\n          margin-top: -8px;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"dialog-energy-gas-settings\": DialogEnergyGasSettings;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}