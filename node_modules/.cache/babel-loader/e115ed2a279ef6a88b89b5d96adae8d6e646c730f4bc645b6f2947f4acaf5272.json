{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport { ReactiveElement } from \"lit\";\nimport { property } from \"lit/decorators\";\nimport { navigate } from \"../../common/navigate\";\nimport { deepEqual } from \"../../common/util/deep-equal\";\nimport { createCustomPanelElement } from \"../../util/custom-panel/create-custom-panel-element\";\nimport { getUrl, loadCustomPanel } from \"../../util/custom-panel/load-custom-panel\";\nimport { setCustomPanelProperties } from \"../../util/custom-panel/set-custom-panel-properties\";\nexport let HaPanelCustom = _decorate(null, function (_initialize, _ReactiveElement) {\n  class HaPanelCustom extends _ReactiveElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaPanelCustom,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"narrow\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"route\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"panel\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_setProperties\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"createRenderRoot\",\n      value: function createRenderRoot() {\n        return this;\n      }\n\n      // Since navigate fires events on `window`, we need to expose this as a function\n      // to allow custom panels to forward their location changes to the main window\n      // instead of their iframe window.\n    }, {\n      kind: \"field\",\n      key: \"navigate\",\n      value() {\n        return (path, options) => navigate(path, options);\n      }\n    }, {\n      kind: \"method\",\n      key: \"registerIframe\",\n      value: function registerIframe(initialize, setProperties) {\n        initialize(this.panel, {\n          hass: this.hass,\n          narrow: this.narrow,\n          route: this.route\n        });\n        this._setProperties = setProperties;\n      }\n    }, {\n      kind: \"method\",\n      key: \"disconnectedCallback\",\n      value: function disconnectedCallback() {\n        _get(_getPrototypeOf(HaPanelCustom.prototype), \"disconnectedCallback\", this).call(this);\n        this._cleanupPanel();\n      }\n    }, {\n      kind: \"method\",\n      key: \"update\",\n      value: function update(changedProps) {\n        _get(_getPrototypeOf(HaPanelCustom.prototype), \"update\", this).call(this, changedProps);\n        if (changedProps.has(\"panel\")) {\n          // Clean up old things if we had a panel and the new one is different.\n          const oldPanel = changedProps.get(\"panel\");\n          if (!deepEqual(oldPanel, this.panel)) {\n            if (oldPanel) {\n              this._cleanupPanel();\n            }\n            this._createPanel(this.panel);\n            return;\n          }\n        }\n        if (!this._setProperties) {\n          return;\n        }\n        const props = {};\n        // @ts-ignore\n        for (const key of changedProps.keys()) {\n          props[key] = this[key];\n        }\n        this._setProperties(props);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_cleanupPanel\",\n      value: function _cleanupPanel() {\n        delete window.customPanel;\n        this._setProperties = undefined;\n        while (this.lastChild) {\n          this.removeChild(this.lastChild);\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_createPanel\",\n      value: function _createPanel(panel) {\n        const config = panel.config._panel_custom;\n        const panelUrl = getUrl(config);\n        const tempA = document.createElement(\"a\");\n        tempA.href = panelUrl.url;\n        if (!config.trust_external && ![\"localhost\", \"127.0.0.1\", location.hostname].includes(tempA.hostname)) {\n          if (!confirm(`${this.hass.localize(\"ui.panel.custom.external_panel.question_trust\", {\n            name: config.name,\n            link: tempA.href\n          })}\n\n           ${this.hass.localize(\"ui.panel.custom.external_panel.complete_access\")}\n\n           (${this.hass.localize(\"ui.panel.custom.external_panel.hide_message\")})`)) {\n            return;\n          }\n        }\n        if (!config.embed_iframe) {\n          loadCustomPanel(config).then(() => {\n            const element = createCustomPanelElement(config);\n            this._setProperties = props => setCustomPanelProperties(element, props);\n            setCustomPanelProperties(element, {\n              panel,\n              hass: this.hass,\n              narrow: this.narrow,\n              route: this.route\n            });\n            this.appendChild(element);\n          }, () => {\n            alert(`Unable to load custom panel from ${tempA.href}`);\n          });\n          return;\n        }\n        window.customPanel = this;\n        const titleAttr = this.panel.title ? `title=\"${this.panel.title}\"` : \"\";\n        this.innerHTML = `\n      <style>\n        iframe {\n          border: 0;\n          width: 100%;\n          height: 100%;\n          display: block;\n          background-color: var(--primary-background-color);\n        }\n      </style>\n      <iframe ${titleAttr}></iframe>`.trim();\n        const iframeDoc = this.querySelector(\"iframe\").contentWindow.document;\n        iframeDoc.open();\n        iframeDoc.write(`<!doctype html><script src='${window.customPanelJS}'></script>`);\n        iframeDoc.close();\n      }\n    }]\n  };\n}, ReactiveElement);\ncustomElements.define(\"ha-panel-custom\", HaPanelCustom);","map":{"version":3,"names":["ReactiveElement","property","navigate","deepEqual","createCustomPanelElement","getUrl","loadCustomPanel","setCustomPanelProperties","HaPanelCustom","_decorate","_initialize","_ReactiveElement","constructor","args","F","d","kind","decorators","attribute","key","value","type","Boolean","createRenderRoot","path","options","registerIframe","initialize","setProperties","panel","hass","narrow","route","_setProperties","disconnectedCallback","_get","_getPrototypeOf","prototype","call","_cleanupPanel","update","changedProps","has","oldPanel","get","_createPanel","props","keys","window","customPanel","undefined","lastChild","removeChild","config","_panel_custom","panelUrl","tempA","document","createElement","href","url","trust_external","location","hostname","includes","confirm","localize","name","link","embed_iframe","then","element","appendChild","alert","titleAttr","title","innerHTML","trim","iframeDoc","querySelector","contentWindow","open","write","customPanelJS","close","customElements","define"],"sources":["/workspaces/frontend/src/panels/custom/ha-panel-custom.ts"],"sourcesContent":["import { PropertyValues, ReactiveElement } from \"lit\";\nimport { property } from \"lit/decorators\";\nimport { navigate, NavigateOptions } from \"../../common/navigate\";\nimport { deepEqual } from \"../../common/util/deep-equal\";\nimport { CustomPanelInfo } from \"../../data/panel_custom\";\nimport { HomeAssistant, Route } from \"../../types\";\nimport { createCustomPanelElement } from \"../../util/custom-panel/create-custom-panel-element\";\nimport {\n  getUrl,\n  loadCustomPanel,\n} from \"../../util/custom-panel/load-custom-panel\";\nimport { setCustomPanelProperties } from \"../../util/custom-panel/set-custom-panel-properties\";\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-panel-custom\": HaPanelCustom;\n  }\n  interface Window {\n    customPanel: HaPanelCustom | undefined;\n  }\n}\n\nexport class HaPanelCustom extends ReactiveElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ type: Boolean }) public narrow = false;\n\n  @property({ attribute: false }) public route!: Route;\n\n  @property({ attribute: false }) public panel!: CustomPanelInfo;\n\n  private _setProperties?: (props: Record<string, unknown>) => void | undefined;\n\n  protected createRenderRoot() {\n    return this;\n  }\n\n  // Since navigate fires events on `window`, we need to expose this as a function\n  // to allow custom panels to forward their location changes to the main window\n  // instead of their iframe window.\n  public navigate = (path: string, options?: NavigateOptions) =>\n    navigate(path, options);\n\n  public registerIframe(initialize, setProperties) {\n    initialize(this.panel, {\n      hass: this.hass,\n      narrow: this.narrow,\n      route: this.route,\n    });\n    this._setProperties = setProperties;\n  }\n\n  public disconnectedCallback() {\n    super.disconnectedCallback();\n    this._cleanupPanel();\n  }\n\n  protected update(changedProps: PropertyValues) {\n    super.update(changedProps);\n    if (changedProps.has(\"panel\")) {\n      // Clean up old things if we had a panel and the new one is different.\n      const oldPanel = changedProps.get(\"panel\") as CustomPanelInfo | undefined;\n      if (!deepEqual(oldPanel, this.panel)) {\n        if (oldPanel) {\n          this._cleanupPanel();\n        }\n        this._createPanel(this.panel);\n        return;\n      }\n    }\n    if (!this._setProperties) {\n      return;\n    }\n    const props = {};\n    // @ts-ignore\n    for (const key of changedProps.keys()) {\n      props[key] = this[key];\n    }\n    this._setProperties(props);\n  }\n\n  private _cleanupPanel() {\n    delete window.customPanel;\n    this._setProperties = undefined;\n    while (this.lastChild) {\n      this.removeChild(this.lastChild);\n    }\n  }\n\n  private _createPanel(panel: CustomPanelInfo) {\n    const config = panel.config!._panel_custom;\n    const panelUrl = getUrl(config);\n\n    const tempA = document.createElement(\"a\");\n    tempA.href = panelUrl.url;\n\n    if (\n      !config.trust_external &&\n      ![\"localhost\", \"127.0.0.1\", location.hostname].includes(tempA.hostname)\n    ) {\n      if (\n        !confirm(\n          `${this.hass.localize(\n            \"ui.panel.custom.external_panel.question_trust\",\n            { name: config.name, link: tempA.href }\n          )}\n\n           ${this.hass.localize(\n             \"ui.panel.custom.external_panel.complete_access\"\n           )}\n\n           (${this.hass.localize(\n             \"ui.panel.custom.external_panel.hide_message\"\n           )})`\n        )\n      ) {\n        return;\n      }\n    }\n\n    if (!config.embed_iframe) {\n      loadCustomPanel(config).then(\n        () => {\n          const element = createCustomPanelElement(config);\n          this._setProperties = (props) =>\n            setCustomPanelProperties(element, props);\n          setCustomPanelProperties(element, {\n            panel,\n            hass: this.hass,\n            narrow: this.narrow,\n            route: this.route,\n          });\n          this.appendChild(element);\n        },\n        () => {\n          alert(`Unable to load custom panel from ${tempA.href}`);\n        }\n      );\n      return;\n    }\n\n    window.customPanel = this;\n    const titleAttr = this.panel.title ? `title=\"${this.panel.title}\"` : \"\";\n    this.innerHTML = `\n      <style>\n        iframe {\n          border: 0;\n          width: 100%;\n          height: 100%;\n          display: block;\n          background-color: var(--primary-background-color);\n        }\n      </style>\n      <iframe ${titleAttr}></iframe>`.trim();\n    const iframeDoc = this.querySelector(\"iframe\")!.contentWindow!.document;\n    iframeDoc.open();\n    iframeDoc.write(\n      `<!doctype html><script src='${window.customPanelJS}'></script>`\n    );\n    iframeDoc.close();\n  }\n}\n\ncustomElements.define(\"ha-panel-custom\", HaPanelCustom);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}