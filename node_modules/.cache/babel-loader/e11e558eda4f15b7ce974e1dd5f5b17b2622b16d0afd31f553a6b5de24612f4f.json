{"ast":null,"code":"import { BROWSER_PLAYER, MediaPlayerEntityFeature } from \"../../data/media-player\";\nexport const ERR_UNSUPPORTED_MEDIA = \"Unsupported Media\";\nexport class BrowserMediaPlayer {\n  constructor(hass, item, resolved, volume, onChange) {\n    this.hass = hass;\n    this.item = item;\n    this.resolved = resolved;\n    this.onChange = onChange;\n    this.player = void 0;\n    // We pretend we're playing while still buffering.\n    this.buffering = true;\n    this._removed = false;\n    this._handleChange = () => {\n      if (!this._removed) {\n        this.onChange();\n      }\n    };\n    const player = new Audio(this.resolved.url);\n    if (player.canPlayType(resolved.mime_type) === \"\") {\n      throw new Error(ERR_UNSUPPORTED_MEDIA);\n    }\n    player.autoplay = true;\n    player.volume = volume;\n    player.addEventListener(\"play\", this._handleChange);\n    player.addEventListener(\"playing\", () => {\n      this.buffering = false;\n      this._handleChange();\n    });\n    player.addEventListener(\"pause\", this._handleChange);\n    player.addEventListener(\"ended\", this._handleChange);\n    player.addEventListener(\"canplaythrough\", this._handleChange);\n    this.player = player;\n  }\n  pause() {\n    this.buffering = false;\n    this.player.pause();\n  }\n  play() {\n    this.player.play();\n  }\n  setVolume(volume) {\n    this.player.volume = volume;\n    this.onChange();\n  }\n  remove() {\n    this._removed = true;\n    // @ts-ignore\n    this.onChange = undefined;\n    if (this.player) {\n      this.player.pause();\n    }\n  }\n  static idleStateObj() {\n    const now = new Date().toISOString();\n    return {\n      state: \"idle\",\n      entity_id: BROWSER_PLAYER,\n      last_changed: now,\n      last_updated: now,\n      attributes: {},\n      context: {\n        id: \"\",\n        user_id: null,\n        parent_id: null\n      }\n    };\n  }\n  toStateObj() {\n    // https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement\n    const stateObj = BrowserMediaPlayer.idleStateObj();\n    stateObj.state = this.buffering ? \"buffering\" : this.player.paused || this.player.ended ? \"paused\" : \"playing\";\n    stateObj.attributes = {\n      media_title: this.item.title,\n      entity_picture: this.item.thumbnail,\n      volume_level: this.player.volume,\n      supported_features:\n      // eslint-disable-next-line no-bitwise\n      MediaPlayerEntityFeature.PLAY |\n      // eslint-disable-next-line no-bitwise\n      MediaPlayerEntityFeature.PAUSE | MediaPlayerEntityFeature.VOLUME_SET\n    };\n    if (this.player.duration) {\n      stateObj.attributes.media_duration = this.player.duration;\n      stateObj.attributes.media_position = this.player.currentTime;\n      stateObj.attributes.media_position_updated_at = stateObj.last_updated;\n    }\n    return stateObj;\n  }\n}","map":{"version":3,"names":["BROWSER_PLAYER","MediaPlayerEntityFeature","ERR_UNSUPPORTED_MEDIA","BrowserMediaPlayer","constructor","hass","item","resolved","volume","onChange","player","buffering","_removed","_handleChange","Audio","url","canPlayType","mime_type","Error","autoplay","addEventListener","pause","play","setVolume","remove","undefined","idleStateObj","now","Date","toISOString","state","entity_id","last_changed","last_updated","attributes","context","id","user_id","parent_id","toStateObj","stateObj","paused","ended","media_title","title","entity_picture","thumbnail","volume_level","supported_features","PLAY","PAUSE","VOLUME_SET","duration","media_duration","media_position","currentTime","media_position_updated_at"],"sources":["/Users/sercanardil/Desktop/frontend/src/panels/media-browser/browser-media-player.ts"],"sourcesContent":["import {\n  BROWSER_PLAYER,\n  MediaPlayerEntity,\n  MediaPlayerEntityFeature,\n  MediaPlayerItem,\n} from \"../../data/media-player\";\nimport { ResolvedMediaSource } from \"../../data/media_source\";\nimport { HomeAssistant } from \"../../types\";\n\nexport const ERR_UNSUPPORTED_MEDIA = \"Unsupported Media\";\n\nexport class BrowserMediaPlayer {\n  private player: HTMLAudioElement;\n\n  // We pretend we're playing while still buffering.\n  public buffering = true;\n\n  private _removed = false;\n\n  constructor(\n    public hass: HomeAssistant,\n    public item: MediaPlayerItem,\n    public resolved: ResolvedMediaSource,\n    volume: number,\n    private onChange: () => void\n  ) {\n    const player = new Audio(this.resolved.url);\n    if (player.canPlayType(resolved.mime_type) === \"\") {\n      throw new Error(ERR_UNSUPPORTED_MEDIA);\n    }\n    player.autoplay = true;\n    player.volume = volume;\n    player.addEventListener(\"play\", this._handleChange);\n    player.addEventListener(\"playing\", () => {\n      this.buffering = false;\n      this._handleChange();\n    });\n    player.addEventListener(\"pause\", this._handleChange);\n    player.addEventListener(\"ended\", this._handleChange);\n    player.addEventListener(\"canplaythrough\", this._handleChange);\n    this.player = player;\n  }\n\n  private _handleChange = () => {\n    if (!this._removed) {\n      this.onChange();\n    }\n  };\n\n  public pause() {\n    this.buffering = false;\n    this.player.pause();\n  }\n\n  public play() {\n    this.player.play();\n  }\n\n  public setVolume(volume: number) {\n    this.player.volume = volume;\n    this.onChange();\n  }\n\n  public remove() {\n    this._removed = true;\n    // @ts-ignore\n    this.onChange = undefined;\n    if (this.player) {\n      this.player.pause();\n    }\n  }\n\n  static idleStateObj(): MediaPlayerEntity {\n    const now = new Date().toISOString();\n    return {\n      state: \"idle\",\n      entity_id: BROWSER_PLAYER,\n      last_changed: now,\n      last_updated: now,\n      attributes: {},\n      context: { id: \"\", user_id: null, parent_id: null },\n    };\n  }\n\n  toStateObj(): MediaPlayerEntity {\n    // https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement\n    const stateObj = BrowserMediaPlayer.idleStateObj();\n    stateObj.state = this.buffering\n      ? \"buffering\"\n      : this.player.paused || this.player.ended\n        ? \"paused\"\n        : \"playing\";\n    stateObj.attributes = {\n      media_title: this.item.title,\n      entity_picture: this.item.thumbnail,\n      volume_level: this.player.volume,\n      supported_features:\n        // eslint-disable-next-line no-bitwise\n        MediaPlayerEntityFeature.PLAY |\n        // eslint-disable-next-line no-bitwise\n        MediaPlayerEntityFeature.PAUSE |\n        MediaPlayerEntityFeature.VOLUME_SET,\n    };\n\n    if (this.player.duration) {\n      stateObj.attributes.media_duration = this.player.duration;\n      stateObj.attributes.media_position = this.player.currentTime;\n      stateObj.attributes.media_position_updated_at = stateObj.last_updated;\n    }\n    return stateObj;\n  }\n}\n"],"mappings":"AAAA,SACEA,cAAc,EAEdC,wBAAwB,QAEnB,yBAAyB;AAIhC,OAAO,MAAMC,qBAAqB,GAAG,mBAAmB;AAExD,OAAO,MAAMC,kBAAkB,CAAC;EAQ9BC,WAAWA,CACFC,IAAmB,EACnBC,IAAqB,EACrBC,QAA6B,EACpCC,MAAc,EACNC,QAAoB,EAC5B;IAAA,KALOJ,IAAmB,GAAnBA,IAAmB;IAAA,KACnBC,IAAqB,GAArBA,IAAqB;IAAA,KACrBC,QAA6B,GAA7BA,QAA6B;IAAA,KAE5BE,QAAoB,GAApBA,QAAoB;IAAA,KAZtBC,MAAM;IAEd;IAAA,KACOC,SAAS,GAAG,IAAI;IAAA,KAEfC,QAAQ,GAAG,KAAK;IAAA,KA0BhBC,aAAa,GAAG,MAAM;MAC5B,IAAI,CAAC,IAAI,CAACD,QAAQ,EAAE;QAClB,IAAI,CAACH,QAAQ,CAAC,CAAC;MACjB;IACF,CAAC;IArBC,MAAMC,MAAM,GAAG,IAAII,KAAK,CAAC,IAAI,CAACP,QAAQ,CAACQ,GAAG,CAAC;IAC3C,IAAIL,MAAM,CAACM,WAAW,CAACT,QAAQ,CAACU,SAAS,CAAC,KAAK,EAAE,EAAE;MACjD,MAAM,IAAIC,KAAK,CAAChB,qBAAqB,CAAC;IACxC;IACAQ,MAAM,CAACS,QAAQ,GAAG,IAAI;IACtBT,MAAM,CAACF,MAAM,GAAGA,MAAM;IACtBE,MAAM,CAACU,gBAAgB,CAAC,MAAM,EAAE,IAAI,CAACP,aAAa,CAAC;IACnDH,MAAM,CAACU,gBAAgB,CAAC,SAAS,EAAE,MAAM;MACvC,IAAI,CAACT,SAAS,GAAG,KAAK;MACtB,IAAI,CAACE,aAAa,CAAC,CAAC;IACtB,CAAC,CAAC;IACFH,MAAM,CAACU,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAACP,aAAa,CAAC;IACpDH,MAAM,CAACU,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAACP,aAAa,CAAC;IACpDH,MAAM,CAACU,gBAAgB,CAAC,gBAAgB,EAAE,IAAI,CAACP,aAAa,CAAC;IAC7D,IAAI,CAACH,MAAM,GAAGA,MAAM;EACtB;EAQOW,KAAKA,CAAA,EAAG;IACb,IAAI,CAACV,SAAS,GAAG,KAAK;IACtB,IAAI,CAACD,MAAM,CAACW,KAAK,CAAC,CAAC;EACrB;EAEOC,IAAIA,CAAA,EAAG;IACZ,IAAI,CAACZ,MAAM,CAACY,IAAI,CAAC,CAAC;EACpB;EAEOC,SAASA,CAACf,MAAc,EAAE;IAC/B,IAAI,CAACE,MAAM,CAACF,MAAM,GAAGA,MAAM;IAC3B,IAAI,CAACC,QAAQ,CAAC,CAAC;EACjB;EAEOe,MAAMA,CAAA,EAAG;IACd,IAAI,CAACZ,QAAQ,GAAG,IAAI;IACpB;IACA,IAAI,CAACH,QAAQ,GAAGgB,SAAS;IACzB,IAAI,IAAI,CAACf,MAAM,EAAE;MACf,IAAI,CAACA,MAAM,CAACW,KAAK,CAAC,CAAC;IACrB;EACF;EAEA,OAAOK,YAAYA,CAAA,EAAsB;IACvC,MAAMC,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;IACpC,OAAO;MACLC,KAAK,EAAE,MAAM;MACbC,SAAS,EAAE/B,cAAc;MACzBgC,YAAY,EAAEL,GAAG;MACjBM,YAAY,EAAEN,GAAG;MACjBO,UAAU,EAAE,CAAC,CAAC;MACdC,OAAO,EAAE;QAAEC,EAAE,EAAE,EAAE;QAAEC,OAAO,EAAE,IAAI;QAAEC,SAAS,EAAE;MAAK;IACpD,CAAC;EACH;EAEAC,UAAUA,CAAA,EAAsB;IAC9B;IACA,MAAMC,QAAQ,GAAGrC,kBAAkB,CAACuB,YAAY,CAAC,CAAC;IAClDc,QAAQ,CAACV,KAAK,GAAG,IAAI,CAACnB,SAAS,GAC3B,WAAW,GACX,IAAI,CAACD,MAAM,CAAC+B,MAAM,IAAI,IAAI,CAAC/B,MAAM,CAACgC,KAAK,GACrC,QAAQ,GACR,SAAS;IACfF,QAAQ,CAACN,UAAU,GAAG;MACpBS,WAAW,EAAE,IAAI,CAACrC,IAAI,CAACsC,KAAK;MAC5BC,cAAc,EAAE,IAAI,CAACvC,IAAI,CAACwC,SAAS;MACnCC,YAAY,EAAE,IAAI,CAACrC,MAAM,CAACF,MAAM;MAChCwC,kBAAkB;MAChB;MACA/C,wBAAwB,CAACgD,IAAI;MAC7B;MACAhD,wBAAwB,CAACiD,KAAK,GAC9BjD,wBAAwB,CAACkD;IAC7B,CAAC;IAED,IAAI,IAAI,CAACzC,MAAM,CAAC0C,QAAQ,EAAE;MACxBZ,QAAQ,CAACN,UAAU,CAACmB,cAAc,GAAG,IAAI,CAAC3C,MAAM,CAAC0C,QAAQ;MACzDZ,QAAQ,CAACN,UAAU,CAACoB,cAAc,GAAG,IAAI,CAAC5C,MAAM,CAAC6C,WAAW;MAC5Df,QAAQ,CAACN,UAAU,CAACsB,yBAAyB,GAAGhB,QAAQ,CAACP,YAAY;IACvE;IACA,OAAOO,QAAQ;EACjB;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}