{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/helpers/regeneratorRuntime\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.weak-map.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\nimport \"core-js/modules/esnext.set.difference.v2.js\";\nimport \"core-js/modules/esnext.set.intersection.v2.js\";\nimport \"core-js/modules/esnext.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/esnext.set.is-subset-of.v2.js\";\nimport \"core-js/modules/esnext.set.is-superset-of.v2.js\";\nimport \"core-js/modules/esnext.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/esnext.set.union.v2.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nexport var controllerMap = new WeakMap();\n/**\n * AnimateController can be used to provide default configuration options to all\n * `animate()` directives in a given component.\n *\n * It also provides control over all the `animate()` animations within a given\n * component, for example, `this.animateController.pause()` pauses all animations.\n */\nexport var AnimateController = /*#__PURE__*/function () {\n  function AnimateController(host, options) {\n    _classCallCheck(this, AnimateController);\n    this.startPaused = false;\n    this.disabled = false;\n    /**\n     * Set of active `animate()` directives in the host component\n     */\n    this.clients = new Set();\n    this.pendingComplete = false;\n    this.host = host;\n    this.defaultOptions = options.defaultOptions || {};\n    this.startPaused = !!options.startPaused;\n    this.disabled = !!options.disabled;\n    this.onComplete = options.onComplete;\n    controllerMap.set(this.host, this);\n  }\n  _createClass(AnimateController, [{\n    key: \"add\",\n    value: function () {\n      var _add = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(animate) {\n        var _animate$webAnimation, _this$onComplete;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              this.clients.add(animate);\n              if (this.startPaused) {\n                (_animate$webAnimation = animate.webAnimation) === null || _animate$webAnimation === void 0 || _animate$webAnimation.pause();\n              }\n              this.pendingComplete = true;\n              _context.next = 5;\n              return animate.finished;\n            case 5:\n              if (this.pendingComplete && !this.isAnimating) {\n                this.pendingComplete = false;\n                (_this$onComplete = this.onComplete) === null || _this$onComplete === void 0 || _this$onComplete.call(this);\n              }\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function add(_x) {\n        return _add.apply(this, arguments);\n      }\n      return add;\n    }()\n  }, {\n    key: \"remove\",\n    value: function remove(animate) {\n      this.clients.delete(animate);\n    }\n    /**\n     * Pauses all animations running in the host component.\n     */\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      this.clients.forEach(function (f) {\n        var _f$webAnimation;\n        return (_f$webAnimation = f.webAnimation) === null || _f$webAnimation === void 0 ? void 0 : _f$webAnimation.pause();\n      });\n    }\n    /**\n     * Plays all active animations in the host component.\n     */\n  }, {\n    key: \"play\",\n    value: function play() {\n      this.clients.forEach(function (f) {\n        var _f$webAnimation2;\n        return (_f$webAnimation2 = f.webAnimation) === null || _f$webAnimation2 === void 0 ? void 0 : _f$webAnimation2.play();\n      });\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      this.clients.forEach(function (f) {\n        var _f$webAnimation3;\n        return (_f$webAnimation3 = f.webAnimation) === null || _f$webAnimation3 === void 0 ? void 0 : _f$webAnimation3.cancel();\n      });\n      this.clients.clear();\n    }\n  }, {\n    key: \"finish\",\n    value: function finish() {\n      this.clients.forEach(function (f) {\n        var _f$webAnimation4;\n        return (_f$webAnimation4 = f.webAnimation) === null || _f$webAnimation4 === void 0 ? void 0 : _f$webAnimation4.finish();\n      });\n      this.clients.clear();\n    }\n    /**\n     * Toggles the play/pause state of all active `animate()` animations in the host component.\n     */\n  }, {\n    key: \"togglePlay\",\n    value: function togglePlay() {\n      if (this.isPlaying) {\n        this.pause();\n      } else {\n        this.play();\n      }\n    }\n    /**\n     * Returns true if the host component has any active `animate()` animations.\n     */\n  }, {\n    key: \"isAnimating\",\n    get: function get() {\n      return this.clients.size > 0;\n    }\n    /**\n     * Returns true if the host component has any playing `animate()` animations.\n     */\n  }, {\n    key: \"isPlaying\",\n    get: function get() {\n      return Array.from(this.clients).some(function (a) {\n        var _a$webAnimation;\n        return ((_a$webAnimation = a.webAnimation) === null || _a$webAnimation === void 0 ? void 0 : _a$webAnimation.playState) === 'running';\n      });\n    }\n  }, {\n    key: \"finished\",\n    value: function () {\n      var _finished = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return Promise.all(Array.from(this.clients).map(function (f) {\n                return f.finished;\n              }));\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function finished() {\n        return _finished.apply(this, arguments);\n      }\n      return finished;\n    }()\n  }]);\n  return AnimateController;\n}();","map":{"version":3,"names":["controllerMap","WeakMap","AnimateController","host","options","_classCallCheck","startPaused","disabled","clients","Set","pendingComplete","defaultOptions","onComplete","set","_createClass","key","value","_add","_asyncToGenerator","_regeneratorRuntime","mark","_callee","animate","_animate$webAnimation","_this$onComplete","wrap","_callee$","_context","prev","next","add","webAnimation","pause","finished","isAnimating","call","stop","_x","apply","arguments","remove","delete","forEach","f","_f$webAnimation","play","_f$webAnimation2","cancel","_f$webAnimation3","clear","finish","_f$webAnimation4","togglePlay","isPlaying","get","size","Array","from","some","a","_a$webAnimation","playState","_finished","_callee2","_callee2$","_context2","Promise","all","map"],"sources":["../src/animate-controller.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport {ReactiveControllerHost} from 'lit';\nimport {Animate, Options} from './animate.js';\n\nexport const controllerMap = new WeakMap<\n  ReactiveControllerHost,\n  AnimateController\n>();\n\n/**\n * AnimateController can be used to provide default configuration options to all\n * `animate()` directives in a given component.\n *\n * It also provides control over all the `animate()` animations within a given\n * component, for example, `this.animateController.pause()` pauses all animations.\n */\nexport class AnimateController {\n  host: ReactiveControllerHost;\n  defaultOptions: Options;\n  startPaused = false;\n  disabled = false;\n  onComplete?: () => void;\n\n  constructor(\n    host: ReactiveControllerHost,\n    options: {\n      defaultOptions?: Options;\n      startPaused?: boolean;\n      disabled?: boolean;\n      onComplete?: () => void;\n    }\n  ) {\n    this.host = host;\n    this.defaultOptions = options.defaultOptions || {};\n    this.startPaused = !!options.startPaused;\n    this.disabled = !!options.disabled;\n    this.onComplete = options.onComplete;\n    controllerMap.set(this.host, this);\n  }\n\n  /**\n   * Set of active `animate()` directives in the host component\n   */\n  clients = new Set<Animate>();\n\n  protected pendingComplete = false;\n\n  async add(animate: Animate) {\n    this.clients.add(animate);\n    if (this.startPaused) {\n      animate.webAnimation?.pause();\n    }\n    this.pendingComplete = true;\n    await animate.finished;\n    if (this.pendingComplete && !this.isAnimating) {\n      this.pendingComplete = false;\n      this.onComplete?.();\n    }\n  }\n\n  remove(animate: Animate) {\n    this.clients.delete(animate);\n  }\n\n  /**\n   * Pauses all animations running in the host component.\n   */\n  pause() {\n    this.clients.forEach((f) => f.webAnimation?.pause());\n  }\n\n  /**\n   * Plays all active animations in the host component.\n   */\n  play() {\n    this.clients.forEach((f) => f.webAnimation?.play());\n  }\n\n  cancel() {\n    this.clients.forEach((f) => f.webAnimation?.cancel());\n    this.clients.clear();\n  }\n\n  finish() {\n    this.clients.forEach((f) => f.webAnimation?.finish());\n    this.clients.clear();\n  }\n\n  /**\n   * Toggles the play/pause state of all active `animate()` animations in the host component.\n   */\n  togglePlay() {\n    if (this.isPlaying) {\n      this.pause();\n    } else {\n      this.play();\n    }\n  }\n\n  /**\n   * Returns true if the host component has any active `animate()` animations.\n   */\n  get isAnimating() {\n    return this.clients.size > 0;\n  }\n\n  /**\n   * Returns true if the host component has any playing `animate()` animations.\n   */\n  get isPlaying() {\n    return Array.from(this.clients).some(\n      (a) => a.webAnimation?.playState === 'running'\n    );\n  }\n\n  async finished() {\n    await Promise.all(Array.from(this.clients).map((f) => f.finished));\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}