{"ast":null,"code":"/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\nimport { TextFieldBase } from '@material/mwc-textfield/mwc-textfield-base.js';\nimport { html } from 'lit';\nimport { property, query } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { live } from 'lit/directives/live.js';\nconst booleanOrStringConverter = {\n  fromAttribute(value) {\n    if (value === null) {\n      return false;\n    } else if (value === '') {\n      return true;\n    }\n    return value;\n  },\n  toAttribute(value) {\n    if (typeof value === 'boolean') {\n      return value ? '' : null;\n    }\n    return value;\n  }\n};\n/** @soyCompatible */\nexport class TextAreaBase extends TextFieldBase {\n  constructor() {\n    super(...arguments);\n    this.rows = 2;\n    this.cols = 20;\n    this.charCounter = false;\n  }\n  /** @soyTemplate */\n  render() {\n    const shouldRenderCharCounter = this.charCounter && this.maxLength !== -1;\n    const shouldRenderInternalCharCounter = shouldRenderCharCounter && this.charCounter === 'internal';\n    const shouldRenderExternalCharCounter = shouldRenderCharCounter && !shouldRenderInternalCharCounter;\n    const shouldRenderHelperText = !!this.helper || !!this.validationMessage || shouldRenderExternalCharCounter;\n    /** @classMap */\n    const classes = {\n      'mdc-text-field--disabled': this.disabled,\n      'mdc-text-field--no-label': !this.label,\n      'mdc-text-field--filled': !this.outlined,\n      'mdc-text-field--outlined': this.outlined,\n      'mdc-text-field--end-aligned': this.endAligned,\n      'mdc-text-field--with-internal-counter': shouldRenderInternalCharCounter\n    };\n    return html`\n      <label class=\"mdc-text-field mdc-text-field--textarea ${classMap(classes)}\">\n        ${this.renderRipple()}\n        ${this.outlined ? this.renderOutline() : this.renderLabel()}\n        ${this.renderInput()}\n        ${this.renderCharCounter(shouldRenderInternalCharCounter)}\n        ${this.renderLineRipple()}\n      </label>\n      ${this.renderHelperText(shouldRenderHelperText, shouldRenderExternalCharCounter)}\n    `;\n  }\n  /** @soyTemplate */\n  renderInput() {\n    const ariaLabelledbyOrUndef = !!this.label ? 'label' : undefined;\n    const minOrUndef = this.minLength === -1 ? undefined : this.minLength;\n    const maxOrUndef = this.maxLength === -1 ? undefined : this.maxLength;\n    const autocapitalizeOrUndef = this.autocapitalize ? this.autocapitalize : undefined;\n    return html`\n      <textarea\n          aria-labelledby=${ifDefined(ariaLabelledbyOrUndef)}\n          class=\"mdc-text-field__input\"\n          .value=\"${live(this.value)}\"\n          rows=\"${this.rows}\"\n          cols=\"${this.cols}\"\n          ?disabled=\"${this.disabled}\"\n          placeholder=\"${this.placeholder}\"\n          ?required=\"${this.required}\"\n          ?readonly=\"${this.readOnly}\"\n          minlength=\"${ifDefined(minOrUndef)}\"\n          maxlength=\"${ifDefined(maxOrUndef)}\"\n          name=\"${ifDefined(this.name === '' ? undefined : this.name)}\"\n          inputmode=\"${ifDefined(this.inputMode)}\"\n          autocapitalize=\"${ifDefined(autocapitalizeOrUndef)}\"\n          @input=\"${this.handleInputChange}\"\n          @blur=\"${this.onInputBlur}\">\n      </textarea>`;\n  }\n}\n__decorate([query('textarea')], TextAreaBase.prototype, \"formElement\", void 0);\n__decorate([property({\n  type: Number\n})], TextAreaBase.prototype, \"rows\", void 0);\n__decorate([property({\n  type: Number\n})], TextAreaBase.prototype, \"cols\", void 0);\n__decorate([property({\n  converter: booleanOrStringConverter\n})], TextAreaBase.prototype, \"charCounter\", void 0);","map":{"version":3,"names":["TextFieldBase","html","property","query","classMap","ifDefined","live","booleanOrStringConverter","fromAttribute","value","toAttribute","TextAreaBase","constructor","rows","cols","charCounter","render","shouldRenderCharCounter","maxLength","shouldRenderInternalCharCounter","shouldRenderExternalCharCounter","shouldRenderHelperText","helper","validationMessage","classes","disabled","label","outlined","endAligned","renderRipple","renderOutline","renderLabel","renderInput","renderCharCounter","renderLineRipple","renderHelperText","ariaLabelledbyOrUndef","undefined","minOrUndef","minLength","maxOrUndef","autocapitalizeOrUndef","autocapitalize","placeholder","required","readOnly","name","inputMode","handleInputChange","onInputBlur","__decorate","type","Number","converter"],"sources":["mwc-textarea-base.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\n\n\nimport {TextAreaCharCounter, TextFieldBase, TextFieldInputMode, TextFieldType} from '@material/mwc-textfield/mwc-textfield-base.js';\nimport {ComplexAttributeConverter, html, TemplateResult} from 'lit';\nimport {property, query} from 'lit/decorators.js';\nimport {classMap} from 'lit/directives/class-map.js';\nimport {ifDefined} from 'lit/directives/if-defined.js';\nimport {live} from 'lit/directives/live.js';\n\nexport {TextAreaCharCounter, TextFieldInputMode, TextFieldType};\n\nconst booleanOrStringConverter: ComplexAttributeConverter<boolean|string> = {\n  fromAttribute(value) {\n    if (value === null) {\n      return false;\n    } else if (value === '') {\n      return true;\n    }\n\n    return value;\n  },\n  toAttribute(value) {\n    if (typeof value === 'boolean') {\n      return value ? '' : null;\n    }\n\n    return value;\n  }\n};\n\n/** @soyCompatible */\nexport abstract class TextAreaBase extends TextFieldBase {\n  @query('textarea') protected override formElement!: HTMLInputElement;\n\n  @property({type: Number}) rows = 2;\n\n  @property({type: Number}) cols = 20;\n\n  @property({converter: booleanOrStringConverter})\n  override charCounter: boolean|TextAreaCharCounter = false;\n\n  /** @soyTemplate */\n  override render(): TemplateResult {\n    const shouldRenderCharCounter = this.charCounter && this.maxLength !== -1;\n    const shouldRenderInternalCharCounter =\n        shouldRenderCharCounter && this.charCounter === 'internal';\n    const shouldRenderExternalCharCounter =\n        shouldRenderCharCounter && !shouldRenderInternalCharCounter;\n    const shouldRenderHelperText = !!this.helper || !!this.validationMessage ||\n        shouldRenderExternalCharCounter;\n\n    /** @classMap */\n    const classes = {\n      'mdc-text-field--disabled': this.disabled,\n      'mdc-text-field--no-label': !this.label,\n      'mdc-text-field--filled': !this.outlined,\n      'mdc-text-field--outlined': this.outlined,\n      'mdc-text-field--end-aligned': this.endAligned,\n      'mdc-text-field--with-internal-counter': shouldRenderInternalCharCounter,\n    };\n\n    return html`\n      <label class=\"mdc-text-field mdc-text-field--textarea ${\n        classMap(classes)}\">\n        ${this.renderRipple()}\n        ${this.outlined ? this.renderOutline() : this.renderLabel()}\n        ${this.renderInput()}\n        ${this.renderCharCounter(shouldRenderInternalCharCounter)}\n        ${this.renderLineRipple()}\n      </label>\n      ${\n        this.renderHelperText(\n            shouldRenderHelperText, shouldRenderExternalCharCounter)}\n    `;\n  }\n\n  /** @soyTemplate */\n  protected override renderInput(): TemplateResult {\n    const ariaLabelledbyOrUndef = !!this.label ? 'label' : undefined;\n    const minOrUndef = this.minLength === -1 ? undefined : this.minLength;\n    const maxOrUndef = this.maxLength === -1 ? undefined : this.maxLength;\n    const autocapitalizeOrUndef = this.autocapitalize ?\n        (this.autocapitalize as 'off' | 'none' | 'on' | 'sentences' | 'words' |\n         'characters' | 'off' | 'none' | 'on' | 'sentences' | 'words' |\n         'characters') :\n        undefined;\n\n    return html`\n      <textarea\n          aria-labelledby=${ifDefined(ariaLabelledbyOrUndef)}\n          class=\"mdc-text-field__input\"\n          .value=\"${live(this.value) as unknown as string}\"\n          rows=\"${this.rows}\"\n          cols=\"${this.cols}\"\n          ?disabled=\"${this.disabled}\"\n          placeholder=\"${this.placeholder}\"\n          ?required=\"${this.required}\"\n          ?readonly=\"${this.readOnly}\"\n          minlength=\"${ifDefined(minOrUndef)}\"\n          maxlength=\"${ifDefined(maxOrUndef)}\"\n          name=\"${ifDefined(this.name === '' ? undefined : this.name)}\"\n          inputmode=\"${ifDefined(this.inputMode)}\"\n          autocapitalize=\"${ifDefined(autocapitalizeOrUndef)}\"\n          @input=\"${this.handleInputChange}\"\n          @blur=\"${this.onInputBlur}\">\n      </textarea>`;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}