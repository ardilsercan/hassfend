{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport { customElement } from \"lit/decorators\";\nimport { getLovelaceStrategy } from \"../../strategies/get-strategy\";\nimport { HuiElementEditor } from \"../hui-element-editor\";\nexport let HuiDashboardStrategyElementEditor = _decorate([customElement(\"hui-dashboard-strategy-element-editor\")], function (_initialize, _HuiElementEditor) {\n  class HuiDashboardStrategyElementEditor extends _HuiElementEditor {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HuiDashboardStrategyElementEditor,\n    d: [{\n      kind: \"method\",\n      key: \"getConfigElement\",\n      value: async function getConfigElement() {\n        const elClass = await getLovelaceStrategy(\"dashboard\", this.configElementType);\n\n        // Check if a GUI editor exists\n        if (elClass && elClass.getConfigElement) {\n          return elClass.getConfigElement();\n        }\n        return undefined;\n      }\n    }]\n  };\n}, HuiElementEditor);","map":{"version":3,"names":["customElement","getLovelaceStrategy","HuiElementEditor","HuiDashboardStrategyElementEditor","_decorate","_initialize","_HuiElementEditor","constructor","args","F","d","kind","key","value","getConfigElement","elClass","configElementType","undefined"],"sources":["/workspaces/frontend/src/panels/lovelace/editor/dashboard-strategy-editor/hui-dashboard-strategy-element-editor.ts"],"sourcesContent":["import { customElement } from \"lit/decorators\";\nimport { LovelaceDashboardStrategyConfig } from \"../../../../data/lovelace/config/types\";\nimport { getLovelaceStrategy } from \"../../strategies/get-strategy\";\nimport { LovelaceStrategyEditor } from \"../../strategies/types\";\nimport { HuiElementEditor } from \"../hui-element-editor\";\n\n@customElement(\"hui-dashboard-strategy-element-editor\")\nexport class HuiDashboardStrategyElementEditor extends HuiElementEditor<LovelaceDashboardStrategyConfig> {\n  protected async getConfigElement(): Promise<\n    LovelaceStrategyEditor | undefined\n  > {\n    const elClass = await getLovelaceStrategy(\n      \"dashboard\",\n      this.configElementType!\n    );\n\n    // Check if a GUI editor exists\n    if (elClass && elClass.getConfigElement) {\n      return elClass.getConfigElement();\n    }\n\n    return undefined;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-dashboard-strategy-element-editor\": HuiDashboardStrategyElementEditor;\n  }\n}\n"],"mappings":";AAAA,SAASA,aAAa,QAAQ,gBAAgB;AAE9C,SAASC,mBAAmB,QAAQ,+BAA+B;AAEnE,SAASC,gBAAgB,QAAQ,uBAAuB;AAExD,WACaC,iCAAiC,GAAAC,SAAA,EAD7CJ,aAAa,CAAC,uCAAuC,CAAC,aAAAK,WAAA,EAAAC,iBAAA;EAAvD,MACaH,iCAAiC,SAAAG,iBAAA,CAA2D;IAAAC,YAAA,GAAAC,IAAA;MAAA,SAAAA,IAAA;MAAAH,WAAA;IAAA;EAgBzG;EAAC;IAAAI,CAAA,EAhBYN,iCAAiC;IAAAO,CAAA;MAAAC,IAAA;MAAAC,GAAA;MAAAC,KAAA,EAC5C,eAAAC,iBAAA,EAEE;QACA,MAAMC,OAAO,GAAG,MAAMd,mBAAmB,CACvC,WAAW,EACX,IAAI,CAACe,iBACP,CAAC;;QAED;QACA,IAAID,OAAO,IAAIA,OAAO,CAACD,gBAAgB,EAAE;UACvC,OAAOC,OAAO,CAACD,gBAAgB,CAAC,CAAC;QACnC;QAEA,OAAOG,SAAS;MAClB;IAAC;EAAA;AAAA,GAfoDf,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}