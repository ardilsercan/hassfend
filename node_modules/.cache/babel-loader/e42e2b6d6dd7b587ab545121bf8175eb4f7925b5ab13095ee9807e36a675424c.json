{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport { consume } from \"@lit-labs/context\";\nimport \"@material/mwc-list/mwc-list-item\";\nconst mdiArrowDown = \"M11,4H13V16L18.5,10.5L19.92,11.92L12,19.84L4.08,11.92L5.5,10.5L11,16V4Z\";\nconst mdiArrowUp = \"M13,20H11V8L5.5,13.5L4.08,12.08L12,4.16L19.92,12.08L18.5,13.5L13,8V20Z\";\nconst mdiCheck = \"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\";\nconst mdiContentCopy = \"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\";\nconst mdiContentCut = \"M19,3L13,9L15,11L22,4V3M12,12.5A0.5,0.5 0 0,1 11.5,12A0.5,0.5 0 0,1 12,11.5A0.5,0.5 0 0,1 12.5,12A0.5,0.5 0 0,1 12,12.5M6,20A2,2 0 0,1 4,18C4,16.89 4.9,16 6,16A2,2 0 0,1 8,18C8,19.11 7.1,20 6,20M6,8A2,2 0 0,1 4,6C4,4.89 4.9,4 6,4A2,2 0 0,1 8,6C8,7.11 7.1,8 6,8M9.64,7.64C9.87,7.14 10,6.59 10,6A4,4 0 0,0 6,2A4,4 0 0,0 2,6A4,4 0 0,0 6,10C6.59,10 7.14,9.87 7.64,9.64L10,12L7.64,14.36C7.14,14.13 6.59,14 6,14A4,4 0 0,0 2,18A4,4 0 0,0 6,22A4,4 0 0,0 10,18C10,17.41 9.87,16.86 9.64,16.36L12,14L19,21H22V20L9.64,7.64Z\";\nconst mdiContentDuplicate = \"M11,17H4A2,2 0 0,1 2,15V3A2,2 0 0,1 4,1H16V3H4V15H11V13L15,16L11,19V17M19,21V7H8V13H6V7A2,2 0 0,1 8,5H19A2,2 0 0,1 21,7V21A2,2 0 0,1 19,23H8A2,2 0 0,1 6,21V19H8V21H19Z\";\nconst mdiDelete = \"M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z\";\nconst mdiDotsVertical = \"M12,16A2,2 0 0,1 14,18A2,2 0 0,1 12,20A2,2 0 0,1 10,18A2,2 0 0,1 12,16M12,10A2,2 0 0,1 14,12A2,2 0 0,1 12,14A2,2 0 0,1 10,12A2,2 0 0,1 12,10M12,4A2,2 0 0,1 14,6A2,2 0 0,1 12,8A2,2 0 0,1 10,6A2,2 0 0,1 12,4Z\";\nconst mdiFlask = \"M6,22A3,3 0 0,1 3,19C3,18.4 3.18,17.84 3.5,17.37L9,7.81V6A1,1 0 0,1 8,5V4A2,2 0 0,1 10,2H14A2,2 0 0,1 16,4V5A1,1 0 0,1 15,6V7.81L20.5,17.37C20.82,17.84 21,18.4 21,19A3,3 0 0,1 18,22H6M5,19A1,1 0 0,0 6,20H18A1,1 0 0,0 19,19C19,18.79 18.93,18.59 18.82,18.43L16.53,14.47L14,17L8.93,11.93L5.18,18.43C5.07,18.59 5,18.79 5,19M13,10A1,1 0 0,0 12,11A1,1 0 0,0 13,12A1,1 0 0,0 14,11A1,1 0 0,0 13,10Z\";\nconst mdiPlayCircleOutline = \"M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M10,16.5L16,12L10,7.5V16.5Z\";\nconst mdiRenameBox = \"M18,17H10.5L12.5,15H18M6,17V14.5L13.88,6.65C14.07,6.45 14.39,6.45 14.59,6.65L16.35,8.41C16.55,8.61 16.55,8.92 16.35,9.12L8.47,17M19,3H5C3.89,3 3,3.89 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5C21,3.89 20.1,3 19,3Z\";\nconst mdiStopCircleOutline = \"M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4M9,9V15H15V9\";\nimport deepClone from \"deep-clone-simple\";\nimport { LitElement, css, html, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport { storage } from \"../../../../common/decorators/storage\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { capitalizeFirstLetter } from \"../../../../common/string/capitalize-first-letter\";\nimport { handleStructError } from \"../../../../common/structs/handle-errors\";\nimport \"../../../../components/ha-button-menu\";\nimport \"../../../../components/ha-card\";\nimport \"../../../../components/ha-expansion-panel\";\nimport \"../../../../components/ha-icon-button\";\nimport { testCondition } from \"../../../../data/automation\";\nimport { describeCondition } from \"../../../../data/automation_i18n\";\nimport { CONDITION_ICONS } from \"../../../../data/condition\";\nimport { validateConfig } from \"../../../../data/config\";\nimport { fullEntitiesContext } from \"../../../../data/context\";\nimport { showAlertDialog, showConfirmationDialog, showPromptDialog } from \"../../../../dialogs/generic/show-dialog-box\";\nimport { haStyle } from \"../../../../resources/styles\";\nimport \"./ha-automation-condition-editor\";\nconst preventDefault = ev => ev.preventDefault();\nexport const handleChangeEvent = (element, ev) => {\n  var _ev$currentTarget, _ev$detail, _ev$currentTarget2;\n  ev.stopPropagation();\n  const name = (_ev$currentTarget = ev.currentTarget) === null || _ev$currentTarget === void 0 ? void 0 : _ev$currentTarget.name;\n  if (!name) {\n    return;\n  }\n  const newVal = ((_ev$detail = ev.detail) === null || _ev$detail === void 0 ? void 0 : _ev$detail.value) || ((_ev$currentTarget2 = ev.currentTarget) === null || _ev$currentTarget2 === void 0 ? void 0 : _ev$currentTarget2.value);\n  if ((element.condition[name] || \"\") === newVal) {\n    return;\n  }\n  let newCondition;\n  if (!newVal) {\n    newCondition = {\n      ...element.condition\n    };\n    delete newCondition[name];\n  } else {\n    newCondition = {\n      ...element.condition,\n      [name]: newVal\n    };\n  }\n  fireEvent(element, \"value-changed\", {\n    value: newCondition\n  });\n};\nlet HaAutomationConditionRow = _decorate([customElement(\"ha-automation-condition-row\")], function (_initialize, _LitElement) {\n  class HaAutomationConditionRow extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaAutomationConditionRow,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"condition\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"disabled\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Array\n      })],\n      key: \"path\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"first\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"last\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [storage({\n        key: \"automationClipboard\",\n        state: false,\n        subscribe: true,\n        storage: \"sessionStorage\"\n      })],\n      key: \"_clipboard\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_yamlMode\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_warnings\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_testing\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_testingResult\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state(), consume({\n        context: fullEntitiesContext,\n        subscribe: true\n      })],\n      key: \"_entityReg\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this.condition) {\n          return nothing;\n        }\n        return html`\n      <ha-card outlined>\n        ${this.condition.enabled === false ? html`\n              <div class=\"disabled-bar\">\n                ${this.hass.localize(\"ui.panel.config.automation.editor.actions.disabled\")}\n              </div>\n            ` : \"\"}\n\n        <ha-expansion-panel leftChevron>\n          <h3 slot=\"header\">\n            <ha-svg-icon\n              class=\"condition-icon\"\n              .path=${CONDITION_ICONS[this.condition.condition]}\n            ></ha-svg-icon>\n            ${capitalizeFirstLetter(describeCondition(this.condition, this.hass, this._entityReg))}\n          </h3>\n\n          <slot name=\"icons\" slot=\"icons\"></slot>\n\n          <ha-button-menu\n            slot=\"icons\"\n            @action=${this._handleAction}\n            @click=${preventDefault}\n            fixed\n          >\n            <ha-icon-button\n              slot=\"trigger\"\n              .label=${this.hass.localize(\"ui.common.menu\")}\n              .path=${mdiDotsVertical}\n            >\n            </ha-icon-button>\n\n            <mwc-list-item graphic=\"icon\">\n              ${this.hass.localize(\"ui.panel.config.automation.editor.conditions.test\")}\n              <ha-svg-icon slot=\"graphic\" .path=${mdiFlask}></ha-svg-icon>\n            </mwc-list-item>\n            <mwc-list-item graphic=\"icon\" .disabled=${this.disabled}>\n              ${this.hass.localize(\"ui.panel.config.automation.editor.conditions.rename\")}\n              <ha-svg-icon slot=\"graphic\" .path=${mdiRenameBox}></ha-svg-icon>\n            </mwc-list-item>\n\n            <li divider role=\"separator\"></li>\n\n            <mwc-list-item graphic=\"icon\" .disabled=${this.disabled}>\n              ${this.hass.localize(\"ui.panel.config.automation.editor.actions.duplicate\")}\n              <ha-svg-icon\n                slot=\"graphic\"\n                .path=${mdiContentDuplicate}\n              ></ha-svg-icon>\n            </mwc-list-item>\n\n            <mwc-list-item graphic=\"icon\" .disabled=${this.disabled}>\n              ${this.hass.localize(\"ui.panel.config.automation.editor.triggers.copy\")}\n              <ha-svg-icon slot=\"graphic\" .path=${mdiContentCopy}></ha-svg-icon>\n            </mwc-list-item>\n\n            <mwc-list-item graphic=\"icon\" .disabled=${this.disabled}>\n              ${this.hass.localize(\"ui.panel.config.automation.editor.triggers.cut\")}\n              <ha-svg-icon slot=\"graphic\" .path=${mdiContentCut}></ha-svg-icon>\n            </mwc-list-item>\n\n            <mwc-list-item\n              graphic=\"icon\"\n              .disabled=${this.disabled || this.first}\n            >\n              ${this.hass.localize(\"ui.panel.config.automation.editor.move_up\")}\n              <ha-svg-icon slot=\"graphic\" .path=${mdiArrowUp}></ha-svg-icon\n            ></mwc-list-item>\n\n            <mwc-list-item\n              graphic=\"icon\"\n              .disabled=${this.disabled || this.last}\n            >\n              ${this.hass.localize(\"ui.panel.config.automation.editor.move_down\")}\n              <ha-svg-icon slot=\"graphic\" .path=${mdiArrowDown}></ha-svg-icon\n            ></mwc-list-item>\n\n            <li divider role=\"separator\"></li>\n\n            <mwc-list-item graphic=\"icon\">\n              ${this.hass.localize(\"ui.panel.config.automation.editor.edit_ui\")}\n              ${!this._yamlMode ? html`<ha-svg-icon\n                    class=\"selected_menu_item\"\n                    slot=\"graphic\"\n                    .path=${mdiCheck}\n                  ></ha-svg-icon>` : ``}\n            </mwc-list-item>\n\n            <mwc-list-item graphic=\"icon\">\n              ${this.hass.localize(\"ui.panel.config.automation.editor.edit_yaml\")}\n              ${this._yamlMode ? html`<ha-svg-icon\n                    class=\"selected_menu_item\"\n                    slot=\"graphic\"\n                    .path=${mdiCheck}\n                  ></ha-svg-icon>` : ``}\n            </mwc-list-item>\n\n            <li divider role=\"separator\"></li>\n\n            <mwc-list-item graphic=\"icon\" .disabled=${this.disabled}>\n              ${this.condition.enabled === false ? this.hass.localize(\"ui.panel.config.automation.editor.actions.enable\") : this.hass.localize(\"ui.panel.config.automation.editor.actions.disable\")}\n              <ha-svg-icon\n                slot=\"graphic\"\n                .path=${this.condition.enabled === false ? mdiPlayCircleOutline : mdiStopCircleOutline}\n              ></ha-svg-icon>\n            </mwc-list-item>\n            <mwc-list-item\n              class=\"warning\"\n              graphic=\"icon\"\n              .disabled=${this.disabled}\n            >\n              ${this.hass.localize(\"ui.panel.config.automation.editor.actions.delete\")}\n              <ha-svg-icon\n                class=\"warning\"\n                slot=\"graphic\"\n                .path=${mdiDelete}\n              ></ha-svg-icon>\n            </mwc-list-item>\n          </ha-button-menu>\n\n          <div\n            class=${classMap({\n          \"card-content\": true,\n          disabled: this.condition.enabled === false\n        })}\n          >\n            ${this._warnings ? html`<ha-alert\n                  alert-type=\"warning\"\n                  .title=${this.hass.localize(\"ui.errors.config.editor_not_supported\")}\n                >\n                  ${this._warnings.length > 0 && this._warnings[0] !== undefined ? html` <ul>\n                        ${this._warnings.map(warning => html`<li>${warning}</li>`)}\n                      </ul>` : \"\"}\n                  ${this.hass.localize(\"ui.errors.config.edit_in_yaml_supported\")}\n                </ha-alert>` : \"\"}\n            <ha-automation-condition-editor\n              @ui-mode-not-available=${this._handleUiModeNotAvailable}\n              @value-changed=${this._handleChangeEvent}\n              .yamlMode=${this._yamlMode}\n              .disabled=${this.disabled}\n              .hass=${this.hass}\n              .condition=${this.condition}\n              .path=${this.path}\n            ></ha-automation-condition-editor>\n          </div>\n        </ha-expansion-panel>\n        <div\n          class=\"testing ${classMap({\n          active: this._testing,\n          pass: this._testingResult === true,\n          error: this._testingResult === false\n        })}\"\n        >\n          ${this._testingResult ? this.hass.localize(\"ui.panel.config.automation.editor.conditions.testing_pass\") : this.hass.localize(\"ui.panel.config.automation.editor.conditions.testing_error\")}\n        </div>\n      </ha-card>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleUiModeNotAvailable\",\n      value: function _handleUiModeNotAvailable(ev) {\n        // Prevent possible parent action-row from switching to yamlMode\n        ev.stopPropagation();\n        this._warnings = handleStructError(this.hass, ev.detail).warnings;\n        if (!this._yamlMode) {\n          this._yamlMode = true;\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleChangeEvent\",\n      value: function _handleChangeEvent(ev) {\n        if (ev.detail.yaml) {\n          this._warnings = undefined;\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleAction\",\n      value: async function _handleAction(ev) {\n        switch (ev.detail.index) {\n          case 0:\n            await this._testCondition();\n            break;\n          case 1:\n            await this._renameCondition();\n            break;\n          case 2:\n            fireEvent(this, \"duplicate\");\n            break;\n          case 3:\n            this._setClipboard();\n            break;\n          case 4:\n            this._setClipboard();\n            fireEvent(this, \"value-changed\", {\n              value: null\n            });\n            break;\n          case 5:\n            fireEvent(this, \"move-up\");\n            break;\n          case 6:\n            fireEvent(this, \"move-down\");\n            break;\n          case 7:\n            this._switchUiMode();\n            this.expand();\n            break;\n          case 8:\n            this._switchYamlMode();\n            this.expand();\n            break;\n          case 9:\n            this._onDisable();\n            break;\n          case 10:\n            this._onDelete();\n            break;\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_setClipboard\",\n      value: function _setClipboard() {\n        this._clipboard = {\n          ...this._clipboard,\n          condition: deepClone(this.condition)\n        };\n      }\n    }, {\n      kind: \"method\",\n      key: \"_onDisable\",\n      value: function _onDisable() {\n        var _this$condition$enabl;\n        const enabled = !((_this$condition$enabl = this.condition.enabled) !== null && _this$condition$enabl !== void 0 ? _this$condition$enabl : true);\n        const value = {\n          ...this.condition,\n          enabled\n        };\n        fireEvent(this, \"value-changed\", {\n          value\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_onDelete\",\n      value: function _onDelete() {\n        showConfirmationDialog(this, {\n          title: this.hass.localize(\"ui.panel.config.automation.editor.conditions.delete_confirm_title\"),\n          text: this.hass.localize(\"ui.panel.config.automation.editor.conditions.delete_confirm_text\"),\n          dismissText: this.hass.localize(\"ui.common.cancel\"),\n          confirmText: this.hass.localize(\"ui.common.delete\"),\n          destructive: true,\n          confirm: () => {\n            fireEvent(this, \"value-changed\", {\n              value: null\n            });\n          }\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_switchUiMode\",\n      value: function _switchUiMode() {\n        this._warnings = undefined;\n        this._yamlMode = false;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_switchYamlMode\",\n      value: function _switchYamlMode() {\n        this._warnings = undefined;\n        this._yamlMode = true;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_testCondition\",\n      value: async function _testCondition() {\n        if (this._testing) {\n          return;\n        }\n        this._testingResult = undefined;\n        this._testing = true;\n        const condition = this.condition;\n        try {\n          const validateResult = await validateConfig(this.hass, {\n            condition\n          });\n\n          // Abort if condition changed.\n          if (this.condition !== condition) {\n            this._testing = false;\n            return;\n          }\n          if (!validateResult.condition.valid) {\n            showAlertDialog(this, {\n              title: this.hass.localize(\"ui.panel.config.automation.editor.conditions.invalid_condition\"),\n              text: validateResult.condition.error\n            });\n            this._testing = false;\n            return;\n          }\n          let result;\n          try {\n            result = await testCondition(this.hass, condition);\n          } catch (err) {\n            if (this.condition !== condition) {\n              this._testing = false;\n              return;\n            }\n            showAlertDialog(this, {\n              title: this.hass.localize(\"ui.panel.config.automation.editor.conditions.test_failed\"),\n              text: err.message\n            });\n            this._testing = false;\n            return;\n          }\n          this._testingResult = result.result;\n        } finally {\n          setTimeout(() => {\n            this._testing = false;\n          }, 2500);\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_renameCondition\",\n      value: async function _renameCondition() {\n        const alias = await showPromptDialog(this, {\n          title: this.hass.localize(\"ui.panel.config.automation.editor.conditions.change_alias\"),\n          inputLabel: this.hass.localize(\"ui.panel.config.automation.editor.conditions.alias\"),\n          inputType: \"string\",\n          placeholder: capitalizeFirstLetter(describeCondition(this.condition, this.hass, this._entityReg, true)),\n          defaultValue: this.condition.alias,\n          confirmText: this.hass.localize(\"ui.common.submit\")\n        });\n        if (alias !== null) {\n          const value = {\n            ...this.condition\n          };\n          if (alias === \"\") {\n            delete value.alias;\n          } else {\n            value.alias = alias;\n          }\n          fireEvent(this, \"value-changed\", {\n            value\n          });\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"expand\",\n      value: function expand() {\n        this.updateComplete.then(() => {\n          this.shadowRoot.querySelector(\"ha-expansion-panel\").expanded = true;\n        });\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [haStyle, css`\n        ha-button-menu {\n          --mdc-theme-text-primary-on-background: var(--primary-text-color);\n        }\n        .disabled {\n          opacity: 0.5;\n          pointer-events: none;\n        }\n        ha-expansion-panel {\n          --expansion-panel-summary-padding: 0 0 0 8px;\n          --expansion-panel-content-padding: 0;\n        }\n        h3 {\n          margin: 0;\n          font-size: inherit;\n          font-weight: inherit;\n        }\n        .condition-icon {\n          display: none;\n        }\n        @media (min-width: 870px) {\n          .condition-icon {\n            display: inline-block;\n            color: var(--secondary-text-color);\n            opacity: 0.9;\n            margin-right: 8px;\n            margin-inline-end: 8px;\n            margin-inline-start: initial;\n          }\n        }\n        .card-content {\n          padding: 16px;\n        }\n        .disabled-bar {\n          background: var(--divider-color, #e0e0e0);\n          text-align: center;\n          border-top-right-radius: var(--ha-card-border-radius);\n          border-top-left-radius: var(--ha-card-border-radius);\n        }\n        mwc-list-item[disabled] {\n          --mdc-theme-text-primary-on-background: var(--disabled-text-color);\n        }\n        mwc-list-item.hidden {\n          display: none;\n        }\n        .testing {\n          position: absolute;\n          top: 0px;\n          right: 0px;\n          left: 0px;\n          text-transform: uppercase;\n          font-weight: bold;\n          font-size: 14px;\n          background-color: var(--divider-color, #e0e0e0);\n          color: var(--text-primary-color);\n          max-height: 0px;\n          overflow: hidden;\n          transition: max-height 0.3s;\n          text-align: center;\n          border-top-right-radius: var(--ha-card-border-radius, 12px);\n          border-top-left-radius: var(--ha-card-border-radius, 12px);\n        }\n        .testing.active {\n          max-height: 100px;\n        }\n        .testing.error {\n          background-color: var(--accent-color);\n        }\n        .testing.pass {\n          background-color: var(--success-color);\n        }\n        .selected_menu_item {\n          color: var(--primary-color);\n        }\n        li[role=\"separator\"] {\n          border-bottom-color: var(--divider-color);\n        }\n      `];\n      }\n    }]\n  };\n}, LitElement);\nexport { HaAutomationConditionRow as default };","map":{"version":3,"names":["consume","mdiArrowDown","mdiArrowUp","mdiCheck","mdiContentCopy","mdiContentCut","mdiContentDuplicate","mdiDelete","mdiDotsVertical","mdiFlask","mdiPlayCircleOutline","mdiRenameBox","mdiStopCircleOutline","deepClone","LitElement","css","html","nothing","customElement","property","state","classMap","storage","fireEvent","capitalizeFirstLetter","handleStructError","testCondition","describeCondition","CONDITION_ICONS","validateConfig","fullEntitiesContext","showAlertDialog","showConfirmationDialog","showPromptDialog","haStyle","preventDefault","ev","handleChangeEvent","element","_ev$currentTarget","_ev$detail","_ev$currentTarget2","stopPropagation","name","currentTarget","newVal","detail","value","condition","newCondition","HaAutomationConditionRow","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","type","Boolean","Array","subscribe","context","render","enabled","hass","localize","_entityReg","_handleAction","disabled","first","last","_yamlMode","_warnings","length","undefined","map","warning","_handleUiModeNotAvailable","_handleChangeEvent","path","active","_testing","pass","_testingResult","error","warnings","yaml","index","_testCondition","_renameCondition","_setClipboard","_switchUiMode","expand","_switchYamlMode","_onDisable","_onDelete","_clipboard","_this$condition$enabl","title","text","dismissText","confirmText","destructive","confirm","validateResult","valid","result","err","message","setTimeout","alias","inputLabel","inputType","placeholder","defaultValue","updateComplete","then","shadowRoot","querySelector","expanded","static","styles","default"],"sources":["/workspaces/frontend/src/panels/config/automation/condition/ha-automation-condition-row.ts"],"sourcesContent":["import { consume } from \"@lit-labs/context\";\nimport { ActionDetail } from \"@material/mwc-list/mwc-list-foundation\";\nimport \"@material/mwc-list/mwc-list-item\";\nimport {\n  mdiArrowDown,\n  mdiArrowUp,\n  mdiCheck,\n  mdiContentCopy,\n  mdiContentCut,\n  mdiContentDuplicate,\n  mdiDelete,\n  mdiDotsVertical,\n  mdiFlask,\n  mdiPlayCircleOutline,\n  mdiRenameBox,\n  mdiStopCircleOutline,\n} from \"@mdi/js\";\nimport deepClone from \"deep-clone-simple\";\nimport { CSSResultGroup, LitElement, css, html, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport { storage } from \"../../../../common/decorators/storage\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { capitalizeFirstLetter } from \"../../../../common/string/capitalize-first-letter\";\nimport { handleStructError } from \"../../../../common/structs/handle-errors\";\nimport \"../../../../components/ha-button-menu\";\nimport \"../../../../components/ha-card\";\nimport \"../../../../components/ha-expansion-panel\";\nimport \"../../../../components/ha-icon-button\";\nimport type { AutomationClipboard } from \"../../../../data/automation\";\nimport { Condition, testCondition } from \"../../../../data/automation\";\nimport { describeCondition } from \"../../../../data/automation_i18n\";\nimport { CONDITION_ICONS } from \"../../../../data/condition\";\nimport { validateConfig } from \"../../../../data/config\";\nimport { fullEntitiesContext } from \"../../../../data/context\";\nimport { EntityRegistryEntry } from \"../../../../data/entity_registry\";\nimport {\n  showAlertDialog,\n  showConfirmationDialog,\n  showPromptDialog,\n} from \"../../../../dialogs/generic/show-dialog-box\";\nimport { haStyle } from \"../../../../resources/styles\";\nimport { HomeAssistant, ItemPath } from \"../../../../types\";\nimport \"./ha-automation-condition-editor\";\n\nexport interface ConditionElement extends LitElement {\n  condition: Condition;\n}\n\nconst preventDefault = (ev) => ev.preventDefault();\n\nexport const handleChangeEvent = (\n  element: ConditionElement,\n  ev: CustomEvent\n) => {\n  ev.stopPropagation();\n  const name = (ev.currentTarget as any)?.name;\n  if (!name) {\n    return;\n  }\n  const newVal = ev.detail?.value || (ev.currentTarget as any)?.value;\n\n  if ((element.condition[name] || \"\") === newVal) {\n    return;\n  }\n\n  let newCondition: Condition;\n  if (!newVal) {\n    newCondition = { ...element.condition };\n    delete newCondition[name];\n  } else {\n    newCondition = { ...element.condition, [name]: newVal };\n  }\n  fireEvent(element, \"value-changed\", { value: newCondition });\n};\n\n@customElement(\"ha-automation-condition-row\")\nexport default class HaAutomationConditionRow extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public condition!: Condition;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @property({ type: Array }) public path?: ItemPath;\n\n  @property({ type: Boolean }) public first?: boolean;\n\n  @property({ type: Boolean }) public last?: boolean;\n\n  @storage({\n    key: \"automationClipboard\",\n    state: false,\n    subscribe: true,\n    storage: \"sessionStorage\",\n  })\n  public _clipboard?: AutomationClipboard;\n\n  @state() private _yamlMode = false;\n\n  @state() private _warnings?: string[];\n\n  @state() private _testing = false;\n\n  @state() private _testingResult?: boolean;\n\n  @state()\n  @consume({ context: fullEntitiesContext, subscribe: true })\n  _entityReg!: EntityRegistryEntry[];\n\n  protected render() {\n    if (!this.condition) {\n      return nothing;\n    }\n\n    return html`\n      <ha-card outlined>\n        ${this.condition.enabled === false\n          ? html`\n              <div class=\"disabled-bar\">\n                ${this.hass.localize(\n                  \"ui.panel.config.automation.editor.actions.disabled\"\n                )}\n              </div>\n            `\n          : \"\"}\n\n        <ha-expansion-panel leftChevron>\n          <h3 slot=\"header\">\n            <ha-svg-icon\n              class=\"condition-icon\"\n              .path=${CONDITION_ICONS[this.condition.condition]}\n            ></ha-svg-icon>\n            ${capitalizeFirstLetter(\n              describeCondition(this.condition, this.hass, this._entityReg)\n            )}\n          </h3>\n\n          <slot name=\"icons\" slot=\"icons\"></slot>\n\n          <ha-button-menu\n            slot=\"icons\"\n            @action=${this._handleAction}\n            @click=${preventDefault}\n            fixed\n          >\n            <ha-icon-button\n              slot=\"trigger\"\n              .label=${this.hass.localize(\"ui.common.menu\")}\n              .path=${mdiDotsVertical}\n            >\n            </ha-icon-button>\n\n            <mwc-list-item graphic=\"icon\">\n              ${this.hass.localize(\n                \"ui.panel.config.automation.editor.conditions.test\"\n              )}\n              <ha-svg-icon slot=\"graphic\" .path=${mdiFlask}></ha-svg-icon>\n            </mwc-list-item>\n            <mwc-list-item graphic=\"icon\" .disabled=${this.disabled}>\n              ${this.hass.localize(\n                \"ui.panel.config.automation.editor.conditions.rename\"\n              )}\n              <ha-svg-icon slot=\"graphic\" .path=${mdiRenameBox}></ha-svg-icon>\n            </mwc-list-item>\n\n            <li divider role=\"separator\"></li>\n\n            <mwc-list-item graphic=\"icon\" .disabled=${this.disabled}>\n              ${this.hass.localize(\n                \"ui.panel.config.automation.editor.actions.duplicate\"\n              )}\n              <ha-svg-icon\n                slot=\"graphic\"\n                .path=${mdiContentDuplicate}\n              ></ha-svg-icon>\n            </mwc-list-item>\n\n            <mwc-list-item graphic=\"icon\" .disabled=${this.disabled}>\n              ${this.hass.localize(\n                \"ui.panel.config.automation.editor.triggers.copy\"\n              )}\n              <ha-svg-icon slot=\"graphic\" .path=${mdiContentCopy}></ha-svg-icon>\n            </mwc-list-item>\n\n            <mwc-list-item graphic=\"icon\" .disabled=${this.disabled}>\n              ${this.hass.localize(\n                \"ui.panel.config.automation.editor.triggers.cut\"\n              )}\n              <ha-svg-icon slot=\"graphic\" .path=${mdiContentCut}></ha-svg-icon>\n            </mwc-list-item>\n\n            <mwc-list-item\n              graphic=\"icon\"\n              .disabled=${this.disabled || this.first}\n            >\n              ${this.hass.localize(\"ui.panel.config.automation.editor.move_up\")}\n              <ha-svg-icon slot=\"graphic\" .path=${mdiArrowUp}></ha-svg-icon\n            ></mwc-list-item>\n\n            <mwc-list-item\n              graphic=\"icon\"\n              .disabled=${this.disabled || this.last}\n            >\n              ${this.hass.localize(\n                \"ui.panel.config.automation.editor.move_down\"\n              )}\n              <ha-svg-icon slot=\"graphic\" .path=${mdiArrowDown}></ha-svg-icon\n            ></mwc-list-item>\n\n            <li divider role=\"separator\"></li>\n\n            <mwc-list-item graphic=\"icon\">\n              ${this.hass.localize(\"ui.panel.config.automation.editor.edit_ui\")}\n              ${!this._yamlMode\n                ? html`<ha-svg-icon\n                    class=\"selected_menu_item\"\n                    slot=\"graphic\"\n                    .path=${mdiCheck}\n                  ></ha-svg-icon>`\n                : ``}\n            </mwc-list-item>\n\n            <mwc-list-item graphic=\"icon\">\n              ${this.hass.localize(\n                \"ui.panel.config.automation.editor.edit_yaml\"\n              )}\n              ${this._yamlMode\n                ? html`<ha-svg-icon\n                    class=\"selected_menu_item\"\n                    slot=\"graphic\"\n                    .path=${mdiCheck}\n                  ></ha-svg-icon>`\n                : ``}\n            </mwc-list-item>\n\n            <li divider role=\"separator\"></li>\n\n            <mwc-list-item graphic=\"icon\" .disabled=${this.disabled}>\n              ${this.condition.enabled === false\n                ? this.hass.localize(\n                    \"ui.panel.config.automation.editor.actions.enable\"\n                  )\n                : this.hass.localize(\n                    \"ui.panel.config.automation.editor.actions.disable\"\n                  )}\n              <ha-svg-icon\n                slot=\"graphic\"\n                .path=${this.condition.enabled === false\n                  ? mdiPlayCircleOutline\n                  : mdiStopCircleOutline}\n              ></ha-svg-icon>\n            </mwc-list-item>\n            <mwc-list-item\n              class=\"warning\"\n              graphic=\"icon\"\n              .disabled=${this.disabled}\n            >\n              ${this.hass.localize(\n                \"ui.panel.config.automation.editor.actions.delete\"\n              )}\n              <ha-svg-icon\n                class=\"warning\"\n                slot=\"graphic\"\n                .path=${mdiDelete}\n              ></ha-svg-icon>\n            </mwc-list-item>\n          </ha-button-menu>\n\n          <div\n            class=${classMap({\n              \"card-content\": true,\n              disabled: this.condition.enabled === false,\n            })}\n          >\n            ${this._warnings\n              ? html`<ha-alert\n                  alert-type=\"warning\"\n                  .title=${this.hass.localize(\n                    \"ui.errors.config.editor_not_supported\"\n                  )}\n                >\n                  ${this._warnings!.length > 0 &&\n                  this._warnings![0] !== undefined\n                    ? html` <ul>\n                        ${this._warnings!.map(\n                          (warning) => html`<li>${warning}</li>`\n                        )}\n                      </ul>`\n                    : \"\"}\n                  ${this.hass.localize(\n                    \"ui.errors.config.edit_in_yaml_supported\"\n                  )}\n                </ha-alert>`\n              : \"\"}\n            <ha-automation-condition-editor\n              @ui-mode-not-available=${this._handleUiModeNotAvailable}\n              @value-changed=${this._handleChangeEvent}\n              .yamlMode=${this._yamlMode}\n              .disabled=${this.disabled}\n              .hass=${this.hass}\n              .condition=${this.condition}\n              .path=${this.path}\n            ></ha-automation-condition-editor>\n          </div>\n        </ha-expansion-panel>\n        <div\n          class=\"testing ${classMap({\n            active: this._testing,\n            pass: this._testingResult === true,\n            error: this._testingResult === false,\n          })}\"\n        >\n          ${this._testingResult\n            ? this.hass.localize(\n                \"ui.panel.config.automation.editor.conditions.testing_pass\"\n              )\n            : this.hass.localize(\n                \"ui.panel.config.automation.editor.conditions.testing_error\"\n              )}\n        </div>\n      </ha-card>\n    `;\n  }\n\n  private _handleUiModeNotAvailable(ev: CustomEvent) {\n    // Prevent possible parent action-row from switching to yamlMode\n    ev.stopPropagation();\n    this._warnings = handleStructError(this.hass, ev.detail).warnings;\n    if (!this._yamlMode) {\n      this._yamlMode = true;\n    }\n  }\n\n  private _handleChangeEvent(ev: CustomEvent) {\n    if (ev.detail.yaml) {\n      this._warnings = undefined;\n    }\n  }\n\n  private async _handleAction(ev: CustomEvent<ActionDetail>) {\n    switch (ev.detail.index) {\n      case 0:\n        await this._testCondition();\n        break;\n      case 1:\n        await this._renameCondition();\n        break;\n      case 2:\n        fireEvent(this, \"duplicate\");\n        break;\n      case 3:\n        this._setClipboard();\n        break;\n      case 4:\n        this._setClipboard();\n        fireEvent(this, \"value-changed\", { value: null });\n        break;\n      case 5:\n        fireEvent(this, \"move-up\");\n        break;\n      case 6:\n        fireEvent(this, \"move-down\");\n        break;\n      case 7:\n        this._switchUiMode();\n        this.expand();\n        break;\n      case 8:\n        this._switchYamlMode();\n        this.expand();\n        break;\n      case 9:\n        this._onDisable();\n        break;\n      case 10:\n        this._onDelete();\n        break;\n    }\n  }\n\n  private _setClipboard() {\n    this._clipboard = {\n      ...this._clipboard,\n      condition: deepClone(this.condition),\n    };\n  }\n\n  private _onDisable() {\n    const enabled = !(this.condition.enabled ?? true);\n    const value = { ...this.condition, enabled };\n    fireEvent(this, \"value-changed\", { value });\n  }\n\n  private _onDelete() {\n    showConfirmationDialog(this, {\n      title: this.hass.localize(\n        \"ui.panel.config.automation.editor.conditions.delete_confirm_title\"\n      ),\n      text: this.hass.localize(\n        \"ui.panel.config.automation.editor.conditions.delete_confirm_text\"\n      ),\n      dismissText: this.hass.localize(\"ui.common.cancel\"),\n      confirmText: this.hass.localize(\"ui.common.delete\"),\n      destructive: true,\n      confirm: () => {\n        fireEvent(this, \"value-changed\", { value: null });\n      },\n    });\n  }\n\n  private _switchUiMode() {\n    this._warnings = undefined;\n    this._yamlMode = false;\n  }\n\n  private _switchYamlMode() {\n    this._warnings = undefined;\n    this._yamlMode = true;\n  }\n\n  private async _testCondition() {\n    if (this._testing) {\n      return;\n    }\n    this._testingResult = undefined;\n    this._testing = true;\n    const condition = this.condition;\n\n    try {\n      const validateResult = await validateConfig(this.hass, {\n        condition,\n      });\n\n      // Abort if condition changed.\n      if (this.condition !== condition) {\n        this._testing = false;\n        return;\n      }\n\n      if (!validateResult.condition.valid) {\n        showAlertDialog(this, {\n          title: this.hass.localize(\n            \"ui.panel.config.automation.editor.conditions.invalid_condition\"\n          ),\n          text: validateResult.condition.error,\n        });\n        this._testing = false;\n        return;\n      }\n\n      let result: { result: boolean };\n      try {\n        result = await testCondition(this.hass, condition);\n      } catch (err: any) {\n        if (this.condition !== condition) {\n          this._testing = false;\n          return;\n        }\n\n        showAlertDialog(this, {\n          title: this.hass.localize(\n            \"ui.panel.config.automation.editor.conditions.test_failed\"\n          ),\n          text: err.message,\n        });\n        this._testing = false;\n        return;\n      }\n\n      this._testingResult = result.result;\n    } finally {\n      setTimeout(() => {\n        this._testing = false;\n      }, 2500);\n    }\n  }\n\n  private async _renameCondition(): Promise<void> {\n    const alias = await showPromptDialog(this, {\n      title: this.hass.localize(\n        \"ui.panel.config.automation.editor.conditions.change_alias\"\n      ),\n      inputLabel: this.hass.localize(\n        \"ui.panel.config.automation.editor.conditions.alias\"\n      ),\n      inputType: \"string\",\n      placeholder: capitalizeFirstLetter(\n        describeCondition(this.condition, this.hass, this._entityReg, true)\n      ),\n      defaultValue: this.condition.alias,\n      confirmText: this.hass.localize(\"ui.common.submit\"),\n    });\n    if (alias !== null) {\n      const value = { ...this.condition };\n      if (alias === \"\") {\n        delete value.alias;\n      } else {\n        value.alias = alias;\n      }\n      fireEvent(this, \"value-changed\", {\n        value,\n      });\n    }\n  }\n\n  public expand() {\n    this.updateComplete.then(() => {\n      this.shadowRoot!.querySelector(\"ha-expansion-panel\")!.expanded = true;\n    });\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyle,\n      css`\n        ha-button-menu {\n          --mdc-theme-text-primary-on-background: var(--primary-text-color);\n        }\n        .disabled {\n          opacity: 0.5;\n          pointer-events: none;\n        }\n        ha-expansion-panel {\n          --expansion-panel-summary-padding: 0 0 0 8px;\n          --expansion-panel-content-padding: 0;\n        }\n        h3 {\n          margin: 0;\n          font-size: inherit;\n          font-weight: inherit;\n        }\n        .condition-icon {\n          display: none;\n        }\n        @media (min-width: 870px) {\n          .condition-icon {\n            display: inline-block;\n            color: var(--secondary-text-color);\n            opacity: 0.9;\n            margin-right: 8px;\n            margin-inline-end: 8px;\n            margin-inline-start: initial;\n          }\n        }\n        .card-content {\n          padding: 16px;\n        }\n        .disabled-bar {\n          background: var(--divider-color, #e0e0e0);\n          text-align: center;\n          border-top-right-radius: var(--ha-card-border-radius);\n          border-top-left-radius: var(--ha-card-border-radius);\n        }\n        mwc-list-item[disabled] {\n          --mdc-theme-text-primary-on-background: var(--disabled-text-color);\n        }\n        mwc-list-item.hidden {\n          display: none;\n        }\n        .testing {\n          position: absolute;\n          top: 0px;\n          right: 0px;\n          left: 0px;\n          text-transform: uppercase;\n          font-weight: bold;\n          font-size: 14px;\n          background-color: var(--divider-color, #e0e0e0);\n          color: var(--text-primary-color);\n          max-height: 0px;\n          overflow: hidden;\n          transition: max-height 0.3s;\n          text-align: center;\n          border-top-right-radius: var(--ha-card-border-radius, 12px);\n          border-top-left-radius: var(--ha-card-border-radius, 12px);\n        }\n        .testing.active {\n          max-height: 100px;\n        }\n        .testing.error {\n          background-color: var(--accent-color);\n        }\n        .testing.pass {\n          background-color: var(--success-color);\n        }\n        .selected_menu_item {\n          color: var(--primary-color);\n        }\n        li[role=\"separator\"] {\n          border-bottom-color: var(--divider-color);\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-automation-condition-row\": HaAutomationConditionRow;\n  }\n}\n"],"mappings":";AAAA,SAASA,OAAO,QAAQ,mBAAmB;AAE3C,OAAO,kCAAkC;AAAC,MAAAC,YAAA;AAAA,MAAAC,UAAA;AAAA,MAAAC,QAAA;AAAA,MAAAC,cAAA;AAAA,MAAAC,aAAA;AAAA,MAAAC,mBAAA;AAAA,MAAAC,SAAA;AAAA,MAAAC,eAAA;AAAA,MAAAC,QAAA;AAAA,MAAAC,oBAAA;AAAA,MAAAC,YAAA;AAAA,MAAAC,oBAAA;AAe1C,OAAOC,SAAS,MAAM,mBAAmB;AACzC,SAAyBC,UAAU,EAAEC,GAAG,EAAEC,IAAI,EAAEC,OAAO,QAAQ,KAAK;AACpE,SAASC,aAAa,EAAEC,QAAQ,EAAEC,KAAK,QAAQ,gBAAgB;AAC/D,SAASC,QAAQ,QAAQ,0BAA0B;AACnD,SAASC,OAAO,QAAQ,uCAAuC;AAC/D,SAASC,SAAS,QAAQ,mCAAmC;AAC7D,SAASC,qBAAqB,QAAQ,mDAAmD;AACzF,SAASC,iBAAiB,QAAQ,0CAA0C;AAC5E,OAAO,uCAAuC;AAC9C,OAAO,gCAAgC;AACvC,OAAO,2CAA2C;AAClD,OAAO,uCAAuC;AAE9C,SAAoBC,aAAa,QAAQ,6BAA6B;AACtE,SAASC,iBAAiB,QAAQ,kCAAkC;AACpE,SAASC,eAAe,QAAQ,4BAA4B;AAC5D,SAASC,cAAc,QAAQ,yBAAyB;AACxD,SAASC,mBAAmB,QAAQ,0BAA0B;AAE9D,SACEC,eAAe,EACfC,sBAAsB,EACtBC,gBAAgB,QACX,6CAA6C;AACpD,SAASC,OAAO,QAAQ,8BAA8B;AAEtD,OAAO,kCAAkC;AAMzC,MAAMC,cAAc,GAAIC,EAAE,IAAKA,EAAE,CAACD,cAAc,CAAC,CAAC;AAElD,OAAO,MAAME,iBAAiB,GAAGA,CAC/BC,OAAyB,EACzBF,EAAe,KACZ;EAAA,IAAAG,iBAAA,EAAAC,UAAA,EAAAC,kBAAA;EACHL,EAAE,CAACM,eAAe,CAAC,CAAC;EACpB,MAAMC,IAAI,IAAAJ,iBAAA,GAAIH,EAAE,CAACQ,aAAa,cAAAL,iBAAA,uBAAjBA,iBAAA,CAA2BI,IAAI;EAC5C,IAAI,CAACA,IAAI,EAAE;IACT;EACF;EACA,MAAME,MAAM,GAAG,EAAAL,UAAA,GAAAJ,EAAE,CAACU,MAAM,cAAAN,UAAA,uBAATA,UAAA,CAAWO,KAAK,OAAAN,kBAAA,GAAKL,EAAE,CAACQ,aAAa,cAAAH,kBAAA,uBAAjBA,kBAAA,CAA2BM,KAAK;EAEnE,IAAI,CAACT,OAAO,CAACU,SAAS,CAACL,IAAI,CAAC,IAAI,EAAE,MAAME,MAAM,EAAE;IAC9C;EACF;EAEA,IAAII,YAAuB;EAC3B,IAAI,CAACJ,MAAM,EAAE;IACXI,YAAY,GAAG;MAAE,GAAGX,OAAO,CAACU;IAAU,CAAC;IACvC,OAAOC,YAAY,CAACN,IAAI,CAAC;EAC3B,CAAC,MAAM;IACLM,YAAY,GAAG;MAAE,GAAGX,OAAO,CAACU,SAAS;MAAE,CAACL,IAAI,GAAGE;IAAO,CAAC;EACzD;EACAtB,SAAS,CAACe,OAAO,EAAE,eAAe,EAAE;IAAES,KAAK,EAAEE;EAAa,CAAC,CAAC;AAC9D,CAAC;AAAC,IAGmBC,wBAAwB,GAAAC,SAAA,EAD5CjC,aAAa,CAAC,6BAA6B,CAAC,aAAAkC,WAAA,EAAAC,WAAA;EAA7C,MACqBH,wBAAwB,SAAAG,WAAA,CAAoB;IAAAC,YAAA,GAAAC,IAAA;MAAA,SAAAA,IAAA;MAAAH,WAAA;IAAA;EAsgBjE;EAAC;IAAAI,CAAA,EAtgBoBN,wBAAwB;IAAAO,CAAA;MAAAC,IAAA;MAAAC,UAAA,GAC1CxC,QAAQ,CAAC;QAAEyC,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAC,GAAA;MAAAd,KAAA;IAAA;MAAAW,IAAA;MAAAC,UAAA,GAE9BxC,QAAQ,CAAC;QAAEyC,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAC,GAAA;MAAAd,KAAA;IAAA;MAAAW,IAAA;MAAAC,UAAA,GAE9BxC,QAAQ,CAAC;QAAE2C,IAAI,EAAEC;MAAQ,CAAC,CAAC;MAAAF,GAAA;MAAAd,MAAA;QAAA,OAAmB,KAAK;MAAA;IAAA;MAAAW,IAAA;MAAAC,UAAA,GAEnDxC,QAAQ,CAAC;QAAE2C,IAAI,EAAEE;MAAM,CAAC,CAAC;MAAAH,GAAA;MAAAd,KAAA;IAAA;MAAAW,IAAA;MAAAC,UAAA,GAEzBxC,QAAQ,CAAC;QAAE2C,IAAI,EAAEC;MAAQ,CAAC,CAAC;MAAAF,GAAA;MAAAd,KAAA;IAAA;MAAAW,IAAA;MAAAC,UAAA,GAE3BxC,QAAQ,CAAC;QAAE2C,IAAI,EAAEC;MAAQ,CAAC,CAAC;MAAAF,GAAA;MAAAd,KAAA;IAAA;MAAAW,IAAA;MAAAC,UAAA,GAE3BrC,OAAO,CAAC;QACPuC,GAAG,EAAE,qBAAqB;QAC1BzC,KAAK,EAAE,KAAK;QACZ6C,SAAS,EAAE,IAAI;QACf3C,OAAO,EAAE;MACX,CAAC,CAAC;MAAAuC,GAAA;MAAAd,KAAA;IAAA;MAAAW,IAAA;MAAAC,UAAA,GAGDvC,KAAK,CAAC,CAAC;MAAAyC,GAAA;MAAAd,MAAA;QAAA,OAAqB,KAAK;MAAA;IAAA;MAAAW,IAAA;MAAAC,UAAA,GAEjCvC,KAAK,CAAC,CAAC;MAAAyC,GAAA;MAAAd,KAAA;IAAA;MAAAW,IAAA;MAAAC,UAAA,GAEPvC,KAAK,CAAC,CAAC;MAAAyC,GAAA;MAAAd,MAAA;QAAA,OAAoB,KAAK;MAAA;IAAA;MAAAW,IAAA;MAAAC,UAAA,GAEhCvC,KAAK,CAAC,CAAC;MAAAyC,GAAA;MAAAd,KAAA;IAAA;MAAAW,IAAA;MAAAC,UAAA,GAEPvC,KAAK,CAAC,CAAC,EACPpB,OAAO,CAAC;QAAEkE,OAAO,EAAEpC,mBAAmB;QAAEmC,SAAS,EAAE;MAAK,CAAC,CAAC;MAAAJ,GAAA;MAAAd,KAAA;IAAA;MAAAW,IAAA;MAAAG,GAAA;MAAAd,KAAA,EAG3D,SAAAoB,OAAA,EAAmB;QACjB,IAAI,CAAC,IAAI,CAACnB,SAAS,EAAE;UACnB,OAAO/B,OAAO;QAChB;QAEA,OAAOD,IAAK;AAChB;AACA,UAAU,IAAI,CAACgC,SAAS,CAACoB,OAAO,KAAK,KAAK,GAC9BpD,IAAK;AACjB;AACA,kBAAkB,IAAI,CAACqD,IAAI,CAACC,QAAQ,CAClB,oDACF,CAAE;AAClB;AACA,aAAa,GACD,EAAG;AACf;AACA;AACA;AACA;AACA;AACA,sBAAsB1C,eAAe,CAAC,IAAI,CAACoB,SAAS,CAACA,SAAS,CAAE;AAChE;AACA,cAAcxB,qBAAqB,CACrBG,iBAAiB,CAAC,IAAI,CAACqB,SAAS,EAAE,IAAI,CAACqB,IAAI,EAAE,IAAI,CAACE,UAAU,CAC9D,CAAE;AACd;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,IAAI,CAACC,aAAc;AACzC,qBAAqBrC,cAAe;AACpC;AACA;AACA;AACA;AACA,uBAAuB,IAAI,CAACkC,IAAI,CAACC,QAAQ,CAAC,gBAAgB,CAAE;AAC5D,sBAAsB9D,eAAgB;AACtC;AACA;AACA;AACA;AACA,gBAAgB,IAAI,CAAC6D,IAAI,CAACC,QAAQ,CAClB,mDACF,CAAE;AAChB,kDAAkD7D,QAAS;AAC3D;AACA,sDAAsD,IAAI,CAACgE,QAAS;AACpE,gBAAgB,IAAI,CAACJ,IAAI,CAACC,QAAQ,CAClB,qDACF,CAAE;AAChB,kDAAkD3D,YAAa;AAC/D;AACA;AACA;AACA;AACA,sDAAsD,IAAI,CAAC8D,QAAS;AACpE,gBAAgB,IAAI,CAACJ,IAAI,CAACC,QAAQ,CAClB,qDACF,CAAE;AAChB;AACA;AACA,wBAAwBhE,mBAAoB;AAC5C;AACA;AACA;AACA,sDAAsD,IAAI,CAACmE,QAAS;AACpE,gBAAgB,IAAI,CAACJ,IAAI,CAACC,QAAQ,CAClB,iDACF,CAAE;AAChB,kDAAkDlE,cAAe;AACjE;AACA;AACA,sDAAsD,IAAI,CAACqE,QAAS;AACpE,gBAAgB,IAAI,CAACJ,IAAI,CAACC,QAAQ,CAClB,gDACF,CAAE;AAChB,kDAAkDjE,aAAc;AAChE;AACA;AACA;AACA;AACA,0BAA0B,IAAI,CAACoE,QAAQ,IAAI,IAAI,CAACC,KAAM;AACtD;AACA,gBAAgB,IAAI,CAACL,IAAI,CAACC,QAAQ,CAAC,2CAA2C,CAAE;AAChF,kDAAkDpE,UAAW;AAC7D;AACA;AACA;AACA;AACA,0BAA0B,IAAI,CAACuE,QAAQ,IAAI,IAAI,CAACE,IAAK;AACrD;AACA,gBAAgB,IAAI,CAACN,IAAI,CAACC,QAAQ,CAClB,6CACF,CAAE;AAChB,kDAAkDrE,YAAa;AAC/D;AACA;AACA;AACA;AACA;AACA,gBAAgB,IAAI,CAACoE,IAAI,CAACC,QAAQ,CAAC,2CAA2C,CAAE;AAChF,gBAAgB,CAAC,IAAI,CAACM,SAAS,GACb5D,IAAK;AACvB;AACA;AACA,4BAA4Bb,QAAS;AACrC,kCAAkC,GACf,EAAE;AACrB;AACA;AACA;AACA,gBAAgB,IAAI,CAACkE,IAAI,CAACC,QAAQ,CAClB,6CACF,CAAE;AAChB,gBAAgB,IAAI,CAACM,SAAS,GACZ5D,IAAK;AACvB;AACA;AACA,4BAA4Bb,QAAS;AACrC,kCAAkC,GACf,EAAE;AACrB;AACA;AACA;AACA;AACA,sDAAsD,IAAI,CAACsE,QAAS;AACpE,gBAAgB,IAAI,CAACzB,SAAS,CAACoB,OAAO,KAAK,KAAK,GAC9B,IAAI,CAACC,IAAI,CAACC,QAAQ,CAChB,kDACF,CAAC,GACD,IAAI,CAACD,IAAI,CAACC,QAAQ,CAChB,mDACF,CAAE;AACpB;AACA;AACA,wBAAwB,IAAI,CAACtB,SAAS,CAACoB,OAAO,KAAK,KAAK,GACpC1D,oBAAoB,GACpBE,oBAAqB;AACzC;AACA;AACA;AACA;AACA;AACA,0BAA0B,IAAI,CAAC6D,QAAS;AACxC;AACA,gBAAgB,IAAI,CAACJ,IAAI,CAACC,QAAQ,CAClB,kDACF,CAAE;AAChB;AACA;AACA;AACA,wBAAwB/D,SAAU;AAClC;AACA;AACA;AACA;AACA;AACA,oBAAoBc,QAAQ,CAAC;UACf,cAAc,EAAE,IAAI;UACpBoD,QAAQ,EAAE,IAAI,CAACzB,SAAS,CAACoB,OAAO,KAAK;QACvC,CAAC,CAAE;AACf;AACA,cAAc,IAAI,CAACS,SAAS,GACZ7D,IAAK;AACrB;AACA,2BAA2B,IAAI,CAACqD,IAAI,CAACC,QAAQ,CACzB,uCACF,CAAE;AACpB;AACA,oBAAoB,IAAI,CAACO,SAAS,CAAEC,MAAM,GAAG,CAAC,IAC5B,IAAI,CAACD,SAAS,CAAE,CAAC,CAAC,KAAKE,SAAS,GAC5B/D,IAAK;AAC3B,0BAA0B,IAAI,CAAC6D,SAAS,CAAEG,GAAG,CAClBC,OAAO,IAAKjE,IAAK,OAAMiE,OAAQ,OAClC,CAAE;AAC1B,4BAA4B,GACN,EAAG;AACzB,oBAAoB,IAAI,CAACZ,IAAI,CAACC,QAAQ,CAClB,yCACF,CAAE;AACpB,4BAA4B,GACZ,EAAG;AACnB;AACA,uCAAuC,IAAI,CAACY,yBAA0B;AACtE,+BAA+B,IAAI,CAACC,kBAAmB;AACvD,0BAA0B,IAAI,CAACP,SAAU;AACzC,0BAA0B,IAAI,CAACH,QAAS;AACxC,sBAAsB,IAAI,CAACJ,IAAK;AAChC,2BAA2B,IAAI,CAACrB,SAAU;AAC1C,sBAAsB,IAAI,CAACoC,IAAK;AAChC;AACA;AACA;AACA;AACA,2BAA2B/D,QAAQ,CAAC;UACxBgE,MAAM,EAAE,IAAI,CAACC,QAAQ;UACrBC,IAAI,EAAE,IAAI,CAACC,cAAc,KAAK,IAAI;UAClCC,KAAK,EAAE,IAAI,CAACD,cAAc,KAAK;QACjC,CAAC,CAAE;AACb;AACA,YAAY,IAAI,CAACA,cAAc,GACjB,IAAI,CAACnB,IAAI,CAACC,QAAQ,CAChB,2DACF,CAAC,GACD,IAAI,CAACD,IAAI,CAACC,QAAQ,CAChB,4DACF,CAAE;AAChB;AACA;AACA,KAAK;MACH;IAAC;MAAAZ,IAAA;MAAAG,GAAA;MAAAd,KAAA,EAED,SAAAmC,0BAAkC9C,EAAe,EAAE;QACjD;QACAA,EAAE,CAACM,eAAe,CAAC,CAAC;QACpB,IAAI,CAACmC,SAAS,GAAGpD,iBAAiB,CAAC,IAAI,CAAC4C,IAAI,EAAEjC,EAAE,CAACU,MAAM,CAAC,CAAC4C,QAAQ;QACjE,IAAI,CAAC,IAAI,CAACd,SAAS,EAAE;UACnB,IAAI,CAACA,SAAS,GAAG,IAAI;QACvB;MACF;IAAC;MAAAlB,IAAA;MAAAG,GAAA;MAAAd,KAAA,EAED,SAAAoC,mBAA2B/C,EAAe,EAAE;QAC1C,IAAIA,EAAE,CAACU,MAAM,CAAC6C,IAAI,EAAE;UAClB,IAAI,CAACd,SAAS,GAAGE,SAAS;QAC5B;MACF;IAAC;MAAArB,IAAA;MAAAG,GAAA;MAAAd,KAAA,EAED,eAAAyB,cAA4BpC,EAA6B,EAAE;QACzD,QAAQA,EAAE,CAACU,MAAM,CAAC8C,KAAK;UACrB,KAAK,CAAC;YACJ,MAAM,IAAI,CAACC,cAAc,CAAC,CAAC;YAC3B;UACF,KAAK,CAAC;YACJ,MAAM,IAAI,CAACC,gBAAgB,CAAC,CAAC;YAC7B;UACF,KAAK,CAAC;YACJvE,SAAS,CAAC,IAAI,EAAE,WAAW,CAAC;YAC5B;UACF,KAAK,CAAC;YACJ,IAAI,CAACwE,aAAa,CAAC,CAAC;YACpB;UACF,KAAK,CAAC;YACJ,IAAI,CAACA,aAAa,CAAC,CAAC;YACpBxE,SAAS,CAAC,IAAI,EAAE,eAAe,EAAE;cAAEwB,KAAK,EAAE;YAAK,CAAC,CAAC;YACjD;UACF,KAAK,CAAC;YACJxB,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC;YAC1B;UACF,KAAK,CAAC;YACJA,SAAS,CAAC,IAAI,EAAE,WAAW,CAAC;YAC5B;UACF,KAAK,CAAC;YACJ,IAAI,CAACyE,aAAa,CAAC,CAAC;YACpB,IAAI,CAACC,MAAM,CAAC,CAAC;YACb;UACF,KAAK,CAAC;YACJ,IAAI,CAACC,eAAe,CAAC,CAAC;YACtB,IAAI,CAACD,MAAM,CAAC,CAAC;YACb;UACF,KAAK,CAAC;YACJ,IAAI,CAACE,UAAU,CAAC,CAAC;YACjB;UACF,KAAK,EAAE;YACL,IAAI,CAACC,SAAS,CAAC,CAAC;YAChB;QACJ;MACF;IAAC;MAAA1C,IAAA;MAAAG,GAAA;MAAAd,KAAA,EAED,SAAAgD,cAAA,EAAwB;QACtB,IAAI,CAACM,UAAU,GAAG;UAChB,GAAG,IAAI,CAACA,UAAU;UAClBrD,SAAS,EAAEnC,SAAS,CAAC,IAAI,CAACmC,SAAS;QACrC,CAAC;MACH;IAAC;MAAAU,IAAA;MAAAG,GAAA;MAAAd,KAAA,EAED,SAAAoD,WAAA,EAAqB;QAAA,IAAAG,qBAAA;QACnB,MAAMlC,OAAO,GAAG,GAAAkC,qBAAA,GAAE,IAAI,CAACtD,SAAS,CAACoB,OAAO,cAAAkC,qBAAA,cAAAA,qBAAA,GAAI,IAAI,CAAC;QACjD,MAAMvD,KAAK,GAAG;UAAE,GAAG,IAAI,CAACC,SAAS;UAAEoB;QAAQ,CAAC;QAC5C7C,SAAS,CAAC,IAAI,EAAE,eAAe,EAAE;UAAEwB;QAAM,CAAC,CAAC;MAC7C;IAAC;MAAAW,IAAA;MAAAG,GAAA;MAAAd,KAAA,EAED,SAAAqD,UAAA,EAAoB;QAClBpE,sBAAsB,CAAC,IAAI,EAAE;UAC3BuE,KAAK,EAAE,IAAI,CAAClC,IAAI,CAACC,QAAQ,CACvB,mEACF,CAAC;UACDkC,IAAI,EAAE,IAAI,CAACnC,IAAI,CAACC,QAAQ,CACtB,kEACF,CAAC;UACDmC,WAAW,EAAE,IAAI,CAACpC,IAAI,CAACC,QAAQ,CAAC,kBAAkB,CAAC;UACnDoC,WAAW,EAAE,IAAI,CAACrC,IAAI,CAACC,QAAQ,CAAC,kBAAkB,CAAC;UACnDqC,WAAW,EAAE,IAAI;UACjBC,OAAO,EAAEA,CAAA,KAAM;YACbrF,SAAS,CAAC,IAAI,EAAE,eAAe,EAAE;cAAEwB,KAAK,EAAE;YAAK,CAAC,CAAC;UACnD;QACF,CAAC,CAAC;MACJ;IAAC;MAAAW,IAAA;MAAAG,GAAA;MAAAd,KAAA,EAED,SAAAiD,cAAA,EAAwB;QACtB,IAAI,CAACnB,SAAS,GAAGE,SAAS;QAC1B,IAAI,CAACH,SAAS,GAAG,KAAK;MACxB;IAAC;MAAAlB,IAAA;MAAAG,GAAA;MAAAd,KAAA,EAED,SAAAmD,gBAAA,EAA0B;QACxB,IAAI,CAACrB,SAAS,GAAGE,SAAS;QAC1B,IAAI,CAACH,SAAS,GAAG,IAAI;MACvB;IAAC;MAAAlB,IAAA;MAAAG,GAAA;MAAAd,KAAA,EAED,eAAA8C,eAAA,EAA+B;QAC7B,IAAI,IAAI,CAACP,QAAQ,EAAE;UACjB;QACF;QACA,IAAI,CAACE,cAAc,GAAGT,SAAS;QAC/B,IAAI,CAACO,QAAQ,GAAG,IAAI;QACpB,MAAMtC,SAAS,GAAG,IAAI,CAACA,SAAS;QAEhC,IAAI;UACF,MAAM6D,cAAc,GAAG,MAAMhF,cAAc,CAAC,IAAI,CAACwC,IAAI,EAAE;YACrDrB;UACF,CAAC,CAAC;;UAEF;UACA,IAAI,IAAI,CAACA,SAAS,KAAKA,SAAS,EAAE;YAChC,IAAI,CAACsC,QAAQ,GAAG,KAAK;YACrB;UACF;UAEA,IAAI,CAACuB,cAAc,CAAC7D,SAAS,CAAC8D,KAAK,EAAE;YACnC/E,eAAe,CAAC,IAAI,EAAE;cACpBwE,KAAK,EAAE,IAAI,CAAClC,IAAI,CAACC,QAAQ,CACvB,gEACF,CAAC;cACDkC,IAAI,EAAEK,cAAc,CAAC7D,SAAS,CAACyC;YACjC,CAAC,CAAC;YACF,IAAI,CAACH,QAAQ,GAAG,KAAK;YACrB;UACF;UAEA,IAAIyB,MAA2B;UAC/B,IAAI;YACFA,MAAM,GAAG,MAAMrF,aAAa,CAAC,IAAI,CAAC2C,IAAI,EAAErB,SAAS,CAAC;UACpD,CAAC,CAAC,OAAOgE,GAAQ,EAAE;YACjB,IAAI,IAAI,CAAChE,SAAS,KAAKA,SAAS,EAAE;cAChC,IAAI,CAACsC,QAAQ,GAAG,KAAK;cACrB;YACF;YAEAvD,eAAe,CAAC,IAAI,EAAE;cACpBwE,KAAK,EAAE,IAAI,CAAClC,IAAI,CAACC,QAAQ,CACvB,0DACF,CAAC;cACDkC,IAAI,EAAEQ,GAAG,CAACC;YACZ,CAAC,CAAC;YACF,IAAI,CAAC3B,QAAQ,GAAG,KAAK;YACrB;UACF;UAEA,IAAI,CAACE,cAAc,GAAGuB,MAAM,CAACA,MAAM;QACrC,CAAC,SAAS;UACRG,UAAU,CAAC,MAAM;YACf,IAAI,CAAC5B,QAAQ,GAAG,KAAK;UACvB,CAAC,EAAE,IAAI,CAAC;QACV;MACF;IAAC;MAAA5B,IAAA;MAAAG,GAAA;MAAAd,KAAA,EAED,eAAA+C,iBAAA,EAAgD;QAC9C,MAAMqB,KAAK,GAAG,MAAMlF,gBAAgB,CAAC,IAAI,EAAE;UACzCsE,KAAK,EAAE,IAAI,CAAClC,IAAI,CAACC,QAAQ,CACvB,2DACF,CAAC;UACD8C,UAAU,EAAE,IAAI,CAAC/C,IAAI,CAACC,QAAQ,CAC5B,oDACF,CAAC;UACD+C,SAAS,EAAE,QAAQ;UACnBC,WAAW,EAAE9F,qBAAqB,CAChCG,iBAAiB,CAAC,IAAI,CAACqB,SAAS,EAAE,IAAI,CAACqB,IAAI,EAAE,IAAI,CAACE,UAAU,EAAE,IAAI,CACpE,CAAC;UACDgD,YAAY,EAAE,IAAI,CAACvE,SAAS,CAACmE,KAAK;UAClCT,WAAW,EAAE,IAAI,CAACrC,IAAI,CAACC,QAAQ,CAAC,kBAAkB;QACpD,CAAC,CAAC;QACF,IAAI6C,KAAK,KAAK,IAAI,EAAE;UAClB,MAAMpE,KAAK,GAAG;YAAE,GAAG,IAAI,CAACC;UAAU,CAAC;UACnC,IAAImE,KAAK,KAAK,EAAE,EAAE;YAChB,OAAOpE,KAAK,CAACoE,KAAK;UACpB,CAAC,MAAM;YACLpE,KAAK,CAACoE,KAAK,GAAGA,KAAK;UACrB;UACA5F,SAAS,CAAC,IAAI,EAAE,eAAe,EAAE;YAC/BwB;UACF,CAAC,CAAC;QACJ;MACF;IAAC;MAAAW,IAAA;MAAAG,GAAA;MAAAd,KAAA,EAED,SAAAkD,OAAA,EAAgB;QACd,IAAI,CAACuB,cAAc,CAACC,IAAI,CAAC,MAAM;UAC7B,IAAI,CAACC,UAAU,CAAEC,aAAa,CAAC,oBAAoB,CAAC,CAAEC,QAAQ,GAAG,IAAI;QACvE,CAAC,CAAC;MACJ;IAAC;MAAAlE,IAAA;MAAAmE,MAAA;MAAAhE,GAAA;MAAAd,KAAA,EAED,SAAA+E,OAAA,EAAoC;QAClC,OAAO,CACL5F,OAAO,EACPnB,GAAI;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,CACF;MACH;IAAC;EAAA;AAAA,GArgBmDD,UAAU;AAAA,SAA3CoC,wBAAwB,IAAA6E,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}