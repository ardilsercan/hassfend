{"ast":null,"code":"import _createForOfIteratorHelper from \"@babel/runtime/helpers/createForOfIteratorHelper\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _regeneratorRuntime from \"@babel/runtime/helpers/regeneratorRuntime\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _decorate from \"@babel/runtime/helpers/decorate\";\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10, _templateObject11, _templateObject12, _templateObject13, _templateObject14, _templateObject15, _templateObject16, _templateObject17, _templateObject18, _templateObject19;\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\nimport \"core-js/modules/es.string.trim-start.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"@material/mwc-list/mwc-list\";\nvar mdiClose = \"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\";\nvar mdiConsoleLine = \"M13,19V16H21V19H13M8.5,13L2.47,7H6.71L11.67,11.95C12.25,12.54 12.25,13.5 11.67,14.07L6.74,19H2.5L8.5,13Z\";\nvar mdiEarth = \"M17.9,17.39C17.64,16.59 16.89,16 16,16H15V13A1,1 0 0,0 14,12H8V10H10A1,1 0 0,0 11,9V7H13A2,2 0 0,0 15,5V4.59C17.93,5.77 20,8.64 20,12C20,14.08 19.2,15.97 17.9,17.39M11,19.93C7.05,19.44 4,16.08 4,12C4,11.38 4.08,10.78 4.21,10.21L9,15V16A2,2 0 0,0 11,18M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z\";\nvar mdiMagnify = \"M9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.44,13.73L14.71,14H15.5L20.5,19L19,20.5L14,15.5V14.71L13.73,14.44C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3M9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5Z\";\nvar mdiReload = \"M2 12C2 16.97 6.03 21 11 21C13.39 21 15.68 20.06 17.4 18.4L15.9 16.9C14.63 18.25 12.86 19 11 19C4.76 19 1.64 11.46 6.05 7.05C10.46 2.64 18 5.77 18 12H15L19 16H19.1L23 12H20C20 7.03 15.97 3 11 3C6.03 3 2 7.03 2 12Z\";\nvar mdiServerNetwork = \"M13,19H14A1,1 0 0,1 15,20H22V22H15A1,1 0 0,1 14,23H10A1,1 0 0,1 9,22H2V20H9A1,1 0 0,1 10,19H11V17H4A1,1 0 0,1 3,16V12A1,1 0 0,1 4,11H20A1,1 0 0,1 21,12V16A1,1 0 0,1 20,17H13V19M4,3H20A1,1 0 0,1 21,4V8A1,1 0 0,1 20,9H4A1,1 0 0,1 3,8V4A1,1 0 0,1 4,3M9,7H10V5H9V7M9,15H10V13H9V15M5,5V7H7V5H5M5,13V15H7V13H5Z\";\nimport { LitElement, css, html, nothing } from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators\";\nimport { ifDefined } from \"lit/directives/if-defined\";\nimport { styleMap } from \"lit/directives/style-map\";\nimport memoizeOne from \"memoize-one\";\nimport { canShowPage } from \"../../common/config/can_show_page\";\nimport { componentsWithService } from \"../../common/config/components_with_service\";\nimport { isComponentLoaded } from \"../../common/config/is_component_loaded\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { computeStateName } from \"../../common/entity/compute_state_name\";\nimport { navigate } from \"../../common/navigate\";\nimport { caseInsensitiveStringCompare } from \"../../common/string/compare\";\nimport { fuzzyFilterSort } from \"../../common/string/filter/sequence-matching\";\nimport { debounce } from \"../../common/util/debounce\";\nimport \"../../components/ha-circular-progress\";\nimport \"../../components/ha-icon-button\";\nimport \"../../components/ha-label\";\nimport \"../../components/ha-list-item\";\nimport \"../../components/ha-textfield\";\nimport { fetchHassioAddonsInfo } from \"../../data/hassio/addon\";\nimport { domainToName } from \"../../data/integration\";\nimport { getPanelNameTranslationKey } from \"../../data/panel\";\nimport { configSections } from \"../../panels/config/ha-panel-config\";\nimport { haStyleDialog, haStyleScrollbar } from \"../../resources/styles\";\nimport { loadVirtualizer } from \"../../resources/virtualizer\";\nimport { showConfirmationDialog } from \"../generic/show-dialog-box\";\nvar isCommandItem = function isCommandItem(item) {\n  return item.categoryKey !== undefined;\n};\nexport var QuickBar = _decorate([customElement(\"ha-quick-bar\")], function (_initialize, _LitElement) {\n  var QuickBar = /*#__PURE__*/function (_LitElement2) {\n    _inherits(QuickBar, _LitElement2);\n    function QuickBar() {\n      var _this;\n      _classCallCheck(this, QuickBar);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, QuickBar, [].concat(args));\n      _initialize(_assertThisInitialized(_this));\n      return _this;\n    }\n    return _createClass(QuickBar);\n  }(_LitElement);\n  return {\n    F: QuickBar,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_commandItems\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_entityItems\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_filter\",\n      value: function value() {\n        return \"\";\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_search\",\n      value: function value() {\n        return \"\";\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_open\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_commandMode\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_opened\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_narrow\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_hint\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [query(\"ha-textfield\", false)],\n      key: \"_filterInputField\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_focusSet\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_focusListElement\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"showDialog\",\n      value: function () {\n        var _showDialog = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(params) {\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                this._commandMode = params.commandMode || this._toggleIfAlreadyOpened();\n                this._hint = params.hint;\n                this._narrow = matchMedia(\"all and (max-width: 450px), all and (max-height: 500px)\").matches;\n                this._initializeItemsIfNeeded();\n                this._open = true;\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee, this);\n        }));\n        function showDialog(_x) {\n          return _showDialog.apply(this, arguments);\n        }\n        return showDialog;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"closeDialog\",\n      value: function closeDialog() {\n        this._open = false;\n        this._opened = false;\n        this._focusSet = false;\n        this._filter = \"\";\n        this._search = \"\";\n        this._entityItems = undefined;\n        this._commandItems = undefined;\n        fireEvent(this, \"dialog-closed\", {\n          dialog: this.localName\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"willUpdate\",\n      value: function willUpdate() {\n        if (!this.hasUpdated) {\n          loadVirtualizer();\n        }\n      }\n    }, {\n      kind: \"field\",\n      key: \"_getItems\",\n      value: function value() {\n        var _this2 = this;\n        return memoizeOne(function (commandMode, commandItems, entityItems, filter) {\n          var items = commandMode ? commandItems : entityItems;\n          if (items && filter && filter !== \" \") {\n            return _this2._filterItems(items, filter);\n          }\n          return items;\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this._open) {\n          return nothing;\n        }\n        var items = this._getItems(this._commandMode, this._commandItems, this._entityItems, this._filter);\n        return html(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      <ha-dialog\\n        .heading=\", \"\\n        open\\n        @opened=\", \"\\n        @closed=\", \"\\n        hideActions\\n      >\\n        <div slot=\\\"heading\\\" class=\\\"heading\\\">\\n          <ha-textfield\\n            dialogInitialFocus\\n            .placeholder=\", \"\\n            aria-label=\", \"\\n            .value=\", \"\\n            icon\\n            .iconTrailing=\", \"\\n            @input=\", \"\\n            @keydown=\", \"\\n            @focus=\", \"\\n          >\\n            \", \"\\n            \", \"\\n          </ha-textfield>\\n        </div>\\n        \", \"\\n        \", \"\\n      </ha-dialog>\\n    \"])), this.hass.localize(\"ui.dialogs.quick-bar.title\"), this._handleOpened, this.closeDialog, this.hass.localize(\"ui.dialogs.quick-bar.filter_placeholder\"), this.hass.localize(\"ui.dialogs.quick-bar.filter_placeholder\"), this._commandMode ? \">\".concat(this._search) : this._search, this._search !== undefined || this._narrow, this._handleSearchChange, this._handleInputKeyDown, this._setFocusFirstListItem, this._commandMode ? html(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n                  <ha-svg-icon\\n                    slot=\\\"leadingIcon\\\"\\n                    class=\\\"prefix\\\"\\n                    .path=\", \"\\n                  ></ha-svg-icon>\\n                \"])), mdiConsoleLine) : html(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n                  <ha-svg-icon\\n                    slot=\\\"leadingIcon\\\"\\n                    class=\\\"prefix\\\"\\n                    .path=\", \"\\n                  ></ha-svg-icon>\\n                \"])), mdiMagnify), this._search || this._narrow ? html(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n                  <div slot=\\\"trailingIcon\\\">\\n                    \", \"\\n                    \", \"\\n                  </div>\\n                \"])), this._search && html(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"<ha-icon-button\\n                      @click=\", \"\\n                      .label=\", \"\\n                      .path=\", \"\\n                    ></ha-icon-button>\"])), this._clearSearch, this.hass.localize(\"ui.common.clear\"), mdiClose), this._narrow ? html(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"\\n                          <mwc-button\\n                            .label=\", \"\\n                            @click=\", \"\\n                          ></mwc-button>\\n                        \"])), this.hass.localize(\"ui.common.close\"), this.closeDialog) : \"\") : \"\", !items ? html(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral([\"<ha-circular-progress\\n              size=\\\"small\\\"\\n              indeterminate\\n            ></ha-circular-progress>\"]))) : items.length === 0 ? html(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral([\"\\n                <div class=\\\"nothing-found\\\">\\n                  \", \"\\n                </div>\\n              \"])), this.hass.localize(\"ui.dialogs.quick-bar.nothing_found\")) : html(_templateObject9 || (_templateObject9 = _taggedTemplateLiteral([\"\\n                <mwc-list>\\n                  \", \"\\n                </mwc-list>\\n              \"])), this._opened ? html(_templateObject10 || (_templateObject10 = _taggedTemplateLiteral([\"<lit-virtualizer\\n                        scroller\\n                        @keydown=\", \"\\n                        @rangechange=\", \"\\n                        @click=\", \"\\n                        class=\\\"ha-scrollbar\\\"\\n                        style=\", \"\\n                        .items=\", \"\\n                        .renderItem=\", \"\\n                      >\\n                      </lit-virtualizer>\"])), this._handleListItemKeyDown, this._handleRangeChanged, this._handleItemClick, styleMap({\n          height: this._narrow ? \"calc(100vh - 56px)\" : \"\".concat(Math.min(items.length * (this._commandMode ? 56 : 72) + 26, 500), \"px\")\n        }), items, this._renderItem) : \"\"), this._hint ? html(_templateObject11 || (_templateObject11 = _taggedTemplateLiteral([\"<ha-tip .hass=\", \">\", \"</ha-tip>\"])), this.hass, this._hint) : \"\");\n      }\n    }, {\n      kind: \"method\",\n      key: \"_initializeItemsIfNeeded\",\n      value: function () {\n        var _initializeItemsIfNeeded2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n          return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n            while (1) switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!this._commandMode) {\n                  _context2.next = 9;\n                  break;\n                }\n                _context2.t0 = this._commandItems;\n                if (_context2.t0) {\n                  _context2.next = 6;\n                  break;\n                }\n                _context2.next = 5;\n                return this._generateCommandItems();\n              case 5:\n                _context2.t0 = _context2.sent;\n              case 6:\n                this._commandItems = _context2.t0;\n                _context2.next = 10;\n                break;\n              case 9:\n                this._entityItems = this._entityItems || this._generateEntityItems();\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }, _callee2, this);\n        }));\n        function _initializeItemsIfNeeded() {\n          return _initializeItemsIfNeeded2.apply(this, arguments);\n        }\n        return _initializeItemsIfNeeded;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"_handleOpened\",\n      value: function _handleOpened() {\n        this._opened = true;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleRangeChanged\",\n      value: function () {\n        var _handleRangeChanged2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(e) {\n          return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n            while (1) switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!this._focusSet) {\n                  _context3.next = 2;\n                  break;\n                }\n                return _context3.abrupt(\"return\");\n              case 2:\n                if (!(e.firstVisible > -1)) {\n                  _context3.next = 7;\n                  break;\n                }\n                this._focusSet = true;\n                _context3.next = 6;\n                return this.updateComplete;\n              case 6:\n                this._setFocusFirstListItem();\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }, _callee3, this);\n        }));\n        function _handleRangeChanged(_x2) {\n          return _handleRangeChanged2.apply(this, arguments);\n        }\n        return _handleRangeChanged;\n      }()\n    }, {\n      kind: \"field\",\n      key: \"_renderItem\",\n      value: function value() {\n        var _this3 = this;\n        return function (item, index) {\n          if (!item) {\n            return nothing;\n          }\n          return isCommandItem(item) ? _this3._renderCommandItem(item, index) : _this3._renderEntityItem(item, index);\n        };\n      }\n    }, {\n      kind: \"method\",\n      key: \"_renderEntityItem\",\n      value: function _renderEntityItem(item, index) {\n        return html(_templateObject12 || (_templateObject12 = _taggedTemplateLiteral([\"\\n      <ha-list-item\\n        .twoline=\", \"\\n        .item=\", \"\\n        index=\", \"\\n        graphic=\\\"icon\\\"\\n      >\\n        \", \"\\n        <span>\", \"</span>\\n        \", \"\\n      </ha-list-item>\\n    \"])), Boolean(item.altText), item, ifDefined(index), item.iconPath ? html(_templateObject13 || (_templateObject13 = _taggedTemplateLiteral([\"\\n              <ha-svg-icon\\n                .path=\", \"\\n                class=\\\"entity\\\"\\n                slot=\\\"graphic\\\"\\n              ></ha-svg-icon>\\n            \"])), item.iconPath) : html(_templateObject14 || (_templateObject14 = _taggedTemplateLiteral([\"<span slot=\\\"graphic\\\">\", \"</span>\"])), item.icon), item.primaryText, item.altText ? html(_templateObject15 || (_templateObject15 = _taggedTemplateLiteral([\"\\n              <span slot=\\\"secondary\\\" class=\\\"item-text secondary\\\"\\n                >\", \"</span\\n              >\\n            \"])), item.altText) : nothing);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_renderCommandItem\",\n      value: function _renderCommandItem(item, index) {\n        return html(_templateObject16 || (_templateObject16 = _taggedTemplateLiteral([\"\\n      <ha-list-item\\n        .item=\", \"\\n        index=\", \"\\n        class=\\\"command-item\\\"\\n        hasMeta\\n      >\\n        <span>\\n          <ha-label\\n            .label=\", \"\\n            class=\\\"command-category \", \"\\\"\\n          >\\n            \", \"\\n            \", \"\\n          </ha-label>\\n        </span>\\n\\n        <span class=\\\"command-text\\\">\", \"</span>\\n      </ha-list-item>\\n    \"])), item, ifDefined(index), item.categoryText, item.categoryKey, item.iconPath ? html(_templateObject17 || (_templateObject17 = _taggedTemplateLiteral([\"\\n                  <ha-svg-icon .path=\", \" slot=\\\"icon\\\"></ha-svg-icon>\\n                \"])), item.iconPath) : nothing, item.categoryText, item.primaryText);\n      }\n    }, {\n      kind: \"method\",\n      key: \"processItemAndCloseDialog\",\n      value: function () {\n        var _processItemAndCloseDialog = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(item, index) {\n          return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n            while (1) switch (_context4.prev = _context4.next) {\n              case 0:\n                this._addSpinnerToCommandItem(index);\n                _context4.next = 3;\n                return item.action();\n              case 3:\n                this.closeDialog();\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }, _callee4, this);\n        }));\n        function processItemAndCloseDialog(_x3, _x4) {\n          return _processItemAndCloseDialog.apply(this, arguments);\n        }\n        return processItemAndCloseDialog;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"_handleInputKeyDown\",\n      value: function _handleInputKeyDown(ev) {\n        if (ev.code === \"Enter\") {\n          var firstItem = this._getItemAtIndex(0);\n          if (!firstItem || firstItem.style.display === \"none\") {\n            return;\n          }\n          this.processItemAndCloseDialog(firstItem.item, 0);\n        } else if (ev.code === \"ArrowDown\") {\n          var _this$_getItemAtIndex;\n          ev.preventDefault();\n          (_this$_getItemAtIndex = this._getItemAtIndex(0)) === null || _this$_getItemAtIndex === void 0 || _this$_getItemAtIndex.focus();\n          this._focusSet = true;\n          this._focusListElement = this._getItemAtIndex(0);\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_getItemAtIndex\",\n      value: function _getItemAtIndex(index) {\n        return this.renderRoot.querySelector(\"ha-list-item[index=\\\"\".concat(index, \"\\\"]\"));\n      }\n    }, {\n      kind: \"method\",\n      key: \"_addSpinnerToCommandItem\",\n      value: function _addSpinnerToCommandItem(index) {\n        var _this$_getItemAtIndex2;\n        var spinner = document.createElement(\"ha-circular-progress\");\n        spinner.size = \"small\";\n        spinner.slot = \"meta\";\n        spinner.indeterminate = true;\n        (_this$_getItemAtIndex2 = this._getItemAtIndex(index)) === null || _this$_getItemAtIndex2 === void 0 || _this$_getItemAtIndex2.appendChild(spinner);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleSearchChange\",\n      value: function _handleSearchChange(ev) {\n        var newFilter = ev.currentTarget.value;\n        var oldCommandMode = this._commandMode;\n        var oldSearch = this._search;\n        var newCommandMode;\n        var newSearch;\n        if (newFilter.startsWith(\">\")) {\n          newCommandMode = true;\n          newSearch = newFilter.substring(1);\n        } else {\n          newCommandMode = false;\n          newSearch = newFilter;\n        }\n        if (oldCommandMode === newCommandMode && oldSearch === newSearch) {\n          return;\n        }\n        this._commandMode = newCommandMode;\n        this._search = newSearch;\n        if (this._hint) {\n          this._hint = undefined;\n        }\n        if (oldCommandMode !== this._commandMode) {\n          this._focusSet = false;\n          this._initializeItemsIfNeeded();\n          this._filter = this._search;\n        } else {\n          if (this._focusSet && this._focusListElement) {\n            this._focusSet = false;\n            // @ts-ignore\n            this._focusListElement.rippleHandlers.endFocus();\n          }\n          this._debouncedSetFilter(this._search);\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_clearSearch\",\n      value: function _clearSearch() {\n        this._search = \"\";\n        this._filter = \"\";\n      }\n    }, {\n      kind: \"field\",\n      key: \"_debouncedSetFilter\",\n      value: function value() {\n        var _this4 = this;\n        return debounce(function (filter) {\n          _this4._filter = filter;\n        }, 100);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_setFocusFirstListItem\",\n      value: function _setFocusFirstListItem() {\n        var _this$_getItemAtIndex3;\n        // @ts-ignore\n        (_this$_getItemAtIndex3 = this._getItemAtIndex(0)) === null || _this$_getItemAtIndex3 === void 0 || _this$_getItemAtIndex3.rippleHandlers.startFocus();\n        this._focusListElement = this._getItemAtIndex(0);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleListItemKeyDown\",\n      value: function _handleListItemKeyDown(ev) {\n        var isSingleCharacter = ev.key.length === 1;\n        var index = ev.target.getAttribute(\"index\");\n        var isFirstListItem = index === \"0\";\n        this._focusListElement = ev.target;\n        if (ev.key === \"ArrowDown\") {\n          var _this$_getItemAtIndex4;\n          (_this$_getItemAtIndex4 = this._getItemAtIndex(Number(index) + 1)) === null || _this$_getItemAtIndex4 === void 0 || _this$_getItemAtIndex4.focus();\n        }\n        if (ev.key === \"ArrowUp\") {\n          if (isFirstListItem) {\n            var _this$_filterInputFie;\n            (_this$_filterInputFie = this._filterInputField) === null || _this$_filterInputFie === void 0 || _this$_filterInputFie.focus();\n          } else {\n            var _this$_getItemAtIndex5;\n            (_this$_getItemAtIndex5 = this._getItemAtIndex(Number(index) - 1)) === null || _this$_getItemAtIndex5 === void 0 || _this$_getItemAtIndex5.focus();\n          }\n        }\n        if (ev.key === \"Enter\" || ev.key === \" \") {\n          this.processItemAndCloseDialog(ev.target.item, Number(ev.target.getAttribute(\"index\")));\n        }\n        if (ev.key === \"Backspace\" || isSingleCharacter) {\n          var _this$_filterInputFie2;\n          ev.currentTarget.scrollTop = 0;\n          (_this$_filterInputFie2 = this._filterInputField) === null || _this$_filterInputFie2 === void 0 || _this$_filterInputFie2.focus();\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleItemClick\",\n      value: function _handleItemClick(ev) {\n        var listItem = ev.target.closest(\"ha-list-item\");\n        this.processItemAndCloseDialog(listItem.item, Number(listItem.getAttribute(\"index\")));\n      }\n    }, {\n      kind: \"method\",\n      key: \"_generateEntityItems\",\n      value: function _generateEntityItems() {\n        var _this5 = this;\n        return Object.keys(this.hass.states).map(function (entityId) {\n          var entityState = _this5.hass.states[entityId];\n          var entityItem = {\n            primaryText: computeStateName(entityState),\n            altText: entityId,\n            icon: html(_templateObject18 || (_templateObject18 = _taggedTemplateLiteral([\"\\n            <ha-state-icon\\n              .hass=\", \"\\n              .stateObj=\", \"\\n            ></ha-state-icon>\\n          \"])), _this5.hass, entityState),\n            action: function action() {\n              return fireEvent(_this5, \"hass-more-info\", {\n                entityId: entityId\n              });\n            }\n          };\n          return Object.assign(Object.assign({}, entityItem), {}, {\n            strings: [entityItem.primaryText, entityItem.altText]\n          });\n        }).sort(function (a, b) {\n          return caseInsensitiveStringCompare(a.primaryText, b.primaryText, _this5.hass.locale.language);\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_generateCommandItems\",\n      value: function () {\n        var _generateCommandItems2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n          var _this6 = this;\n          return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n            while (1) switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.t0 = [];\n                _context5.t1 = _toConsumableArray;\n                _context5.next = 4;\n                return this._generateReloadCommands();\n              case 4:\n                _context5.t2 = _context5.sent;\n                _context5.t3 = (0, _context5.t1)(_context5.t2);\n                _context5.t4 = _toConsumableArray(this._generateServerControlCommands());\n                _context5.t5 = _toConsumableArray;\n                _context5.next = 10;\n                return this._generateNavigationCommands();\n              case 10:\n                _context5.t6 = _context5.sent;\n                _context5.t7 = (0, _context5.t5)(_context5.t6);\n                return _context5.abrupt(\"return\", _context5.t0.concat.call(_context5.t0, _context5.t3, _context5.t4, _context5.t7).sort(function (a, b) {\n                  return caseInsensitiveStringCompare(a.strings.join(\" \"), b.strings.join(\" \"), _this6.hass.locale.language);\n                }));\n              case 13:\n              case \"end\":\n                return _context5.stop();\n            }\n          }, _callee5, this);\n        }));\n        function _generateCommandItems() {\n          return _generateCommandItems2.apply(this, arguments);\n        }\n        return _generateCommandItems;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"_generateReloadCommands\",\n      value: function () {\n        var _generateReloadCommands2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n          var _this7 = this;\n          var reloadableDomains, localize, commands;\n          return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n            while (1) switch (_context6.prev = _context6.next) {\n              case 0:\n                // Get all domains that have a direct \"reload\" service\n                reloadableDomains = componentsWithService(this.hass, \"reload\");\n                _context6.next = 3;\n                return this.hass.loadBackendTranslation(\"title\", reloadableDomains);\n              case 3:\n                localize = _context6.sent;\n                commands = reloadableDomains.map(function (domain) {\n                  return {\n                    primaryText: _this7.hass.localize(\"ui.dialogs.quick-bar.commands.reload.\".concat(domain)) || _this7.hass.localize(\"ui.dialogs.quick-bar.commands.reload.reload\", {\n                      domain: domainToName(localize, domain)\n                    }),\n                    action: function action() {\n                      return _this7.hass.callService(domain, \"reload\");\n                    },\n                    iconPath: mdiReload,\n                    categoryText: _this7.hass.localize(\"ui.dialogs.quick-bar.commands.types.reload\")\n                  };\n                }); // Add \"frontend.reload_themes\"\n                commands.push({\n                  primaryText: this.hass.localize(\"ui.dialogs.quick-bar.commands.reload.themes\"),\n                  action: function action() {\n                    return _this7.hass.callService(\"frontend\", \"reload_themes\");\n                  },\n                  iconPath: mdiReload,\n                  categoryText: this.hass.localize(\"ui.dialogs.quick-bar.commands.types.reload\")\n                });\n\n                // Add \"homeassistant.reload_core_config\"\n                commands.push({\n                  primaryText: this.hass.localize(\"ui.dialogs.quick-bar.commands.reload.core\"),\n                  action: function action() {\n                    return _this7.hass.callService(\"homeassistant\", \"reload_core_config\");\n                  },\n                  iconPath: mdiReload,\n                  categoryText: this.hass.localize(\"ui.dialogs.quick-bar.commands.types.reload\")\n                });\n\n                // Add \"homeassistant.reload_all\"\n                commands.push({\n                  primaryText: this.hass.localize(\"ui.dialogs.quick-bar.commands.reload.all\"),\n                  action: function action() {\n                    return _this7.hass.callService(\"homeassistant\", \"reload_all\");\n                  },\n                  iconPath: mdiReload,\n                  categoryText: this.hass.localize(\"ui.dialogs.quick-bar.commands.types.reload\")\n                });\n                return _context6.abrupt(\"return\", commands.map(function (command) {\n                  return Object.assign(Object.assign({}, command), {}, {\n                    categoryKey: \"reload\",\n                    strings: [\"\".concat(command.categoryText, \" \").concat(command.primaryText)]\n                  });\n                }));\n              case 9:\n              case \"end\":\n                return _context6.stop();\n            }\n          }, _callee6, this);\n        }));\n        function _generateReloadCommands() {\n          return _generateReloadCommands2.apply(this, arguments);\n        }\n        return _generateReloadCommands;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"_generateServerControlCommands\",\n      value: function _generateServerControlCommands() {\n        var _this8 = this;\n        var serverActions = [\"restart\", \"stop\"];\n        return serverActions.map(function (action) {\n          var categoryKey = \"server_control\";\n          var item = {\n            primaryText: _this8.hass.localize(\"ui.dialogs.quick-bar.commands.server_control.perform_action\", {\n              action: _this8.hass.localize(\"ui.dialogs.quick-bar.commands.server_control.\".concat(action))\n            }),\n            iconPath: mdiServerNetwork,\n            categoryText: _this8.hass.localize(\"ui.dialogs.quick-bar.commands.types.\".concat(categoryKey)),\n            categoryKey: categoryKey,\n            action: function (_action) {\n              function action() {\n                return _action.apply(this, arguments);\n              }\n              action.toString = function () {\n                return _action.toString();\n              };\n              return action;\n            }( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n              var confirmed;\n              return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n                while (1) switch (_context7.prev = _context7.next) {\n                  case 0:\n                    _context7.next = 2;\n                    return showConfirmationDialog(_this8, {\n                      title: _this8.hass.localize(\"ui.dialogs.restart.\".concat(action, \".confirm_title\")),\n                      text: _this8.hass.localize(\"ui.dialogs.restart.\".concat(action, \".confirm_description\")),\n                      confirmText: _this8.hass.localize(\"ui.dialogs.restart.\".concat(action, \".confirm_action\")),\n                      destructive: true\n                    });\n                  case 2:\n                    confirmed = _context7.sent;\n                    if (confirmed) {\n                      _context7.next = 5;\n                      break;\n                    }\n                    return _context7.abrupt(\"return\");\n                  case 5:\n                    _this8.hass.callService(\"homeassistant\", action);\n                  case 6:\n                  case \"end\":\n                    return _context7.stop();\n                }\n              }, _callee7);\n            })))\n          };\n          return Object.assign(Object.assign({}, item), {}, {\n            strings: [\"\".concat(item.categoryText, \" \").concat(item.primaryText)]\n          });\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_generateNavigationCommands\",\n      value: function () {\n        var _generateNavigationCommands2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n          var panelItems, sectionItems, supervisorItems, addonsInfo, _iterator, _step, addon;\n          return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n            while (1) switch (_context8.prev = _context8.next) {\n              case 0:\n                panelItems = this._generateNavigationPanelCommands();\n                sectionItems = this._generateNavigationConfigSectionCommands();\n                supervisorItems = [];\n                if (!isComponentLoaded(this.hass, \"hassio\")) {\n                  _context8.next = 11;\n                  break;\n                }\n                _context8.next = 6;\n                return fetchHassioAddonsInfo(this.hass);\n              case 6:\n                addonsInfo = _context8.sent;\n                supervisorItems.push({\n                  path: \"/hassio/store\",\n                  primaryText: this.hass.localize(\"ui.dialogs.quick-bar.commands.navigation.addon_store\")\n                });\n                supervisorItems.push({\n                  path: \"/hassio/dashboard\",\n                  primaryText: this.hass.localize(\"ui.dialogs.quick-bar.commands.navigation.addon_dashboard\")\n                });\n                _iterator = _createForOfIteratorHelper(addonsInfo.addons.filter(function (a) {\n                  return a.version;\n                }));\n                try {\n                  for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                    addon = _step.value;\n                    supervisorItems.push({\n                      path: \"/hassio/addon/\".concat(addon.slug),\n                      primaryText: this.hass.localize(\"ui.dialogs.quick-bar.commands.navigation.addon_info\", {\n                        addon: addon.name\n                      })\n                    });\n                  }\n                } catch (err) {\n                  _iterator.e(err);\n                } finally {\n                  _iterator.f();\n                }\n              case 11:\n                return _context8.abrupt(\"return\", this._finalizeNavigationCommands([].concat(_toConsumableArray(panelItems), _toConsumableArray(sectionItems), supervisorItems)));\n              case 12:\n              case \"end\":\n                return _context8.stop();\n            }\n          }, _callee8, this);\n        }));\n        function _generateNavigationCommands() {\n          return _generateNavigationCommands2.apply(this, arguments);\n        }\n        return _generateNavigationCommands;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"_generateNavigationPanelCommands\",\n      value: function _generateNavigationPanelCommands() {\n        var _this9 = this;\n        return Object.keys(this.hass.panels).filter(function (panelKey) {\n          return panelKey !== \"_my_redirect\";\n        }).map(function (panelKey) {\n          var panel = _this9.hass.panels[panelKey];\n          var translationKey = getPanelNameTranslationKey(panel);\n          var primaryText = _this9.hass.localize(translationKey) || panel.title || panel.url_path;\n          return {\n            primaryText: primaryText,\n            path: \"/\".concat(panel.url_path)\n          };\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_generateNavigationConfigSectionCommands\",\n      value: function _generateNavigationConfigSectionCommands() {\n        var _this10 = this;\n        var items = [];\n        for (var _i = 0, _Object$keys = Object.keys(configSections); _i < _Object$keys.length; _i++) {\n          var sectionKey = _Object$keys[_i];\n          var _iterator2 = _createForOfIteratorHelper(configSections[sectionKey]),\n            _step2;\n          try {\n            var _loop = function _loop() {\n                var page = _step2.value;\n                if (!canShowPage(_this10.hass, page)) {\n                  return 0; // continue\n                }\n                var info = _this10._getNavigationInfoFromConfig(page);\n                if (!info) {\n                  return 0; // continue\n                }\n                // Add to list, but only if we do not already have an entry for the same path and component\n                if (items.some(function (e) {\n                  return e.path === info.path;\n                })) {\n                  return 0; // continue\n                }\n                items.push(info);\n              },\n              _ret;\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              _ret = _loop();\n              if (_ret === 0) continue;\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n        }\n        return items;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_getNavigationInfoFromConfig\",\n      value: function _getNavigationInfoFromConfig(page) {\n        var path = page.path.substring(1);\n        var name = path.substring(path.indexOf(\"/\") + 1);\n        name = name.indexOf(\"/\") > -1 ? name.substring(0, name.indexOf(\"/\")) : name;\n        var caption = name && this.hass.localize(\"ui.dialogs.quick-bar.commands.navigation.\".concat(name)) ||\n        // @ts-expect-error\n        page.translationKey && this.hass.localize(page.translationKey);\n        if (caption) {\n          return Object.assign(Object.assign({}, page), {}, {\n            primaryText: caption\n          });\n        }\n        return undefined;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_finalizeNavigationCommands\",\n      value: function _finalizeNavigationCommands(items) {\n        var _this11 = this;\n        return items.map(function (item) {\n          var categoryKey = \"navigation\";\n          var navItem = Object.assign(Object.assign({}, item), {}, {\n            iconPath: mdiEarth,\n            categoryText: _this11.hass.localize(\"ui.dialogs.quick-bar.commands.types.\".concat(categoryKey)),\n            action: function action() {\n              return navigate(item.path);\n            }\n          });\n          return Object.assign(Object.assign({}, navItem), {}, {\n            strings: [\"\".concat(navItem.categoryText, \" \").concat(navItem.primaryText)],\n            categoryKey: categoryKey\n          });\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_toggleIfAlreadyOpened\",\n      value: function _toggleIfAlreadyOpened() {\n        return this._opened ? !this._commandMode : false;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_filterItems\",\n      value: function value() {\n        return memoizeOne(function (items, filter) {\n          return fuzzyFilterSort(filter.trimLeft(), items);\n        });\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [haStyleScrollbar, haStyleDialog, css(_templateObject19 || (_templateObject19 = _taggedTemplateLiteral([\"\\n        mwc-list {\\n          position: relative;\\n          --mdc-list-vertical-padding: 0;\\n        }\\n        .heading {\\n          display: flex;\\n          align-items: center;\\n          --mdc-theme-primary: var(--primary-text-color);\\n        }\\n\\n        .heading ha-textfield {\\n          flex-grow: 1;\\n        }\\n\\n        ha-dialog {\\n          --dialog-z-index: 9;\\n          --dialog-content-padding: 0;\\n        }\\n\\n        @media (min-width: 800px) {\\n          ha-dialog {\\n            --mdc-dialog-max-width: 800px;\\n            --mdc-dialog-min-width: 500px;\\n            --dialog-surface-position: fixed;\\n            --dialog-surface-top: 40px;\\n            --mdc-dialog-max-height: calc(100% - 72px);\\n          }\\n        }\\n\\n        @media all and (max-width: 450px), all and (max-height: 500px) {\\n          ha-textfield {\\n            --mdc-shape-small: 0;\\n          }\\n        }\\n\\n        @media all and (max-width: 450px), all and (max-height: 690px) {\\n          .hint {\\n            display: none;\\n          }\\n        }\\n\\n        ha-svg-icon.prefix {\\n          color: var(--primary-text-color);\\n        }\\n\\n        ha-textfield ha-icon-button {\\n          --mdc-icon-button-size: 24px;\\n          color: var(--primary-text-color);\\n        }\\n\\n        .command-category {\\n          --ha-label-icon-color: #585858;\\n          --ha-label-text-color: #212121;\\n        }\\n\\n        .command-category.reload {\\n          --ha-label-background-color: #cddc39;\\n        }\\n\\n        .command-category.navigation {\\n          --ha-label-background-color: var(--light-primary-color);\\n        }\\n\\n        .command-category.server_control {\\n          --ha-label-background-color: var(--warning-color);\\n        }\\n\\n        span.command-text {\\n          margin-left: 8px;\\n          margin-inline-start: 8px;\\n          margin-inline-end: initial;\\n          direction: var(--direction);\\n        }\\n\\n        ha-list-item {\\n          width: 100%;\\n          --mdc-list-item-graphic-margin: 20px;\\n        }\\n\\n        ha-list-item.command-item {\\n          text-transform: capitalize;\\n        }\\n\\n        ha-tip {\\n          padding: 20px;\\n        }\\n\\n        .nothing-found {\\n          padding: 16px 0px;\\n          text-align: center;\\n        }\\n\\n        div[slot=\\\"trailingIcon\\\"] {\\n          display: flex;\\n          align-items: center;\\n        }\\n\\n        lit-virtualizer {\\n          contain: size layout !important;\\n        }\\n      \"])))];\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["mdiClose","mdiConsoleLine","mdiEarth","mdiMagnify","mdiReload","mdiServerNetwork","LitElement","css","html","nothing","customElement","property","query","state","ifDefined","styleMap","memoizeOne","canShowPage","componentsWithService","isComponentLoaded","fireEvent","computeStateName","navigate","caseInsensitiveStringCompare","fuzzyFilterSort","debounce","fetchHassioAddonsInfo","domainToName","getPanelNameTranslationKey","configSections","haStyleDialog","haStyleScrollbar","loadVirtualizer","showConfirmationDialog","isCommandItem","item","categoryKey","undefined","QuickBar","_decorate","_initialize","_LitElement","_LitElement2","_inherits","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_assertThisInitialized","_createClass","F","d","kind","decorators","attribute","key","value","_showDialog","_asyncToGenerator","_regeneratorRuntime","mark","_callee","params","wrap","_callee$","_context","prev","next","_commandMode","commandMode","_toggleIfAlreadyOpened","_hint","hint","_narrow","matchMedia","matches","_initializeItemsIfNeeded","_open","stop","showDialog","_x","apply","closeDialog","_opened","_focusSet","_filter","_search","_entityItems","_commandItems","dialog","localName","willUpdate","hasUpdated","_this2","commandItems","entityItems","filter","items","_filterItems","render","_getItems","_templateObject","_taggedTemplateLiteral","hass","localize","_handleOpened","_handleSearchChange","_handleInputKeyDown","_setFocusFirstListItem","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_clearSearch","_templateObject6","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_handleListItemKeyDown","_handleRangeChanged","_handleItemClick","height","Math","min","_renderItem","_templateObject11","_initializeItemsIfNeeded2","_callee2","_callee2$","_context2","t0","_generateCommandItems","sent","_generateEntityItems","_handleRangeChanged2","_callee3","e","_callee3$","_context3","abrupt","firstVisible","updateComplete","_x2","_this3","index","_renderCommandItem","_renderEntityItem","_templateObject12","Boolean","altText","iconPath","_templateObject13","_templateObject14","icon","primaryText","_templateObject15","_templateObject16","categoryText","_templateObject17","_processItemAndCloseDialog","_callee4","_callee4$","_context4","_addSpinnerToCommandItem","action","processItemAndCloseDialog","_x3","_x4","ev","code","firstItem","_getItemAtIndex","style","display","_this$_getItemAtIndex","preventDefault","focus","_focusListElement","renderRoot","querySelector","_this$_getItemAtIndex2","spinner","document","createElement","size","slot","indeterminate","appendChild","newFilter","currentTarget","oldCommandMode","oldSearch","newCommandMode","newSearch","startsWith","substring","rippleHandlers","endFocus","_debouncedSetFilter","_this4","_this$_getItemAtIndex3","startFocus","isSingleCharacter","target","getAttribute","isFirstListItem","_this$_getItemAtIndex4","Number","_this$_filterInputFie","_filterInputField","_this$_getItemAtIndex5","_this$_filterInputFie2","scrollTop","listItem","closest","_this5","Object","keys","states","map","entityId","entityState","entityItem","_templateObject18","assign","strings","sort","a","b","locale","language","_generateCommandItems2","_callee5","_this6","_callee5$","_context5","t1","_toConsumableArray","_generateReloadCommands","t2","t3","t4","_generateServerControlCommands","t5","_generateNavigationCommands","t6","t7","call","join","_generateReloadCommands2","_callee6","_this7","reloadableDomains","commands","_callee6$","_context6","loadBackendTranslation","domain","callService","push","command","_this8","serverActions","_action","toString","_callee7","confirmed","_callee7$","_context7","title","text","confirmText","destructive","_generateNavigationCommands2","_callee8","panelItems","sectionItems","supervisorItems","addonsInfo","_iterator","_step","addon","_callee8$","_context8","_generateNavigationPanelCommands","_generateNavigationConfigSectionCommands","path","_createForOfIteratorHelper","addons","version","s","n","done","slug","name","err","f","_finalizeNavigationCommands","_this9","panels","panelKey","panel","translationKey","url_path","_this10","_i","_Object$keys","sectionKey","_iterator2","_step2","_loop","page","info","_getNavigationInfoFromConfig","some","_ret","indexOf","caption","_this11","navItem","trimLeft","static","styles","_templateObject19"],"sources":["/workspaces/frontend/src/dialogs/quick-bar/ha-quick-bar.ts"],"sourcesContent":["import \"@material/mwc-list/mwc-list\";\nimport type { ListItem } from \"@material/mwc-list/mwc-list-item\";\nimport {\n  mdiClose,\n  mdiConsoleLine,\n  mdiEarth,\n  mdiMagnify,\n  mdiReload,\n  mdiServerNetwork,\n} from \"@mdi/js\";\nimport { LitElement, TemplateResult, css, html, nothing } from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators\";\nimport { ifDefined } from \"lit/directives/if-defined\";\nimport { styleMap } from \"lit/directives/style-map\";\nimport memoizeOne from \"memoize-one\";\nimport { canShowPage } from \"../../common/config/can_show_page\";\nimport { componentsWithService } from \"../../common/config/components_with_service\";\nimport { isComponentLoaded } from \"../../common/config/is_component_loaded\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { computeStateName } from \"../../common/entity/compute_state_name\";\nimport { navigate } from \"../../common/navigate\";\nimport { caseInsensitiveStringCompare } from \"../../common/string/compare\";\nimport {\n  ScorableTextItem,\n  fuzzyFilterSort,\n} from \"../../common/string/filter/sequence-matching\";\nimport { debounce } from \"../../common/util/debounce\";\nimport \"../../components/ha-circular-progress\";\nimport \"../../components/ha-icon-button\";\nimport \"../../components/ha-label\";\nimport \"../../components/ha-list-item\";\nimport \"../../components/ha-textfield\";\nimport { fetchHassioAddonsInfo } from \"../../data/hassio/addon\";\nimport { domainToName } from \"../../data/integration\";\nimport { getPanelNameTranslationKey } from \"../../data/panel\";\nimport { PageNavigation } from \"../../layouts/hass-tabs-subpage\";\nimport { configSections } from \"../../panels/config/ha-panel-config\";\nimport { haStyleDialog, haStyleScrollbar } from \"../../resources/styles\";\nimport { loadVirtualizer } from \"../../resources/virtualizer\";\nimport { HomeAssistant } from \"../../types\";\nimport { showConfirmationDialog } from \"../generic/show-dialog-box\";\nimport { QuickBarParams } from \"./show-dialog-quick-bar\";\n\ninterface QuickBarItem extends ScorableTextItem {\n  primaryText: string;\n  iconPath?: string;\n  action(data?: any): void;\n}\n\ninterface CommandItem extends QuickBarItem {\n  categoryKey: \"reload\" | \"navigation\" | \"server_control\";\n  categoryText: string;\n}\n\ninterface EntityItem extends QuickBarItem {\n  altText: string;\n  icon?: TemplateResult;\n}\n\nconst isCommandItem = (item: QuickBarItem): item is CommandItem =>\n  (item as CommandItem).categoryKey !== undefined;\n\ninterface QuickBarNavigationItem extends CommandItem {\n  path: string;\n}\n\ntype NavigationInfo = PageNavigation & Pick<QuickBarItem, \"primaryText\">;\n\ntype BaseNavigationCommand = Pick<\n  QuickBarNavigationItem,\n  \"primaryText\" | \"path\"\n>;\n@customElement(\"ha-quick-bar\")\nexport class QuickBar extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @state() private _commandItems?: CommandItem[];\n\n  @state() private _entityItems?: EntityItem[];\n\n  @state() private _filter = \"\";\n\n  @state() private _search = \"\";\n\n  @state() private _open = false;\n\n  @state() private _commandMode = false;\n\n  @state() private _opened = false;\n\n  @state() private _narrow = false;\n\n  @state() private _hint?: string;\n\n  @query(\"ha-textfield\", false) private _filterInputField?: HTMLElement;\n\n  private _focusSet = false;\n\n  private _focusListElement?: ListItem | null;\n\n  public async showDialog(params: QuickBarParams) {\n    this._commandMode = params.commandMode || this._toggleIfAlreadyOpened();\n    this._hint = params.hint;\n    this._narrow = matchMedia(\n      \"all and (max-width: 450px), all and (max-height: 500px)\"\n    ).matches;\n    this._initializeItemsIfNeeded();\n    this._open = true;\n  }\n\n  public closeDialog() {\n    this._open = false;\n    this._opened = false;\n    this._focusSet = false;\n    this._filter = \"\";\n    this._search = \"\";\n    this._entityItems = undefined;\n    this._commandItems = undefined;\n    fireEvent(this, \"dialog-closed\", { dialog: this.localName });\n  }\n\n  protected willUpdate() {\n    if (!this.hasUpdated) {\n      loadVirtualizer();\n    }\n  }\n\n  private _getItems = memoizeOne(\n    (commandMode: boolean, commandItems, entityItems, filter: string) => {\n      const items = commandMode ? commandItems : entityItems;\n\n      if (items && filter && filter !== \" \") {\n        return this._filterItems(items, filter);\n      }\n      return items;\n    }\n  );\n\n  protected render() {\n    if (!this._open) {\n      return nothing;\n    }\n\n    const items: QuickBarItem[] | undefined = this._getItems(\n      this._commandMode,\n      this._commandItems,\n      this._entityItems,\n      this._filter\n    );\n\n    return html`\n      <ha-dialog\n        .heading=${this.hass.localize(\"ui.dialogs.quick-bar.title\")}\n        open\n        @opened=${this._handleOpened}\n        @closed=${this.closeDialog}\n        hideActions\n      >\n        <div slot=\"heading\" class=\"heading\">\n          <ha-textfield\n            dialogInitialFocus\n            .placeholder=${this.hass.localize(\n              \"ui.dialogs.quick-bar.filter_placeholder\"\n            )}\n            aria-label=${this.hass.localize(\n              \"ui.dialogs.quick-bar.filter_placeholder\"\n            )}\n            .value=${this._commandMode ? `>${this._search}` : this._search}\n            icon\n            .iconTrailing=${this._search !== undefined || this._narrow}\n            @input=${this._handleSearchChange}\n            @keydown=${this._handleInputKeyDown}\n            @focus=${this._setFocusFirstListItem}\n          >\n            ${this._commandMode\n              ? html`\n                  <ha-svg-icon\n                    slot=\"leadingIcon\"\n                    class=\"prefix\"\n                    .path=${mdiConsoleLine}\n                  ></ha-svg-icon>\n                `\n              : html`\n                  <ha-svg-icon\n                    slot=\"leadingIcon\"\n                    class=\"prefix\"\n                    .path=${mdiMagnify}\n                  ></ha-svg-icon>\n                `}\n            ${this._search || this._narrow\n              ? html`\n                  <div slot=\"trailingIcon\">\n                    ${this._search &&\n                    html`<ha-icon-button\n                      @click=${this._clearSearch}\n                      .label=${this.hass!.localize(\"ui.common.clear\")}\n                      .path=${mdiClose}\n                    ></ha-icon-button>`}\n                    ${this._narrow\n                      ? html`\n                          <mwc-button\n                            .label=${this.hass!.localize(\"ui.common.close\")}\n                            @click=${this.closeDialog}\n                          ></mwc-button>\n                        `\n                      : \"\"}\n                  </div>\n                `\n              : \"\"}\n          </ha-textfield>\n        </div>\n        ${!items\n          ? html`<ha-circular-progress\n              size=\"small\"\n              indeterminate\n            ></ha-circular-progress>`\n          : items.length === 0\n            ? html`\n                <div class=\"nothing-found\">\n                  ${this.hass.localize(\"ui.dialogs.quick-bar.nothing_found\")}\n                </div>\n              `\n            : html`\n                <mwc-list>\n                  ${this._opened\n                    ? html`<lit-virtualizer\n                        scroller\n                        @keydown=${this._handleListItemKeyDown}\n                        @rangechange=${this._handleRangeChanged}\n                        @click=${this._handleItemClick}\n                        class=\"ha-scrollbar\"\n                        style=${styleMap({\n                          height: this._narrow\n                            ? \"calc(100vh - 56px)\"\n                            : `${Math.min(\n                                items.length * (this._commandMode ? 56 : 72) +\n                                  26,\n                                500\n                              )}px`,\n                        })}\n                        .items=${items}\n                        .renderItem=${this._renderItem}\n                      >\n                      </lit-virtualizer>`\n                    : \"\"}\n                </mwc-list>\n              `}\n        ${this._hint\n          ? html`<ha-tip .hass=${this.hass}>${this._hint}</ha-tip>`\n          : \"\"}\n      </ha-dialog>\n    `;\n  }\n\n  private async _initializeItemsIfNeeded() {\n    if (this._commandMode) {\n      this._commandItems =\n        this._commandItems || (await this._generateCommandItems());\n    } else {\n      this._entityItems = this._entityItems || this._generateEntityItems();\n    }\n  }\n\n  private _handleOpened() {\n    this._opened = true;\n  }\n\n  private async _handleRangeChanged(e) {\n    if (this._focusSet) {\n      return;\n    }\n    if (e.firstVisible > -1) {\n      this._focusSet = true;\n      await this.updateComplete;\n      this._setFocusFirstListItem();\n    }\n  }\n\n  private _renderItem = (item: QuickBarItem, index: number) => {\n    if (!item) {\n      return nothing;\n    }\n    return isCommandItem(item)\n      ? this._renderCommandItem(item, index)\n      : this._renderEntityItem(item as EntityItem, index);\n  };\n\n  private _renderEntityItem(item: EntityItem, index?: number) {\n    return html`\n      <ha-list-item\n        .twoline=${Boolean(item.altText)}\n        .item=${item}\n        index=${ifDefined(index)}\n        graphic=\"icon\"\n      >\n        ${item.iconPath\n          ? html`\n              <ha-svg-icon\n                .path=${item.iconPath}\n                class=\"entity\"\n                slot=\"graphic\"\n              ></ha-svg-icon>\n            `\n          : html`<span slot=\"graphic\">${item.icon}</span>`}\n        <span>${item.primaryText}</span>\n        ${item.altText\n          ? html`\n              <span slot=\"secondary\" class=\"item-text secondary\"\n                >${item.altText}</span\n              >\n            `\n          : nothing}\n      </ha-list-item>\n    `;\n  }\n\n  private _renderCommandItem(item: CommandItem, index?: number) {\n    return html`\n      <ha-list-item\n        .item=${item}\n        index=${ifDefined(index)}\n        class=\"command-item\"\n        hasMeta\n      >\n        <span>\n          <ha-label\n            .label=${item.categoryText}\n            class=\"command-category ${item.categoryKey}\"\n          >\n            ${item.iconPath\n              ? html`\n                  <ha-svg-icon .path=${item.iconPath} slot=\"icon\"></ha-svg-icon>\n                `\n              : nothing}\n            ${item.categoryText}\n          </ha-label>\n        </span>\n\n        <span class=\"command-text\">${item.primaryText}</span>\n      </ha-list-item>\n    `;\n  }\n\n  private async processItemAndCloseDialog(item: QuickBarItem, index: number) {\n    this._addSpinnerToCommandItem(index);\n\n    await item.action();\n    this.closeDialog();\n  }\n\n  private _handleInputKeyDown(ev: KeyboardEvent) {\n    if (ev.code === \"Enter\") {\n      const firstItem = this._getItemAtIndex(0);\n      if (!firstItem || firstItem.style.display === \"none\") {\n        return;\n      }\n      this.processItemAndCloseDialog((firstItem as any).item, 0);\n    } else if (ev.code === \"ArrowDown\") {\n      ev.preventDefault();\n      this._getItemAtIndex(0)?.focus();\n      this._focusSet = true;\n      this._focusListElement = this._getItemAtIndex(0);\n    }\n  }\n\n  private _getItemAtIndex(index: number): ListItem | null {\n    return this.renderRoot.querySelector(`ha-list-item[index=\"${index}\"]`);\n  }\n\n  private _addSpinnerToCommandItem(index: number): void {\n    const spinner = document.createElement(\"ha-circular-progress\");\n    spinner.size = \"small\";\n    spinner.slot = \"meta\";\n    spinner.indeterminate = true;\n    this._getItemAtIndex(index)?.appendChild(spinner);\n  }\n\n  private _handleSearchChange(ev: CustomEvent): void {\n    const newFilter = (ev.currentTarget as any).value;\n    const oldCommandMode = this._commandMode;\n    const oldSearch = this._search;\n    let newCommandMode: boolean;\n    let newSearch: string;\n\n    if (newFilter.startsWith(\">\")) {\n      newCommandMode = true;\n      newSearch = newFilter.substring(1);\n    } else {\n      newCommandMode = false;\n      newSearch = newFilter;\n    }\n\n    if (oldCommandMode === newCommandMode && oldSearch === newSearch) {\n      return;\n    }\n\n    this._commandMode = newCommandMode;\n    this._search = newSearch;\n\n    if (this._hint) {\n      this._hint = undefined;\n    }\n\n    if (oldCommandMode !== this._commandMode) {\n      this._focusSet = false;\n      this._initializeItemsIfNeeded();\n      this._filter = this._search;\n    } else {\n      if (this._focusSet && this._focusListElement) {\n        this._focusSet = false;\n        // @ts-ignore\n        this._focusListElement.rippleHandlers.endFocus();\n      }\n      this._debouncedSetFilter(this._search);\n    }\n  }\n\n  private _clearSearch() {\n    this._search = \"\";\n    this._filter = \"\";\n  }\n\n  private _debouncedSetFilter = debounce((filter: string) => {\n    this._filter = filter;\n  }, 100);\n\n  private _setFocusFirstListItem() {\n    // @ts-ignore\n    this._getItemAtIndex(0)?.rippleHandlers.startFocus();\n    this._focusListElement = this._getItemAtIndex(0);\n  }\n\n  private _handleListItemKeyDown(ev: KeyboardEvent) {\n    const isSingleCharacter = ev.key.length === 1;\n    const index = (ev.target as HTMLElement).getAttribute(\"index\");\n    const isFirstListItem = index === \"0\";\n    this._focusListElement = ev.target as ListItem;\n    if (ev.key === \"ArrowDown\") {\n      this._getItemAtIndex(Number(index) + 1)?.focus();\n    }\n    if (ev.key === \"ArrowUp\") {\n      if (isFirstListItem) {\n        this._filterInputField?.focus();\n      } else {\n        this._getItemAtIndex(Number(index) - 1)?.focus();\n      }\n    }\n    if (ev.key === \"Enter\" || ev.key === \" \") {\n      this.processItemAndCloseDialog(\n        (ev.target as any).item,\n        Number((ev.target as HTMLElement).getAttribute(\"index\"))\n      );\n    }\n    if (ev.key === \"Backspace\" || isSingleCharacter) {\n      (ev.currentTarget as HTMLElement).scrollTop = 0;\n      this._filterInputField?.focus();\n    }\n  }\n\n  private _handleItemClick(ev) {\n    const listItem = ev.target.closest(\"ha-list-item\");\n    this.processItemAndCloseDialog(\n      listItem.item,\n      Number(listItem.getAttribute(\"index\"))\n    );\n  }\n\n  private _generateEntityItems(): EntityItem[] {\n    return Object.keys(this.hass.states)\n      .map((entityId) => {\n        const entityState = this.hass.states[entityId];\n        const entityItem = {\n          primaryText: computeStateName(entityState),\n          altText: entityId,\n          icon: html`\n            <ha-state-icon\n              .hass=${this.hass}\n              .stateObj=${entityState}\n            ></ha-state-icon>\n          `,\n          action: () => fireEvent(this, \"hass-more-info\", { entityId }),\n        };\n\n        return {\n          ...entityItem,\n          strings: [entityItem.primaryText, entityItem.altText],\n        };\n      })\n      .sort((a, b) =>\n        caseInsensitiveStringCompare(\n          a.primaryText,\n          b.primaryText,\n          this.hass.locale.language\n        )\n      );\n  }\n\n  private async _generateCommandItems(): Promise<CommandItem[]> {\n    return [\n      ...(await this._generateReloadCommands()),\n      ...this._generateServerControlCommands(),\n      ...(await this._generateNavigationCommands()),\n    ].sort((a, b) =>\n      caseInsensitiveStringCompare(\n        a.strings.join(\" \"),\n        b.strings.join(\" \"),\n        this.hass.locale.language\n      )\n    );\n  }\n\n  private async _generateReloadCommands(): Promise<CommandItem[]> {\n    // Get all domains that have a direct \"reload\" service\n    const reloadableDomains = componentsWithService(this.hass, \"reload\");\n\n    const localize = await this.hass.loadBackendTranslation(\n      \"title\",\n      reloadableDomains\n    );\n\n    const commands = reloadableDomains.map((domain) => ({\n      primaryText:\n        this.hass.localize(`ui.dialogs.quick-bar.commands.reload.${domain}`) ||\n        this.hass.localize(\"ui.dialogs.quick-bar.commands.reload.reload\", {\n          domain: domainToName(localize, domain),\n        }),\n      action: () => this.hass.callService(domain, \"reload\"),\n      iconPath: mdiReload,\n      categoryText: this.hass.localize(\n        `ui.dialogs.quick-bar.commands.types.reload`\n      ),\n    }));\n\n    // Add \"frontend.reload_themes\"\n    commands.push({\n      primaryText: this.hass.localize(\n        \"ui.dialogs.quick-bar.commands.reload.themes\"\n      ),\n      action: () => this.hass.callService(\"frontend\", \"reload_themes\"),\n      iconPath: mdiReload,\n      categoryText: this.hass.localize(\n        \"ui.dialogs.quick-bar.commands.types.reload\"\n      ),\n    });\n\n    // Add \"homeassistant.reload_core_config\"\n    commands.push({\n      primaryText: this.hass.localize(\n        \"ui.dialogs.quick-bar.commands.reload.core\"\n      ),\n      action: () =>\n        this.hass.callService(\"homeassistant\", \"reload_core_config\"),\n      iconPath: mdiReload,\n      categoryText: this.hass.localize(\n        \"ui.dialogs.quick-bar.commands.types.reload\"\n      ),\n    });\n\n    // Add \"homeassistant.reload_all\"\n    commands.push({\n      primaryText: this.hass.localize(\n        \"ui.dialogs.quick-bar.commands.reload.all\"\n      ),\n      action: () => this.hass.callService(\"homeassistant\", \"reload_all\"),\n      iconPath: mdiReload,\n      categoryText: this.hass.localize(\n        \"ui.dialogs.quick-bar.commands.types.reload\"\n      ),\n    });\n\n    return commands.map((command) => ({\n      ...command,\n      categoryKey: \"reload\",\n      strings: [`${command.categoryText} ${command.primaryText}`],\n    }));\n  }\n\n  private _generateServerControlCommands(): CommandItem[] {\n    const serverActions = [\"restart\", \"stop\"] as const;\n\n    return serverActions.map((action) => {\n      const categoryKey: CommandItem[\"categoryKey\"] = \"server_control\";\n\n      const item = {\n        primaryText: this.hass.localize(\n          \"ui.dialogs.quick-bar.commands.server_control.perform_action\",\n          {\n            action: this.hass.localize(\n              `ui.dialogs.quick-bar.commands.server_control.${action}`\n            ),\n          }\n        ),\n        iconPath: mdiServerNetwork,\n        categoryText: this.hass.localize(\n          `ui.dialogs.quick-bar.commands.types.${categoryKey}`\n        ),\n        categoryKey,\n        action: async () => {\n          const confirmed = await showConfirmationDialog(this, {\n            title: this.hass.localize(\n              `ui.dialogs.restart.${action}.confirm_title`\n            ),\n            text: this.hass.localize(\n              `ui.dialogs.restart.${action}.confirm_description`\n            ),\n            confirmText: this.hass.localize(\n              `ui.dialogs.restart.${action}.confirm_action`\n            ),\n            destructive: true,\n          });\n          if (!confirmed) {\n            return;\n          }\n          this.hass.callService(\"homeassistant\", action);\n        },\n      };\n\n      return {\n        ...item,\n        strings: [`${item.categoryText} ${item.primaryText}`],\n      };\n    });\n  }\n\n  private async _generateNavigationCommands(): Promise<CommandItem[]> {\n    const panelItems = this._generateNavigationPanelCommands();\n    const sectionItems = this._generateNavigationConfigSectionCommands();\n    const supervisorItems: BaseNavigationCommand[] = [];\n    if (isComponentLoaded(this.hass, \"hassio\")) {\n      const addonsInfo = await fetchHassioAddonsInfo(this.hass);\n      supervisorItems.push({\n        path: \"/hassio/store\",\n        primaryText: this.hass.localize(\n          \"ui.dialogs.quick-bar.commands.navigation.addon_store\"\n        ),\n      });\n      supervisorItems.push({\n        path: \"/hassio/dashboard\",\n        primaryText: this.hass.localize(\n          \"ui.dialogs.quick-bar.commands.navigation.addon_dashboard\"\n        ),\n      });\n      for (const addon of addonsInfo.addons.filter((a) => a.version)) {\n        supervisorItems.push({\n          path: `/hassio/addon/${addon.slug}`,\n          primaryText: this.hass.localize(\n            \"ui.dialogs.quick-bar.commands.navigation.addon_info\",\n            { addon: addon.name }\n          ),\n        });\n      }\n    }\n\n    return this._finalizeNavigationCommands([\n      ...panelItems,\n      ...sectionItems,\n      ...supervisorItems,\n    ]);\n  }\n\n  private _generateNavigationPanelCommands(): BaseNavigationCommand[] {\n    return Object.keys(this.hass.panels)\n      .filter((panelKey) => panelKey !== \"_my_redirect\")\n      .map((panelKey) => {\n        const panel = this.hass.panels[panelKey];\n        const translationKey = getPanelNameTranslationKey(panel);\n\n        const primaryText =\n          this.hass.localize(translationKey) || panel.title || panel.url_path;\n\n        return {\n          primaryText,\n          path: `/${panel.url_path}`,\n        };\n      });\n  }\n\n  private _generateNavigationConfigSectionCommands(): BaseNavigationCommand[] {\n    const items: NavigationInfo[] = [];\n\n    for (const sectionKey of Object.keys(configSections)) {\n      for (const page of configSections[sectionKey]) {\n        if (!canShowPage(this.hass, page)) {\n          continue;\n        }\n\n        const info = this._getNavigationInfoFromConfig(page);\n\n        if (!info) {\n          continue;\n        }\n        // Add to list, but only if we do not already have an entry for the same path and component\n        if (items.some((e) => e.path === info.path)) {\n          continue;\n        }\n\n        items.push(info);\n      }\n    }\n\n    return items;\n  }\n\n  private _getNavigationInfoFromConfig(\n    page: PageNavigation\n  ): NavigationInfo | undefined {\n    const path = page.path.substring(1);\n\n    let name = path.substring(path.indexOf(\"/\") + 1);\n    name = name.indexOf(\"/\") > -1 ? name.substring(0, name.indexOf(\"/\")) : name;\n\n    const caption =\n      (name &&\n        this.hass.localize(\n          `ui.dialogs.quick-bar.commands.navigation.${name}`\n        )) ||\n      // @ts-expect-error\n      (page.translationKey && this.hass.localize(page.translationKey));\n\n    if (caption) {\n      return { ...page, primaryText: caption };\n    }\n\n    return undefined;\n  }\n\n  private _finalizeNavigationCommands(\n    items: BaseNavigationCommand[]\n  ): CommandItem[] {\n    return items.map((item) => {\n      const categoryKey: CommandItem[\"categoryKey\"] = \"navigation\";\n\n      const navItem = {\n        ...item,\n        iconPath: mdiEarth,\n        categoryText: this.hass.localize(\n          `ui.dialogs.quick-bar.commands.types.${categoryKey}`\n        ),\n        action: () => navigate(item.path),\n      };\n\n      return {\n        ...navItem,\n        strings: [`${navItem.categoryText} ${navItem.primaryText}`],\n        categoryKey,\n      };\n    });\n  }\n\n  private _toggleIfAlreadyOpened() {\n    return this._opened ? !this._commandMode : false;\n  }\n\n  private _filterItems = memoizeOne(\n    (items: QuickBarItem[], filter: string): QuickBarItem[] =>\n      fuzzyFilterSort<QuickBarItem>(filter.trimLeft(), items)\n  );\n\n  static get styles() {\n    return [\n      haStyleScrollbar,\n      haStyleDialog,\n      css`\n        mwc-list {\n          position: relative;\n          --mdc-list-vertical-padding: 0;\n        }\n        .heading {\n          display: flex;\n          align-items: center;\n          --mdc-theme-primary: var(--primary-text-color);\n        }\n\n        .heading ha-textfield {\n          flex-grow: 1;\n        }\n\n        ha-dialog {\n          --dialog-z-index: 9;\n          --dialog-content-padding: 0;\n        }\n\n        @media (min-width: 800px) {\n          ha-dialog {\n            --mdc-dialog-max-width: 800px;\n            --mdc-dialog-min-width: 500px;\n            --dialog-surface-position: fixed;\n            --dialog-surface-top: 40px;\n            --mdc-dialog-max-height: calc(100% - 72px);\n          }\n        }\n\n        @media all and (max-width: 450px), all and (max-height: 500px) {\n          ha-textfield {\n            --mdc-shape-small: 0;\n          }\n        }\n\n        @media all and (max-width: 450px), all and (max-height: 690px) {\n          .hint {\n            display: none;\n          }\n        }\n\n        ha-svg-icon.prefix {\n          color: var(--primary-text-color);\n        }\n\n        ha-textfield ha-icon-button {\n          --mdc-icon-button-size: 24px;\n          color: var(--primary-text-color);\n        }\n\n        .command-category {\n          --ha-label-icon-color: #585858;\n          --ha-label-text-color: #212121;\n        }\n\n        .command-category.reload {\n          --ha-label-background-color: #cddc39;\n        }\n\n        .command-category.navigation {\n          --ha-label-background-color: var(--light-primary-color);\n        }\n\n        .command-category.server_control {\n          --ha-label-background-color: var(--warning-color);\n        }\n\n        span.command-text {\n          margin-left: 8px;\n          margin-inline-start: 8px;\n          margin-inline-end: initial;\n          direction: var(--direction);\n        }\n\n        ha-list-item {\n          width: 100%;\n          --mdc-list-item-graphic-margin: 20px;\n        }\n\n        ha-list-item.command-item {\n          text-transform: capitalize;\n        }\n\n        ha-tip {\n          padding: 20px;\n        }\n\n        .nothing-found {\n          padding: 16px 0px;\n          text-align: center;\n        }\n\n        div[slot=\"trailingIcon\"] {\n          display: flex;\n          align-items: center;\n        }\n\n        lit-virtualizer {\n          contain: size layout !important;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-quick-bar\": QuickBar;\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,6BAA6B;AAAC,IAAAA,QAAA;AAAA,IAAAC,cAAA;AAAA,IAAAC,QAAA;AAAA,IAAAC,UAAA;AAAA,IAAAC,SAAA;AAAA,IAAAC,gBAAA;AAUrC,SAASC,UAAU,EAAkBC,GAAG,EAAEC,IAAI,EAAEC,OAAO,QAAQ,KAAK;AACpE,SAASC,aAAa,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,KAAK,QAAQ,gBAAgB;AACtE,SAASC,SAAS,QAAQ,2BAA2B;AACrD,SAASC,QAAQ,QAAQ,0BAA0B;AACnD,OAAOC,UAAU,MAAM,aAAa;AACpC,SAASC,WAAW,QAAQ,mCAAmC;AAC/D,SAASC,qBAAqB,QAAQ,6CAA6C;AACnF,SAASC,iBAAiB,QAAQ,yCAAyC;AAC3E,SAASC,SAAS,QAAQ,6BAA6B;AACvD,SAASC,gBAAgB,QAAQ,wCAAwC;AACzE,SAASC,QAAQ,QAAQ,uBAAuB;AAChD,SAASC,4BAA4B,QAAQ,6BAA6B;AAC1E,SAEEC,eAAe,QACV,8CAA8C;AACrD,SAASC,QAAQ,QAAQ,4BAA4B;AACrD,OAAO,uCAAuC;AAC9C,OAAO,iCAAiC;AACxC,OAAO,2BAA2B;AAClC,OAAO,+BAA+B;AACtC,OAAO,+BAA+B;AACtC,SAASC,qBAAqB,QAAQ,yBAAyB;AAC/D,SAASC,YAAY,QAAQ,wBAAwB;AACrD,SAASC,0BAA0B,QAAQ,kBAAkB;AAE7D,SAASC,cAAc,QAAQ,qCAAqC;AACpE,SAASC,aAAa,EAAEC,gBAAgB,QAAQ,wBAAwB;AACxE,SAASC,eAAe,QAAQ,6BAA6B;AAE7D,SAASC,sBAAsB,QAAQ,4BAA4B;AAmBnE,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAIC,IAAkB;EAAA,OACtCA,IAAI,CAAiBC,WAAW,KAAKC,SAAS;AAAA;AAYjD,WACaC,QAAQ,GAAAC,SAAA,EADpB7B,aAAa,CAAC,cAAc,CAAC,aAAA8B,WAAA,EAAAC,WAAA;EAAA,IACjBH,QAAQ,0BAAAI,YAAA;IAAAC,SAAA,CAAAL,QAAA,EAAAI,YAAA;IAAA,SAAAJ,SAAA;MAAA,IAAAM,KAAA;MAAAC,eAAA,OAAAP,QAAA;MAAA,SAAAQ,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAAC,IAAA,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;QAAAF,IAAA,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;MAAA;MAAAP,KAAA,GAAAQ,UAAA,OAAAd,QAAA,KAAAe,MAAA,CAAAJ,IAAA;MAAAT,WAAA,CAAAc,sBAAA,CAAAV,KAAA;MAAA,OAAAA,KAAA;IAAA;IAAA,OAAAW,YAAA,CAAAjB,QAAA;EAAA,EAAAG,WAAA;EAAA;IAAAe,CAAA,EAARlB,QAAQ;IAAAmB,CAAA;MAAAC,IAAA;MAAAC,UAAA,GAClBhD,QAAQ,CAAC;QAAEiD,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAC,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAE9B9C,KAAK,CAAC,CAAC;MAAAgD,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAEP9C,KAAK,CAAC,CAAC;MAAAgD,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAEP9C,KAAK,CAAC,CAAC;MAAAgD,GAAA;MAAAC,KAAA,WAAAA,MAAA;QAAA,OAAmB,EAAE;MAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAE5B9C,KAAK,CAAC,CAAC;MAAAgD,GAAA;MAAAC,KAAA,WAAAA,MAAA;QAAA,OAAmB,EAAE;MAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAE5B9C,KAAK,CAAC,CAAC;MAAAgD,GAAA;MAAAC,KAAA,WAAAA,MAAA;QAAA,OAAiB,KAAK;MAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAE7B9C,KAAK,CAAC,CAAC;MAAAgD,GAAA;MAAAC,KAAA,WAAAA,MAAA;QAAA,OAAwB,KAAK;MAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAEpC9C,KAAK,CAAC,CAAC;MAAAgD,GAAA;MAAAC,KAAA,WAAAA,MAAA;QAAA,OAAmB,KAAK;MAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAE/B9C,KAAK,CAAC,CAAC;MAAAgD,GAAA;MAAAC,KAAA,WAAAA,MAAA;QAAA,OAAmB,KAAK;MAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAE/B9C,KAAK,CAAC,CAAC;MAAAgD,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAEP/C,KAAK,CAAC,cAAc,EAAE,KAAK,CAAC;MAAAiD,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAG,GAAA;MAAAC,KAAA,WAAAA,MAAA;QAAA,OAET,KAAK;MAAA;IAAA;MAAAJ,IAAA;MAAAG,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAG,GAAA;MAAAC,KAAA;QAAA,IAAAC,WAAA,GAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAIzB,SAAAC,QAAwBC,MAAsB;UAAA,OAAAH,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA;YAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;cAAA;gBAC5C,IAAI,CAACC,YAAY,GAAGN,MAAM,CAACO,WAAW,IAAI,IAAI,CAACC,sBAAsB,CAAC,CAAC;gBACvE,IAAI,CAACC,KAAK,GAAGT,MAAM,CAACU,IAAI;gBACxB,IAAI,CAACC,OAAO,GAAGC,UAAU,CACvB,yDACF,CAAC,CAACC,OAAO;gBACT,IAAI,CAACC,wBAAwB,CAAC,CAAC;gBAC/B,IAAI,CAACC,KAAK,GAAG,IAAI;cAAC;cAAA;gBAAA,OAAAZ,QAAA,CAAAa,IAAA;YAAA;UAAA,GAAAjB,OAAA;QAAA,CACnB;QAAA,SAAAkB,WAAAC,EAAA;UAAA,OAAAvB,WAAA,CAAAwB,KAAA,OAAAxC,SAAA;QAAA;QAAA,OAAAsC,UAAA;MAAA;IAAA;MAAA3B,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAA0B,YAAA,EAAqB;QACnB,IAAI,CAACL,KAAK,GAAG,KAAK;QAClB,IAAI,CAACM,OAAO,GAAG,KAAK;QACpB,IAAI,CAACC,SAAS,GAAG,KAAK;QACtB,IAAI,CAACC,OAAO,GAAG,EAAE;QACjB,IAAI,CAACC,OAAO,GAAG,EAAE;QACjB,IAAI,CAACC,YAAY,GAAGxD,SAAS;QAC7B,IAAI,CAACyD,aAAa,GAAGzD,SAAS;QAC9BjB,SAAS,CAAC,IAAI,EAAE,eAAe,EAAE;UAAE2E,MAAM,EAAE,IAAI,CAACC;QAAU,CAAC,CAAC;MAC9D;IAAC;MAAAtC,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAmC,WAAA,EAAuB;QACrB,IAAI,CAAC,IAAI,CAACC,UAAU,EAAE;UACpBlE,eAAe,CAAC,CAAC;QACnB;MACF;IAAC;MAAA0B,IAAA;MAAAG,GAAA;MAAAC,KAAA,WAAAA,MAAA;QAAA,IAAAqC,MAAA;QAAA,OAEmBnF,UAAU,CAC5B,UAAC2D,WAAoB,EAAEyB,YAAY,EAAEC,WAAW,EAAEC,MAAc,EAAK;UACnE,IAAMC,KAAK,GAAG5B,WAAW,GAAGyB,YAAY,GAAGC,WAAW;UAEtD,IAAIE,KAAK,IAAID,MAAM,IAAIA,MAAM,KAAK,GAAG,EAAE;YACrC,OAAOH,MAAI,CAACK,YAAY,CAACD,KAAK,EAAED,MAAM,CAAC;UACzC;UACA,OAAOC,KAAK;QACd,CACF,CAAC;MAAA;IAAA;MAAA7C,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAA2C,OAAA,EAAmB;QACjB,IAAI,CAAC,IAAI,CAACtB,KAAK,EAAE;UACf,OAAO1E,OAAO;QAChB;QAEA,IAAM8F,KAAiC,GAAG,IAAI,CAACG,SAAS,CACtD,IAAI,CAAChC,YAAY,EACjB,IAAI,CAACoB,aAAa,EAClB,IAAI,CAACD,YAAY,EACjB,IAAI,CAACF,OACP,CAAC;QAED,OAAOnF,IAAI,CAAAmG,eAAA,KAAAA,eAAA,GAAAC,sBAAA,2lBAEI,IAAI,CAACC,IAAI,CAACC,QAAQ,CAAC,4BAA4B,CAAC,EAEjD,IAAI,CAACC,aAAa,EAClB,IAAI,CAACvB,WAAW,EAMP,IAAI,CAACqB,IAAI,CAACC,QAAQ,CAC/B,yCACF,CAAC,EACY,IAAI,CAACD,IAAI,CAACC,QAAQ,CAC7B,yCACF,CAAC,EACQ,IAAI,CAACpC,YAAY,OAAArB,MAAA,CAAO,IAAI,CAACuC,OAAO,IAAK,IAAI,CAACA,OAAO,EAE9C,IAAI,CAACA,OAAO,KAAKvD,SAAS,IAAI,IAAI,CAAC0C,OAAO,EACjD,IAAI,CAACiC,mBAAmB,EACtB,IAAI,CAACC,mBAAmB,EAC1B,IAAI,CAACC,sBAAsB,EAElC,IAAI,CAACxC,YAAY,GACflE,IAAI,CAAA2G,gBAAA,KAAAA,gBAAA,GAAAP,sBAAA,8MAIQ3G,cAAc,IAG1BO,IAAI,CAAA4G,gBAAA,KAAAA,gBAAA,GAAAR,sBAAA,8MAIQzG,UAAU,CAErB,EACH,IAAI,CAACyF,OAAO,IAAI,IAAI,CAACb,OAAO,GAC1BvE,IAAI,CAAA6G,gBAAA,KAAAA,gBAAA,GAAAT,sBAAA,wJAEE,IAAI,CAAChB,OAAO,IACdpF,IAAI,CAAA8G,gBAAA,KAAAA,gBAAA,GAAAV,sBAAA,wKACO,IAAI,CAACW,YAAY,EACjB,IAAI,CAACV,IAAI,CAAEC,QAAQ,CAAC,iBAAiB,CAAC,EACvC9G,QAAQ,CACC,EACjB,IAAI,CAAC+E,OAAO,GACVvE,IAAI,CAAAgH,gBAAA,KAAAA,gBAAA,GAAAZ,sBAAA,sMAES,IAAI,CAACC,IAAI,CAAEC,QAAQ,CAAC,iBAAiB,CAAC,EACtC,IAAI,CAACtB,WAAW,IAG7B,EAAE,IAGV,EAAE,EAGR,CAACe,KAAK,GACJ/F,IAAI,CAAAiH,gBAAA,KAAAA,gBAAA,GAAAb,sBAAA,iIAIJL,KAAK,CAACvD,MAAM,KAAK,CAAC,GAChBxC,IAAI,CAAAkH,gBAAA,KAAAA,gBAAA,GAAAd,sBAAA,wHAEE,IAAI,CAACC,IAAI,CAACC,QAAQ,CAAC,oCAAoC,CAAC,IAG9DtG,IAAI,CAAAmH,gBAAA,KAAAA,gBAAA,GAAAf,sBAAA,0GAEE,IAAI,CAACnB,OAAO,GACVjF,IAAI,CAAAoH,iBAAA,KAAAA,iBAAA,GAAAhB,sBAAA,wZAES,IAAI,CAACiB,sBAAsB,EACvB,IAAI,CAACC,mBAAmB,EAC9B,IAAI,CAACC,gBAAgB,EAEtBhH,QAAQ,CAAC;UACfiH,MAAM,EAAE,IAAI,CAACjD,OAAO,GAChB,oBAAoB,MAAA1B,MAAA,CACjB4E,IAAI,CAACC,GAAG,CACT3B,KAAK,CAACvD,MAAM,IAAI,IAAI,CAAC0B,YAAY,GAAG,EAAE,GAAG,EAAE,CAAC,GAC1C,EAAE,EACJ,GACF,CAAC;QACP,CAAC,CAAC,EACO6B,KAAK,EACA,IAAI,CAAC4B,WAAW,IAGhC,EAAE,CAET,EACL,IAAI,CAACtD,KAAK,GACRrE,IAAI,CAAA4H,iBAAA,KAAAA,iBAAA,GAAAxB,sBAAA,yCAAiB,IAAI,CAACC,IAAI,EAAI,IAAI,CAAChC,KAAK,IAC5C,EAAE;MAGZ;IAAC;MAAAnB,IAAA;MAAAG,GAAA;MAAAC,KAAA;QAAA,IAAAuE,yBAAA,GAAArE,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAED,SAAAoE,SAAA;UAAA,OAAArE,mBAAA,GAAAI,IAAA,UAAAkE,UAAAC,SAAA;YAAA,kBAAAA,SAAA,CAAAhE,IAAA,GAAAgE,SAAA,CAAA/D,IAAA;cAAA;gBAAA,KACM,IAAI,CAACC,YAAY;kBAAA8D,SAAA,CAAA/D,IAAA;kBAAA;gBAAA;gBAAA+D,SAAA,CAAAC,EAAA,GAEjB,IAAI,CAAC3C,aAAa;gBAAA,IAAA0C,SAAA,CAAAC,EAAA;kBAAAD,SAAA,CAAA/D,IAAA;kBAAA;gBAAA;gBAAA+D,SAAA,CAAA/D,IAAA;gBAAA,OAAW,IAAI,CAACiE,qBAAqB,CAAC,CAAC;cAAA;gBAAAF,SAAA,CAAAC,EAAA,GAAAD,SAAA,CAAAG,IAAA;cAAA;gBAD3D,IAAI,CAAC7C,aAAa,GAAA0C,SAAA,CAAAC,EAAA;gBAAAD,SAAA,CAAA/D,IAAA;gBAAA;cAAA;gBAGlB,IAAI,CAACoB,YAAY,GAAG,IAAI,CAACA,YAAY,IAAI,IAAI,CAAC+C,oBAAoB,CAAC,CAAC;cAAC;cAAA;gBAAA,OAAAJ,SAAA,CAAApD,IAAA;YAAA;UAAA,GAAAkD,QAAA;QAAA,CAExE;QAAA,SAAApD,yBAAA;UAAA,OAAAmD,yBAAA,CAAA9C,KAAA,OAAAxC,SAAA;QAAA;QAAA,OAAAmC,wBAAA;MAAA;IAAA;MAAAxB,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAiD,cAAA,EAAwB;QACtB,IAAI,CAACtB,OAAO,GAAG,IAAI;MACrB;IAAC;MAAA/B,IAAA;MAAAG,GAAA;MAAAC,KAAA;QAAA,IAAA+E,oBAAA,GAAA7E,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAED,SAAA4E,SAAkCC,CAAC;UAAA,OAAA9E,mBAAA,GAAAI,IAAA,UAAA2E,UAAAC,SAAA;YAAA,kBAAAA,SAAA,CAAAzE,IAAA,GAAAyE,SAAA,CAAAxE,IAAA;cAAA;gBAAA,KAC7B,IAAI,CAACiB,SAAS;kBAAAuD,SAAA,CAAAxE,IAAA;kBAAA;gBAAA;gBAAA,OAAAwE,SAAA,CAAAC,MAAA;cAAA;gBAAA,MAGdH,CAAC,CAACI,YAAY,GAAG,CAAC,CAAC;kBAAAF,SAAA,CAAAxE,IAAA;kBAAA;gBAAA;gBACrB,IAAI,CAACiB,SAAS,GAAG,IAAI;gBAACuD,SAAA,CAAAxE,IAAA;gBAAA,OAChB,IAAI,CAAC2E,cAAc;cAAA;gBACzB,IAAI,CAAClC,sBAAsB,CAAC,CAAC;cAAC;cAAA;gBAAA,OAAA+B,SAAA,CAAA7D,IAAA;YAAA;UAAA,GAAA0D,QAAA;QAAA,CAEjC;QAAA,SAAAhB,oBAAAuB,GAAA;UAAA,OAAAR,oBAAA,CAAAtD,KAAA,OAAAxC,SAAA;QAAA;QAAA,OAAA+E,mBAAA;MAAA;IAAA;MAAApE,IAAA;MAAAG,GAAA;MAAAC,KAAA,WAAAA,MAAA;QAAA,IAAAwF,MAAA;QAAA,OAEqB,UAACnH,IAAkB,EAAEoH,KAAa,EAAK;UAC3D,IAAI,CAACpH,IAAI,EAAE;YACT,OAAO1B,OAAO;UAChB;UACA,OAAOyB,aAAa,CAACC,IAAI,CAAC,GACtBmH,MAAI,CAACE,kBAAkB,CAACrH,IAAI,EAAEoH,KAAK,CAAC,GACpCD,MAAI,CAACG,iBAAiB,CAACtH,IAAI,EAAgBoH,KAAK,CAAC;QACvD,CAAC;MAAA;IAAA;MAAA7F,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAA2F,kBAA0BtH,IAAgB,EAAEoH,KAAc,EAAE;QAC1D,OAAO/I,IAAI,CAAAkJ,iBAAA,KAAAA,iBAAA,GAAA9C,sBAAA,oNAEI+C,OAAO,CAACxH,IAAI,CAACyH,OAAO,CAAC,EACxBzH,IAAI,EACJrB,SAAS,CAACyI,KAAK,CAAC,EAGtBpH,IAAI,CAAC0H,QAAQ,GACXrJ,IAAI,CAAAsJ,iBAAA,KAAAA,iBAAA,GAAAlD,sBAAA,kLAEQzE,IAAI,CAAC0H,QAAQ,IAKzBrJ,IAAI,CAAAuJ,iBAAA,KAAAA,iBAAA,GAAAnD,sBAAA,2CAAwBzE,IAAI,CAAC6H,IAAI,CAAS,EAC1C7H,IAAI,CAAC8H,WAAW,EACtB9H,IAAI,CAACyH,OAAO,GACVpJ,IAAI,CAAA0J,iBAAA,KAAAA,iBAAA,GAAAtD,sBAAA,2IAEGzE,IAAI,CAACyH,OAAO,IAGnBnJ,OAAO;MAGjB;IAAC;MAAAiD,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAA0F,mBAA2BrH,IAAiB,EAAEoH,KAAc,EAAE;QAC5D,OAAO/I,IAAI,CAAA2J,iBAAA,KAAAA,iBAAA,GAAAvD,sBAAA,qZAECzE,IAAI,EACJrB,SAAS,CAACyI,KAAK,CAAC,EAMXpH,IAAI,CAACiI,YAAY,EACAjI,IAAI,CAACC,WAAW,EAExCD,IAAI,CAAC0H,QAAQ,GACXrJ,IAAI,CAAA6J,iBAAA,KAAAA,iBAAA,GAAAzD,sBAAA,mGACmBzE,IAAI,CAAC0H,QAAQ,IAEpCpJ,OAAO,EACT0B,IAAI,CAACiI,YAAY,EAIMjI,IAAI,CAAC8H,WAAW;MAGnD;IAAC;MAAAvG,IAAA;MAAAG,GAAA;MAAAC,KAAA;QAAA,IAAAwG,0BAAA,GAAAtG,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAED,SAAAqG,SAAwCpI,IAAkB,EAAEoH,KAAa;UAAA,OAAAtF,mBAAA,GAAAI,IAAA,UAAAmG,UAAAC,SAAA;YAAA,kBAAAA,SAAA,CAAAjG,IAAA,GAAAiG,SAAA,CAAAhG,IAAA;cAAA;gBACvE,IAAI,CAACiG,wBAAwB,CAACnB,KAAK,CAAC;gBAACkB,SAAA,CAAAhG,IAAA;gBAAA,OAE/BtC,IAAI,CAACwI,MAAM,CAAC,CAAC;cAAA;gBACnB,IAAI,CAACnF,WAAW,CAAC,CAAC;cAAC;cAAA;gBAAA,OAAAiF,SAAA,CAAArF,IAAA;YAAA;UAAA,GAAAmF,QAAA;QAAA,CACpB;QAAA,SAAAK,0BAAAC,GAAA,EAAAC,GAAA;UAAA,OAAAR,0BAAA,CAAA/E,KAAA,OAAAxC,SAAA;QAAA;QAAA,OAAA6H,yBAAA;MAAA;IAAA;MAAAlH,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAmD,oBAA4B8D,EAAiB,EAAE;QAC7C,IAAIA,EAAE,CAACC,IAAI,KAAK,OAAO,EAAE;UACvB,IAAMC,SAAS,GAAG,IAAI,CAACC,eAAe,CAAC,CAAC,CAAC;UACzC,IAAI,CAACD,SAAS,IAAIA,SAAS,CAACE,KAAK,CAACC,OAAO,KAAK,MAAM,EAAE;YACpD;UACF;UACA,IAAI,CAACR,yBAAyB,CAAEK,SAAS,CAAS9I,IAAI,EAAE,CAAC,CAAC;QAC5D,CAAC,MAAM,IAAI4I,EAAE,CAACC,IAAI,KAAK,WAAW,EAAE;UAAA,IAAAK,qBAAA;UAClCN,EAAE,CAACO,cAAc,CAAC,CAAC;UACnB,CAAAD,qBAAA,OAAI,CAACH,eAAe,CAAC,CAAC,CAAC,cAAAG,qBAAA,eAAvBA,qBAAA,CAAyBE,KAAK,CAAC,CAAC;UAChC,IAAI,CAAC7F,SAAS,GAAG,IAAI;UACrB,IAAI,CAAC8F,iBAAiB,GAAG,IAAI,CAACN,eAAe,CAAC,CAAC,CAAC;QAClD;MACF;IAAC;MAAAxH,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAoH,gBAAwB3B,KAAa,EAAmB;QACtD,OAAO,IAAI,CAACkC,UAAU,CAACC,aAAa,yBAAArI,MAAA,CAAwBkG,KAAK,QAAI,CAAC;MACxE;IAAC;MAAA7F,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAA4G,yBAAiCnB,KAAa,EAAQ;QAAA,IAAAoC,sBAAA;QACpD,IAAMC,OAAO,GAAGC,QAAQ,CAACC,aAAa,CAAC,sBAAsB,CAAC;QAC9DF,OAAO,CAACG,IAAI,GAAG,OAAO;QACtBH,OAAO,CAACI,IAAI,GAAG,MAAM;QACrBJ,OAAO,CAACK,aAAa,GAAG,IAAI;QAC5B,CAAAN,sBAAA,OAAI,CAACT,eAAe,CAAC3B,KAAK,CAAC,cAAAoC,sBAAA,eAA3BA,sBAAA,CAA6BO,WAAW,CAACN,OAAO,CAAC;MACnD;IAAC;MAAAlI,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAkD,oBAA4B+D,EAAe,EAAQ;QACjD,IAAMoB,SAAS,GAAIpB,EAAE,CAACqB,aAAa,CAAStI,KAAK;QACjD,IAAMuI,cAAc,GAAG,IAAI,CAAC3H,YAAY;QACxC,IAAM4H,SAAS,GAAG,IAAI,CAAC1G,OAAO;QAC9B,IAAI2G,cAAuB;QAC3B,IAAIC,SAAiB;QAErB,IAAIL,SAAS,CAACM,UAAU,CAAC,GAAG,CAAC,EAAE;UAC7BF,cAAc,GAAG,IAAI;UACrBC,SAAS,GAAGL,SAAS,CAACO,SAAS,CAAC,CAAC,CAAC;QACpC,CAAC,MAAM;UACLH,cAAc,GAAG,KAAK;UACtBC,SAAS,GAAGL,SAAS;QACvB;QAEA,IAAIE,cAAc,KAAKE,cAAc,IAAID,SAAS,KAAKE,SAAS,EAAE;UAChE;QACF;QAEA,IAAI,CAAC9H,YAAY,GAAG6H,cAAc;QAClC,IAAI,CAAC3G,OAAO,GAAG4G,SAAS;QAExB,IAAI,IAAI,CAAC3H,KAAK,EAAE;UACd,IAAI,CAACA,KAAK,GAAGxC,SAAS;QACxB;QAEA,IAAIgK,cAAc,KAAK,IAAI,CAAC3H,YAAY,EAAE;UACxC,IAAI,CAACgB,SAAS,GAAG,KAAK;UACtB,IAAI,CAACR,wBAAwB,CAAC,CAAC;UAC/B,IAAI,CAACS,OAAO,GAAG,IAAI,CAACC,OAAO;QAC7B,CAAC,MAAM;UACL,IAAI,IAAI,CAACF,SAAS,IAAI,IAAI,CAAC8F,iBAAiB,EAAE;YAC5C,IAAI,CAAC9F,SAAS,GAAG,KAAK;YACtB;YACA,IAAI,CAAC8F,iBAAiB,CAACmB,cAAc,CAACC,QAAQ,CAAC,CAAC;UAClD;UACA,IAAI,CAACC,mBAAmB,CAAC,IAAI,CAACjH,OAAO,CAAC;QACxC;MACF;IAAC;MAAAlC,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAyD,aAAA,EAAuB;QACrB,IAAI,CAAC3B,OAAO,GAAG,EAAE;QACjB,IAAI,CAACD,OAAO,GAAG,EAAE;MACnB;IAAC;MAAAjC,IAAA;MAAAG,GAAA;MAAAC,KAAA,WAAAA,MAAA;QAAA,IAAAgJ,MAAA;QAAA,OAE6BrL,QAAQ,CAAC,UAAC6E,MAAc,EAAK;UACzDwG,MAAI,CAACnH,OAAO,GAAGW,MAAM;QACvB,CAAC,EAAE,GAAG,CAAC;MAAA;IAAA;MAAA5C,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAEP,SAAAoD,uBAAA,EAAiC;QAAA,IAAA6F,sBAAA;QAC/B;QACA,CAAAA,sBAAA,OAAI,CAAC7B,eAAe,CAAC,CAAC,CAAC,cAAA6B,sBAAA,eAAvBA,sBAAA,CAAyBJ,cAAc,CAACK,UAAU,CAAC,CAAC;QACpD,IAAI,CAACxB,iBAAiB,GAAG,IAAI,CAACN,eAAe,CAAC,CAAC,CAAC;MAClD;IAAC;MAAAxH,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAA+D,uBAA+BkD,EAAiB,EAAE;QAChD,IAAMkC,iBAAiB,GAAGlC,EAAE,CAAClH,GAAG,CAACb,MAAM,KAAK,CAAC;QAC7C,IAAMuG,KAAK,GAAIwB,EAAE,CAACmC,MAAM,CAAiBC,YAAY,CAAC,OAAO,CAAC;QAC9D,IAAMC,eAAe,GAAG7D,KAAK,KAAK,GAAG;QACrC,IAAI,CAACiC,iBAAiB,GAAGT,EAAE,CAACmC,MAAkB;QAC9C,IAAInC,EAAE,CAAClH,GAAG,KAAK,WAAW,EAAE;UAAA,IAAAwJ,sBAAA;UAC1B,CAAAA,sBAAA,OAAI,CAACnC,eAAe,CAACoC,MAAM,CAAC/D,KAAK,CAAC,GAAG,CAAC,CAAC,cAAA8D,sBAAA,eAAvCA,sBAAA,CAAyC9B,KAAK,CAAC,CAAC;QAClD;QACA,IAAIR,EAAE,CAAClH,GAAG,KAAK,SAAS,EAAE;UACxB,IAAIuJ,eAAe,EAAE;YAAA,IAAAG,qBAAA;YACnB,CAAAA,qBAAA,OAAI,CAACC,iBAAiB,cAAAD,qBAAA,eAAtBA,qBAAA,CAAwBhC,KAAK,CAAC,CAAC;UACjC,CAAC,MAAM;YAAA,IAAAkC,sBAAA;YACL,CAAAA,sBAAA,OAAI,CAACvC,eAAe,CAACoC,MAAM,CAAC/D,KAAK,CAAC,GAAG,CAAC,CAAC,cAAAkE,sBAAA,eAAvCA,sBAAA,CAAyClC,KAAK,CAAC,CAAC;UAClD;QACF;QACA,IAAIR,EAAE,CAAClH,GAAG,KAAK,OAAO,IAAIkH,EAAE,CAAClH,GAAG,KAAK,GAAG,EAAE;UACxC,IAAI,CAAC+G,yBAAyB,CAC3BG,EAAE,CAACmC,MAAM,CAAS/K,IAAI,EACvBmL,MAAM,CAAEvC,EAAE,CAACmC,MAAM,CAAiBC,YAAY,CAAC,OAAO,CAAC,CACzD,CAAC;QACH;QACA,IAAIpC,EAAE,CAAClH,GAAG,KAAK,WAAW,IAAIoJ,iBAAiB,EAAE;UAAA,IAAAS,sBAAA;UAC9C3C,EAAE,CAACqB,aAAa,CAAiBuB,SAAS,GAAG,CAAC;UAC/C,CAAAD,sBAAA,OAAI,CAACF,iBAAiB,cAAAE,sBAAA,eAAtBA,sBAAA,CAAwBnC,KAAK,CAAC,CAAC;QACjC;MACF;IAAC;MAAA7H,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAiE,iBAAyBgD,EAAE,EAAE;QAC3B,IAAM6C,QAAQ,GAAG7C,EAAE,CAACmC,MAAM,CAACW,OAAO,CAAC,cAAc,CAAC;QAClD,IAAI,CAACjD,yBAAyB,CAC5BgD,QAAQ,CAACzL,IAAI,EACbmL,MAAM,CAACM,QAAQ,CAACT,YAAY,CAAC,OAAO,CAAC,CACvC,CAAC;MACH;IAAC;MAAAzJ,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAA8E,qBAAA,EAA6C;QAAA,IAAAkF,MAAA;QAC3C,OAAOC,MAAM,CAACC,IAAI,CAAC,IAAI,CAACnH,IAAI,CAACoH,MAAM,CAAC,CACjCC,GAAG,CAAC,UAACC,QAAQ,EAAK;UACjB,IAAMC,WAAW,GAAGN,MAAI,CAACjH,IAAI,CAACoH,MAAM,CAACE,QAAQ,CAAC;UAC9C,IAAME,UAAU,GAAG;YACjBpE,WAAW,EAAE5I,gBAAgB,CAAC+M,WAAW,CAAC;YAC1CxE,OAAO,EAAEuE,QAAQ;YACjBnE,IAAI,EAAExJ,IAAI,CAAA8N,iBAAA,KAAAA,iBAAA,GAAA1H,sBAAA,wIAEEkH,MAAI,CAACjH,IAAI,EACLuH,WAAW,CAE1B;YACDzD,MAAM,EAAE,SAAAA,OAAA;cAAA,OAAMvJ,SAAS,CAAC0M,MAAI,EAAE,gBAAgB,EAAE;gBAAEK,QAAQ,EAARA;cAAS,CAAC,CAAC;YAAA;UAC/D,CAAC;UAED,OAAAJ,MAAA,CAAAQ,MAAA,CAAAR,MAAA,CAAAQ,MAAA,KACKF,UAAU;YACbG,OAAO,EAAE,CAACH,UAAU,CAACpE,WAAW,EAAEoE,UAAU,CAACzE,OAAO;UAAC;QAEzD,CAAC,CAAC,CACD6E,IAAI,CAAC,UAACC,CAAC,EAAEC,CAAC;UAAA,OACTpN,4BAA4B,CAC1BmN,CAAC,CAACzE,WAAW,EACb0E,CAAC,CAAC1E,WAAW,EACb6D,MAAI,CAACjH,IAAI,CAAC+H,MAAM,CAACC,QACnB,CAAC;QAAA,CACH,CAAC;MACL;IAAC;MAAAnL,IAAA;MAAAG,GAAA;MAAAC,KAAA;QAAA,IAAAgL,sBAAA,GAAA9K,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAED,SAAA6K,SAAA;UAAA,IAAAC,MAAA;UAAA,OAAA/K,mBAAA,GAAAI,IAAA,UAAA4K,UAAAC,SAAA;YAAA,kBAAAA,SAAA,CAAA1K,IAAA,GAAA0K,SAAA,CAAAzK,IAAA;cAAA;gBAAAyK,SAAA,CAAAzG,EAAA;gBAAAyG,SAAA,CAAAC,EAAA,GAAAC,kBAAA;gBAAAF,SAAA,CAAAzK,IAAA;gBAAA,OAEc,IAAI,CAAC4K,uBAAuB,CAAC,CAAC;cAAA;gBAAAH,SAAA,CAAAI,EAAA,GAAAJ,SAAA,CAAAvG,IAAA;gBAAAuG,SAAA,CAAAK,EAAA,OAAAL,SAAA,CAAAC,EAAA,EAAAD,SAAA,CAAAI,EAAA;gBAAAJ,SAAA,CAAAM,EAAA,GAAAJ,kBAAA,CACrC,IAAI,CAACK,8BAA8B,CAAC,CAAC;gBAAAP,SAAA,CAAAQ,EAAA,GAAAN,kBAAA;gBAAAF,SAAA,CAAAzK,IAAA;gBAAA,OAC9B,IAAI,CAACkL,2BAA2B,CAAC,CAAC;cAAA;gBAAAT,SAAA,CAAAU,EAAA,GAAAV,SAAA,CAAAvG,IAAA;gBAAAuG,SAAA,CAAAW,EAAA,OAAAX,SAAA,CAAAQ,EAAA,EAAAR,SAAA,CAAAU,EAAA;gBAAA,OAAAV,SAAA,CAAAhG,MAAA,WAAAgG,SAAA,CAAAzG,EAAA,CAAApF,MAAA,CAAAyM,IAAA,CAAAZ,SAAA,CAAAzG,EAAA,EAAAyG,SAAA,CAAAK,EAAA,EAAAL,SAAA,CAAAM,EAAA,EAAAN,SAAA,CAAAW,EAAA,EAC5CpB,IAAI,CAAC,UAACC,CAAC,EAAEC,CAAC;kBAAA,OACVpN,4BAA4B,CAC1BmN,CAAC,CAACF,OAAO,CAACuB,IAAI,CAAC,GAAG,CAAC,EACnBpB,CAAC,CAACH,OAAO,CAACuB,IAAI,CAAC,GAAG,CAAC,EACnBf,MAAI,CAACnI,IAAI,CAAC+H,MAAM,CAACC,QACnB,CAAC;gBAAA;cAAA;cAAA;gBAAA,OAAAK,SAAA,CAAA9J,IAAA;YAAA;UAAA,GAAA2J,QAAA;QAAA,CAEJ;QAAA,SAAArG,sBAAA;UAAA,OAAAoG,sBAAA,CAAAvJ,KAAA,OAAAxC,SAAA;QAAA;QAAA,OAAA2F,qBAAA;MAAA;IAAA;MAAAhF,IAAA;MAAAG,GAAA;MAAAC,KAAA;QAAA,IAAAkM,wBAAA,GAAAhM,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAED,SAAA+L,SAAA;UAAA,IAAAC,MAAA;UAAA,IAAAC,iBAAA,EAAArJ,QAAA,EAAAsJ,QAAA;UAAA,OAAAnM,mBAAA,GAAAI,IAAA,UAAAgM,UAAAC,SAAA;YAAA,kBAAAA,SAAA,CAAA9L,IAAA,GAAA8L,SAAA,CAAA7L,IAAA;cAAA;gBACE;gBACM0L,iBAAiB,GAAGjP,qBAAqB,CAAC,IAAI,CAAC2F,IAAI,EAAE,QAAQ,CAAC;gBAAAyJ,SAAA,CAAA7L,IAAA;gBAAA,OAE7C,IAAI,CAACoC,IAAI,CAAC0J,sBAAsB,CACrD,OAAO,EACPJ,iBACF,CAAC;cAAA;gBAHKrJ,QAAQ,GAAAwJ,SAAA,CAAA3H,IAAA;gBAKRyH,QAAQ,GAAGD,iBAAiB,CAACjC,GAAG,CAAC,UAACsC,MAAM;kBAAA,OAAM;oBAClDvG,WAAW,EACTiG,MAAI,CAACrJ,IAAI,CAACC,QAAQ,yCAAAzD,MAAA,CAAyCmN,MAAM,CAAE,CAAC,IACpEN,MAAI,CAACrJ,IAAI,CAACC,QAAQ,CAAC,6CAA6C,EAAE;sBAChE0J,MAAM,EAAE7O,YAAY,CAACmF,QAAQ,EAAE0J,MAAM;oBACvC,CAAC,CAAC;oBACJ7F,MAAM,EAAE,SAAAA,OAAA;sBAAA,OAAMuF,MAAI,CAACrJ,IAAI,CAAC4J,WAAW,CAACD,MAAM,EAAE,QAAQ,CAAC;oBAAA;oBACrD3G,QAAQ,EAAEzJ,SAAS;oBACnBgK,YAAY,EAAE8F,MAAI,CAACrJ,IAAI,CAACC,QAAQ,6CAEhC;kBACF,CAAC;gBAAA,CAAC,CAAC,EAEH;gBACAsJ,QAAQ,CAACM,IAAI,CAAC;kBACZzG,WAAW,EAAE,IAAI,CAACpD,IAAI,CAACC,QAAQ,CAC7B,6CACF,CAAC;kBACD6D,MAAM,EAAE,SAAAA,OAAA;oBAAA,OAAMuF,MAAI,CAACrJ,IAAI,CAAC4J,WAAW,CAAC,UAAU,EAAE,eAAe,CAAC;kBAAA;kBAChE5G,QAAQ,EAAEzJ,SAAS;kBACnBgK,YAAY,EAAE,IAAI,CAACvD,IAAI,CAACC,QAAQ,CAC9B,4CACF;gBACF,CAAC,CAAC;;gBAEF;gBACAsJ,QAAQ,CAACM,IAAI,CAAC;kBACZzG,WAAW,EAAE,IAAI,CAACpD,IAAI,CAACC,QAAQ,CAC7B,2CACF,CAAC;kBACD6D,MAAM,EAAE,SAAAA,OAAA;oBAAA,OACNuF,MAAI,CAACrJ,IAAI,CAAC4J,WAAW,CAAC,eAAe,EAAE,oBAAoB,CAAC;kBAAA;kBAC9D5G,QAAQ,EAAEzJ,SAAS;kBACnBgK,YAAY,EAAE,IAAI,CAACvD,IAAI,CAACC,QAAQ,CAC9B,4CACF;gBACF,CAAC,CAAC;;gBAEF;gBACAsJ,QAAQ,CAACM,IAAI,CAAC;kBACZzG,WAAW,EAAE,IAAI,CAACpD,IAAI,CAACC,QAAQ,CAC7B,0CACF,CAAC;kBACD6D,MAAM,EAAE,SAAAA,OAAA;oBAAA,OAAMuF,MAAI,CAACrJ,IAAI,CAAC4J,WAAW,CAAC,eAAe,EAAE,YAAY,CAAC;kBAAA;kBAClE5G,QAAQ,EAAEzJ,SAAS;kBACnBgK,YAAY,EAAE,IAAI,CAACvD,IAAI,CAACC,QAAQ,CAC9B,4CACF;gBACF,CAAC,CAAC;gBAAC,OAAAwJ,SAAA,CAAApH,MAAA,WAEIkH,QAAQ,CAAClC,GAAG,CAAC,UAACyC,OAAO;kBAAA,OAAA5C,MAAA,CAAAQ,MAAA,CAAAR,MAAA,CAAAQ,MAAA,KACvBoC,OAAO;oBACVvO,WAAW,EAAE,QAAQ;oBACrBoM,OAAO,EAAE,IAAAnL,MAAA,CAAIsN,OAAO,CAACvG,YAAY,OAAA/G,MAAA,CAAIsN,OAAO,CAAC1G,WAAW;kBAAG;gBAAA,CAC3D,CAAC;cAAA;cAAA;gBAAA,OAAAqG,SAAA,CAAAlL,IAAA;YAAA;UAAA,GAAA6K,QAAA;QAAA,CACJ;QAAA,SAAAZ,wBAAA;UAAA,OAAAW,wBAAA,CAAAzK,KAAA,OAAAxC,SAAA;QAAA;QAAA,OAAAsM,uBAAA;MAAA;IAAA;MAAA3L,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAA2L,+BAAA,EAAwD;QAAA,IAAAmB,MAAA;QACtD,IAAMC,aAAa,GAAG,CAAC,SAAS,EAAE,MAAM,CAAU;QAElD,OAAOA,aAAa,CAAC3C,GAAG,CAAC,UAACvD,MAAM,EAAK;UACnC,IAAMvI,WAAuC,GAAG,gBAAgB;UAEhE,IAAMD,IAAI,GAAG;YACX8H,WAAW,EAAE2G,MAAI,CAAC/J,IAAI,CAACC,QAAQ,CAC7B,6DAA6D,EAC7D;cACE6D,MAAM,EAAEiG,MAAI,CAAC/J,IAAI,CAACC,QAAQ,iDAAAzD,MAAA,CACwBsH,MAAM,CACxD;YACF,CACF,CAAC;YACDd,QAAQ,EAAExJ,gBAAgB;YAC1B+J,YAAY,EAAEwG,MAAI,CAAC/J,IAAI,CAACC,QAAQ,wCAAAzD,MAAA,CACSjB,WAAW,CACpD,CAAC;YACDA,WAAW,EAAXA,WAAW;YACXuI,MAAM,YAAAmG,OAAA;cAAA,SAAAnG,OAAA;gBAAA,OAAAmG,OAAA,CAAAvL,KAAA,OAAAxC,SAAA;cAAA;cAAA4H,MAAA,CAAAoG,QAAA;gBAAA,OAAAD,OAAA,CAAAC,QAAA;cAAA;cAAA,OAAApG,MAAA;YAAA,gBAAA3G,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAE,SAAA8M,SAAA;cAAA,IAAAC,SAAA;cAAA,OAAAhN,mBAAA,GAAAI,IAAA,UAAA6M,UAAAC,SAAA;gBAAA,kBAAAA,SAAA,CAAA3M,IAAA,GAAA2M,SAAA,CAAA1M,IAAA;kBAAA;oBAAA0M,SAAA,CAAA1M,IAAA;oBAAA,OACkBxC,sBAAsB,CAAC2O,MAAI,EAAE;sBACnDQ,KAAK,EAAER,MAAI,CAAC/J,IAAI,CAACC,QAAQ,uBAAAzD,MAAA,CACDsH,MAAM,mBAC9B,CAAC;sBACD0G,IAAI,EAAET,MAAI,CAAC/J,IAAI,CAACC,QAAQ,uBAAAzD,MAAA,CACAsH,MAAM,yBAC9B,CAAC;sBACD2G,WAAW,EAAEV,MAAI,CAAC/J,IAAI,CAACC,QAAQ,uBAAAzD,MAAA,CACPsH,MAAM,oBAC9B,CAAC;sBACD4G,WAAW,EAAE;oBACf,CAAC,CAAC;kBAAA;oBAXIN,SAAS,GAAAE,SAAA,CAAAxI,IAAA;oBAAA,IAYVsI,SAAS;sBAAAE,SAAA,CAAA1M,IAAA;sBAAA;oBAAA;oBAAA,OAAA0M,SAAA,CAAAjI,MAAA;kBAAA;oBAGd0H,MAAI,CAAC/J,IAAI,CAAC4J,WAAW,CAAC,eAAe,EAAE9F,MAAM,CAAC;kBAAC;kBAAA;oBAAA,OAAAwG,SAAA,CAAA/L,IAAA;gBAAA;cAAA,GAAA4L,QAAA;YAAA,CAChD;UACH,CAAC;UAED,OAAAjD,MAAA,CAAAQ,MAAA,CAAAR,MAAA,CAAAQ,MAAA,KACKpM,IAAI;YACPqM,OAAO,EAAE,IAAAnL,MAAA,CAAIlB,IAAI,CAACiI,YAAY,OAAA/G,MAAA,CAAIlB,IAAI,CAAC8H,WAAW;UAAG;QAEzD,CAAC,CAAC;MACJ;IAAC;MAAAvG,IAAA;MAAAG,GAAA;MAAAC,KAAA;QAAA,IAAA0N,4BAAA,GAAAxN,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAED,SAAAuN,SAAA;UAAA,IAAAC,UAAA,EAAAC,YAAA,EAAAC,eAAA,EAAAC,UAAA,EAAAC,SAAA,EAAAC,KAAA,EAAAC,KAAA;UAAA,OAAA/N,mBAAA,GAAAI,IAAA,UAAA4N,UAAAC,SAAA;YAAA,kBAAAA,SAAA,CAAA1N,IAAA,GAAA0N,SAAA,CAAAzN,IAAA;cAAA;gBACQiN,UAAU,GAAG,IAAI,CAACS,gCAAgC,CAAC,CAAC;gBACpDR,YAAY,GAAG,IAAI,CAACS,wCAAwC,CAAC,CAAC;gBAC9DR,eAAwC,GAAG,EAAE;gBAAA,KAC/CzQ,iBAAiB,CAAC,IAAI,CAAC0F,IAAI,EAAE,QAAQ,CAAC;kBAAAqL,SAAA,CAAAzN,IAAA;kBAAA;gBAAA;gBAAAyN,SAAA,CAAAzN,IAAA;gBAAA,OACf/C,qBAAqB,CAAC,IAAI,CAACmF,IAAI,CAAC;cAAA;gBAAnDgL,UAAU,GAAAK,SAAA,CAAAvJ,IAAA;gBAChBiJ,eAAe,CAAClB,IAAI,CAAC;kBACnB2B,IAAI,EAAE,eAAe;kBACrBpI,WAAW,EAAE,IAAI,CAACpD,IAAI,CAACC,QAAQ,CAC7B,sDACF;gBACF,CAAC,CAAC;gBACF8K,eAAe,CAAClB,IAAI,CAAC;kBACnB2B,IAAI,EAAE,mBAAmB;kBACzBpI,WAAW,EAAE,IAAI,CAACpD,IAAI,CAACC,QAAQ,CAC7B,0DACF;gBACF,CAAC,CAAC;gBAACgL,SAAA,GAAAQ,0BAAA,CACiBT,UAAU,CAACU,MAAM,CAACjM,MAAM,CAAC,UAACoI,CAAC;kBAAA,OAAKA,CAAC,CAAC8D,OAAO;gBAAA,EAAC;gBAAA;kBAA9D,KAAAV,SAAA,CAAAW,CAAA,MAAAV,KAAA,GAAAD,SAAA,CAAAY,CAAA,IAAAC,IAAA,GAAgE;oBAArDX,KAAK,GAAAD,KAAA,CAAAjO,KAAA;oBACd8N,eAAe,CAAClB,IAAI,CAAC;sBACnB2B,IAAI,mBAAAhP,MAAA,CAAmB2O,KAAK,CAACY,IAAI,CAAE;sBACnC3I,WAAW,EAAE,IAAI,CAACpD,IAAI,CAACC,QAAQ,CAC7B,qDAAqD,EACrD;wBAAEkL,KAAK,EAAEA,KAAK,CAACa;sBAAK,CACtB;oBACF,CAAC,CAAC;kBACJ;gBAAC,SAAAC,GAAA;kBAAAhB,SAAA,CAAA/I,CAAA,CAAA+J,GAAA;gBAAA;kBAAAhB,SAAA,CAAAiB,CAAA;gBAAA;cAAA;gBAAA,OAAAb,SAAA,CAAAhJ,MAAA,WAGI,IAAI,CAAC8J,2BAA2B,IAAA3P,MAAA,CAAA+L,kBAAA,CAClCsC,UAAU,GAAAtC,kBAAA,CACVuC,YAAY,GACZC,eAAe,CACnB,CAAC;cAAA;cAAA;gBAAA,OAAAM,SAAA,CAAA9M,IAAA;YAAA;UAAA,GAAAqM,QAAA;QAAA,CACH;QAAA,SAAA9B,4BAAA;UAAA,OAAA6B,4BAAA,CAAAjM,KAAA,OAAAxC,SAAA;QAAA;QAAA,OAAA4M,2BAAA;MAAA;IAAA;MAAAjM,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAqO,iCAAA,EAAoE;QAAA,IAAAc,MAAA;QAClE,OAAOlF,MAAM,CAACC,IAAI,CAAC,IAAI,CAACnH,IAAI,CAACqM,MAAM,CAAC,CACjC5M,MAAM,CAAC,UAAC6M,QAAQ;UAAA,OAAKA,QAAQ,KAAK,cAAc;QAAA,EAAC,CACjDjF,GAAG,CAAC,UAACiF,QAAQ,EAAK;UACjB,IAAMC,KAAK,GAAGH,MAAI,CAACpM,IAAI,CAACqM,MAAM,CAACC,QAAQ,CAAC;UACxC,IAAME,cAAc,GAAGzR,0BAA0B,CAACwR,KAAK,CAAC;UAExD,IAAMnJ,WAAW,GACfgJ,MAAI,CAACpM,IAAI,CAACC,QAAQ,CAACuM,cAAc,CAAC,IAAID,KAAK,CAAChC,KAAK,IAAIgC,KAAK,CAACE,QAAQ;UAErE,OAAO;YACLrJ,WAAW,EAAXA,WAAW;YACXoI,IAAI,MAAAhP,MAAA,CAAM+P,KAAK,CAACE,QAAQ;UAC1B,CAAC;QACH,CAAC,CAAC;MACN;IAAC;MAAA5P,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAsO,yCAAA,EAA4E;QAAA,IAAAmB,OAAA;QAC1E,IAAMhN,KAAuB,GAAG,EAAE;QAElC,SAAAiN,EAAA,MAAAC,YAAA,GAAyB1F,MAAM,CAACC,IAAI,CAACnM,cAAc,CAAC,EAAA2R,EAAA,GAAAC,YAAA,CAAAzQ,MAAA,EAAAwQ,EAAA,IAAE;UAAjD,IAAME,UAAU,GAAAD,YAAA,CAAAD,EAAA;UAAA,IAAAG,UAAA,GAAArB,0BAAA,CACAzQ,cAAc,CAAC6R,UAAU,CAAC;YAAAE,MAAA;UAAA;YAAA,IAAAC,KAAA,YAAAA,MAAA,EAAE;gBAAA,IAApCC,IAAI,GAAAF,MAAA,CAAA9P,KAAA;gBACb,IAAI,CAAC7C,WAAW,CAACsS,OAAI,CAAC1M,IAAI,EAAEiN,IAAI,CAAC,EAAE;kBAAA;gBAEnC;gBAEA,IAAMC,IAAI,GAAGR,OAAI,CAACS,4BAA4B,CAACF,IAAI,CAAC;gBAEpD,IAAI,CAACC,IAAI,EAAE;kBAAA;gBAEX;gBACA;gBACA,IAAIxN,KAAK,CAAC0N,IAAI,CAAC,UAAClL,CAAC;kBAAA,OAAKA,CAAC,CAACsJ,IAAI,KAAK0B,IAAI,CAAC1B,IAAI;gBAAA,EAAC,EAAE;kBAAA;gBAE7C;gBAEA9L,KAAK,CAACmK,IAAI,CAACqD,IAAI,CAAC;cAClB,CAAC;cAAAG,IAAA;YAhBD,KAAAP,UAAA,CAAAlB,CAAA,MAAAmB,MAAA,GAAAD,UAAA,CAAAjB,CAAA,IAAAC,IAAA;cAAAuB,IAAA,GAAAL,KAAA;cAAA,IAAAK,IAAA,QAEI;YAAS;UAcZ,SAAApB,GAAA;YAAAa,UAAA,CAAA5K,CAAA,CAAA+J,GAAA;UAAA;YAAAa,UAAA,CAAAZ,CAAA;UAAA;QACH;QAEA,OAAOxM,KAAK;MACd;IAAC;MAAA7C,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAkQ,6BACEF,IAAoB,EACQ;QAC5B,IAAMzB,IAAI,GAAGyB,IAAI,CAACzB,IAAI,CAAC3F,SAAS,CAAC,CAAC,CAAC;QAEnC,IAAImG,IAAI,GAAGR,IAAI,CAAC3F,SAAS,CAAC2F,IAAI,CAAC8B,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAChDtB,IAAI,GAAGA,IAAI,CAACsB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAGtB,IAAI,CAACnG,SAAS,CAAC,CAAC,EAAEmG,IAAI,CAACsB,OAAO,CAAC,GAAG,CAAC,CAAC,GAAGtB,IAAI;QAE3E,IAAMuB,OAAO,GACVvB,IAAI,IACH,IAAI,CAAChM,IAAI,CAACC,QAAQ,6CAAAzD,MAAA,CAC4BwP,IAAI,CAClD,CAAC;QACH;QACCiB,IAAI,CAACT,cAAc,IAAI,IAAI,CAACxM,IAAI,CAACC,QAAQ,CAACgN,IAAI,CAACT,cAAc,CAAE;QAElE,IAAIe,OAAO,EAAE;UACX,OAAArG,MAAA,CAAAQ,MAAA,CAAAR,MAAA,CAAAQ,MAAA,KAAYuF,IAAI;YAAE7J,WAAW,EAAEmK;UAAO;QACxC;QAEA,OAAO/R,SAAS;MAClB;IAAC;MAAAqB,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAkP,4BACEzM,KAA8B,EACf;QAAA,IAAA8N,OAAA;QACf,OAAO9N,KAAK,CAAC2H,GAAG,CAAC,UAAC/L,IAAI,EAAK;UACzB,IAAMC,WAAuC,GAAG,YAAY;UAE5D,IAAMkS,OAAO,GAAAvG,MAAA,CAAAQ,MAAA,CAAAR,MAAA,CAAAQ,MAAA,KACRpM,IAAI;YACP0H,QAAQ,EAAE3J,QAAQ;YAClBkK,YAAY,EAAEiK,OAAI,CAACxN,IAAI,CAACC,QAAQ,wCAAAzD,MAAA,CACSjB,WAAW,CACpD,CAAC;YACDuI,MAAM,EAAE,SAAAA,OAAA;cAAA,OAAMrJ,QAAQ,CAACa,IAAI,CAACkQ,IAAI,CAAC;YAAA;UAAA,EAClC;UAED,OAAAtE,MAAA,CAAAQ,MAAA,CAAAR,MAAA,CAAAQ,MAAA,KACK+F,OAAO;YACV9F,OAAO,EAAE,IAAAnL,MAAA,CAAIiR,OAAO,CAAClK,YAAY,OAAA/G,MAAA,CAAIiR,OAAO,CAACrK,WAAW,EAAG;YAC3D7H,WAAW,EAAXA;UAAW;QAEf,CAAC,CAAC;MACJ;IAAC;MAAAsB,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAc,uBAAA,EAAiC;QAC/B,OAAO,IAAI,CAACa,OAAO,GAAG,CAAC,IAAI,CAACf,YAAY,GAAG,KAAK;MAClD;IAAC;MAAAhB,IAAA;MAAAG,GAAA;MAAAC,KAAA,WAAAA,MAAA;QAAA,OAEsB9C,UAAU,CAC/B,UAACuF,KAAqB,EAAED,MAAc;UAAA,OACpC9E,eAAe,CAAe8E,MAAM,CAACiO,QAAQ,CAAC,CAAC,EAAEhO,KAAK,CAAC;QAAA,CAC3D,CAAC;MAAA;IAAA;MAAA7C,IAAA;MAAA8Q,MAAA;MAAA3Q,GAAA;MAAAC,KAAA,EAED,SAAA2Q,OAAA,EAAoB;QAClB,OAAO,CACL1S,gBAAgB,EAChBD,aAAa,EACbvB,GAAG,CAAAmU,iBAAA,KAAAA,iBAAA,GAAA9N,sBAAA,s8EAsGJ;MACH;IAAC;EAAA;AAAA,GAxxB2BtG,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}