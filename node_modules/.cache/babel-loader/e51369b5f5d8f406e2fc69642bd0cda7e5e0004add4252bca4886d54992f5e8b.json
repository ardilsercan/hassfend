{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport \"@material/mwc-button/mwc-button\";\nimport \"@material/mwc-formfield/mwc-formfield\";\nconst mdiContentCopy = \"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { until } from \"lit/directives/until\";\nimport memoizeOne from \"memoize-one\";\nimport { isComponentLoaded } from \"../../../common/config/is_component_loaded\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport { stopPropagation } from \"../../../common/dom/stop_propagation\";\nimport { computeDomain } from \"../../../common/entity/compute_domain\";\nimport { computeObjectId } from \"../../../common/entity/compute_object_id\";\nimport { supportsFeature } from \"../../../common/entity/supports-feature\";\nimport { formatNumber } from \"../../../common/number/format_number\";\nimport { stringCompare } from \"../../../common/string/compare\";\nimport { copyToClipboard } from \"../../../common/util/copy-clipboard\";\nimport \"../../../components/ha-alert\";\nimport \"../../../components/ha-area-picker\";\nimport \"../../../components/ha-icon\";\nimport \"../../../components/ha-icon-button-next\";\nimport \"../../../components/ha-icon-picker\";\nimport \"../../../components/ha-state-icon\";\nimport \"../../../components/ha-list-item\";\nimport \"../../../components/ha-radio\";\nimport \"../../../components/ha-select\";\nimport \"../../../components/ha-settings-row\";\nimport \"../../../components/ha-switch\";\nimport \"../../../components/ha-textfield\";\nimport { CAMERA_ORIENTATIONS, CAMERA_SUPPORT_STREAM, fetchCameraPrefs, STREAM_TYPE_HLS, updateCameraPrefs } from \"../../../data/camera\";\nimport { deleteConfigEntry } from \"../../../data/config_entries\";\nimport { createConfigFlow, handleConfigFlowStep } from \"../../../data/config_flow\";\nimport { createOptionsFlow, handleOptionsFlowStep } from \"../../../data/options_flow\";\nimport { updateDeviceRegistryEntry } from \"../../../data/device_registry\";\nimport { subscribeEntityRegistry, updateEntityRegistryEntry } from \"../../../data/entity_registry\";\nimport { entityIcon } from \"../../../data/icons\";\nimport { domainToName } from \"../../../data/integration\";\nimport { getNumberDeviceClassConvertibleUnits } from \"../../../data/number\";\nimport { getSensorDeviceClassConvertibleUnits, getSensorNumericDeviceClasses } from \"../../../data/sensor\";\nimport { getWeatherConvertibleUnits } from \"../../../data/weather\";\nimport { showOptionsFlowDialog } from \"../../../dialogs/config-flow/show-dialog-options-flow\";\nimport { showAlertDialog, showConfirmationDialog } from \"../../../dialogs/generic/show-dialog-box\";\nimport { showVoiceAssistantsView } from \"../../../dialogs/more-info/components/voice/show-view-voice-assistants\";\nimport { showMoreInfoDialog } from \"../../../dialogs/more-info/show-ha-more-info-dialog\";\nimport { haStyle } from \"../../../resources/styles\";\nimport { showToast } from \"../../../util/toast\";\nimport { showDeviceRegistryDetailDialog } from \"../devices/device-registry-detail/show-dialog-device-registry-detail\";\nconst OVERRIDE_DEVICE_CLASSES = {\n  cover: [[\"awning\", \"blind\", \"curtain\", \"damper\", \"door\", \"garage\", \"gate\", \"shade\", \"shutter\", \"window\"]],\n  binary_sensor: [[\"lock\"],\n  // Lock\n  [\"window\", \"door\", \"garage_door\", \"opening\"],\n  // Door\n  [\"battery\", \"battery_charging\"],\n  // Battery\n  [\"cold\", \"gas\", \"heat\"],\n  // Climate\n  [\"running\", \"motion\", \"moving\", \"occupancy\", \"presence\", \"vibration\"],\n  // Presence\n  [\"power\", \"plug\", \"light\"],\n  // Power\n  [\"smoke\", \"safety\", \"sound\", \"problem\", \"tamper\", \"carbon_monoxide\", \"moisture\"],\n  // Alarm\n  [\"connectivity\"],\n  // Connectivity\n  [\"update\"] // Update\n  ]\n};\nconst SWITCH_AS_DOMAINS = [\"cover\", \"fan\", \"light\", \"lock\", \"siren\", \"valve\"];\nconst SWITCH_AS_DOMAINS_INVERT = [\"cover\", \"lock\", \"valve\"];\nconst PRECISIONS = [0, 1, 2, 3, 4, 5, 6];\nexport let EntityRegistrySettingsEditor = _decorate([customElement(\"entity-registry-settings-editor\")], function (_initialize, _LitElement) {\n  class EntityRegistrySettingsEditor extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: EntityRegistrySettingsEditor,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Object\n      })],\n      key: \"entry\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"hideName\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"hideIcon\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"disabled\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"helperConfigEntry\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_name\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_icon\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_entityId\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_deviceClass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_switchAsDomain\",\n      value() {\n        return \"switch\";\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_switchAsInvert\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_areaId\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_disabledBy\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_hiddenBy\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_device\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_unit_of_measurement\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_precision\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_precipitation_unit\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_pressure_unit\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_temperature_unit\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_visibility_unit\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_wind_speed_unit\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_cameraPrefs\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_numberDeviceClassConvertibleUnits\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_sensorDeviceClassConvertibleUnits\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_sensorNumericalDeviceClasses\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_weatherConvertibleUnits\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_defaultCode\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_noDeviceArea\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_origEntityId\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_deviceClassOptions\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"willUpdate\",\n      value: function willUpdate(changedProperties) {\n        var _changedProperties$ge, _this$entry$options;\n        _get(_getPrototypeOf(EntityRegistrySettingsEditor.prototype), \"willUpdate\", this).call(this, changedProperties);\n        if (!changedProperties.has(\"entry\") || ((_changedProperties$ge = changedProperties.get(\"entry\")) === null || _changedProperties$ge === void 0 ? void 0 : _changedProperties$ge.id) === this.entry.id) {\n          return;\n        }\n        this._name = this.entry.name || \"\";\n        this._icon = this.entry.icon || \"\";\n        this._deviceClass = this.entry.device_class || this.entry.original_device_class;\n        this._origEntityId = this.entry.entity_id;\n        this._areaId = this.entry.area_id;\n        this._entityId = this.entry.entity_id;\n        this._disabledBy = this.entry.disabled_by;\n        this._hiddenBy = this.entry.hidden_by;\n        this._device = this.entry.device_id ? this.hass.devices[this.entry.device_id] : undefined;\n        this._switchAsInvert = ((_this$entry$options = this.entry.options) === null || _this$entry$options === void 0 || (_this$entry$options = _this$entry$options.switch_as_x) === null || _this$entry$options === void 0 ? void 0 : _this$entry$options.invert) === true;\n        const domain = computeDomain(this.entry.entity_id);\n        if (domain === \"camera\" && isComponentLoaded(this.hass, \"stream\")) {\n          const stateObj = this.hass.states[this.entry.entity_id];\n          if (stateObj && supportsFeature(stateObj, CAMERA_SUPPORT_STREAM) &&\n          // The stream component for HLS streams supports a server-side pre-load\n          // option that client initiated WebRTC streams do not\n          stateObj.attributes.frontend_stream_type === STREAM_TYPE_HLS) {\n            this._fetchCameraPrefs();\n          }\n        }\n        if (domain === \"number\" || domain === \"sensor\") {\n          var _stateObj$attributes;\n          const stateObj = this.hass.states[this.entry.entity_id];\n          this._unit_of_measurement = stateObj === null || stateObj === void 0 || (_stateObj$attributes = stateObj.attributes) === null || _stateObj$attributes === void 0 ? void 0 : _stateObj$attributes.unit_of_measurement;\n        }\n        if (domain === \"sensor\") {\n          var _this$entry$options2;\n          this._precision = (_this$entry$options2 = this.entry.options) === null || _this$entry$options2 === void 0 || (_this$entry$options2 = _this$entry$options2.sensor) === null || _this$entry$options2 === void 0 ? void 0 : _this$entry$options2.display_precision;\n        }\n        if (domain === \"lock\") {\n          var _this$entry$options3;\n          this._defaultCode = (_this$entry$options3 = this.entry.options) === null || _this$entry$options3 === void 0 || (_this$entry$options3 = _this$entry$options3.lock) === null || _this$entry$options3 === void 0 ? void 0 : _this$entry$options3.default_code;\n        }\n        if (domain === \"weather\") {\n          var _stateObj$attributes2, _stateObj$attributes3, _stateObj$attributes4, _stateObj$attributes5, _stateObj$attributes6;\n          const stateObj = this.hass.states[this.entry.entity_id];\n          this._precipitation_unit = stateObj === null || stateObj === void 0 || (_stateObj$attributes2 = stateObj.attributes) === null || _stateObj$attributes2 === void 0 ? void 0 : _stateObj$attributes2.precipitation_unit;\n          this._pressure_unit = stateObj === null || stateObj === void 0 || (_stateObj$attributes3 = stateObj.attributes) === null || _stateObj$attributes3 === void 0 ? void 0 : _stateObj$attributes3.pressure_unit;\n          this._temperature_unit = stateObj === null || stateObj === void 0 || (_stateObj$attributes4 = stateObj.attributes) === null || _stateObj$attributes4 === void 0 ? void 0 : _stateObj$attributes4.temperature_unit;\n          this._visibility_unit = stateObj === null || stateObj === void 0 || (_stateObj$attributes5 = stateObj.attributes) === null || _stateObj$attributes5 === void 0 ? void 0 : _stateObj$attributes5.visibility_unit;\n          this._wind_speed_unit = stateObj === null || stateObj === void 0 || (_stateObj$attributes6 = stateObj.attributes) === null || _stateObj$attributes6 === void 0 ? void 0 : _stateObj$attributes6.wind_speed_unit;\n        }\n        const deviceClasses = OVERRIDE_DEVICE_CLASSES[domain];\n        if (!deviceClasses) {\n          return;\n        }\n        this._deviceClassOptions = [[], []];\n        for (const deviceClass of deviceClasses) {\n          if (deviceClass.includes(this.entry.original_device_class)) {\n            this._deviceClassOptions[0] = deviceClass;\n          } else {\n            this._deviceClassOptions[1].push(...deviceClass);\n          }\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"precisionLabel\",\n      value: function precisionLabel(precision, stateValue) {\n        const stateValueNumber = Number(stateValue);\n        const value = !isNaN(stateValueNumber) ? stateValue : 0;\n        return formatNumber(value, this.hass.locale, {\n          minimumFractionDigits: precision,\n          maximumFractionDigits: precision\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_isInvalidDefaultCode\",\n      value: function _isInvalidDefaultCode(codeFormat, value) {\n        if (codeFormat && value) {\n          return !RegExp(codeFormat).test(value);\n        }\n        return false;\n      }\n    }, {\n      kind: \"method\",\n      key: \"updated\",\n      value: async function updated(changedProps) {\n        if (changedProps.has(\"_deviceClass\")) {\n          const domain = computeDomain(this.entry.entity_id);\n          if (domain === \"number\" && this._deviceClass) {\n            const {\n              units\n            } = await getNumberDeviceClassConvertibleUnits(this.hass, this._deviceClass);\n            this._numberDeviceClassConvertibleUnits = units;\n          } else {\n            this._numberDeviceClassConvertibleUnits = [];\n          }\n          if (domain === \"sensor\") {\n            const {\n              numeric_device_classes\n            } = await getSensorNumericDeviceClasses(this.hass);\n            this._sensorNumericalDeviceClasses = numeric_device_classes;\n          } else {\n            this._sensorNumericalDeviceClasses = [];\n          }\n          if (domain === \"sensor\" && this._deviceClass) {\n            const {\n              units\n            } = await getSensorDeviceClassConvertibleUnits(this.hass, this._deviceClass);\n            this._sensorDeviceClassConvertibleUnits = units;\n          } else {\n            this._sensorDeviceClassConvertibleUnits = [];\n          }\n        }\n        if (changedProps.has(\"_entityId\")) {\n          const domain = computeDomain(this.entry.entity_id);\n          if (domain === \"weather\") {\n            const {\n              units\n            } = await getWeatherConvertibleUnits(this.hass);\n            this._weatherConvertibleUnits = units;\n          } else {\n            this._weatherConvertibleUnits = undefined;\n          }\n        }\n        if (changedProps.has(\"helperConfigEntry\")) {\n          var _this$helperConfigEnt;\n          if (((_this$helperConfigEnt = this.helperConfigEntry) === null || _this$helperConfigEnt === void 0 ? void 0 : _this$helperConfigEnt.domain) === \"switch_as_x\") {\n            this._switchAsDomain = computeDomain(this.entry.entity_id);\n          } else {\n            this._switchAsDomain = \"switch\";\n            this._switchAsInvert = false;\n          }\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var _stateObj$attributes7, _this$entry$options$s, _this$entry$options4, _this$helperConfigEnt2, _this$entry$options5, _this$_numberDeviceCl, _this$_sensorDeviceCl, _this$_sensorNumerica, _this$_weatherConvert, _this$_weatherConvert2, _this$_weatherConvert3, _this$_weatherConvert4, _this$_weatherConvert5, _this$_device, _this$hass$areas, _this$_device2;\n        if (this.entry.entity_id !== this._origEntityId) {\n          return nothing;\n        }\n        const stateObj = this.hass.states[this.entry.entity_id];\n        const domain = computeDomain(this.entry.entity_id);\n        const invalidDefaultCode = domain === \"lock\" && this._isInvalidDefaultCode(stateObj === null || stateObj === void 0 || (_stateObj$attributes7 = stateObj.attributes) === null || _stateObj$attributes7 === void 0 ? void 0 : _stateObj$attributes7.code_format, this._defaultCode);\n        const defaultPrecision = (_this$entry$options$s = (_this$entry$options4 = this.entry.options) === null || _this$entry$options4 === void 0 || (_this$entry$options4 = _this$entry$options4.sensor) === null || _this$entry$options4 === void 0 ? void 0 : _this$entry$options4.suggested_display_precision) !== null && _this$entry$options$s !== void 0 ? _this$entry$options$s : undefined;\n        return html`\n      ${this.hideName ? nothing : html`<ha-textfield\n            .value=${this._name}\n            .label=${this.hass.localize(\"ui.dialogs.entity_registry.editor.name\")}\n            .disabled=${this.disabled}\n            .placeholder=${this.entry.original_name}\n            @input=${this._nameChanged}\n          ></ha-textfield>`}\n      ${this.hideIcon ? nothing : html`\n            <ha-icon-picker\n              .hass=${this.hass}\n              .value=${this._icon}\n              @value-changed=${this._iconChanged}\n              .label=${this.hass.localize(\"ui.dialogs.entity_registry.editor.icon\")}\n              .placeholder=${this.entry.original_icon || (stateObj === null || stateObj === void 0 ? void 0 : stateObj.attributes.icon) || stateObj && until(entityIcon(this.hass, stateObj))}\n              .disabled=${this.disabled}\n            >\n              ${!this._icon && !(stateObj !== null && stateObj !== void 0 && stateObj.attributes.icon) && stateObj ? html`\n                    <ha-state-icon\n                      slot=\"fallback\"\n                      .hass=${this.hass}\n                      .stateObj=${stateObj}\n                    ></ha-state-icon>\n                  ` : nothing}\n            </ha-icon-picker>\n          `}\n      ${domain === \"switch\" ? html`<ha-select\n            .label=${this.hass.localize(\"ui.dialogs.entity_registry.editor.device_class\")}\n            naturalMenuWidth\n            fixedMenuPosition\n            @selected=${this._switchAsDomainChanged}\n            @closed=${stopPropagation}\n          >\n            <ha-list-item\n              value=\"switch\"\n              .selected=${!this._deviceClass || this._deviceClass === \"switch\"}\n            >\n              ${domainToName(this.hass.localize, \"switch\")}\n            </ha-list-item>\n            <ha-list-item\n              value=\"outlet\"\n              .selected=${this._deviceClass === \"outlet\"}\n            >\n              ${this.hass.localize(\"ui.dialogs.entity_registry.editor.device_classes.switch.outlet\")}\n            </ha-list-item>\n            <li divider role=\"separator\"></li>\n            ${this._switchAsDomainsSorted(SWITCH_AS_DOMAINS, this.hass.localize).map(entry => html`\n                <ha-list-item .value=${entry.domain}>\n                  ${entry.label}\n                </ha-list-item>\n              `)}\n          </ha-select>` : ((_this$helperConfigEnt2 = this.helperConfigEntry) === null || _this$helperConfigEnt2 === void 0 ? void 0 : _this$helperConfigEnt2.domain) === \"switch_as_x\" ? html`<ha-select\n                .label=${this.hass.localize(\"ui.dialogs.entity_registry.editor.switch_as_x\")}\n                .value=${this._switchAsDomain}\n                naturalMenuWidth\n                fixedMenuPosition\n                @selected=${this._switchAsDomainChanged}\n                @closed=${stopPropagation}\n              >\n                <ha-list-item value=\"switch\">\n                  ${domainToName(this.hass.localize, \"switch\")}\n                </ha-list-item>\n                <ha-list-item .value=${domain}>\n                  ${domainToName(this.hass.localize, domain)}\n                </ha-list-item>\n                <li divider role=\"separator\"></li>\n                ${this._switchAsDomainsSorted(SWITCH_AS_DOMAINS, this.hass.localize).map(entry => domain === entry.domain ? nothing : html`\n                        <ha-list-item .value=${entry.domain}>\n                          ${entry.label}\n                        </ha-list-item>\n                      `)}\n              </ha-select>\n              ${SWITCH_AS_DOMAINS_INVERT.includes(this._switchAsDomain) ? html`\n                    <ha-settings-row>\n                      <span slot=\"heading\"\n                        >${this.hass.localize(\"ui.dialogs.entity_registry.editor.invert.label\")}</span\n                      >\n                      <span slot=\"description\"\n                        >${this.hass.localize(`ui.dialogs.entity_registry.editor.invert.descriptions.${this._switchAsDomain}`)}</span\n                      >\n                      <ha-switch\n                        .checked=${(_this$entry$options5 = this.entry.options) === null || _this$entry$options5 === void 0 || (_this$entry$options5 = _this$entry$options5.switch_as_x) === null || _this$entry$options5 === void 0 ? void 0 : _this$entry$options5.invert}\n                        @change=${this._switchAsInvertChanged}\n                      ></ha-switch>\n                    </ha-settings-row>\n                  ` : nothing} ` : nothing}\n      ${this._deviceClassOptions ? html`\n            <ha-select\n              .label=${this.hass.localize(\"ui.dialogs.entity_registry.editor.device_class\")}\n              .value=${this._deviceClass}\n              naturalMenuWidth\n              fixedMenuPosition\n              clearable\n              @selected=${this._deviceClassChanged}\n              @closed=${stopPropagation}\n            >\n              ${this._deviceClassesSorted(domain, this._deviceClassOptions[0], this.hass.localize).map(entry => html`\n                  <ha-list-item .value=${entry.deviceClass}>\n                    ${entry.label}\n                  </ha-list-item>\n                `)}\n              ${this._deviceClassOptions[0].length && this._deviceClassOptions[1].length ? html`<li divider role=\"separator\"></li>` : \"\"}\n              ${this._deviceClassesSorted(domain, this._deviceClassOptions[1], this.hass.localize).map(entry => html`\n                  <ha-list-item .value=${entry.deviceClass}>\n                    ${entry.label}\n                  </ha-list-item>\n                `)}\n            </ha-select>\n          ` : \"\"}\n      ${domain === \"number\" && this._deviceClass && stateObj !== null && stateObj !== void 0 && stateObj.attributes.unit_of_measurement && (_this$_numberDeviceCl = this._numberDeviceClassConvertibleUnits) !== null && _this$_numberDeviceCl !== void 0 && _this$_numberDeviceCl.includes(stateObj === null || stateObj === void 0 ? void 0 : stateObj.attributes.unit_of_measurement) ? html`\n            <ha-select\n              .label=${this.hass.localize(\"ui.dialogs.entity_registry.editor.unit_of_measurement\")}\n              .value=${stateObj.attributes.unit_of_measurement}\n              naturalMenuWidth\n              fixedMenuPosition\n              @selected=${this._unitChanged}\n              @closed=${stopPropagation}\n            >\n              ${this._numberDeviceClassConvertibleUnits.map(unit => html`\n                  <ha-list-item .value=${unit}>${unit}</ha-list-item>\n                `)}\n            </ha-select>\n          ` : \"\"}\n      ${domain === \"lock\" ? html`\n            <ha-textfield\n              .validationMessage=${this.hass.localize(\"ui.dialogs.entity_registry.editor.default_code_error\")}\n              .value=${this._defaultCode == null ? \"\" : this._defaultCode}\n              .label=${this.hass.localize(\"ui.dialogs.entity_registry.editor.default_code\")}\n              type=\"password\"\n              .invalid=${invalidDefaultCode}\n              .disabled=${this.disabled}\n              @input=${this._defaultcodeChanged}\n            ></ha-textfield>\n          ` : \"\"}\n      ${domain === \"sensor\" && this._deviceClass && stateObj !== null && stateObj !== void 0 && stateObj.attributes.unit_of_measurement && (_this$_sensorDeviceCl = this._sensorDeviceClassConvertibleUnits) !== null && _this$_sensorDeviceCl !== void 0 && _this$_sensorDeviceCl.includes(stateObj === null || stateObj === void 0 ? void 0 : stateObj.attributes.unit_of_measurement) ? html`\n            <ha-select\n              .label=${this.hass.localize(\"ui.dialogs.entity_registry.editor.unit_of_measurement\")}\n              .value=${stateObj.attributes.unit_of_measurement}\n              naturalMenuWidth\n              fixedMenuPosition\n              @selected=${this._unitChanged}\n              @closed=${stopPropagation}\n            >\n              ${this._sensorDeviceClassConvertibleUnits.map(unit => html`\n                  <ha-list-item .value=${unit}>${unit}</ha-list-item>\n                `)}\n            </ha-select>\n          ` : \"\"}\n      ${domain === \"sensor\" && (\n        // Allow customizing the precision for a sensor with numerical device class,\n        // a unit of measurement or state class\n        this._deviceClass && (_this$_sensorNumerica = this._sensorNumericalDeviceClasses) !== null && _this$_sensorNumerica !== void 0 && _this$_sensorNumerica.includes(this._deviceClass) || stateObj !== null && stateObj !== void 0 && stateObj.attributes.unit_of_measurement || stateObj !== null && stateObj !== void 0 && stateObj.attributes.state_class) ? html`\n            <ha-select\n              .label=${this.hass.localize(\"ui.dialogs.entity_registry.editor.precision\")}\n              .value=${this._precision == null ? \"default\" : this._precision.toString()}\n              naturalMenuWidth\n              fixedMenuPosition\n              @selected=${this._precisionChanged}\n              @closed=${stopPropagation}\n            >\n              <ha-list-item value=\"default\"\n                >${this.hass.localize(\"ui.dialogs.entity_registry.editor.precision_default\", {\n          value: this.precisionLabel(defaultPrecision, stateObj === null || stateObj === void 0 ? void 0 : stateObj.state)\n        })}</ha-list-item\n              >\n              ${PRECISIONS.map(precision => html`\n                  <ha-list-item .value=${precision.toString()}>\n                    ${this.precisionLabel(precision, stateObj === null || stateObj === void 0 ? void 0 : stateObj.state)}\n                  </ha-list-item>\n                `)}\n            </ha-select>\n          ` : \"\"}\n      ${domain === \"weather\" ? html`\n            <ha-select\n              .label=${this.hass.localize(\"ui.dialogs.entity_registry.editor.precipitation_unit\")}\n              .value=${this._precipitation_unit}\n              naturalMenuWidth\n              fixedMenuPosition\n              @selected=${this._precipitationUnitChanged}\n              @closed=${stopPropagation}\n            >\n              ${(_this$_weatherConvert = this._weatherConvertibleUnits) === null || _this$_weatherConvert === void 0 ? void 0 : _this$_weatherConvert.precipitation_unit.map(unit => html`\n                  <ha-list-item .value=${unit}>${unit}</ha-list-item>\n                `)}\n            </ha-select>\n            <ha-select\n              .label=${this.hass.localize(\"ui.dialogs.entity_registry.editor.pressure_unit\")}\n              .value=${this._pressure_unit}\n              naturalMenuWidth\n              fixedMenuPosition\n              @selected=${this._pressureUnitChanged}\n              @closed=${stopPropagation}\n            >\n              ${(_this$_weatherConvert2 = this._weatherConvertibleUnits) === null || _this$_weatherConvert2 === void 0 ? void 0 : _this$_weatherConvert2.pressure_unit.map(unit => html`\n                  <ha-list-item .value=${unit}>${unit}</ha-list-item>\n                `)}\n            </ha-select>\n            <ha-select\n              .label=${this.hass.localize(\"ui.dialogs.entity_registry.editor.temperature_unit\")}\n              .value=${this._temperature_unit}\n              naturalMenuWidth\n              fixedMenuPosition\n              @selected=${this._temperatureUnitChanged}\n              @closed=${stopPropagation}\n            >\n              ${(_this$_weatherConvert3 = this._weatherConvertibleUnits) === null || _this$_weatherConvert3 === void 0 ? void 0 : _this$_weatherConvert3.temperature_unit.map(unit => html`\n                  <ha-list-item .value=${unit}>${unit}</ha-list-item>\n                `)}\n            </ha-select>\n            <ha-select\n              .label=${this.hass.localize(\"ui.dialogs.entity_registry.editor.visibility_unit\")}\n              .value=${this._visibility_unit}\n              naturalMenuWidth\n              fixedMenuPosition\n              @selected=${this._visibilityUnitChanged}\n              @closed=${stopPropagation}\n            >\n              ${(_this$_weatherConvert4 = this._weatherConvertibleUnits) === null || _this$_weatherConvert4 === void 0 ? void 0 : _this$_weatherConvert4.visibility_unit.map(unit => html`\n                  <ha-list-item .value=${unit}>${unit}</ha-list-item>\n                `)}\n            </ha-select>\n            <ha-select\n              .label=${this.hass.localize(\"ui.dialogs.entity_registry.editor.wind_speed_unit\")}\n              .value=${this._wind_speed_unit}\n              naturalMenuWidth\n              fixedMenuPosition\n              @selected=${this._windSpeedUnitChanged}\n              @closed=${stopPropagation}\n            >\n              ${(_this$_weatherConvert5 = this._weatherConvertibleUnits) === null || _this$_weatherConvert5 === void 0 ? void 0 : _this$_weatherConvert5.wind_speed_unit.map(unit => html`\n                  <ha-list-item .value=${unit}>${unit}</ha-list-item>\n                `)}\n            </ha-select>\n          ` : \"\"}\n      <ha-textfield\n        class=\"entityId\"\n        .value=${computeObjectId(this._entityId)}\n        .prefix=${domain + \".\"}\n        .label=${this.hass.localize(\"ui.dialogs.entity_registry.editor.entity_id\")}\n        .disabled=${this.disabled}\n        required\n        @input=${this._entityIdChanged}\n        iconTrailing\n        autocapitalize=\"none\"\n        autocomplete=\"off\"\n        autocorrect=\"off\"\n        input-spellcheck=\"false\"\n      >\n        <ha-icon-button\n          @click=${this._copyEntityId}\n          slot=\"trailingIcon\"\n          .path=${mdiContentCopy}\n        ></ha-icon-button>\n      </ha-textfield>\n      ${!this.entry.device_id ? html`<ha-area-picker\n            .hass=${this.hass}\n            .value=${this._areaId}\n            .disabled=${this.disabled}\n            @value-changed=${this._areaPicked}\n          ></ha-area-picker>` : \"\"}\n      ${this._cameraPrefs ? html`\n            <ha-settings-row>\n              <span slot=\"heading\"\n                >${this.hass.localize(\"ui.dialogs.entity_registry.editor.stream.preload_stream\")}</span\n              >\n              <span slot=\"description\"\n                >${this.hass.localize(\"ui.dialogs.entity_registry.editor.stream.preload_stream_description\")}</span\n              >\n              <ha-switch\n                .checked=${this._cameraPrefs.preload_stream}\n                .disabled=${this.disabled}\n                @change=${this._handleCameraPrefsChanged}\n              >\n              </ha-switch>\n            </ha-settings-row>\n            <ha-settings-row>\n              <span slot=\"heading\"\n                >${this.hass.localize(\"ui.dialogs.entity_registry.editor.stream.stream_orientation\")}</span\n              >\n              <span slot=\"description\"\n                >${this.hass.localize(\"ui.dialogs.entity_registry.editor.stream.stream_orientation_description\")}</span\n              >\n              <ha-select\n                .label=${this.hass.localize(\"ui.dialogs.entity_registry.editor.stream.stream_orientation\")}\n                naturalMenuWidth\n                fixedMenuPosition\n                .disabled=${this.disabled}\n                @selected=${this._handleCameraOrientationChanged}\n                @closed=${stopPropagation}\n              >\n                ${CAMERA_ORIENTATIONS.map(num => {\n          const localizeStr = \"ui.dialogs.entity_registry.editor.stream.stream_orientation_\" + num.toString();\n          return html`\n                    <ha-list-item value=${num}>\n                      ${this.hass.localize(localizeStr)}\n                    </ha-list-item>\n                  `;\n        })}\n              </ha-select>\n            </ha-settings-row>\n          ` : \"\"}\n      ${this.helperConfigEntry && this.helperConfigEntry.supports_options && this.helperConfigEntry.domain !== \"switch_as_x\" ? html`\n            <ha-list-item\n              class=\"menu-item\"\n              twoline\n              hasMeta\n              .disabled=${this.disabled}\n              @click=${this._showOptionsFlow}\n            >\n              <span\n                >${this.hass.localize(\"ui.dialogs.entity_registry.editor.configure_state\", {\n          integration: domainToName(this.hass.localize, this.helperConfigEntry.domain)\n        })}</span\n              >\n              <span slot=\"secondary\"\n                >${this.hass.localize(\"ui.dialogs.entity_registry.editor.configure_state_secondary\", {\n          integration: domainToName(this.hass.localize, this.helperConfigEntry.domain)\n        })}</span\n              >\n              <ha-icon-next slot=\"meta\"></ha-icon-next>\n            </ha-list-item>\n          ` : \"\"}\n\n      <ha-list-item\n        class=\"menu-item\"\n        twoline\n        hasMeta\n        .disabled=${this.disabled}\n        @click=${this._handleVoiceAssistantsClicked}\n      >\n        <span\n          >${this.hass.localize(\"ui.dialogs.entity_registry.editor.voice_assistants\")}</span\n        >\n        <span slot=\"secondary\">\n          ${this.entry.aliases.length ? [...this.entry.aliases].sort((a, b) => stringCompare(a, b, this.hass.locale.language)).join(\", \") : this.hass.localize(\"ui.dialogs.entity_registry.editor.no_aliases\")}\n        </span>\n        <ha-icon-next slot=\"meta\"></ha-icon-next>\n      </ha-list-item>\n\n      ${this._disabledBy && this._disabledBy !== \"user\" && this._disabledBy !== \"integration\" ? html`<ha-alert alert-type=\"warning\"\n            >${this.hass.localize(\"ui.dialogs.entity_registry.editor.enabled_cause\", {\n          cause: this.hass.localize(`config_entry.disabled_by.${this._disabledBy}`)\n        })}</ha-alert\n          >` : \"\"}\n\n      <ha-settings-row>\n        <span slot=\"heading\"\n          >${this.hass.localize(\"ui.dialogs.entity_registry.editor.enabled_label\")}</span\n        >\n        <span slot=\"description\"\n          >${this.hass.localize(\"ui.dialogs.entity_registry.editor.enabled_description\")}</span\n        >\n        <ha-switch\n          .checked=${!this._disabledBy}\n          .disabled=${this.disabled || ((_this$_device = this._device) === null || _this$_device === void 0 ? void 0 : _this$_device.disabled_by) || this._disabledBy && this._disabledBy !== \"user\" && this._disabledBy !== \"integration\"}\n          @change=${this._enabledChanged}\n        ></ha-switch>\n      </ha-settings-row>\n\n      ${this._hiddenBy && this._hiddenBy !== \"user\" ? html`<ha-alert alert-type=\"warning\"\n            >${this.hass.localize(\"ui.dialogs.entity_registry.editor.hidden_cause\", {\n          cause: this.hass.localize(`config_entry.hidden_by.${this._hiddenBy}`)\n        })}</ha-alert\n          >` : \"\"}\n\n      <ha-settings-row>\n        <span slot=\"heading\"\n          >${this.hass.localize(\"ui.dialogs.entity_registry.editor.visible_label\")}</span\n        >\n        <span slot=\"description\"\n          >${this.hass.localize(\"ui.dialogs.entity_registry.editor.hidden_description\")}</span\n        >\n        <ha-switch\n          .checked=${!this._disabledBy && !this._hiddenBy}\n          .disabled=${this.disabled || this._disabledBy || this._hiddenBy && this._hiddenBy !== \"user\"}\n          @change=${this._hiddenChanged}\n        ></ha-switch>\n      </ha-settings-row>\n\n      ${this.entry.device_id ? html`<ha-settings-row>\n              <span slot=\"heading\"\n                >${this.hass.localize(\"ui.dialogs.entity_registry.editor.use_device_area\")}\n                ${this.hass.devices[this.entry.device_id].area_id ? `(${(_this$hass$areas = this.hass.areas[this.hass.devices[this.entry.device_id].area_id]) === null || _this$hass$areas === void 0 ? void 0 : _this$hass$areas.name})` : \"\"}</span\n              >\n              <span slot=\"description\"\n                >${this.hass.localize(\"ui.dialogs.entity_registry.editor.change_device_settings\", {\n          link: html`<button\n                      class=\"link\"\n                      @click=${this._openDeviceSettings}\n                    >\n                      ${this.hass.localize(\"ui.dialogs.entity_registry.editor.change_device_area_link\")}\n                    </button>`\n        })}</span\n              >\n              <ha-switch\n                .checked=${!this._areaId || this._noDeviceArea}\n                .disabled=${this.disabled}\n                @change=${this._useDeviceAreaChanged}\n              >\n              </ha-switch\n            ></ha-settings-row>\n            ${this._areaId || this._noDeviceArea ? html`<ha-area-picker\n                  .hass=${this.hass}\n                  .value=${this._areaId}\n                  .placeholder=${(_this$_device2 = this._device) === null || _this$_device2 === void 0 ? void 0 : _this$_device2.area_id}\n                  .disabled=${this.disabled}\n                  @value-changed=${this._areaPicked}\n                ></ha-area-picker>` : \"\"} ` : \"\"}\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"updateEntry\",\n      value: async function updateEntry() {\n        var _stateObj$attributes8, _this$entry$options7, _this$entry$options9, _stateObj$attributes9, _stateObj$attributes10, _stateObj$attributes11, _stateObj$attributes12, _stateObj$attributes13, _this$helperConfigEnt3, _this$helperConfigEnt4, _this$entry$options12;\n        let close = true;\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        let parent = this;\n        while (((_parent = parent) === null || _parent === void 0 ? void 0 : _parent.localName) !== \"home-assistant\") {\n          var _parent;\n          parent = parent.getRootNode().host;\n        }\n        const params = {\n          name: this._name.trim() || null,\n          icon: this._icon.trim() || null,\n          area_id: this._areaId || null,\n          new_entity_id: this._entityId.trim()\n        };\n\n        // Only update device class if changed by user\n        if (this._deviceClass !== (this.entry.device_class || this.entry.original_device_class)) {\n          params.device_class = this._deviceClass;\n        }\n        const stateObj = this.hass.states[this.entry.entity_id];\n        const domain = computeDomain(this.entry.entity_id);\n        if (this.entry.disabled_by !== this._disabledBy && (this._disabledBy === null || this._disabledBy === \"user\")) {\n          params.disabled_by = this._disabledBy;\n        }\n        if (this.entry.hidden_by !== this._hiddenBy && (this._hiddenBy === null || this._hiddenBy === \"user\")) {\n          params.hidden_by = this._hiddenBy;\n        }\n        if ((domain === \"number\" || domain === \"sensor\") && (stateObj === null || stateObj === void 0 || (_stateObj$attributes8 = stateObj.attributes) === null || _stateObj$attributes8 === void 0 ? void 0 : _stateObj$attributes8.unit_of_measurement) !== this._unit_of_measurement) {\n          var _this$entry$options6;\n          params.options_domain = domain;\n          params.options = ((_this$entry$options6 = this.entry.options) === null || _this$entry$options6 === void 0 ? void 0 : _this$entry$options6[domain]) || {};\n          params.options.unit_of_measurement = this._unit_of_measurement;\n        }\n        if (domain === \"sensor\" && ((_this$entry$options7 = this.entry.options) === null || _this$entry$options7 === void 0 || (_this$entry$options7 = _this$entry$options7[domain]) === null || _this$entry$options7 === void 0 ? void 0 : _this$entry$options7.display_precision) !== this._precision) {\n          var _this$entry$options8;\n          params.options_domain = domain;\n          params.options = params.options || ((_this$entry$options8 = this.entry.options) === null || _this$entry$options8 === void 0 ? void 0 : _this$entry$options8[domain]) || {};\n          params.options.display_precision = this._precision;\n        }\n        if (domain === \"lock\" && ((_this$entry$options9 = this.entry.options) === null || _this$entry$options9 === void 0 || (_this$entry$options9 = _this$entry$options9[domain]) === null || _this$entry$options9 === void 0 ? void 0 : _this$entry$options9.default_code) !== this._defaultCode) {\n          var _this$entry$options10;\n          params.options_domain = domain;\n          params.options = ((_this$entry$options10 = this.entry.options) === null || _this$entry$options10 === void 0 ? void 0 : _this$entry$options10[domain]) || {};\n          params.options.default_code = this._defaultCode;\n        }\n        if (domain === \"weather\" && ((stateObj === null || stateObj === void 0 || (_stateObj$attributes9 = stateObj.attributes) === null || _stateObj$attributes9 === void 0 ? void 0 : _stateObj$attributes9.precipitation_unit) !== this._precipitation_unit || (stateObj === null || stateObj === void 0 || (_stateObj$attributes10 = stateObj.attributes) === null || _stateObj$attributes10 === void 0 ? void 0 : _stateObj$attributes10.pressure_unit) !== this._pressure_unit || (stateObj === null || stateObj === void 0 || (_stateObj$attributes11 = stateObj.attributes) === null || _stateObj$attributes11 === void 0 ? void 0 : _stateObj$attributes11.temperature_unit) !== this._temperature_unit || (stateObj === null || stateObj === void 0 || (_stateObj$attributes12 = stateObj.attributes) === null || _stateObj$attributes12 === void 0 ? void 0 : _stateObj$attributes12.visbility_unit) !== this._visibility_unit || (stateObj === null || stateObj === void 0 || (_stateObj$attributes13 = stateObj.attributes) === null || _stateObj$attributes13 === void 0 ? void 0 : _stateObj$attributes13.wind_speed_unit) !== this._wind_speed_unit)) {\n          params.options_domain = \"weather\";\n          params.options = {\n            precipitation_unit: this._precipitation_unit,\n            pressure_unit: this._pressure_unit,\n            temperature_unit: this._temperature_unit,\n            visibility_unit: this._visibility_unit,\n            wind_speed_unit: this._wind_speed_unit\n          };\n        }\n        const result = await updateEntityRegistryEntry(this.hass, this.entry.entity_id, params);\n        if (result.require_restart) {\n          showAlertDialog(this, {\n            text: this.hass.localize(\"ui.dialogs.entity_registry.editor.enabled_restart_confirm\")\n          });\n        }\n        if (result.reload_delay) {\n          showAlertDialog(this, {\n            text: this.hass.localize(\"ui.dialogs.entity_registry.editor.enabled_delay_confirm\", {\n              delay: result.reload_delay\n            })\n          });\n        }\n        if (domain === \"switch\" && this._switchAsDomain !== \"switch\") {\n          // generate config flow for switch_as_x\n          if (await showConfirmationDialog(this, {\n            text: this.hass.localize(\"ui.dialogs.entity_registry.editor.switch_as_x_confirm\", {\n              domain: domainToName(this.hass.localize, this._switchAsDomain).toLowerCase()\n            })\n          })) {\n            var _configFlowResult$res;\n            const configFlow = await createConfigFlow(this.hass, \"switch_as_x\");\n            const configFlowResult = await handleConfigFlowStep(this.hass, configFlow.flow_id, {\n              entity_id: this._entityId.trim(),\n              invert: this._switchAsInvert,\n              target_domain: this._switchAsDomain\n            });\n            if ((_configFlowResult$res = configFlowResult.result) !== null && _configFlowResult$res !== void 0 && _configFlowResult$res.entry_id) {\n              try {\n                const entry = await this._waitForEntityRegistryUpdate(configFlowResult.result.entry_id);\n                showMoreInfoDialog(parent, {\n                  entityId: entry.entity_id\n                });\n                close = false;\n              } catch (err) {\n                // ignore\n              }\n            }\n          }\n        } else if (((_this$helperConfigEnt3 = this.helperConfigEntry) === null || _this$helperConfigEnt3 === void 0 ? void 0 : _this$helperConfigEnt3.domain) === \"switch_as_x\" && this._switchAsDomain !== domain) {\n          // change a current switch as x to something else\n          if (await showConfirmationDialog(this, {\n            text: this._switchAsDomain === \"switch\" ? this.hass.localize(\"ui.dialogs.entity_registry.editor.switch_as_x_remove_confirm\", {\n              domain: domainToName(this.hass.localize, domain).toLowerCase()\n            }) : this.hass.localize(\"ui.dialogs.entity_registry.editor.switch_as_x_change_confirm\", {\n              domain_1: domainToName(this.hass.localize, domain).toLowerCase(),\n              domain_2: domainToName(this.hass.localize, this._switchAsDomain).toLowerCase()\n            })\n          })) {\n            var _this$entry$options11;\n            const origEntityId = (_this$entry$options11 = this.entry.options) === null || _this$entry$options11 === void 0 || (_this$entry$options11 = _this$entry$options11.switch_as_x) === null || _this$entry$options11 === void 0 ? void 0 : _this$entry$options11.entity_id;\n            // remove current helper\n            await deleteConfigEntry(this.hass, this.helperConfigEntry.entry_id);\n            if (!origEntityId) {\n              // should not happen, guard for types\n            } else if (this._switchAsDomain === \"switch\") {\n              // done, original switch is back\n              showMoreInfoDialog(parent, {\n                entityId: origEntityId\n              });\n              close = false;\n            } else {\n              var _configFlowResult$res2;\n              const configFlow = await createConfigFlow(this.hass, \"switch_as_x\");\n              const configFlowResult = await handleConfigFlowStep(this.hass, configFlow.flow_id, {\n                entity_id: origEntityId,\n                invert: this._switchAsInvert,\n                target_domain: this._switchAsDomain\n              });\n              if ((_configFlowResult$res2 = configFlowResult.result) !== null && _configFlowResult$res2 !== void 0 && _configFlowResult$res2.entry_id) {\n                try {\n                  const entry = await this._waitForEntityRegistryUpdate(configFlowResult.result.entry_id);\n                  showMoreInfoDialog(parent, {\n                    entityId: entry.entity_id\n                  });\n                  close = false;\n                } catch (err) {\n                  // ignore\n                }\n              }\n            }\n          }\n        } else if (((_this$helperConfigEnt4 = this.helperConfigEntry) === null || _this$helperConfigEnt4 === void 0 ? void 0 : _this$helperConfigEnt4.domain) === \"switch_as_x\" && this._switchAsDomain === domain && this._switchAsInvert !== ((_this$entry$options12 = this.entry.options) === null || _this$entry$options12 === void 0 || (_this$entry$options12 = _this$entry$options12.switch_as_x) === null || _this$entry$options12 === void 0 ? void 0 : _this$entry$options12.invert)) {\n          var _this$entry$options13;\n          // Change invert setting\n          const origEntityId = (_this$entry$options13 = this.entry.options) === null || _this$entry$options13 === void 0 || (_this$entry$options13 = _this$entry$options13.switch_as_x) === null || _this$entry$options13 === void 0 ? void 0 : _this$entry$options13.entity_id;\n          if (!origEntityId) {\n            // should not happen, guard for types\n          } else {\n            const configFlow = await createOptionsFlow(this.hass, this.helperConfigEntry.entry_id);\n            await handleOptionsFlowStep(this.hass, configFlow.flow_id, {\n              invert: this._switchAsInvert\n            });\n          }\n        }\n        return {\n          close,\n          entry: result.entity_entry\n        };\n      }\n    }, {\n      kind: \"method\",\n      key: \"_waitForEntityRegistryUpdate\",\n      value: async function _waitForEntityRegistryUpdate(config_entry_id) {\n        return new Promise((resolve, reject) => {\n          var _this$hass$connection;\n          const timeout = setTimeout(reject, 5000);\n          const unsub = subscribeEntityRegistry(this.hass.connection, entityRegistry => {\n            const entity = entityRegistry.find(reg => reg.config_entry_id === config_entry_id);\n            if (entity) {\n              clearTimeout(timeout);\n              unsub();\n              resolve(entity);\n            }\n          });\n          // @ts-ignore Force refresh\n          (_this$hass$connection = this.hass.connection._entityRegistry) === null || _this$hass$connection === void 0 || _this$hass$connection.refresh();\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_nameChanged\",\n      value: function _nameChanged(ev) {\n        fireEvent(this, \"change\");\n        this._name = ev.target.value;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_iconChanged\",\n      value: function _iconChanged(ev) {\n        fireEvent(this, \"change\");\n        this._icon = ev.detail.value;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_copyEntityId\",\n      value: async function _copyEntityId() {\n        await copyToClipboard(this._entityId);\n        showToast(this, {\n          message: this.hass.localize(\"ui.common.copied_clipboard\")\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_entityIdChanged\",\n      value: function _entityIdChanged(ev) {\n        fireEvent(this, \"change\");\n        this._entityId = `${computeDomain(this._origEntityId)}.${ev.target.value}`;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_deviceClassChanged\",\n      value: function _deviceClassChanged(ev) {\n        fireEvent(this, \"change\");\n        this._deviceClass = ev.target.value;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_unitChanged\",\n      value: function _unitChanged(ev) {\n        fireEvent(this, \"change\");\n        this._unit_of_measurement = ev.target.value;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_defaultcodeChanged\",\n      value: function _defaultcodeChanged(ev) {\n        fireEvent(this, \"change\");\n        this._defaultCode = ev.target.value === \"\" ? null : ev.target.value;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_precipitationUnitChanged\",\n      value: function _precipitationUnitChanged(ev) {\n        fireEvent(this, \"change\");\n        this._precipitation_unit = ev.target.value;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_precisionChanged\",\n      value: function _precisionChanged(ev) {\n        fireEvent(this, \"change\");\n        this._precision = ev.target.value === \"default\" ? null : Number(ev.target.value);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_pressureUnitChanged\",\n      value: function _pressureUnitChanged(ev) {\n        fireEvent(this, \"change\");\n        this._pressure_unit = ev.target.value;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_temperatureUnitChanged\",\n      value: function _temperatureUnitChanged(ev) {\n        fireEvent(this, \"change\");\n        this._temperature_unit = ev.target.value;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_visibilityUnitChanged\",\n      value: function _visibilityUnitChanged(ev) {\n        fireEvent(this, \"change\");\n        this._visibility_unit = ev.target.value;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_windSpeedUnitChanged\",\n      value: function _windSpeedUnitChanged(ev) {\n        fireEvent(this, \"change\");\n        this._wind_speed_unit = ev.target.value;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_switchAsDomainChanged\",\n      value: function _switchAsDomainChanged(ev) {\n        if (ev.target.value === \"\") {\n          return;\n        }\n\n        // If value is \"outlet\" that means the user kept the \"switch\" domain, but actually changed\n        // the device_class of the switch to \"outlet\".\n        const switchAs = ev.target.value === \"outlet\" ? \"switch\" : ev.target.value;\n        this._switchAsDomain = switchAs;\n        if (computeDomain(this.entry.entity_id) === \"switch\" && ev.target.value === \"outlet\" || ev.target.value === \"switch\") {\n          this._deviceClass = ev.target.value;\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_switchAsInvertChanged\",\n      value: function _switchAsInvertChanged(ev) {\n        this._switchAsInvert = ev.target.checked;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_useDeviceAreaChanged\",\n      value: function _useDeviceAreaChanged(ev) {\n        this._noDeviceArea = !ev.target.checked;\n        if (!this._noDeviceArea) {\n          this._areaId = undefined;\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_areaPicked\",\n      value: function _areaPicked(ev) {\n        fireEvent(this, \"change\");\n        this._areaId = ev.detail.value;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_fetchCameraPrefs\",\n      value: async function _fetchCameraPrefs() {\n        this._cameraPrefs = await fetchCameraPrefs(this.hass, this.entry.entity_id);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleCameraPrefsChanged\",\n      value: async function _handleCameraPrefsChanged(ev) {\n        const checkbox = ev.currentTarget;\n        try {\n          this._cameraPrefs = await updateCameraPrefs(this.hass, this.entry.entity_id, {\n            preload_stream: checkbox.checked\n          });\n        } catch (err) {\n          showAlertDialog(this, {\n            text: err.message\n          });\n          checkbox.checked = !checkbox.checked;\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleCameraOrientationChanged\",\n      value: async function _handleCameraOrientationChanged(ev) {\n        try {\n          this._cameraPrefs = await updateCameraPrefs(this.hass, this.entry.entity_id, {\n            orientation: ev.currentTarget.value\n          });\n        } catch (err) {\n          showAlertDialog(this, {\n            text: err.message\n          });\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_enabledChanged\",\n      value: function _enabledChanged(ev) {\n        if (ev.target.checked) {\n          this._disabledBy = null;\n        } else {\n          this._disabledBy = \"user\";\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_hiddenChanged\",\n      value: function _hiddenChanged(ev) {\n        if (ev.target.checked) {\n          this._hiddenBy = null;\n        } else {\n          this._hiddenBy = \"user\";\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_openDeviceSettings\",\n      value: function _openDeviceSettings() {\n        showDeviceRegistryDetailDialog(this, {\n          device: this._device,\n          updateEntry: async updates => {\n            await updateDeviceRegistryEntry(this.hass, this._device.id, updates);\n          }\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleVoiceAssistantsClicked\",\n      value: function _handleVoiceAssistantsClicked() {\n        showVoiceAssistantsView(this, this.hass.localize(\"ui.dialogs.entity_registry.editor.voice_assistants\"));\n      }\n    }, {\n      kind: \"method\",\n      key: \"_showOptionsFlow\",\n      value: async function _showOptionsFlow() {\n        showOptionsFlowDialog(this, this.helperConfigEntry);\n      }\n    }, {\n      kind: \"field\",\n      key: \"_switchAsDomainsSorted\",\n      value() {\n        return memoizeOne((domains, localize) => domains.map(domain => ({\n          domain,\n          label: domainToName(localize, domain)\n        })).sort((a, b) => stringCompare(a.label, b.label, this.hass.locale.language)));\n      }\n    }, {\n      kind: \"field\",\n      key: \"_deviceClassesSorted\",\n      value() {\n        return memoizeOne((domain, deviceClasses, localize) => deviceClasses.map(entry => ({\n          deviceClass: entry,\n          label: localize(`ui.dialogs.entity_registry.editor.device_classes.${domain}.${entry}`)\n        })).sort((a, b) => stringCompare(a.label, b.label, this.hass.locale.language)));\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [haStyle, css`\n        :host {\n          display: block;\n        }\n        ha-textfield.entityId {\n          --text-field-prefix-padding-right: 0;\n          --textfield-icon-trailing-padding: 0;\n        }\n        ha-textfield.entityId > ha-icon-button {\n          position: relative;\n          right: -8px;\n          --mdc-icon-button-size: 36px;\n          --mdc-icon-size: 20px;\n          color: var(--secondary-text-color);\n          inset-inline-start: initial;\n          inset-inline-end: -8px;\n          direction: var(--direction);\n        }\n        ha-switch {\n          margin-right: 16px;\n          margin-inline-end: 16px;\n          margin-inline-start: initial;\n        }\n        ha-settings-row ha-switch {\n          margin-right: 0;\n          margin-inline-end: 0;\n          margin-inline-start: initial;\n        }\n        ha-textfield,\n        ha-icon-picker,\n        ha-select,\n        ha-area-picker {\n          display: block;\n          margin: 8px 0;\n          width: 100%;\n        }\n        li[divider] {\n          border-bottom-color: var(--divider-color);\n        }\n        ha-alert mwc-button {\n          width: max-content;\n        }\n        .menu-item {\n          border-radius: 4px;\n          margin-top: 3px;\n          margin-bottom: 3px;\n          overflow: hidden;\n          --mdc-list-side-padding: 13px;\n        }\n      `];\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["mdiContentCopy","css","html","LitElement","nothing","customElement","property","state","until","memoizeOne","isComponentLoaded","fireEvent","stopPropagation","computeDomain","computeObjectId","supportsFeature","formatNumber","stringCompare","copyToClipboard","CAMERA_ORIENTATIONS","CAMERA_SUPPORT_STREAM","fetchCameraPrefs","STREAM_TYPE_HLS","updateCameraPrefs","deleteConfigEntry","createConfigFlow","handleConfigFlowStep","createOptionsFlow","handleOptionsFlowStep","updateDeviceRegistryEntry","subscribeEntityRegistry","updateEntityRegistryEntry","entityIcon","domainToName","getNumberDeviceClassConvertibleUnits","getSensorDeviceClassConvertibleUnits","getSensorNumericDeviceClasses","getWeatherConvertibleUnits","showOptionsFlowDialog","showAlertDialog","showConfirmationDialog","showVoiceAssistantsView","showMoreInfoDialog","haStyle","showToast","showDeviceRegistryDetailDialog","OVERRIDE_DEVICE_CLASSES","cover","binary_sensor","SWITCH_AS_DOMAINS","SWITCH_AS_DOMAINS_INVERT","PRECISIONS","EntityRegistrySettingsEditor","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","type","Object","Boolean","willUpdate","changedProperties","_changedProperties$ge","_this$entry$options","_get","_getPrototypeOf","prototype","call","has","get","id","entry","_name","name","_icon","icon","_deviceClass","device_class","original_device_class","_origEntityId","entity_id","_areaId","area_id","_entityId","_disabledBy","disabled_by","_hiddenBy","hidden_by","_device","device_id","hass","devices","undefined","_switchAsInvert","options","switch_as_x","invert","domain","stateObj","states","attributes","frontend_stream_type","_fetchCameraPrefs","_stateObj$attributes","_unit_of_measurement","unit_of_measurement","_this$entry$options2","_precision","sensor","display_precision","_this$entry$options3","_defaultCode","lock","default_code","_stateObj$attributes2","_stateObj$attributes3","_stateObj$attributes4","_stateObj$attributes5","_stateObj$attributes6","_precipitation_unit","precipitation_unit","_pressure_unit","pressure_unit","_temperature_unit","temperature_unit","_visibility_unit","visibility_unit","_wind_speed_unit","wind_speed_unit","deviceClasses","_deviceClassOptions","deviceClass","includes","push","precisionLabel","precision","stateValue","stateValueNumber","Number","isNaN","locale","minimumFractionDigits","maximumFractionDigits","_isInvalidDefaultCode","codeFormat","RegExp","test","updated","changedProps","units","_numberDeviceClassConvertibleUnits","numeric_device_classes","_sensorNumericalDeviceClasses","_sensorDeviceClassConvertibleUnits","_weatherConvertibleUnits","_this$helperConfigEnt","helperConfigEntry","_switchAsDomain","render","_stateObj$attributes7","_this$entry$options$s","_this$entry$options4","_this$helperConfigEnt2","_this$entry$options5","_this$_numberDeviceCl","_this$_sensorDeviceCl","_this$_sensorNumerica","_this$_weatherConvert","_this$_weatherConvert2","_this$_weatherConvert3","_this$_weatherConvert4","_this$_weatherConvert5","_this$_device","_this$hass$areas","_this$_device2","invalidDefaultCode","code_format","defaultPrecision","suggested_display_precision","hideName","localize","disabled","original_name","_nameChanged","hideIcon","_iconChanged","original_icon","_switchAsDomainChanged","_switchAsDomainsSorted","map","label","_switchAsInvertChanged","_deviceClassChanged","_deviceClassesSorted","length","_unitChanged","unit","_defaultcodeChanged","state_class","toString","_precisionChanged","_precipitationUnitChanged","_pressureUnitChanged","_temperatureUnitChanged","_visibilityUnitChanged","_windSpeedUnitChanged","_entityIdChanged","_copyEntityId","_areaPicked","_cameraPrefs","preload_stream","_handleCameraPrefsChanged","_handleCameraOrientationChanged","num","localizeStr","supports_options","_showOptionsFlow","integration","_handleVoiceAssistantsClicked","aliases","sort","a","b","language","join","cause","_enabledChanged","_hiddenChanged","areas","link","_openDeviceSettings","_noDeviceArea","_useDeviceAreaChanged","updateEntry","_stateObj$attributes8","_this$entry$options7","_this$entry$options9","_stateObj$attributes9","_stateObj$attributes10","_stateObj$attributes11","_stateObj$attributes12","_stateObj$attributes13","_this$helperConfigEnt3","_this$helperConfigEnt4","_this$entry$options12","close","parent","_parent","localName","getRootNode","host","params","trim","new_entity_id","_this$entry$options6","options_domain","_this$entry$options8","_this$entry$options10","visbility_unit","result","require_restart","text","reload_delay","delay","toLowerCase","_configFlowResult$res","configFlow","configFlowResult","flow_id","target_domain","entry_id","_waitForEntityRegistryUpdate","entityId","err","domain_1","domain_2","_this$entry$options11","origEntityId","_configFlowResult$res2","_this$entry$options13","entity_entry","config_entry_id","Promise","resolve","reject","_this$hass$connection","timeout","setTimeout","unsub","connection","entityRegistry","entity","find","reg","clearTimeout","_entityRegistry","refresh","ev","target","detail","message","switchAs","checked","checkbox","currentTarget","orientation","device","updates","domains","static","styles"],"sources":["/Users/sercanardil/Desktop/frontend/src/panels/config/entities/entity-registry-settings-editor.ts"],"sourcesContent":["import \"@material/mwc-button/mwc-button\";\nimport \"@material/mwc-formfield/mwc-formfield\";\nimport { mdiContentCopy } from \"@mdi/js\";\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport {\n  css,\n  CSSResultGroup,\n  html,\n  LitElement,\n  nothing,\n  PropertyValues,\n} from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { until } from \"lit/directives/until\";\nimport memoizeOne from \"memoize-one\";\nimport { isComponentLoaded } from \"../../../common/config/is_component_loaded\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport { stopPropagation } from \"../../../common/dom/stop_propagation\";\nimport { computeDomain } from \"../../../common/entity/compute_domain\";\nimport { computeObjectId } from \"../../../common/entity/compute_object_id\";\nimport { supportsFeature } from \"../../../common/entity/supports-feature\";\nimport { formatNumber } from \"../../../common/number/format_number\";\nimport { stringCompare } from \"../../../common/string/compare\";\nimport {\n  LocalizeFunc,\n  LocalizeKeys,\n} from \"../../../common/translations/localize\";\nimport { copyToClipboard } from \"../../../common/util/copy-clipboard\";\nimport \"../../../components/ha-alert\";\nimport \"../../../components/ha-area-picker\";\nimport \"../../../components/ha-icon\";\nimport \"../../../components/ha-icon-button-next\";\nimport \"../../../components/ha-icon-picker\";\nimport \"../../../components/ha-state-icon\";\nimport \"../../../components/ha-list-item\";\nimport \"../../../components/ha-radio\";\nimport \"../../../components/ha-select\";\nimport \"../../../components/ha-settings-row\";\nimport \"../../../components/ha-switch\";\nimport type { HaSwitch } from \"../../../components/ha-switch\";\nimport \"../../../components/ha-textfield\";\nimport {\n  CAMERA_ORIENTATIONS,\n  CAMERA_SUPPORT_STREAM,\n  CameraPreferences,\n  fetchCameraPrefs,\n  STREAM_TYPE_HLS,\n  updateCameraPrefs,\n} from \"../../../data/camera\";\nimport { ConfigEntry, deleteConfigEntry } from \"../../../data/config_entries\";\nimport {\n  createConfigFlow,\n  handleConfigFlowStep,\n} from \"../../../data/config_flow\";\nimport {\n  createOptionsFlow,\n  handleOptionsFlowStep,\n} from \"../../../data/options_flow\";\nimport { DataEntryFlowStepCreateEntry } from \"../../../data/data_entry_flow\";\nimport {\n  DeviceRegistryEntry,\n  updateDeviceRegistryEntry,\n} from \"../../../data/device_registry\";\nimport {\n  EntityRegistryEntry,\n  EntityRegistryEntryUpdateParams,\n  ExtEntityRegistryEntry,\n  LockEntityOptions,\n  SensorEntityOptions,\n  subscribeEntityRegistry,\n  updateEntityRegistryEntry,\n} from \"../../../data/entity_registry\";\nimport { entityIcon } from \"../../../data/icons\";\nimport { domainToName } from \"../../../data/integration\";\nimport { getNumberDeviceClassConvertibleUnits } from \"../../../data/number\";\nimport {\n  getSensorDeviceClassConvertibleUnits,\n  getSensorNumericDeviceClasses,\n} from \"../../../data/sensor\";\nimport {\n  getWeatherConvertibleUnits,\n  WeatherUnits,\n} from \"../../../data/weather\";\nimport { showOptionsFlowDialog } from \"../../../dialogs/config-flow/show-dialog-options-flow\";\nimport {\n  showAlertDialog,\n  showConfirmationDialog,\n} from \"../../../dialogs/generic/show-dialog-box\";\nimport { showVoiceAssistantsView } from \"../../../dialogs/more-info/components/voice/show-view-voice-assistants\";\nimport { showMoreInfoDialog } from \"../../../dialogs/more-info/show-ha-more-info-dialog\";\nimport { haStyle } from \"../../../resources/styles\";\nimport type { HomeAssistant } from \"../../../types\";\nimport { showToast } from \"../../../util/toast\";\nimport { showDeviceRegistryDetailDialog } from \"../devices/device-registry-detail/show-dialog-device-registry-detail\";\n\nconst OVERRIDE_DEVICE_CLASSES = {\n  cover: [\n    [\n      \"awning\",\n      \"blind\",\n      \"curtain\",\n      \"damper\",\n      \"door\",\n      \"garage\",\n      \"gate\",\n      \"shade\",\n      \"shutter\",\n      \"window\",\n    ],\n  ],\n  binary_sensor: [\n    [\"lock\"], // Lock\n    [\"window\", \"door\", \"garage_door\", \"opening\"], // Door\n    [\"battery\", \"battery_charging\"], // Battery\n    [\"cold\", \"gas\", \"heat\"], // Climate\n    [\"running\", \"motion\", \"moving\", \"occupancy\", \"presence\", \"vibration\"], // Presence\n    [\"power\", \"plug\", \"light\"], // Power\n    [\n      \"smoke\",\n      \"safety\",\n      \"sound\",\n      \"problem\",\n      \"tamper\",\n      \"carbon_monoxide\",\n      \"moisture\",\n    ], // Alarm\n    [\"connectivity\"], // Connectivity\n    [\"update\"], // Update\n  ],\n};\n\nconst SWITCH_AS_DOMAINS = [\"cover\", \"fan\", \"light\", \"lock\", \"siren\", \"valve\"];\nconst SWITCH_AS_DOMAINS_INVERT = [\"cover\", \"lock\", \"valve\"];\n\nconst PRECISIONS = [0, 1, 2, 3, 4, 5, 6];\n\n@customElement(\"entity-registry-settings-editor\")\nexport class EntityRegistrySettingsEditor extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ type: Object }) public entry!: ExtEntityRegistryEntry;\n\n  @property({ type: Boolean }) public hideName = false;\n\n  @property({ type: Boolean }) public hideIcon = false;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @property({ attribute: false }) public helperConfigEntry?: ConfigEntry;\n\n  @state() private _name!: string;\n\n  @state() private _icon!: string;\n\n  @state() private _entityId!: string;\n\n  @state() private _deviceClass?: string;\n\n  @state() private _switchAsDomain = \"switch\";\n\n  @state() private _switchAsInvert = false;\n\n  @state() private _areaId?: string | null;\n\n  @state() private _disabledBy!: EntityRegistryEntry[\"disabled_by\"];\n\n  @state() private _hiddenBy!: EntityRegistryEntry[\"hidden_by\"];\n\n  @state() private _device?: DeviceRegistryEntry;\n\n  @state() private _unit_of_measurement?: string | null;\n\n  @state() private _precision?: number | null;\n\n  @state() private _precipitation_unit?: string | null;\n\n  @state() private _pressure_unit?: string | null;\n\n  @state() private _temperature_unit?: string | null;\n\n  @state() private _visibility_unit?: string | null;\n\n  @state() private _wind_speed_unit?: string | null;\n\n  @state() private _cameraPrefs?: CameraPreferences;\n\n  @state() private _numberDeviceClassConvertibleUnits?: string[];\n\n  @state() private _sensorDeviceClassConvertibleUnits?: string[];\n\n  @state() private _sensorNumericalDeviceClasses?: string[];\n\n  @state() private _weatherConvertibleUnits?: WeatherUnits;\n\n  @state() private _defaultCode?: string | null;\n\n  @state() private _noDeviceArea?: boolean;\n\n  private _origEntityId!: string;\n\n  private _deviceClassOptions?: string[][];\n\n  protected willUpdate(changedProperties: PropertyValues) {\n    super.willUpdate(changedProperties);\n    if (\n      !changedProperties.has(\"entry\") ||\n      changedProperties.get(\"entry\")?.id === this.entry.id\n    ) {\n      return;\n    }\n\n    this._name = this.entry.name || \"\";\n    this._icon = this.entry.icon || \"\";\n    this._deviceClass =\n      this.entry.device_class || this.entry.original_device_class;\n    this._origEntityId = this.entry.entity_id;\n    this._areaId = this.entry.area_id;\n    this._entityId = this.entry.entity_id;\n    this._disabledBy = this.entry.disabled_by;\n    this._hiddenBy = this.entry.hidden_by;\n    this._device = this.entry.device_id\n      ? this.hass.devices[this.entry.device_id]\n      : undefined;\n    this._switchAsInvert = this.entry.options?.switch_as_x?.invert === true;\n\n    const domain = computeDomain(this.entry.entity_id);\n\n    if (domain === \"camera\" && isComponentLoaded(this.hass, \"stream\")) {\n      const stateObj: HassEntity | undefined =\n        this.hass.states[this.entry.entity_id];\n      if (\n        stateObj &&\n        supportsFeature(stateObj, CAMERA_SUPPORT_STREAM) &&\n        // The stream component for HLS streams supports a server-side pre-load\n        // option that client initiated WebRTC streams do not\n        stateObj.attributes.frontend_stream_type === STREAM_TYPE_HLS\n      ) {\n        this._fetchCameraPrefs();\n      }\n    }\n\n    if (domain === \"number\" || domain === \"sensor\") {\n      const stateObj: HassEntity | undefined =\n        this.hass.states[this.entry.entity_id];\n      this._unit_of_measurement = stateObj?.attributes?.unit_of_measurement;\n    }\n\n    if (domain === \"sensor\") {\n      this._precision = this.entry.options?.sensor?.display_precision;\n    }\n\n    if (domain === \"lock\") {\n      this._defaultCode = this.entry.options?.lock?.default_code;\n    }\n\n    if (domain === \"weather\") {\n      const stateObj: HassEntity | undefined =\n        this.hass.states[this.entry.entity_id];\n      this._precipitation_unit = stateObj?.attributes?.precipitation_unit;\n      this._pressure_unit = stateObj?.attributes?.pressure_unit;\n      this._temperature_unit = stateObj?.attributes?.temperature_unit;\n      this._visibility_unit = stateObj?.attributes?.visibility_unit;\n      this._wind_speed_unit = stateObj?.attributes?.wind_speed_unit;\n    }\n\n    const deviceClasses: string[][] = OVERRIDE_DEVICE_CLASSES[domain];\n\n    if (!deviceClasses) {\n      return;\n    }\n\n    this._deviceClassOptions = [[], []];\n    for (const deviceClass of deviceClasses) {\n      if (deviceClass.includes(this.entry.original_device_class!)) {\n        this._deviceClassOptions[0] = deviceClass;\n      } else {\n        this._deviceClassOptions[1].push(...deviceClass);\n      }\n    }\n  }\n\n  private precisionLabel(precision?: number, stateValue?: string) {\n    const stateValueNumber = Number(stateValue);\n    const value = !isNaN(stateValueNumber) ? stateValue! : 0;\n    return formatNumber(value, this.hass.locale, {\n      minimumFractionDigits: precision,\n      maximumFractionDigits: precision,\n    });\n  }\n\n  private _isInvalidDefaultCode(\n    codeFormat?: string,\n    value?: string | null\n  ): boolean {\n    if (codeFormat && value) {\n      return !RegExp(codeFormat).test(value);\n    }\n    return false;\n  }\n\n  protected async updated(changedProps: PropertyValues): Promise<void> {\n    if (changedProps.has(\"_deviceClass\")) {\n      const domain = computeDomain(this.entry.entity_id);\n\n      if (domain === \"number\" && this._deviceClass) {\n        const { units } = await getNumberDeviceClassConvertibleUnits(\n          this.hass,\n          this._deviceClass\n        );\n        this._numberDeviceClassConvertibleUnits = units;\n      } else {\n        this._numberDeviceClassConvertibleUnits = [];\n      }\n      if (domain === \"sensor\") {\n        const { numeric_device_classes } = await getSensorNumericDeviceClasses(\n          this.hass\n        );\n        this._sensorNumericalDeviceClasses = numeric_device_classes;\n      } else {\n        this._sensorNumericalDeviceClasses = [];\n      }\n      if (domain === \"sensor\" && this._deviceClass) {\n        const { units } = await getSensorDeviceClassConvertibleUnits(\n          this.hass,\n          this._deviceClass\n        );\n        this._sensorDeviceClassConvertibleUnits = units;\n      } else {\n        this._sensorDeviceClassConvertibleUnits = [];\n      }\n    }\n    if (changedProps.has(\"_entityId\")) {\n      const domain = computeDomain(this.entry.entity_id);\n\n      if (domain === \"weather\") {\n        const { units } = await getWeatherConvertibleUnits(this.hass);\n        this._weatherConvertibleUnits = units;\n      } else {\n        this._weatherConvertibleUnits = undefined;\n      }\n    }\n    if (changedProps.has(\"helperConfigEntry\")) {\n      if (this.helperConfigEntry?.domain === \"switch_as_x\") {\n        this._switchAsDomain = computeDomain(this.entry.entity_id);\n      } else {\n        this._switchAsDomain = \"switch\";\n        this._switchAsInvert = false;\n      }\n    }\n  }\n\n  protected render() {\n    if (this.entry.entity_id !== this._origEntityId) {\n      return nothing;\n    }\n    const stateObj: HassEntity | undefined =\n      this.hass.states[this.entry.entity_id];\n\n    const domain = computeDomain(this.entry.entity_id);\n\n    const invalidDefaultCode =\n      domain === \"lock\" &&\n      this._isInvalidDefaultCode(\n        stateObj?.attributes?.code_format,\n        this._defaultCode\n      );\n\n    const defaultPrecision =\n      this.entry.options?.sensor?.suggested_display_precision ?? undefined;\n\n    return html`\n      ${this.hideName\n        ? nothing\n        : html`<ha-textfield\n            .value=${this._name}\n            .label=${this.hass.localize(\n              \"ui.dialogs.entity_registry.editor.name\"\n            )}\n            .disabled=${this.disabled}\n            .placeholder=${this.entry.original_name}\n            @input=${this._nameChanged}\n          ></ha-textfield>`}\n      ${this.hideIcon\n        ? nothing\n        : html`\n            <ha-icon-picker\n              .hass=${this.hass}\n              .value=${this._icon}\n              @value-changed=${this._iconChanged}\n              .label=${this.hass.localize(\n                \"ui.dialogs.entity_registry.editor.icon\"\n              )}\n              .placeholder=${this.entry.original_icon ||\n              stateObj?.attributes.icon ||\n              (stateObj && until(entityIcon(this.hass, stateObj)))}\n              .disabled=${this.disabled}\n            >\n              ${!this._icon && !stateObj?.attributes.icon && stateObj\n                ? html`\n                    <ha-state-icon\n                      slot=\"fallback\"\n                      .hass=${this.hass}\n                      .stateObj=${stateObj}\n                    ></ha-state-icon>\n                  `\n                : nothing}\n            </ha-icon-picker>\n          `}\n      ${domain === \"switch\"\n        ? html`<ha-select\n            .label=${this.hass.localize(\n              \"ui.dialogs.entity_registry.editor.device_class\"\n            )}\n            naturalMenuWidth\n            fixedMenuPosition\n            @selected=${this._switchAsDomainChanged}\n            @closed=${stopPropagation}\n          >\n            <ha-list-item\n              value=\"switch\"\n              .selected=${!this._deviceClass || this._deviceClass === \"switch\"}\n            >\n              ${domainToName(this.hass.localize, \"switch\")}\n            </ha-list-item>\n            <ha-list-item\n              value=\"outlet\"\n              .selected=${this._deviceClass === \"outlet\"}\n            >\n              ${this.hass.localize(\n                \"ui.dialogs.entity_registry.editor.device_classes.switch.outlet\"\n              )}\n            </ha-list-item>\n            <li divider role=\"separator\"></li>\n            ${this._switchAsDomainsSorted(\n              SWITCH_AS_DOMAINS,\n              this.hass.localize\n            ).map(\n              (entry) => html`\n                <ha-list-item .value=${entry.domain}>\n                  ${entry.label}\n                </ha-list-item>\n              `\n            )}\n          </ha-select>`\n        : this.helperConfigEntry?.domain === \"switch_as_x\"\n          ? html`<ha-select\n                .label=${this.hass.localize(\n                  \"ui.dialogs.entity_registry.editor.switch_as_x\"\n                )}\n                .value=${this._switchAsDomain}\n                naturalMenuWidth\n                fixedMenuPosition\n                @selected=${this._switchAsDomainChanged}\n                @closed=${stopPropagation}\n              >\n                <ha-list-item value=\"switch\">\n                  ${domainToName(this.hass.localize, \"switch\")}\n                </ha-list-item>\n                <ha-list-item .value=${domain}>\n                  ${domainToName(this.hass.localize, domain)}\n                </ha-list-item>\n                <li divider role=\"separator\"></li>\n                ${this._switchAsDomainsSorted(\n                  SWITCH_AS_DOMAINS,\n                  this.hass.localize\n                ).map((entry) =>\n                  domain === entry.domain\n                    ? nothing\n                    : html`\n                        <ha-list-item .value=${entry.domain}>\n                          ${entry.label}\n                        </ha-list-item>\n                      `\n                )}\n              </ha-select>\n              ${SWITCH_AS_DOMAINS_INVERT.includes(this._switchAsDomain)\n                ? html`\n                    <ha-settings-row>\n                      <span slot=\"heading\"\n                        >${this.hass.localize(\n                          \"ui.dialogs.entity_registry.editor.invert.label\"\n                        )}</span\n                      >\n                      <span slot=\"description\"\n                        >${this.hass.localize(\n                          `ui.dialogs.entity_registry.editor.invert.descriptions.${this._switchAsDomain}`\n                        )}</span\n                      >\n                      <ha-switch\n                        .checked=${this.entry.options?.switch_as_x?.invert}\n                        @change=${this._switchAsInvertChanged}\n                      ></ha-switch>\n                    </ha-settings-row>\n                  `\n                : nothing} `\n          : nothing}\n      ${this._deviceClassOptions\n        ? html`\n            <ha-select\n              .label=${this.hass.localize(\n                \"ui.dialogs.entity_registry.editor.device_class\"\n              )}\n              .value=${this._deviceClass}\n              naturalMenuWidth\n              fixedMenuPosition\n              clearable\n              @selected=${this._deviceClassChanged}\n              @closed=${stopPropagation}\n            >\n              ${this._deviceClassesSorted(\n                domain,\n                this._deviceClassOptions[0],\n                this.hass.localize\n              ).map(\n                (entry) => html`\n                  <ha-list-item .value=${entry.deviceClass}>\n                    ${entry.label}\n                  </ha-list-item>\n                `\n              )}\n              ${this._deviceClassOptions[0].length &&\n              this._deviceClassOptions[1].length\n                ? html`<li divider role=\"separator\"></li>`\n                : \"\"}\n              ${this._deviceClassesSorted(\n                domain,\n                this._deviceClassOptions[1],\n                this.hass.localize\n              ).map(\n                (entry) => html`\n                  <ha-list-item .value=${entry.deviceClass}>\n                    ${entry.label}\n                  </ha-list-item>\n                `\n              )}\n            </ha-select>\n          `\n        : \"\"}\n      ${domain === \"number\" &&\n      this._deviceClass &&\n      stateObj?.attributes.unit_of_measurement &&\n      this._numberDeviceClassConvertibleUnits?.includes(\n        stateObj?.attributes.unit_of_measurement\n      )\n        ? html`\n            <ha-select\n              .label=${this.hass.localize(\n                \"ui.dialogs.entity_registry.editor.unit_of_measurement\"\n              )}\n              .value=${stateObj.attributes.unit_of_measurement}\n              naturalMenuWidth\n              fixedMenuPosition\n              @selected=${this._unitChanged}\n              @closed=${stopPropagation}\n            >\n              ${this._numberDeviceClassConvertibleUnits.map(\n                (unit: string) => html`\n                  <ha-list-item .value=${unit}>${unit}</ha-list-item>\n                `\n              )}\n            </ha-select>\n          `\n        : \"\"}\n      ${domain === \"lock\"\n        ? html`\n            <ha-textfield\n              .validationMessage=${this.hass.localize(\n                \"ui.dialogs.entity_registry.editor.default_code_error\"\n              )}\n              .value=${this._defaultCode == null ? \"\" : this._defaultCode}\n              .label=${this.hass.localize(\n                \"ui.dialogs.entity_registry.editor.default_code\"\n              )}\n              type=\"password\"\n              .invalid=${invalidDefaultCode}\n              .disabled=${this.disabled}\n              @input=${this._defaultcodeChanged}\n            ></ha-textfield>\n          `\n        : \"\"}\n      ${domain === \"sensor\" &&\n      this._deviceClass &&\n      stateObj?.attributes.unit_of_measurement &&\n      this._sensorDeviceClassConvertibleUnits?.includes(\n        stateObj?.attributes.unit_of_measurement\n      )\n        ? html`\n            <ha-select\n              .label=${this.hass.localize(\n                \"ui.dialogs.entity_registry.editor.unit_of_measurement\"\n              )}\n              .value=${stateObj.attributes.unit_of_measurement}\n              naturalMenuWidth\n              fixedMenuPosition\n              @selected=${this._unitChanged}\n              @closed=${stopPropagation}\n            >\n              ${this._sensorDeviceClassConvertibleUnits.map(\n                (unit: string) => html`\n                  <ha-list-item .value=${unit}>${unit}</ha-list-item>\n                `\n              )}\n            </ha-select>\n          `\n        : \"\"}\n      ${domain === \"sensor\" &&\n      // Allow customizing the precision for a sensor with numerical device class,\n      // a unit of measurement or state class\n      ((this._deviceClass &&\n        this._sensorNumericalDeviceClasses?.includes(this._deviceClass)) ||\n        stateObj?.attributes.unit_of_measurement ||\n        stateObj?.attributes.state_class)\n        ? html`\n            <ha-select\n              .label=${this.hass.localize(\n                \"ui.dialogs.entity_registry.editor.precision\"\n              )}\n              .value=${this._precision == null\n                ? \"default\"\n                : this._precision.toString()}\n              naturalMenuWidth\n              fixedMenuPosition\n              @selected=${this._precisionChanged}\n              @closed=${stopPropagation}\n            >\n              <ha-list-item value=\"default\"\n                >${this.hass.localize(\n                  \"ui.dialogs.entity_registry.editor.precision_default\",\n                  {\n                    value: this.precisionLabel(\n                      defaultPrecision,\n                      stateObj?.state\n                    ),\n                  }\n                )}</ha-list-item\n              >\n              ${PRECISIONS.map(\n                (precision) => html`\n                  <ha-list-item .value=${precision.toString()}>\n                    ${this.precisionLabel(precision, stateObj?.state)}\n                  </ha-list-item>\n                `\n              )}\n            </ha-select>\n          `\n        : \"\"}\n      ${domain === \"weather\"\n        ? html`\n            <ha-select\n              .label=${this.hass.localize(\n                \"ui.dialogs.entity_registry.editor.precipitation_unit\"\n              )}\n              .value=${this._precipitation_unit}\n              naturalMenuWidth\n              fixedMenuPosition\n              @selected=${this._precipitationUnitChanged}\n              @closed=${stopPropagation}\n            >\n              ${this._weatherConvertibleUnits?.precipitation_unit.map(\n                (unit: string) => html`\n                  <ha-list-item .value=${unit}>${unit}</ha-list-item>\n                `\n              )}\n            </ha-select>\n            <ha-select\n              .label=${this.hass.localize(\n                \"ui.dialogs.entity_registry.editor.pressure_unit\"\n              )}\n              .value=${this._pressure_unit}\n              naturalMenuWidth\n              fixedMenuPosition\n              @selected=${this._pressureUnitChanged}\n              @closed=${stopPropagation}\n            >\n              ${this._weatherConvertibleUnits?.pressure_unit.map(\n                (unit: string) => html`\n                  <ha-list-item .value=${unit}>${unit}</ha-list-item>\n                `\n              )}\n            </ha-select>\n            <ha-select\n              .label=${this.hass.localize(\n                \"ui.dialogs.entity_registry.editor.temperature_unit\"\n              )}\n              .value=${this._temperature_unit}\n              naturalMenuWidth\n              fixedMenuPosition\n              @selected=${this._temperatureUnitChanged}\n              @closed=${stopPropagation}\n            >\n              ${this._weatherConvertibleUnits?.temperature_unit.map(\n                (unit: string) => html`\n                  <ha-list-item .value=${unit}>${unit}</ha-list-item>\n                `\n              )}\n            </ha-select>\n            <ha-select\n              .label=${this.hass.localize(\n                \"ui.dialogs.entity_registry.editor.visibility_unit\"\n              )}\n              .value=${this._visibility_unit}\n              naturalMenuWidth\n              fixedMenuPosition\n              @selected=${this._visibilityUnitChanged}\n              @closed=${stopPropagation}\n            >\n              ${this._weatherConvertibleUnits?.visibility_unit.map(\n                (unit: string) => html`\n                  <ha-list-item .value=${unit}>${unit}</ha-list-item>\n                `\n              )}\n            </ha-select>\n            <ha-select\n              .label=${this.hass.localize(\n                \"ui.dialogs.entity_registry.editor.wind_speed_unit\"\n              )}\n              .value=${this._wind_speed_unit}\n              naturalMenuWidth\n              fixedMenuPosition\n              @selected=${this._windSpeedUnitChanged}\n              @closed=${stopPropagation}\n            >\n              ${this._weatherConvertibleUnits?.wind_speed_unit.map(\n                (unit: string) => html`\n                  <ha-list-item .value=${unit}>${unit}</ha-list-item>\n                `\n              )}\n            </ha-select>\n          `\n        : \"\"}\n      <ha-textfield\n        class=\"entityId\"\n        .value=${computeObjectId(this._entityId)}\n        .prefix=${domain + \".\"}\n        .label=${this.hass.localize(\n          \"ui.dialogs.entity_registry.editor.entity_id\"\n        )}\n        .disabled=${this.disabled}\n        required\n        @input=${this._entityIdChanged}\n        iconTrailing\n        autocapitalize=\"none\"\n        autocomplete=\"off\"\n        autocorrect=\"off\"\n        input-spellcheck=\"false\"\n      >\n        <ha-icon-button\n          @click=${this._copyEntityId}\n          slot=\"trailingIcon\"\n          .path=${mdiContentCopy}\n        ></ha-icon-button>\n      </ha-textfield>\n      ${!this.entry.device_id\n        ? html`<ha-area-picker\n            .hass=${this.hass}\n            .value=${this._areaId}\n            .disabled=${this.disabled}\n            @value-changed=${this._areaPicked}\n          ></ha-area-picker>`\n        : \"\"}\n      ${this._cameraPrefs\n        ? html`\n            <ha-settings-row>\n              <span slot=\"heading\"\n                >${this.hass.localize(\n                  \"ui.dialogs.entity_registry.editor.stream.preload_stream\"\n                )}</span\n              >\n              <span slot=\"description\"\n                >${this.hass.localize(\n                  \"ui.dialogs.entity_registry.editor.stream.preload_stream_description\"\n                )}</span\n              >\n              <ha-switch\n                .checked=${this._cameraPrefs.preload_stream}\n                .disabled=${this.disabled}\n                @change=${this._handleCameraPrefsChanged}\n              >\n              </ha-switch>\n            </ha-settings-row>\n            <ha-settings-row>\n              <span slot=\"heading\"\n                >${this.hass.localize(\n                  \"ui.dialogs.entity_registry.editor.stream.stream_orientation\"\n                )}</span\n              >\n              <span slot=\"description\"\n                >${this.hass.localize(\n                  \"ui.dialogs.entity_registry.editor.stream.stream_orientation_description\"\n                )}</span\n              >\n              <ha-select\n                .label=${this.hass.localize(\n                  \"ui.dialogs.entity_registry.editor.stream.stream_orientation\"\n                )}\n                naturalMenuWidth\n                fixedMenuPosition\n                .disabled=${this.disabled}\n                @selected=${this._handleCameraOrientationChanged}\n                @closed=${stopPropagation}\n              >\n                ${CAMERA_ORIENTATIONS.map((num) => {\n                  const localizeStr =\n                    \"ui.dialogs.entity_registry.editor.stream.stream_orientation_\" +\n                    num.toString();\n                  return html`\n                    <ha-list-item value=${num}>\n                      ${this.hass.localize(localizeStr as LocalizeKeys)}\n                    </ha-list-item>\n                  `;\n                })}\n              </ha-select>\n            </ha-settings-row>\n          `\n        : \"\"}\n      ${this.helperConfigEntry &&\n      this.helperConfigEntry.supports_options &&\n      this.helperConfigEntry.domain !== \"switch_as_x\"\n        ? html`\n            <ha-list-item\n              class=\"menu-item\"\n              twoline\n              hasMeta\n              .disabled=${this.disabled}\n              @click=${this._showOptionsFlow}\n            >\n              <span\n                >${this.hass.localize(\n                  \"ui.dialogs.entity_registry.editor.configure_state\",\n                  {\n                    integration: domainToName(\n                      this.hass.localize,\n                      this.helperConfigEntry.domain\n                    ),\n                  }\n                )}</span\n              >\n              <span slot=\"secondary\"\n                >${this.hass.localize(\n                  \"ui.dialogs.entity_registry.editor.configure_state_secondary\",\n                  {\n                    integration: domainToName(\n                      this.hass.localize,\n                      this.helperConfigEntry.domain\n                    ),\n                  }\n                )}</span\n              >\n              <ha-icon-next slot=\"meta\"></ha-icon-next>\n            </ha-list-item>\n          `\n        : \"\"}\n\n      <ha-list-item\n        class=\"menu-item\"\n        twoline\n        hasMeta\n        .disabled=${this.disabled}\n        @click=${this._handleVoiceAssistantsClicked}\n      >\n        <span\n          >${this.hass.localize(\n            \"ui.dialogs.entity_registry.editor.voice_assistants\"\n          )}</span\n        >\n        <span slot=\"secondary\">\n          ${this.entry.aliases.length\n            ? [...this.entry.aliases]\n                .sort((a, b) => stringCompare(a, b, this.hass.locale.language))\n                .join(\", \")\n            : this.hass.localize(\n                \"ui.dialogs.entity_registry.editor.no_aliases\"\n              )}\n        </span>\n        <ha-icon-next slot=\"meta\"></ha-icon-next>\n      </ha-list-item>\n\n      ${this._disabledBy &&\n      this._disabledBy !== \"user\" &&\n      this._disabledBy !== \"integration\"\n        ? html`<ha-alert alert-type=\"warning\"\n            >${this.hass.localize(\n              \"ui.dialogs.entity_registry.editor.enabled_cause\",\n              {\n                cause: this.hass.localize(\n                  `config_entry.disabled_by.${this._disabledBy!}`\n                ),\n              }\n            )}</ha-alert\n          >`\n        : \"\"}\n\n      <ha-settings-row>\n        <span slot=\"heading\"\n          >${this.hass.localize(\n            \"ui.dialogs.entity_registry.editor.enabled_label\"\n          )}</span\n        >\n        <span slot=\"description\"\n          >${this.hass.localize(\n            \"ui.dialogs.entity_registry.editor.enabled_description\"\n          )}</span\n        >\n        <ha-switch\n          .checked=${!this._disabledBy}\n          .disabled=${this.disabled ||\n          this._device?.disabled_by ||\n          (this._disabledBy &&\n            this._disabledBy !== \"user\" &&\n            this._disabledBy !== \"integration\")}\n          @change=${this._enabledChanged}\n        ></ha-switch>\n      </ha-settings-row>\n\n      ${this._hiddenBy && this._hiddenBy !== \"user\"\n        ? html`<ha-alert alert-type=\"warning\"\n            >${this.hass.localize(\n              \"ui.dialogs.entity_registry.editor.hidden_cause\",\n              {\n                cause: this.hass.localize(\n                  `config_entry.hidden_by.${this._hiddenBy!}`\n                ),\n              }\n            )}</ha-alert\n          >`\n        : \"\"}\n\n      <ha-settings-row>\n        <span slot=\"heading\"\n          >${this.hass.localize(\n            \"ui.dialogs.entity_registry.editor.visible_label\"\n          )}</span\n        >\n        <span slot=\"description\"\n          >${this.hass.localize(\n            \"ui.dialogs.entity_registry.editor.hidden_description\"\n          )}</span\n        >\n        <ha-switch\n          .checked=${!this._disabledBy && !this._hiddenBy}\n          .disabled=${this.disabled ||\n          this._disabledBy ||\n          (this._hiddenBy && this._hiddenBy !== \"user\")}\n          @change=${this._hiddenChanged}\n        ></ha-switch>\n      </ha-settings-row>\n\n      ${this.entry.device_id\n        ? html`<ha-settings-row>\n              <span slot=\"heading\"\n                >${this.hass.localize(\n                  \"ui.dialogs.entity_registry.editor.use_device_area\"\n                )}\n                ${this.hass.devices[this.entry.device_id].area_id\n                  ? `(${\n                      this.hass.areas[\n                        this.hass.devices[this.entry.device_id].area_id!\n                      ]?.name\n                    })`\n                  : \"\"}</span\n              >\n              <span slot=\"description\"\n                >${this.hass.localize(\n                  \"ui.dialogs.entity_registry.editor.change_device_settings\",\n                  {\n                    link: html`<button\n                      class=\"link\"\n                      @click=${this._openDeviceSettings}\n                    >\n                      ${this.hass.localize(\n                        \"ui.dialogs.entity_registry.editor.change_device_area_link\"\n                      )}\n                    </button>`,\n                  }\n                )}</span\n              >\n              <ha-switch\n                .checked=${!this._areaId || this._noDeviceArea}\n                .disabled=${this.disabled}\n                @change=${this._useDeviceAreaChanged}\n              >\n              </ha-switch\n            ></ha-settings-row>\n            ${this._areaId || this._noDeviceArea\n              ? html`<ha-area-picker\n                  .hass=${this.hass}\n                  .value=${this._areaId}\n                  .placeholder=${this._device?.area_id}\n                  .disabled=${this.disabled}\n                  @value-changed=${this._areaPicked}\n                ></ha-area-picker>`\n              : \"\"} `\n        : \"\"}\n    `;\n  }\n\n  public async updateEntry(): Promise<{\n    close: boolean;\n    entry: ExtEntityRegistryEntry;\n  }> {\n    let close = true;\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let parent: HTMLElement = this;\n    while (parent?.localName !== \"home-assistant\") {\n      parent = (parent.getRootNode() as ShadowRoot).host as HTMLElement;\n    }\n\n    const params: Partial<EntityRegistryEntryUpdateParams> = {\n      name: this._name.trim() || null,\n      icon: this._icon.trim() || null,\n      area_id: this._areaId || null,\n      new_entity_id: this._entityId.trim(),\n    };\n\n    // Only update device class if changed by user\n    if (\n      this._deviceClass !==\n      (this.entry.device_class || this.entry.original_device_class)\n    ) {\n      params.device_class = this._deviceClass;\n    }\n\n    const stateObj: HassEntity | undefined =\n      this.hass.states[this.entry.entity_id];\n    const domain = computeDomain(this.entry.entity_id);\n\n    if (\n      this.entry.disabled_by !== this._disabledBy &&\n      (this._disabledBy === null || this._disabledBy === \"user\")\n    ) {\n      params.disabled_by = this._disabledBy;\n    }\n    if (\n      this.entry.hidden_by !== this._hiddenBy &&\n      (this._hiddenBy === null || this._hiddenBy === \"user\")\n    ) {\n      params.hidden_by = this._hiddenBy;\n    }\n    if (\n      (domain === \"number\" || domain === \"sensor\") &&\n      stateObj?.attributes?.unit_of_measurement !== this._unit_of_measurement\n    ) {\n      params.options_domain = domain;\n      params.options = this.entry.options?.[domain] || {};\n      params.options.unit_of_measurement = this._unit_of_measurement;\n    }\n    if (\n      domain === \"sensor\" &&\n      this.entry.options?.[domain]?.display_precision !== this._precision\n    ) {\n      params.options_domain = domain;\n      params.options = params.options || this.entry.options?.[domain] || {};\n      (params.options as SensorEntityOptions).display_precision =\n        this._precision;\n    }\n    if (\n      domain === \"lock\" &&\n      this.entry.options?.[domain]?.default_code !== this._defaultCode\n    ) {\n      params.options_domain = domain;\n      params.options = this.entry.options?.[domain] || {};\n      (params.options as LockEntityOptions).default_code = this._defaultCode;\n    }\n    if (\n      domain === \"weather\" &&\n      (stateObj?.attributes?.precipitation_unit !== this._precipitation_unit ||\n        stateObj?.attributes?.pressure_unit !== this._pressure_unit ||\n        stateObj?.attributes?.temperature_unit !== this._temperature_unit ||\n        stateObj?.attributes?.visbility_unit !== this._visibility_unit ||\n        stateObj?.attributes?.wind_speed_unit !== this._wind_speed_unit)\n    ) {\n      params.options_domain = \"weather\";\n      params.options = {\n        precipitation_unit: this._precipitation_unit,\n        pressure_unit: this._pressure_unit,\n        temperature_unit: this._temperature_unit,\n        visibility_unit: this._visibility_unit,\n        wind_speed_unit: this._wind_speed_unit,\n      };\n    }\n\n    const result = await updateEntityRegistryEntry(\n      this.hass!,\n      this.entry.entity_id,\n      params\n    );\n    if (result.require_restart) {\n      showAlertDialog(this, {\n        text: this.hass.localize(\n          \"ui.dialogs.entity_registry.editor.enabled_restart_confirm\"\n        ),\n      });\n    }\n    if (result.reload_delay) {\n      showAlertDialog(this, {\n        text: this.hass.localize(\n          \"ui.dialogs.entity_registry.editor.enabled_delay_confirm\",\n          { delay: result.reload_delay }\n        ),\n      });\n    }\n\n    if (domain === \"switch\" && this._switchAsDomain !== \"switch\") {\n      // generate config flow for switch_as_x\n      if (\n        await showConfirmationDialog(this, {\n          text: this.hass!.localize(\n            \"ui.dialogs.entity_registry.editor.switch_as_x_confirm\",\n            {\n              domain: domainToName(\n                this.hass.localize,\n                this._switchAsDomain\n              ).toLowerCase(),\n            }\n          ),\n        })\n      ) {\n        const configFlow = await createConfigFlow(this.hass, \"switch_as_x\");\n        const configFlowResult = (await handleConfigFlowStep(\n          this.hass,\n          configFlow.flow_id,\n          {\n            entity_id: this._entityId.trim(),\n            invert: this._switchAsInvert,\n            target_domain: this._switchAsDomain,\n          }\n        )) as DataEntryFlowStepCreateEntry;\n        if (configFlowResult.result?.entry_id) {\n          try {\n            const entry = await this._waitForEntityRegistryUpdate(\n              configFlowResult.result.entry_id\n            );\n            showMoreInfoDialog(parent, { entityId: entry.entity_id });\n            close = false;\n          } catch (err) {\n            // ignore\n          }\n        }\n      }\n    } else if (\n      this.helperConfigEntry?.domain === \"switch_as_x\" &&\n      this._switchAsDomain !== domain\n    ) {\n      // change a current switch as x to something else\n      if (\n        await showConfirmationDialog(this, {\n          text:\n            this._switchAsDomain === \"switch\"\n              ? this.hass!.localize(\n                  \"ui.dialogs.entity_registry.editor.switch_as_x_remove_confirm\",\n                  {\n                    domain: domainToName(\n                      this.hass.localize,\n                      domain\n                    ).toLowerCase(),\n                  }\n                )\n              : this.hass!.localize(\n                  \"ui.dialogs.entity_registry.editor.switch_as_x_change_confirm\",\n                  {\n                    domain_1: domainToName(\n                      this.hass.localize,\n                      domain\n                    ).toLowerCase(),\n                    domain_2: domainToName(\n                      this.hass.localize,\n                      this._switchAsDomain\n                    ).toLowerCase(),\n                  }\n                ),\n        })\n      ) {\n        const origEntityId = this.entry.options?.switch_as_x?.entity_id;\n        // remove current helper\n        await deleteConfigEntry(this.hass, this.helperConfigEntry.entry_id);\n\n        if (!origEntityId) {\n          // should not happen, guard for types\n        } else if (this._switchAsDomain === \"switch\") {\n          // done, original switch is back\n          showMoreInfoDialog(parent, { entityId: origEntityId });\n          close = false;\n        } else {\n          const configFlow = await createConfigFlow(this.hass, \"switch_as_x\");\n          const configFlowResult = (await handleConfigFlowStep(\n            this.hass,\n            configFlow.flow_id,\n            {\n              entity_id: origEntityId,\n              invert: this._switchAsInvert,\n              target_domain: this._switchAsDomain,\n            }\n          )) as DataEntryFlowStepCreateEntry;\n          if (configFlowResult.result?.entry_id) {\n            try {\n              const entry = await this._waitForEntityRegistryUpdate(\n                configFlowResult.result.entry_id\n              );\n              showMoreInfoDialog(parent, { entityId: entry.entity_id });\n              close = false;\n            } catch (err) {\n              // ignore\n            }\n          }\n        }\n      }\n    } else if (\n      this.helperConfigEntry?.domain === \"switch_as_x\" &&\n      this._switchAsDomain === domain &&\n      this._switchAsInvert !== this.entry.options?.switch_as_x?.invert\n    ) {\n      // Change invert setting\n      const origEntityId = this.entry.options?.switch_as_x?.entity_id;\n      if (!origEntityId) {\n        // should not happen, guard for types\n      } else {\n        const configFlow = await createOptionsFlow(\n          this.hass,\n          this.helperConfigEntry.entry_id\n        );\n        await handleOptionsFlowStep(this.hass, configFlow.flow_id, {\n          invert: this._switchAsInvert,\n        });\n      }\n    }\n\n    return { close, entry: result.entity_entry };\n  }\n\n  private async _waitForEntityRegistryUpdate(config_entry_id: string) {\n    return new Promise<EntityRegistryEntry>((resolve, reject) => {\n      const timeout = setTimeout(reject, 5000);\n      const unsub = subscribeEntityRegistry(\n        this.hass.connection,\n        (entityRegistry) => {\n          const entity = entityRegistry.find(\n            (reg) => reg.config_entry_id === config_entry_id\n          );\n          if (entity) {\n            clearTimeout(timeout);\n            unsub();\n            resolve(entity);\n          }\n        }\n      );\n      // @ts-ignore Force refresh\n      this.hass.connection._entityRegistry?.refresh();\n    });\n  }\n\n  private _nameChanged(ev): void {\n    fireEvent(this, \"change\");\n    this._name = ev.target.value;\n  }\n\n  private _iconChanged(ev: CustomEvent): void {\n    fireEvent(this, \"change\");\n    this._icon = ev.detail.value;\n  }\n\n  private async _copyEntityId(): Promise<void> {\n    await copyToClipboard(this._entityId);\n    showToast(this, {\n      message: this.hass.localize(\"ui.common.copied_clipboard\"),\n    });\n  }\n\n  private _entityIdChanged(ev): void {\n    fireEvent(this, \"change\");\n    this._entityId = `${computeDomain(this._origEntityId)}.${ev.target.value}`;\n  }\n\n  private _deviceClassChanged(ev): void {\n    fireEvent(this, \"change\");\n    this._deviceClass = ev.target.value;\n  }\n\n  private _unitChanged(ev): void {\n    fireEvent(this, \"change\");\n    this._unit_of_measurement = ev.target.value;\n  }\n\n  private _defaultcodeChanged(ev): void {\n    fireEvent(this, \"change\");\n    this._defaultCode = ev.target.value === \"\" ? null : ev.target.value;\n  }\n\n  private _precipitationUnitChanged(ev): void {\n    fireEvent(this, \"change\");\n    this._precipitation_unit = ev.target.value;\n  }\n\n  private _precisionChanged(ev): void {\n    fireEvent(this, \"change\");\n    this._precision =\n      ev.target.value === \"default\" ? null : Number(ev.target.value);\n  }\n\n  private _pressureUnitChanged(ev): void {\n    fireEvent(this, \"change\");\n    this._pressure_unit = ev.target.value;\n  }\n\n  private _temperatureUnitChanged(ev): void {\n    fireEvent(this, \"change\");\n    this._temperature_unit = ev.target.value;\n  }\n\n  private _visibilityUnitChanged(ev): void {\n    fireEvent(this, \"change\");\n    this._visibility_unit = ev.target.value;\n  }\n\n  private _windSpeedUnitChanged(ev): void {\n    fireEvent(this, \"change\");\n    this._wind_speed_unit = ev.target.value;\n  }\n\n  private _switchAsDomainChanged(ev): void {\n    if (ev.target.value === \"\") {\n      return;\n    }\n\n    // If value is \"outlet\" that means the user kept the \"switch\" domain, but actually changed\n    // the device_class of the switch to \"outlet\".\n    const switchAs = ev.target.value === \"outlet\" ? \"switch\" : ev.target.value;\n    this._switchAsDomain = switchAs;\n\n    if (\n      (computeDomain(this.entry.entity_id) === \"switch\" &&\n        ev.target.value === \"outlet\") ||\n      ev.target.value === \"switch\"\n    ) {\n      this._deviceClass = ev.target.value;\n    }\n  }\n\n  private _switchAsInvertChanged(ev): void {\n    this._switchAsInvert = ev.target.checked;\n  }\n\n  private _useDeviceAreaChanged(ev): void {\n    this._noDeviceArea = !ev.target.checked;\n    if (!this._noDeviceArea) {\n      this._areaId = undefined;\n    }\n  }\n\n  private _areaPicked(ev: CustomEvent) {\n    fireEvent(this, \"change\");\n    this._areaId = ev.detail.value;\n  }\n\n  private async _fetchCameraPrefs() {\n    this._cameraPrefs = await fetchCameraPrefs(this.hass, this.entry.entity_id);\n  }\n\n  private async _handleCameraPrefsChanged(ev) {\n    const checkbox = ev.currentTarget as HaSwitch;\n    try {\n      this._cameraPrefs = await updateCameraPrefs(\n        this.hass,\n        this.entry.entity_id,\n        {\n          preload_stream: checkbox.checked!,\n        }\n      );\n    } catch (err: any) {\n      showAlertDialog(this, { text: err.message });\n      checkbox.checked = !checkbox.checked;\n    }\n  }\n\n  private async _handleCameraOrientationChanged(ev) {\n    try {\n      this._cameraPrefs = await updateCameraPrefs(\n        this.hass,\n        this.entry.entity_id,\n        {\n          orientation: ev.currentTarget.value,\n        }\n      );\n    } catch (err: any) {\n      showAlertDialog(this, { text: err.message });\n    }\n  }\n\n  private _enabledChanged(ev: CustomEvent): void {\n    if ((ev.target as any).checked) {\n      this._disabledBy = null;\n    } else {\n      this._disabledBy = \"user\";\n    }\n  }\n\n  private _hiddenChanged(ev: CustomEvent): void {\n    if ((ev.target as any).checked) {\n      this._hiddenBy = null;\n    } else {\n      this._hiddenBy = \"user\";\n    }\n  }\n\n  private _openDeviceSettings() {\n    showDeviceRegistryDetailDialog(this, {\n      device: this._device!,\n      updateEntry: async (updates) => {\n        await updateDeviceRegistryEntry(this.hass, this._device!.id, updates);\n      },\n    });\n  }\n\n  private _handleVoiceAssistantsClicked() {\n    showVoiceAssistantsView(\n      this,\n      this.hass.localize(\"ui.dialogs.entity_registry.editor.voice_assistants\")\n    );\n  }\n\n  private async _showOptionsFlow() {\n    showOptionsFlowDialog(this, this.helperConfigEntry!);\n  }\n\n  private _switchAsDomainsSorted = memoizeOne(\n    (domains: string[], localize: LocalizeFunc) =>\n      domains\n        .map((domain) => ({\n          domain,\n          label: domainToName(localize, domain),\n        }))\n        .sort((a, b) =>\n          stringCompare(a.label, b.label, this.hass.locale.language)\n        )\n  );\n\n  private _deviceClassesSorted = memoizeOne(\n    (domain: string, deviceClasses: string[], localize: LocalizeFunc) =>\n      deviceClasses\n        .map((entry) => ({\n          deviceClass: entry,\n          label: localize(\n            `ui.dialogs.entity_registry.editor.device_classes.${domain}.${entry}`\n          ),\n        }))\n        .sort((a, b) =>\n          stringCompare(a.label, b.label, this.hass.locale.language)\n        )\n  );\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyle,\n      css`\n        :host {\n          display: block;\n        }\n        ha-textfield.entityId {\n          --text-field-prefix-padding-right: 0;\n          --textfield-icon-trailing-padding: 0;\n        }\n        ha-textfield.entityId > ha-icon-button {\n          position: relative;\n          right: -8px;\n          --mdc-icon-button-size: 36px;\n          --mdc-icon-size: 20px;\n          color: var(--secondary-text-color);\n          inset-inline-start: initial;\n          inset-inline-end: -8px;\n          direction: var(--direction);\n        }\n        ha-switch {\n          margin-right: 16px;\n          margin-inline-end: 16px;\n          margin-inline-start: initial;\n        }\n        ha-settings-row ha-switch {\n          margin-right: 0;\n          margin-inline-end: 0;\n          margin-inline-start: initial;\n        }\n        ha-textfield,\n        ha-icon-picker,\n        ha-select,\n        ha-area-picker {\n          display: block;\n          margin: 8px 0;\n          width: 100%;\n        }\n        li[divider] {\n          border-bottom-color: var(--divider-color);\n        }\n        ha-alert mwc-button {\n          width: max-content;\n        }\n        .menu-item {\n          border-radius: 4px;\n          margin-top: 3px;\n          margin-bottom: 3px;\n          overflow: hidden;\n          --mdc-list-side-padding: 13px;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"entity-registry-settings-editor\": EntityRegistrySettingsEditor;\n  }\n}\n"],"mappings":"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Z,oDAAmDnF,MAAO,IAAG1B,KAAM,EACtE;QACF,CAAC,CAAC,CAAC,CACFqJ,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KACTrN,aAAa,CAACoN,CAAC,CAAC/B,KAAK,EAAEgC,CAAC,CAAChC,KAAK,EAAE,IAAI,CAACpG,IAAI,CAACkD,MAAM,CAACmF,QAAQ,CAC3D,CACN,CAAC;MAAA;IAAA;MAAA3K,IAAA;MAAAiQ,MAAA;MAAA9P,GAAA;MAAAC,KAAA,EAED,SAAA8P,OAAA,EAAoC;QAClC,OAAO,CACLnR,OAAO,EACP1C,GAAI;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,CACF;MACH;IAAC;EAAA;AAAA,GAt1C+CE,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}