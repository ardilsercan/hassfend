{"ast":null,"code":"import { fireEvent } from \"../../../../common/dom/fire_event\";\nlet registeredDialog = false;\nconst dialogShowEvent = \"show-edit-view\";\nconst dialogTag = \"hui-dialog-edit-view\";\nconst registerEditViewDialog = element => fireEvent(element, \"register-dialog\", {\n  dialogShowEvent,\n  dialogTag,\n  dialogImport: () => import(\"./hui-dialog-edit-view\")\n});\nexport const showEditViewDialog = (element, editViewDialogParams) => {\n  if (!registeredDialog) {\n    registeredDialog = true;\n    registerEditViewDialog(element);\n  }\n  fireEvent(element, dialogShowEvent, editViewDialogParams);\n};","map":{"version":3,"names":["fireEvent","registeredDialog","dialogShowEvent","dialogTag","registerEditViewDialog","element","dialogImport","showEditViewDialog","editViewDialogParams"],"sources":["/workspaces/frontend/src/panels/lovelace/editor/view-editor/show-edit-view-dialog.ts"],"sourcesContent":["import { fireEvent, HASSDomEvent } from \"../../../../common/dom/fire_event\";\nimport { LovelaceViewConfig } from \"../../../../data/lovelace/config/view\";\nimport { Lovelace } from \"../../types\";\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    \"reload-lovelace\": undefined;\n    \"show-edit-view\": EditViewDialogParams;\n  }\n  // for add event listener\n  interface HTMLElementEventMap {\n    \"reload-lovelace\": HASSDomEvent<undefined>;\n  }\n}\n\nlet registeredDialog = false;\nconst dialogShowEvent = \"show-edit-view\";\nconst dialogTag = \"hui-dialog-edit-view\";\n\nexport interface EditViewDialogParams {\n  lovelace: Lovelace;\n  viewIndex?: number;\n  saveCallback?: (viewIndex: number, viewConfig: LovelaceViewConfig) => void;\n}\n\nconst registerEditViewDialog = (element: HTMLElement): Event =>\n  fireEvent(element, \"register-dialog\", {\n    dialogShowEvent,\n    dialogTag,\n    dialogImport: () => import(\"./hui-dialog-edit-view\"),\n  });\n\nexport const showEditViewDialog = (\n  element: HTMLElement,\n  editViewDialogParams: EditViewDialogParams\n): void => {\n  if (!registeredDialog) {\n    registeredDialog = true;\n    registerEditViewDialog(element);\n  }\n  fireEvent(element, dialogShowEvent, editViewDialogParams);\n};\n"],"mappings":"AAAA,SAASA,SAAS,QAAsB,mCAAmC;AAgB3E,IAAIC,gBAAgB,GAAG,KAAK;AAC5B,MAAMC,eAAe,GAAG,gBAAgB;AACxC,MAAMC,SAAS,GAAG,sBAAsB;AAQxC,MAAMC,sBAAsB,GAAIC,OAAoB,IAClDL,SAAS,CAACK,OAAO,EAAE,iBAAiB,EAAE;EACpCH,eAAe;EACfC,SAAS;EACTG,YAAY,EAAEA,CAAA,KAAM,MAAM,CAAC,wBAAwB;AACrD,CAAC,CAAC;AAEJ,OAAO,MAAMC,kBAAkB,GAAGA,CAChCF,OAAoB,EACpBG,oBAA0C,KACjC;EACT,IAAI,CAACP,gBAAgB,EAAE;IACrBA,gBAAgB,GAAG,IAAI;IACvBG,sBAAsB,CAACC,OAAO,CAAC;EACjC;EACAL,SAAS,CAACK,OAAO,EAAEH,eAAe,EAAEM,oBAAoB,CAAC;AAC3D,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}