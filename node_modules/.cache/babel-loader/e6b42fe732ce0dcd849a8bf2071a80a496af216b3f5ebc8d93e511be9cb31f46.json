{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _decorate from \"@babel/runtime/helpers/decorate\";\nvar _templateObject, _templateObject2;\nimport \"core-js/modules/es.array.concat.js\";\nimport { css, html, LitElement } from \"lit\";\nimport { customElement } from \"lit/decorators\";\nvar HaLabel = _decorate([customElement(\"ha-label\")], function (_initialize, _LitElement) {\n  var HaLabel = /*#__PURE__*/function (_LitElement2) {\n    _inherits(HaLabel, _LitElement2);\n    function HaLabel() {\n      var _this;\n      _classCallCheck(this, HaLabel);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, HaLabel, [].concat(args));\n      _initialize(_assertThisInitialized(_this));\n      return _this;\n    }\n    return _createClass(HaLabel);\n  }(_LitElement);\n  return {\n    F: HaLabel,\n    d: [{\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        return html(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      <span class=\\\"label\\\">\\n        <slot name=\\\"icon\\\"></slot>\\n        <slot></slot>\\n      </span>\\n    \"])));\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [css(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n        :host {\\n          --ha-label-text-color: var(--primary-text-color);\\n          --ha-label-icon-color: var(--primary-text-color);\\n          --ha-label-background-color: rgba(\\n            var(--rgb-primary-text-color),\\n            0.15\\n          );\\n        }\\n        .label {\\n          display: inline-flex;\\n          flex-direction: row;\\n          align-items: center;\\n          font-size: 12px;\\n          font-weight: 500;\\n          line-height: 16px;\\n          letter-spacing: 0.1px;\\n          vertical-align: middle;\\n          height: 32px;\\n          padding: 0 16px;\\n          border-radius: 18px;\\n          background-color: var(--ha-label-background-color);\\n          color: var(--ha-label-text-color);\\n          --mdc-icon-size: 18px;\\n        }\\n        ::slotted([slot=\\\"icon\\\"]) {\\n          margin-right: 8px;\\n          margin-left: -8px;\\n          margin-inline-start: -8px;\\n          margin-inline-end: 8px;\\n          display: flex;\\n          color: var(--ha-label-icon-color);\\n        }\\n        span {\\n          display: inline-flex;\\n        }\\n      \"])))];\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","customElement","HaLabel","_decorate","_initialize","_LitElement","_LitElement2","_inherits","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_assertThisInitialized","_createClass","F","d","kind","key","value","render","_templateObject","_taggedTemplateLiteral","static","styles","_templateObject2"],"sources":["/workspaces/frontend/src/components/ha-label.ts"],"sourcesContent":["import { css, CSSResultGroup, html, LitElement, TemplateResult } from \"lit\";\nimport { customElement } from \"lit/decorators\";\n\n@customElement(\"ha-label\")\nclass HaLabel extends LitElement {\n  protected render(): TemplateResult {\n    return html`\n      <span class=\"label\">\n        <slot name=\"icon\"></slot>\n        <slot></slot>\n      </span>\n    `;\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      css`\n        :host {\n          --ha-label-text-color: var(--primary-text-color);\n          --ha-label-icon-color: var(--primary-text-color);\n          --ha-label-background-color: rgba(\n            var(--rgb-primary-text-color),\n            0.15\n          );\n        }\n        .label {\n          display: inline-flex;\n          flex-direction: row;\n          align-items: center;\n          font-size: 12px;\n          font-weight: 500;\n          line-height: 16px;\n          letter-spacing: 0.1px;\n          vertical-align: middle;\n          height: 32px;\n          padding: 0 16px;\n          border-radius: 18px;\n          background-color: var(--ha-label-background-color);\n          color: var(--ha-label-text-color);\n          --mdc-icon-size: 18px;\n        }\n        ::slotted([slot=\"icon\"]) {\n          margin-right: 8px;\n          margin-left: -8px;\n          margin-inline-start: -8px;\n          margin-inline-end: 8px;\n          display: flex;\n          color: var(--ha-label-icon-color);\n        }\n        span {\n          display: inline-flex;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-label\": HaLabel;\n  }\n}\n"],"mappings":";;;;;;;;;AAAA,SAASA,GAAG,EAAkBC,IAAI,EAAEC,UAAU,QAAwB,KAAK;AAC3E,SAASC,aAAa,QAAQ,gBAAgB;AAAC,IAGzCC,OAAO,GAAAC,SAAA,EADZF,aAAa,CAAC,UAAU,CAAC,aAAAG,WAAA,EAAAC,WAAA;EAAA,IACpBH,OAAO,0BAAAI,YAAA;IAAAC,SAAA,CAAAL,OAAA,EAAAI,YAAA;IAAA,SAAAJ,QAAA;MAAA,IAAAM,KAAA;MAAAC,eAAA,OAAAP,OAAA;MAAA,SAAAQ,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAAC,IAAA,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;QAAAF,IAAA,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;MAAA;MAAAP,KAAA,GAAAQ,UAAA,OAAAd,OAAA,KAAAe,MAAA,CAAAJ,IAAA;MAAAT,WAAA,CAAAc,sBAAA,CAAAV,KAAA;MAAA,OAAAA,KAAA;IAAA;IAAA,OAAAW,YAAA,CAAAjB,OAAA;EAAA,EAAAG,WAAA;EAAA;IAAAe,CAAA,EAAPlB,OAAO;IAAAmB,CAAA;MAAAC,IAAA;MAAAC,GAAA;MAAAC,KAAA,EACX,SAAAC,OAAA,EAAmC;QACjC,OAAO1B,IAAI,CAAA2B,eAAA,KAAAA,eAAA,GAAAC,sBAAA;MAMb;IAAC;MAAAL,IAAA;MAAAM,MAAA;MAAAL,GAAA;MAAAC,KAAA,EAED,SAAAK,OAAA,EAAoC;QAClC,OAAO,CACL/B,GAAG,CAAAgC,gBAAA,KAAAA,gBAAA,GAAAH,sBAAA,ylCAqCJ;MACH;IAAC;EAAA;AAAA,GAlDmB3B,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}