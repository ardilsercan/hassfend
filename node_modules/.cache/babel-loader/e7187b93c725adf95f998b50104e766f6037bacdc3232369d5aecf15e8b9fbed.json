{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport \"@material/mwc-button/mwc-button\";\nimport \"@material/mwc-list/mwc-list\";\nimport \"@material/mwc-list/mwc-list-item\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport \"../../../components/ha-alert\";\nimport \"../../../components/ha-card\";\nimport \"../../../components/ha-circular-progress\";\nimport \"../../../components/ha-expansion-panel\";\nimport \"../../../components/ha-formfield\";\nimport \"../../../components/ha-icon-button\";\nimport \"../../../components/ha-radio\";\nimport \"../../../components/ha-settings-row\";\nimport \"../../../components/ha-textfield\";\nimport { extractApiErrorMessage } from \"../../../data/hassio/common\";\nimport { changeHostOptions, fetchHassioHostInfo } from \"../../../data/hassio/host\";\nimport { showAlertDialog } from \"../../../dialogs/generic/show-dialog-box\";\nexport let HassioHostname = _decorate([customElement(\"supervisor-hostname\")], function (_initialize, _LitElement) {\n  class HassioHostname extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HassioHostname,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"narrow\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_processing\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_hostname\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"firstUpdated\",\n      value: function firstUpdated() {\n        this._fetchHostInfo();\n      }\n    }, {\n      kind: \"method\",\n      key: \"_fetchHostInfo\",\n      value: async function _fetchHostInfo() {\n        const hostInfo = await fetchHassioHostInfo(this.hass);\n        this._hostname = hostInfo.hostname;\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this._hostname) {\n          return nothing;\n        }\n        return html`\n      <ha-card\n        class=\"no-padding\"\n        outlined\n        .header=${this.hass.localize(\"ui.panel.config.network.supervisor.hostname.title\")}\n      >\n        <div class=\"card-content\">\n          <p>\n            ${this.hass.localize(\"ui.panel.config.network.supervisor.hostname.description\")}\n          </p>\n          <ha-textfield\n            .disabled=${this._processing}\n            .value=${this._hostname}\n            @change=${this._handleChange}\n            placeholder=\"homeassistant\"\n          >\n          </ha-textfield>\n        </div>\n        <div class=\"card-actions\">\n          <mwc-button @click=${this._save} .disabled=${this._processing}>\n            ${this._processing ? html`<ha-circular-progress indeterminate size=\"small\">\n                </ha-circular-progress>` : this.hass.localize(\"ui.common.save\")}\n          </mwc-button>\n        </div>\n      </ha-card>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleChange\",\n      value: function _handleChange(ev) {\n        this._hostname = ev.target.value;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_save\",\n      value: async function _save() {\n        this._processing = true;\n        try {\n          await changeHostOptions(this.hass, {\n            hostname: this._hostname\n          });\n        } catch (err) {\n          showAlertDialog(this, {\n            title: this.hass.localize(\"ui.panel.config.network.supervisor.hostname.failed_to_set_hostname\"),\n            text: extractApiErrorMessage(err)\n          });\n        } finally {\n          this._processing = false;\n        }\n      }\n    }, {\n      kind: \"field\",\n      static: true,\n      key: \"styles\",\n      value() {\n        return css`\n    ha-textfield {\n      width: 100%;\n    }\n    .card-actions {\n      display: flex;\n      flex-direction: row-reverse;\n      justify-content: space-between;\n      align-items: center;\n    }\n    .card-content > p {\n      padding-bottom: 1em;\n    }\n  `;\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","nothing","customElement","property","state","extractApiErrorMessage","changeHostOptions","fetchHassioHostInfo","showAlertDialog","HassioHostname","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","type","Boolean","firstUpdated","_fetchHostInfo","hostInfo","hass","_hostname","hostname","render","localize","_processing","_handleChange","_save","ev","target","err","title","text","static"],"sources":["/workspaces/frontend/src/panels/config/network/supervisor-hostname.ts"],"sourcesContent":["import \"@material/mwc-button/mwc-button\";\nimport \"@material/mwc-list/mwc-list\";\nimport \"@material/mwc-list/mwc-list-item\";\nimport { css, CSSResultGroup, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport \"../../../components/ha-alert\";\nimport \"../../../components/ha-card\";\nimport \"../../../components/ha-circular-progress\";\nimport \"../../../components/ha-expansion-panel\";\nimport \"../../../components/ha-formfield\";\nimport \"../../../components/ha-icon-button\";\nimport \"../../../components/ha-radio\";\nimport \"../../../components/ha-settings-row\";\nimport \"../../../components/ha-textfield\";\nimport { extractApiErrorMessage } from \"../../../data/hassio/common\";\nimport {\n  changeHostOptions,\n  fetchHassioHostInfo,\n} from \"../../../data/hassio/host\";\nimport { showAlertDialog } from \"../../../dialogs/generic/show-dialog-box\";\nimport type { HomeAssistant } from \"../../../types\";\n\n@customElement(\"supervisor-hostname\")\nexport class HassioHostname extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ type: Boolean }) public narrow = false;\n\n  @state() private _processing = false;\n\n  @state() private _hostname?: string;\n\n  protected firstUpdated() {\n    this._fetchHostInfo();\n  }\n\n  private async _fetchHostInfo() {\n    const hostInfo = await fetchHassioHostInfo(this.hass);\n    this._hostname = hostInfo.hostname;\n  }\n\n  protected render() {\n    if (!this._hostname) {\n      return nothing;\n    }\n\n    return html`\n      <ha-card\n        class=\"no-padding\"\n        outlined\n        .header=${this.hass.localize(\n          \"ui.panel.config.network.supervisor.hostname.title\"\n        )}\n      >\n        <div class=\"card-content\">\n          <p>\n            ${this.hass.localize(\n              \"ui.panel.config.network.supervisor.hostname.description\"\n            )}\n          </p>\n          <ha-textfield\n            .disabled=${this._processing}\n            .value=${this._hostname}\n            @change=${this._handleChange}\n            placeholder=\"homeassistant\"\n          >\n          </ha-textfield>\n        </div>\n        <div class=\"card-actions\">\n          <mwc-button @click=${this._save} .disabled=${this._processing}>\n            ${this._processing\n              ? html`<ha-circular-progress indeterminate size=\"small\">\n                </ha-circular-progress>`\n              : this.hass.localize(\"ui.common.save\")}\n          </mwc-button>\n        </div>\n      </ha-card>\n    `;\n  }\n\n  private _handleChange(ev) {\n    this._hostname = ev.target.value;\n  }\n\n  private async _save() {\n    this._processing = true;\n    try {\n      await changeHostOptions(this.hass, { hostname: this._hostname });\n    } catch (err: any) {\n      showAlertDialog(this, {\n        title: this.hass.localize(\n          \"ui.panel.config.network.supervisor.hostname.failed_to_set_hostname\"\n        ),\n        text: extractApiErrorMessage(err),\n      });\n    } finally {\n      this._processing = false;\n    }\n  }\n\n  static styles: CSSResultGroup = css`\n    ha-textfield {\n      width: 100%;\n    }\n    .card-actions {\n      display: flex;\n      flex-direction: row-reverse;\n      justify-content: space-between;\n      align-items: center;\n    }\n    .card-content > p {\n      padding-bottom: 1em;\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"supervisor-hostname\": HassioHostname;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}