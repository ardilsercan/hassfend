{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport \"./ha-device-picker\";\nlet HaDevicesPicker = _decorate([customElement(\"ha-devices-picker\")], function (_initialize, _LitElement) {\n  class HaDevicesPicker extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaDevicesPicker,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Array\n      })],\n      key: \"value\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"helper\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"disabled\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"required\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Array,\n        attribute: \"include-domains\"\n      })],\n      key: \"includeDomains\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Array,\n        attribute: \"exclude-domains\"\n      })],\n      key: \"excludeDomains\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Array,\n        attribute: \"include-device-classes\"\n      })],\n      key: \"includeDeviceClasses\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: \"picked-device-label\"\n      })],\n      key: \"pickedDeviceLabel\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: \"pick-device-label\"\n      })],\n      key: \"pickDeviceLabel\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"deviceFilter\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"entityFilter\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value:\n      /**\n       * Show entities from specific domains.\n       * @type {string}\n       * @attr include-domains\n       */\n\n      /**\n       * Show no entities of these domains.\n       * @type {Array}\n       * @attr exclude-domains\n       */\n\n      function render() {\n        if (!this.hass) {\n          return nothing;\n        }\n        const currentDevices = this._currentDevices;\n        return html`\n      ${currentDevices.map(entityId => html`\n          <div>\n            <ha-device-picker\n              allow-custom-entity\n              .curValue=${entityId}\n              .hass=${this.hass}\n              .deviceFilter=${this.deviceFilter}\n              .entityFilter=${this.entityFilter}\n              .includeDomains=${this.includeDomains}\n              .excludeDomains=${this.excludeDomains}\n              .includeDeviceClasses=${this.includeDeviceClasses}\n              .value=${entityId}\n              .label=${this.pickedDeviceLabel}\n              .disabled=${this.disabled}\n              @value-changed=${this._deviceChanged}\n            ></ha-device-picker>\n          </div>\n        `)}\n      <div>\n        <ha-device-picker\n          allow-custom-entity\n          .hass=${this.hass}\n          .helper=${this.helper}\n          .deviceFilter=${this.deviceFilter}\n          .entityFilter=${this.entityFilter}\n          .includeDomains=${this.includeDomains}\n          .excludeDomains=${this.excludeDomains}\n          .excludeDevices=${currentDevices}\n          .includeDeviceClasses=${this.includeDeviceClasses}\n          .label=${this.pickDeviceLabel}\n          .disabled=${this.disabled}\n          .required=${this.required && !currentDevices.length}\n          @value-changed=${this._addDevice}\n        ></ha-device-picker>\n      </div>\n    `;\n      }\n    }, {\n      kind: \"get\",\n      key: \"_currentDevices\",\n      value: function _currentDevices() {\n        return this.value || [];\n      }\n    }, {\n      kind: \"method\",\n      key: \"_updateDevices\",\n      value: async function _updateDevices(devices) {\n        fireEvent(this, \"value-changed\", {\n          value: devices\n        });\n        this.value = devices;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_deviceChanged\",\n      value: function _deviceChanged(event) {\n        event.stopPropagation();\n        const curValue = event.currentTarget.curValue;\n        const newValue = event.detail.value;\n        if (newValue === curValue) {\n          return;\n        }\n        if (newValue === undefined) {\n          this._updateDevices(this._currentDevices.filter(dev => dev !== curValue));\n        } else {\n          this._updateDevices(this._currentDevices.map(dev => dev === curValue ? newValue : dev));\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_addDevice\",\n      value: async function _addDevice(event) {\n        event.stopPropagation();\n        const toAdd = event.detail.value;\n        event.currentTarget.value = \"\";\n        if (!toAdd) {\n          return;\n        }\n        const currentDevices = this._currentDevices;\n        if (currentDevices.includes(toAdd)) {\n          return;\n        }\n        this._updateDevices([...currentDevices, toAdd]);\n      }\n    }, {\n      kind: \"field\",\n      static: true,\n      key: \"styles\",\n      value() {\n        return css`\n    div {\n      margin-top: 8px;\n    }\n  `;\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","nothing","customElement","property","fireEvent","HaDevicesPicker","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","type","Array","Boolean","render","hass","currentDevices","_currentDevices","map","entityId","deviceFilter","entityFilter","includeDomains","excludeDomains","includeDeviceClasses","pickedDeviceLabel","disabled","_deviceChanged","helper","pickDeviceLabel","required","length","_addDevice","_updateDevices","devices","event","stopPropagation","curValue","currentTarget","newValue","detail","undefined","filter","dev","toAdd","includes","static"],"sources":["/workspaces/frontend/src/components/device/ha-devices-picker.ts"],"sourcesContent":["import { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { ValueChangedEvent, HomeAssistant } from \"../../types\";\nimport \"./ha-device-picker\";\nimport type {\n  HaDevicePickerDeviceFilterFunc,\n  HaDevicePickerEntityFilterFunc,\n} from \"./ha-device-picker\";\n\n@customElement(\"ha-devices-picker\")\nclass HaDevicesPicker extends LitElement {\n  @property({ attribute: false }) public hass?: HomeAssistant;\n\n  @property({ type: Array }) public value?: string[];\n\n  @property() public helper?: string;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @property({ type: Boolean }) public required = false;\n\n  /**\n   * Show entities from specific domains.\n   * @type {string}\n   * @attr include-domains\n   */\n  @property({ type: Array, attribute: \"include-domains\" })\n  public includeDomains?: string[];\n\n  /**\n   * Show no entities of these domains.\n   * @type {Array}\n   * @attr exclude-domains\n   */\n  @property({ type: Array, attribute: \"exclude-domains\" })\n  public excludeDomains?: string[];\n\n  @property({ type: Array, attribute: \"include-device-classes\" })\n  public includeDeviceClasses?: string[];\n\n  @property({ attribute: \"picked-device-label\" })\n  public pickedDeviceLabel?: string;\n\n  @property({ attribute: \"pick-device-label\" }) public pickDeviceLabel?: string;\n\n  @property({ attribute: false })\n  public deviceFilter?: HaDevicePickerDeviceFilterFunc;\n\n  @property({ attribute: false })\n  public entityFilter?: HaDevicePickerEntityFilterFunc;\n\n  protected render() {\n    if (!this.hass) {\n      return nothing;\n    }\n\n    const currentDevices = this._currentDevices;\n    return html`\n      ${currentDevices.map(\n        (entityId) => html`\n          <div>\n            <ha-device-picker\n              allow-custom-entity\n              .curValue=${entityId}\n              .hass=${this.hass}\n              .deviceFilter=${this.deviceFilter}\n              .entityFilter=${this.entityFilter}\n              .includeDomains=${this.includeDomains}\n              .excludeDomains=${this.excludeDomains}\n              .includeDeviceClasses=${this.includeDeviceClasses}\n              .value=${entityId}\n              .label=${this.pickedDeviceLabel}\n              .disabled=${this.disabled}\n              @value-changed=${this._deviceChanged}\n            ></ha-device-picker>\n          </div>\n        `\n      )}\n      <div>\n        <ha-device-picker\n          allow-custom-entity\n          .hass=${this.hass}\n          .helper=${this.helper}\n          .deviceFilter=${this.deviceFilter}\n          .entityFilter=${this.entityFilter}\n          .includeDomains=${this.includeDomains}\n          .excludeDomains=${this.excludeDomains}\n          .excludeDevices=${currentDevices}\n          .includeDeviceClasses=${this.includeDeviceClasses}\n          .label=${this.pickDeviceLabel}\n          .disabled=${this.disabled}\n          .required=${this.required && !currentDevices.length}\n          @value-changed=${this._addDevice}\n        ></ha-device-picker>\n      </div>\n    `;\n  }\n\n  private get _currentDevices() {\n    return this.value || [];\n  }\n\n  private async _updateDevices(devices) {\n    fireEvent(this, \"value-changed\", {\n      value: devices,\n    });\n\n    this.value = devices;\n  }\n\n  private _deviceChanged(event: ValueChangedEvent<string>) {\n    event.stopPropagation();\n    const curValue = (event.currentTarget as any).curValue;\n    const newValue = event.detail.value;\n    if (newValue === curValue) {\n      return;\n    }\n    if (newValue === undefined) {\n      this._updateDevices(\n        this._currentDevices.filter((dev) => dev !== curValue)\n      );\n    } else {\n      this._updateDevices(\n        this._currentDevices.map((dev) => (dev === curValue ? newValue : dev))\n      );\n    }\n  }\n\n  private async _addDevice(event: ValueChangedEvent<string>) {\n    event.stopPropagation();\n    const toAdd = event.detail.value;\n    (event.currentTarget as any).value = \"\";\n    if (!toAdd) {\n      return;\n    }\n    const currentDevices = this._currentDevices;\n    if (currentDevices.includes(toAdd)) {\n      return;\n    }\n\n    this._updateDevices([...currentDevices, toAdd]);\n  }\n\n  static override styles = css`\n    div {\n      margin-top: 8px;\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-devices-picker\": HaDevicesPicker;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}