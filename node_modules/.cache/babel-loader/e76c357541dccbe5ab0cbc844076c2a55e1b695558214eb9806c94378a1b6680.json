{"ast":null,"code":"/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nvar _a, _b;\nimport { __decorate } from \"tslib\";\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\nimport { property } from 'lit/decorators.js';\nimport { addHasRemoveClass, BaseElement } from './base-element.js';\nexport { addHasRemoveClass, BaseElement };\n// ShadyDOM should submit <input> elements in component internals\nconst USING_SHADY_DOM = (_b = (_a = window.ShadyDOM) === null || _a === void 0 ? void 0 : _a.inUse) !== null && _b !== void 0 ? _b : false;\n/** @soyCompatible */\nexport class FormElement extends BaseElement {\n  constructor() {\n    super(...arguments);\n    /**\n     * Disabled state for the component. When `disabled` is set to `true`, the\n     * component will not be added to form submission.\n     */\n    this.disabled = false;\n    /**\n     * Form element that contains this element\n     */\n    this.containingForm = null;\n    this.formDataListener = ev => {\n      if (!this.disabled) {\n        this.setFormData(ev.formData);\n      }\n    };\n  }\n  findFormElement() {\n    // If the component internals are not in Shadow DOM, subscribing to form\n    // data events could lead to duplicated data, which may not work correctly\n    // on the server side.\n    if (!this.shadowRoot || USING_SHADY_DOM) {\n      return null;\n    }\n    const root = this.getRootNode();\n    const forms = root.querySelectorAll('form');\n    for (const form of Array.from(forms)) {\n      if (form.contains(this)) {\n        return form;\n      }\n    }\n    return null;\n  }\n  connectedCallback() {\n    var _a;\n    super.connectedCallback();\n    this.containingForm = this.findFormElement();\n    (_a = this.containingForm) === null || _a === void 0 ? void 0 : _a.addEventListener('formdata', this.formDataListener);\n  }\n  disconnectedCallback() {\n    var _a;\n    super.disconnectedCallback();\n    (_a = this.containingForm) === null || _a === void 0 ? void 0 : _a.removeEventListener('formdata', this.formDataListener);\n    this.containingForm = null;\n  }\n  click() {\n    if (this.formElement && !this.disabled) {\n      this.formElement.focus();\n      this.formElement.click();\n    }\n  }\n  firstUpdated() {\n    super.firstUpdated();\n    if (this.shadowRoot) {\n      this.mdcRoot.addEventListener('change', e => {\n        this.dispatchEvent(new Event('change', e));\n      });\n    }\n  }\n}\nFormElement.shadowRootOptions = {\n  mode: 'open',\n  delegatesFocus: true\n};\n__decorate([property({\n  type: Boolean\n})], FormElement.prototype, \"disabled\", void 0);","map":{"version":3,"names":["property","addHasRemoveClass","BaseElement","USING_SHADY_DOM","_b","_a","window","ShadyDOM","inUse","FormElement","constructor","disabled","containingForm","formDataListener","ev","setFormData","formData","findFormElement","shadowRoot","root","getRootNode","forms","querySelectorAll","form","Array","from","contains","connectedCallback","addEventListener","disconnectedCallback","removeEventListener","click","formElement","focus","firstUpdated","mdcRoot","e","dispatchEvent","Event","shadowRootOptions","mode","delegatesFocus","__decorate","type","Boolean"],"sources":["form-element.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\n\n\nimport {property} from 'lit/decorators.js';\n\nimport {addHasRemoveClass, BaseElement, CustomEventListener, EventType, SpecificEventListener} from './base-element.js';\nimport {RippleInterface} from './utils.js';\n\nexport {\n  addHasRemoveClass,\n  BaseElement,\n  CustomEventListener,\n  EventType,\n  RippleInterface,\n  SpecificEventListener\n};\n\ndeclare global {\n  interface FormDataEvent extends Event {\n    readonly formData: FormData;\n  }\n\n  interface HTMLElementEventMap {\n    formdata: FormDataEvent;\n  }\n}\n\n// ShadyDOM should submit <input> elements in component internals\nconst USING_SHADY_DOM = window.ShadyDOM?.inUse ?? false;\n\n/** @soyCompatible */\nexport abstract class FormElement extends BaseElement {\n  static override shadowRootOptions:\n      ShadowRootInit = {mode: 'open', delegatesFocus: true};\n\n  /**\n   * Form-capable element in the component ShadowRoot.\n   *\n   * Define in your component with the `@query` decorator\n   */\n  protected abstract formElement: HTMLElement;\n\n  /**\n   * Disabled state for the component. When `disabled` is set to `true`, the\n   * component will not be added to form submission.\n   */\n  @property({type: Boolean}) disabled = false;\n\n  /**\n   * Implement ripple getter for Ripple integration with mwc-formfield\n   */\n  readonly ripple?: Promise<RippleInterface|null>;\n\n  /**\n   * Form element that contains this element\n   */\n  protected containingForm: HTMLFormElement|null = null;\n  protected formDataListener = (ev: FormDataEvent) => {\n    if (!this.disabled) {\n      this.setFormData(ev.formData);\n    }\n  };\n\n  protected findFormElement(): HTMLFormElement|null {\n    // If the component internals are not in Shadow DOM, subscribing to form\n    // data events could lead to duplicated data, which may not work correctly\n    // on the server side.\n    if (!this.shadowRoot || USING_SHADY_DOM) {\n      return null;\n    }\n    const root = this.getRootNode() as HTMLElement;\n    const forms = root.querySelectorAll('form');\n    for (const form of Array.from(forms)) {\n      if (form.contains(this)) {\n        return form;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Implement this callback to submit form data\n   */\n  protected abstract setFormData(formData: FormData): void;\n\n  override connectedCallback() {\n    super.connectedCallback();\n    this.containingForm = this.findFormElement();\n    this.containingForm?.addEventListener('formdata', this.formDataListener);\n  }\n\n  override disconnectedCallback() {\n    super.disconnectedCallback();\n    this.containingForm?.removeEventListener('formdata', this.formDataListener);\n    this.containingForm = null;\n  }\n\n  override click() {\n    if (this.formElement && !this.disabled) {\n      this.formElement.focus();\n      this.formElement.click();\n    }\n  }\n\n  protected override firstUpdated() {\n    super.firstUpdated();\n    if (this.shadowRoot) {\n      this.mdcRoot.addEventListener('change', (e) => {\n        this.dispatchEvent(new Event('change', e));\n      });\n    }\n  }\n}\n"],"mappings":"AAAA;;;;;;;AAMA;AACA;AAGA,SAAQA,QAAQ,QAAO,mBAAmB;AAE1C,SAAQC,iBAAiB,EAAEC,WAAW,QAA8D,mBAAmB;AAGvH,SACED,iBAAiB,EACjBC,WAAW;AAiBb;AACA,MAAMC,eAAe,GAAG,CAAAC,EAAA,IAAAC,EAAA,GAAAC,MAAM,CAACC,QAAQ,cAAAF,EAAA,uBAAAA,EAAA,CAAEG,KAAK,cAAAJ,EAAA,cAAAA,EAAA,GAAI,KAAK;AAEvD;AACA,OAAM,MAAgBK,WAAY,SAAQP,WAAW;EAArDQ,YAAA;;IAWE;;;;IAI2B,KAAAC,QAAQ,GAAG,KAAK;IAO3C;;;IAGU,KAAAC,cAAc,GAAyB,IAAI;IAC3C,KAAAC,gBAAgB,GAAIC,EAAiB,IAAI;MACjD,IAAI,CAAC,IAAI,CAACH,QAAQ,EAAE;QAClB,IAAI,CAACI,WAAW,CAACD,EAAE,CAACE,QAAQ,CAAC;;IAEjC,CAAC;EAmDH;EAjDYC,eAAeA,CAAA;IACvB;IACA;IACA;IACA,IAAI,CAAC,IAAI,CAACC,UAAU,IAAIf,eAAe,EAAE;MACvC,OAAO,IAAI;;IAEb,MAAMgB,IAAI,GAAG,IAAI,CAACC,WAAW,EAAiB;IAC9C,MAAMC,KAAK,GAAGF,IAAI,CAACG,gBAAgB,CAAC,MAAM,CAAC;IAC3C,KAAK,MAAMC,IAAI,IAAIC,KAAK,CAACC,IAAI,CAACJ,KAAK,CAAC,EAAE;MACpC,IAAIE,IAAI,CAACG,QAAQ,CAAC,IAAI,CAAC,EAAE;QACvB,OAAOH,IAAI;;;IAGf,OAAO,IAAI;EACb;EAOSI,iBAAiBA,CAAA;;IACxB,KAAK,CAACA,iBAAiB,EAAE;IACzB,IAAI,CAACf,cAAc,GAAG,IAAI,CAACK,eAAe,EAAE;IAC5C,CAAAZ,EAAA,OAAI,CAACO,cAAc,cAAAP,EAAA,uBAAAA,EAAA,CAAEuB,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAACf,gBAAgB,CAAC;EAC1E;EAESgB,oBAAoBA,CAAA;;IAC3B,KAAK,CAACA,oBAAoB,EAAE;IAC5B,CAAAxB,EAAA,OAAI,CAACO,cAAc,cAAAP,EAAA,uBAAAA,EAAA,CAAEyB,mBAAmB,CAAC,UAAU,EAAE,IAAI,CAACjB,gBAAgB,CAAC;IAC3E,IAAI,CAACD,cAAc,GAAG,IAAI;EAC5B;EAESmB,KAAKA,CAAA;IACZ,IAAI,IAAI,CAACC,WAAW,IAAI,CAAC,IAAI,CAACrB,QAAQ,EAAE;MACtC,IAAI,CAACqB,WAAW,CAACC,KAAK,EAAE;MACxB,IAAI,CAACD,WAAW,CAACD,KAAK,EAAE;;EAE5B;EAEmBG,YAAYA,CAAA;IAC7B,KAAK,CAACA,YAAY,EAAE;IACpB,IAAI,IAAI,CAAChB,UAAU,EAAE;MACnB,IAAI,CAACiB,OAAO,CAACP,gBAAgB,CAAC,QAAQ,EAAGQ,CAAC,IAAI;QAC5C,IAAI,CAACC,aAAa,CAAC,IAAIC,KAAK,CAAC,QAAQ,EAAEF,CAAC,CAAC,CAAC;MAC5C,CAAC,CAAC;;EAEN;;AA/EgB3B,WAAA,CAAA8B,iBAAiB,GACZ;EAACC,IAAI,EAAE,MAAM;EAAEC,cAAc,EAAE;AAAI,CAAC;AAa9BC,UAAA,EAA1B1C,QAAQ,CAAC;EAAC2C,IAAI,EAAEC;AAAO,CAAC,CAAC,C,4CAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}