{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _templateObject, _templateObject2, _templateObject3;\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport { LitElement, css, html, nothing } from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators\";\nimport QRCode from \"qrcode\";\nimport \"./ha-alert\";\nexport var HaQrCode = _decorate([customElement(\"ha-qr-code\")], function (_initialize, _LitElement) {\n  var HaQrCode = /*#__PURE__*/function (_LitElement2) {\n    _inherits(HaQrCode, _LitElement2);\n    function HaQrCode() {\n      var _this;\n      _classCallCheck(this, HaQrCode);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, HaQrCode, [].concat(args));\n      _initialize(_assertThisInitialized(_this));\n      return _this;\n    }\n    return _createClass(HaQrCode);\n  }(_LitElement);\n  return {\n    F: HaQrCode,\n    d: [{\n      kind: \"field\",\n      decorators: [property()],\n      key: \"data\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: \"error-correction-level\"\n      })],\n      key: \"errorCorrectionLevel\",\n      value: function value() {\n        return \"medium\";\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Number\n      })],\n      key: \"width\",\n      value: function value() {\n        return 4;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Number\n      })],\n      key: \"scale\",\n      value: function value() {\n        return 4;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Number\n      })],\n      key: \"margin\",\n      value: function value() {\n        return 4;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Number\n      })],\n      key: \"maskPattern\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: \"center-image\"\n      })],\n      key: \"centerImage\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_error\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [query(\"canvas\")],\n      key: \"_canvas\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"willUpdate\",\n      value: function willUpdate(changedProperties) {\n        _get(_getPrototypeOf(HaQrCode.prototype), \"willUpdate\", this).call(this, changedProperties);\n        if ((changedProperties.has(\"data\") || changedProperties.has(\"scale\") || changedProperties.has(\"width\") || changedProperties.has(\"margin\") || changedProperties.has(\"maskPattern\") || changedProperties.has(\"errorCorrectionLevel\")) && this._error) {\n          this._error = undefined;\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"updated\",\n      value: function updated(changedProperties) {\n        var _this2 = this;\n        var canvas = this._canvas;\n        if (canvas && this.data && (changedProperties.has(\"data\") || changedProperties.has(\"scale\") || changedProperties.has(\"width\") || changedProperties.has(\"margin\") || changedProperties.has(\"maskPattern\") || changedProperties.has(\"errorCorrectionLevel\") || changedProperties.has(\"centerImage\"))) {\n          var computedStyles = getComputedStyle(this);\n          QRCode.toCanvas(canvas, this.data, {\n            errorCorrectionLevel: this.errorCorrectionLevel || (this.centerImage ? \"Q\" : \"M\"),\n            width: this.width,\n            scale: this.scale,\n            margin: this.margin,\n            maskPattern: this.maskPattern,\n            color: {\n              light: computedStyles.getPropertyValue(\"--card-background-color\"),\n              dark: computedStyles.getPropertyValue(\"--primary-text-color\")\n            }\n          }).catch(function (err) {\n            _this2._error = err.message;\n          });\n          if (this.centerImage) {\n            var context = this._canvas.getContext(\"2d\");\n            var imageObj = new Image();\n            imageObj.src = this.centerImage;\n            imageObj.onload = function () {\n              context === null || context === void 0 || context.drawImage(imageObj, canvas.width * 0.375, canvas.height * 0.375, canvas.width / 4, canvas.height / 4);\n            };\n          }\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this.data) {\n          return nothing;\n        }\n        if (this._error) {\n          return html(_templateObject || (_templateObject = _taggedTemplateLiteral([\"<ha-alert alert-type=\\\"error\\\">\", \"</ha-alert>\"])), this._error);\n        }\n        return html(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"<canvas></canvas>\"])));\n      }\n    }, {\n      kind: \"field\",\n      static: true,\n      key: \"styles\",\n      value: function value() {\n        return css(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n    :host {\\n      display: block;\\n    }\\n  \"])));\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["LitElement","css","html","nothing","customElement","property","query","state","QRCode","HaQrCode","_decorate","_initialize","_LitElement","_LitElement2","_inherits","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_assertThisInitialized","_createClass","F","d","kind","decorators","key","value","attribute","type","Number","willUpdate","changedProperties","_get","_getPrototypeOf","prototype","call","has","_error","undefined","updated","_this2","canvas","_canvas","data","computedStyles","getComputedStyle","toCanvas","errorCorrectionLevel","centerImage","width","scale","margin","maskPattern","color","light","getPropertyValue","dark","catch","err","message","context","getContext","imageObj","Image","src","onload","drawImage","height","render","_templateObject","_taggedTemplateLiteral","_templateObject2","static","_templateObject3"],"sources":["/workspaces/frontend/src/components/ha-qr-code.ts"],"sourcesContent":["import { LitElement, PropertyValues, css, html, nothing } from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators\";\nimport QRCode from \"qrcode\";\nimport \"./ha-alert\";\n\n@customElement(\"ha-qr-code\")\nexport class HaQrCode extends LitElement {\n  @property() public data?: string;\n\n  @property({ attribute: \"error-correction-level\" })\n  public errorCorrectionLevel: \"low\" | \"medium\" | \"quartile\" | \"high\" =\n    \"medium\";\n\n  @property({ type: Number })\n  public width = 4;\n\n  @property({ type: Number })\n  public scale = 4;\n\n  @property({ type: Number })\n  public margin = 4;\n\n  @property({ type: Number }) public maskPattern?:\n    | 0\n    | 1\n    | 2\n    | 3\n    | 4\n    | 5\n    | 6\n    | 7;\n\n  @property({ attribute: \"center-image\" }) public centerImage?: string;\n\n  @state() private _error?: string;\n\n  @query(\"canvas\") private _canvas?: HTMLCanvasElement;\n\n  protected willUpdate(changedProperties: PropertyValues): void {\n    super.willUpdate(changedProperties);\n    if (\n      (changedProperties.has(\"data\") ||\n        changedProperties.has(\"scale\") ||\n        changedProperties.has(\"width\") ||\n        changedProperties.has(\"margin\") ||\n        changedProperties.has(\"maskPattern\") ||\n        changedProperties.has(\"errorCorrectionLevel\")) &&\n      this._error\n    ) {\n      this._error = undefined;\n    }\n  }\n\n  updated(changedProperties: PropertyValues) {\n    const canvas = this._canvas;\n    if (\n      canvas &&\n      this.data &&\n      (changedProperties.has(\"data\") ||\n        changedProperties.has(\"scale\") ||\n        changedProperties.has(\"width\") ||\n        changedProperties.has(\"margin\") ||\n        changedProperties.has(\"maskPattern\") ||\n        changedProperties.has(\"errorCorrectionLevel\") ||\n        changedProperties.has(\"centerImage\"))\n    ) {\n      const computedStyles = getComputedStyle(this);\n\n      QRCode.toCanvas(canvas, this.data, {\n        errorCorrectionLevel:\n          this.errorCorrectionLevel || (this.centerImage ? \"Q\" : \"M\"),\n        width: this.width,\n        scale: this.scale,\n        margin: this.margin,\n        maskPattern: this.maskPattern,\n        color: {\n          light: computedStyles.getPropertyValue(\"--card-background-color\"),\n          dark: computedStyles.getPropertyValue(\"--primary-text-color\"),\n        },\n      }).catch((err) => {\n        this._error = err.message;\n      });\n\n      if (this.centerImage) {\n        const context = this._canvas!.getContext(\"2d\");\n        const imageObj = new Image();\n        imageObj.src = this.centerImage;\n        imageObj.onload = () => {\n          context?.drawImage(\n            imageObj,\n            canvas.width * 0.375,\n            canvas.height * 0.375,\n            canvas.width / 4,\n            canvas.height / 4\n          );\n        };\n      }\n    }\n  }\n\n  render() {\n    if (!this.data) {\n      return nothing;\n    }\n    if (this._error) {\n      return html`<ha-alert alert-type=\"error\">${this._error}</ha-alert>`;\n    }\n    return html`<canvas></canvas>`;\n  }\n\n  static styles = css`\n    :host {\n      display: block;\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-qr-code\": HaQrCode;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}