{"ast":null,"code":"export var mockConfigEntries = function mockConfigEntries(hass) {\n  hass.mockWS(\"config_entries/get\", function () {\n    return {\n      entry_id: \"co2signal\",\n      domain: \"co2signal\",\n      title: \"Electricity Maps\",\n      source: \"user\",\n      state: \"loaded\",\n      supports_options: false,\n      supports_remove_device: false,\n      supports_unload: true,\n      pref_disable_new_entities: false,\n      pref_disable_polling: false,\n      disabled_by: null,\n      reason: null\n    };\n  });\n};","map":{"version":3,"names":["mockConfigEntries","hass","mockWS","entry_id","domain","title","source","state","supports_options","supports_remove_device","supports_unload","pref_disable_new_entities","pref_disable_polling","disabled_by","reason"],"sources":["/Users/sercanardil/Desktop/frontend/demo/src/stubs/config_entries.ts"],"sourcesContent":["import { MockHomeAssistant } from \"../../../src/fake_data/provide_hass\";\n\nexport const mockConfigEntries = (hass: MockHomeAssistant) => {\n  hass.mockWS(\"config_entries/get\", () => ({\n    entry_id: \"co2signal\",\n    domain: \"co2signal\",\n    title: \"Electricity Maps\",\n    source: \"user\",\n    state: \"loaded\",\n    supports_options: false,\n    supports_remove_device: false,\n    supports_unload: true,\n    pref_disable_new_entities: false,\n    pref_disable_polling: false,\n    disabled_by: null,\n    reason: null,\n  }));\n};\n"],"mappings":"AAEA,OAAO,IAAMA,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIC,IAAuB,EAAK;EAC5DA,IAAI,CAACC,MAAM,CAAC,oBAAoB,EAAE;IAAA,OAAO;MACvCC,QAAQ,EAAE,WAAW;MACrBC,MAAM,EAAE,WAAW;MACnBC,KAAK,EAAE,kBAAkB;MACzBC,MAAM,EAAE,MAAM;MACdC,KAAK,EAAE,QAAQ;MACfC,gBAAgB,EAAE,KAAK;MACvBC,sBAAsB,EAAE,KAAK;MAC7BC,eAAe,EAAE,IAAI;MACrBC,yBAAyB,EAAE,KAAK;MAChCC,oBAAoB,EAAE,KAAK;MAC3BC,WAAW,EAAE,IAAI;MACjBC,MAAM,EAAE;IACV,CAAC;EAAA,CAAC,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}