{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport \"@material/mwc-list\";\nconst mdiBackupRestore = \"M12,3A9,9 0 0,0 3,12H0L4,16L8,12H5A7,7 0 0,1 12,5A7,7 0 0,1 19,12A7,7 0 0,1 12,19C10.5,19 9.09,18.5 7.94,17.7L6.5,19.14C8.04,20.3 9.94,21 12,21A9,9 0 0,0 21,12A9,9 0 0,0 12,3M14,12A2,2 0 0,0 12,10A2,2 0 0,0 10,12A2,2 0 0,0 12,14A2,2 0 0,0 14,12Z\";\nconst mdiFolder = \"M10,4H4C2.89,4 2,4.89 2,6V18A2,2 0 0,0 4,20H20A2,2 0 0,0 22,18V8C22,6.89 21.1,6 20,6H12L10,4Z\";\nconst mdiNas = \"M4,5C2.89,5 2,5.89 2,7V17C2,18.11 2.89,19 4,19H20C21.11,19 22,18.11 22,17V7C22,5.89 21.11,5 20,5H4M4.5,7A1,1 0 0,1 5.5,8A1,1 0 0,1 4.5,9A1,1 0 0,1 3.5,8A1,1 0 0,1 4.5,7M7,7H20V17H7V7M8,8V16H11V8H8M12,8V16H15V8H12M16,8V16H19V8H16M9,9H10V10H9V9M13,9H14V10H13V9M17,9H18V10H17V9Z\";\nconst mdiPlayBox = \"M19 3H5C3.89 3 3 3.89 3 5V19C3 20.1 3.9 21 5 21H19C20.1 21 21 20.1 21 19V5C21 3.89 20.1 3 19 3M10 16V8L15 12\";\nconst mdiReload = \"M2 12C2 16.97 6.03 21 11 21C13.39 21 15.68 20.06 17.4 18.4L15.9 16.9C14.63 18.25 12.86 19 11 19C4.76 19 1.64 11.46 6.05 7.05C10.46 2.64 18 5.77 18 12H15L19 16H19.1L23 12H20C20 7.03 15.97 3 11 3C6.03 3 2 7.03 2 12Z\";\nimport { LitElement, css, html, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { isComponentLoaded } from \"../../../common/config/is_component_loaded\";\nimport \"../../../components/ha-alert\";\nimport \"../../../components/ha-button-menu\";\nimport \"../../../components/ha-icon-button\";\nimport \"../../../components/ha-metric\";\nimport \"../../../components/ha-svg-icon\";\nimport \"../../../components/ha-icon-next\";\nimport { extractApiErrorMessage } from \"../../../data/hassio/common\";\nimport { fetchHassioHostInfo } from \"../../../data/hassio/host\";\nimport { SupervisorMountState, SupervisorMountType, SupervisorMountUsage, fetchSupervisorMounts, reloadSupervisorMount } from \"../../../data/supervisor/mounts\";\nimport { showAlertDialog } from \"../../../dialogs/generic/show-dialog-box\";\nimport \"../../../layouts/hass-subpage\";\nimport { getValueInPercentage, roundWithOneDecimal } from \"../../../util/calculate\";\nimport \"../core/ha-config-analytics\";\nimport { showMoveDatadiskDialog } from \"./show-dialog-move-datadisk\";\nimport { showMountViewDialog } from \"./show-dialog-view-mount\";\nimport { navigate } from \"../../../common/navigate\";\nlet HaConfigSectionStorage = _decorate([customElement(\"ha-config-section-storage\")], function (_initialize, _LitElement) {\n  class HaConfigSectionStorage extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaConfigSectionStorage,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"route\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"narrow\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_error\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_hostInfo\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_mountsInfo\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"firstUpdated\",\n      value: function firstUpdated(changedProps) {\n        _get(_getPrototypeOf(HaConfigSectionStorage.prototype), \"firstUpdated\", this).call(this, changedProps);\n        if (isComponentLoaded(this.hass, \"hassio\")) {\n          this._load();\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var _this$_mountsInfo, _this$_hostInfo, _this$_hostInfo2, _this$_hostInfo3;\n        if (this._mountsInfo === undefined) {\n          return nothing;\n        }\n        const validMounts = (_this$_mountsInfo = this._mountsInfo) === null || _this$_mountsInfo === void 0 ? void 0 : _this$_mountsInfo.mounts.filter(mount => [SupervisorMountType.CIFS, SupervisorMountType.NFS].includes(mount.type));\n        const isHAOS = (_this$_hostInfo = this._hostInfo) === null || _this$_hostInfo === void 0 ? void 0 : _this$_hostInfo.features.includes(\"haos\");\n        return html`\n      <hass-subpage\n        back-path=\"/config/system\"\n        .hass=${this.hass}\n        .narrow=${this.narrow}\n        .header=${this.hass.localize(\"ui.panel.config.storage.caption\")}\n      >\n        <div class=\"content\">\n          ${this._error ? html`\n                <ha-alert alert-type=\"error\"\n                  >${this._error.message || this._error.code}</ha-alert\n                >\n              ` : \"\"}\n          ${this._hostInfo ? html`\n                <ha-card\n                  outlined\n                  .header=${this.hass.localize(\"ui.panel.config.storage.disk_metrics\")}\n                >\n                  <div class=\"card-content\">\n                    <ha-metric\n                      .heading=${this.hass.localize(\"ui.panel.config.storage.used_space\")}\n                      .value=${this._getUsedSpace((_this$_hostInfo2 = this._hostInfo) === null || _this$_hostInfo2 === void 0 ? void 0 : _this$_hostInfo2.disk_used, (_this$_hostInfo3 = this._hostInfo) === null || _this$_hostInfo3 === void 0 ? void 0 : _this$_hostInfo3.disk_total)}\n                      .tooltip=${`${this._hostInfo.disk_used} GB/${this._hostInfo.disk_total} GB`}\n                    ></ha-metric>\n                    ${this._hostInfo.disk_life_time !== \"\" && this._hostInfo.disk_life_time >= 10 ?\n        // prettier-ignore\n        html`\n                          <ha-metric\n                            .heading=${this.hass.localize(\"ui.panel.config.storage.emmc_lifetime_used\")}\n                            .value=${this._hostInfo.disk_life_time}\n                            .tooltip=${`${this._hostInfo.disk_life_time - 10}% - ${this._hostInfo.disk_life_time}%`}\n                            class=\"emmc\"\n                          ></ha-metric>\n                        ` : \"\"}\n                  </div>\n                  ${this._hostInfo ? html`<div class=\"card-actions\">\n                        <mwc-button @click=${this._moveDatadisk}>\n                          ${this.hass.localize(\"ui.panel.config.storage.datadisk.title\")}\n                        </mwc-button>\n                      </div>` : nothing}\n                </ha-card>\n              ` : \"\"}\n\n          <ha-card\n            outlined\n            .header=${this.hass.localize(\"ui.panel.config.storage.network_mounts.title\")}\n          >\n            ${this._mountsInfo === null ? html`<ha-alert\n                  class=\"mounts-not-supported\"\n                  alert-type=\"warning\"\n                  .title=${this.hass.localize(\"ui.panel.config.storage.network_mounts.not_supported.title\")}\n                >\n                  ${isHAOS ? html`${this.hass.localize(\"ui.panel.config.storage.network_mounts.not_supported.os\", {\n          version: \"10.2\"\n        })}\n                        <mwc-button\n                          slot=\"action\"\n                          @click=${this._navigateToUpdates}\n                        >\n                          ${this.hass.localize(\"ui.panel.config.storage.network_mounts.not_supported.navigate_to_updates\")}\n                        </mwc-button>` : this.hass.localize(\"ui.panel.config.storage.network_mounts.not_supported.supervised\")}\n                </ha-alert>` : validMounts !== null && validMounts !== void 0 && validMounts.length ? html`<mwc-list>\n                    ${validMounts.map(mount => html`\n                        <ha-list-item\n                          graphic=\"avatar\"\n                          .mount=${mount}\n                          twoline\n                          hasMeta\n                          @click=${this._changeMount}\n                        >\n                          <div slot=\"graphic\">\n                            <ha-svg-icon\n                              .path=${mount.usage === SupervisorMountUsage.MEDIA ? mdiPlayBox : mount.usage === SupervisorMountUsage.SHARE ? mdiFolder : mdiBackupRestore}\n                            ></ha-svg-icon>\n                          </div>\n                          <span class=\"mount-state-${mount.state || \"unknown\"}\">\n                            ${mount.name}\n                          </span>\n                          <span slot=\"secondary\">\n                            ${mount.server}${mount.port ? `:${mount.port}` : nothing}${mount.type === SupervisorMountType.NFS ? mount.path : `:${mount.share}`}\n                          </span>\n                          ${mount.state !== SupervisorMountState.ACTIVE ? html`<ha-icon-button\n                                class=\"reload-btn\"\n                                slot=\"meta\"\n                                .mount=${mount}\n                                @click=${this._reloadMount}\n                                .path=${mdiReload}\n                              ></ha-icon-button>` : html`<ha-icon-next slot=\"meta\"></ha-icon-next>`}\n                        </ha-list-item>\n                      `)}\n                  </mwc-list>` : html`<div class=\"no-mounts\">\n                    <ha-svg-icon .path=${mdiNas}></ha-svg-icon>\n                    <p>\n                      ${this.hass.localize(\"ui.panel.config.storage.network_mounts.no_mounts\")}\n                    </p>\n                  </div>`}\n            ${this._mountsInfo !== null ? html`<div class=\"card-actions\">\n                  <mwc-button @click=${this._addMount}>\n                    ${this.hass.localize(\"ui.panel.config.storage.network_mounts.add_title\")}\n                  </mwc-button>\n                </div>` : nothing}\n          </ha-card>\n        </div>\n      </hass-subpage>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_load\",\n      value: async function _load() {\n        var _this$_hostInfo4;\n        try {\n          this._hostInfo = await fetchHassioHostInfo(this.hass);\n        } catch (err) {\n          this._error = err.message || err;\n        }\n        if ((_this$_hostInfo4 = this._hostInfo) !== null && _this$_hostInfo4 !== void 0 && _this$_hostInfo4.features.includes(\"mount\")) {\n          await this._reloadMounts();\n        } else {\n          this._mountsInfo = null;\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_moveDatadisk\",\n      value: function _moveDatadisk() {\n        showMoveDatadiskDialog(this, {\n          hostInfo: this._hostInfo\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_navigateToUpdates\",\n      value: async function _navigateToUpdates() {\n        navigate(\"/config/updates\");\n      }\n    }, {\n      kind: \"method\",\n      key: \"_reloadMount\",\n      value: async function _reloadMount(ev) {\n        ev.stopPropagation();\n        const mount = ev.currentTarget.mount;\n        try {\n          await reloadSupervisorMount(this.hass, mount);\n        } catch (err) {\n          showAlertDialog(this, {\n            title: this.hass.localize(\"ui.panel.config.storage.network_mounts.errors.reload\", {\n              mount: mount.name\n            }),\n            text: extractApiErrorMessage(err)\n          });\n          return;\n        }\n        await this._reloadMounts();\n      }\n    }, {\n      kind: \"method\",\n      key: \"_addMount\",\n      value: function _addMount() {\n        showMountViewDialog(this, {\n          reloadMounts: () => this._reloadMounts()\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_changeMount\",\n      value: function _changeMount(ev) {\n        ev.stopPropagation();\n        showMountViewDialog(this, {\n          mount: ev.currentTarget.mount,\n          reloadMounts: () => this._reloadMounts()\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_reloadMounts\",\n      value: async function _reloadMounts() {\n        try {\n          this._mountsInfo = await fetchSupervisorMounts(this.hass);\n        } catch (err) {\n          this._error = err.message || err;\n          this._mountsInfo = null;\n        }\n      }\n    }, {\n      kind: \"field\",\n      key: \"_getUsedSpace\",\n      value() {\n        return (used, total) => roundWithOneDecimal(getValueInPercentage(used, 0, total));\n      }\n    }, {\n      kind: \"field\",\n      static: true,\n      key: \"styles\",\n      value() {\n        return css`\n    .content {\n      padding: 28px 20px 0;\n      max-width: 1040px;\n      margin: 0 auto;\n    }\n    ha-card {\n      max-width: 600px;\n      margin: 0 auto 12px;\n      justify-content: space-between;\n      flex-direction: column;\n      display: flex;\n    }\n    .card-content {\n      display: flex;\n      justify-content: space-between;\n      flex-direction: column;\n    }\n    .mount-state-failed {\n      color: var(--error-color);\n    }\n    .mount-state-unknown {\n      color: var(--warning-color);\n    }\n\n    .mounts-not-supported {\n      padding: 0 16px 16px;\n    }\n\n    .reload-btn {\n      float: right;\n      position: relative;\n      top: -10px;\n      right: 10px;\n    }\n\n    .no-mounts {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      text-align: center;\n    }\n\n    .no-mounts ha-svg-icon {\n      background-color: var(--light-primary-color);\n      color: var(--secondary-text-color);\n      padding: 16px;\n      border-radius: 50%;\n      margin-bottom: 8px;\n    }\n    ha-list-item {\n      --mdc-list-item-meta-size: auto;\n      --mdc-list-item-meta-display: flex;\n    }\n    ha-svg-icon,\n    ha-icon-next {\n      width: 24px;\n    }\n  `;\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["mdiBackupRestore","mdiFolder","mdiNas","mdiPlayBox","mdiReload","LitElement","css","html","nothing","customElement","property","state","isComponentLoaded","extractApiErrorMessage","fetchHassioHostInfo","SupervisorMountState","SupervisorMountType","SupervisorMountUsage","fetchSupervisorMounts","reloadSupervisorMount","showAlertDialog","getValueInPercentage","roundWithOneDecimal","showMoveDatadiskDialog","showMountViewDialog","navigate","HaConfigSectionStorage","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","type","Boolean","firstUpdated","changedProps","_get","_getPrototypeOf","prototype","call","hass","_load","render","_this$_mountsInfo","_this$_hostInfo","_this$_hostInfo2","_this$_hostInfo3","_mountsInfo","undefined","validMounts","mounts","filter","mount","CIFS","NFS","includes","isHAOS","_hostInfo","features","narrow","localize","_error","message","code","_getUsedSpace","disk_used","disk_total","disk_life_time","_moveDatadisk","version","_navigateToUpdates","length","map","_changeMount","usage","MEDIA","SHARE","name","server","port","path","share","ACTIVE","_reloadMount","_addMount","_this$_hostInfo4","err","_reloadMounts","hostInfo","ev","stopPropagation","currentTarget","title","text","reloadMounts","used","total","static"],"sources":["/Users/sercanardil/Desktop/frontend/src/panels/config/storage/ha-config-section-storage.ts"],"sourcesContent":["import \"@material/mwc-list\";\nimport {\n  mdiBackupRestore,\n  mdiFolder,\n  mdiNas,\n  mdiPlayBox,\n  mdiReload,\n} from \"@mdi/js\";\nimport {\n  LitElement,\n  PropertyValues,\n  TemplateResult,\n  css,\n  html,\n  nothing,\n} from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { isComponentLoaded } from \"../../../common/config/is_component_loaded\";\nimport \"../../../components/ha-alert\";\nimport \"../../../components/ha-button-menu\";\nimport \"../../../components/ha-icon-button\";\nimport \"../../../components/ha-metric\";\nimport \"../../../components/ha-svg-icon\";\nimport \"../../../components/ha-icon-next\";\nimport { extractApiErrorMessage } from \"../../../data/hassio/common\";\nimport { HassioHostInfo, fetchHassioHostInfo } from \"../../../data/hassio/host\";\nimport {\n  SupervisorMount,\n  SupervisorMountState,\n  SupervisorMountType,\n  SupervisorMountUsage,\n  SupervisorMounts,\n  fetchSupervisorMounts,\n  reloadSupervisorMount,\n} from \"../../../data/supervisor/mounts\";\nimport { showAlertDialog } from \"../../../dialogs/generic/show-dialog-box\";\nimport \"../../../layouts/hass-subpage\";\nimport type { HomeAssistant, Route } from \"../../../types\";\nimport {\n  getValueInPercentage,\n  roundWithOneDecimal,\n} from \"../../../util/calculate\";\nimport \"../core/ha-config-analytics\";\nimport { showMoveDatadiskDialog } from \"./show-dialog-move-datadisk\";\nimport { showMountViewDialog } from \"./show-dialog-view-mount\";\nimport { navigate } from \"../../../common/navigate\";\n\n@customElement(\"ha-config-section-storage\")\nclass HaConfigSectionStorage extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public route!: Route;\n\n  @property({ type: Boolean }) public narrow = false;\n\n  @state() private _error?: { code: string; message: string };\n\n  @state() private _hostInfo?: HassioHostInfo;\n\n  @state() private _mountsInfo?: SupervisorMounts | null;\n\n  protected firstUpdated(changedProps: PropertyValues) {\n    super.firstUpdated(changedProps);\n    if (isComponentLoaded(this.hass, \"hassio\")) {\n      this._load();\n    }\n  }\n\n  protected render(): TemplateResult | typeof nothing {\n    if (this._mountsInfo === undefined) {\n      return nothing;\n    }\n    const validMounts = this._mountsInfo?.mounts.filter((mount) =>\n      [SupervisorMountType.CIFS, SupervisorMountType.NFS].includes(mount.type)\n    );\n    const isHAOS = this._hostInfo?.features.includes(\"haos\");\n    return html`\n      <hass-subpage\n        back-path=\"/config/system\"\n        .hass=${this.hass}\n        .narrow=${this.narrow}\n        .header=${this.hass.localize(\"ui.panel.config.storage.caption\")}\n      >\n        <div class=\"content\">\n          ${this._error\n            ? html`\n                <ha-alert alert-type=\"error\"\n                  >${this._error.message || this._error.code}</ha-alert\n                >\n              `\n            : \"\"}\n          ${this._hostInfo\n            ? html`\n                <ha-card\n                  outlined\n                  .header=${this.hass.localize(\n                    \"ui.panel.config.storage.disk_metrics\"\n                  )}\n                >\n                  <div class=\"card-content\">\n                    <ha-metric\n                      .heading=${this.hass.localize(\n                        \"ui.panel.config.storage.used_space\"\n                      )}\n                      .value=${this._getUsedSpace(\n                        this._hostInfo?.disk_used,\n                        this._hostInfo?.disk_total\n                      )}\n                      .tooltip=${`${this._hostInfo.disk_used} GB/${this._hostInfo.disk_total} GB`}\n                    ></ha-metric>\n                    ${this._hostInfo.disk_life_time !== \"\" &&\n                    this._hostInfo.disk_life_time >= 10\n                      ? // prettier-ignore\n                        html`\n                          <ha-metric\n                            .heading=${this.hass.localize(\n                              \"ui.panel.config.storage.emmc_lifetime_used\"\n                            )}\n                            .value=${this._hostInfo.disk_life_time}\n                            .tooltip=${`${this._hostInfo.disk_life_time - 10}% - ${this._hostInfo.disk_life_time}%`}\n                            class=\"emmc\"\n                          ></ha-metric>\n                        `\n                      : \"\"}\n                  </div>\n                  ${this._hostInfo\n                    ? html`<div class=\"card-actions\">\n                        <mwc-button @click=${this._moveDatadisk}>\n                          ${this.hass.localize(\n                            \"ui.panel.config.storage.datadisk.title\"\n                          )}\n                        </mwc-button>\n                      </div>`\n                    : nothing}\n                </ha-card>\n              `\n            : \"\"}\n\n          <ha-card\n            outlined\n            .header=${this.hass.localize(\n              \"ui.panel.config.storage.network_mounts.title\"\n            )}\n          >\n            ${this._mountsInfo === null\n              ? html`<ha-alert\n                  class=\"mounts-not-supported\"\n                  alert-type=\"warning\"\n                  .title=${this.hass.localize(\n                    \"ui.panel.config.storage.network_mounts.not_supported.title\"\n                  )}\n                >\n                  ${isHAOS\n                    ? html`${this.hass.localize(\n                          \"ui.panel.config.storage.network_mounts.not_supported.os\",\n                          { version: \"10.2\" }\n                        )}\n                        <mwc-button\n                          slot=\"action\"\n                          @click=${this._navigateToUpdates}\n                        >\n                          ${this.hass.localize(\n                            \"ui.panel.config.storage.network_mounts.not_supported.navigate_to_updates\"\n                          )}\n                        </mwc-button>`\n                    : this.hass.localize(\n                        \"ui.panel.config.storage.network_mounts.not_supported.supervised\"\n                      )}\n                </ha-alert>`\n              : validMounts?.length\n                ? html`<mwc-list>\n                    ${validMounts.map(\n                      (mount) => html`\n                        <ha-list-item\n                          graphic=\"avatar\"\n                          .mount=${mount}\n                          twoline\n                          hasMeta\n                          @click=${this._changeMount}\n                        >\n                          <div slot=\"graphic\">\n                            <ha-svg-icon\n                              .path=${mount.usage === SupervisorMountUsage.MEDIA\n                                ? mdiPlayBox\n                                : mount.usage === SupervisorMountUsage.SHARE\n                                  ? mdiFolder\n                                  : mdiBackupRestore}\n                            ></ha-svg-icon>\n                          </div>\n                          <span class=\"mount-state-${mount.state || \"unknown\"}\">\n                            ${mount.name}\n                          </span>\n                          <span slot=\"secondary\">\n                            ${mount.server}${mount.port\n                              ? `:${mount.port}`\n                              : nothing}${mount.type === SupervisorMountType.NFS\n                              ? mount.path\n                              : `:${mount.share}`}\n                          </span>\n                          ${mount.state !== SupervisorMountState.ACTIVE\n                            ? html`<ha-icon-button\n                                class=\"reload-btn\"\n                                slot=\"meta\"\n                                .mount=${mount}\n                                @click=${this._reloadMount}\n                                .path=${mdiReload}\n                              ></ha-icon-button>`\n                            : html`<ha-icon-next slot=\"meta\"></ha-icon-next>`}\n                        </ha-list-item>\n                      `\n                    )}\n                  </mwc-list>`\n                : html`<div class=\"no-mounts\">\n                    <ha-svg-icon .path=${mdiNas}></ha-svg-icon>\n                    <p>\n                      ${this.hass.localize(\n                        \"ui.panel.config.storage.network_mounts.no_mounts\"\n                      )}\n                    </p>\n                  </div>`}\n            ${this._mountsInfo !== null\n              ? html`<div class=\"card-actions\">\n                  <mwc-button @click=${this._addMount}>\n                    ${this.hass.localize(\n                      \"ui.panel.config.storage.network_mounts.add_title\"\n                    )}\n                  </mwc-button>\n                </div>`\n              : nothing}\n          </ha-card>\n        </div>\n      </hass-subpage>\n    `;\n  }\n\n  private async _load() {\n    try {\n      this._hostInfo = await fetchHassioHostInfo(this.hass);\n    } catch (err: any) {\n      this._error = err.message || err;\n    }\n    if (this._hostInfo?.features.includes(\"mount\")) {\n      await this._reloadMounts();\n    } else {\n      this._mountsInfo = null;\n    }\n  }\n\n  private _moveDatadisk(): void {\n    showMoveDatadiskDialog(this, {\n      hostInfo: this._hostInfo!,\n    });\n  }\n\n  private async _navigateToUpdates(): Promise<void> {\n    navigate(\"/config/updates\");\n  }\n\n  private async _reloadMount(ev: Event): Promise<void> {\n    ev.stopPropagation();\n    const mount: SupervisorMount = (ev.currentTarget as any).mount;\n    try {\n      await reloadSupervisorMount(this.hass, mount);\n    } catch (err: any) {\n      showAlertDialog(this, {\n        title: this.hass.localize(\n          \"ui.panel.config.storage.network_mounts.errors.reload\",\n          { mount: mount.name }\n        ),\n        text: extractApiErrorMessage(err),\n      });\n      return;\n    }\n    await this._reloadMounts();\n  }\n\n  private _addMount(): void {\n    showMountViewDialog(this, {\n      reloadMounts: () => this._reloadMounts(),\n    });\n  }\n\n  private _changeMount(ev: Event): void {\n    ev.stopPropagation();\n    showMountViewDialog(this, {\n      mount: (ev.currentTarget as any).mount,\n      reloadMounts: () => this._reloadMounts(),\n    });\n  }\n\n  private async _reloadMounts(): Promise<void> {\n    try {\n      this._mountsInfo = await fetchSupervisorMounts(this.hass);\n    } catch (err: any) {\n      this._error = err.message || err;\n      this._mountsInfo = null;\n    }\n  }\n\n  private _getUsedSpace = (used: number, total: number) =>\n    roundWithOneDecimal(getValueInPercentage(used, 0, total));\n\n  static styles = css`\n    .content {\n      padding: 28px 20px 0;\n      max-width: 1040px;\n      margin: 0 auto;\n    }\n    ha-card {\n      max-width: 600px;\n      margin: 0 auto 12px;\n      justify-content: space-between;\n      flex-direction: column;\n      display: flex;\n    }\n    .card-content {\n      display: flex;\n      justify-content: space-between;\n      flex-direction: column;\n    }\n    .mount-state-failed {\n      color: var(--error-color);\n    }\n    .mount-state-unknown {\n      color: var(--warning-color);\n    }\n\n    .mounts-not-supported {\n      padding: 0 16px 16px;\n    }\n\n    .reload-btn {\n      float: right;\n      position: relative;\n      top: -10px;\n      right: 10px;\n    }\n\n    .no-mounts {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      text-align: center;\n    }\n\n    .no-mounts ha-svg-icon {\n      background-color: var(--light-primary-color);\n      color: var(--secondary-text-color);\n      padding: 16px;\n      border-radius: 50%;\n      margin-bottom: 8px;\n    }\n    ha-list-item {\n      --mdc-list-item-meta-size: auto;\n      --mdc-list-item-meta-display: flex;\n    }\n    ha-svg-icon,\n    ha-icon-next {\n      width: 24px;\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-config-section-storage\": HaConfigSectionStorage;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}