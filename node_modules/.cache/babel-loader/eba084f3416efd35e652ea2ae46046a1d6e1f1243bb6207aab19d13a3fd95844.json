{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport { html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { array, assert, assign, object, optional, string } from \"superstruct\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport \"../../../../components/ha-form/ha-form\";\nimport \"../../components/hui-entity-editor\";\nimport { processEditorEntities } from \"../process-editor-entities\";\nimport { actionConfigStruct } from \"../structs/action-struct\";\nimport { baseLovelaceCardConfig } from \"../structs/base-card-struct\";\nimport { entitiesConfigStruct } from \"../structs/entities-struct\";\nimport { configElementStyle } from \"./config-elements-style\";\nconst cardConfigStruct = assign(baseLovelaceCardConfig, object({\n  title: optional(string()),\n  entity: optional(string()),\n  image: optional(string()),\n  image_entity: optional(string()),\n  camera_image: optional(string()),\n  camera_view: optional(string()),\n  aspect_ratio: optional(string()),\n  tap_action: optional(actionConfigStruct),\n  hold_action: optional(actionConfigStruct),\n  entities: array(entitiesConfigStruct),\n  theme: optional(string())\n}));\nconst SCHEMA = [{\n  name: \"title\",\n  selector: {\n    text: {}\n  }\n}, {\n  name: \"image\",\n  selector: {\n    text: {}\n  }\n}, {\n  name: \"image_entity\",\n  selector: {\n    entity: {\n      domain: \"image\"\n    }\n  }\n}, {\n  name: \"camera_image\",\n  selector: {\n    entity: {\n      domain: \"camera\"\n    }\n  }\n}, {\n  name: \"\",\n  type: \"grid\",\n  schema: [{\n    name: \"camera_view\",\n    selector: {\n      select: {\n        options: [\"auto\", \"live\"]\n      }\n    }\n  }, {\n    name: \"aspect_ratio\",\n    selector: {\n      text: {}\n    }\n  }]\n}, {\n  name: \"entity\",\n  selector: {\n    entity: {}\n  }\n}, {\n  name: \"theme\",\n  selector: {\n    theme: {}\n  }\n}, {\n  name: \"tap_action\",\n  selector: {\n    ui_action: {}\n  }\n}, {\n  name: \"hold_action\",\n  selector: {\n    ui_action: {}\n  }\n}];\nexport let HuiPictureGlanceCardEditor = _decorate([customElement(\"hui-picture-glance-card-editor\")], function (_initialize, _LitElement) {\n  class HuiPictureGlanceCardEditor extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HuiPictureGlanceCardEditor,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_config\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_configEntities\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"setConfig\",\n      value: function setConfig(config) {\n        assert(config, cardConfigStruct);\n        this._config = config;\n        this._configEntities = processEditorEntities(config.entities);\n      }\n    }, {\n      kind: \"get\",\n      key: \"_tap_action\",\n      value: function _tap_action() {\n        return this._config.tap_action || {\n          action: \"toggle\"\n        };\n      }\n    }, {\n      kind: \"get\",\n      key: \"_hold_action\",\n      value: function _hold_action() {\n        return this._config.hold_action || {\n          action: \"more-info\"\n        };\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this.hass || !this._config) {\n          return nothing;\n        }\n        const data = {\n          camera_view: \"auto\",\n          ...this._config\n        };\n        return html`\n      <ha-form\n        .hass=${this.hass}\n        .data=${data}\n        .schema=${SCHEMA}\n        .computeLabel=${this._computeLabelCallback}\n        @value-changed=${this._valueChanged}\n      ></ha-form>\n      <div class=\"card-config\">\n        <hui-entity-editor\n          .hass=${this.hass}\n          .entities=${this._configEntities}\n          @entities-changed=${this._changed}\n        ></hui-entity-editor>\n      </div>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_valueChanged\",\n      value: function _valueChanged(ev) {\n        fireEvent(this, \"config-changed\", {\n          config: ev.detail.value\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_changed\",\n      value: function _changed(ev) {\n        if (!this._config || !this.hass) {\n          return;\n        }\n        if (ev.detail && ev.detail.entities) {\n          this._config = {\n            ...this._config,\n            entities: ev.detail.entities\n          };\n          this._configEntities = processEditorEntities(this._config.entities);\n        }\n        fireEvent(this, \"config-changed\", {\n          config: this._config\n        });\n      }\n    }, {\n      kind: \"field\",\n      key: \"_computeLabelCallback\",\n      value() {\n        return schema => {\n          switch (schema.name) {\n            case \"theme\":\n            case \"tap_action\":\n            case \"hold_action\":\n              return `${this.hass.localize(`ui.panel.lovelace.editor.card.generic.${schema.name}`)} (${this.hass.localize(\"ui.panel.lovelace.editor.card.config.optional\")})`;\n            case \"entity\":\n              return this.hass.localize(\"ui.panel.lovelace.editor.card.picture-glance.state_entity\");\n            default:\n              return this.hass.localize(`ui.panel.lovelace.editor.card.generic.${schema.name}`);\n          }\n        };\n      }\n    }, {\n      kind: \"field\",\n      static: true,\n      key: \"styles\",\n      value() {\n        return configElementStyle;\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["html","LitElement","nothing","customElement","property","state","array","assert","assign","object","optional","string","fireEvent","processEditorEntities","actionConfigStruct","baseLovelaceCardConfig","entitiesConfigStruct","configElementStyle","cardConfigStruct","title","entity","image","image_entity","camera_image","camera_view","aspect_ratio","tap_action","hold_action","entities","theme","SCHEMA","name","selector","text","domain","type","schema","select","options","ui_action","HuiPictureGlanceCardEditor","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","setConfig","config","_config","_configEntities","_tap_action","action","_hold_action","render","hass","data","_computeLabelCallback","_valueChanged","_changed","ev","detail","localize","static"],"sources":["/workspaces/frontend/src/panels/lovelace/editor/config-elements/hui-picture-glance-card-editor.ts"],"sourcesContent":["import { CSSResultGroup, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { array, assert, assign, object, optional, string } from \"superstruct\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport \"../../../../components/ha-form/ha-form\";\nimport type { SchemaUnion } from \"../../../../components/ha-form/types\";\nimport type { ActionConfig } from \"../../../../data/lovelace/config/action\";\nimport type { HomeAssistant } from \"../../../../types\";\nimport type { PictureGlanceCardConfig } from \"../../cards/types\";\nimport \"../../components/hui-entity-editor\";\nimport type { EntityConfig } from \"../../entity-rows/types\";\nimport type { LovelaceCardEditor } from \"../../types\";\nimport { processEditorEntities } from \"../process-editor-entities\";\nimport { actionConfigStruct } from \"../structs/action-struct\";\nimport { baseLovelaceCardConfig } from \"../structs/base-card-struct\";\nimport { entitiesConfigStruct } from \"../structs/entities-struct\";\nimport { configElementStyle } from \"./config-elements-style\";\n\nconst cardConfigStruct = assign(\n  baseLovelaceCardConfig,\n  object({\n    title: optional(string()),\n    entity: optional(string()),\n    image: optional(string()),\n    image_entity: optional(string()),\n    camera_image: optional(string()),\n    camera_view: optional(string()),\n    aspect_ratio: optional(string()),\n    tap_action: optional(actionConfigStruct),\n    hold_action: optional(actionConfigStruct),\n    entities: array(entitiesConfigStruct),\n    theme: optional(string()),\n  })\n);\n\nconst SCHEMA = [\n  { name: \"title\", selector: { text: {} } },\n  { name: \"image\", selector: { text: {} } },\n  { name: \"image_entity\", selector: { entity: { domain: \"image\" } } },\n  { name: \"camera_image\", selector: { entity: { domain: \"camera\" } } },\n  {\n    name: \"\",\n    type: \"grid\",\n    schema: [\n      {\n        name: \"camera_view\",\n        selector: { select: { options: [\"auto\", \"live\"] } },\n      },\n      { name: \"aspect_ratio\", selector: { text: {} } },\n    ],\n  },\n  { name: \"entity\", selector: { entity: {} } },\n  { name: \"theme\", selector: { theme: {} } },\n  {\n    name: \"tap_action\",\n    selector: { ui_action: {} },\n  },\n  {\n    name: \"hold_action\",\n    selector: { ui_action: {} },\n  },\n] as const;\n\n@customElement(\"hui-picture-glance-card-editor\")\nexport class HuiPictureGlanceCardEditor\n  extends LitElement\n  implements LovelaceCardEditor\n{\n  @property({ attribute: false }) public hass?: HomeAssistant;\n\n  @state() private _config?: PictureGlanceCardConfig;\n\n  @state() private _configEntities?: EntityConfig[];\n\n  public setConfig(config: PictureGlanceCardConfig): void {\n    assert(config, cardConfigStruct);\n    this._config = config;\n    this._configEntities = processEditorEntities(config.entities);\n  }\n\n  get _tap_action(): ActionConfig {\n    return this._config!.tap_action || { action: \"toggle\" };\n  }\n\n  get _hold_action(): ActionConfig {\n    return this._config!.hold_action || { action: \"more-info\" };\n  }\n\n  protected render() {\n    if (!this.hass || !this._config) {\n      return nothing;\n    }\n\n    const data = { camera_view: \"auto\", ...this._config };\n\n    return html`\n      <ha-form\n        .hass=${this.hass}\n        .data=${data}\n        .schema=${SCHEMA}\n        .computeLabel=${this._computeLabelCallback}\n        @value-changed=${this._valueChanged}\n      ></ha-form>\n      <div class=\"card-config\">\n        <hui-entity-editor\n          .hass=${this.hass}\n          .entities=${this._configEntities}\n          @entities-changed=${this._changed}\n        ></hui-entity-editor>\n      </div>\n    `;\n  }\n\n  private _valueChanged(ev: CustomEvent): void {\n    fireEvent(this, \"config-changed\", { config: ev.detail.value });\n  }\n\n  private _changed(ev: CustomEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    if (ev.detail && ev.detail.entities) {\n      this._config = { ...this._config, entities: ev.detail.entities };\n\n      this._configEntities = processEditorEntities(this._config.entities);\n    }\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n\n  private _computeLabelCallback = (schema: SchemaUnion<typeof SCHEMA>) => {\n    switch (schema.name) {\n      case \"theme\":\n      case \"tap_action\":\n      case \"hold_action\":\n        return `${this.hass!.localize(\n          `ui.panel.lovelace.editor.card.generic.${schema.name}`\n        )} (${this.hass!.localize(\n          \"ui.panel.lovelace.editor.card.config.optional\"\n        )})`;\n      case \"entity\":\n        return this.hass!.localize(\n          \"ui.panel.lovelace.editor.card.picture-glance.state_entity\"\n        );\n      default:\n        return this.hass!.localize(\n          `ui.panel.lovelace.editor.card.generic.${schema.name}`\n        );\n    }\n  };\n\n  static styles: CSSResultGroup = configElementStyle;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-picture-glance-card-editor\": HuiPictureGlanceCardEditor;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}