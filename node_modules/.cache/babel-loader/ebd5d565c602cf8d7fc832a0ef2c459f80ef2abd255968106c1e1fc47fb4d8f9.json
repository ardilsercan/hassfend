{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport \"@material/mwc-button\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport { createCloseHeading } from \"../../../components/ha-dialog\";\nimport \"../../../components/ha-form/ha-form\";\nimport \"../../../components/ha-textfield\";\nimport { adminChangePassword } from \"../../../data/auth\";\nimport { haStyleDialog } from \"../../../resources/styles\";\nimport { showToast } from \"../../../util/toast\";\nconst SCHEMA = [{\n  name: \"new_password\",\n  required: true,\n  selector: {\n    text: {\n      type: \"password\",\n      autocomplete: \"new-password\"\n    }\n  }\n}, {\n  name: \"password_confirm\",\n  required: true,\n  selector: {\n    text: {\n      type: \"password\",\n      autocomplete: \"new-password\"\n    }\n  }\n}];\nlet DialogAdminChangePassword = _decorate([customElement(\"dialog-admin-change-password\")], function (_initialize, _LitElement) {\n  class DialogAdminChangePassword extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: DialogAdminChangePassword,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_params\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_userId\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_data\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_error\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_submitting\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_success\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"method\",\n      key: \"showDialog\",\n      value: function showDialog(params) {\n        this._params = params;\n        this._userId = params.userId;\n      }\n    }, {\n      kind: \"method\",\n      key: \"closeDialog\",\n      value: function closeDialog() {\n        this._params = undefined;\n        this._data = undefined;\n        this._submitting = false;\n        this._success = false;\n        fireEvent(this, \"dialog-closed\", {\n          dialog: this.localName\n        });\n      }\n    }, {\n      kind: \"field\",\n      key: \"_computeLabel\",\n      value() {\n        return schema => this.hass.localize(`ui.panel.config.users.change_password.${schema.name}`);\n      }\n    }, {\n      kind: \"field\",\n      key: \"_computeError\",\n      value() {\n        return error => this.hass.localize(`ui.panel.config.users.change_password.${error}`) || error;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_validate\",\n      value: function _validate() {\n        if (this._data && this._data.new_password && this._data.password_confirm && this._data.new_password !== this._data.password_confirm) {\n          this._error = {\n            password_confirm: \"password_no_match\"\n          };\n        } else {\n          this._error = undefined;\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var _this$_data, _this$_data2;\n        if (!this._params) {\n          return nothing;\n        }\n        const canSubmit = Boolean(((_this$_data = this._data) === null || _this$_data === void 0 ? void 0 : _this$_data.new_password) && ((_this$_data2 = this._data) === null || _this$_data2 === void 0 ? void 0 : _this$_data2.password_confirm) && !this._error);\n        return html`\n      <ha-dialog\n        open\n        @closed=${this.closeDialog}\n        scrimClickAction\n        escapeKeyAction\n        .heading=${createCloseHeading(this.hass, this.hass.localize(\"ui.panel.config.users.change_password.caption\"))}\n      >\n        ${this._success ? html`\n              <p>\n                ${this.hass.localize(\"ui.panel.config.users.change_password.password_changed\")}\n              </p>\n              <mwc-button slot=\"primaryAction\" @click=${this.closeDialog}>\n                ${this.hass.localize(\"ui.dialogs.generic.ok\")}\n              </mwc-button>\n            ` : html`\n              <ha-form\n                .hass=${this.hass}\n                .data=${this._data}\n                .error=${this._error}\n                .schema=${SCHEMA}\n                .computeLabel=${this._computeLabel}\n                .computeError=${this._computeError}\n                @value-changed=${this._valueChanged}\n                .disabled=${this._submitting}\n              ></ha-form>\n              <mwc-button slot=\"primaryAction\" @click=${this.closeDialog}>\n                ${this.hass.localize(\"ui.common.cancel\")}\n              </mwc-button>\n              <mwc-button\n                slot=\"primaryAction\"\n                @click=${this._changePassword}\n                .disabled=${this._submitting || !canSubmit}\n              >\n                ${this.hass.localize(\"ui.panel.config.users.change_password.change\")}\n              </mwc-button>\n            `}\n      </ha-dialog>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_valueChanged\",\n      value: function _valueChanged(ev) {\n        this._data = ev.detail.value;\n        this._validate();\n      }\n    }, {\n      kind: \"method\",\n      key: \"_changePassword\",\n      value: async function _changePassword() {\n        var _this$_data3;\n        if (!this._userId || !((_this$_data3 = this._data) !== null && _this$_data3 !== void 0 && _this$_data3.new_password)) return;\n        try {\n          this._submitting = true;\n          await adminChangePassword(this.hass, this._userId, this._data.new_password);\n          this._success = true;\n        } catch (err) {\n          var _err$body;\n          showToast(this, {\n            message: ((_err$body = err.body) === null || _err$body === void 0 ? void 0 : _err$body.message) || err.message || err\n          });\n        } finally {\n          this._submitting = false;\n        }\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [haStyleDialog, css``];\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","nothing","customElement","property","state","fireEvent","createCloseHeading","adminChangePassword","haStyleDialog","showToast","SCHEMA","name","required","selector","text","type","autocomplete","DialogAdminChangePassword","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","showDialog","params","_params","_userId","userId","closeDialog","undefined","_data","_submitting","_success","dialog","localName","schema","hass","localize","error","_validate","new_password","password_confirm","_error","render","_this$_data","_this$_data2","canSubmit","Boolean","_computeLabel","_computeError","_valueChanged","_changePassword","ev","detail","_this$_data3","err","_err$body","message","body","static","styles"],"sources":["/Users/sercanardil/Desktop/frontend/src/panels/config/users/dialog-admin-change-password.ts"],"sourcesContent":["import \"@material/mwc-button\";\nimport { css, CSSResultGroup, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\n\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport { createCloseHeading } from \"../../../components/ha-dialog\";\nimport \"../../../components/ha-form/ha-form\";\nimport { SchemaUnion } from \"../../../components/ha-form/types\";\nimport \"../../../components/ha-textfield\";\nimport { adminChangePassword } from \"../../../data/auth\";\nimport { haStyleDialog } from \"../../../resources/styles\";\nimport { HomeAssistant } from \"../../../types\";\nimport { showToast } from \"../../../util/toast\";\nimport { AdminChangePasswordDialogParams } from \"./show-dialog-admin-change-password\";\n\nconst SCHEMA = [\n  {\n    name: \"new_password\",\n    required: true,\n    selector: {\n      text: {\n        type: \"password\",\n        autocomplete: \"new-password\",\n      },\n    },\n  },\n  {\n    name: \"password_confirm\",\n    required: true,\n    selector: {\n      text: {\n        type: \"password\",\n        autocomplete: \"new-password\",\n      },\n    },\n  },\n] as const;\n\ntype FormData = { new_password?: string; password_confirm?: string };\n\n@customElement(\"dialog-admin-change-password\")\nclass DialogAdminChangePassword extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @state() private _params?: AdminChangePasswordDialogParams;\n\n  @state() private _userId?: string;\n\n  @state() private _data?: FormData;\n\n  @state() private _error?: Record<string, string>;\n\n  @state() private _submitting = false;\n\n  @state() private _success = false;\n\n  public showDialog(params: AdminChangePasswordDialogParams): void {\n    this._params = params;\n    this._userId = params.userId;\n  }\n\n  public closeDialog(): void {\n    this._params = undefined;\n    this._data = undefined;\n    this._submitting = false;\n    this._success = false;\n    fireEvent(this, \"dialog-closed\", { dialog: this.localName });\n  }\n\n  private _computeLabel = (schema: SchemaUnion<typeof SCHEMA>) =>\n    this.hass.localize(`ui.panel.config.users.change_password.${schema.name}`);\n\n  private _computeError = (error: string) =>\n    this.hass.localize(\n      `ui.panel.config.users.change_password.${error}` as any\n    ) || error;\n\n  private _validate() {\n    if (\n      this._data &&\n      this._data.new_password &&\n      this._data.password_confirm &&\n      this._data.new_password !== this._data.password_confirm\n    ) {\n      this._error = {\n        password_confirm: \"password_no_match\",\n      };\n    } else {\n      this._error = undefined;\n    }\n  }\n\n  protected render() {\n    if (!this._params) {\n      return nothing;\n    }\n\n    const canSubmit = Boolean(\n      this._data?.new_password && this._data?.password_confirm && !this._error\n    );\n\n    return html`\n      <ha-dialog\n        open\n        @closed=${this.closeDialog}\n        scrimClickAction\n        escapeKeyAction\n        .heading=${createCloseHeading(\n          this.hass,\n          this.hass.localize(\"ui.panel.config.users.change_password.caption\")\n        )}\n      >\n        ${this._success\n          ? html`\n              <p>\n                ${this.hass.localize(\n                  \"ui.panel.config.users.change_password.password_changed\"\n                )}\n              </p>\n              <mwc-button slot=\"primaryAction\" @click=${this.closeDialog}>\n                ${this.hass.localize(\"ui.dialogs.generic.ok\")}\n              </mwc-button>\n            `\n          : html`\n              <ha-form\n                .hass=${this.hass}\n                .data=${this._data}\n                .error=${this._error}\n                .schema=${SCHEMA}\n                .computeLabel=${this._computeLabel}\n                .computeError=${this._computeError}\n                @value-changed=${this._valueChanged}\n                .disabled=${this._submitting}\n              ></ha-form>\n              <mwc-button slot=\"primaryAction\" @click=${this.closeDialog}>\n                ${this.hass.localize(\"ui.common.cancel\")}\n              </mwc-button>\n              <mwc-button\n                slot=\"primaryAction\"\n                @click=${this._changePassword}\n                .disabled=${this._submitting || !canSubmit}\n              >\n                ${this.hass.localize(\n                  \"ui.panel.config.users.change_password.change\"\n                )}\n              </mwc-button>\n            `}\n      </ha-dialog>\n    `;\n  }\n\n  private _valueChanged(ev) {\n    this._data = ev.detail.value;\n    this._validate();\n  }\n\n  private async _changePassword(): Promise<void> {\n    if (!this._userId || !this._data?.new_password) return;\n    try {\n      this._submitting = true;\n      await adminChangePassword(\n        this.hass,\n        this._userId!,\n        this._data.new_password\n      );\n      this._success = true;\n    } catch (err: any) {\n      showToast(this, {\n        message: err.body?.message || err.message || err,\n      });\n    } finally {\n      this._submitting = false;\n    }\n  }\n\n  static get styles(): CSSResultGroup {\n    return [haStyleDialog, css``];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"dialog-admin-change-password\": DialogAdminChangePassword;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}