{"ast":null,"code":"import { addHours, subHours, differenceInDays, differenceInHours } from \"date-fns/esm\";\nimport { formatNumber, numberFormatToLocale } from \"../../../../../common/number/format_number\";\nimport { formatDateVeryShort } from \"../../../../../common/datetime/format_date\";\nimport { formatTime } from \"../../../../../common/datetime/format_time\";\nexport function getSuggestedMax(dayDifference, end) {\n  let suggestedMax = new Date(end);\n\n  // Sometimes around DST we get a time of 0:59 instead of 23:59 as expected.\n  // Correct for this when showing days/months so we don't get an extra day.\n  if (dayDifference > 2 && suggestedMax.getHours() === 0) {\n    suggestedMax = subHours(suggestedMax, 1);\n  }\n  suggestedMax.setMinutes(0, 0, 0);\n  if (dayDifference > 35) {\n    suggestedMax.setDate(1);\n  }\n  if (dayDifference > 2) {\n    suggestedMax.setHours(0);\n  }\n  return suggestedMax.getTime();\n}\nexport function getCommonOptions(start, end, locale, config, unit, compareStart, compareEnd) {\n  const dayDifference = differenceInDays(end, start);\n  const compare = compareStart !== undefined && compareEnd !== undefined;\n  if (compare && dayDifference <= 35) {\n    const difference = differenceInHours(end, start);\n    const differenceCompare = differenceInHours(compareEnd, compareStart);\n    // If the compare period doesn't match the main period, adjust them to match\n    if (differenceCompare > difference) {\n      end = addHours(end, differenceCompare - difference);\n    } else if (difference > differenceCompare) {\n      compareEnd = addHours(compareEnd, difference - differenceCompare);\n    }\n  }\n  const options = {\n    parsing: false,\n    animation: false,\n    interaction: {\n      mode: \"x\"\n    },\n    scales: {\n      x: {\n        type: \"time\",\n        suggestedMin: start.getTime(),\n        max: getSuggestedMax(dayDifference, end),\n        adapters: {\n          date: {\n            locale,\n            config\n          }\n        },\n        ticks: {\n          maxRotation: 0,\n          sampleSize: 5,\n          autoSkipPadding: 20,\n          font: context => context.tick && context.tick.major ? {\n            weight: \"bold\"\n          } : {}\n        },\n        time: {\n          tooltipFormat: dayDifference > 35 ? \"monthyear\" : dayDifference > 7 ? \"date\" : dayDifference > 2 ? \"weekday\" : dayDifference > 0 ? \"datetime\" : \"hour\",\n          minUnit: dayDifference > 35 ? \"month\" : dayDifference > 2 ? \"day\" : \"hour\"\n        }\n      },\n      y: {\n        stacked: true,\n        type: \"linear\",\n        title: {\n          display: true,\n          text: unit\n        },\n        ticks: {\n          beginAtZero: true,\n          callback: value => formatNumber(Math.abs(value), locale)\n        }\n      }\n    },\n    plugins: {\n      tooltip: {\n        position: \"nearest\",\n        filter: val => val.formattedValue !== \"0\",\n        itemSort: function (a, b) {\n          return b.datasetIndex - a.datasetIndex;\n        },\n        callbacks: {\n          title: datasets => {\n            if (dayDifference > 0) {\n              return datasets[0].label;\n            }\n            const date = new Date(datasets[0].parsed.x);\n            return `${compare ? `${formatDateVeryShort(date, locale, config)}: ` : \"\"}${formatTime(date, locale, config)} – ${formatTime(addHours(date, 1), locale, config)}`;\n          },\n          label: context => `${context.dataset.label}: ${formatNumber(context.parsed.y, locale)} ${unit}`\n        }\n      },\n      filler: {\n        propagate: false\n      },\n      legend: {\n        display: false,\n        labels: {\n          usePointStyle: true\n        }\n      }\n    },\n    elements: {\n      bar: {\n        borderWidth: 1.5,\n        borderRadius: 4\n      },\n      point: {\n        hitRadius: 50\n      }\n    },\n    // @ts-expect-error\n    locale: numberFormatToLocale(locale)\n  };\n  if (compare) {\n    options.scales.xAxisCompare = {\n      ...options.scales.x,\n      suggestedMin: compareStart.getTime(),\n      max: getSuggestedMax(dayDifference, compareEnd),\n      display: false\n    };\n  }\n  return options;\n}","map":{"version":3,"names":["addHours","subHours","differenceInDays","differenceInHours","formatNumber","numberFormatToLocale","formatDateVeryShort","formatTime","getSuggestedMax","dayDifference","end","suggestedMax","Date","getHours","setMinutes","setDate","setHours","getTime","getCommonOptions","start","locale","config","unit","compareStart","compareEnd","compare","undefined","difference","differenceCompare","options","parsing","animation","interaction","mode","scales","x","type","suggestedMin","max","adapters","date","ticks","maxRotation","sampleSize","autoSkipPadding","font","context","tick","major","weight","time","tooltipFormat","minUnit","y","stacked","title","display","text","beginAtZero","callback","value","Math","abs","plugins","tooltip","position","filter","val","formattedValue","itemSort","a","b","datasetIndex","callbacks","datasets","label","parsed","dataset","filler","propagate","legend","labels","usePointStyle","elements","bar","borderWidth","borderRadius","point","hitRadius","xAxisCompare"],"sources":["/workspaces/frontend/src/panels/lovelace/cards/energy/common/energy-chart-options.ts"],"sourcesContent":["import { ChartOptions } from \"chart.js\";\nimport { HassConfig } from \"home-assistant-js-websocket\";\nimport {\n  addHours,\n  subHours,\n  differenceInDays,\n  differenceInHours,\n} from \"date-fns/esm\";\nimport { FrontendLocaleData } from \"../../../../../data/translation\";\nimport {\n  formatNumber,\n  numberFormatToLocale,\n} from \"../../../../../common/number/format_number\";\nimport { formatDateVeryShort } from \"../../../../../common/datetime/format_date\";\nimport { formatTime } from \"../../../../../common/datetime/format_time\";\n\nexport function getSuggestedMax(dayDifference: number, end: Date): number {\n  let suggestedMax = new Date(end);\n\n  // Sometimes around DST we get a time of 0:59 instead of 23:59 as expected.\n  // Correct for this when showing days/months so we don't get an extra day.\n  if (dayDifference > 2 && suggestedMax.getHours() === 0) {\n    suggestedMax = subHours(suggestedMax, 1);\n  }\n\n  suggestedMax.setMinutes(0, 0, 0);\n  if (dayDifference > 35) {\n    suggestedMax.setDate(1);\n  }\n  if (dayDifference > 2) {\n    suggestedMax.setHours(0);\n  }\n  return suggestedMax.getTime();\n}\n\nexport function getCommonOptions(\n  start: Date,\n  end: Date,\n  locale: FrontendLocaleData,\n  config: HassConfig,\n  unit?: string,\n  compareStart?: Date,\n  compareEnd?: Date\n): ChartOptions {\n  const dayDifference = differenceInDays(end, start);\n  const compare = compareStart !== undefined && compareEnd !== undefined;\n  if (compare && dayDifference <= 35) {\n    const difference = differenceInHours(end, start);\n    const differenceCompare = differenceInHours(compareEnd!, compareStart!);\n    // If the compare period doesn't match the main period, adjust them to match\n    if (differenceCompare > difference) {\n      end = addHours(end, differenceCompare - difference);\n    } else if (difference > differenceCompare) {\n      compareEnd = addHours(compareEnd!, difference - differenceCompare);\n    }\n  }\n\n  const options: ChartOptions = {\n    parsing: false,\n    animation: false,\n    interaction: {\n      mode: \"x\",\n    },\n    scales: {\n      x: {\n        type: \"time\",\n        suggestedMin: start.getTime(),\n        max: getSuggestedMax(dayDifference, end),\n        adapters: {\n          date: {\n            locale,\n            config,\n          },\n        },\n        ticks: {\n          maxRotation: 0,\n          sampleSize: 5,\n          autoSkipPadding: 20,\n          font: (context) =>\n            context.tick && context.tick.major\n              ? ({ weight: \"bold\" } as any)\n              : {},\n        },\n        time: {\n          tooltipFormat:\n            dayDifference > 35\n              ? \"monthyear\"\n              : dayDifference > 7\n                ? \"date\"\n                : dayDifference > 2\n                  ? \"weekday\"\n                  : dayDifference > 0\n                    ? \"datetime\"\n                    : \"hour\",\n          minUnit:\n            dayDifference > 35 ? \"month\" : dayDifference > 2 ? \"day\" : \"hour\",\n        },\n      },\n      y: {\n        stacked: true,\n        type: \"linear\",\n        title: {\n          display: true,\n          text: unit,\n        },\n        ticks: {\n          beginAtZero: true,\n          callback: (value) => formatNumber(Math.abs(value), locale),\n        },\n      },\n    },\n    plugins: {\n      tooltip: {\n        position: \"nearest\",\n        filter: (val) => val.formattedValue !== \"0\",\n        itemSort: function (a, b) {\n          return b.datasetIndex - a.datasetIndex;\n        },\n        callbacks: {\n          title: (datasets) => {\n            if (dayDifference > 0) {\n              return datasets[0].label;\n            }\n            const date = new Date(datasets[0].parsed.x);\n            return `${\n              compare ? `${formatDateVeryShort(date, locale, config)}: ` : \"\"\n            }${formatTime(date, locale, config)} – ${formatTime(\n              addHours(date, 1),\n              locale,\n              config\n            )}`;\n          },\n          label: (context) =>\n            `${context.dataset.label}: ${formatNumber(\n              context.parsed.y,\n              locale\n            )} ${unit}`,\n        },\n      },\n      filler: {\n        propagate: false,\n      },\n      legend: {\n        display: false,\n        labels: {\n          usePointStyle: true,\n        },\n      },\n    },\n    elements: {\n      bar: { borderWidth: 1.5, borderRadius: 4 },\n      point: {\n        hitRadius: 50,\n      },\n    },\n    // @ts-expect-error\n    locale: numberFormatToLocale(locale),\n  };\n  if (compare) {\n    options.scales!.xAxisCompare = {\n      ...(options.scales!.x as Record<string, any>),\n      suggestedMin: compareStart!.getTime(),\n      max: getSuggestedMax(dayDifference, compareEnd!),\n      display: false,\n    };\n  }\n  return options;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}