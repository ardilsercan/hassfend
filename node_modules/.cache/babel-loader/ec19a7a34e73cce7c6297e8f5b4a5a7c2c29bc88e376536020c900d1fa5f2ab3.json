{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport { css, html, LitElement } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport \"../components/entity/state-info\";\nimport \"../components/ha-slider\";\nimport \"../components/ha-textfield\";\nimport { haStyle } from \"../resources/styles\";\nimport { loadPolyfillIfNeeded } from \"../resources/resize-observer.polyfill\";\nimport { isUnavailableState } from \"../data/entity\";\nimport { debounce } from \"../common/util/debounce\";\nlet StateCardNumber = _decorate([customElement(\"state-card-number\")], function (_initialize, _LitElement) {\n  class StateCardNumber extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: StateCardNumber,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"stateObj\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"inDialog\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_loaded\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_updated\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_resizeObserver\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"connectedCallback\",\n      value: function connectedCallback() {\n        _get(_getPrototypeOf(StateCardNumber.prototype), \"connectedCallback\", this).call(this);\n        if (this._updated && !this._loaded) {\n          this._initialLoad();\n        }\n        this._attachObserver();\n      }\n    }, {\n      kind: \"method\",\n      key: \"disconnectedCallback\",\n      value: function disconnectedCallback() {\n        var _this$_resizeObserver;\n        _get(_getPrototypeOf(StateCardNumber.prototype), \"disconnectedCallback\", this).call(this);\n        (_this$_resizeObserver = this._resizeObserver) === null || _this$_resizeObserver === void 0 || _this$_resizeObserver.disconnect();\n      }\n    }, {\n      kind: \"method\",\n      key: \"firstUpdated\",\n      value: function firstUpdated() {\n        this._updated = true;\n        if (this.isConnected && !this._loaded) {\n          this._initialLoad();\n        }\n        this._attachObserver();\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        const range = this.stateObj.attributes.max - this.stateObj.attributes.min;\n        return html`\n      <state-info\n        .hass=${this.hass}\n        .stateObj=${this.stateObj}\n        .inDialog=${this.inDialog}\n      ></state-info>\n      ${this.stateObj.attributes.mode === \"slider\" || this.stateObj.attributes.mode === \"auto\" && range <= 256 ? html`\n            <div class=\"flex\">\n              <ha-slider\n                labeled\n                .disabled=${isUnavailableState(this.stateObj.state)}\n                .step=${Number(this.stateObj.attributes.step)}\n                .min=${Number(this.stateObj.attributes.min)}\n                .max=${Number(this.stateObj.attributes.max)}\n                .value=${this.stateObj.state}\n                @change=${this._selectedValueChanged}\n              >\n              </ha-slider>\n              <span class=\"state\">\n                ${this.hass.formatEntityState(this.stateObj)}\n              </span>\n            </div>\n          ` : html` <div class=\"flex state\">\n            <ha-textfield\n              .disabled=${isUnavailableState(this.stateObj.state)}\n              pattern=\"[0-9]+([\\\\.][0-9]+)?\"\n              .step=${Number(this.stateObj.attributes.step)}\n              .min=${Number(this.stateObj.attributes.min)}\n              .max=${Number(this.stateObj.attributes.max)}\n              .value=${Number(this.stateObj.state).toString()}\n              .suffix=${this.stateObj.attributes.unit_of_measurement || \"\"}\n              type=\"number\"\n              @change=${this._selectedValueChanged}\n            >\n            </ha-textfield>\n          </div>`}\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_initialLoad\",\n      value: async function _initialLoad() {\n        this._loaded = true;\n        await this.updateComplete;\n        this._measureCard();\n      }\n    }, {\n      kind: \"method\",\n      key: \"_measureCard\",\n      value: function _measureCard() {\n        if (!this.isConnected) {\n          return;\n        }\n        const element = this.shadowRoot.querySelector(\".state\");\n        if (!element) {\n          return;\n        }\n        element.hidden = this.clientWidth <= 300;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_attachObserver\",\n      value: async function _attachObserver() {\n        if (!this._resizeObserver) {\n          await loadPolyfillIfNeeded();\n          this._resizeObserver = new ResizeObserver(debounce(() => this._measureCard(), 250, false));\n        }\n        if (this.isConnected) {\n          this._resizeObserver.observe(this);\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_selectedValueChanged\",\n      value: async function _selectedValueChanged(ev) {\n        const value = ev.target.value;\n        if (value === this.stateObj.state) {\n          return;\n        }\n        await this.hass.callService(\"number\", \"set_value\", {\n          value: value,\n          entity_id: this.stateObj.entity_id\n        });\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [haStyle, css`\n        :host {\n          display: flex;\n        }\n        .flex {\n          display: flex;\n          align-items: center;\n          justify-content: flex-end;\n          flex-grow: 2;\n        }\n        .state {\n          min-width: 45px;\n          text-align: end;\n        }\n        ha-textfield {\n          text-align: end;\n        }\n        ha-slider {\n          width: 100%;\n          max-width: 200px;\n        }\n      `];\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","customElement","property","haStyle","loadPolyfillIfNeeded","isUnavailableState","debounce","StateCardNumber","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","type","Boolean","connectedCallback","_get","_getPrototypeOf","prototype","call","_updated","_loaded","_initialLoad","_attachObserver","disconnectedCallback","_this$_resizeObserver","_resizeObserver","disconnect","firstUpdated","isConnected","render","range","stateObj","attributes","max","min","hass","inDialog","mode","state","Number","step","_selectedValueChanged","formatEntityState","toString","unit_of_measurement","updateComplete","_measureCard","element","shadowRoot","querySelector","hidden","clientWidth","ResizeObserver","observe","ev","target","callService","entity_id","static","styles"],"sources":["/workspaces/frontend/src/state-summary/state-card-number.ts"],"sourcesContent":["import type { HassEntity } from \"home-assistant-js-websocket\";\nimport { css, CSSResultGroup, html, LitElement } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport \"../components/entity/state-info\";\nimport \"../components/ha-slider\";\nimport \"../components/ha-textfield\";\nimport { HomeAssistant } from \"../types\";\nimport { haStyle } from \"../resources/styles\";\nimport { loadPolyfillIfNeeded } from \"../resources/resize-observer.polyfill\";\nimport { isUnavailableState } from \"../data/entity\";\nimport { debounce } from \"../common/util/debounce\";\n\n@customElement(\"state-card-number\")\nclass StateCardNumber extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public stateObj!: HassEntity;\n\n  @property({ type: Boolean }) public inDialog = false;\n\n  private _loaded?: boolean;\n\n  private _updated?: boolean;\n\n  private _resizeObserver?: ResizeObserver;\n\n  public connectedCallback(): void {\n    super.connectedCallback();\n    if (this._updated && !this._loaded) {\n      this._initialLoad();\n    }\n    this._attachObserver();\n  }\n\n  public disconnectedCallback(): void {\n    super.disconnectedCallback();\n    this._resizeObserver?.disconnect();\n  }\n\n  protected firstUpdated(): void {\n    this._updated = true;\n    if (this.isConnected && !this._loaded) {\n      this._initialLoad();\n    }\n    this._attachObserver();\n  }\n\n  protected render() {\n    const range = this.stateObj.attributes.max - this.stateObj.attributes.min;\n\n    return html`\n      <state-info\n        .hass=${this.hass}\n        .stateObj=${this.stateObj}\n        .inDialog=${this.inDialog}\n      ></state-info>\n      ${this.stateObj.attributes.mode === \"slider\" ||\n      (this.stateObj.attributes.mode === \"auto\" && range <= 256)\n        ? html`\n            <div class=\"flex\">\n              <ha-slider\n                labeled\n                .disabled=${isUnavailableState(this.stateObj.state)}\n                .step=${Number(this.stateObj.attributes.step)}\n                .min=${Number(this.stateObj.attributes.min)}\n                .max=${Number(this.stateObj.attributes.max)}\n                .value=${this.stateObj.state}\n                @change=${this._selectedValueChanged}\n              >\n              </ha-slider>\n              <span class=\"state\">\n                ${this.hass.formatEntityState(this.stateObj)}\n              </span>\n            </div>\n          `\n        : html` <div class=\"flex state\">\n            <ha-textfield\n              .disabled=${isUnavailableState(this.stateObj.state)}\n              pattern=\"[0-9]+([\\\\.][0-9]+)?\"\n              .step=${Number(this.stateObj.attributes.step)}\n              .min=${Number(this.stateObj.attributes.min)}\n              .max=${Number(this.stateObj.attributes.max)}\n              .value=${Number(this.stateObj.state).toString()}\n              .suffix=${this.stateObj.attributes.unit_of_measurement || \"\"}\n              type=\"number\"\n              @change=${this._selectedValueChanged}\n            >\n            </ha-textfield>\n          </div>`}\n    `;\n  }\n\n  private async _initialLoad(): Promise<void> {\n    this._loaded = true;\n    await this.updateComplete;\n    this._measureCard();\n  }\n\n  private _measureCard() {\n    if (!this.isConnected) {\n      return;\n    }\n    const element = this.shadowRoot!.querySelector(\".state\") as HTMLElement;\n    if (!element) {\n      return;\n    }\n    element.hidden = this.clientWidth <= 300;\n  }\n\n  private async _attachObserver(): Promise<void> {\n    if (!this._resizeObserver) {\n      await loadPolyfillIfNeeded();\n      this._resizeObserver = new ResizeObserver(\n        debounce(() => this._measureCard(), 250, false)\n      );\n    }\n    if (this.isConnected) {\n      this._resizeObserver.observe(this);\n    }\n  }\n\n  private async _selectedValueChanged(ev: Event) {\n    const value = (ev.target as HTMLInputElement).value;\n    if (value === this.stateObj.state) {\n      return;\n    }\n    await this.hass.callService(\"number\", \"set_value\", {\n      value: value,\n      entity_id: this.stateObj.entity_id,\n    });\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyle,\n      css`\n        :host {\n          display: flex;\n        }\n        .flex {\n          display: flex;\n          align-items: center;\n          justify-content: flex-end;\n          flex-grow: 2;\n        }\n        .state {\n          min-width: 45px;\n          text-align: end;\n        }\n        ha-textfield {\n          text-align: end;\n        }\n        ha-slider {\n          width: 100%;\n          max-width: 200px;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"state-card-number\": StateCardNumber;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}