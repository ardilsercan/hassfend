{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nconst mdiClose = \"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, query } from \"lit/decorators\";\nimport { ensureArray } from \"../../../../../common/array/ensure-array\";\nimport { fireEvent } from \"../../../../../common/dom/fire_event\";\nimport \"../../../../../components/ha-textfield\";\nimport { showConfirmationDialog } from \"../../../../../dialogs/generic/show-dialog-box\";\nconst PATTERN = \"^[^.。,，?¿？؟!！;；:：]+$\";\nexport let HaConversationTrigger = _decorate([customElement(\"ha-automation-trigger-conversation\")], function (_initialize, _LitElement) {\n  class HaConversationTrigger extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaConversationTrigger,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"trigger\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"disabled\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [query(\"#option_input\", true)],\n      key: \"_optionInput\",\n      value: void 0\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"defaultConfig\",\n      value: function defaultConfig() {\n        return {\n          command: \"\"\n        };\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        const {\n          command\n        } = this.trigger;\n        const commands = command ? ensureArray(command) : [];\n        return html`${commands.length ? commands.map((option, index) => html`\n              <ha-textfield\n                class=\"option\"\n                iconTrailing\n                .index=${index}\n                .value=${option}\n                .validationMessage=${this.hass.localize(\"ui.panel.config.automation.editor.triggers.type.conversation.no_punctuation\")}\n                autoValidate\n                validateOnInitialRender\n                pattern=${PATTERN}\n                @change=${this._updateOption}\n              >\n                <ha-icon-button\n                  @click=${this._removeOption}\n                  slot=\"trailingIcon\"\n                  .path=${mdiClose}\n                ></ha-icon-button>\n              </ha-textfield>\n            `) : nothing}\n      <ha-textfield\n        class=\"flex-auto\"\n        id=\"option_input\"\n        .label=${this.hass.localize(\"ui.panel.config.automation.editor.triggers.type.conversation.add_sentence\")}\n        .validationMessage=${this.hass.localize(\"ui.panel.config.automation.editor.triggers.type.conversation.no_punctuation\")}\n        autoValidate\n        pattern=${PATTERN}\n        @keydown=${this._handleKeyAdd}\n        @change=${this._addOption}\n      ></ha-textfield>`;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleKeyAdd\",\n      value: function _handleKeyAdd(ev) {\n        ev.stopPropagation();\n        if (ev.key !== \"Enter\") {\n          return;\n        }\n        this._addOption();\n      }\n    }, {\n      kind: \"method\",\n      key: \"_addOption\",\n      value: function _addOption() {\n        const input = this._optionInput;\n        if (!(input !== null && input !== void 0 && input.value)) {\n          return;\n        }\n        fireEvent(this, \"value-changed\", {\n          value: {\n            ...this.trigger,\n            command: this.trigger.command.length ? [...(Array.isArray(this.trigger.command) ? this.trigger.command : [this.trigger.command]), input.value] : input.value\n          }\n        });\n        input.value = \"\";\n      }\n    }, {\n      kind: \"method\",\n      key: \"_updateOption\",\n      value: async function _updateOption(ev) {\n        const index = ev.target.index;\n        const command = [...(Array.isArray(this.trigger.command) ? this.trigger.command : [this.trigger.command])];\n        command.splice(index, 1, ev.target.value);\n        fireEvent(this, \"value-changed\", {\n          value: {\n            ...this.trigger,\n            command\n          }\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_removeOption\",\n      value: async function _removeOption(ev) {\n        const index = ev.target.parentElement.index;\n        if (!(await showConfirmationDialog(this, {\n          title: this.hass.localize(\"ui.panel.config.automation.editor.triggers.type.conversation.delete\"),\n          text: this.hass.localize(\"ui.panel.config.automation.editor.triggers.type.conversation.confirm_delete\"),\n          destructive: true\n        }))) {\n          return;\n        }\n        let command;\n        if (!Array.isArray(this.trigger.command)) {\n          command = \"\";\n        } else {\n          command = [...this.trigger.command];\n          command.splice(index, 1);\n        }\n        fireEvent(this, \"value-changed\", {\n          value: {\n            ...this.trigger,\n            command\n          }\n        });\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css`\n      .layout {\n        display: flex;\n        flex-direction: row;\n        flex-wrap: nowrap;\n        align-items: center;\n        justify-content: flex-start;\n      }\n      .option {\n        margin-top: 4px;\n      }\n      mwc-button {\n        margin-left: 8px;\n        margin-inline-start: 8px;\n        margin-inline-end: initial;\n      }\n      ha-textfield {\n        display: block;\n        margin-bottom: 8px;\n        --textfield-icon-trailing-padding: 0;\n      }\n      ha-textfield > ha-icon-button {\n        position: relative;\n        right: -8px;\n        --mdc-icon-button-size: 36px;\n        --mdc-icon-size: 20px;\n        color: var(--secondary-text-color);\n        inset-inline-start: initial;\n        inset-inline-end: -8px;\n        direction: var(--direction);\n      }\n      #option_input {\n        margin-top: 8px;\n      }\n      .header {\n        margin-top: 8px;\n        margin-bottom: 8px;\n      }\n    `;\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","nothing","customElement","property","query","ensureArray","fireEvent","showConfirmationDialog","PATTERN","HaConversationTrigger","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","type","Boolean","static","defaultConfig","command","render","trigger","commands","length","map","option","index","hass","localize","_updateOption","_removeOption","mdiClose","_handleKeyAdd","_addOption","ev","stopPropagation","input","_optionInput","Array","isArray","target","splice","parentElement","title","text","destructive","styles"],"sources":["/Users/sercanardil/Desktop/frontend/src/panels/config/automation/trigger/types/ha-automation-trigger-conversation.ts"],"sourcesContent":["import { mdiClose } from \"@mdi/js\";\nimport { css, CSSResultGroup, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, query } from \"lit/decorators\";\nimport { ensureArray } from \"../../../../../common/array/ensure-array\";\nimport { fireEvent } from \"../../../../../common/dom/fire_event\";\nimport \"../../../../../components/ha-textfield\";\nimport type { HaTextField } from \"../../../../../components/ha-textfield\";\nimport { ConversationTrigger } from \"../../../../../data/automation\";\nimport { showConfirmationDialog } from \"../../../../../dialogs/generic/show-dialog-box\";\nimport { HomeAssistant } from \"../../../../../types\";\nimport { TriggerElement } from \"../ha-automation-trigger-row\";\n\nconst PATTERN = \"^[^.。,，?¿？؟!！;；:：]+$\";\n\n@customElement(\"ha-automation-trigger-conversation\")\nexport class HaConversationTrigger\n  extends LitElement\n  implements TriggerElement\n{\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public trigger!: ConversationTrigger;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @query(\"#option_input\", true) private _optionInput?: HaTextField;\n\n  public static get defaultConfig(): Omit<ConversationTrigger, \"platform\"> {\n    return { command: \"\" };\n  }\n\n  protected render() {\n    const { command } = this.trigger;\n    const commands = command ? ensureArray(command) : [];\n\n    return html`${commands.length\n        ? commands.map(\n            (option, index) => html`\n              <ha-textfield\n                class=\"option\"\n                iconTrailing\n                .index=${index}\n                .value=${option}\n                .validationMessage=${this.hass.localize(\n                  \"ui.panel.config.automation.editor.triggers.type.conversation.no_punctuation\"\n                )}\n                autoValidate\n                validateOnInitialRender\n                pattern=${PATTERN}\n                @change=${this._updateOption}\n              >\n                <ha-icon-button\n                  @click=${this._removeOption}\n                  slot=\"trailingIcon\"\n                  .path=${mdiClose}\n                ></ha-icon-button>\n              </ha-textfield>\n            `\n          )\n        : nothing}\n      <ha-textfield\n        class=\"flex-auto\"\n        id=\"option_input\"\n        .label=${this.hass.localize(\n          \"ui.panel.config.automation.editor.triggers.type.conversation.add_sentence\"\n        )}\n        .validationMessage=${this.hass.localize(\n          \"ui.panel.config.automation.editor.triggers.type.conversation.no_punctuation\"\n        )}\n        autoValidate\n        pattern=${PATTERN}\n        @keydown=${this._handleKeyAdd}\n        @change=${this._addOption}\n      ></ha-textfield>`;\n  }\n\n  private _handleKeyAdd(ev: KeyboardEvent) {\n    ev.stopPropagation();\n    if (ev.key !== \"Enter\") {\n      return;\n    }\n    this._addOption();\n  }\n\n  private _addOption() {\n    const input = this._optionInput;\n    if (!input?.value) {\n      return;\n    }\n    fireEvent(this, \"value-changed\", {\n      value: {\n        ...this.trigger,\n        command: this.trigger.command.length\n          ? [\n              ...(Array.isArray(this.trigger.command)\n                ? this.trigger.command\n                : [this.trigger.command]),\n              input.value,\n            ]\n          : input.value,\n      },\n    });\n    input.value = \"\";\n  }\n\n  private async _updateOption(ev: Event) {\n    const index = (ev.target as any).index;\n    const command = [\n      ...(Array.isArray(this.trigger.command)\n        ? this.trigger.command\n        : [this.trigger.command]),\n    ];\n    command.splice(index, 1, (ev.target as HaTextField).value);\n    fireEvent(this, \"value-changed\", {\n      value: { ...this.trigger, command },\n    });\n  }\n\n  private async _removeOption(ev: Event) {\n    const index = (ev.target as any).parentElement.index;\n    if (\n      !(await showConfirmationDialog(this, {\n        title: this.hass.localize(\n          \"ui.panel.config.automation.editor.triggers.type.conversation.delete\"\n        ),\n        text: this.hass.localize(\n          \"ui.panel.config.automation.editor.triggers.type.conversation.confirm_delete\"\n        ),\n        destructive: true,\n      }))\n    ) {\n      return;\n    }\n    let command: string[] | string;\n    if (!Array.isArray(this.trigger.command)) {\n      command = \"\";\n    } else {\n      command = [...this.trigger.command];\n      command.splice(index, 1);\n    }\n    fireEvent(this, \"value-changed\", {\n      value: { ...this.trigger, command },\n    });\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      .layout {\n        display: flex;\n        flex-direction: row;\n        flex-wrap: nowrap;\n        align-items: center;\n        justify-content: flex-start;\n      }\n      .option {\n        margin-top: 4px;\n      }\n      mwc-button {\n        margin-left: 8px;\n        margin-inline-start: 8px;\n        margin-inline-end: initial;\n      }\n      ha-textfield {\n        display: block;\n        margin-bottom: 8px;\n        --textfield-icon-trailing-padding: 0;\n      }\n      ha-textfield > ha-icon-button {\n        position: relative;\n        right: -8px;\n        --mdc-icon-button-size: 36px;\n        --mdc-icon-size: 20px;\n        color: var(--secondary-text-color);\n        inset-inline-start: initial;\n        inset-inline-end: -8px;\n        direction: var(--direction);\n      }\n      #option_input {\n        margin-top: 8px;\n      }\n      .header {\n        margin-top: 8px;\n        margin-bottom: 8px;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-automation-trigger-conversation\": HaConversationTrigger;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}