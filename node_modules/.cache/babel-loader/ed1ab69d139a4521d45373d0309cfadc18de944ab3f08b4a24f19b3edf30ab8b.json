{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _decorate from \"@babel/runtime/helpers/decorate\";\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10, _templateObject11, _templateObject12, _templateObject13, _templateObject14, _templateObject15, _templateObject16, _templateObject17, _templateObject18;\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.ends-with.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, eventOptions, property } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport { styleMap } from \"lit/directives/style-map\";\nimport { isComponentLoaded } from \"../../common/config/is_component_loaded\";\nimport { formatDate } from \"../../common/datetime/format_date\";\nimport { formatTimeWithSeconds } from \"../../common/datetime/format_time\";\nimport { restoreScroll } from \"../../common/decorators/restore-scroll\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { computeDomain } from \"../../common/entity/compute_domain\";\nimport { navigate } from \"../../common/navigate\";\nimport { computeTimelineColor } from \"../../components/chart/timeline-chart/timeline-color\";\nimport \"../../components/entity/state-badge\";\nimport \"../../components/ha-circular-progress\";\nimport \"../../components/ha-icon-next\";\nimport \"../../components/ha-relative-time\";\nimport { createHistoricState, localizeStateMessage, localizeTriggerSource } from \"../../data/logbook\";\nimport { buttonLinkStyle, haStyle, haStyleScrollbar } from \"../../resources/styles\";\nimport { loadVirtualizer } from \"../../resources/virtualizer\";\nimport { brandsUrl } from \"../../util/brands-url\";\nimport { domainToName } from \"../../data/integration\";\nvar triggerDomains = [\"script\", \"automation\"];\nvar hasContext = function hasContext(item) {\n  return item.context_event_type || item.context_state || item.context_message;\n};\nvar stripEntityId = function stripEntityId(message, entityId) {\n  return entityId ? message.replace(entityId, \" \") : message;\n};\nvar HaLogbookRenderer = _decorate([customElement(\"ha-logbook-renderer\")], function (_initialize, _LitElement) {\n  var HaLogbookRenderer = /*#__PURE__*/function (_LitElement2) {\n    _inherits(HaLogbookRenderer, _LitElement2);\n    function HaLogbookRenderer() {\n      var _this;\n      _classCallCheck(this, HaLogbookRenderer);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, HaLogbookRenderer, [].concat(args));\n      _initialize(_assertThisInitialized(_this));\n      return _this;\n    }\n    return _createClass(HaLogbookRenderer);\n  }(_LitElement);\n  return {\n    F: HaLogbookRenderer,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"userIdToName\",\n      value: function value() {\n        return {};\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"traceContexts\",\n      value: function value() {\n        return {};\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"entries\",\n      value: function value() {\n        return [];\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        attribute: \"narrow\"\n      })],\n      key: \"narrow\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        attribute: \"virtualize\",\n        reflect: true\n      })],\n      key: \"virtualize\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        attribute: \"show-indicator\"\n      })],\n      key: \"showIndicator\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        attribute: \"no-icon\"\n      })],\n      key: \"noIcon\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        attribute: \"no-name\"\n      })],\n      key: \"noName\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        attribute: \"relative-time\"\n      })],\n      key: \"relativeTime\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [restoreScroll(\".container\")],\n      key: \"_savedScrollPos\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"willUpdate\",\n      value:\n      // @ts-ignore\n\n      function willUpdate(changedProps) {\n        if (!this.hasUpdated && this.virtualize || changedProps.has(\"virtualize\") && this.virtualize) {\n          this.hass.loadBackendTranslation(\"services\");\n          this.hass.loadBackendTranslation(\"title\");\n          loadVirtualizer();\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"shouldUpdate\",\n      value: function shouldUpdate(changedProps) {\n        var oldHass = changedProps.get(\"hass\");\n        var languageChanged = oldHass === undefined || oldHass.locale !== this.hass.locale;\n        return changedProps.has(\"entries\") || changedProps.has(\"traceContexts\") || languageChanged;\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var _this$entries,\n          _this2 = this;\n        if (!((_this$entries = this.entries) !== null && _this$entries !== void 0 && _this$entries.length)) {\n          return html(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n        <div class=\\\"container no-entries\\\">\\n          \", \"\\n        </div>\\n      \"])), this.hass.localize(\"ui.components.logbook.entries_not_found\"));\n        }\n        return html(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n      <div\\n        class=\\\"container ha-scrollbar \", \"\\\"\\n        @scroll=\", \"\\n      >\\n        \", \"\\n      </div>\\n    \"])), classMap({\n          narrow: this.narrow,\n          \"no-name\": this.noName,\n          \"no-icon\": this.noIcon\n        }), this._saveScrollPos, this.virtualize ? html(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"<lit-virtualizer\\n              @visibilityChanged=\", \"\\n              scroller\\n              class=\\\"ha-scrollbar\\\"\\n              .items=\", \"\\n              .renderItem=\", \"\\n            >\\n            </lit-virtualizer>\"])), this._visibilityChanged, this.entries, this._renderLogbookItem) : this.entries.map(function (item, index) {\n          return _this2._renderLogbookItem(item, index);\n        }));\n      }\n    }, {\n      kind: \"field\",\n      key: \"_renderLogbookItem\",\n      value: function value() {\n        var _this3 = this;\n        return function (item, index) {\n          var _this3$hass$themes;\n          if (!item || index === undefined) {\n            return nothing;\n          }\n          var previous = _this3.entries[index - 1];\n          var seenEntityIds = [];\n          var currentStateObj = item.entity_id ? _this3.hass.states[item.entity_id] : undefined;\n          var historicStateObj = currentStateObj ? createHistoricState(currentStateObj, item.state) : undefined;\n          var domain = item.entity_id ? computeDomain(item.entity_id) :\n          // Domain is there if there is no entity ID.\n          item.domain;\n          var overrideImage = !historicStateObj && !item.icon && !item.state && domain && isComponentLoaded(_this3.hass, domain) ? brandsUrl({\n            domain: domain,\n            type: \"icon\",\n            useFallback: true,\n            darkOptimized: (_this3$hass$themes = _this3.hass.themes) === null || _this3$hass$themes === void 0 ? void 0 : _this3$hass$themes.darkMode\n          }) : undefined;\n          var traceContext = triggerDomains.includes(item.domain) && item.context_id in _this3.traceContexts ? _this3.traceContexts[item.context_id] : undefined;\n          var hasTrace = traceContext !== undefined;\n          return html(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n      <div\\n        class=\\\"entry-container \", \"\\\"\\n        .traceLink=\", \"\\n        @click=\", \"\\n      >\\n        \", \"\\n\\n        <div class=\\\"entry \", \"\\\">\\n          <div class=\\\"icon-message\\\">\\n            \", \"\\n            \", \"\\n            <div class=\\\"message-relative_time\\\">\\n              <div class=\\\"message\\\">\\n                \", \"\\n                \", \"\\n                \", \"\\n              </div>\\n              <div class=\\\"secondary\\\">\\n                <span\\n                  >\", \"</span\\n                >\\n                -\\n                <ha-relative-time\\n                  .hass=\", \"\\n                  .datetime=\", \"\\n                  capitalize\\n                ></ha-relative-time>\\n                \", \"\\n                \", \"\\n              </div>\\n            </div>\\n          </div>\\n          \", \"\\n        </div>\\n      </div>\\n    \"])), classMap({\n            clickable: hasTrace\n          }), traceContext ? \"/config/\".concat(traceContext.domain, \"/trace/\").concat(traceContext.item_id, \"?run_id=\").concat(traceContext.run_id) : undefined, _this3._handleClick, index === 0 || item !== null && item !== void 0 && item.when && previous !== null && previous !== void 0 && previous.when && new Date(item.when * 1000).toDateString() !== new Date(previous.when * 1000).toDateString() ? html(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"\\n              <h4 class=\\\"date\\\">\\n                \", \"\\n              </h4>\\n            \"])), formatDate(new Date(item.when * 1000), _this3.hass.locale, _this3.hass.config)) : nothing, classMap({\n            \"no-entity\": !item.entity_id\n          }), !_this3.noIcon ? html(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"\\n                  <state-badge\\n                    .hass=\", \"\\n                    .overrideIcon=\", \"\\n                    .overrideImage=\", \"\\n                    .stateObj=\", \"\\n                    .stateColor=\", \"\\n                  ></state-badge>\\n                \"])), _this3.hass, item.icon, overrideImage, item.icon ? undefined : historicStateObj, false) : \"\", _this3.showIndicator ? _this3._renderIndicator(item) : \"\", !_this3.noName // Used for more-info panel (single entity case)\n          ? _this3._renderEntity(item.entity_id, item.name, hasTrace) : \"\", _this3._renderMessage(item, seenEntityIds, domain, historicStateObj, hasTrace), _this3._renderContextMessage(item, seenEntityIds, hasTrace), formatTimeWithSeconds(new Date(item.when * 1000), _this3.hass.locale, _this3.hass.config), _this3.hass, item.when * 1000, item.context_user_id ? html(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral([\"\", \"\"])), _this3._renderUser(item)) : \"\", hasTrace ? \"- \".concat(_this3.hass.localize(\"ui.components.logbook.show_trace\")) : \"\", hasTrace ? html(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral([\"<ha-icon-next></ha-icon-next>\"]))) : \"\");\n        };\n      }\n    }, {\n      kind: \"method\",\n      decorators: [eventOptions({\n        passive: true\n      })],\n      key: \"_saveScrollPos\",\n      value: function _saveScrollPos(e) {\n        this._savedScrollPos = e.target.scrollTop;\n      }\n    }, {\n      kind: \"method\",\n      decorators: [eventOptions({\n        passive: true\n      })],\n      key: \"_visibilityChanged\",\n      value: function _visibilityChanged(e) {\n        fireEvent(this, \"hass-logbook-live\", {\n          enable: e.first === 0\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_renderIndicator\",\n      value: function _renderIndicator(item) {\n        var stateObj = this.hass.states[item.entity_id];\n        var computedStyles = getComputedStyle(this);\n        var color = item.state !== undefined ? computeTimelineColor(item.state, computedStyles, stateObj) : undefined;\n        var style = {\n          backgroundColor: color\n        };\n        return html(_templateObject9 || (_templateObject9 = _taggedTemplateLiteral([\" <div class=\\\"indicator\\\" style=\", \"></div> \"])), styleMap(style));\n      }\n    }, {\n      kind: \"method\",\n      key: \"_renderMessage\",\n      value: function _renderMessage(item, seenEntityIds, domain, historicStateObj, noLink) {\n        if (item.entity_id) {\n          if (item.state) {\n            return historicStateObj ? localizeStateMessage(this.hass, this.hass.localize, item.state, historicStateObj, domain) : item.state;\n          }\n        }\n        var itemHasContext = hasContext(item);\n        var message = item.message;\n        if (triggerDomains.includes(domain) && item.source) {\n          if (itemHasContext) {\n            // These domains include the trigger source in the message\n            // but if we have the context we want to display that instead\n            // as otherwise we display duplicate triggers\n            return \"\";\n          }\n          message = localizeTriggerSource(this.hass.localize, item.source);\n        }\n        return message ? this._formatMessageWithPossibleEntity(itemHasContext ? stripEntityId(message, item.context_entity_id) : message, seenEntityIds, undefined, noLink) : \"\";\n      }\n    }, {\n      kind: \"method\",\n      key: \"_renderUser\",\n      value: function _renderUser(item) {\n        var item_username = item.context_user_id && this.userIdToName[item.context_user_id];\n        if (item_username) {\n          return \"- \".concat(item_username);\n        }\n        return \"\";\n      }\n    }, {\n      kind: \"method\",\n      key: \"_renderUnseenContextSourceEntity\",\n      value: function _renderUnseenContextSourceEntity(item, seenEntityIds, noLink) {\n        if (!item.context_entity_id || seenEntityIds.includes(item.context_entity_id)) {\n          return \"\";\n        }\n        // We don't know what caused this entity\n        // to be included since its an integration\n        // described event.\n        return html(_templateObject10 || (_templateObject10 = _taggedTemplateLiteral([\" (\", \")\"])), this._renderEntity(item.context_entity_id, item.context_entity_id_name, noLink));\n      }\n    }, {\n      kind: \"method\",\n      key: \"_renderContextMessage\",\n      value: function _renderContextMessage(item, seenEntityIds, noLink) {\n        // State change\n        if (item.context_state) {\n          var historicStateObj = item.context_entity_id && item.context_entity_id in this.hass.states ? createHistoricState(this.hass.states[item.context_entity_id], item.context_state) : undefined;\n          return html(_templateObject11 || (_templateObject11 = _taggedTemplateLiteral([\"\", \"\\n      \", \"\\n      \", \"\"])), this.hass.localize(\"ui.components.logbook.triggered_by_state_of\"), this._renderEntity(item.context_entity_id, item.context_entity_id_name, noLink), historicStateObj ? localizeStateMessage(this.hass, this.hass.localize, item.context_state, historicStateObj, computeDomain(item.context_entity_id)) : item.context_state);\n        }\n        // Service call\n        if (item.context_event_type === \"call_service\") {\n          var _this$hass$services$i;\n          return html(_templateObject12 || (_templateObject12 = _taggedTemplateLiteral([\"\", \"\\n      \", \"\"])), this.hass.localize(\"ui.components.logbook.triggered_by_service\"), item.context_domain && item.context_service ? \"\".concat(domainToName(this.hass.localize, item.context_domain), \":\\n      \").concat(this.hass.localize(\"component.\".concat(item.context_domain, \".services.\").concat(item.context_service, \".name\")) || ((_this$hass$services$i = this.hass.services[item.context_domain]) === null || _this$hass$services$i === void 0 || (_this$hass$services$i = _this$hass$services$i[item.context_service]) === null || _this$hass$services$i === void 0 ? void 0 : _this$hass$services$i.name) || item.context_service) : \"\");\n        }\n        if (!item.context_message || seenEntityIds.includes(item.context_entity_id)) {\n          return \"\";\n        }\n        // Automation or script\n        if (item.context_event_type === \"automation_triggered\" || item.context_event_type === \"script_started\") {\n          // context_source is available in 2022.6 and later\n          var triggerMsg = item.context_source ? item.context_source : item.context_message.replace(\"triggered by \", \"\");\n          var contextTriggerSource = localizeTriggerSource(this.hass.localize, triggerMsg);\n          return html(_templateObject13 || (_templateObject13 = _taggedTemplateLiteral([\"\", \"\\n      \", \"\\n      \", \"\"])), this.hass.localize(item.context_event_type === \"automation_triggered\" ? \"ui.components.logbook.triggered_by_automation\" : \"ui.components.logbook.triggered_by_script\"), this._renderEntity(item.context_entity_id, item.context_entity_id_name, noLink), item.context_message ? this._formatMessageWithPossibleEntity(contextTriggerSource, seenEntityIds, undefined, noLink) : \"\");\n        }\n        // Generic externally described logbook platform\n        // These are not localizable\n        return html(_templateObject14 || (_templateObject14 = _taggedTemplateLiteral([\" \", \"\\n    \", \"\\n    \", \"\\n    \", \"\"])), this.hass.localize(\"ui.components.logbook.triggered_by\"), item.context_name, this._formatMessageWithPossibleEntity(item.context_message, seenEntityIds, item.context_entity_id, noLink), this._renderUnseenContextSourceEntity(item, seenEntityIds, noLink));\n      }\n    }, {\n      kind: \"method\",\n      key: \"_renderEntity\",\n      value: function _renderEntity(entityId, entityName, noLink) {\n        var hasState = entityId && entityId in this.hass.states;\n        var displayName = entityName || (hasState ? this.hass.states[entityId].attributes.friendly_name || entityId : entityId);\n        if (!hasState) {\n          return displayName;\n        }\n        return noLink ? displayName : html(_templateObject15 || (_templateObject15 = _taggedTemplateLiteral([\"<button\\n          class=\\\"link\\\"\\n          @click=\", \"\\n          .entityId=\", \"\\n        >\\n          \", \"\\n        </button>\"])), this._entityClicked, entityId, displayName);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_formatMessageWithPossibleEntity\",\n      value: function _formatMessageWithPossibleEntity(message, seenEntities, possibleEntity, noLink) {\n        //\n        // As we are looking at a log(book), we are doing entity_id\n        // \"highlighting\"/\"colorizing\". The goal is to make it easy for\n        // the user to access the entity that caused the event.\n        //\n        // If there is an entity_id in the message that is also in the\n        // state machine, we search the message for the entity_id and\n        // replace it with _renderEntity\n        //\n        if (message.indexOf(\".\") !== -1) {\n          var messageParts = message.split(\" \");\n          for (var i = 0, size = messageParts.length; i < size; i++) {\n            if (messageParts[i] in this.hass.states) {\n              var entityId = messageParts[i];\n              if (seenEntities.includes(entityId)) {\n                return \"\";\n              }\n              seenEntities.push(entityId);\n              var messageEnd = messageParts.splice(i);\n              messageEnd.shift(); // remove the entity\n              return html(_templateObject16 || (_templateObject16 = _taggedTemplateLiteral([\"\", \"\\n          \", \"\\n          \", \"\"])), messageParts.join(\" \"), this._renderEntity(entityId, this.hass.states[entityId].attributes.friendly_name, noLink), messageEnd.join(\" \"));\n            }\n          }\n        }\n        //\n        // When we have a message has a specific entity_id attached to\n        // it, and the entity_id is not in the message, we look\n        // for the friendly name of the entity and replace that with\n        // _renderEntity if its there so the user can quickly get to\n        // that entity.\n        //\n        if (possibleEntity && possibleEntity in this.hass.states) {\n          var possibleEntityName = this.hass.states[possibleEntity].attributes.friendly_name;\n          if (possibleEntityName && message.endsWith(possibleEntityName)) {\n            if (seenEntities.includes(possibleEntity)) {\n              return \"\";\n            }\n            seenEntities.push(possibleEntity);\n            message = message.substring(0, message.length - possibleEntityName.length);\n            return html(_templateObject17 || (_templateObject17 = _taggedTemplateLiteral([\"\", \"\\n        \", \"\"])), message, this._renderEntity(possibleEntity, possibleEntityName, noLink));\n          }\n        }\n        return message;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_entityClicked\",\n      value: function _entityClicked(ev) {\n        var entityId = ev.currentTarget.entityId;\n        if (!entityId) {\n          return;\n        }\n        ev.preventDefault();\n        ev.stopPropagation();\n        fireEvent(this, \"hass-more-info\", {\n          entityId: entityId\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleClick\",\n      value: function _handleClick(ev) {\n        if (!ev.currentTarget.traceLink) {\n          return;\n        }\n        navigate(ev.currentTarget.traceLink);\n        fireEvent(this, \"closed\");\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [haStyle, haStyleScrollbar, buttonLinkStyle, css(_templateObject18 || (_templateObject18 = _taggedTemplateLiteral([\"\\n        :host([virtualize]) {\\n          display: block;\\n          height: 100%;\\n        }\\n\\n        .entry-container {\\n          width: 100%;\\n        }\\n\\n        .entry {\\n          position: relative;\\n          display: flex;\\n          width: 100%;\\n          line-height: 2em;\\n          padding: 8px 16px;\\n          box-sizing: border-box;\\n          border-top: 1px solid var(--divider-color);\\n          justify-content: space-between;\\n          align-items: center;\\n        }\\n\\n        .indicator {\\n          background-color: var(--disabled-color);\\n          height: 8px;\\n          width: 8px;\\n          border-radius: 4px;\\n          flex-shrink: 0;\\n          margin-right: 12px;\\n          margin-inline-start: initial;\\n          margin-inline-end: 12px;\\n          direction: var(--direction);\\n        }\\n\\n        ha-icon-next {\\n          color: var(--secondary-text-color);\\n        }\\n\\n        .clickable {\\n          cursor: pointer;\\n        }\\n\\n        :not(.clickable) .entry.no-entity,\\n        :not(.clickable) .no-name .entry {\\n          cursor: default;\\n        }\\n\\n        .entry:hover {\\n          background-color: rgba(var(--rgb-primary-text-color), 0.04);\\n        }\\n\\n        .narrow:not(.no-icon) .time {\\n          margin-left: 32px;\\n          margin-inline-start: 32px;\\n          margin-inline-end: initial;\\n          direction: var(--direction);\\n        }\\n\\n        .message-relative_time {\\n          display: flex;\\n          flex-direction: column;\\n        }\\n\\n        .secondary {\\n          font-size: 12px;\\n          line-height: 1.7;\\n        }\\n\\n        .secondary a {\\n          color: var(--secondary-text-color);\\n        }\\n\\n        .date {\\n          margin: 8px 0;\\n          padding: 0 16px;\\n        }\\n\\n        .icon-message {\\n          display: flex;\\n          align-items: center;\\n        }\\n\\n        .no-entries {\\n          text-align: center;\\n          color: var(--secondary-text-color);\\n        }\\n\\n        state-badge {\\n          margin-right: 16px;\\n          margin-inline-start: initial;\\n          flex-shrink: 0;\\n          color: var(--state-icon-color);\\n          margin-inline-end: 16px;\\n          direction: var(--direction);\\n        }\\n\\n        .message {\\n          color: var(--primary-text-color);\\n        }\\n\\n        .no-name .message:first-letter {\\n          text-transform: capitalize;\\n        }\\n\\n        a {\\n          color: var(--primary-color);\\n          text-decoration: none;\\n        }\\n\\n        button.link {\\n          color: var(--paper-item-icon-color);\\n          text-decoration: none;\\n        }\\n\\n        .container {\\n          max-height: var(--logbook-max-height);\\n        }\\n\\n        .container,\\n        lit-virtualizer {\\n          height: 100%;\\n        }\\n\\n        lit-virtualizer {\\n          contain: size layout !important;\\n        }\\n\\n        .narrow .entry {\\n          line-height: 1.5;\\n        }\\n\\n        .narrow .icon-message state-badge {\\n          margin-left: 0;\\n          margin-inline-start: 0;\\n          margin-right: 8px;\\n          margin-inline-end: 8px;\\n          direction: var(--direction);\\n        }\\n      \"])))];\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","nothing","customElement","eventOptions","property","classMap","styleMap","isComponentLoaded","formatDate","formatTimeWithSeconds","restoreScroll","fireEvent","computeDomain","navigate","computeTimelineColor","createHistoricState","localizeStateMessage","localizeTriggerSource","buttonLinkStyle","haStyle","haStyleScrollbar","loadVirtualizer","brandsUrl","domainToName","triggerDomains","hasContext","item","context_event_type","context_state","context_message","stripEntityId","message","entityId","replace","HaLogbookRenderer","_decorate","_initialize","_LitElement","_LitElement2","_inherits","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_assertThisInitialized","_createClass","F","d","kind","decorators","attribute","key","value","type","Boolean","reflect","willUpdate","changedProps","hasUpdated","virtualize","has","hass","loadBackendTranslation","shouldUpdate","oldHass","get","languageChanged","undefined","locale","render","_this$entries","_this2","entries","_templateObject","_taggedTemplateLiteral","localize","_templateObject2","narrow","noName","noIcon","_saveScrollPos","_templateObject3","_visibilityChanged","_renderLogbookItem","map","index","_this3","_this3$hass$themes","previous","seenEntityIds","currentStateObj","entity_id","states","historicStateObj","state","domain","overrideImage","icon","useFallback","darkOptimized","themes","darkMode","traceContext","includes","context_id","traceContexts","hasTrace","_templateObject4","clickable","item_id","run_id","_handleClick","when","Date","toDateString","_templateObject5","config","_templateObject6","showIndicator","_renderIndicator","_renderEntity","name","_renderMessage","_renderContextMessage","context_user_id","_templateObject7","_renderUser","_templateObject8","passive","e","_savedScrollPos","target","scrollTop","enable","first","stateObj","computedStyles","getComputedStyle","color","style","backgroundColor","_templateObject9","noLink","itemHasContext","source","_formatMessageWithPossibleEntity","context_entity_id","item_username","userIdToName","_renderUnseenContextSourceEntity","_templateObject10","context_entity_id_name","_templateObject11","_this$hass$services$i","_templateObject12","context_domain","context_service","services","triggerMsg","context_source","contextTriggerSource","_templateObject13","_templateObject14","context_name","entityName","hasState","displayName","attributes","friendly_name","_templateObject15","_entityClicked","seenEntities","possibleEntity","indexOf","messageParts","split","i","size","push","messageEnd","splice","shift","_templateObject16","join","possibleEntityName","endsWith","substring","_templateObject17","ev","currentTarget","preventDefault","stopPropagation","traceLink","static","styles","_templateObject18"],"sources":["/Users/sercanardil/Desktop/frontend/src/panels/logbook/ha-logbook-renderer.ts"],"sourcesContent":["import { VisibilityChangedEvent } from \"@lit-labs/virtualizer\";\nimport type { HassEntity } from \"home-assistant-js-websocket\";\nimport {\n  css,\n  CSSResultGroup,\n  html,\n  LitElement,\n  nothing,\n  PropertyValues,\n} from \"lit\";\nimport { customElement, eventOptions, property } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport { styleMap } from \"lit/directives/style-map\";\nimport { isComponentLoaded } from \"../../common/config/is_component_loaded\";\nimport { formatDate } from \"../../common/datetime/format_date\";\nimport { formatTimeWithSeconds } from \"../../common/datetime/format_time\";\nimport { restoreScroll } from \"../../common/decorators/restore-scroll\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { computeDomain } from \"../../common/entity/compute_domain\";\nimport { navigate } from \"../../common/navigate\";\nimport { computeTimelineColor } from \"../../components/chart/timeline-chart/timeline-color\";\nimport \"../../components/entity/state-badge\";\nimport \"../../components/ha-circular-progress\";\nimport \"../../components/ha-icon-next\";\nimport \"../../components/ha-relative-time\";\nimport {\n  createHistoricState,\n  localizeStateMessage,\n  localizeTriggerSource,\n  LogbookEntry,\n} from \"../../data/logbook\";\nimport { TraceContexts } from \"../../data/trace\";\nimport {\n  buttonLinkStyle,\n  haStyle,\n  haStyleScrollbar,\n} from \"../../resources/styles\";\nimport { loadVirtualizer } from \"../../resources/virtualizer\";\nimport { HomeAssistant } from \"../../types\";\nimport { brandsUrl } from \"../../util/brands-url\";\nimport { domainToName } from \"../../data/integration\";\n\ndeclare global {\n  interface HASSDomEvents {\n    \"hass-logbook-live\": { enable: boolean };\n  }\n}\n\nconst triggerDomains = [\"script\", \"automation\"];\n\nconst hasContext = (item: LogbookEntry) =>\n  item.context_event_type || item.context_state || item.context_message;\nconst stripEntityId = (message: string, entityId?: string) =>\n  entityId ? message.replace(entityId, \" \") : message;\n\n@customElement(\"ha-logbook-renderer\")\nclass HaLogbookRenderer extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public userIdToName = {};\n\n  @property({ attribute: false })\n  public traceContexts: TraceContexts = {};\n\n  @property({ attribute: false }) public entries: LogbookEntry[] = [];\n\n  @property({ type: Boolean, attribute: \"narrow\" })\n  public narrow = false;\n\n  @property({ type: Boolean, attribute: \"virtualize\", reflect: true })\n  public virtualize = false;\n\n  @property({ type: Boolean, attribute: \"show-indicator\" })\n  public showIndicator = false;\n\n  @property({ type: Boolean, attribute: \"no-icon\" })\n  public noIcon = false;\n\n  @property({ type: Boolean, attribute: \"no-name\" })\n  public noName = false;\n\n  @property({ type: Boolean, attribute: \"relative-time\" })\n  public relativeTime = false;\n\n  // @ts-ignore\n  @restoreScroll(\".container\") private _savedScrollPos?: number;\n\n  protected willUpdate(changedProps: PropertyValues<this>) {\n    if (\n      (!this.hasUpdated && this.virtualize) ||\n      (changedProps.has(\"virtualize\") && this.virtualize)\n    ) {\n      this.hass.loadBackendTranslation(\"services\");\n      this.hass.loadBackendTranslation(\"title\");\n      loadVirtualizer();\n    }\n  }\n\n  protected shouldUpdate(changedProps: PropertyValues<this>) {\n    const oldHass = changedProps.get(\"hass\") as HomeAssistant | undefined;\n    const languageChanged =\n      oldHass === undefined || oldHass.locale !== this.hass.locale;\n\n    return (\n      changedProps.has(\"entries\") ||\n      changedProps.has(\"traceContexts\") ||\n      languageChanged\n    );\n  }\n\n  protected render() {\n    if (!this.entries?.length) {\n      return html`\n        <div class=\"container no-entries\">\n          ${this.hass.localize(\"ui.components.logbook.entries_not_found\")}\n        </div>\n      `;\n    }\n\n    return html`\n      <div\n        class=\"container ha-scrollbar ${classMap({\n          narrow: this.narrow,\n          \"no-name\": this.noName,\n          \"no-icon\": this.noIcon,\n        })}\"\n        @scroll=${this._saveScrollPos}\n      >\n        ${this.virtualize\n          ? html`<lit-virtualizer\n              @visibilityChanged=${this._visibilityChanged}\n              scroller\n              class=\"ha-scrollbar\"\n              .items=${this.entries}\n              .renderItem=${this._renderLogbookItem}\n            >\n            </lit-virtualizer>`\n          : this.entries.map((item, index) =>\n              this._renderLogbookItem(item, index)\n            )}\n      </div>\n    `;\n  }\n\n  private _renderLogbookItem = (item: LogbookEntry, index: number) => {\n    if (!item || index === undefined) {\n      return nothing;\n    }\n    const previous = this.entries[index - 1] as LogbookEntry | undefined;\n    const seenEntityIds: string[] = [];\n    const currentStateObj = item.entity_id\n      ? this.hass.states[item.entity_id]\n      : undefined;\n    const historicStateObj = currentStateObj\n      ? createHistoricState(currentStateObj, item.state!)\n      : undefined;\n    const domain = item.entity_id\n      ? computeDomain(item.entity_id)\n      : // Domain is there if there is no entity ID.\n        item.domain!;\n    const overrideImage =\n      !historicStateObj &&\n      !item.icon &&\n      !item.state &&\n      domain &&\n      isComponentLoaded(this.hass, domain)\n        ? brandsUrl({\n            domain: domain!,\n            type: \"icon\",\n            useFallback: true,\n            darkOptimized: this.hass.themes?.darkMode,\n          })\n        : undefined;\n\n    const traceContext =\n      triggerDomains.includes(item.domain!) &&\n      item.context_id! in this.traceContexts\n        ? this.traceContexts[item.context_id!]\n        : undefined;\n\n    const hasTrace = traceContext !== undefined;\n\n    return html`\n      <div\n        class=\"entry-container ${classMap({ clickable: hasTrace })}\"\n        .traceLink=${traceContext\n          ? `/config/${traceContext.domain}/trace/${traceContext.item_id}?run_id=${traceContext.run_id}`\n          : undefined}\n        @click=${this._handleClick}\n      >\n        ${index === 0 ||\n        (item?.when &&\n          previous?.when &&\n          new Date(item.when * 1000).toDateString() !==\n            new Date(previous.when * 1000).toDateString())\n          ? html`\n              <h4 class=\"date\">\n                ${formatDate(\n                  new Date(item.when * 1000),\n                  this.hass.locale,\n                  this.hass.config\n                )}\n              </h4>\n            `\n          : nothing}\n\n        <div class=\"entry ${classMap({ \"no-entity\": !item.entity_id })}\">\n          <div class=\"icon-message\">\n            ${!this.noIcon\n              ? html`\n                  <state-badge\n                    .hass=${this.hass}\n                    .overrideIcon=${item.icon}\n                    .overrideImage=${overrideImage}\n                    .stateObj=${item.icon ? undefined : historicStateObj}\n                    .stateColor=${false}\n                  ></state-badge>\n                `\n              : \"\"}\n            ${this.showIndicator ? this._renderIndicator(item) : \"\"}\n            <div class=\"message-relative_time\">\n              <div class=\"message\">\n                ${!this.noName // Used for more-info panel (single entity case)\n                  ? this._renderEntity(item.entity_id, item.name, hasTrace)\n                  : \"\"}\n                ${this._renderMessage(\n                  item,\n                  seenEntityIds,\n                  domain,\n                  historicStateObj,\n                  hasTrace\n                )}\n                ${this._renderContextMessage(item, seenEntityIds, hasTrace)}\n              </div>\n              <div class=\"secondary\">\n                <span\n                  >${formatTimeWithSeconds(\n                    new Date(item.when * 1000),\n                    this.hass.locale,\n                    this.hass.config\n                  )}</span\n                >\n                -\n                <ha-relative-time\n                  .hass=${this.hass}\n                  .datetime=${item.when * 1000}\n                  capitalize\n                ></ha-relative-time>\n                ${item.context_user_id ? html`${this._renderUser(item)}` : \"\"}\n                ${hasTrace\n                  ? `- ${this.hass.localize(\n                      \"ui.components.logbook.show_trace\"\n                    )}`\n                  : \"\"}\n              </div>\n            </div>\n          </div>\n          ${hasTrace ? html`<ha-icon-next></ha-icon-next>` : \"\"}\n        </div>\n      </div>\n    `;\n  };\n\n  @eventOptions({ passive: true })\n  private _saveScrollPos(e: Event) {\n    this._savedScrollPos = (e.target as HTMLDivElement).scrollTop;\n  }\n\n  @eventOptions({ passive: true })\n  private _visibilityChanged(e: VisibilityChangedEvent) {\n    fireEvent(this, \"hass-logbook-live\", {\n      enable: e.first === 0,\n    });\n  }\n\n  private _renderIndicator(item: LogbookEntry) {\n    const stateObj = this.hass.states[item.entity_id!] as\n      | HassEntity\n      | undefined;\n    const computedStyles = getComputedStyle(this);\n\n    const color =\n      item.state !== undefined\n        ? computeTimelineColor(item.state, computedStyles, stateObj)\n        : undefined;\n\n    const style = {\n      backgroundColor: color,\n    };\n\n    return html` <div class=\"indicator\" style=${styleMap(style)}></div> `;\n  }\n\n  private _renderMessage(\n    item: LogbookEntry,\n    seenEntityIds: string[],\n    domain?: string,\n    historicStateObj?: HassEntity,\n    noLink?: boolean\n  ) {\n    if (item.entity_id) {\n      if (item.state) {\n        return historicStateObj\n          ? localizeStateMessage(\n              this.hass,\n              this.hass.localize,\n              item.state,\n              historicStateObj,\n              domain!\n            )\n          : item.state;\n      }\n    }\n\n    const itemHasContext = hasContext(item);\n    let message = item.message;\n    if (triggerDomains.includes(domain!) && item.source) {\n      if (itemHasContext) {\n        // These domains include the trigger source in the message\n        // but if we have the context we want to display that instead\n        // as otherwise we display duplicate triggers\n        return \"\";\n      }\n      message = localizeTriggerSource(this.hass.localize, item.source);\n    }\n    return message\n      ? this._formatMessageWithPossibleEntity(\n          itemHasContext\n            ? stripEntityId(message, item.context_entity_id)\n            : message,\n          seenEntityIds,\n          undefined,\n          noLink\n        )\n      : \"\";\n  }\n\n  private _renderUser(item: LogbookEntry) {\n    const item_username =\n      item.context_user_id && this.userIdToName[item.context_user_id];\n    if (item_username) {\n      return `- ${item_username}`;\n    }\n    return \"\";\n  }\n\n  private _renderUnseenContextSourceEntity(\n    item: LogbookEntry,\n    seenEntityIds: string[],\n    noLink: boolean\n  ) {\n    if (\n      !item.context_entity_id ||\n      seenEntityIds.includes(item.context_entity_id!)\n    ) {\n      return \"\";\n    }\n    // We don't know what caused this entity\n    // to be included since its an integration\n    // described event.\n    return html` (${this._renderEntity(\n      item.context_entity_id,\n      item.context_entity_id_name,\n      noLink\n    )})`;\n  }\n\n  private _renderContextMessage(\n    item: LogbookEntry,\n    seenEntityIds: string[],\n    noLink: boolean\n  ) {\n    // State change\n    if (item.context_state) {\n      const historicStateObj =\n        item.context_entity_id && item.context_entity_id in this.hass.states\n          ? createHistoricState(\n              this.hass.states[item.context_entity_id],\n              item.context_state\n            )\n          : undefined;\n      return html`${this.hass.localize(\n        \"ui.components.logbook.triggered_by_state_of\"\n      )}\n      ${this._renderEntity(\n        item.context_entity_id,\n        item.context_entity_id_name,\n        noLink\n      )}\n      ${historicStateObj\n        ? localizeStateMessage(\n            this.hass,\n            this.hass.localize,\n            item.context_state,\n            historicStateObj,\n            computeDomain(item.context_entity_id!)\n          )\n        : item.context_state}`;\n    }\n    // Service call\n    if (item.context_event_type === \"call_service\") {\n      return html`${this.hass.localize(\n        \"ui.components.logbook.triggered_by_service\"\n      )}\n      ${item.context_domain && item.context_service\n        ? `${domainToName(this.hass.localize, item.context_domain)}:\n      ${\n        this.hass.localize(\n          `component.${item.context_domain}.services.${item.context_service}.name`\n        ) ||\n        this.hass.services[item.context_domain]?.[item.context_service]?.name ||\n        item.context_service\n      }`\n        : \"\"}`;\n    }\n    if (\n      !item.context_message ||\n      seenEntityIds.includes(item.context_entity_id!)\n    ) {\n      return \"\";\n    }\n    // Automation or script\n    if (\n      item.context_event_type === \"automation_triggered\" ||\n      item.context_event_type === \"script_started\"\n    ) {\n      // context_source is available in 2022.6 and later\n      const triggerMsg = item.context_source\n        ? item.context_source\n        : item.context_message.replace(\"triggered by \", \"\");\n      const contextTriggerSource = localizeTriggerSource(\n        this.hass.localize,\n        triggerMsg\n      );\n      return html`${this.hass.localize(\n        item.context_event_type === \"automation_triggered\"\n          ? \"ui.components.logbook.triggered_by_automation\"\n          : \"ui.components.logbook.triggered_by_script\"\n      )}\n      ${this._renderEntity(\n        item.context_entity_id,\n        item.context_entity_id_name,\n        noLink\n      )}\n      ${item.context_message\n        ? this._formatMessageWithPossibleEntity(\n            contextTriggerSource,\n            seenEntityIds,\n            undefined,\n            noLink\n          )\n        : \"\"}`;\n    }\n    // Generic externally described logbook platform\n    // These are not localizable\n    return html` ${this.hass.localize(\"ui.components.logbook.triggered_by\")}\n    ${item.context_name}\n    ${this._formatMessageWithPossibleEntity(\n      item.context_message,\n      seenEntityIds,\n      item.context_entity_id,\n      noLink\n    )}\n    ${this._renderUnseenContextSourceEntity(item, seenEntityIds, noLink)}`;\n  }\n\n  private _renderEntity(\n    entityId: string | undefined,\n    entityName: string | undefined,\n    noLink?: boolean\n  ) {\n    const hasState = entityId && entityId in this.hass.states;\n    const displayName =\n      entityName ||\n      (hasState\n        ? this.hass.states[entityId].attributes.friendly_name || entityId\n        : entityId);\n    if (!hasState) {\n      return displayName;\n    }\n    return noLink\n      ? displayName\n      : html`<button\n          class=\"link\"\n          @click=${this._entityClicked}\n          .entityId=${entityId}\n        >\n          ${displayName}\n        </button>`;\n  }\n\n  private _formatMessageWithPossibleEntity(\n    message: string,\n    seenEntities: string[],\n    possibleEntity?: string,\n    noLink?: boolean\n  ) {\n    //\n    // As we are looking at a log(book), we are doing entity_id\n    // \"highlighting\"/\"colorizing\". The goal is to make it easy for\n    // the user to access the entity that caused the event.\n    //\n    // If there is an entity_id in the message that is also in the\n    // state machine, we search the message for the entity_id and\n    // replace it with _renderEntity\n    //\n    if (message.indexOf(\".\") !== -1) {\n      const messageParts = message.split(\" \");\n      for (let i = 0, size = messageParts.length; i < size; i++) {\n        if (messageParts[i] in this.hass.states) {\n          const entityId = messageParts[i];\n          if (seenEntities.includes(entityId)) {\n            return \"\";\n          }\n          seenEntities.push(entityId);\n          const messageEnd = messageParts.splice(i);\n          messageEnd.shift(); // remove the entity\n          return html`${messageParts.join(\" \")}\n          ${this._renderEntity(\n            entityId,\n            this.hass.states[entityId].attributes.friendly_name,\n            noLink\n          )}\n          ${messageEnd.join(\" \")}`;\n        }\n      }\n    }\n    //\n    // When we have a message has a specific entity_id attached to\n    // it, and the entity_id is not in the message, we look\n    // for the friendly name of the entity and replace that with\n    // _renderEntity if its there so the user can quickly get to\n    // that entity.\n    //\n    if (possibleEntity && possibleEntity in this.hass.states) {\n      const possibleEntityName =\n        this.hass.states[possibleEntity].attributes.friendly_name;\n      if (possibleEntityName && message.endsWith(possibleEntityName)) {\n        if (seenEntities.includes(possibleEntity)) {\n          return \"\";\n        }\n        seenEntities.push(possibleEntity);\n        message = message.substring(\n          0,\n          message.length - possibleEntityName.length\n        );\n        return html`${message}\n        ${this._renderEntity(possibleEntity, possibleEntityName, noLink)}`;\n      }\n    }\n    return message;\n  }\n\n  private _entityClicked(ev: Event) {\n    const entityId = (ev.currentTarget as any).entityId;\n    if (!entityId) {\n      return;\n    }\n\n    ev.preventDefault();\n    ev.stopPropagation();\n    fireEvent(this, \"hass-more-info\", {\n      entityId: entityId,\n    });\n  }\n\n  _handleClick(ev) {\n    if (!ev.currentTarget.traceLink) {\n      return;\n    }\n    navigate(ev.currentTarget.traceLink);\n    fireEvent(this, \"closed\");\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyle,\n      haStyleScrollbar,\n      buttonLinkStyle,\n      css`\n        :host([virtualize]) {\n          display: block;\n          height: 100%;\n        }\n\n        .entry-container {\n          width: 100%;\n        }\n\n        .entry {\n          position: relative;\n          display: flex;\n          width: 100%;\n          line-height: 2em;\n          padding: 8px 16px;\n          box-sizing: border-box;\n          border-top: 1px solid var(--divider-color);\n          justify-content: space-between;\n          align-items: center;\n        }\n\n        .indicator {\n          background-color: var(--disabled-color);\n          height: 8px;\n          width: 8px;\n          border-radius: 4px;\n          flex-shrink: 0;\n          margin-right: 12px;\n          margin-inline-start: initial;\n          margin-inline-end: 12px;\n          direction: var(--direction);\n        }\n\n        ha-icon-next {\n          color: var(--secondary-text-color);\n        }\n\n        .clickable {\n          cursor: pointer;\n        }\n\n        :not(.clickable) .entry.no-entity,\n        :not(.clickable) .no-name .entry {\n          cursor: default;\n        }\n\n        .entry:hover {\n          background-color: rgba(var(--rgb-primary-text-color), 0.04);\n        }\n\n        .narrow:not(.no-icon) .time {\n          margin-left: 32px;\n          margin-inline-start: 32px;\n          margin-inline-end: initial;\n          direction: var(--direction);\n        }\n\n        .message-relative_time {\n          display: flex;\n          flex-direction: column;\n        }\n\n        .secondary {\n          font-size: 12px;\n          line-height: 1.7;\n        }\n\n        .secondary a {\n          color: var(--secondary-text-color);\n        }\n\n        .date {\n          margin: 8px 0;\n          padding: 0 16px;\n        }\n\n        .icon-message {\n          display: flex;\n          align-items: center;\n        }\n\n        .no-entries {\n          text-align: center;\n          color: var(--secondary-text-color);\n        }\n\n        state-badge {\n          margin-right: 16px;\n          margin-inline-start: initial;\n          flex-shrink: 0;\n          color: var(--state-icon-color);\n          margin-inline-end: 16px;\n          direction: var(--direction);\n        }\n\n        .message {\n          color: var(--primary-text-color);\n        }\n\n        .no-name .message:first-letter {\n          text-transform: capitalize;\n        }\n\n        a {\n          color: var(--primary-color);\n          text-decoration: none;\n        }\n\n        button.link {\n          color: var(--paper-item-icon-color);\n          text-decoration: none;\n        }\n\n        .container {\n          max-height: var(--logbook-max-height);\n        }\n\n        .container,\n        lit-virtualizer {\n          height: 100%;\n        }\n\n        lit-virtualizer {\n          contain: size layout !important;\n        }\n\n        .narrow .entry {\n          line-height: 1.5;\n        }\n\n        .narrow .icon-message state-badge {\n          margin-left: 0;\n          margin-inline-start: 0;\n          margin-right: 8px;\n          margin-inline-end: 8px;\n          direction: var(--direction);\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-logbook-renderer\": HaLogbookRenderer;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}