{"ast":null,"code":"import { makeDialogManager, showDialog } from \"../dialogs/make-dialog-manager\";\nexport const dialogManagerMixin = superClass => class extends superClass {\n  firstUpdated(changedProps) {\n    super.firstUpdated(changedProps);\n    // deprecated\n    this.addEventListener(\"register-dialog\", e => this.registerDialog(e.detail));\n    makeDialogManager(this, this.shadowRoot);\n  }\n  registerDialog({\n    dialogShowEvent,\n    dialogTag,\n    dialogImport,\n    addHistory = true\n  }) {\n    this.addEventListener(dialogShowEvent, showEv => {\n      showDialog(this, this.shadowRoot, dialogTag, showEv.detail, dialogImport, addHistory);\n    });\n  }\n};","map":{"version":3,"names":["makeDialogManager","showDialog","dialogManagerMixin","superClass","firstUpdated","changedProps","addEventListener","e","registerDialog","detail","shadowRoot","dialogShowEvent","dialogTag","dialogImport","addHistory","showEv"],"sources":["/Users/sercanardil/Desktop/frontend/src/state/dialog-manager-mixin.ts"],"sourcesContent":["import { PropertyValues } from \"lit\";\nimport { HASSDomEvent } from \"../common/dom/fire_event\";\nimport { makeDialogManager, showDialog } from \"../dialogs/make-dialog-manager\";\nimport { Constructor } from \"../types\";\nimport { HassBaseEl } from \"./hass-base-mixin\";\n\ninterface RegisterDialogParams {\n  dialogShowEvent: keyof HASSDomEvents;\n  dialogTag: keyof HTMLElementTagNameMap;\n  dialogImport: () => Promise<unknown>;\n  addHistory?: boolean;\n}\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    \"register-dialog\": RegisterDialogParams;\n  }\n  // for add event listener\n  interface HTMLElementEventMap {\n    \"register-dialog\": HASSDomEvent<RegisterDialogParams>;\n  }\n}\n\nexport const dialogManagerMixin = <T extends Constructor<HassBaseEl>>(\n  superClass: T\n) =>\n  class extends superClass {\n    protected firstUpdated(changedProps: PropertyValues) {\n      super.firstUpdated(changedProps);\n      // deprecated\n      this.addEventListener(\"register-dialog\", (e) =>\n        this.registerDialog(e.detail)\n      );\n      makeDialogManager(this, this.shadowRoot!);\n    }\n\n    private registerDialog({\n      dialogShowEvent,\n      dialogTag,\n      dialogImport,\n      addHistory = true,\n    }: RegisterDialogParams) {\n      this.addEventListener(dialogShowEvent, (showEv) => {\n        showDialog(\n          this,\n          this.shadowRoot!,\n          dialogTag,\n          (showEv as HASSDomEvent<unknown>).detail,\n          dialogImport,\n          addHistory\n        );\n      });\n    }\n  };\n"],"mappings":"AAEA,SAASA,iBAAiB,EAAEC,UAAU,QAAQ,gCAAgC;AAsB9E,OAAO,MAAMC,kBAAkB,GAC7BC,UAAa,IAEb,cAAcA,UAAU,CAAC;EACbC,YAAYA,CAACC,YAA4B,EAAE;IACnD,KAAK,CAACD,YAAY,CAACC,YAAY,CAAC;IAChC;IACA,IAAI,CAACC,gBAAgB,CAAC,iBAAiB,EAAGC,CAAC,IACzC,IAAI,CAACC,cAAc,CAACD,CAAC,CAACE,MAAM,CAC9B,CAAC;IACDT,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAACU,UAAW,CAAC;EAC3C;EAEQF,cAAcA,CAAC;IACrBG,eAAe;IACfC,SAAS;IACTC,YAAY;IACZC,UAAU,GAAG;EACO,CAAC,EAAE;IACvB,IAAI,CAACR,gBAAgB,CAACK,eAAe,EAAGI,MAAM,IAAK;MACjDd,UAAU,CACR,IAAI,EACJ,IAAI,CAACS,UAAU,EACfE,SAAS,EACRG,MAAM,CAA2BN,MAAM,EACxCI,YAAY,EACZC,UACF,CAAC;IACH,CAAC,CAAC;EACJ;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}