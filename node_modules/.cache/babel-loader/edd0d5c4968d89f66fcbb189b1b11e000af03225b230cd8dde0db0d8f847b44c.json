{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport \"@material/mwc-button/mwc-button\";\nimport \"@material/mwc-list/mwc-list\";\nconst mdiCrosshairsGps = \"M12,8A4,4 0 0,1 16,12A4,4 0 0,1 12,16A4,4 0 0,1 8,12A4,4 0 0,1 12,8M3.05,13H1V11H3.05C3.5,6.83 6.83,3.5 11,3.05V1H13V3.05C17.17,3.5 20.5,6.83 20.95,11H23V13H20.95C20.5,17.17 17.17,20.5 13,20.95V23H11V20.95C6.83,20.5 3.5,17.17 3.05,13M12,5A7,7 0 0,0 5,12A7,7 0 0,0 12,19A7,7 0 0,0 19,12A7,7 0 0,0 12,5Z\";\nconst mdiMagnify = \"M9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.44,13.73L14.71,14H15.5L20.5,19L19,20.5L14,15.5V14.71L13.73,14.44C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3M9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5Z\";\nconst mdiMapMarker = \"M12,11.5A2.5,2.5 0 0,1 9.5,9A2.5,2.5 0 0,1 12,6.5A2.5,2.5 0 0,1 14.5,9A2.5,2.5 0 0,1 12,11.5M12,2A7,7 0 0,0 5,9C5,14.25 12,22 12,22C12,22 19,14.25 19,9A7,7 0 0,0 12,2Z\";\nconst mdiMapSearchOutline = \"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.2 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M19.5,2A0.5,0.5 0 0,1 20,2.5V11.81C19.42,11.26 18.75,10.81 18,10.5V4.7L15,5.86V10C14.3,10.07 13.62,10.24 13,10.5V5.87L9,4.47V16.13H9V16.5C9,17.14 9.09,17.76 9.26,18.34L8,17.9L2.66,19.97L2.5,20A0.5,0.5 0 0,1 2,19.5V4.38C2,4.15 2.15,3.97 2.36,3.9L8,2L14,4.1L19.34,2.03L19.5,2M4,5.46V17.31L7,16.15V4.45L4,5.46Z\";\nimport { LitElement, css, html, nothing } from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport \"../components/ha-alert\";\nimport \"../components/ha-circular-progress\";\nimport \"../components/ha-formfield\";\nimport \"../components/ha-list-item\";\nimport \"../components/ha-radio\";\nimport \"../components/ha-textfield\";\nimport \"../components/map/ha-locations-editor\";\nimport { detectCoreConfig } from \"../data/core\";\nimport { reverseGeocode, searchPlaces } from \"../data/openstreetmap\";\nimport { showConfirmationDialog } from \"../dialogs/generic/show-dialog-box\";\nimport { onBoardingStyles } from \"./styles\";\nconst AMSTERDAM = [52.3731339, 4.8903147];\nconst mql = matchMedia(\"(prefers-color-scheme: dark)\");\nconst LOCATION_MARKER_ID = \"location\";\nlet OnboardingLocation = _decorate([customElement(\"onboarding-location\")], function (_initialize, _LitElement) {\n  class OnboardingLocation extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: OnboardingLocation,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"onboardingLocalize\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_working\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_location\",\n      value() {\n        return AMSTERDAM;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_places\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_error\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_search\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_highlightedMarker\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_elevation\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_unitSystem\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_currency\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_timeZone\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_country\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [query(\"ha-locations-editor\", true)],\n      key: \"map\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var _this$_places;\n        const addressAttribution = this.onboardingLocalize(\"ui.panel.page-onboarding.core-config.location_address\", {\n          openstreetmap: html`<a\n          href=\"https://www.openstreetmap.org/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          >OpenStreetMap</a\n        >`,\n          osm_privacy_policy: html`<a\n          href=\"https://wiki.osmfoundation.org/wiki/Privacy_Policy\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          >${this.onboardingLocalize(\"ui.panel.page-onboarding.core-config.osm_privacy_policy\")}</a\n        >`\n        });\n        return html`\n      <h1>\n        ${this.onboardingLocalize(\"ui.panel.page-onboarding.core-config.location_header\")}\n      </h1>\n      ${this._error ? html`<ha-alert alert-type=\"error\">${this._error}</ha-alert>` : nothing}\n\n      <p>\n        ${this.onboardingLocalize(\"ui.panel.page-onboarding.core-config.intro_location\")}\n      </p>\n\n      <div class=\"location-search\">\n        <ha-textfield\n          label=${this.onboardingLocalize(\"ui.panel.page-onboarding.core-config.address_label\")}\n          .disabled=${this._working}\n          icon\n          iconTrailing\n          @keyup=${this._addressSearch}\n        >\n          <ha-svg-icon slot=\"leadingIcon\" .path=${mdiMagnify}></ha-svg-icon>\n          ${this._working ? html`\n                <ha-circular-progress\n                  slot=\"trailingIcon\"\n                  indeterminate\n                  size=\"small\"\n                ></ha-circular-progress>\n              ` : html`\n                <ha-icon-button\n                  @click=${this._handleButtonClick}\n                  slot=\"trailingIcon\"\n                  .disabled=${this._working}\n                  .label=${this.onboardingLocalize(this._search ? \"ui.common.search\" : \"ui.panel.page-onboarding.core-config.button_detect\")}\n                  .path=${this._search ? mdiMapSearchOutline : mdiCrosshairsGps}\n                ></ha-icon-button>\n              `}\n        </ha-textfield>\n        ${this._places !== undefined ? html`\n              <mwc-list activatable>\n                ${(_this$_places = this._places) !== null && _this$_places !== void 0 && _this$_places.length ? this._places.map(place => {\n          const primary = [place.name || place.address[place.category], place.address.house_number, place.address.road || place.address.waterway, place.address.village || place.address.town, place.address.suburb || place.address.subdivision, place.address.city || place.address.municipality].filter(Boolean).join(\", \");\n          const secondary = [place.address.county || place.address.state_district || place.address.region, place.address.state, place.address.country].filter(Boolean).join(\", \");\n          return html`<ha-list-item\n                        @click=${this._itemClicked}\n                        .placeId=${place.place_id}\n                        .selected=${this._highlightedMarker === place.place_id}\n                        .activated=${this._highlightedMarker === place.place_id}\n                        .twoline=${primary && secondary}\n                      >\n                        ${primary || secondary}\n                        <span slot=\"secondary\"\n                          >${primary ? secondary : \"\"}</span\n                        >\n                      </ha-list-item>`;\n        }) : html`<ha-list-item noninteractive\n                      >${this._places === null ? \"\" : \"No results\"}</ha-list-item\n                    >`}\n              </mwc-list>\n            ` : nothing}\n      </div>\n      <ha-locations-editor\n        class=\"flex\"\n        .hass=${this.hass}\n        .locations=${this._markerLocations(this._location, this._places, this._highlightedMarker)}\n        zoom=\"14\"\n        .darkMode=${mql.matches}\n        .disabled=${this._working}\n        @location-updated=${this._locationChanged}\n        @marker-clicked=${this._markerClicked}\n      ></ha-locations-editor>\n\n      <p class=\"attribution\">${addressAttribution}</p>\n\n      <div class=\"footer\">\n        <mwc-button @click=${this._save} unelevated .disabled=${this._working}>\n          ${this.onboardingLocalize(\"ui.panel.page-onboarding.core-config.finish\")}\n        </mwc-button>\n      </div>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"firstUpdated\",\n      value: function firstUpdated(changedProps) {\n        _get(_getPrototypeOf(OnboardingLocation.prototype), \"firstUpdated\", this).call(this, changedProps);\n        setTimeout(() => this.renderRoot.querySelector(\"ha-textfield\").focus(), 100);\n        this.addEventListener(\"keyup\", ev => {\n          if (ev.key === \"Enter\") {\n            this._save(ev);\n          }\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"updated\",\n      value: function updated(changedProps) {\n        if (changedProps.has(\"_highlightedMarker\") && this._highlightedMarker) {\n          var _this$_places2, _place$boundingbox;\n          const place = (_this$_places2 = this._places) === null || _this$_places2 === void 0 ? void 0 : _this$_places2.find(plc => plc.place_id === this._highlightedMarker);\n          if ((place === null || place === void 0 || (_place$boundingbox = place.boundingbox) === null || _place$boundingbox === void 0 ? void 0 : _place$boundingbox.length) === 4) {\n            this.map.fitBounds([[place.boundingbox[0], place.boundingbox[2]], [place.boundingbox[1], place.boundingbox[3]]], {\n              zoom: 16,\n              pad: 0\n            });\n          } else {\n            this.map.fitMarker(String(this._highlightedMarker), {\n              zoom: 16\n            });\n          }\n        }\n      }\n    }, {\n      kind: \"field\",\n      key: \"_markerLocations\",\n      value() {\n        return memoizeOne((location, places, highlightedMarker) => {\n          if (!places) {\n            return [{\n              id: LOCATION_MARKER_ID,\n              latitude: (location || AMSTERDAM)[0],\n              longitude: (location || AMSTERDAM)[1],\n              location_editable: true\n            }];\n          }\n          return places !== null && places !== void 0 && places.length ? places.map(place => ({\n            id: String(place.place_id),\n            iconPath: place.place_id === highlightedMarker ? undefined : mdiMapMarker,\n            latitude: location && place.place_id === highlightedMarker ? location[0] : Number(place.lat),\n            longitude: location && place.place_id === highlightedMarker ? location[1] : Number(place.lon),\n            location_editable: place.place_id === highlightedMarker\n          })) : [];\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_locationChanged\",\n      value: function _locationChanged(ev) {\n        this._location = ev.detail.location;\n        if (ev.detail.id !== LOCATION_MARKER_ID) {\n          this._reverseGeocode();\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_markerClicked\",\n      value: function _markerClicked(ev) {\n        if (ev.detail.id === LOCATION_MARKER_ID) {\n          return;\n        }\n        this._highlightedMarker = Number(ev.detail.id);\n        const place = this._places.find(plc => plc.place_id === Number(ev.detail.id));\n        this._location = [Number(place.lat), Number(place.lon)];\n        this._country = place.address.country_code.toUpperCase();\n      }\n    }, {\n      kind: \"method\",\n      key: \"_itemClicked\",\n      value: function _itemClicked(ev) {\n        this._highlightedMarker = ev.currentTarget.placeId;\n        const place = this._places.find(plc => plc.place_id === ev.currentTarget.placeId);\n        this._location = [Number(place.lat), Number(place.lon)];\n        this._country = place.address.country_code.toUpperCase();\n      }\n    }, {\n      kind: \"method\",\n      key: \"_addressSearch\",\n      value: async function _addressSearch(ev) {\n        ev.stopPropagation();\n        this._search = ev.currentTarget.value.length > 0;\n        if (ev.key !== \"Enter\") {\n          return;\n        }\n        this._searchAddress(ev.currentTarget.value);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_searchAddress\",\n      value: async function _searchAddress(address) {\n        this._working = true;\n        this._highlightedMarker = undefined;\n        this._error = undefined;\n        this._places = null;\n        this.map.addEventListener(\"markers-updated\", () => {\n          setTimeout(() => {\n            var _this$_places3;\n            if ((((_this$_places3 = this._places) === null || _this$_places3 === void 0 ? void 0 : _this$_places3.length) || 0) > 2) {\n              this.map.fitMap({\n                pad: 0.5\n              });\n            }\n          }, 500);\n        }, {\n          once: true\n        });\n        try {\n          var _this$_places4;\n          this._places = await searchPlaces(address, this.hass, true, 3);\n          if ((_this$_places4 = this._places) !== null && _this$_places4 !== void 0 && _this$_places4.length) {\n            this._highlightedMarker = this._places[0].place_id;\n            this._location = [Number(this._places[0].lat), Number(this._places[0].lon)];\n            this._country = this._places[0].address.country_code.toUpperCase();\n          }\n        } catch (e) {\n          this._places = undefined;\n          this._error = e.message;\n        } finally {\n          this._working = false;\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_reverseGeocode\",\n      value: async function _reverseGeocode() {\n        if (!this._location) {\n          return;\n        }\n        this._places = null;\n        const reverse = await reverseGeocode(this._location, this.hass);\n        this._country = reverse.address.country_code.toUpperCase();\n        this._places = [reverse];\n        this._highlightedMarker = reverse.place_id;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleButtonClick\",\n      value: async function _handleButtonClick(ev) {\n        if (this._search) {\n          this._searchAddress(ev.target.parentElement.value);\n          return;\n        }\n        this._detectLocation();\n      }\n    }, {\n      kind: \"method\",\n      key: \"_detectLocation\",\n      value: function _detectLocation() {\n        if (window.isSecureContext && navigator.geolocation) {\n          this._working = true;\n          const options = {\n            enableHighAccuracy: true,\n            timeout: 5000,\n            maximumAge: 0\n          };\n          navigator.geolocation.getCurrentPosition(async result => {\n            this.map.addEventListener(\"markers-updated\", () => {\n              this.map.fitMarker(LOCATION_MARKER_ID);\n            }, {\n              once: true\n            });\n            this._location = [result.coords.latitude, result.coords.longitude];\n            if (result.coords.altitude) {\n              this._elevation = String(Math.round(result.coords.altitude));\n            }\n            try {\n              await this._reverseGeocode();\n            } finally {\n              this._working = false;\n            }\n          }, () => {\n            // GPS is not available, get location based on IP\n            this._working = false;\n            this._whoAmI();\n          }, options);\n        } else {\n          this._whoAmI();\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_whoAmI\",\n      value: async function _whoAmI() {\n        const confirm = await showConfirmationDialog(this, {\n          title: this.onboardingLocalize(\"ui.panel.page-onboarding.core-config.title_location_detect\"),\n          text: this.onboardingLocalize(\"ui.panel.page-onboarding.core-config.intro_location_detect\")\n        });\n        if (!confirm) {\n          return;\n        }\n        this._working = true;\n        try {\n          const values = await detectCoreConfig(this.hass);\n          if (values.latitude && values.longitude) {\n            this.map.addEventListener(\"markers-updated\", () => {\n              this.map.fitMarker(LOCATION_MARKER_ID);\n            }, {\n              once: true\n            });\n            this._location = [Number(values.latitude), Number(values.longitude)];\n          }\n          if (values.elevation) {\n            this._elevation = String(values.elevation);\n          }\n          if (values.unit_system) {\n            this._unitSystem = values.unit_system;\n          }\n          if (values.time_zone) {\n            this._timeZone = values.time_zone;\n          }\n          if (values.currency) {\n            this._currency = values.currency;\n          }\n          if (values.country) {\n            this._country = values.country;\n          }\n        } catch (err) {\n          this._error = `Failed to detect location information: ${err.message}`;\n        } finally {\n          this._working = false;\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_save\",\n      value: async function _save(ev) {\n        if (!this._location) {\n          return;\n        }\n        ev.preventDefault();\n        fireEvent(this, \"value-changed\", {\n          value: {\n            location: this._location,\n            country: this._country,\n            elevation: this._elevation,\n            unit_system: this._unitSystem,\n            time_zone: this._timeZone,\n            currency: this._currency\n          }\n        });\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [onBoardingStyles, css`\n        .location-search {\n          margin-top: 32px;\n          margin-bottom: 32px;\n        }\n        ha-textfield {\n          display: block;\n        }\n        ha-textfield > ha-icon-button {\n          position: absolute;\n          top: 10px;\n          right: 10px;\n          --mdc-icon-button-size: 36px;\n          --mdc-icon-size: 20px;\n          color: var(--secondary-text-color);\n          inset-inline-start: initial;\n          inset-inline-end: 10px;\n          direction: var(--direction);\n        }\n        ha-textfield > ha-circular-progress {\n          position: relative;\n          left: 12px;\n        }\n        ha-locations-editor {\n          display: block;\n          height: 300px;\n          margin-top: 8px;\n          border-radius: var(--mdc-shape-large, 16px);\n          overflow: hidden;\n        }\n        mwc-list {\n          width: 100%;\n          border: 1px solid var(--divider-color);\n          box-sizing: border-box;\n          border-top-width: 0;\n          border-bottom-left-radius: var(--mdc-shape-small, 4px);\n          border-bottom-right-radius: var(--mdc-shape-small, 4px);\n          --mdc-list-vertical-padding: 0;\n        }\n        ha-list-item {\n          height: 72px;\n        }\n        .attribution {\n          /* textfield helper style */\n          margin: 0;\n          padding: 4px 16px 12px 16px;\n          color: var(--mdc-text-field-label-ink-color, rgba(0, 0, 0, 0.6));\n          font-family: var(\n            --mdc-typography-caption-font-family,\n            var(--mdc-typography-font-family, Roboto, sans-serif)\n          );\n          font-size: var(--mdc-typography-caption-font-size, 0.75rem);\n          font-weight: var(--mdc-typography-caption-font-weight, 400);\n          letter-spacing: var(\n            --mdc-typography-caption-letter-spacing,\n            0.0333333333em\n          );\n          text-decoration: var(\n            --mdc-typography-caption-text-decoration,\n            inherit\n          );\n          text-transform: var(--mdc-typography-caption-text-transform, inherit);\n        }\n        .attribution a {\n          color: inherit;\n        }\n      `];\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["mdiCrosshairsGps","mdiMagnify","mdiMapMarker","mdiMapSearchOutline","LitElement","css","html","nothing","customElement","property","query","state","memoizeOne","fireEvent","detectCoreConfig","reverseGeocode","searchPlaces","showConfirmationDialog","onBoardingStyles","AMSTERDAM","mql","matchMedia","LOCATION_MARKER_ID","OnboardingLocation","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","render","_this$_places","addressAttribution","onboardingLocalize","openstreetmap","osm_privacy_policy","_error","_working","_addressSearch","_handleButtonClick","_search","_places","undefined","length","map","place","primary","name","address","category","house_number","road","waterway","village","town","suburb","subdivision","city","municipality","filter","Boolean","join","secondary","county","state_district","region","country","_itemClicked","place_id","_highlightedMarker","hass","_markerLocations","_location","matches","_locationChanged","_markerClicked","_save","firstUpdated","changedProps","_get","_getPrototypeOf","prototype","call","setTimeout","renderRoot","querySelector","focus","addEventListener","ev","updated","has","_this$_places2","_place$boundingbox","find","plc","boundingbox","fitBounds","zoom","pad","fitMarker","String","location","places","highlightedMarker","id","latitude","longitude","location_editable","iconPath","Number","lat","lon","detail","_reverseGeocode","_country","country_code","toUpperCase","currentTarget","placeId","stopPropagation","_searchAddress","_this$_places3","fitMap","once","_this$_places4","e","message","reverse","target","parentElement","_detectLocation","window","isSecureContext","navigator","geolocation","options","enableHighAccuracy","timeout","maximumAge","getCurrentPosition","result","coords","altitude","_elevation","Math","round","_whoAmI","confirm","title","text","values","elevation","unit_system","_unitSystem","time_zone","_timeZone","currency","_currency","err","preventDefault","static","styles"],"sources":["/workspaces/frontend/src/onboarding/onboarding-location.ts"],"sourcesContent":["import \"@material/mwc-button/mwc-button\";\nimport \"@material/mwc-list/mwc-list\";\nimport {\n  mdiCrosshairsGps,\n  mdiMagnify,\n  mdiMapMarker,\n  mdiMapSearchOutline,\n} from \"@mdi/js\";\nimport {\n  CSSResultGroup,\n  LitElement,\n  TemplateResult,\n  css,\n  html,\n  nothing,\n} from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport type { LocalizeFunc } from \"../common/translations/localize\";\nimport \"../components/ha-alert\";\nimport \"../components/ha-circular-progress\";\nimport \"../components/ha-formfield\";\nimport \"../components/ha-list-item\";\nimport \"../components/ha-radio\";\nimport \"../components/ha-textfield\";\nimport type { HaTextField } from \"../components/ha-textfield\";\nimport \"../components/map/ha-locations-editor\";\nimport type {\n  HaLocationsEditor,\n  MarkerLocation,\n} from \"../components/map/ha-locations-editor\";\nimport { ConfigUpdateValues, detectCoreConfig } from \"../data/core\";\nimport {\n  OpenStreetMapPlace,\n  reverseGeocode,\n  searchPlaces,\n} from \"../data/openstreetmap\";\nimport { showConfirmationDialog } from \"../dialogs/generic/show-dialog-box\";\nimport type { HomeAssistant } from \"../types\";\nimport { onBoardingStyles } from \"./styles\";\n\nconst AMSTERDAM: [number, number] = [52.3731339, 4.8903147];\nconst mql = matchMedia(\"(prefers-color-scheme: dark)\");\nconst LOCATION_MARKER_ID = \"location\";\n\n@customElement(\"onboarding-location\")\nclass OnboardingLocation extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public onboardingLocalize!: LocalizeFunc;\n\n  @state() private _working = false;\n\n  @state() private _location: [number, number] = AMSTERDAM;\n\n  @state() private _places?: OpenStreetMapPlace[] | null;\n\n  @state() private _error?: string;\n\n  @state() private _search = false;\n\n  @state() private _highlightedMarker?: number;\n\n  private _elevation?: string;\n\n  private _unitSystem?: ConfigUpdateValues[\"unit_system\"];\n\n  private _currency?: ConfigUpdateValues[\"currency\"];\n\n  private _timeZone?: ConfigUpdateValues[\"time_zone\"];\n\n  private _country?: ConfigUpdateValues[\"country\"];\n\n  @query(\"ha-locations-editor\", true) private map!: HaLocationsEditor;\n\n  protected render(): TemplateResult {\n    const addressAttribution = this.onboardingLocalize(\n      \"ui.panel.page-onboarding.core-config.location_address\",\n      {\n        openstreetmap: html`<a\n          href=\"https://www.openstreetmap.org/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          >OpenStreetMap</a\n        >`,\n        osm_privacy_policy: html`<a\n          href=\"https://wiki.osmfoundation.org/wiki/Privacy_Policy\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          >${this.onboardingLocalize(\n            \"ui.panel.page-onboarding.core-config.osm_privacy_policy\"\n          )}</a\n        >`,\n      }\n    );\n\n    return html`\n      <h1>\n        ${this.onboardingLocalize(\n          \"ui.panel.page-onboarding.core-config.location_header\"\n        )}\n      </h1>\n      ${this._error\n        ? html`<ha-alert alert-type=\"error\">${this._error}</ha-alert>`\n        : nothing}\n\n      <p>\n        ${this.onboardingLocalize(\n          \"ui.panel.page-onboarding.core-config.intro_location\"\n        )}\n      </p>\n\n      <div class=\"location-search\">\n        <ha-textfield\n          label=${this.onboardingLocalize(\n            \"ui.panel.page-onboarding.core-config.address_label\"\n          )}\n          .disabled=${this._working}\n          icon\n          iconTrailing\n          @keyup=${this._addressSearch}\n        >\n          <ha-svg-icon slot=\"leadingIcon\" .path=${mdiMagnify}></ha-svg-icon>\n          ${this._working\n            ? html`\n                <ha-circular-progress\n                  slot=\"trailingIcon\"\n                  indeterminate\n                  size=\"small\"\n                ></ha-circular-progress>\n              `\n            : html`\n                <ha-icon-button\n                  @click=${this._handleButtonClick}\n                  slot=\"trailingIcon\"\n                  .disabled=${this._working}\n                  .label=${this.onboardingLocalize(\n                    this._search\n                      ? \"ui.common.search\"\n                      : \"ui.panel.page-onboarding.core-config.button_detect\"\n                  )}\n                  .path=${this._search ? mdiMapSearchOutline : mdiCrosshairsGps}\n                ></ha-icon-button>\n              `}\n        </ha-textfield>\n        ${this._places !== undefined\n          ? html`\n              <mwc-list activatable>\n                ${this._places?.length\n                  ? this._places.map((place) => {\n                      const primary = [\n                        place.name || place.address[place.category],\n                        place.address.house_number,\n                        place.address.road || place.address.waterway,\n                        place.address.village || place.address.town,\n                        place.address.suburb || place.address.subdivision,\n                        place.address.city || place.address.municipality,\n                      ]\n                        .filter(Boolean)\n                        .join(\", \");\n                      const secondary = [\n                        place.address.county ||\n                          place.address.state_district ||\n                          place.address.region,\n                        place.address.state,\n                        place.address.country,\n                      ]\n                        .filter(Boolean)\n                        .join(\", \");\n                      return html`<ha-list-item\n                        @click=${this._itemClicked}\n                        .placeId=${place.place_id}\n                        .selected=${this._highlightedMarker === place.place_id}\n                        .activated=${this._highlightedMarker === place.place_id}\n                        .twoline=${primary && secondary}\n                      >\n                        ${primary || secondary}\n                        <span slot=\"secondary\"\n                          >${primary ? secondary : \"\"}</span\n                        >\n                      </ha-list-item>`;\n                    })\n                  : html`<ha-list-item noninteractive\n                      >${this._places === null\n                        ? \"\"\n                        : \"No results\"}</ha-list-item\n                    >`}\n              </mwc-list>\n            `\n          : nothing}\n      </div>\n      <ha-locations-editor\n        class=\"flex\"\n        .hass=${this.hass}\n        .locations=${this._markerLocations(\n          this._location,\n          this._places,\n          this._highlightedMarker\n        )}\n        zoom=\"14\"\n        .darkMode=${mql.matches}\n        .disabled=${this._working}\n        @location-updated=${this._locationChanged}\n        @marker-clicked=${this._markerClicked}\n      ></ha-locations-editor>\n\n      <p class=\"attribution\">${addressAttribution}</p>\n\n      <div class=\"footer\">\n        <mwc-button @click=${this._save} unelevated .disabled=${this._working}>\n          ${this.onboardingLocalize(\n            \"ui.panel.page-onboarding.core-config.finish\"\n          )}\n        </mwc-button>\n      </div>\n    `;\n  }\n\n  protected firstUpdated(changedProps) {\n    super.firstUpdated(changedProps);\n    setTimeout(\n      () => this.renderRoot.querySelector(\"ha-textfield\")!.focus(),\n      100\n    );\n    this.addEventListener(\"keyup\", (ev) => {\n      if (ev.key === \"Enter\") {\n        this._save(ev);\n      }\n    });\n  }\n\n  protected updated(changedProps) {\n    if (changedProps.has(\"_highlightedMarker\") && this._highlightedMarker) {\n      const place = this._places?.find(\n        (plc) => plc.place_id === this._highlightedMarker\n      );\n      if (place?.boundingbox?.length === 4) {\n        this.map.fitBounds(\n          [\n            [place.boundingbox[0], place.boundingbox[2]],\n            [place.boundingbox[1], place.boundingbox[3]],\n          ],\n          { zoom: 16, pad: 0 }\n        );\n      } else {\n        this.map.fitMarker(String(this._highlightedMarker), { zoom: 16 });\n      }\n    }\n  }\n\n  private _markerLocations = memoizeOne(\n    (\n      location?: [number, number],\n      places?: OpenStreetMapPlace[] | null,\n      highlightedMarker?: number\n    ): MarkerLocation[] => {\n      if (!places) {\n        return [\n          {\n            id: LOCATION_MARKER_ID,\n            latitude: (location || AMSTERDAM)[0],\n            longitude: (location || AMSTERDAM)[1],\n            location_editable: true,\n          },\n        ];\n      }\n      return places?.length\n        ? places.map((place) => ({\n            id: String(place.place_id),\n            iconPath:\n              place.place_id === highlightedMarker ? undefined : mdiMapMarker,\n            latitude:\n              location && place.place_id === highlightedMarker\n                ? location[0]\n                : Number(place.lat),\n            longitude:\n              location && place.place_id === highlightedMarker\n                ? location[1]\n                : Number(place.lon),\n            location_editable: place.place_id === highlightedMarker,\n          }))\n        : [];\n    }\n  );\n\n  private _locationChanged(ev) {\n    this._location = ev.detail.location;\n    if (ev.detail.id !== LOCATION_MARKER_ID) {\n      this._reverseGeocode();\n    }\n  }\n\n  private _markerClicked(ev) {\n    if (ev.detail.id === LOCATION_MARKER_ID) {\n      return;\n    }\n    this._highlightedMarker = Number(ev.detail.id);\n    const place = this._places!.find(\n      (plc) => plc.place_id === Number(ev.detail.id)\n    )!;\n    this._location = [Number(place.lat), Number(place.lon)];\n    this._country = place.address.country_code.toUpperCase();\n  }\n\n  private _itemClicked(ev) {\n    this._highlightedMarker = ev.currentTarget.placeId;\n    const place = this._places!.find(\n      (plc) => plc.place_id === ev.currentTarget.placeId\n    )!;\n    this._location = [Number(place.lat), Number(place.lon)];\n    this._country = place.address.country_code.toUpperCase();\n  }\n\n  private async _addressSearch(ev: KeyboardEvent) {\n    ev.stopPropagation();\n    this._search = (ev.currentTarget as HaTextField).value.length > 0;\n    if (ev.key !== \"Enter\") {\n      return;\n    }\n    this._searchAddress((ev.currentTarget as HaTextField).value);\n  }\n\n  private async _searchAddress(address: string) {\n    this._working = true;\n    this._highlightedMarker = undefined;\n    this._error = undefined;\n    this._places = null;\n    this.map.addEventListener(\n      \"markers-updated\",\n      () => {\n        setTimeout(() => {\n          if ((this._places?.length || 0) > 2) {\n            this.map.fitMap({ pad: 0.5 });\n          }\n        }, 500);\n      },\n      {\n        once: true,\n      }\n    );\n    try {\n      this._places = await searchPlaces(address, this.hass, true, 3);\n      if (this._places?.length) {\n        this._highlightedMarker = this._places[0].place_id;\n        this._location = [\n          Number(this._places[0].lat),\n          Number(this._places[0].lon),\n        ];\n        this._country = this._places[0].address.country_code.toUpperCase();\n      }\n    } catch (e: any) {\n      this._places = undefined;\n      this._error = e.message;\n    } finally {\n      this._working = false;\n    }\n  }\n\n  private async _reverseGeocode() {\n    if (!this._location) {\n      return;\n    }\n    this._places = null;\n    const reverse = await reverseGeocode(this._location, this.hass);\n    this._country = reverse.address.country_code.toUpperCase();\n    this._places = [reverse];\n    this._highlightedMarker = reverse.place_id;\n  }\n\n  private async _handleButtonClick(ev) {\n    if (this._search) {\n      this._searchAddress(ev.target.parentElement.value);\n      return;\n    }\n    this._detectLocation();\n  }\n\n  private _detectLocation() {\n    if (window.isSecureContext && navigator.geolocation) {\n      this._working = true;\n      const options = {\n        enableHighAccuracy: true,\n        timeout: 5000,\n        maximumAge: 0,\n      };\n      navigator.geolocation.getCurrentPosition(\n        async (result) => {\n          this.map.addEventListener(\n            \"markers-updated\",\n            () => {\n              this.map.fitMarker(LOCATION_MARKER_ID);\n            },\n            {\n              once: true,\n            }\n          );\n          this._location = [result.coords.latitude, result.coords.longitude];\n          if (result.coords.altitude) {\n            this._elevation = String(Math.round(result.coords.altitude));\n          }\n          try {\n            await this._reverseGeocode();\n          } finally {\n            this._working = false;\n          }\n        },\n        () => {\n          // GPS is not available, get location based on IP\n          this._working = false;\n          this._whoAmI();\n        },\n        options\n      );\n    } else {\n      this._whoAmI();\n    }\n  }\n\n  private async _whoAmI() {\n    const confirm = await showConfirmationDialog(this, {\n      title: this.onboardingLocalize(\n        \"ui.panel.page-onboarding.core-config.title_location_detect\"\n      ),\n      text: this.onboardingLocalize(\n        \"ui.panel.page-onboarding.core-config.intro_location_detect\"\n      ),\n    });\n    if (!confirm) {\n      return;\n    }\n    this._working = true;\n    try {\n      const values = await detectCoreConfig(this.hass);\n\n      if (values.latitude && values.longitude) {\n        this.map.addEventListener(\n          \"markers-updated\",\n          () => {\n            this.map.fitMarker(LOCATION_MARKER_ID);\n          },\n          {\n            once: true,\n          }\n        );\n        this._location = [Number(values.latitude), Number(values.longitude)];\n      }\n      if (values.elevation) {\n        this._elevation = String(values.elevation);\n      }\n      if (values.unit_system) {\n        this._unitSystem = values.unit_system;\n      }\n      if (values.time_zone) {\n        this._timeZone = values.time_zone;\n      }\n      if (values.currency) {\n        this._currency = values.currency;\n      }\n      if (values.country) {\n        this._country = values.country;\n      }\n    } catch (err: any) {\n      this._error = `Failed to detect location information: ${err.message}`;\n    } finally {\n      this._working = false;\n    }\n  }\n\n  private async _save(ev) {\n    if (!this._location) {\n      return;\n    }\n    ev.preventDefault();\n    fireEvent(this, \"value-changed\", {\n      value: {\n        location: this._location!,\n        country: this._country,\n        elevation: this._elevation,\n        unit_system: this._unitSystem,\n        time_zone: this._timeZone,\n        currency: this._currency,\n      },\n    });\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      onBoardingStyles,\n      css`\n        .location-search {\n          margin-top: 32px;\n          margin-bottom: 32px;\n        }\n        ha-textfield {\n          display: block;\n        }\n        ha-textfield > ha-icon-button {\n          position: absolute;\n          top: 10px;\n          right: 10px;\n          --mdc-icon-button-size: 36px;\n          --mdc-icon-size: 20px;\n          color: var(--secondary-text-color);\n          inset-inline-start: initial;\n          inset-inline-end: 10px;\n          direction: var(--direction);\n        }\n        ha-textfield > ha-circular-progress {\n          position: relative;\n          left: 12px;\n        }\n        ha-locations-editor {\n          display: block;\n          height: 300px;\n          margin-top: 8px;\n          border-radius: var(--mdc-shape-large, 16px);\n          overflow: hidden;\n        }\n        mwc-list {\n          width: 100%;\n          border: 1px solid var(--divider-color);\n          box-sizing: border-box;\n          border-top-width: 0;\n          border-bottom-left-radius: var(--mdc-shape-small, 4px);\n          border-bottom-right-radius: var(--mdc-shape-small, 4px);\n          --mdc-list-vertical-padding: 0;\n        }\n        ha-list-item {\n          height: 72px;\n        }\n        .attribution {\n          /* textfield helper style */\n          margin: 0;\n          padding: 4px 16px 12px 16px;\n          color: var(--mdc-text-field-label-ink-color, rgba(0, 0, 0, 0.6));\n          font-family: var(\n            --mdc-typography-caption-font-family,\n            var(--mdc-typography-font-family, Roboto, sans-serif)\n          );\n          font-size: var(--mdc-typography-caption-font-size, 0.75rem);\n          font-weight: var(--mdc-typography-caption-font-weight, 400);\n          letter-spacing: var(\n            --mdc-typography-caption-letter-spacing,\n            0.0333333333em\n          );\n          text-decoration: var(\n            --mdc-typography-caption-text-decoration,\n            inherit\n          );\n          text-transform: var(--mdc-typography-caption-text-transform, inherit);\n        }\n        .attribution a {\n          color: inherit;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"onboarding-location\": OnboardingLocation;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}