{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport { html, LitElement, nothing } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { until } from \"lit/directives/until\";\nimport { DEFAULT_SERVICE_ICON, FIXED_DOMAIN_ICONS } from \"../common/const\";\nimport { computeDomain } from \"../common/entity/compute_domain\";\nimport { serviceIcon } from \"../data/icons\";\nimport \"./ha-icon\";\nimport \"./ha-svg-icon\";\nexport let HaServiceIcon = _decorate([customElement(\"ha-service-icon\")], function (_initialize, _LitElement) {\n  class HaServiceIcon extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaServiceIcon,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"service\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"icon\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (this.icon) {\n          return html`<ha-icon .icon=${this.icon}></ha-icon>`;\n        }\n        if (!this.service) {\n          return nothing;\n        }\n        if (!this.hass) {\n          return this._renderFallback();\n        }\n        const icon = serviceIcon(this.hass, this.service).then(icn => {\n          if (icn) {\n            return html`<ha-icon .icon=${icn}></ha-icon>`;\n          }\n          return this._renderFallback();\n        });\n        return html`${until(icon)}`;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_renderFallback\",\n      value: function _renderFallback() {\n        const domain = computeDomain(this.service);\n        return html`\n      <ha-svg-icon\n        .path=${FIXED_DOMAIN_ICONS[domain] || DEFAULT_SERVICE_ICON}\n      ></ha-svg-icon>\n    `;\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["html","LitElement","nothing","customElement","property","until","DEFAULT_SERVICE_ICON","FIXED_DOMAIN_ICONS","computeDomain","serviceIcon","HaServiceIcon","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","render","icon","service","hass","_renderFallback","then","icn","domain"],"sources":["/workspaces/frontend/src/components/ha-service-icon.ts"],"sourcesContent":["import { html, LitElement, nothing } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { until } from \"lit/directives/until\";\nimport { DEFAULT_SERVICE_ICON, FIXED_DOMAIN_ICONS } from \"../common/const\";\nimport { computeDomain } from \"../common/entity/compute_domain\";\nimport { serviceIcon } from \"../data/icons\";\nimport { HomeAssistant } from \"../types\";\nimport \"./ha-icon\";\nimport \"./ha-svg-icon\";\n\n@customElement(\"ha-service-icon\")\nexport class HaServiceIcon extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property() public service?: string;\n\n  @property() public icon?: string;\n\n  protected render() {\n    if (this.icon) {\n      return html`<ha-icon .icon=${this.icon}></ha-icon>`;\n    }\n\n    if (!this.service) {\n      return nothing;\n    }\n\n    if (!this.hass) {\n      return this._renderFallback();\n    }\n\n    const icon = serviceIcon(this.hass, this.service).then((icn) => {\n      if (icn) {\n        return html`<ha-icon .icon=${icn}></ha-icon>`;\n      }\n      return this._renderFallback();\n    });\n\n    return html`${until(icon)}`;\n  }\n\n  private _renderFallback() {\n    const domain = computeDomain(this.service!);\n\n    return html`\n      <ha-svg-icon\n        .path=${FIXED_DOMAIN_ICONS[domain] || DEFAULT_SERVICE_ICON}\n      ></ha-svg-icon>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-service-icon\": HaServiceIcon;\n  }\n}\n"],"mappings":";AAAA,SAASA,IAAI,EAAEC,UAAU,EAAEC,OAAO,QAAQ,KAAK;AAC/C,SAASC,aAAa,EAAEC,QAAQ,QAAQ,gBAAgB;AACxD,SAASC,KAAK,QAAQ,sBAAsB;AAC5C,SAASC,oBAAoB,EAAEC,kBAAkB,QAAQ,iBAAiB;AAC1E,SAASC,aAAa,QAAQ,iCAAiC;AAC/D,SAASC,WAAW,QAAQ,eAAe;AAE3C,OAAO,WAAW;AAClB,OAAO,eAAe;AAEtB,WACaC,aAAa,GAAAC,SAAA,EADzBR,aAAa,CAAC,iBAAiB,CAAC,aAAAS,WAAA,EAAAC,WAAA;EAAjC,MACaH,aAAa,SAAAG,WAAA,CAAoB;IAAAC,YAAA,GAAAC,IAAA;MAAA,SAAAA,IAAA;MAAAH,WAAA;IAAA;EAuC9C;EAAC;IAAAI,CAAA,EAvCYN,aAAa;IAAAO,CAAA;MAAAC,IAAA;MAAAC,UAAA,GACvBf,QAAQ,CAAC;QAAEgB,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAC,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAE9Bf,QAAQ,CAAC,CAAC;MAAAiB,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAEVf,QAAQ,CAAC,CAAC;MAAAiB,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAEX,SAAAC,OAAA,EAAmB;QACjB,IAAI,IAAI,CAACC,IAAI,EAAE;UACb,OAAOxB,IAAK,kBAAiB,IAAI,CAACwB,IAAK,aAAY;QACrD;QAEA,IAAI,CAAC,IAAI,CAACC,OAAO,EAAE;UACjB,OAAOvB,OAAO;QAChB;QAEA,IAAI,CAAC,IAAI,CAACwB,IAAI,EAAE;UACd,OAAO,IAAI,CAACC,eAAe,CAAC,CAAC;QAC/B;QAEA,MAAMH,IAAI,GAAGf,WAAW,CAAC,IAAI,CAACiB,IAAI,EAAE,IAAI,CAACD,OAAO,CAAC,CAACG,IAAI,CAAEC,GAAG,IAAK;UAC9D,IAAIA,GAAG,EAAE;YACP,OAAO7B,IAAK,kBAAiB6B,GAAI,aAAY;UAC/C;UACA,OAAO,IAAI,CAACF,eAAe,CAAC,CAAC;QAC/B,CAAC,CAAC;QAEF,OAAO3B,IAAK,GAAEK,KAAK,CAACmB,IAAI,CAAE,EAAC;MAC7B;IAAC;MAAAN,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAK,gBAAA,EAA0B;QACxB,MAAMG,MAAM,GAAGtB,aAAa,CAAC,IAAI,CAACiB,OAAQ,CAAC;QAE3C,OAAOzB,IAAK;AAChB;AACA,gBAAgBO,kBAAkB,CAACuB,MAAM,CAAC,IAAIxB,oBAAqB;AACnE;AACA,KAAK;MACH;IAAC;EAAA;AAAA,GAtCgCL,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}