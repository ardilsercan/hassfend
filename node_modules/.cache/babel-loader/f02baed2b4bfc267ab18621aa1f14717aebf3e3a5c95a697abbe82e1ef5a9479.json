{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport { html, LitElement } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport \"../../components/ha-settings-row\";\nimport \"../../components/ha-switch\";\nlet HaSetSuspendRow = _decorate([customElement(\"ha-set-suspend-row\")], function (_initialize, _LitElement) {\n  class HaSetSuspendRow extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaSetSuspendRow,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"narrow\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        return html`\n      <ha-settings-row .narrow=${this.narrow}>\n        <span slot=\"heading\">\n          ${this.hass.localize(\"ui.panel.profile.suspend.header\")}\n        </span>\n        <span slot=\"description\">\n          ${this.hass.localize(\"ui.panel.profile.suspend.description\")}\n        </span>\n        <ha-switch\n          .checked=${this.hass.suspendWhenHidden}\n          @change=${this._checkedChanged}\n        ></ha-switch>\n      </ha-settings-row>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_checkedChanged\",\n      value: async function _checkedChanged(ev) {\n        const suspend = ev.target.checked;\n        if (suspend === this.hass.suspendWhenHidden) {\n          return;\n        }\n        fireEvent(this, \"hass-suspend-when-hidden\", {\n          suspend\n        });\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["html","LitElement","customElement","property","fireEvent","HaSetSuspendRow","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","type","Boolean","render","narrow","hass","localize","suspendWhenHidden","_checkedChanged","ev","suspend","target","checked"],"sources":["/workspaces/frontend/src/panels/profile/ha-set-suspend-row.ts"],"sourcesContent":["import { html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { fireEvent, HASSDomEvent } from \"../../common/dom/fire_event\";\nimport \"../../components/ha-settings-row\";\nimport \"../../components/ha-switch\";\nimport type { HaSwitch } from \"../../components/ha-switch\";\nimport type { HomeAssistant } from \"../../types\";\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    \"hass-suspend-when-hidden\": { suspend: HomeAssistant[\"suspendWhenHidden\"] };\n  }\n  // for add event listener\n  interface HTMLElementEventMap {\n    \"hass-suspend-when-hidden\": HASSDomEvent<{\n      suspend: HomeAssistant[\"suspendWhenHidden\"];\n    }>;\n  }\n}\n\n@customElement(\"ha-set-suspend-row\")\nclass HaSetSuspendRow extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ type: Boolean }) public narrow = false;\n\n  protected render(): TemplateResult {\n    return html`\n      <ha-settings-row .narrow=${this.narrow}>\n        <span slot=\"heading\">\n          ${this.hass.localize(\"ui.panel.profile.suspend.header\")}\n        </span>\n        <span slot=\"description\">\n          ${this.hass.localize(\"ui.panel.profile.suspend.description\")}\n        </span>\n        <ha-switch\n          .checked=${this.hass.suspendWhenHidden}\n          @change=${this._checkedChanged}\n        ></ha-switch>\n      </ha-settings-row>\n    `;\n  }\n\n  private async _checkedChanged(ev: Event) {\n    const suspend = (ev.target as HaSwitch).checked;\n    if (suspend === this.hass.suspendWhenHidden) {\n      return;\n    }\n    fireEvent(this, \"hass-suspend-when-hidden\", {\n      suspend,\n    });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-set-suspend-row\": HaSetSuspendRow;\n  }\n}\n"],"mappings":";AAAA,SAASA,IAAI,EAAEC,UAAU,QAAwB,KAAK;AACtD,SAASC,aAAa,EAAEC,QAAQ,QAAQ,gBAAgB;AACxD,SAASC,SAAS,QAAsB,6BAA6B;AACrE,OAAO,kCAAkC;AACzC,OAAO,4BAA4B;AAAC,IAkB9BC,eAAe,GAAAC,SAAA,EADpBJ,aAAa,CAAC,oBAAoB,CAAC,aAAAK,WAAA,EAAAC,WAAA;EAApC,MACMH,eAAe,SAAAG,WAAA,CAAoB;IAAAC,YAAA,GAAAC,IAAA;MAAA,SAAAA,IAAA;MAAAH,WAAA;IAAA;EA+BzC;EAAC;IAAAI,CAAA,EA/BKN,eAAe;IAAAO,CAAA;MAAAC,IAAA;MAAAC,UAAA,GAClBX,QAAQ,CAAC;QAAEY,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAC,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAE9BX,QAAQ,CAAC;QAAEe,IAAI,EAAEC;MAAQ,CAAC,CAAC;MAAAH,GAAA;MAAAC,MAAA;QAAA,OAAiB,KAAK;MAAA;IAAA;MAAAJ,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAElD,SAAAG,OAAA,EAAmC;QACjC,OAAOpB,IAAK;AAChB,iCAAiC,IAAI,CAACqB,MAAO;AAC7C;AACA,YAAY,IAAI,CAACC,IAAI,CAACC,QAAQ,CAAC,iCAAiC,CAAE;AAClE;AACA;AACA,YAAY,IAAI,CAACD,IAAI,CAACC,QAAQ,CAAC,sCAAsC,CAAE;AACvE;AACA;AACA,qBAAqB,IAAI,CAACD,IAAI,CAACE,iBAAkB;AACjD,oBAAoB,IAAI,CAACC,eAAgB;AACzC;AACA;AACA,KAAK;MACH;IAAC;MAAAZ,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,eAAAQ,gBAA8BC,EAAS,EAAE;QACvC,MAAMC,OAAO,GAAID,EAAE,CAACE,MAAM,CAAcC,OAAO;QAC/C,IAAIF,OAAO,KAAK,IAAI,CAACL,IAAI,CAACE,iBAAiB,EAAE;UAC3C;QACF;QACApB,SAAS,CAAC,IAAI,EAAE,0BAA0B,EAAE;UAC1CuB;QACF,CAAC,CAAC;MACJ;IAAC;EAAA;AAAA,GA9B2B1B,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}