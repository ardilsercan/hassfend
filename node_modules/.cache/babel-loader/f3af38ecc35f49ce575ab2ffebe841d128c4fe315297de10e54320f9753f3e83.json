{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nexport var SizeCache = /*#__PURE__*/function () {\n  function SizeCache(config) {\n    _classCallCheck(this, SizeCache);\n    this._map = new Map();\n    this._roundAverageSize = false;\n    this.totalSize = 0;\n    if ((config === null || config === void 0 ? void 0 : config.roundAverageSize) === true) {\n      this._roundAverageSize = true;\n    }\n  }\n  _createClass(SizeCache, [{\n    key: \"set\",\n    value: function set(index, value) {\n      var prev = this._map.get(index) || 0;\n      this._map.set(index, value);\n      this.totalSize += value - prev;\n    }\n  }, {\n    key: \"averageSize\",\n    get: function get() {\n      if (this._map.size > 0) {\n        var average = this.totalSize / this._map.size;\n        return this._roundAverageSize ? Math.round(average) : average;\n      }\n      return 0;\n    }\n  }, {\n    key: \"getSize\",\n    value: function getSize(index) {\n      return this._map.get(index);\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this._map.clear();\n      this.totalSize = 0;\n    }\n  }]);\n  return SizeCache;\n}();","map":{"version":3,"names":["SizeCache","config","_classCallCheck","_map","Map","_roundAverageSize","totalSize","roundAverageSize","_createClass","key","value","set","index","prev","get","size","average","Math","round","getSize","clear"],"sources":["../../src/layouts/shared/SizeCache.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nexport interface SizeCacheConfig {\n  roundAverageSize?: boolean;\n}\n\nexport class SizeCache {\n  private _map = new Map<number | string, number>();\n  private _roundAverageSize = false;\n  totalSize = 0;\n\n  constructor(config?: SizeCacheConfig) {\n    if (config?.roundAverageSize === true) {\n      this._roundAverageSize = true;\n    }\n  }\n\n  set(index: number | string, value: number): void {\n    const prev = this._map.get(index) || 0;\n    this._map.set(index, value);\n    this.totalSize += value - prev;\n  }\n\n  get averageSize(): number {\n    if (this._map.size > 0) {\n      const average = this.totalSize / this._map.size;\n      return this._roundAverageSize ? Math.round(average) : average;\n    }\n    return 0;\n  }\n\n  getSize(index: number | string) {\n    return this._map.get(index);\n  }\n\n  clear() {\n    this._map.clear();\n    this.totalSize = 0;\n  }\n}\n"],"mappings":";;;;;;;AAAA;;;;;AAUA,WAAaA,SAAS;EAKpB,SAAAA,UAAYC,MAAwB;IAAAC,eAAA,OAAAF,SAAA;IAJ5B,KAAAG,IAAI,GAAG,IAAIC,GAAG,EAA2B;IACzC,KAAAC,iBAAiB,GAAG,KAAK;IACjC,KAAAC,SAAS,GAAG,CAAC;IAGX,IAAI,CAAAL,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEM,gBAAgB,MAAK,IAAI,EAAE;MACrC,IAAI,CAACF,iBAAiB,GAAG,IAAI;;EAEjC;EAACG,YAAA,CAAAR,SAAA;IAAAS,GAAA;IAAAC,KAAA,EAED,SAAAC,IAAIC,KAAsB,EAAEF,KAAa;MACvC,IAAMG,IAAI,GAAG,IAAI,CAACV,IAAI,CAACW,GAAG,CAACF,KAAK,CAAC,IAAI,CAAC;MACtC,IAAI,CAACT,IAAI,CAACQ,GAAG,CAACC,KAAK,EAAEF,KAAK,CAAC;MAC3B,IAAI,CAACJ,SAAS,IAAII,KAAK,GAAGG,IAAI;IAChC;EAAC;IAAAJ,GAAA;IAAAK,GAAA,EAED,SAAAA,IAAA,EAAe;MACb,IAAI,IAAI,CAACX,IAAI,CAACY,IAAI,GAAG,CAAC,EAAE;QACtB,IAAMC,OAAO,GAAG,IAAI,CAACV,SAAS,GAAG,IAAI,CAACH,IAAI,CAACY,IAAI;QAC/C,OAAO,IAAI,CAACV,iBAAiB,GAAGY,IAAI,CAACC,KAAK,CAACF,OAAO,CAAC,GAAGA,OAAO;;MAE/D,OAAO,CAAC;IACV;EAAC;IAAAP,GAAA;IAAAC,KAAA,EAED,SAAAS,QAAQP,KAAsB;MAC5B,OAAO,IAAI,CAACT,IAAI,CAACW,GAAG,CAACF,KAAK,CAAC;IAC7B;EAAC;IAAAH,GAAA;IAAAC,KAAA,EAED,SAAAU,MAAA,EAAK;MACH,IAAI,CAACjB,IAAI,CAACiB,KAAK,EAAE;MACjB,IAAI,CAACd,SAAS,GAAG,CAAC;IACpB;EAAC;EAAA,OAAAN,SAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}