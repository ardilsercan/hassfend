{"ast":null,"code":"/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/paper-ripple/paper-ripple.js';\nimport { IronButtonStateImpl } from '@polymer/iron-behaviors/iron-button-state.js';\nimport { dom } from '@polymer/polymer/lib/legacy/polymer.dom.js';\n\n/**\n * `PaperRippleBehavior` dynamically implements a ripple when the element has\n * focus via pointer or keyboard.\n *\n * NOTE: This behavior is intended to be used in conjunction with and after\n * `IronButtonState` and `IronControlState`.\n *\n * @polymerBehavior PaperRippleBehavior\n */\nexport const PaperRippleBehavior = {\n  properties: {\n    /**\n     * If true, the element will not produce a ripple effect when interacted\n     * with via the pointer.\n     */\n    noink: {\n      type: Boolean,\n      observer: '_noinkChanged'\n    },\n    /**\n     * @type {Element|undefined}\n     */\n    _rippleContainer: {\n      type: Object\n    }\n  },\n  /**\n   * Ensures a `<paper-ripple>` element is available when the element is\n   * focused.\n   */\n  _buttonStateChanged: function () {\n    if (this.focused) {\n      this.ensureRipple();\n    }\n  },\n  /**\n   * In addition to the functionality provided in `IronButtonState`, ensures\n   * a ripple effect is created when the element is in a `pressed` state.\n   */\n  _downHandler: function (event) {\n    IronButtonStateImpl._downHandler.call(this, event);\n    if (this.pressed) {\n      this.ensureRipple(event);\n    }\n  },\n  /**\n   * Ensures this element contains a ripple effect. For startup efficiency\n   * the ripple effect is dynamically on demand when needed.\n   * @param {!Event=} optTriggeringEvent (optional) event that triggered the\n   * ripple.\n   */\n  ensureRipple: function (optTriggeringEvent) {\n    if (!this.hasRipple()) {\n      this._ripple = this._createRipple();\n      this._ripple.noink = this.noink;\n      var rippleContainer = this._rippleContainer || this.root;\n      if (rippleContainer) {\n        dom(rippleContainer).appendChild(this._ripple);\n      }\n      if (optTriggeringEvent) {\n        // Check if the event happened inside of the ripple container\n        // Fall back to host instead of the root because distributed text\n        // nodes are not valid event targets\n        var domContainer = dom(this._rippleContainer || this);\n        var target = dom(optTriggeringEvent).rootTarget;\n        if (domContainer.deepContains( /** @type {Node} */target)) {\n          this._ripple.uiDownAction(optTriggeringEvent);\n        }\n      }\n    }\n  },\n  /**\n   * Returns the `<paper-ripple>` element used by this element to create\n   * ripple effects. The element's ripple is created on demand, when\n   * necessary, and calling this method will force the\n   * ripple to be created.\n   */\n  getRipple: function () {\n    this.ensureRipple();\n    return this._ripple;\n  },\n  /**\n   * Returns true if this element currently contains a ripple effect.\n   * @return {boolean}\n   */\n  hasRipple: function () {\n    return Boolean(this._ripple);\n  },\n  /**\n   * Create the element's ripple effect via creating a `<paper-ripple>`.\n   * Override this method to customize the ripple element.\n   * @return {!PaperRippleElement} Returns a `<paper-ripple>` element.\n   */\n  _createRipple: function () {\n    var element = /** @type {!PaperRippleElement} */\n    document.createElement('paper-ripple');\n    return element;\n  },\n  _noinkChanged: function (noink) {\n    if (this.hasRipple()) {\n      this._ripple.noink = noink;\n    }\n  }\n};","map":{"version":3,"names":["IronButtonStateImpl","dom","PaperRippleBehavior","properties","noink","type","Boolean","observer","_rippleContainer","Object","_buttonStateChanged","focused","ensureRipple","_downHandler","event","call","pressed","optTriggeringEvent","hasRipple","_ripple","_createRipple","rippleContainer","root","appendChild","domContainer","target","rootTarget","deepContains","uiDownAction","getRipple","element","document","createElement","_noinkChanged"],"sources":["/Users/sercanardil/Desktop/frontend/node_modules/@polymer/paper-behaviors/paper-ripple-behavior.js"],"sourcesContent":["/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/paper-ripple/paper-ripple.js';\n\nimport {IronButtonStateImpl} from '@polymer/iron-behaviors/iron-button-state.js';\nimport {dom} from '@polymer/polymer/lib/legacy/polymer.dom.js';\n\n/**\n * `PaperRippleBehavior` dynamically implements a ripple when the element has\n * focus via pointer or keyboard.\n *\n * NOTE: This behavior is intended to be used in conjunction with and after\n * `IronButtonState` and `IronControlState`.\n *\n * @polymerBehavior PaperRippleBehavior\n */\nexport const PaperRippleBehavior = {\n  properties: {\n    /**\n     * If true, the element will not produce a ripple effect when interacted\n     * with via the pointer.\n     */\n    noink: {type: Boolean, observer: '_noinkChanged'},\n\n    /**\n     * @type {Element|undefined}\n     */\n    _rippleContainer: {\n      type: Object,\n    }\n  },\n\n  /**\n   * Ensures a `<paper-ripple>` element is available when the element is\n   * focused.\n   */\n  _buttonStateChanged: function() {\n    if (this.focused) {\n      this.ensureRipple();\n    }\n  },\n\n  /**\n   * In addition to the functionality provided in `IronButtonState`, ensures\n   * a ripple effect is created when the element is in a `pressed` state.\n   */\n  _downHandler: function(event) {\n    IronButtonStateImpl._downHandler.call(this, event);\n    if (this.pressed) {\n      this.ensureRipple(event);\n    }\n  },\n\n  /**\n   * Ensures this element contains a ripple effect. For startup efficiency\n   * the ripple effect is dynamically on demand when needed.\n   * @param {!Event=} optTriggeringEvent (optional) event that triggered the\n   * ripple.\n   */\n  ensureRipple: function(optTriggeringEvent) {\n    if (!this.hasRipple()) {\n      this._ripple = this._createRipple();\n      this._ripple.noink = this.noink;\n      var rippleContainer = this._rippleContainer || this.root;\n      if (rippleContainer) {\n        dom(rippleContainer).appendChild(this._ripple);\n      }\n      if (optTriggeringEvent) {\n        // Check if the event happened inside of the ripple container\n        // Fall back to host instead of the root because distributed text\n        // nodes are not valid event targets\n        var domContainer = dom(this._rippleContainer || this);\n        var target = dom(optTriggeringEvent).rootTarget;\n        if (domContainer.deepContains(/** @type {Node} */ (target))) {\n          this._ripple.uiDownAction(optTriggeringEvent);\n        }\n      }\n    }\n  },\n\n  /**\n   * Returns the `<paper-ripple>` element used by this element to create\n   * ripple effects. The element's ripple is created on demand, when\n   * necessary, and calling this method will force the\n   * ripple to be created.\n   */\n  getRipple: function() {\n    this.ensureRipple();\n    return this._ripple;\n  },\n\n  /**\n   * Returns true if this element currently contains a ripple effect.\n   * @return {boolean}\n   */\n  hasRipple: function() {\n    return Boolean(this._ripple);\n  },\n\n  /**\n   * Create the element's ripple effect via creating a `<paper-ripple>`.\n   * Override this method to customize the ripple element.\n   * @return {!PaperRippleElement} Returns a `<paper-ripple>` element.\n   */\n  _createRipple: function() {\n    var element = /** @type {!PaperRippleElement} */ (\n        document.createElement('paper-ripple'));\n    return element;\n  },\n\n  _noinkChanged: function(noink) {\n    if (this.hasRipple()) {\n      this._ripple.noink = noink;\n    }\n  }\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,oCAAoC;AAC3C,OAAO,uCAAuC;AAE9C,SAAQA,mBAAmB,QAAO,8CAA8C;AAChF,SAAQC,GAAG,QAAO,4CAA4C;;AAE9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,mBAAmB,GAAG;EACjCC,UAAU,EAAE;IACV;AACJ;AACA;AACA;IACIC,KAAK,EAAE;MAACC,IAAI,EAAEC,OAAO;MAAEC,QAAQ,EAAE;IAAe,CAAC;IAEjD;AACJ;AACA;IACIC,gBAAgB,EAAE;MAChBH,IAAI,EAAEI;IACR;EACF,CAAC;EAED;AACF;AACA;AACA;EACEC,mBAAmB,EAAE,SAAAA,CAAA,EAAW;IAC9B,IAAI,IAAI,CAACC,OAAO,EAAE;MAChB,IAAI,CAACC,YAAY,CAAC,CAAC;IACrB;EACF,CAAC;EAED;AACF;AACA;AACA;EACEC,YAAY,EAAE,SAAAA,CAASC,KAAK,EAAE;IAC5Bd,mBAAmB,CAACa,YAAY,CAACE,IAAI,CAAC,IAAI,EAAED,KAAK,CAAC;IAClD,IAAI,IAAI,CAACE,OAAO,EAAE;MAChB,IAAI,CAACJ,YAAY,CAACE,KAAK,CAAC;IAC1B;EACF,CAAC;EAED;AACF;AACA;AACA;AACA;AACA;EACEF,YAAY,EAAE,SAAAA,CAASK,kBAAkB,EAAE;IACzC,IAAI,CAAC,IAAI,CAACC,SAAS,CAAC,CAAC,EAAE;MACrB,IAAI,CAACC,OAAO,GAAG,IAAI,CAACC,aAAa,CAAC,CAAC;MACnC,IAAI,CAACD,OAAO,CAACf,KAAK,GAAG,IAAI,CAACA,KAAK;MAC/B,IAAIiB,eAAe,GAAG,IAAI,CAACb,gBAAgB,IAAI,IAAI,CAACc,IAAI;MACxD,IAAID,eAAe,EAAE;QACnBpB,GAAG,CAACoB,eAAe,CAAC,CAACE,WAAW,CAAC,IAAI,CAACJ,OAAO,CAAC;MAChD;MACA,IAAIF,kBAAkB,EAAE;QACtB;QACA;QACA;QACA,IAAIO,YAAY,GAAGvB,GAAG,CAAC,IAAI,CAACO,gBAAgB,IAAI,IAAI,CAAC;QACrD,IAAIiB,MAAM,GAAGxB,GAAG,CAACgB,kBAAkB,CAAC,CAACS,UAAU;QAC/C,IAAIF,YAAY,CAACG,YAAY,EAAC,mBAAqBF,MAAO,CAAC,EAAE;UAC3D,IAAI,CAACN,OAAO,CAACS,YAAY,CAACX,kBAAkB,CAAC;QAC/C;MACF;IACF;EACF,CAAC;EAED;AACF;AACA;AACA;AACA;AACA;EACEY,SAAS,EAAE,SAAAA,CAAA,EAAW;IACpB,IAAI,CAACjB,YAAY,CAAC,CAAC;IACnB,OAAO,IAAI,CAACO,OAAO;EACrB,CAAC;EAED;AACF;AACA;AACA;EACED,SAAS,EAAE,SAAAA,CAAA,EAAW;IACpB,OAAOZ,OAAO,CAAC,IAAI,CAACa,OAAO,CAAC;EAC9B,CAAC;EAED;AACF;AACA;AACA;AACA;EACEC,aAAa,EAAE,SAAAA,CAAA,EAAW;IACxB,IAAIU,OAAO,GAAG;IACVC,QAAQ,CAACC,aAAa,CAAC,cAAc,CAAE;IAC3C,OAAOF,OAAO;EAChB,CAAC;EAEDG,aAAa,EAAE,SAAAA,CAAS7B,KAAK,EAAE;IAC7B,IAAI,IAAI,CAACc,SAAS,CAAC,CAAC,EAAE;MACpB,IAAI,CAACC,OAAO,CAACf,KAAK,GAAGA,KAAK;IAC5B;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}