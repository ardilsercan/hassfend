{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport { css, html, LitElement } from \"lit\";\nimport { customElement, property, query } from \"lit/decorators\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport \"../ha-textfield\";\nexport let HaFormFloat = _decorate([customElement(\"ha-form-float\")], function (_initialize, _LitElement) {\n  class HaFormFloat extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaFormFloat,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"localize\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"schema\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"data\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"label\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"helper\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"disabled\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [query(\"ha-textfield\")],\n      key: \"_input\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"focus\",\n      value: function focus() {\n        if (this._input) {\n          this._input.focus();\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var _this$schema$descript, _this$localize;\n        return html`\n      <ha-textfield\n        type=\"numeric\"\n        inputMode=\"decimal\"\n        .label=${this.label}\n        .helper=${this.helper}\n        helperPersistent\n        .value=${this.data !== undefined ? this.data : \"\"}\n        .disabled=${this.disabled}\n        .required=${this.schema.required}\n        .autoValidate=${this.schema.required}\n        .suffix=${(_this$schema$descript = this.schema.description) === null || _this$schema$descript === void 0 ? void 0 : _this$schema$descript.suffix}\n        .validationMessage=${this.schema.required ? (_this$localize = this.localize) === null || _this$localize === void 0 ? void 0 : _this$localize.call(this, \"ui.common.error_required\") : undefined}\n        @input=${this._valueChanged}\n      ></ha-textfield>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"updated\",\n      value: function updated(changedProps) {\n        if (changedProps.has(\"schema\")) {\n          this.toggleAttribute(\"own-margin\", !!this.schema.required);\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_valueChanged\",\n      value: function _valueChanged(ev) {\n        const source = ev.target;\n        const rawValue = source.value.replace(\",\", \".\");\n        let value;\n        if (rawValue.endsWith(\".\")) {\n          return;\n        }\n\n        // Allow user to start typing a negative value\n        if (rawValue === \"-\") {\n          return;\n        }\n        if (rawValue !== \"\") {\n          value = parseFloat(rawValue);\n          if (isNaN(value)) {\n            value = undefined;\n          }\n        }\n\n        // Detect anything changed\n        if (this.data === value) {\n          // parseFloat will drop invalid text at the end, in that case update textfield\n          const newRawValue = value === undefined ? \"\" : String(value);\n          if (source.value !== newRawValue) {\n            source.value = newRawValue;\n          }\n          return;\n        }\n        fireEvent(this, \"value-changed\", {\n          value\n        });\n      }\n    }, {\n      kind: \"field\",\n      static: true,\n      key: \"styles\",\n      value() {\n        return css`\n    :host([own-margin]) {\n      margin-bottom: 5px;\n    }\n    ha-textfield {\n      display: block;\n    }\n  `;\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","customElement","property","query","fireEvent","HaFormFloat","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","type","Boolean","focus","_input","render","_this$schema$descript","_this$localize","label","helper","data","undefined","disabled","schema","required","description","suffix","localize","call","_valueChanged","updated","changedProps","has","toggleAttribute","ev","source","target","rawValue","replace","endsWith","parseFloat","isNaN","newRawValue","String","static"],"sources":["/Users/sercanardil/Desktop/frontend/src/components/ha-form/ha-form-float.ts"],"sourcesContent":["import { css, html, LitElement, TemplateResult, PropertyValues } from \"lit\";\nimport { customElement, property, query } from \"lit/decorators\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport type { HaTextField } from \"../ha-textfield\";\nimport \"../ha-textfield\";\nimport { HaFormElement, HaFormFloatData, HaFormFloatSchema } from \"./types\";\nimport { LocalizeFunc } from \"../../common/translations/localize\";\n\n@customElement(\"ha-form-float\")\nexport class HaFormFloat extends LitElement implements HaFormElement {\n  @property({ attribute: false }) public localize?: LocalizeFunc;\n\n  @property({ attribute: false }) public schema!: HaFormFloatSchema;\n\n  @property({ attribute: false }) public data!: HaFormFloatData;\n\n  @property() public label?: string;\n\n  @property() public helper?: string;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @query(\"ha-textfield\") private _input?: HaTextField;\n\n  public focus() {\n    if (this._input) {\n      this._input.focus();\n    }\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      <ha-textfield\n        type=\"numeric\"\n        inputMode=\"decimal\"\n        .label=${this.label}\n        .helper=${this.helper}\n        helperPersistent\n        .value=${this.data !== undefined ? this.data : \"\"}\n        .disabled=${this.disabled}\n        .required=${this.schema.required}\n        .autoValidate=${this.schema.required}\n        .suffix=${this.schema.description?.suffix}\n        .validationMessage=${this.schema.required\n          ? this.localize?.(\"ui.common.error_required\")\n          : undefined}\n        @input=${this._valueChanged}\n      ></ha-textfield>\n    `;\n  }\n\n  protected updated(changedProps: PropertyValues): void {\n    if (changedProps.has(\"schema\")) {\n      this.toggleAttribute(\"own-margin\", !!this.schema.required);\n    }\n  }\n\n  private _valueChanged(ev: Event) {\n    const source = ev.target as HaTextField;\n    const rawValue = source.value.replace(\",\", \".\");\n\n    let value: number | undefined;\n\n    if (rawValue.endsWith(\".\")) {\n      return;\n    }\n\n    // Allow user to start typing a negative value\n    if (rawValue === \"-\") {\n      return;\n    }\n\n    if (rawValue !== \"\") {\n      value = parseFloat(rawValue);\n      if (isNaN(value)) {\n        value = undefined;\n      }\n    }\n\n    // Detect anything changed\n    if (this.data === value) {\n      // parseFloat will drop invalid text at the end, in that case update textfield\n      const newRawValue = value === undefined ? \"\" : String(value);\n      if (source.value !== newRawValue) {\n        source.value = newRawValue;\n      }\n      return;\n    }\n\n    fireEvent(this, \"value-changed\", {\n      value,\n    });\n  }\n\n  static styles = css`\n    :host([own-margin]) {\n      margin-bottom: 5px;\n    }\n    ha-textfield {\n      display: block;\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-form-float\": HaFormFloat;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}