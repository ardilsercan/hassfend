{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nconst mdiFile = \"M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z\";\nimport { html, LitElement } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { removeFile, uploadFile } from \"../../data/file_upload\";\nimport { showAlertDialog } from \"../../dialogs/generic/show-dialog-box\";\nimport \"../ha-file-upload\";\nexport let HaFileSelector = _decorate([customElement(\"ha-selector-file\")], function (_initialize, _LitElement) {\n  class HaFileSelector extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaFileSelector,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"selector\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"value\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"label\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"helper\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"disabled\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"required\",\n      value() {\n        return true;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_filename\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_busy\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var _this$selector$file, _this$_filename;\n        return html`\n      <ha-file-upload\n        .hass=${this.hass}\n        .accept=${(_this$selector$file = this.selector.file) === null || _this$selector$file === void 0 ? void 0 : _this$selector$file.accept}\n        .icon=${mdiFile}\n        .label=${this.label}\n        .required=${this.required}\n        .disabled=${this.disabled}\n        .supports=${this.helper}\n        .uploading=${this._busy}\n        .value=${this.value ? ((_this$_filename = this._filename) === null || _this$_filename === void 0 ? void 0 : _this$_filename.name) || this.hass.localize(\"ui.components.selectors.file.unknown_file\") : undefined}\n        @file-picked=${this._uploadFile}\n        @change=${this._removeFile}\n      ></ha-file-upload>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"willUpdate\",\n      value: function willUpdate(changedProps) {\n        _get(_getPrototypeOf(HaFileSelector.prototype), \"willUpdate\", this).call(this, changedProps);\n        if (changedProps.has(\"value\") && this._filename && this.value !== this._filename.fileId) {\n          this._filename = undefined;\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_uploadFile\",\n      value: async function _uploadFile(ev) {\n        this._busy = true;\n        const file = ev.detail.files[0];\n        try {\n          const fileId = await uploadFile(this.hass, file);\n          this._filename = {\n            fileId,\n            name: file.name\n          };\n          fireEvent(this, \"value-changed\", {\n            value: fileId\n          });\n        } catch (err) {\n          showAlertDialog(this, {\n            text: this.hass.localize(\"ui.components.selectors.file.upload_failed\", {\n              reason: err.message || err\n            })\n          });\n        } finally {\n          this._busy = false;\n        }\n      }\n    }, {\n      kind: \"field\",\n      key: \"_removeFile\",\n      value() {\n        return async () => {\n          this._busy = true;\n          try {\n            await removeFile(this.hass, this.value);\n          } catch (err) {\n            // Not ideal if removal fails, but will be cleaned up later\n          } finally {\n            this._busy = false;\n          }\n          this._filename = undefined;\n          fireEvent(this, \"value-changed\", {\n            value: \"\"\n          });\n        };\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["html","LitElement","customElement","property","state","fireEvent","removeFile","uploadFile","showAlertDialog","HaFileSelector","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","type","Boolean","render","_this$selector$file","_this$_filename","hass","selector","file","accept","mdiFile","label","required","disabled","helper","_busy","_filename","name","localize","undefined","_uploadFile","_removeFile","willUpdate","changedProps","_get","_getPrototypeOf","prototype","call","has","fileId","ev","detail","files","err","text","reason","message"],"sources":["/Users/sercanardil/Desktop/frontend/src/components/ha-selector/ha-selector-file.ts"],"sourcesContent":["import { mdiFile } from \"@mdi/js\";\nimport { html, LitElement, PropertyValues } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { removeFile, uploadFile } from \"../../data/file_upload\";\nimport { FileSelector } from \"../../data/selector\";\nimport { showAlertDialog } from \"../../dialogs/generic/show-dialog-box\";\nimport { HomeAssistant } from \"../../types\";\nimport \"../ha-file-upload\";\n\n@customElement(\"ha-selector-file\")\nexport class HaFileSelector extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public selector!: FileSelector;\n\n  @property() public value?: string;\n\n  @property() public label?: string;\n\n  @property() public helper?: string;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @property({ type: Boolean }) public required = true;\n\n  @state() private _filename?: { fileId: string; name: string };\n\n  @state() private _busy = false;\n\n  protected render() {\n    return html`\n      <ha-file-upload\n        .hass=${this.hass}\n        .accept=${this.selector.file?.accept}\n        .icon=${mdiFile}\n        .label=${this.label}\n        .required=${this.required}\n        .disabled=${this.disabled}\n        .supports=${this.helper}\n        .uploading=${this._busy}\n        .value=${this.value\n          ? this._filename?.name ||\n            this.hass.localize(\"ui.components.selectors.file.unknown_file\")\n          : undefined}\n        @file-picked=${this._uploadFile}\n        @change=${this._removeFile}\n      ></ha-file-upload>\n    `;\n  }\n\n  protected willUpdate(changedProps: PropertyValues) {\n    super.willUpdate(changedProps);\n    if (\n      changedProps.has(\"value\") &&\n      this._filename &&\n      this.value !== this._filename.fileId\n    ) {\n      this._filename = undefined;\n    }\n  }\n\n  private async _uploadFile(ev) {\n    this._busy = true;\n\n    const file = ev.detail.files![0];\n\n    try {\n      const fileId = await uploadFile(this.hass, file);\n      this._filename = { fileId, name: file.name };\n      fireEvent(this, \"value-changed\", { value: fileId });\n    } catch (err: any) {\n      showAlertDialog(this, {\n        text: this.hass.localize(\"ui.components.selectors.file.upload_failed\", {\n          reason: err.message || err,\n        }),\n      });\n    } finally {\n      this._busy = false;\n    }\n  }\n\n  private _removeFile = async () => {\n    this._busy = true;\n    try {\n      await removeFile(this.hass, this.value!);\n    } catch (err) {\n      // Not ideal if removal fails, but will be cleaned up later\n    } finally {\n      this._busy = false;\n    }\n    this._filename = undefined;\n    fireEvent(this, \"value-changed\", { value: \"\" });\n  };\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-selector-file\": HaFileSelector;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}