{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/helpers/regeneratorRuntime\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _createForOfIteratorHelper from \"@babel/runtime/helpers/createForOfIteratorHelper\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10, _templateObject11, _templateObject12, _templateObject13, _templateObject14, _templateObject15, _templateObject16;\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.object.values.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"@material/mwc-list/mwc-list\";\nimport \"@material/mwc-list/mwc-list-item\";\nvar mdiPower = \"M16.56,5.44L15.11,6.89C16.84,7.94 18,9.83 18,12A6,6 0 0,1 12,18A6,6 0 0,1 6,12C6,9.83 7.16,7.94 8.88,6.88L7.44,5.44C5.36,6.88 4,9.28 4,12A8,8 0 0,0 12,20A8,8 0 0,0 20,12C20,9.28 18.64,6.88 16.56,5.44M13,3H11V13H13\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { isComponentLoaded } from \"../../../common/config/is_component_loaded\";\nimport { numberFormatToLocale } from \"../../../common/number/format_number\";\nimport { round } from \"../../../common/number/round\";\nimport { blankBeforePercent } from \"../../../common/translations/blank_before_percent\";\nimport \"../../../components/buttons/ha-progress-button\";\nimport \"../../../components/chart/ha-chart-base\";\nimport \"../../../components/ha-alert\";\nimport \"../../../components/ha-card\";\nimport \"../../../components/ha-clickable-list-item\";\nimport \"../../../components/ha-icon-button\";\nimport \"../../../components/ha-icon-next\";\nimport \"../../../components/ha-settings-row\";\nimport { subscribeConfigEntries } from \"../../../data/config_entries\";\nimport { BOARD_NAMES } from \"../../../data/hardware\";\nimport { fetchHassioHassOsInfo } from \"../../../data/hassio/host\";\nimport { scanUSBDevices } from \"../../../data/usb\";\nimport { showOptionsFlowDialog } from \"../../../dialogs/config-flow/show-dialog-options-flow\";\nimport { showRestartDialog } from \"../../../dialogs/restart/show-dialog-restart\";\nimport \"../../../layouts/hass-subpage\";\nimport { SubscribeMixin } from \"../../../mixins/subscribe-mixin\";\nimport { DEFAULT_PRIMARY_COLOR } from \"../../../resources/styles-data\";\nimport { haStyle } from \"../../../resources/styles\";\nimport { hardwareBrandsUrl } from \"../../../util/brands-url\";\nimport { showhardwareAvailableDialog } from \"./show-dialog-hardware-available\";\nvar DATASAMPLES = 60;\nvar DATA_SET_CONFIG = {\n  fill: \"origin\",\n  borderColor: DEFAULT_PRIMARY_COLOR,\n  backgroundColor: DEFAULT_PRIMARY_COLOR + \"2B\",\n  pointRadius: 0,\n  lineTension: 0.2,\n  borderWidth: 1\n};\nvar HaConfigHardware = _decorate([customElement(\"ha-config-hardware\")], function (_initialize, _SubscribeMixin) {\n  var HaConfigHardware = /*#__PURE__*/function (_SubscribeMixin2) {\n    _inherits(HaConfigHardware, _SubscribeMixin2);\n    function HaConfigHardware() {\n      var _this;\n      _classCallCheck(this, HaConfigHardware);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, HaConfigHardware, [].concat(args));\n      _initialize(_assertThisInitialized(_this));\n      return _this;\n    }\n    return _createClass(HaConfigHardware);\n  }(_SubscribeMixin);\n  return {\n    F: HaConfigHardware,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"narrow\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_error\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_OSData\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_hardwareInfo\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_chartOptions\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_systemStatusData\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_configEntries\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_memoryEntries\",\n      value: function value() {\n        return [];\n      }\n    }, {\n      kind: \"field\",\n      key: \"_cpuEntries\",\n      value: function value() {\n        return [];\n      }\n    }, {\n      kind: \"method\",\n      key: \"hassSubscribe\",\n      value: function hassSubscribe() {\n        var _this2 = this;\n        var subs = [subscribeConfigEntries(this.hass, function (messages) {\n          var fullUpdate = false;\n          var newEntries = [];\n          messages.forEach(function (message) {\n            if (message.type === null || message.type === \"added\") {\n              newEntries.push(message.entry);\n              if (message.type === null) {\n                fullUpdate = true;\n              }\n            } else if (message.type === \"removed\") {\n              if (_this2._configEntries) {\n                delete _this2._configEntries[message.entry.entry_id];\n              }\n            } else if (message.type === \"updated\") {\n              if (_this2._configEntries) {\n                var newEntry = message.entry;\n                _this2._configEntries[message.entry.entry_id] = newEntry;\n              }\n            }\n          });\n          if (!newEntries.length && !fullUpdate) {\n            return;\n          }\n          var entries = [].concat(_toConsumableArray(fullUpdate ? [] : Object.values(_this2._configEntries || {})), newEntries);\n          var configEntries = {};\n          var _iterator = _createForOfIteratorHelper(entries),\n            _step;\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var entry = _step.value;\n              configEntries[entry.entry_id] = entry;\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n          _this2._configEntries = configEntries;\n        }, {\n          type: [\"hardware\"]\n        })];\n        if (isComponentLoaded(this.hass, \"hardware\")) {\n          subs.push(this.hass.connection.subscribeMessage(function (message) {\n            // Only store the last 60 entries\n            _this2._memoryEntries.shift();\n            _this2._cpuEntries.shift();\n            _this2._memoryEntries.push({\n              x: new Date(message.timestamp).getTime(),\n              y: message.memory_used_percent\n            });\n            _this2._cpuEntries.push({\n              x: new Date(message.timestamp).getTime(),\n              y: message.cpu_percent\n            });\n            _this2._systemStatusData = message;\n          }, {\n            type: \"hardware/subscribe_system_status\"\n          }));\n        }\n        return subs;\n      }\n    }, {\n      kind: \"method\",\n      key: \"willUpdate\",\n      value: function willUpdate() {\n        var _this3 = this;\n        if (!this.hasUpdated) {\n          this._chartOptions = {\n            animation: false,\n            responsive: true,\n            scales: {\n              y: {\n                gridLines: {\n                  drawTicks: false\n                },\n                ticks: {\n                  maxTicksLimit: 7,\n                  fontSize: 10,\n                  max: 100,\n                  min: 0,\n                  stepSize: 1,\n                  callback: function callback(value) {\n                    return value + blankBeforePercent(_this3.hass.locale) + \"%\";\n                  }\n                }\n              },\n              x: {\n                type: \"time\",\n                adapters: {\n                  date: {\n                    locale: this.hass.locale,\n                    config: this.hass.config\n                  }\n                },\n                gridLines: {\n                  display: true,\n                  drawTicks: false\n                },\n                ticks: {\n                  maxRotation: 0,\n                  sampleSize: 5,\n                  autoSkipPadding: 20,\n                  major: {\n                    enabled: true\n                  },\n                  fontSize: 10,\n                  autoSkip: true,\n                  maxTicksLimit: 5\n                }\n              }\n            },\n            // @ts-expect-error\n            locale: numberFormatToLocale(this.hass.locale)\n          };\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"firstUpdated\",\n      value: function firstUpdated(changedProps) {\n        _get(_getPrototypeOf(HaConfigHardware.prototype), \"firstUpdated\", this).call(this, changedProps);\n        this._load();\n        var date = new Date();\n        // Force graph to start drawing from the right\n        for (var i = 0; i < DATASAMPLES; i++) {\n          var t = new Date(date);\n          t.setSeconds(t.getSeconds() - 5 * (DATASAMPLES - i));\n          this._memoryEntries.push({\n            x: t.getTime(),\n            y: null\n          });\n          this._cpuEntries.push({\n            x: t.getTime(),\n            y: null\n          });\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var _this$_hardwareInfo,\n          _this$_hardwareInfo2,\n          _this4 = this,\n          _this$_OSData;\n        var boardId;\n        var boardName;\n        var imageURL;\n        var documentationURL;\n        var boardConfigEntries = [];\n        var boardData = (_this$_hardwareInfo = this._hardwareInfo) === null || _this$_hardwareInfo === void 0 ? void 0 : _this$_hardwareInfo.hardware.find(function (hw) {\n          return hw.board !== null;\n        });\n        var dongles = (_this$_hardwareInfo2 = this._hardwareInfo) === null || _this$_hardwareInfo2 === void 0 ? void 0 : _this$_hardwareInfo2.hardware.filter(function (hw) {\n          return hw.dongle !== null && (!hw.config_entries.length || hw.config_entries.some(function (entryId) {\n            var _this4$_configEntries;\n            return ((_this4$_configEntries = _this4._configEntries) === null || _this4$_configEntries === void 0 ? void 0 : _this4$_configEntries[entryId]) && !_this4._configEntries[entryId].disabled_by;\n          }));\n        });\n        if (boardData) {\n          var _this$hass$themes;\n          boardConfigEntries = boardData.config_entries.map(function (id) {\n            var _this4$_configEntries2;\n            return (_this4$_configEntries2 = _this4._configEntries) === null || _this4$_configEntries2 === void 0 ? void 0 : _this4$_configEntries2[id];\n          }).filter(function (entry) {\n            return (entry === null || entry === void 0 ? void 0 : entry.supports_options) && !entry.disabled_by;\n          });\n          boardId = boardData.board.hassio_board_id;\n          boardName = boardData.name;\n          documentationURL = boardData.url;\n          imageURL = hardwareBrandsUrl({\n            category: \"boards\",\n            manufacturer: boardData.board.manufacturer,\n            model: boardData.board.model,\n            darkOptimized: (_this$hass$themes = this.hass.themes) === null || _this$hass$themes === void 0 ? void 0 : _this$hass$themes.darkMode\n          });\n        } else if ((_this$_OSData = this._OSData) !== null && _this$_OSData !== void 0 && _this$_OSData.board) {\n          boardId = this._OSData.board;\n          boardName = BOARD_NAMES[this._OSData.board];\n        }\n        return html(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      <hass-subpage\\n        back-path=\\\"/config/system\\\"\\n        .hass=\", \"\\n        .narrow=\", \"\\n        .header=\", \"\\n      >\\n        \", \"\\n        \", \"\\n        <div class=\\\"content\\\">\\n          \", \"\\n          \", \"\\n          \", \"\\n        </div>\\n      </hass-subpage>\\n    \"])), this.hass, this.narrow, this.hass.localize(\"ui.panel.config.hardware.caption\"), isComponentLoaded(this.hass, \"hassio\") ? html(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n              <ha-icon-button\\n                slot=\\\"toolbar-icon\\\"\\n                .path=\", \"\\n                .label=\", \"\\n                @click=\", \"\\n              ></ha-icon-button>\\n            \"])), mdiPower, this.hass.localize(\"ui.panel.config.hardware.restart_homeassistant\"), this._showRestartDialog) : \"\", this._error ? html(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n              <ha-alert alert-type=\\\"error\\\"\\n                >\", \"</ha-alert\\n              >\\n            \"])), this._error.message || this._error.code) : \"\", boardName || isComponentLoaded(this.hass, \"hassio\") ? html(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n                <ha-card outlined>\\n                  <div class=\\\"card-content\\\">\\n                    \", \"\\n                    <div class=\\\"board-info\\\">\\n                      <p class=\\\"primary-text\\\">\\n                        \", \"\\n                      </p>\\n                      \", \"\\n                    </div>\\n                  </div>\\n                  \", \"\\n                  \", \"\\n                </ha-card>\\n              \"])), imageURL ? html(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"<img\\n                          alt=\\\"\\\"\\n                          src=\", \"\\n                          crossorigin=\\\"anonymous\\\"\\n                          referrerpolicy=\\\"no-referrer\\\"\\n                        />\"])), imageURL) : \"\", boardName || this.hass.localize(\"ui.panel.config.hardware.generic_hardware\"), boardId ? html(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"<p class=\\\"secondary-text\\\">\", \"</p>\"])), boardId) : \"\", documentationURL ? html(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral([\"\\n                        <mwc-list>\\n                          <ha-clickable-list-item\\n                            .href=\", \"\\n                            openNewTab\\n                            twoline\\n                            hasMeta\\n                          >\\n                            <span\\n                              >\", \"</span\\n                            >\\n                            <span slot=\\\"secondary\\\"\\n                              >\", \"</span\\n                            >\\n                            <ha-icon-next slot=\\\"meta\\\"></ha-icon-next>\\n                          </ha-clickable-list-item>\\n                        </mwc-list>\\n                      \"])), documentationURL, this.hass.localize(\"ui.panel.config.hardware.documentation\"), this.hass.localize(\"ui.panel.config.hardware.documentation_description\")) : \"\", boardConfigEntries.length || isComponentLoaded(this.hass, \"hassio\") ? html(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral([\"<div class=\\\"card-actions\\\">\\n                        \", \"\\n                        \", \"\\n                      </div>\"])), boardConfigEntries.length ? html(_templateObject9 || (_templateObject9 = _taggedTemplateLiteral([\"\\n                              <mwc-button\\n                                .entry=\", \"\\n                                @click=\", \"\\n                              >\\n                                \", \"\\n                              </mwc-button>\\n                            \"])), boardConfigEntries[0], this._openOptionsFlow, this.hass.localize(\"ui.panel.config.hardware.configure\")) : nothing, isComponentLoaded(this.hass, \"hassio\") ? html(_templateObject10 || (_templateObject10 = _taggedTemplateLiteral([\"\\n                              <mwc-button @click=\", \">\\n                                \", \"\\n                              </mwc-button>\\n                            \"])), this._openHardware, this.hass.localize(\"ui.panel.config.hardware.available_hardware.title\")) : nothing) : \"\") : \"\", dongles !== null && dongles !== void 0 && dongles.length ? html(_templateObject11 || (_templateObject11 = _taggedTemplateLiteral([\"<ha-card outlined>\\n                \", \"\\n              </ha-card>\"])), dongles.map(function (dongle) {\n          var configEntry = dongle.config_entries.map(function (id) {\n            var _this4$_configEntries3;\n            return (_this4$_configEntries3 = _this4._configEntries) === null || _this4$_configEntries3 === void 0 ? void 0 : _this4$_configEntries3[id];\n          }).filter(function (entry) {\n            return (entry === null || entry === void 0 ? void 0 : entry.supports_options) && !entry.disabled_by;\n          })[0];\n          return html(_templateObject12 || (_templateObject12 = _taggedTemplateLiteral([\"<div class=\\\"row\\\">\\n                    \", \"\", \"\\n                  </div>\"])), dongle.name, configEntry ? html(_templateObject13 || (_templateObject13 = _taggedTemplateLiteral([\"<mwc-button\\n                          .entry=\", \"\\n                          @click=\", \"\\n                        >\\n                          \", \"\\n                        </mwc-button>\"])), configEntry, _this4._openOptionsFlow, _this4.hass.localize(\"ui.panel.config.hardware.configure\")) : \"\");\n        })) : \"\", this._systemStatusData ? html(_templateObject14 || (_templateObject14 = _taggedTemplateLiteral([\"<ha-card outlined>\\n                  <div class=\\\"header\\\">\\n                    <div class=\\\"title\\\">\\n                      \", \"\\n                    </div>\\n                    <div class=\\\"value\\\">\\n                      \", \"\", \"%\\n                    </div>\\n                  </div>\\n                  <div class=\\\"card-content\\\">\\n                    <ha-chart-base\\n                      .hass=\", \"\\n                      .data=\", \"\\n                      .options=\", \"\\n                    ></ha-chart-base>\\n                  </div>\\n                </ha-card>\\n                <ha-card outlined>\\n                  <div class=\\\"header\\\">\\n                    <div class=\\\"title\\\">\\n                      \", \"\\n                    </div>\\n                    <div class=\\\"value\\\">\\n                      \", \"\\n                      GB /\\n                      \", \"\\n                      GB\\n                    </div>\\n                  </div>\\n                  <div class=\\\"card-content\\\">\\n                    <ha-chart-base\\n                      .hass=\", \"\\n                      .data=\", \"\\n                      .options=\", \"\\n                    ></ha-chart-base>\\n                  </div>\\n                </ha-card>\"])), this.hass.localize(\"ui.panel.config.hardware.processor\"), this._systemStatusData.cpu_percent || \"-\", blankBeforePercent(this.hass.locale), this.hass, {\n          datasets: [Object.assign(Object.assign({}, DATA_SET_CONFIG), {}, {\n            data: this._cpuEntries\n          })]\n        }, this._chartOptions, this.hass.localize(\"ui.panel.config.hardware.memory\"), round(this._systemStatusData.memory_used_mb / 1024, 1), round((this._systemStatusData.memory_used_mb + this._systemStatusData.memory_free_mb) / 1024, 0), this.hass, {\n          datasets: [Object.assign(Object.assign({}, DATA_SET_CONFIG), {}, {\n            data: this._memoryEntries\n          })]\n        }, this._chartOptions) : isComponentLoaded(this.hass, \"hardware\") ? html(_templateObject15 || (_templateObject15 = _taggedTemplateLiteral([\"<ha-card outlined>\\n                  <div class=\\\"card-content\\\">\\n                    <div class=\\\"value\\\">\\n                      \", \"\\n                    </div>\\n                  </div>\\n                </ha-card>\"])), this.hass.localize(\"ui.panel.config.hardware.loading_system_data\")) : \"\");\n      }\n    }, {\n      kind: \"method\",\n      key: \"_load\",\n      value: function () {\n        var _load2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n          var isHassioLoaded, _this$_hardwareInfo3;\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                if (!isComponentLoaded(this.hass, \"usb\")) {\n                  _context.next = 3;\n                  break;\n                }\n                _context.next = 3;\n                return scanUSBDevices(this.hass);\n              case 3:\n                isHassioLoaded = isComponentLoaded(this.hass, \"hassio\");\n                _context.prev = 4;\n                if (!isComponentLoaded(this.hass, \"hardware\")) {\n                  _context.next = 9;\n                  break;\n                }\n                _context.next = 8;\n                return this.hass.callWS({\n                  type: \"hardware/info\"\n                });\n              case 8:\n                this._hardwareInfo = _context.sent;\n              case 9:\n                if (!(isHassioLoaded && !((_this$_hardwareInfo3 = this._hardwareInfo) !== null && _this$_hardwareInfo3 !== void 0 && _this$_hardwareInfo3.hardware.length))) {\n                  _context.next = 13;\n                  break;\n                }\n                _context.next = 12;\n                return fetchHassioHassOsInfo(this.hass);\n              case 12:\n                this._OSData = _context.sent;\n              case 13:\n                _context.next = 18;\n                break;\n              case 15:\n                _context.prev = 15;\n                _context.t0 = _context[\"catch\"](4);\n                this._error = _context.t0.message || _context.t0;\n              case 18:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee, this, [[4, 15]]);\n        }));\n        function _load() {\n          return _load2.apply(this, arguments);\n        }\n        return _load;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"_openOptionsFlow\",\n      value: function () {\n        var _openOptionsFlow2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(ev) {\n          var entry;\n          return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n            while (1) switch (_context2.prev = _context2.next) {\n              case 0:\n                entry = ev.currentTarget.entry;\n                if (entry) {\n                  _context2.next = 3;\n                  break;\n                }\n                return _context2.abrupt(\"return\");\n              case 3:\n                showOptionsFlowDialog(this, entry);\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }, _callee2, this);\n        }));\n        function _openOptionsFlow(_x) {\n          return _openOptionsFlow2.apply(this, arguments);\n        }\n        return _openOptionsFlow;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"_openHardware\",\n      value: function () {\n        var _openHardware2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n          return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n            while (1) switch (_context3.prev = _context3.next) {\n              case 0:\n                showhardwareAvailableDialog(this);\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }, _callee3, this);\n        }));\n        function _openHardware() {\n          return _openHardware2.apply(this, arguments);\n        }\n        return _openHardware;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"_showRestartDialog\",\n      value: function () {\n        var _showRestartDialog2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n          return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n            while (1) switch (_context4.prev = _context4.next) {\n              case 0:\n                showRestartDialog(this);\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }, _callee4, this);\n        }));\n        function _showRestartDialog() {\n          return _showRestartDialog2.apply(this, arguments);\n        }\n        return _showRestartDialog;\n      }()\n    }, {\n      kind: \"field\",\n      static: true,\n      key: \"styles\",\n      value: function value() {\n        return [haStyle, css(_templateObject16 || (_templateObject16 = _taggedTemplateLiteral([\"\\n      .content {\\n        padding: 28px 20px 0;\\n        max-width: 1040px;\\n        margin: 0 auto;\\n        --mdc-list-side-padding: 24px;\\n        --mdc-list-vertical-padding: 0;\\n      }\\n      ha-card {\\n        max-width: 600px;\\n        margin: 0 auto;\\n        height: 100%;\\n        justify-content: space-between;\\n        flex-direction: column;\\n        display: flex;\\n        margin-bottom: 16px;\\n      }\\n      .card-content {\\n        display: flex;\\n        justify-content: space-between;\\n        flex-direction: column;\\n        padding: 16px;\\n      }\\n      .card-content img {\\n        max-width: 300px;\\n        margin: auto;\\n      }\\n      .board-info {\\n        text-align: center;\\n      }\\n      .primary-text {\\n        font-size: 16px;\\n        margin: 0;\\n      }\\n      .secondary-text {\\n        font-size: 14px;\\n        margin-bottom: 0;\\n        color: var(--secondary-text-color);\\n      }\\n\\n      .header {\\n        padding: 16px;\\n        display: flex;\\n        justify-content: space-between;\\n      }\\n\\n      .header .title {\\n        color: var(--secondary-text-color);\\n        font-size: 18px;\\n      }\\n\\n      .header .value {\\n        font-size: 16px;\\n      }\\n      .row {\\n        display: flex;\\n        justify-content: space-between;\\n        align-items: center;\\n        height: 48px;\\n        padding: 8px 16px;\\n      }\\n      .card-actions {\\n        display: flex;\\n        justify-content: space-between;\\n      }\\n    \"])))];\n      }\n    }]\n  };\n}, SubscribeMixin(LitElement));","map":{"version":3,"names":["mdiPower","css","html","LitElement","nothing","customElement","property","state","isComponentLoaded","numberFormatToLocale","round","blankBeforePercent","subscribeConfigEntries","BOARD_NAMES","fetchHassioHassOsInfo","scanUSBDevices","showOptionsFlowDialog","showRestartDialog","SubscribeMixin","DEFAULT_PRIMARY_COLOR","haStyle","hardwareBrandsUrl","showhardwareAvailableDialog","DATASAMPLES","DATA_SET_CONFIG","fill","borderColor","backgroundColor","pointRadius","lineTension","borderWidth","HaConfigHardware","_decorate","_initialize","_SubscribeMixin","_SubscribeMixin2","_inherits","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_assertThisInitialized","_createClass","F","d","kind","decorators","attribute","key","value","type","Boolean","hassSubscribe","_this2","subs","hass","messages","fullUpdate","newEntries","forEach","message","push","entry","_configEntries","entry_id","newEntry","entries","_toConsumableArray","Object","values","configEntries","_iterator","_createForOfIteratorHelper","_step","s","n","done","err","e","f","connection","subscribeMessage","_memoryEntries","shift","_cpuEntries","x","Date","timestamp","getTime","y","memory_used_percent","cpu_percent","_systemStatusData","willUpdate","_this3","hasUpdated","_chartOptions","animation","responsive","scales","gridLines","drawTicks","ticks","maxTicksLimit","fontSize","max","min","stepSize","callback","locale","adapters","date","config","display","maxRotation","sampleSize","autoSkipPadding","major","enabled","autoSkip","firstUpdated","changedProps","_get","_getPrototypeOf","prototype","call","_load","i","t","setSeconds","getSeconds","render","_this$_hardwareInfo","_this$_hardwareInfo2","_this4","_this$_OSData","boardId","boardName","imageURL","documentationURL","boardConfigEntries","boardData","_hardwareInfo","hardware","find","hw","board","dongles","filter","dongle","config_entries","some","entryId","_this4$_configEntries","disabled_by","_this$hass$themes","map","id","_this4$_configEntries2","supports_options","hassio_board_id","name","url","category","manufacturer","model","darkOptimized","themes","darkMode","_OSData","_templateObject","_taggedTemplateLiteral","narrow","localize","_templateObject2","_showRestartDialog","_error","_templateObject3","code","_templateObject4","_templateObject5","_templateObject6","_templateObject7","_templateObject8","_templateObject9","_openOptionsFlow","_templateObject10","_openHardware","_templateObject11","configEntry","_this4$_configEntries3","_templateObject12","_templateObject13","_templateObject14","datasets","assign","data","memory_used_mb","memory_free_mb","_templateObject15","_load2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","isHassioLoaded","_this$_hardwareInfo3","wrap","_callee$","_context","prev","next","callWS","sent","t0","stop","apply","_openOptionsFlow2","_callee2","ev","_callee2$","_context2","currentTarget","abrupt","_x","_openHardware2","_callee3","_callee3$","_context3","_showRestartDialog2","_callee4","_callee4$","_context4","static","_templateObject16"],"sources":["/Users/sercanardil/Desktop/frontend/src/panels/config/hardware/ha-config-hardware.ts"],"sourcesContent":["import \"@material/mwc-list/mwc-list\";\nimport \"@material/mwc-list/mwc-list-item\";\nimport { mdiPower } from \"@mdi/js\";\nimport type { ChartOptions } from \"chart.js\";\nimport { UnsubscribeFunc } from \"home-assistant-js-websocket\";\nimport { css, html, LitElement, nothing, PropertyValues } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { isComponentLoaded } from \"../../../common/config/is_component_loaded\";\nimport { numberFormatToLocale } from \"../../../common/number/format_number\";\nimport { round } from \"../../../common/number/round\";\nimport { blankBeforePercent } from \"../../../common/translations/blank_before_percent\";\nimport \"../../../components/buttons/ha-progress-button\";\nimport \"../../../components/chart/ha-chart-base\";\nimport \"../../../components/ha-alert\";\nimport \"../../../components/ha-card\";\nimport \"../../../components/ha-clickable-list-item\";\nimport \"../../../components/ha-icon-button\";\nimport \"../../../components/ha-icon-next\";\nimport \"../../../components/ha-settings-row\";\nimport {\n  ConfigEntry,\n  subscribeConfigEntries,\n} from \"../../../data/config_entries\";\nimport {\n  BOARD_NAMES,\n  HardwareInfo,\n  SystemStatusStreamMessage,\n} from \"../../../data/hardware\";\nimport {\n  fetchHassioHassOsInfo,\n  HassioHassOSInfo,\n} from \"../../../data/hassio/host\";\nimport { scanUSBDevices } from \"../../../data/usb\";\nimport { showOptionsFlowDialog } from \"../../../dialogs/config-flow/show-dialog-options-flow\";\nimport { showRestartDialog } from \"../../../dialogs/restart/show-dialog-restart\";\nimport \"../../../layouts/hass-subpage\";\nimport { SubscribeMixin } from \"../../../mixins/subscribe-mixin\";\nimport { DEFAULT_PRIMARY_COLOR } from \"../../../resources/styles-data\";\nimport { haStyle } from \"../../../resources/styles\";\nimport type { HomeAssistant } from \"../../../types\";\nimport { hardwareBrandsUrl } from \"../../../util/brands-url\";\nimport { showhardwareAvailableDialog } from \"./show-dialog-hardware-available\";\n\nconst DATASAMPLES = 60;\n\nconst DATA_SET_CONFIG = {\n  fill: \"origin\",\n  borderColor: DEFAULT_PRIMARY_COLOR,\n  backgroundColor: DEFAULT_PRIMARY_COLOR + \"2B\",\n  pointRadius: 0,\n  lineTension: 0.2,\n  borderWidth: 1,\n};\n\n@customElement(\"ha-config-hardware\")\nclass HaConfigHardware extends SubscribeMixin(LitElement) {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ type: Boolean }) public narrow = false;\n\n  @state() private _error?: { code: string; message: string };\n\n  @state() private _OSData?: HassioHassOSInfo;\n\n  @state() private _hardwareInfo?: HardwareInfo;\n\n  @state() private _chartOptions?: ChartOptions;\n\n  @state() private _systemStatusData?: SystemStatusStreamMessage;\n\n  @state() private _configEntries?: { [id: string]: ConfigEntry };\n\n  private _memoryEntries: { x: number; y: number | null }[] = [];\n\n  private _cpuEntries: { x: number; y: number | null }[] = [];\n\n  public hassSubscribe(): Array<UnsubscribeFunc | Promise<UnsubscribeFunc>> {\n    const subs = [\n      subscribeConfigEntries(\n        this.hass,\n        (messages) => {\n          let fullUpdate = false;\n          const newEntries: ConfigEntry[] = [];\n          messages.forEach((message) => {\n            if (message.type === null || message.type === \"added\") {\n              newEntries.push(message.entry);\n              if (message.type === null) {\n                fullUpdate = true;\n              }\n            } else if (message.type === \"removed\") {\n              if (this._configEntries) {\n                delete this._configEntries[message.entry.entry_id];\n              }\n            } else if (message.type === \"updated\") {\n              if (this._configEntries) {\n                const newEntry = message.entry;\n                this._configEntries[message.entry.entry_id] = newEntry;\n              }\n            }\n          });\n          if (!newEntries.length && !fullUpdate) {\n            return;\n          }\n          const entries = [\n            ...(fullUpdate ? [] : Object.values(this._configEntries || {})),\n            ...newEntries,\n          ];\n          const configEntries: { [id: string]: ConfigEntry } = {};\n          for (const entry of entries) {\n            configEntries[entry.entry_id] = entry;\n          }\n          this._configEntries = configEntries;\n        },\n        { type: [\"hardware\"] }\n      ),\n    ];\n\n    if (isComponentLoaded(this.hass, \"hardware\")) {\n      subs.push(\n        this.hass.connection.subscribeMessage<SystemStatusStreamMessage>(\n          (message) => {\n            // Only store the last 60 entries\n            this._memoryEntries.shift();\n            this._cpuEntries.shift();\n\n            this._memoryEntries.push({\n              x: new Date(message.timestamp).getTime(),\n              y: message.memory_used_percent,\n            });\n            this._cpuEntries.push({\n              x: new Date(message.timestamp).getTime(),\n              y: message.cpu_percent,\n            });\n\n            this._systemStatusData = message;\n          },\n          {\n            type: \"hardware/subscribe_system_status\",\n          }\n        )\n      );\n    }\n\n    return subs;\n  }\n\n  protected willUpdate(): void {\n    if (!this.hasUpdated) {\n      this._chartOptions = {\n        animation: false,\n        responsive: true,\n        scales: {\n          y: {\n            gridLines: {\n              drawTicks: false,\n            },\n            ticks: {\n              maxTicksLimit: 7,\n              fontSize: 10,\n              max: 100,\n              min: 0,\n              stepSize: 1,\n              callback: (value) =>\n                value + blankBeforePercent(this.hass.locale) + \"%\",\n            },\n          },\n          x: {\n            type: \"time\",\n            adapters: {\n              date: {\n                locale: this.hass.locale,\n                config: this.hass.config,\n              },\n            },\n            gridLines: {\n              display: true,\n              drawTicks: false,\n            },\n            ticks: {\n              maxRotation: 0,\n              sampleSize: 5,\n              autoSkipPadding: 20,\n              major: {\n                enabled: true,\n              },\n              fontSize: 10,\n              autoSkip: true,\n              maxTicksLimit: 5,\n            },\n          },\n        },\n        // @ts-expect-error\n        locale: numberFormatToLocale(this.hass.locale),\n      };\n    }\n  }\n\n  protected firstUpdated(changedProps: PropertyValues) {\n    super.firstUpdated(changedProps);\n    this._load();\n\n    const date = new Date();\n    // Force graph to start drawing from the right\n    for (let i = 0; i < DATASAMPLES; i++) {\n      const t = new Date(date);\n      t.setSeconds(t.getSeconds() - 5 * (DATASAMPLES - i));\n      this._memoryEntries.push({ x: t.getTime(), y: null });\n      this._cpuEntries.push({ x: t.getTime(), y: null });\n    }\n  }\n\n  protected render() {\n    let boardId: string | undefined;\n    let boardName: string | undefined;\n    let imageURL: string | undefined;\n    let documentationURL: string | undefined;\n    let boardConfigEntries: ConfigEntry[] = [];\n\n    const boardData = this._hardwareInfo?.hardware.find(\n      (hw) => hw.board !== null\n    );\n\n    const dongles = this._hardwareInfo?.hardware.filter(\n      (hw) =>\n        hw.dongle !== null &&\n        (!hw.config_entries.length ||\n          hw.config_entries.some(\n            (entryId) =>\n              this._configEntries?.[entryId] &&\n              !this._configEntries[entryId].disabled_by\n          ))\n    );\n\n    if (boardData) {\n      boardConfigEntries = boardData.config_entries\n        .map((id) => this._configEntries?.[id])\n        .filter(\n          (entry) => entry?.supports_options && !entry.disabled_by\n        ) as ConfigEntry[];\n      boardId = boardData.board!.hassio_board_id;\n      boardName = boardData.name;\n      documentationURL = boardData.url;\n      imageURL = hardwareBrandsUrl({\n        category: \"boards\",\n        manufacturer: boardData.board!.manufacturer,\n        model: boardData.board!.model,\n        darkOptimized: this.hass.themes?.darkMode,\n      });\n    } else if (this._OSData?.board) {\n      boardId = this._OSData.board;\n      boardName = BOARD_NAMES[this._OSData.board];\n    }\n\n    return html`\n      <hass-subpage\n        back-path=\"/config/system\"\n        .hass=${this.hass}\n        .narrow=${this.narrow}\n        .header=${this.hass.localize(\"ui.panel.config.hardware.caption\")}\n      >\n        ${isComponentLoaded(this.hass, \"hassio\")\n          ? html`\n              <ha-icon-button\n                slot=\"toolbar-icon\"\n                .path=${mdiPower}\n                .label=${this.hass.localize(\n                  \"ui.panel.config.hardware.restart_homeassistant\"\n                )}\n                @click=${this._showRestartDialog}\n              ></ha-icon-button>\n            `\n          : \"\"}\n        ${this._error\n          ? html`\n              <ha-alert alert-type=\"error\"\n                >${this._error.message || this._error.code}</ha-alert\n              >\n            `\n          : \"\"}\n        <div class=\"content\">\n          ${boardName || isComponentLoaded(this.hass, \"hassio\")\n            ? html`\n                <ha-card outlined>\n                  <div class=\"card-content\">\n                    ${imageURL\n                      ? html`<img\n                          alt=\"\"\n                          src=${imageURL}\n                          crossorigin=\"anonymous\"\n                          referrerpolicy=\"no-referrer\"\n                        />`\n                      : \"\"}\n                    <div class=\"board-info\">\n                      <p class=\"primary-text\">\n                        ${boardName ||\n                        this.hass.localize(\n                          \"ui.panel.config.hardware.generic_hardware\"\n                        )}\n                      </p>\n                      ${boardId\n                        ? html`<p class=\"secondary-text\">${boardId}</p>`\n                        : \"\"}\n                    </div>\n                  </div>\n                  ${documentationURL\n                    ? html`\n                        <mwc-list>\n                          <ha-clickable-list-item\n                            .href=${documentationURL}\n                            openNewTab\n                            twoline\n                            hasMeta\n                          >\n                            <span\n                              >${this.hass.localize(\n                                \"ui.panel.config.hardware.documentation\"\n                              )}</span\n                            >\n                            <span slot=\"secondary\"\n                              >${this.hass.localize(\n                                \"ui.panel.config.hardware.documentation_description\"\n                              )}</span\n                            >\n                            <ha-icon-next slot=\"meta\"></ha-icon-next>\n                          </ha-clickable-list-item>\n                        </mwc-list>\n                      `\n                    : \"\"}\n                  ${boardConfigEntries.length ||\n                  isComponentLoaded(this.hass, \"hassio\")\n                    ? html`<div class=\"card-actions\">\n                        ${boardConfigEntries.length\n                          ? html`\n                              <mwc-button\n                                .entry=${boardConfigEntries[0]}\n                                @click=${this._openOptionsFlow}\n                              >\n                                ${this.hass.localize(\n                                  \"ui.panel.config.hardware.configure\"\n                                )}\n                              </mwc-button>\n                            `\n                          : nothing}\n                        ${isComponentLoaded(this.hass, \"hassio\")\n                          ? html`\n                              <mwc-button @click=${this._openHardware}>\n                                ${this.hass.localize(\n                                  \"ui.panel.config.hardware.available_hardware.title\"\n                                )}\n                              </mwc-button>\n                            `\n                          : nothing}\n                      </div>`\n                    : \"\"}\n                </ha-card>\n              `\n            : \"\"}\n          ${dongles?.length\n            ? html`<ha-card outlined>\n                ${dongles.map((dongle) => {\n                  const configEntry = dongle.config_entries\n                    .map((id) => this._configEntries?.[id])\n                    .filter(\n                      (entry) => entry?.supports_options && !entry.disabled_by\n                    )[0];\n                  return html`<div class=\"row\">\n                    ${dongle.name}${configEntry\n                      ? html`<mwc-button\n                          .entry=${configEntry}\n                          @click=${this._openOptionsFlow}\n                        >\n                          ${this.hass.localize(\n                            \"ui.panel.config.hardware.configure\"\n                          )}\n                        </mwc-button>`\n                      : \"\"}\n                  </div>`;\n                })}\n              </ha-card>`\n            : \"\"}\n          ${this._systemStatusData\n            ? html`<ha-card outlined>\n                  <div class=\"header\">\n                    <div class=\"title\">\n                      ${this.hass.localize(\n                        \"ui.panel.config.hardware.processor\"\n                      )}\n                    </div>\n                    <div class=\"value\">\n                      ${this._systemStatusData.cpu_percent ||\n                      \"-\"}${blankBeforePercent(this.hass.locale)}%\n                    </div>\n                  </div>\n                  <div class=\"card-content\">\n                    <ha-chart-base\n                      .hass=${this.hass}\n                      .data=${{\n                        datasets: [\n                          {\n                            ...DATA_SET_CONFIG,\n                            data: this._cpuEntries,\n                          },\n                        ],\n                      }}\n                      .options=${this._chartOptions}\n                    ></ha-chart-base>\n                  </div>\n                </ha-card>\n                <ha-card outlined>\n                  <div class=\"header\">\n                    <div class=\"title\">\n                      ${this.hass.localize(\"ui.panel.config.hardware.memory\")}\n                    </div>\n                    <div class=\"value\">\n                      ${round(this._systemStatusData.memory_used_mb / 1024, 1)}\n                      GB /\n                      ${round(\n                        (this._systemStatusData.memory_used_mb! +\n                          this._systemStatusData.memory_free_mb!) /\n                          1024,\n                        0\n                      )}\n                      GB\n                    </div>\n                  </div>\n                  <div class=\"card-content\">\n                    <ha-chart-base\n                      .hass=${this.hass}\n                      .data=${{\n                        datasets: [\n                          {\n                            ...DATA_SET_CONFIG,\n                            data: this._memoryEntries,\n                          },\n                        ],\n                      }}\n                      .options=${this._chartOptions}\n                    ></ha-chart-base>\n                  </div>\n                </ha-card>`\n            : isComponentLoaded(this.hass, \"hardware\")\n              ? html`<ha-card outlined>\n                  <div class=\"card-content\">\n                    <div class=\"value\">\n                      ${this.hass.localize(\n                        \"ui.panel.config.hardware.loading_system_data\"\n                      )}\n                    </div>\n                  </div>\n                </ha-card>`\n              : \"\"}\n        </div>\n      </hass-subpage>\n    `;\n  }\n\n  private async _load() {\n    if (isComponentLoaded(this.hass, \"usb\")) {\n      await scanUSBDevices(this.hass);\n    }\n\n    const isHassioLoaded = isComponentLoaded(this.hass, \"hassio\");\n    try {\n      if (isComponentLoaded(this.hass, \"hardware\")) {\n        this._hardwareInfo = await this.hass.callWS({ type: \"hardware/info\" });\n      }\n\n      if (isHassioLoaded && !this._hardwareInfo?.hardware.length) {\n        this._OSData = await fetchHassioHassOsInfo(this.hass);\n      }\n    } catch (err: any) {\n      this._error = err.message || err;\n    }\n  }\n\n  private async _openOptionsFlow(ev) {\n    const entry = ev.currentTarget.entry;\n    if (!entry) {\n      return;\n    }\n    showOptionsFlowDialog(this, entry);\n  }\n\n  private async _openHardware() {\n    showhardwareAvailableDialog(this);\n  }\n\n  private async _showRestartDialog() {\n    showRestartDialog(this);\n  }\n\n  static styles = [\n    haStyle,\n    css`\n      .content {\n        padding: 28px 20px 0;\n        max-width: 1040px;\n        margin: 0 auto;\n        --mdc-list-side-padding: 24px;\n        --mdc-list-vertical-padding: 0;\n      }\n      ha-card {\n        max-width: 600px;\n        margin: 0 auto;\n        height: 100%;\n        justify-content: space-between;\n        flex-direction: column;\n        display: flex;\n        margin-bottom: 16px;\n      }\n      .card-content {\n        display: flex;\n        justify-content: space-between;\n        flex-direction: column;\n        padding: 16px;\n      }\n      .card-content img {\n        max-width: 300px;\n        margin: auto;\n      }\n      .board-info {\n        text-align: center;\n      }\n      .primary-text {\n        font-size: 16px;\n        margin: 0;\n      }\n      .secondary-text {\n        font-size: 14px;\n        margin-bottom: 0;\n        color: var(--secondary-text-color);\n      }\n\n      .header {\n        padding: 16px;\n        display: flex;\n        justify-content: space-between;\n      }\n\n      .header .title {\n        color: var(--secondary-text-color);\n        font-size: 18px;\n      }\n\n      .header .value {\n        font-size: 16px;\n      }\n      .row {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        height: 48px;\n        padding: 8px 16px;\n      }\n      .card-actions {\n        display: flex;\n        justify-content: space-between;\n      }\n    `,\n  ];\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-config-hardware\": HaConfigHardware;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}