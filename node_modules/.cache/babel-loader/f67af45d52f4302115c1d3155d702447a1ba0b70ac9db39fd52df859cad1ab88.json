{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport { html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { assert, assign, object, optional, string } from \"superstruct\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport \"../../../../components/entity/ha-entity-picker\";\nimport \"../../../../components/ha-theme-picker\";\nimport { baseLovelaceCardConfig } from \"../structs/base-card-struct\";\nconst cardConfigStruct = assign(baseLovelaceCardConfig, object({\n  entity: optional(string()),\n  theme: optional(string())\n}));\nconst includeDomains = [\"media_player\"];\nexport let HuiMediaControlCardEditor = _decorate([customElement(\"hui-media-control-card-editor\")], function (_initialize, _LitElement) {\n  class HuiMediaControlCardEditor extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HuiMediaControlCardEditor,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_config\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"setConfig\",\n      value: function setConfig(config) {\n        assert(config, cardConfigStruct);\n        this._config = config;\n      }\n    }, {\n      kind: \"get\",\n      key: \"_entity\",\n      value: function _entity() {\n        return this._config.entity || \"\";\n      }\n    }, {\n      kind: \"get\",\n      key: \"_theme\",\n      value: function _theme() {\n        return this._config.theme || \"\";\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this.hass || !this._config) {\n          return nothing;\n        }\n        return html`\n      <div class=\"card-config\">\n        <ha-entity-picker\n          .label=${this.hass.localize(\"ui.panel.lovelace.editor.card.generic.entity\")}\n          .hass=${this.hass}\n          .value=${this._entity}\n          .configValue=${\"entity\"}\n          .includeDomains=${includeDomains}\n          .required=${true}\n          @change=${this._valueChanged}\n          allow-custom-entity\n        ></ha-entity-picker>\n        <ha-theme-picker\n          .label=${`${this.hass.localize(\"ui.panel.lovelace.editor.card.generic.theme\")} (${this.hass.localize(\"ui.panel.lovelace.editor.card.config.optional\")})`}\n          .hass=${this.hass}\n          .value=${this._theme}\n          .configValue=${\"theme\"}\n          @value-changed=${this._valueChanged}\n        ></ha-theme-picker>\n      </div>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_valueChanged\",\n      value: function _valueChanged(ev) {\n        if (!this._config || !this.hass) {\n          return;\n        }\n        const target = ev.target;\n        if (this[`_${target.configValue}`] === target.value) {\n          return;\n        }\n        if (target.configValue) {\n          if (target.value === \"\") {\n            this._config = {\n              ...this._config\n            };\n            delete this._config[target.configValue];\n          } else {\n            this._config = {\n              ...this._config,\n              [target.configValue]: target.value\n            };\n          }\n        }\n        fireEvent(this, \"config-changed\", {\n          config: this._config\n        });\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["html","LitElement","nothing","customElement","property","state","assert","assign","object","optional","string","fireEvent","baseLovelaceCardConfig","cardConfigStruct","entity","theme","includeDomains","HuiMediaControlCardEditor","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","setConfig","config","_config","_entity","_theme","render","hass","localize","_valueChanged","ev","target","configValue"],"sources":["/Users/sercanardil/Desktop/frontend/src/panels/lovelace/editor/config-elements/hui-media-control-card-editor.ts"],"sourcesContent":["import { html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { assert, assign, object, optional, string } from \"superstruct\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport \"../../../../components/entity/ha-entity-picker\";\nimport \"../../../../components/ha-theme-picker\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { MediaControlCardConfig } from \"../../cards/types\";\nimport { LovelaceCardEditor } from \"../../types\";\nimport { baseLovelaceCardConfig } from \"../structs/base-card-struct\";\nimport { EditorTarget, EntitiesEditorEvent } from \"../types\";\n\nconst cardConfigStruct = assign(\n  baseLovelaceCardConfig,\n  object({\n    entity: optional(string()),\n    theme: optional(string()),\n  })\n);\n\nconst includeDomains = [\"media_player\"];\n\n@customElement(\"hui-media-control-card-editor\")\nexport class HuiMediaControlCardEditor\n  extends LitElement\n  implements LovelaceCardEditor\n{\n  @property({ attribute: false }) public hass?: HomeAssistant;\n\n  @state() private _config?: MediaControlCardConfig;\n\n  public setConfig(config: MediaControlCardConfig): void {\n    assert(config, cardConfigStruct);\n    this._config = config;\n  }\n\n  get _entity(): string {\n    return this._config!.entity || \"\";\n  }\n\n  get _theme(): string {\n    return this._config!.theme || \"\";\n  }\n\n  protected render() {\n    if (!this.hass || !this._config) {\n      return nothing;\n    }\n\n    return html`\n      <div class=\"card-config\">\n        <ha-entity-picker\n          .label=${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.generic.entity\"\n          )}\n          .hass=${this.hass}\n          .value=${this._entity}\n          .configValue=${\"entity\"}\n          .includeDomains=${includeDomains}\n          .required=${true}\n          @change=${this._valueChanged}\n          allow-custom-entity\n        ></ha-entity-picker>\n        <ha-theme-picker\n          .label=${`${this.hass!.localize(\n            \"ui.panel.lovelace.editor.card.generic.theme\"\n          )} (${this.hass!.localize(\n            \"ui.panel.lovelace.editor.card.config.optional\"\n          )})`}\n          .hass=${this.hass}\n          .value=${this._theme}\n          .configValue=${\"theme\"}\n          @value-changed=${this._valueChanged}\n        ></ha-theme-picker>\n      </div>\n    `;\n  }\n\n  private _valueChanged(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n    if (this[`_${target.configValue}`] === target.value) {\n      return;\n    }\n    if (target.configValue) {\n      if (target.value === \"\") {\n        this._config = { ...this._config };\n        delete this._config[target.configValue!];\n      } else {\n        this._config = {\n          ...this._config,\n          [target.configValue!]: target.value,\n        };\n      }\n    }\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-media-control-card-editor\": HuiMediaControlCardEditor;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}