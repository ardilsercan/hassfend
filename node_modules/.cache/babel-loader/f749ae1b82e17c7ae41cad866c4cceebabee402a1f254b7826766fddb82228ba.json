{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { stopPropagation } from \"../common/dom/stop_propagation\";\nimport { computeStateName } from \"../common/entity/compute_state_name\";\nimport { debounce } from \"../common/util/debounce\";\nimport { listTTSEngines } from \"../data/tts\";\nimport \"./ha-list-item\";\nimport \"./ha-select\";\nconst NONE = \"__NONE_OPTION__\";\nconst NAME_MAP = {\n  cloud: \"Indexline Technology Cloud\",\n  google_translate: \"Google Translate\"\n};\nexport let HaTTSPicker = _decorate([customElement(\"ha-tts-picker\")], function (_initialize, _LitElement) {\n  class HaTTSPicker extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaTTSPicker,\n    d: [{\n      kind: \"field\",\n      decorators: [property()],\n      key: \"value\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"label\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"language\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        reflect: true\n      })],\n      key: \"disabled\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"required\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_engines\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var _this$value;\n        if (!this._engines) {\n          return nothing;\n        }\n        const value = (_this$value = this.value) !== null && _this$value !== void 0 ? _this$value : this.required ? this._engines.find(engine => {\n          var _engine$supported_lan;\n          return ((_engine$supported_lan = engine.supported_languages) === null || _engine$supported_lan === void 0 ? void 0 : _engine$supported_lan.length) !== 0;\n        }) : NONE;\n        return html`\n      <ha-select\n        .label=${this.label || this.hass.localize(\"ui.components.tts-picker.tts\")}\n        .value=${value}\n        .required=${this.required}\n        .disabled=${this.disabled}\n        @selected=${this._changed}\n        @closed=${stopPropagation}\n        fixedMenuPosition\n        naturalMenuWidth\n      >\n        ${!this.required ? html`<ha-list-item .value=${NONE}>\n              ${this.hass.localize(\"ui.components.tts-picker.none\")}\n            </ha-list-item>` : nothing}\n        ${this._engines.map(engine => {\n          var _engine$supported_lan2;\n          let label = engine.engine_id;\n          if (engine.engine_id.includes(\".\")) {\n            const stateObj = this.hass.states[engine.engine_id];\n            label = stateObj ? computeStateName(stateObj) : engine.engine_id;\n          } else if (engine.engine_id in NAME_MAP) {\n            label = NAME_MAP[engine.engine_id];\n          }\n          return html`<ha-list-item\n            .value=${engine.engine_id}\n            .disabled=${((_engine$supported_lan2 = engine.supported_languages) === null || _engine$supported_lan2 === void 0 ? void 0 : _engine$supported_lan2.length) === 0}\n          >\n            ${label}\n          </ha-list-item>`;\n        })}\n      </ha-select>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"willUpdate\",\n      value: function willUpdate(changedProperties) {\n        _get(_getPrototypeOf(HaTTSPicker.prototype), \"willUpdate\", this).call(this, changedProperties);\n        if (!this.hasUpdated) {\n          this._updateEngines();\n        } else if (changedProperties.has(\"language\")) {\n          this._debouncedUpdateEngines();\n        }\n      }\n    }, {\n      kind: \"field\",\n      key: \"_debouncedUpdateEngines\",\n      value() {\n        return debounce(() => this._updateEngines(), 500);\n      }\n    }, {\n      kind: \"method\",\n      key: \"_updateEngines\",\n      value: async function _updateEngines() {\n        var _selectedEngine$suppo;\n        this._engines = (await listTTSEngines(this.hass, this.language, this.hass.config.country || undefined)).providers;\n        if (!this.value) {\n          return;\n        }\n        const selectedEngine = this._engines.find(engine => engine.engine_id === this.value);\n        fireEvent(this, \"supported-languages-changed\", {\n          value: selectedEngine === null || selectedEngine === void 0 ? void 0 : selectedEngine.supported_languages\n        });\n        if (!selectedEngine || ((_selectedEngine$suppo = selectedEngine.supported_languages) === null || _selectedEngine$suppo === void 0 ? void 0 : _selectedEngine$suppo.length) === 0) {\n          this.value = undefined;\n          fireEvent(this, \"value-changed\", {\n            value: this.value\n          });\n        }\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css`\n      ha-select {\n        width: 100%;\n      }\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_changed\",\n      value: function _changed(ev) {\n        var _find;\n        const target = ev.target;\n        if (!this.hass || target.value === \"\" || target.value === this.value || this.value === undefined && target.value === NONE) {\n          return;\n        }\n        this.value = target.value === NONE ? undefined : target.value;\n        fireEvent(this, \"value-changed\", {\n          value: this.value\n        });\n        fireEvent(this, \"supported-languages-changed\", {\n          value: (_find = this._engines.find(engine => engine.engine_id === this.value)) === null || _find === void 0 ? void 0 : _find.supported_languages\n        });\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","nothing","customElement","property","state","fireEvent","stopPropagation","computeStateName","debounce","listTTSEngines","NONE","NAME_MAP","cloud","google_translate","HaTTSPicker","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","key","value","attribute","type","Boolean","reflect","render","_this$value","_engines","required","find","engine","_engine$supported_lan","supported_languages","length","label","hass","localize","disabled","_changed","map","_engine$supported_lan2","engine_id","includes","stateObj","states","willUpdate","changedProperties","_get","_getPrototypeOf","prototype","call","hasUpdated","_updateEngines","has","_debouncedUpdateEngines","_selectedEngine$suppo","language","config","country","undefined","providers","selectedEngine","static","styles","ev","_find","target"],"sources":["/Users/sercanardil/Desktop/frontend/src/components/ha-tts-picker.ts"],"sourcesContent":["import {\n  css,\n  CSSResultGroup,\n  html,\n  LitElement,\n  nothing,\n  PropertyValues,\n} from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { stopPropagation } from \"../common/dom/stop_propagation\";\nimport { computeStateName } from \"../common/entity/compute_state_name\";\nimport { debounce } from \"../common/util/debounce\";\nimport { listTTSEngines, TTSEngine } from \"../data/tts\";\nimport { HomeAssistant } from \"../types\";\nimport \"./ha-list-item\";\nimport \"./ha-select\";\nimport type { HaSelect } from \"./ha-select\";\n\nconst NONE = \"__NONE_OPTION__\";\n\nconst NAME_MAP = {\n  cloud: \"Indexline Technology Cloud\",\n  google_translate: \"Google Translate\",\n};\n\n@customElement(\"ha-tts-picker\")\nexport class HaTTSPicker extends LitElement {\n  @property() public value?: string;\n\n  @property() public label?: string;\n\n  @property() public language?: string;\n\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ type: Boolean, reflect: true }) public disabled = false;\n\n  @property({ type: Boolean }) public required = false;\n\n  @state() _engines?: TTSEngine[];\n\n  protected render() {\n    if (!this._engines) {\n      return nothing;\n    }\n    const value =\n      this.value ??\n      (this.required\n        ? this._engines.find(\n            (engine) => engine.supported_languages?.length !== 0\n          )\n        : NONE);\n    return html`\n      <ha-select\n        .label=${this.label ||\n        this.hass!.localize(\"ui.components.tts-picker.tts\")}\n        .value=${value}\n        .required=${this.required}\n        .disabled=${this.disabled}\n        @selected=${this._changed}\n        @closed=${stopPropagation}\n        fixedMenuPosition\n        naturalMenuWidth\n      >\n        ${!this.required\n          ? html`<ha-list-item .value=${NONE}>\n              ${this.hass!.localize(\"ui.components.tts-picker.none\")}\n            </ha-list-item>`\n          : nothing}\n        ${this._engines.map((engine) => {\n          let label = engine.engine_id;\n          if (engine.engine_id.includes(\".\")) {\n            const stateObj = this.hass!.states[engine.engine_id];\n            label = stateObj ? computeStateName(stateObj) : engine.engine_id;\n          } else if (engine.engine_id in NAME_MAP) {\n            label = NAME_MAP[engine.engine_id];\n          }\n          return html`<ha-list-item\n            .value=${engine.engine_id}\n            .disabled=${engine.supported_languages?.length === 0}\n          >\n            ${label}\n          </ha-list-item>`;\n        })}\n      </ha-select>\n    `;\n  }\n\n  protected willUpdate(changedProperties: PropertyValues<this>): void {\n    super.willUpdate(changedProperties);\n    if (!this.hasUpdated) {\n      this._updateEngines();\n    } else if (changedProperties.has(\"language\")) {\n      this._debouncedUpdateEngines();\n    }\n  }\n\n  private _debouncedUpdateEngines = debounce(() => this._updateEngines(), 500);\n\n  private async _updateEngines() {\n    this._engines = (\n      await listTTSEngines(\n        this.hass,\n        this.language,\n        this.hass.config.country || undefined\n      )\n    ).providers;\n\n    if (!this.value) {\n      return;\n    }\n\n    const selectedEngine = this._engines.find(\n      (engine) => engine.engine_id === this.value\n    );\n\n    fireEvent(this, \"supported-languages-changed\", {\n      value: selectedEngine?.supported_languages,\n    });\n\n    if (!selectedEngine || selectedEngine.supported_languages?.length === 0) {\n      this.value = undefined;\n      fireEvent(this, \"value-changed\", { value: this.value });\n    }\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      ha-select {\n        width: 100%;\n      }\n    `;\n  }\n\n  private _changed(ev): void {\n    const target = ev.target as HaSelect;\n    if (\n      !this.hass ||\n      target.value === \"\" ||\n      target.value === this.value ||\n      (this.value === undefined && target.value === NONE)\n    ) {\n      return;\n    }\n    this.value = target.value === NONE ? undefined : target.value;\n    fireEvent(this, \"value-changed\", { value: this.value });\n    fireEvent(this, \"supported-languages-changed\", {\n      value: this._engines!.find((engine) => engine.engine_id === this.value)\n        ?.supported_languages,\n    });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-tts-picker\": HaTTSPicker;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}