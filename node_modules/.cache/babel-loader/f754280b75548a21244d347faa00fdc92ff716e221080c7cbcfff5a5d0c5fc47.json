{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/helpers/regeneratorRuntime\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _decorate from \"@babel/runtime/helpers/decorate\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _templateObject;\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport { css, ReactiveElement } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { stopPropagation } from \"../common/dom/stop_propagation\";\nimport \"./ha-icon\";\nvar saveKeyBinding = {\n  key: \"Mod-s\",\n  run: function run(view) {\n    fireEvent(view.dom, \"editor-save\");\n    return true;\n  }\n};\nvar renderIcon = function renderIcon(completion) {\n  var icon = document.createElement(\"ha-icon\");\n  icon.icon = completion.label;\n  return icon;\n};\nexport var HaCodeEditor = _decorate([customElement(\"ha-code-editor\")], function (_initialize, _ReactiveElement) {\n  var HaCodeEditor = /*#__PURE__*/function (_ReactiveElement2) {\n    _inherits(HaCodeEditor, _ReactiveElement2);\n    function HaCodeEditor() {\n      var _this;\n      _classCallCheck(this, HaCodeEditor);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, HaCodeEditor, [].concat(args));\n      _initialize(_assertThisInitialized(_this));\n      return _this;\n    }\n    return _createClass(HaCodeEditor);\n  }(_ReactiveElement);\n  return {\n    F: HaCodeEditor,\n    d: [{\n      kind: \"field\",\n      key: \"codemirror\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"mode\",\n      value: function value() {\n        return \"yaml\";\n      }\n    }, {\n      kind: \"field\",\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"autofocus\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"readOnly\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        attribute: \"autocomplete-entities\"\n      })],\n      key: \"autocompleteEntities\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        attribute: \"autocomplete-icons\"\n      })],\n      key: \"autocompleteIcons\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"error\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_value\",\n      value: function value() {\n        return \"\";\n      }\n    }, {\n      kind: \"field\",\n      key: \"_loadedCodeMirror\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_iconList\",\n      value: void 0\n    }, {\n      kind: \"set\",\n      key: \"value\",\n      value: function value(_value) {\n        this._value = _value;\n      }\n    }, {\n      kind: \"get\",\n      key: \"value\",\n      value: function value() {\n        return this.codemirror ? this.codemirror.state.doc.toString() : this._value;\n      }\n    }, {\n      kind: \"get\",\n      key: \"hasComments\",\n      value: function hasComments() {\n        if (!this.codemirror || !this._loadedCodeMirror) {\n          return false;\n        }\n        var className = this._loadedCodeMirror.highlightingFor(this.codemirror.state, [this._loadedCodeMirror.tags.comment]);\n        return !!this.renderRoot.querySelector(\"span.\".concat(className));\n      }\n    }, {\n      kind: \"method\",\n      key: \"connectedCallback\",\n      value: function connectedCallback() {\n        _get(_getPrototypeOf(HaCodeEditor.prototype), \"connectedCallback\", this).call(this);\n        // Force update on reconnection so editor is recreated\n        if (this.hasUpdated) {\n          this.requestUpdate();\n        }\n        this.addEventListener(\"keydown\", stopPropagation);\n        // This is unreachable as editor will not exist yet,\n        // but focus should not behave like this for good a11y.\n        // (@steverep to fix in autofocus PR)\n        if (!this.codemirror) {\n          return;\n        }\n        if (this.autofocus !== false) {\n          this.codemirror.focus();\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"disconnectedCallback\",\n      value: function disconnectedCallback() {\n        var _this2 = this;\n        _get(_getPrototypeOf(HaCodeEditor.prototype), \"disconnectedCallback\", this).call(this);\n        this.removeEventListener(\"keydown\", stopPropagation);\n        this.updateComplete.then(function () {\n          _this2.codemirror.destroy();\n          delete _this2.codemirror;\n        });\n      }\n\n      // Ensure CodeMirror module is loaded before any update\n    }, {\n      kind: \"method\",\n      key: \"scheduleUpdate\",\n      value: function () {\n        var _scheduleUpdate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n          var _this$_loadedCodeMirr;\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                if (!((_this$_loadedCodeMirr = this._loadedCodeMirror) !== null && _this$_loadedCodeMirr !== void 0)) {\n                  _context.next = 4;\n                  break;\n                }\n                _this$_loadedCodeMirr;\n                _context.next = 7;\n                break;\n              case 4:\n                _context.next = 6;\n                return import(\"../resources/codemirror\");\n              case 6:\n                this._loadedCodeMirror = _context.sent;\n              case 7:\n                _get(_getPrototypeOf(HaCodeEditor.prototype), \"scheduleUpdate\", this).call(this);\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee, this);\n        }));\n        function scheduleUpdate() {\n          return _scheduleUpdate.apply(this, arguments);\n        }\n        return scheduleUpdate;\n      }()\n    }, {\n      kind: \"method\",\n      key: \"update\",\n      value: function update(changedProps) {\n        _get(_getPrototypeOf(HaCodeEditor.prototype), \"update\", this).call(this, changedProps);\n        if (!this.codemirror) {\n          this._createCodeMirror();\n          return;\n        }\n        var transactions = [];\n        if (changedProps.has(\"mode\")) {\n          transactions.push({\n            effects: this._loadedCodeMirror.langCompartment.reconfigure(this._mode)\n          });\n        }\n        if (changedProps.has(\"readOnly\")) {\n          transactions.push({\n            effects: this._loadedCodeMirror.readonlyCompartment.reconfigure(this._loadedCodeMirror.EditorView.editable.of(!this.readOnly))\n          });\n        }\n        if (changedProps.has(\"_value\") && this._value !== this.value) {\n          transactions.push({\n            changes: {\n              from: 0,\n              to: this.codemirror.state.doc.length,\n              insert: this._value\n            }\n          });\n        }\n        if (transactions.length > 0) {\n          var _this$codemirror;\n          (_this$codemirror = this.codemirror).dispatch.apply(_this$codemirror, transactions);\n        }\n        if (changedProps.has(\"error\")) {\n          this.classList.toggle(\"error-state\", this.error);\n        }\n      }\n    }, {\n      kind: \"get\",\n      key: \"_mode\",\n      value: function _mode() {\n        return this._loadedCodeMirror.langs[this.mode];\n      }\n    }, {\n      kind: \"method\",\n      key: \"_createCodeMirror\",\n      value: function _createCodeMirror() {\n        if (!this._loadedCodeMirror) {\n          throw new Error(\"Cannot create editor before CodeMirror is loaded\");\n        }\n        var extensions = [this._loadedCodeMirror.lineNumbers(), this._loadedCodeMirror.history(), this._loadedCodeMirror.drawSelection(), this._loadedCodeMirror.EditorState.allowMultipleSelections.of(true), this._loadedCodeMirror.rectangularSelection(), this._loadedCodeMirror.crosshairCursor(), this._loadedCodeMirror.highlightSelectionMatches(), this._loadedCodeMirror.highlightActiveLine(), this._loadedCodeMirror.keymap.of([].concat(_toConsumableArray(this._loadedCodeMirror.defaultKeymap), _toConsumableArray(this._loadedCodeMirror.searchKeymap), _toConsumableArray(this._loadedCodeMirror.historyKeymap), _toConsumableArray(this._loadedCodeMirror.tabKeyBindings), [saveKeyBinding])), this._loadedCodeMirror.langCompartment.of(this._mode), this._loadedCodeMirror.haTheme, this._loadedCodeMirror.haSyntaxHighlighting, this._loadedCodeMirror.readonlyCompartment.of(this._loadedCodeMirror.EditorView.editable.of(!this.readOnly)), this._loadedCodeMirror.EditorView.updateListener.of(this._onUpdate)];\n        if (!this.readOnly) {\n          var completionSources = [];\n          if (this.autocompleteEntities && this.hass) {\n            completionSources.push(this._entityCompletions.bind(this));\n          }\n          if (this.autocompleteIcons) {\n            completionSources.push(this._mdiCompletions.bind(this));\n          }\n          if (completionSources.length > 0) {\n            extensions.push(this._loadedCodeMirror.autocompletion({\n              override: completionSources,\n              maxRenderedOptions: 10\n            }));\n          }\n        }\n        this.codemirror = new this._loadedCodeMirror.EditorView({\n          state: this._loadedCodeMirror.EditorState.create({\n            doc: this._value,\n            extensions: extensions\n          }),\n          parent: this.renderRoot\n        });\n      }\n    }, {\n      kind: \"field\",\n      key: \"_getStates\",\n      value: function value() {\n        return memoizeOne(function (states) {\n          if (!states) {\n            return [];\n          }\n          var options = Object.keys(states).map(function (key) {\n            return {\n              type: \"variable\",\n              label: key,\n              detail: states[key].attributes.friendly_name,\n              info: \"State: \".concat(states[key].state)\n            };\n          });\n          return options;\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_entityCompletions\",\n      value: function _entityCompletions(context) {\n        var entityWord = context.matchBefore(/[a-z_]{3,}\\.\\w*/);\n        if (!entityWord || entityWord.from === entityWord.to && !context.explicit) {\n          return null;\n        }\n        var states = this._getStates(this.hass.states);\n        if (!states || !states.length) {\n          return null;\n        }\n        return {\n          from: Number(entityWord.from),\n          options: states,\n          validFor: /^[a-z_]{3,}\\.\\w*$/\n        };\n      }\n    }, {\n      kind: \"field\",\n      key: \"_getIconItems\",\n      value: function value() {\n        var _this3 = this;\n        return /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n          var iconList;\n          return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n            while (1) switch (_context2.prev = _context2.next) {\n              case 0:\n                if (_this3._iconList) {\n                  _context2.next = 9;\n                  break;\n                }\n                if (!__SUPERVISOR__) {\n                  _context2.next = 5;\n                  break;\n                }\n                iconList = [];\n                _context2.next = 8;\n                break;\n              case 5:\n                _context2.next = 7;\n                return import(\"../../build/mdi/iconList.json\");\n              case 7:\n                iconList = _context2.sent.default;\n              case 8:\n                _this3._iconList = iconList.map(function (icon) {\n                  return {\n                    type: \"variable\",\n                    label: \"mdi:\".concat(icon.name),\n                    detail: icon.keywords.join(\", \"),\n                    info: renderIcon\n                  };\n                });\n              case 9:\n                return _context2.abrupt(\"return\", _this3._iconList);\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }, _callee2);\n        }));\n      }\n    }, {\n      kind: \"method\",\n      key: \"_mdiCompletions\",\n      value: function () {\n        var _mdiCompletions2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(context) {\n          var match, iconItems;\n          return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n            while (1) switch (_context3.prev = _context3.next) {\n              case 0:\n                match = context.matchBefore(/mdi:\\S*/);\n                if (!(!match || match.from === match.to && !context.explicit)) {\n                  _context3.next = 3;\n                  break;\n                }\n                return _context3.abrupt(\"return\", null);\n              case 3:\n                _context3.next = 5;\n                return this._getIconItems();\n              case 5:\n                iconItems = _context3.sent;\n                return _context3.abrupt(\"return\", {\n                  from: Number(match.from),\n                  options: iconItems,\n                  validFor: /^mdi:\\S*$/\n                });\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }, _callee3, this);\n        }));\n        function _mdiCompletions(_x) {\n          return _mdiCompletions2.apply(this, arguments);\n        }\n        return _mdiCompletions;\n      }()\n    }, {\n      kind: \"field\",\n      key: \"_onUpdate\",\n      value: function value() {\n        var _this4 = this;\n        return function (update) {\n          if (!update.docChanged) {\n            return;\n          }\n          _this4._value = update.state.doc.toString();\n          fireEvent(_this4, \"value-changed\", {\n            value: _this4._value\n          });\n        };\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      :host(.error-state) .cm-gutters {\\n        border-color: var(--error-state-color, red);\\n      }\\n    \"])));\n      }\n    }]\n  };\n}, ReactiveElement);","map":{"version":3,"names":["css","ReactiveElement","customElement","property","state","memoizeOne","fireEvent","stopPropagation","saveKeyBinding","key","run","view","dom","renderIcon","completion","icon","document","createElement","label","HaCodeEditor","_decorate","_initialize","_ReactiveElement","_ReactiveElement2","_inherits","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_assertThisInitialized","_createClass","F","d","kind","value","decorators","type","Boolean","attribute","_value","codemirror","doc","toString","hasComments","_loadedCodeMirror","className","highlightingFor","tags","comment","renderRoot","querySelector","connectedCallback","_get","_getPrototypeOf","prototype","call","hasUpdated","requestUpdate","addEventListener","autofocus","focus","disconnectedCallback","_this2","removeEventListener","updateComplete","then","destroy","_scheduleUpdate","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_this$_loadedCodeMirr","wrap","_callee$","_context","prev","next","sent","stop","scheduleUpdate","apply","update","changedProps","_createCodeMirror","transactions","has","push","effects","langCompartment","reconfigure","_mode","readonlyCompartment","EditorView","editable","of","readOnly","changes","from","to","insert","_this$codemirror","dispatch","classList","toggle","error","langs","mode","Error","extensions","lineNumbers","history","drawSelection","EditorState","allowMultipleSelections","rectangularSelection","crosshairCursor","highlightSelectionMatches","highlightActiveLine","keymap","_toConsumableArray","defaultKeymap","searchKeymap","historyKeymap","tabKeyBindings","haTheme","haSyntaxHighlighting","updateListener","_onUpdate","completionSources","autocompleteEntities","hass","_entityCompletions","bind","autocompleteIcons","_mdiCompletions","autocompletion","override","maxRenderedOptions","create","parent","states","options","Object","keys","map","detail","attributes","friendly_name","info","context","entityWord","matchBefore","explicit","_getStates","Number","validFor","_this3","_callee2","iconList","_callee2$","_context2","_iconList","__SUPERVISOR__","default","name","keywords","join","abrupt","_mdiCompletions2","_callee3","match","iconItems","_callee3$","_context3","_getIconItems","_x","_this4","docChanged","static","styles","_templateObject","_taggedTemplateLiteral"],"sources":["/Users/sercanardil/Desktop/frontend/src/components/ha-code-editor.ts"],"sourcesContent":["import type {\n  Completion,\n  CompletionContext,\n  CompletionResult,\n  CompletionSource,\n} from \"@codemirror/autocomplete\";\nimport type { Extension, TransactionSpec } from \"@codemirror/state\";\nimport type { EditorView, KeyBinding, ViewUpdate } from \"@codemirror/view\";\nimport { HassEntities } from \"home-assistant-js-websocket\";\nimport { css, CSSResultGroup, PropertyValues, ReactiveElement } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { stopPropagation } from \"../common/dom/stop_propagation\";\nimport { HomeAssistant } from \"../types\";\nimport \"./ha-icon\";\n\ndeclare global {\n  interface HASSDomEvents {\n    \"editor-save\": undefined;\n  }\n}\n\nconst saveKeyBinding: KeyBinding = {\n  key: \"Mod-s\",\n  run: (view: EditorView) => {\n    fireEvent(view.dom, \"editor-save\");\n    return true;\n  },\n};\n\nconst renderIcon = (completion: Completion) => {\n  const icon = document.createElement(\"ha-icon\");\n  icon.icon = completion.label;\n  return icon;\n};\n\n@customElement(\"ha-code-editor\")\nexport class HaCodeEditor extends ReactiveElement {\n  public codemirror?: EditorView;\n\n  @property() public mode = \"yaml\";\n\n  public hass?: HomeAssistant;\n\n  @property({ type: Boolean }) public autofocus = false;\n\n  @property({ type: Boolean }) public readOnly = false;\n\n  @property({ type: Boolean, attribute: \"autocomplete-entities\" })\n  public autocompleteEntities = false;\n\n  @property({ type: Boolean, attribute: \"autocomplete-icons\" })\n  public autocompleteIcons = false;\n\n  @property({ type: Boolean }) public error = false;\n\n  @state() private _value = \"\";\n\n  private _loadedCodeMirror?: typeof import(\"../resources/codemirror\");\n\n  private _iconList?: Completion[];\n\n  public set value(value: string) {\n    this._value = value;\n  }\n\n  public get value(): string {\n    return this.codemirror ? this.codemirror.state.doc.toString() : this._value;\n  }\n\n  public get hasComments(): boolean {\n    if (!this.codemirror || !this._loadedCodeMirror) {\n      return false;\n    }\n    const className = this._loadedCodeMirror.highlightingFor(\n      this.codemirror.state,\n      [this._loadedCodeMirror.tags.comment]\n    );\n    return !!this.renderRoot.querySelector(`span.${className}`);\n  }\n\n  public connectedCallback() {\n    super.connectedCallback();\n    // Force update on reconnection so editor is recreated\n    if (this.hasUpdated) {\n      this.requestUpdate();\n    }\n    this.addEventListener(\"keydown\", stopPropagation);\n    // This is unreachable as editor will not exist yet,\n    // but focus should not behave like this for good a11y.\n    // (@steverep to fix in autofocus PR)\n    if (!this.codemirror) {\n      return;\n    }\n    if (this.autofocus !== false) {\n      this.codemirror.focus();\n    }\n  }\n\n  public disconnectedCallback() {\n    super.disconnectedCallback();\n    this.removeEventListener(\"keydown\", stopPropagation);\n    this.updateComplete.then(() => {\n      this.codemirror!.destroy();\n      delete this.codemirror;\n    });\n  }\n\n  // Ensure CodeMirror module is loaded before any update\n  protected override async scheduleUpdate() {\n    this._loadedCodeMirror ??= await import(\"../resources/codemirror\");\n    super.scheduleUpdate();\n  }\n\n  protected update(changedProps: PropertyValues): void {\n    super.update(changedProps);\n    if (!this.codemirror) {\n      this._createCodeMirror();\n      return;\n    }\n    const transactions: TransactionSpec[] = [];\n    if (changedProps.has(\"mode\")) {\n      transactions.push({\n        effects: this._loadedCodeMirror!.langCompartment!.reconfigure(\n          this._mode\n        ),\n      });\n    }\n    if (changedProps.has(\"readOnly\")) {\n      transactions.push({\n        effects: this._loadedCodeMirror!.readonlyCompartment!.reconfigure(\n          this._loadedCodeMirror!.EditorView!.editable.of(!this.readOnly)\n        ),\n      });\n    }\n    if (changedProps.has(\"_value\") && this._value !== this.value) {\n      transactions.push({\n        changes: {\n          from: 0,\n          to: this.codemirror.state.doc.length,\n          insert: this._value,\n        },\n      });\n    }\n    if (transactions.length > 0) {\n      this.codemirror.dispatch(...transactions);\n    }\n    if (changedProps.has(\"error\")) {\n      this.classList.toggle(\"error-state\", this.error);\n    }\n  }\n\n  private get _mode() {\n    return this._loadedCodeMirror!.langs[this.mode];\n  }\n\n  private _createCodeMirror() {\n    if (!this._loadedCodeMirror) {\n      throw new Error(\"Cannot create editor before CodeMirror is loaded\");\n    }\n    const extensions: Extension[] = [\n      this._loadedCodeMirror.lineNumbers(),\n      this._loadedCodeMirror.history(),\n      this._loadedCodeMirror.drawSelection(),\n      this._loadedCodeMirror.EditorState.allowMultipleSelections.of(true),\n      this._loadedCodeMirror.rectangularSelection(),\n      this._loadedCodeMirror.crosshairCursor(),\n      this._loadedCodeMirror.highlightSelectionMatches(),\n      this._loadedCodeMirror.highlightActiveLine(),\n      this._loadedCodeMirror.keymap.of([\n        ...this._loadedCodeMirror.defaultKeymap,\n        ...this._loadedCodeMirror.searchKeymap,\n        ...this._loadedCodeMirror.historyKeymap,\n        ...this._loadedCodeMirror.tabKeyBindings,\n        saveKeyBinding,\n      ]),\n      this._loadedCodeMirror.langCompartment.of(this._mode),\n      this._loadedCodeMirror.haTheme,\n      this._loadedCodeMirror.haSyntaxHighlighting,\n      this._loadedCodeMirror.readonlyCompartment.of(\n        this._loadedCodeMirror.EditorView.editable.of(!this.readOnly)\n      ),\n      this._loadedCodeMirror.EditorView.updateListener.of(this._onUpdate),\n    ];\n\n    if (!this.readOnly) {\n      const completionSources: CompletionSource[] = [];\n      if (this.autocompleteEntities && this.hass) {\n        completionSources.push(this._entityCompletions.bind(this));\n      }\n      if (this.autocompleteIcons) {\n        completionSources.push(this._mdiCompletions.bind(this));\n      }\n      if (completionSources.length > 0) {\n        extensions.push(\n          this._loadedCodeMirror.autocompletion({\n            override: completionSources,\n            maxRenderedOptions: 10,\n          })\n        );\n      }\n    }\n\n    this.codemirror = new this._loadedCodeMirror.EditorView({\n      state: this._loadedCodeMirror.EditorState.create({\n        doc: this._value,\n        extensions,\n      }),\n      parent: this.renderRoot,\n    });\n  }\n\n  private _getStates = memoizeOne((states: HassEntities): Completion[] => {\n    if (!states) {\n      return [];\n    }\n    const options = Object.keys(states).map((key) => ({\n      type: \"variable\",\n      label: key,\n      detail: states[key].attributes.friendly_name,\n      info: `State: ${states[key].state}`,\n    }));\n\n    return options;\n  });\n\n  private _entityCompletions(\n    context: CompletionContext\n  ): CompletionResult | null | Promise<CompletionResult | null> {\n    const entityWord = context.matchBefore(/[a-z_]{3,}\\.\\w*/);\n\n    if (\n      !entityWord ||\n      (entityWord.from === entityWord.to && !context.explicit)\n    ) {\n      return null;\n    }\n\n    const states = this._getStates(this.hass!.states);\n\n    if (!states || !states.length) {\n      return null;\n    }\n\n    return {\n      from: Number(entityWord.from),\n      options: states,\n      validFor: /^[a-z_]{3,}\\.\\w*$/,\n    };\n  }\n\n  private _getIconItems = async (): Promise<Completion[]> => {\n    if (!this._iconList) {\n      let iconList: {\n        name: string;\n        keywords: string[];\n      }[];\n      if (__SUPERVISOR__) {\n        iconList = [];\n      } else {\n        iconList = (await import(\"../../build/mdi/iconList.json\")).default;\n      }\n\n      this._iconList = iconList.map((icon) => ({\n        type: \"variable\",\n        label: `mdi:${icon.name}`,\n        detail: icon.keywords.join(\", \"),\n        info: renderIcon,\n      }));\n    }\n\n    return this._iconList;\n  };\n\n  private async _mdiCompletions(\n    context: CompletionContext\n  ): Promise<CompletionResult | null> {\n    const match = context.matchBefore(/mdi:\\S*/);\n\n    if (!match || (match.from === match.to && !context.explicit)) {\n      return null;\n    }\n\n    const iconItems = await this._getIconItems();\n\n    return {\n      from: Number(match.from),\n      options: iconItems,\n      validFor: /^mdi:\\S*$/,\n    };\n  }\n\n  private _onUpdate = (update: ViewUpdate): void => {\n    if (!update.docChanged) {\n      return;\n    }\n    this._value = update.state.doc.toString();\n    fireEvent(this, \"value-changed\", { value: this._value });\n  };\n\n  static get styles(): CSSResultGroup {\n    return css`\n      :host(.error-state) .cm-gutters {\n        border-color: var(--error-state-color, red);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-code-editor\": HaCodeEditor;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}