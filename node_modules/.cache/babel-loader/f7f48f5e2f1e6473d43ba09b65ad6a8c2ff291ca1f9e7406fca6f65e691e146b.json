{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _templateObject;\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.object.values.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/esnext.set.difference.v2.js\";\nimport \"core-js/modules/esnext.set.intersection.v2.js\";\nimport \"core-js/modules/esnext.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/esnext.set.is-subset-of.v2.js\";\nimport \"core-js/modules/esnext.set.is-superset-of.v2.js\";\nimport \"core-js/modules/esnext.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/esnext.set.union.v2.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { html, isServer, LitElement } from 'lit';\nimport { queryAssignedElements } from 'lit/decorators.js';\nimport { ListController, NavigableKeys } from './list-controller.js';\nvar NAVIGABLE_KEY_SET = new Set(Object.values(NavigableKeys));\n// tslint:disable-next-line:enforce-comments-on-exported-symbols\nexport var List = /*#__PURE__*/function (_LitElement) {\n  _inherits(List, _LitElement);\n  function List() {\n    var _this;\n    _classCallCheck(this, List);\n    _this = _callSuper(this, List);\n    _this.listController = new ListController({\n      isItem: function isItem(item) {\n        return item.hasAttribute('md-list-item');\n      },\n      getPossibleItems: function getPossibleItems() {\n        return _this.slotItems;\n      },\n      isRtl: function isRtl() {\n        return getComputedStyle(_assertThisInitialized(_this)).direction === 'rtl';\n      },\n      deactivateItem: function deactivateItem(item) {\n        item.tabIndex = -1;\n      },\n      activateItem: function activateItem(item) {\n        item.tabIndex = 0;\n      },\n      isNavigableKey: function isNavigableKey(key) {\n        return NAVIGABLE_KEY_SET.has(key);\n      },\n      isActivatable: function isActivatable(item) {\n        return !item.disabled && item.type !== 'text';\n      }\n    });\n    _this.internals =\n    // Cast needed for closure\n    _this.attachInternals();\n    if (!isServer) {\n      _this.internals.role = 'list';\n      _this.addEventListener('keydown', _this.listController.handleKeydown);\n    }\n    return _this;\n  }\n  _createClass(List, [{\n    key: \"items\",\n    get: /** @export */\n    function get() {\n      return this.listController.items;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return html(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      <slot\\n        @deactivate-items=\", \"\\n        @request-activation=\", \"\\n        @slotchange=\", \">\\n      </slot>\\n    \"])), this.listController.onDeactivateItems, this.listController.onRequestActivation, this.listController.onSlotchange);\n    }\n    /**\n     * Activates the next item in the list. If at the end of the list, the first\n     * item will be activated.\n     *\n     * @return The activated list item or `null` if there are no items.\n     */\n  }, {\n    key: \"activateNextItem\",\n    value: function activateNextItem() {\n      return this.listController.activateNextItem();\n    }\n    /**\n     * Activates the previous item in the list. If at the start of the list, the\n     * last item will be activated.\n     *\n     * @return The activated list item or `null` if there are no items.\n     */\n  }, {\n    key: \"activatePreviousItem\",\n    value: function activatePreviousItem() {\n      return this.listController.activatePreviousItem();\n    }\n  }]);\n  return List;\n}(LitElement);\n__decorate([queryAssignedElements({\n  flatten: true\n})], List.prototype, \"slotItems\", void 0);","map":{"version":3,"names":["html","isServer","LitElement","queryAssignedElements","ListController","NavigableKeys","NAVIGABLE_KEY_SET","Set","Object","values","List","_LitElement","_inherits","_this","_classCallCheck","_callSuper","listController","isItem","item","hasAttribute","getPossibleItems","slotItems","isRtl","getComputedStyle","_assertThisInitialized","direction","deactivateItem","tabIndex","activateItem","isNavigableKey","key","has","isActivatable","disabled","type","internals","attachInternals","role","addEventListener","handleKeydown","_createClass","get","items","value","render","_templateObject","_taggedTemplateLiteral","onDeactivateItems","onRequestActivation","onSlotchange","activateNextItem","activatePreviousItem","__decorate","flatten"],"sources":["list.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {html, isServer, LitElement} from 'lit';\nimport {queryAssignedElements} from 'lit/decorators.js';\n\nimport {ListController, NavigableKeys} from './list-controller.js';\nimport {ListItem as SharedListItem} from './list-navigation-helpers.js';\n\nconst NAVIGABLE_KEY_SET = new Set<string>(Object.values(NavigableKeys));\n\ninterface ListItem extends SharedListItem {\n  type: 'text' | 'button' | 'link';\n}\n\n// tslint:disable-next-line:enforce-comments-on-exported-symbols\nexport class List extends LitElement {\n  /**\n   * An array of activatable and disableable list items. Queries every assigned\n   * element that has the `md-list-item` attribute.\n   *\n   * _NOTE:_ This is a shallow, flattened query via\n   * `HTMLSlotElement.queryAssignedElements` and thus will _only_ include direct\n   * children / directly slotted elements.\n   */\n  @queryAssignedElements({flatten: true})\n  protected slotItems!: Array<ListItem | (HTMLElement & {item?: ListItem})>;\n\n  /** @export */\n  get items() {\n    return this.listController.items;\n  }\n\n  private readonly listController = new ListController<ListItem>({\n    isItem: (item: HTMLElement): item is ListItem =>\n      item.hasAttribute('md-list-item'),\n    getPossibleItems: () => this.slotItems,\n    isRtl: () => getComputedStyle(this).direction === 'rtl',\n    deactivateItem: (item) => {\n      item.tabIndex = -1;\n    },\n    activateItem: (item) => {\n      item.tabIndex = 0;\n    },\n    isNavigableKey: (key) => NAVIGABLE_KEY_SET.has(key),\n    isActivatable: (item) => !item.disabled && item.type !== 'text',\n  });\n\n  private readonly internals =\n    // Cast needed for closure\n    (this as HTMLElement).attachInternals();\n\n  constructor() {\n    super();\n    if (!isServer) {\n      this.internals.role = 'list';\n      this.addEventListener('keydown', this.listController.handleKeydown);\n    }\n  }\n\n  protected override render() {\n    return html`\n      <slot\n        @deactivate-items=${this.listController.onDeactivateItems}\n        @request-activation=${this.listController.onRequestActivation}\n        @slotchange=${this.listController.onSlotchange}>\n      </slot>\n    `;\n  }\n\n  /**\n   * Activates the next item in the list. If at the end of the list, the first\n   * item will be activated.\n   *\n   * @return The activated list item or `null` if there are no items.\n   */\n  activateNextItem(): ListItem | null {\n    return this.listController.activateNextItem();\n  }\n\n  /**\n   * Activates the previous item in the list. If at the start of the list, the\n   * last item will be activated.\n   *\n   * @return The activated list item or `null` if there are no items.\n   */\n  activatePreviousItem(): ListItem | null {\n    return this.listController.activatePreviousItem();\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;;;;;;AAMA,SAAQA,IAAI,EAAEC,QAAQ,EAAEC,UAAU,QAAO,KAAK;AAC9C,SAAQC,qBAAqB,QAAO,mBAAmB;AAEvD,SAAQC,cAAc,EAAEC,aAAa,QAAO,sBAAsB;AAGlE,IAAMC,iBAAiB,GAAG,IAAIC,GAAG,CAASC,MAAM,CAACC,MAAM,CAACJ,aAAa,CAAC,CAAC;AAMvE;AACA,WAAaK,IAAK,0BAAAC,WAAA;EAAAC,SAAA,CAAAF,IAAA,EAAAC,WAAA;EAoChB,SAAAD,KAAA;IAAA,IAAAG,KAAA;IAAAC,eAAA,OAAAJ,IAAA;IACEG,KAAA,GAAAE,UAAA,OAAAL,IAAA;IApBeG,KAAA,CAAAG,cAAc,GAAG,IAAIZ,cAAc,CAAW;MAC7Da,MAAM,EAAE,SAAAA,OAACC,IAAiB;QAAA,OACxBA,IAAI,CAACC,YAAY,CAAC,cAAc,CAAC;MAAA;MACnCC,gBAAgB,EAAE,SAAAA,iBAAA;QAAA,OAAMP,KAAA,CAAKQ,SAAS;MAAA;MACtCC,KAAK,EAAE,SAAAA,MAAA;QAAA,OAAMC,gBAAgB,CAAAC,sBAAA,CAAAX,KAAA,CAAK,CAAC,CAACY,SAAS,KAAK,KAAK;MAAA;MACvDC,cAAc,EAAE,SAAAA,eAACR,IAAI,EAAI;QACvBA,IAAI,CAACS,QAAQ,GAAG,CAAC,CAAC;MACpB,CAAC;MACDC,YAAY,EAAE,SAAAA,aAACV,IAAI,EAAI;QACrBA,IAAI,CAACS,QAAQ,GAAG,CAAC;MACnB,CAAC;MACDE,cAAc,EAAE,SAAAA,eAACC,GAAG;QAAA,OAAKxB,iBAAiB,CAACyB,GAAG,CAACD,GAAG,CAAC;MAAA;MACnDE,aAAa,EAAE,SAAAA,cAACd,IAAI;QAAA,OAAK,CAACA,IAAI,CAACe,QAAQ,IAAIf,IAAI,CAACgB,IAAI,KAAK,MAAM;MAAA;KAChE,CAAC;IAEerB,KAAA,CAAAsB,SAAS;IACxB;IACCtB,KAAA,CAAqBuB,eAAe,EAAE;IAIvC,IAAI,CAACnC,QAAQ,EAAE;MACbY,KAAA,CAAKsB,SAAS,CAACE,IAAI,GAAG,MAAM;MAC5BxB,KAAA,CAAKyB,gBAAgB,CAAC,SAAS,EAAEzB,KAAA,CAAKG,cAAc,CAACuB,aAAa,CAAC;;IACpE,OAAA1B,KAAA;EACH;EAAC2B,YAAA,CAAA9B,IAAA;IAAAoB,GAAA;IAAAW,GAAA,EA9BD;IACA,SAAAA,IAAA,EAAS;MACP,OAAO,IAAI,CAACzB,cAAc,CAAC0B,KAAK;IAClC;EAAC;IAAAZ,GAAA;IAAAa,KAAA,EA6BkB,SAAAC,OAAA,EAAM;MACvB,OAAO5C,IAAI,CAAA6C,eAAA,KAAAA,eAAA,GAAAC,sBAAA,wIAEa,IAAI,CAAC9B,cAAc,CAAC+B,iBAAiB,EACnC,IAAI,CAAC/B,cAAc,CAACgC,mBAAmB,EAC/C,IAAI,CAAChC,cAAc,CAACiC,YAAY;IAGpD;IAEA;;;;;;EAAA;IAAAnB,GAAA;IAAAa,KAAA,EAMA,SAAAO,iBAAA,EAAgB;MACd,OAAO,IAAI,CAAClC,cAAc,CAACkC,gBAAgB,EAAE;IAC/C;IAEA;;;;;;EAAA;IAAApB,GAAA;IAAAa,KAAA,EAMA,SAAAQ,qBAAA,EAAoB;MAClB,OAAO,IAAI,CAACnC,cAAc,CAACmC,oBAAoB,EAAE;IACnD;EAAC;EAAA,OAAAzC,IAAA;AAAA,EAxEuBR,UAAU;AAUxBkD,UAAA,EADTjD,qBAAqB,CAAC;EAACkD,OAAO,EAAE;AAAI,CAAC,CAAC,C,sCACmC"},"metadata":{},"sourceType":"module","externalDependencies":[]}