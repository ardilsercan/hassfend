{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport { css, html, LitElement } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { styleMap } from \"lit/directives/style-map\";\nimport { computeAttributeNameDisplay } from \"../../common/entity/compute_attribute_display\";\nimport { stateColorCss } from \"../../common/entity/state_color\";\nimport \"../../components/ha-control-slider\";\nimport { UNAVAILABLE } from \"../../data/entity\";\nimport { DOMAIN_ATTRIBUTES_UNITS } from \"../../data/entity_attributes\";\nexport let HaStateControlValvePosition = _decorate([customElement(\"ha-state-control-valve-position\")], function (_initialize, _LitElement) {\n  class HaStateControlValvePosition extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaStateControlValvePosition,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"stateObj\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"value\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"updated\",\n      value: function updated(changedProp) {\n        if (changedProp.has(\"stateObj\")) {\n          var _this$stateObj;\n          const currentPosition = (_this$stateObj = this.stateObj) === null || _this$stateObj === void 0 ? void 0 : _this$stateObj.attributes.current_position;\n          this.value = currentPosition != null ? Math.round(currentPosition) : undefined;\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_valueChanged\",\n      value: function _valueChanged(ev) {\n        const value = ev.detail.value;\n        if (isNaN(value)) return;\n        this.hass.callService(\"valve\", \"set_valve_position\", {\n          entity_id: this.stateObj.entity_id,\n          position: value\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        const color = stateColorCss(this.stateObj);\n        return html`\n      <ha-control-slider\n        vertical\n        .value=${this.value}\n        min=\"0\"\n        max=\"100\"\n        show-handle\n        @value-changed=${this._valueChanged}\n        .ariaLabel=${computeAttributeNameDisplay(this.hass.localize, this.stateObj, this.hass.entities, \"current_position\")}\n        style=${styleMap({\n          \"--control-slider-color\": color,\n          \"--control-slider-background\": color\n        })}\n        .disabled=${this.stateObj.state === UNAVAILABLE}\n        .unit=${DOMAIN_ATTRIBUTES_UNITS.valve.current_position}\n        .locale=${this.hass.locale}\n      >\n      </ha-control-slider>\n    `;\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css`\n      ha-control-slider {\n        height: 45vh;\n        max-height: 320px;\n        min-height: 200px;\n        --control-slider-thickness: 100px;\n        --control-slider-border-radius: 24px;\n        --control-slider-color: var(--primary-color);\n        --control-slider-background: var(--disabled-color);\n        --control-slider-background-opacity: 0.2;\n        --control-slider-tooltip-font-size: 20px;\n      }\n    `;\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","customElement","property","state","styleMap","computeAttributeNameDisplay","stateColorCss","UNAVAILABLE","DOMAIN_ATTRIBUTES_UNITS","HaStateControlValvePosition","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","updated","changedProp","has","_this$stateObj","currentPosition","stateObj","attributes","current_position","Math","round","undefined","_valueChanged","ev","detail","isNaN","hass","callService","entity_id","position","render","color","localize","entities","valve","locale","static","styles"],"sources":["/workspaces/frontend/src/state-control/valve/ha-state-control-valve-position.ts"],"sourcesContent":["import { css, CSSResultGroup, html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { styleMap } from \"lit/directives/style-map\";\nimport { computeAttributeNameDisplay } from \"../../common/entity/compute_attribute_display\";\nimport { stateColorCss } from \"../../common/entity/state_color\";\nimport \"../../components/ha-control-slider\";\nimport { CoverEntity } from \"../../data/cover\";\nimport { UNAVAILABLE } from \"../../data/entity\";\nimport { DOMAIN_ATTRIBUTES_UNITS } from \"../../data/entity_attributes\";\nimport { HomeAssistant } from \"../../types\";\n\n@customElement(\"ha-state-control-valve-position\")\nexport class HaStateControlValvePosition extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public stateObj!: CoverEntity;\n\n  @state() value?: number;\n\n  protected updated(changedProp: Map<string | number | symbol, unknown>): void {\n    if (changedProp.has(\"stateObj\")) {\n      const currentPosition = this.stateObj?.attributes.current_position;\n      this.value =\n        currentPosition != null ? Math.round(currentPosition) : undefined;\n    }\n  }\n\n  private _valueChanged(ev: CustomEvent) {\n    const value = (ev.detail as any).value;\n    if (isNaN(value)) return;\n\n    this.hass.callService(\"valve\", \"set_valve_position\", {\n      entity_id: this.stateObj!.entity_id,\n      position: value,\n    });\n  }\n\n  protected render(): TemplateResult {\n    const color = stateColorCss(this.stateObj);\n\n    return html`\n      <ha-control-slider\n        vertical\n        .value=${this.value}\n        min=\"0\"\n        max=\"100\"\n        show-handle\n        @value-changed=${this._valueChanged}\n        .ariaLabel=${computeAttributeNameDisplay(\n          this.hass.localize,\n          this.stateObj,\n          this.hass.entities,\n          \"current_position\"\n        )}\n        style=${styleMap({\n          \"--control-slider-color\": color,\n          \"--control-slider-background\": color,\n        })}\n        .disabled=${this.stateObj.state === UNAVAILABLE}\n        .unit=${DOMAIN_ATTRIBUTES_UNITS.valve.current_position}\n        .locale=${this.hass.locale}\n      >\n      </ha-control-slider>\n    `;\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      ha-control-slider {\n        height: 45vh;\n        max-height: 320px;\n        min-height: 200px;\n        --control-slider-thickness: 100px;\n        --control-slider-border-radius: 24px;\n        --control-slider-color: var(--primary-color);\n        --control-slider-background: var(--disabled-color);\n        --control-slider-background-opacity: 0.2;\n        --control-slider-tooltip-font-size: 20px;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-state-control-valve-position\": HaStateControlValvePosition;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}