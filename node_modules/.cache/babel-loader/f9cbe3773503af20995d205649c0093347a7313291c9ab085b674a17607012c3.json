{"ast":null,"code":"const mdiCrownCircleOutline = \"M12 2C6.47 2 2 6.5 2 12C2 17.5 6.5 22 12 22S22 17.5 22 12 17.5 2 12 2M12 20C7.58 20 4 16.42 4 12C4 7.58 7.58 4 12 4S20 7.58 20 12C20 16.42 16.42 20 12 20M8 14L7 8L10 10L12 7L14 10L17 8L16 14H8M8.56 16C8.22 16 8 15.78 8 15.44V15H16V15.44C16 15.78 15.78 16 15.44 16H8.56Z\";\nconst mdiAlphaSCircleOutline = \"M11,7H15V9H11V11H13A2,2 0 0,1 15,13V15A2,2 0 0,1 13,17H9V15H13V13H11A2,2 0 0,1 9,11V9A2,2 0 0,1 11,7M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22A10,10 0 0,1 2,12A10,10 0 0,1 12,2M12,4A8,8 0 0,0 4,12A8,8 0 0,0 12,20A8,8 0 0,0 20,12A8,8 0 0,0 12,4Z\";\nconst mdiHomeCircleOutline = \"M12 20C7.6 20 4 16.4 4 12S7.6 4 12 4 20 7.6 20 12 16.4 20 12 20M12 2C6.5 2 2 6.5 2 12S6.5 22 12 22 22 17.5 22 12 17.5 2 12 2M11 14H13V17H16V12H18L12 7L6 12H8V17H11V14\";\nconst mdiCancel = \"M12 2C17.5 2 22 6.5 22 12S17.5 22 12 22 2 17.5 2 12 6.5 2 12 2M12 4C10.1 4 8.4 4.6 7.1 5.7L18.3 16.9C19.3 15.5 20 13.8 20 12C20 7.6 16.4 4 12 4M16.9 18.3L5.7 7.1C4.6 8.4 4 10.1 4 12C4 16.4 7.6 20 12 20C13.9 20 15.6 19.4 16.9 18.3Z\";\nexport const SYSTEM_GROUP_ID_ADMIN = \"system-admin\";\nexport const SYSTEM_GROUP_ID_USER = \"system-users\";\nexport const SYSTEM_GROUP_ID_READ_ONLY = \"system-read-only\";\nexport const GROUPS = [SYSTEM_GROUP_ID_USER, SYSTEM_GROUP_ID_ADMIN];\nexport const fetchUsers = async hass => hass.callWS({\n  type: \"config/auth/list\"\n});\nexport const createUser = async (hass, name, group_ids, local_only) => hass.callWS({\n  type: \"config/auth/create\",\n  name,\n  group_ids,\n  local_only\n});\nexport const updateUser = async (hass, userId, params) => hass.callWS({\n  ...params,\n  type: \"config/auth/update\",\n  user_id: userId\n});\nexport const deleteUser = async (hass, userId) => hass.callWS({\n  type: \"config/auth/delete\",\n  user_id: userId\n});\nexport const computeUserInitials = name => {\n  if (!name) {\n    return \"?\";\n  }\n  return name.trim()\n  // Split by space and take first 3 words\n  .split(\" \").slice(0, 3)\n  // Of each word, take first letter\n  .map(s => s.substring(0, 1)).join(\"\");\n};\nconst OWNER_ICON = mdiCrownCircleOutline;\nconst SYSTEM_ICON = mdiAlphaSCircleOutline;\nconst LOCAL_ICON = mdiHomeCircleOutline;\nconst DISABLED_ICON = mdiCancel;\nexport const computeUserBadges = (hass, user, includeSystem) => {\n  const labels = [];\n  const translate = key => hass.localize(`ui.panel.config.users.${key}`);\n  if (user.is_owner) {\n    labels.push([OWNER_ICON, translate(\"is_owner\")]);\n  }\n  if (includeSystem && user.system_generated) {\n    labels.push([SYSTEM_ICON, translate(\"is_system\")]);\n  }\n  if (user.local_only) {\n    labels.push([LOCAL_ICON, translate(\"is_local\")]);\n  }\n  if (!user.is_active) {\n    labels.push([DISABLED_ICON, translate(\"is_not_active\")]);\n  }\n  return labels;\n};","map":{"version":3,"names":["SYSTEM_GROUP_ID_ADMIN","SYSTEM_GROUP_ID_USER","SYSTEM_GROUP_ID_READ_ONLY","GROUPS","fetchUsers","hass","callWS","type","createUser","name","group_ids","local_only","updateUser","userId","params","user_id","deleteUser","computeUserInitials","trim","split","slice","map","s","substring","join","OWNER_ICON","mdiCrownCircleOutline","SYSTEM_ICON","mdiAlphaSCircleOutline","LOCAL_ICON","mdiHomeCircleOutline","DISABLED_ICON","mdiCancel","computeUserBadges","user","includeSystem","labels","translate","key","localize","is_owner","push","system_generated","is_active"],"sources":["/workspaces/frontend/src/data/user.ts"],"sourcesContent":["import {\n  mdiCrownCircleOutline,\n  mdiAlphaSCircleOutline,\n  mdiHomeCircleOutline,\n  mdiCancel,\n} from \"@mdi/js\";\nimport { HomeAssistant, TranslationDict } from \"../types\";\nimport { Credential } from \"./auth\";\n\nexport const SYSTEM_GROUP_ID_ADMIN = \"system-admin\";\nexport const SYSTEM_GROUP_ID_USER = \"system-users\";\nexport const SYSTEM_GROUP_ID_READ_ONLY = \"system-read-only\";\n\nexport const GROUPS = [SYSTEM_GROUP_ID_USER, SYSTEM_GROUP_ID_ADMIN];\n\nexport interface User {\n  id: string;\n  username: string | null;\n  name: string;\n  is_owner: boolean;\n  is_active: boolean;\n  local_only: boolean;\n  system_generated: boolean;\n  group_ids: (keyof TranslationDict[\"groups\"])[];\n  credentials: Credential[];\n}\n\nexport interface UpdateUserParams {\n  name?: User[\"name\"];\n  is_active?: User[\"is_active\"];\n  group_ids?: User[\"group_ids\"];\n  local_only?: boolean;\n}\n\nexport const fetchUsers = async (hass: HomeAssistant) =>\n  hass.callWS<User[]>({\n    type: \"config/auth/list\",\n  });\n\nexport const createUser = async (\n  hass: HomeAssistant,\n  name: string,\n  // eslint-disable-next-line: variable-name\n  group_ids?: User[\"group_ids\"],\n  local_only?: boolean\n) =>\n  hass.callWS<{ user: User }>({\n    type: \"config/auth/create\",\n    name,\n    group_ids,\n    local_only,\n  });\n\nexport const updateUser = async (\n  hass: HomeAssistant,\n  userId: string,\n  params: UpdateUserParams\n) =>\n  hass.callWS<{ user: User }>({\n    ...params,\n    type: \"config/auth/update\",\n    user_id: userId,\n  });\n\nexport const deleteUser = async (hass: HomeAssistant, userId: string) =>\n  hass.callWS<void>({\n    type: \"config/auth/delete\",\n    user_id: userId,\n  });\n\nexport const computeUserInitials = (name: string) => {\n  if (!name) {\n    return \"?\";\n  }\n  return (\n    name\n      .trim()\n      // Split by space and take first 3 words\n      .split(\" \")\n      .slice(0, 3)\n      // Of each word, take first letter\n      .map((s) => s.substring(0, 1))\n      .join(\"\")\n  );\n};\n\nconst OWNER_ICON = mdiCrownCircleOutline;\nconst SYSTEM_ICON = mdiAlphaSCircleOutline;\nconst LOCAL_ICON = mdiHomeCircleOutline;\nconst DISABLED_ICON = mdiCancel;\n\nexport const computeUserBadges = (\n  hass: HomeAssistant,\n  user: User,\n  includeSystem: boolean\n) => {\n  const labels: [string, string][] = [];\n  const translate = (\n    key: Extract<\n      keyof TranslationDict[\"ui\"][\"panel\"][\"config\"][\"users\"],\n      `is_${string}`\n    >\n  ) => hass.localize(`ui.panel.config.users.${key}`);\n\n  if (user.is_owner) {\n    labels.push([OWNER_ICON, translate(\"is_owner\")]);\n  }\n  if (includeSystem && user.system_generated) {\n    labels.push([SYSTEM_ICON, translate(\"is_system\")]);\n  }\n  if (user.local_only) {\n    labels.push([LOCAL_ICON, translate(\"is_local\")]);\n  }\n  if (!user.is_active) {\n    labels.push([DISABLED_ICON, translate(\"is_not_active\")]);\n  }\n\n  return labels;\n};\n"],"mappings":";;;;AASA,OAAO,MAAMA,qBAAqB,GAAG,cAAc;AACnD,OAAO,MAAMC,oBAAoB,GAAG,cAAc;AAClD,OAAO,MAAMC,yBAAyB,GAAG,kBAAkB;AAE3D,OAAO,MAAMC,MAAM,GAAG,CAACF,oBAAoB,EAAED,qBAAqB,CAAC;AAqBnE,OAAO,MAAMI,UAAU,GAAG,MAAOC,IAAmB,IAClDA,IAAI,CAACC,MAAM,CAAS;EAClBC,IAAI,EAAE;AACR,CAAC,CAAC;AAEJ,OAAO,MAAMC,UAAU,GAAG,MAAAA,CACxBH,IAAmB,EACnBI,IAAY,EAEZC,SAA6B,EAC7BC,UAAoB,KAEpBN,IAAI,CAACC,MAAM,CAAiB;EAC1BC,IAAI,EAAE,oBAAoB;EAC1BE,IAAI;EACJC,SAAS;EACTC;AACF,CAAC,CAAC;AAEJ,OAAO,MAAMC,UAAU,GAAG,MAAAA,CACxBP,IAAmB,EACnBQ,MAAc,EACdC,MAAwB,KAExBT,IAAI,CAACC,MAAM,CAAiB;EAC1B,GAAGQ,MAAM;EACTP,IAAI,EAAE,oBAAoB;EAC1BQ,OAAO,EAAEF;AACX,CAAC,CAAC;AAEJ,OAAO,MAAMG,UAAU,GAAG,MAAAA,CAAOX,IAAmB,EAAEQ,MAAc,KAClER,IAAI,CAACC,MAAM,CAAO;EAChBC,IAAI,EAAE,oBAAoB;EAC1BQ,OAAO,EAAEF;AACX,CAAC,CAAC;AAEJ,OAAO,MAAMI,mBAAmB,GAAIR,IAAY,IAAK;EACnD,IAAI,CAACA,IAAI,EAAE;IACT,OAAO,GAAG;EACZ;EACA,OACEA,IAAI,CACDS,IAAI,CAAC;EACN;EAAA,CACCC,KAAK,CAAC,GAAG,CAAC,CACVC,KAAK,CAAC,CAAC,EAAE,CAAC;EACX;EAAA,CACCC,GAAG,CAAEC,CAAC,IAAKA,CAAC,CAACC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAC7BC,IAAI,CAAC,EAAE,CAAC;AAEf,CAAC;AAED,MAAMC,UAAU,GAAGC,qBAAqB;AACxC,MAAMC,WAAW,GAAGC,sBAAsB;AAC1C,MAAMC,UAAU,GAAGC,oBAAoB;AACvC,MAAMC,aAAa,GAAGC,SAAS;AAE/B,OAAO,MAAMC,iBAAiB,GAAGA,CAC/B5B,IAAmB,EACnB6B,IAAU,EACVC,aAAsB,KACnB;EACH,MAAMC,MAA0B,GAAG,EAAE;EACrC,MAAMC,SAAS,GACbC,GAGC,IACEjC,IAAI,CAACkC,QAAQ,CAAE,yBAAwBD,GAAI,EAAC,CAAC;EAElD,IAAIJ,IAAI,CAACM,QAAQ,EAAE;IACjBJ,MAAM,CAACK,IAAI,CAAC,CAAChB,UAAU,EAAEY,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC;EAClD;EACA,IAAIF,aAAa,IAAID,IAAI,CAACQ,gBAAgB,EAAE;IAC1CN,MAAM,CAACK,IAAI,CAAC,CAACd,WAAW,EAAEU,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC;EACpD;EACA,IAAIH,IAAI,CAACvB,UAAU,EAAE;IACnByB,MAAM,CAACK,IAAI,CAAC,CAACZ,UAAU,EAAEQ,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC;EAClD;EACA,IAAI,CAACH,IAAI,CAACS,SAAS,EAAE;IACnBP,MAAM,CAACK,IAAI,CAAC,CAACV,aAAa,EAAEM,SAAS,CAAC,eAAe,CAAC,CAAC,CAAC;EAC1D;EAEA,OAAOD,MAAM;AACf,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}