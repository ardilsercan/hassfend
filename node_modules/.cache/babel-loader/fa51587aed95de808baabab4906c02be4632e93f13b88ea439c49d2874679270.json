{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport \"../components/ha-circular-progress\";\nimport \"../components/ha-icon-button-arrow-prev\";\nimport \"../components/ha-menu-button\";\nimport { haStyle } from \"../resources/styles\";\nlet HassLoadingScreen = _decorate([customElement(\"hass-loading-screen\")], function (_initialize, _LitElement) {\n  class HassLoadingScreen extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HassLoadingScreen,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        attribute: \"no-toolbar\"\n      })],\n      key: \"noToolbar\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"rootnav\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"narrow\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"message\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var _history$state;\n        return html`\n      ${this.noToolbar ? \"\" : html`<div class=\"toolbar\">\n            ${this.rootnav || (_history$state = history.state) !== null && _history$state !== void 0 && _history$state.root ? html`\n                  <ha-menu-button\n                    .hass=${this.hass}\n                    .narrow=${this.narrow}\n                  ></ha-menu-button>\n                ` : html`\n                  <ha-icon-button-arrow-prev\n                    .hass=${this.hass}\n                    @click=${this._handleBack}\n                  ></ha-icon-button-arrow-prev>\n                `}\n          </div>`}\n      <div class=\"content\">\n        <ha-circular-progress indeterminate></ha-circular-progress>\n        ${this.message ? html`<div id=\"loading-text\">${this.message}</div>` : nothing}\n      </div>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleBack\",\n      value: function _handleBack() {\n        history.back();\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [haStyle, css`\n        :host {\n          display: block;\n          height: 100%;\n          background-color: var(--primary-background-color);\n        }\n        .toolbar {\n          display: flex;\n          align-items: center;\n          font-size: 20px;\n          height: var(--header-height);\n          padding: 8px 12px;\n          pointer-events: none;\n          background-color: var(--app-header-background-color);\n          font-weight: 400;\n          color: var(--app-header-text-color, white);\n          border-bottom: var(--app-header-border-bottom, none);\n          box-sizing: border-box;\n        }\n        @media (max-width: 599px) {\n          .toolbar {\n            padding: 4px;\n          }\n        }\n        ha-menu-button,\n        ha-icon-button-arrow-prev {\n          pointer-events: auto;\n        }\n        .content {\n          height: calc(100% - var(--header-height));\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          justify-content: center;\n        }\n        #loading-text {\n          max-width: 350px;\n          margin-top: 16px;\n        }\n      `];\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","nothing","customElement","property","haStyle","HassLoadingScreen","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","type","Boolean","render","_history$state","noToolbar","rootnav","history","state","root","hass","narrow","_handleBack","message","back","static","styles"],"sources":["/workspaces/frontend/src/layouts/hass-loading-screen.ts"],"sourcesContent":["import {\n  css,\n  CSSResultGroup,\n  html,\n  LitElement,\n  nothing,\n  TemplateResult,\n} from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport \"../components/ha-circular-progress\";\nimport \"../components/ha-icon-button-arrow-prev\";\nimport \"../components/ha-menu-button\";\nimport { haStyle } from \"../resources/styles\";\nimport { HomeAssistant } from \"../types\";\n\n@customElement(\"hass-loading-screen\")\nclass HassLoadingScreen extends LitElement {\n  @property({ attribute: false }) public hass?: HomeAssistant;\n\n  @property({ type: Boolean, attribute: \"no-toolbar\" })\n  public noToolbar = false;\n\n  @property({ type: Boolean }) public rootnav = false;\n\n  @property({ type: Boolean }) public narrow = false;\n\n  @property() public message?: string;\n\n  protected render(): TemplateResult {\n    return html`\n      ${this.noToolbar\n        ? \"\"\n        : html`<div class=\"toolbar\">\n            ${this.rootnav || history.state?.root\n              ? html`\n                  <ha-menu-button\n                    .hass=${this.hass}\n                    .narrow=${this.narrow}\n                  ></ha-menu-button>\n                `\n              : html`\n                  <ha-icon-button-arrow-prev\n                    .hass=${this.hass}\n                    @click=${this._handleBack}\n                  ></ha-icon-button-arrow-prev>\n                `}\n          </div>`}\n      <div class=\"content\">\n        <ha-circular-progress indeterminate></ha-circular-progress>\n        ${this.message\n          ? html`<div id=\"loading-text\">${this.message}</div>`\n          : nothing}\n      </div>\n    `;\n  }\n\n  private _handleBack() {\n    history.back();\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyle,\n      css`\n        :host {\n          display: block;\n          height: 100%;\n          background-color: var(--primary-background-color);\n        }\n        .toolbar {\n          display: flex;\n          align-items: center;\n          font-size: 20px;\n          height: var(--header-height);\n          padding: 8px 12px;\n          pointer-events: none;\n          background-color: var(--app-header-background-color);\n          font-weight: 400;\n          color: var(--app-header-text-color, white);\n          border-bottom: var(--app-header-border-bottom, none);\n          box-sizing: border-box;\n        }\n        @media (max-width: 599px) {\n          .toolbar {\n            padding: 4px;\n          }\n        }\n        ha-menu-button,\n        ha-icon-button-arrow-prev {\n          pointer-events: auto;\n        }\n        .content {\n          height: calc(100% - var(--header-height));\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          justify-content: center;\n        }\n        #loading-text {\n          max-width: 350px;\n          margin-top: 16px;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hass-loading-screen\": HassLoadingScreen;\n  }\n}\n"],"mappings":";AAAA,SACEA,GAAG,EAEHC,IAAI,EACJC,UAAU,EACVC,OAAO,QAEF,KAAK;AACZ,SAASC,aAAa,EAAEC,QAAQ,QAAQ,gBAAgB;AACxD,OAAO,oCAAoC;AAC3C,OAAO,yCAAyC;AAChD,OAAO,8BAA8B;AACrC,SAASC,OAAO,QAAQ,qBAAqB;AAAC,IAIxCC,iBAAiB,GAAAC,SAAA,EADtBJ,aAAa,CAAC,qBAAqB,CAAC,aAAAK,WAAA,EAAAC,WAAA;EAArC,MACMH,iBAAiB,SAAAG,WAAA,CAAoB;IAAAC,YAAA,GAAAC,IAAA;MAAA,SAAAA,IAAA;MAAAH,WAAA;IAAA;EAyF3C;EAAC;IAAAI,CAAA,EAzFKN,iBAAiB;IAAAO,CAAA;MAAAC,IAAA;MAAAC,UAAA,GACpBX,QAAQ,CAAC;QAAEY,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAC,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAE9BX,QAAQ,CAAC;QAAEe,IAAI,EAAEC,OAAO;QAAEJ,SAAS,EAAE;MAAa,CAAC,CAAC;MAAAC,GAAA;MAAAC,MAAA;QAAA,OAClC,KAAK;MAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAEvBX,QAAQ,CAAC;QAAEe,IAAI,EAAEC;MAAQ,CAAC,CAAC;MAAAH,GAAA;MAAAC,MAAA;QAAA,OAAkB,KAAK;MAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAElDX,QAAQ,CAAC;QAAEe,IAAI,EAAEC;MAAQ,CAAC,CAAC;MAAAH,GAAA;MAAAC,MAAA;QAAA,OAAiB,KAAK;MAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAEjDX,QAAQ,CAAC,CAAC;MAAAa,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAEX,SAAAG,OAAA,EAAmC;QAAA,IAAAC,cAAA;QACjC,OAAOtB,IAAK;AAChB,QAAQ,IAAI,CAACuB,SAAS,GACZ,EAAE,GACFvB,IAAK;AACf,cAAc,IAAI,CAACwB,OAAO,KAAAF,cAAA,GAAIG,OAAO,CAACC,KAAK,cAAAJ,cAAA,eAAbA,cAAA,CAAeK,IAAI,GACjC3B,IAAK;AACrB;AACA,4BAA4B,IAAI,CAAC4B,IAAK;AACtC,8BAA8B,IAAI,CAACC,MAAO;AAC1C;AACA,iBAAiB,GACD7B,IAAK;AACrB;AACA,4BAA4B,IAAI,CAAC4B,IAAK;AACtC,6BAA6B,IAAI,CAACE,WAAY;AAC9C;AACA,iBAAkB;AAClB,iBAAkB;AAClB;AACA;AACA,UAAU,IAAI,CAACC,OAAO,GACV/B,IAAK,0BAAyB,IAAI,CAAC+B,OAAQ,QAAO,GAClD7B,OAAQ;AACpB;AACA,KAAK;MACH;IAAC;MAAAY,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAY,YAAA,EAAsB;QACpBL,OAAO,CAACO,IAAI,CAAC,CAAC;MAChB;IAAC;MAAAlB,IAAA;MAAAmB,MAAA;MAAAhB,GAAA;MAAAC,KAAA,EAED,SAAAgB,OAAA,EAAoC;QAClC,OAAO,CACL7B,OAAO,EACPN,GAAI;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,CACF;MACH;IAAC;EAAA;AAAA,GAxF6BE,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}