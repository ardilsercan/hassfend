{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport \"@material/mwc-button\";\nconst mdiUpload = \"M9,16V10H5L12,3L19,10H15V16H9M5,20V18H19V20H5Z\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { isLocalMediaSourceContentId, uploadLocalMedia } from \"../../data/media_source\";\nimport { showAlertDialog } from \"../../dialogs/generic/show-dialog-box\";\nimport \"../ha-circular-progress\";\nimport \"../ha-svg-icon\";\nlet MediaUploadButton = _decorate([customElement(\"ha-media-upload-button\")], function (_initialize, _LitElement) {\n  class MediaUploadButton extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: MediaUploadButton,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"currentItem\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_uploading\",\n      value() {\n        return 0;\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this.currentItem || !isLocalMediaSourceContentId(this.currentItem.media_content_id || \"\")) {\n          return nothing;\n        }\n        return html`\n      <mwc-button\n        .label=${this._uploading > 0 ? this.hass.localize(\"ui.components.media-browser.file_management.uploading\", {\n          count: this._uploading\n        }) : this.hass.localize(\"ui.components.media-browser.file_management.add_media\")}\n        .disabled=${this._uploading > 0}\n        @click=${this._startUpload}\n      >\n        ${this._uploading > 0 ? html`\n              <ha-circular-progress\n                size=\"small\"\n                indeterminate\n                area-label=\"Uploading\"\n                slot=\"icon\"\n              ></ha-circular-progress>\n            ` : html` <ha-svg-icon .path=${mdiUpload} slot=\"icon\"></ha-svg-icon> `}\n      </mwc-button>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_startUpload\",\n      value: async function _startUpload() {\n        if (this._uploading > 0) {\n          return;\n        }\n        const input = document.createElement(\"input\");\n        input.type = \"file\";\n        input.accept = \"audio/*,video/*,image/*\";\n        input.multiple = true;\n        input.addEventListener(\"change\", async () => {\n          fireEvent(this, \"uploading\");\n          const files = input.files;\n          document.body.removeChild(input);\n          const target = this.currentItem.media_content_id;\n          for (let i = 0; i < files.length; i++) {\n            this._uploading = files.length - i;\n            try {\n              // eslint-disable-next-line no-await-in-loop\n              await uploadLocalMedia(this.hass, target, files[i]);\n            } catch (err) {\n              showAlertDialog(this, {\n                text: this.hass.localize(\"ui.components.media-browser.file_management.upload_failed\", {\n                  reason: err.message || err\n                })\n              });\n              break;\n            }\n          }\n          this._uploading = 0;\n          fireEvent(this, \"media-refresh\");\n        }, {\n          once: true\n        });\n        // https://stackoverflow.com/questions/47664777/javascript-file-input-onchange-not-working-ios-safari-only\n        input.style.display = \"none\";\n        document.body.append(input);\n        input.click();\n      }\n    }, {\n      kind: \"field\",\n      static: true,\n      key: \"styles\",\n      value() {\n        return css`\n    mwc-button {\n      /* We use icon + text to show disabled state */\n      --mdc-button-disabled-ink-color: --mdc-theme-primary;\n    }\n\n    ha-svg-icon[slot=\"icon\"],\n    ha-circular-progress[slot=\"icon\"] {\n      vertical-align: middle;\n    }\n\n    ha-svg-icon[slot=\"icon\"] {\n      margin-inline-start: 0px;\n      margin-inline-end: 8px;\n      direction: var(--direction);\n    }\n  `;\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["mdiUpload","css","html","LitElement","nothing","customElement","property","state","fireEvent","isLocalMediaSourceContentId","uploadLocalMedia","showAlertDialog","MediaUploadButton","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","render","currentItem","media_content_id","_uploading","hass","localize","count","_startUpload","input","document","createElement","type","accept","multiple","addEventListener","files","body","removeChild","target","i","length","err","text","reason","message","once","style","display","append","click","static"],"sources":["/Users/sercanardil/Desktop/frontend/src/components/media-player/ha-media-upload-button.ts"],"sourcesContent":["import \"@material/mwc-button\";\nimport { mdiUpload } from \"@mdi/js\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { MediaPlayerItem } from \"../../data/media-player\";\nimport {\n  isLocalMediaSourceContentId,\n  uploadLocalMedia,\n} from \"../../data/media_source\";\nimport { showAlertDialog } from \"../../dialogs/generic/show-dialog-box\";\nimport type { HomeAssistant } from \"../../types\";\nimport \"../ha-circular-progress\";\nimport \"../ha-svg-icon\";\n\ndeclare global {\n  interface HASSDomEvents {\n    uploading: unknown;\n    \"media-refresh\": unknown;\n  }\n}\n\n@customElement(\"ha-media-upload-button\")\nclass MediaUploadButton extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) currentItem?: MediaPlayerItem;\n\n  @state() _uploading = 0;\n\n  protected render() {\n    if (\n      !this.currentItem ||\n      !isLocalMediaSourceContentId(this.currentItem.media_content_id || \"\")\n    ) {\n      return nothing;\n    }\n    return html`\n      <mwc-button\n        .label=${this._uploading > 0\n          ? this.hass.localize(\n              \"ui.components.media-browser.file_management.uploading\",\n              {\n                count: this._uploading,\n              }\n            )\n          : this.hass.localize(\n              \"ui.components.media-browser.file_management.add_media\"\n            )}\n        .disabled=${this._uploading > 0}\n        @click=${this._startUpload}\n      >\n        ${this._uploading > 0\n          ? html`\n              <ha-circular-progress\n                size=\"small\"\n                indeterminate\n                area-label=\"Uploading\"\n                slot=\"icon\"\n              ></ha-circular-progress>\n            `\n          : html` <ha-svg-icon .path=${mdiUpload} slot=\"icon\"></ha-svg-icon> `}\n      </mwc-button>\n    `;\n  }\n\n  private async _startUpload() {\n    if (this._uploading > 0) {\n      return;\n    }\n    const input = document.createElement(\"input\");\n    input.type = \"file\";\n    input.accept = \"audio/*,video/*,image/*\";\n    input.multiple = true;\n    input.addEventListener(\n      \"change\",\n      async () => {\n        fireEvent(this, \"uploading\");\n        const files = input.files!;\n        document.body.removeChild(input);\n        const target = this.currentItem!.media_content_id!;\n\n        for (let i = 0; i < files.length; i++) {\n          this._uploading = files.length - i;\n\n          try {\n            // eslint-disable-next-line no-await-in-loop\n            await uploadLocalMedia(this.hass, target, files[i]);\n          } catch (err: any) {\n            showAlertDialog(this, {\n              text: this.hass.localize(\n                \"ui.components.media-browser.file_management.upload_failed\",\n                {\n                  reason: err.message || err,\n                }\n              ),\n            });\n            break;\n          }\n        }\n        this._uploading = 0;\n        fireEvent(this, \"media-refresh\");\n      },\n      { once: true }\n    );\n    // https://stackoverflow.com/questions/47664777/javascript-file-input-onchange-not-working-ios-safari-only\n    input.style.display = \"none\";\n    document.body.append(input);\n    input.click();\n  }\n\n  static styles = css`\n    mwc-button {\n      /* We use icon + text to show disabled state */\n      --mdc-button-disabled-ink-color: --mdc-theme-primary;\n    }\n\n    ha-svg-icon[slot=\"icon\"],\n    ha-circular-progress[slot=\"icon\"] {\n      vertical-align: middle;\n    }\n\n    ha-svg-icon[slot=\"icon\"] {\n      margin-inline-start: 0px;\n      margin-inline-end: 8px;\n      direction: var(--direction);\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-media-upload-button\": MediaUploadButton;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}