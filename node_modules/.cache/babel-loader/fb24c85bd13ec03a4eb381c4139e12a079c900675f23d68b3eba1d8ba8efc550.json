{"ast":null,"code":"import { nothing } from 'lit/html.js';\nimport { directive, PartType } from 'lit/directive.js';\nimport { AsyncDirective } from 'lit/async-directive.js';\nimport { controllerMap } from './animate-controller.js';\nexport { AnimateController } from './animate-controller.js';\n// zIndex for \"in\" animations\nlet z = 0;\nconst disconnectedProps = new Map();\nconst renderedHosts = new WeakSet();\nexport const animationFrame = () => new Promise(resolve => requestAnimationFrame(resolve));\n// Presets for animating \"in\" and \"out\" of the DOM.\nexport const flyBelow = [{\n  transform: 'translateY(100%) scale(0)',\n  opacity: 0\n}];\nexport const flyAbove = [{\n  transform: 'translateY(-100%) scale(0)',\n  opacity: 0\n}];\nexport const flyLeft = [{\n  transform: 'translateX(-100%) scale(0)',\n  opacity: 0\n}];\nexport const flyRight = [{\n  transform: 'translateX(100%) scale(0)',\n  opacity: 0\n}];\nexport const none = [{}];\nexport const fadeOut = [{\n  opacity: 0\n}];\nexport const fade = fadeOut;\nexport const fadeIn = [{\n  opacity: 0\n}, {\n  opacity: 1\n}];\nexport const fadeInSlow = [{\n  opacity: 0\n}, {\n  opacity: 0.25,\n  offset: 0.75\n}, {\n  opacity: 1\n}];\nconst diffOp = (a, b) => {\n  const v = a - b;\n  return v === 0 ? undefined : v;\n};\nconst quotientOp = (a, b) => {\n  const v = a / b;\n  return v === 1 ? undefined : v;\n};\n// Computes a transform given a before and after input for given properties.\nexport const transformProps = {\n  left: (a, b) => {\n    const value = diffOp(a, b);\n    const transform = value == null || isNaN(value) ? undefined : `translateX(${value}px)`;\n    return {\n      value,\n      transform\n    };\n  },\n  top: (a, b) => {\n    const value = diffOp(a, b);\n    const transform = value == null || isNaN(value) ? undefined : `translateY(${value}px)`;\n    return {\n      value,\n      transform\n    };\n  },\n  width: (a, b) => {\n    let override = undefined;\n    // 'To' values of 0 would cause `value` to be Infinity. Instead we override\n    // `b` to be 1 and add 1px as an override of width.\n    if (b === 0) {\n      b = 1;\n      override = {\n        width: '1px'\n      };\n    }\n    const value = quotientOp(a, b);\n    const transform = value == null || isNaN(value) ? undefined : `scaleX(${value})`;\n    return {\n      value,\n      overrideFrom: override,\n      transform\n    };\n  },\n  height: (a, b) => {\n    let override = undefined;\n    // 'To' values of 0 would cause `value` to be Infinity. Instead we override\n    // `b` to be 1 and add 1px as an override of height.\n    if (b === 0) {\n      b = 1;\n      override = {\n        height: '1px'\n      };\n    }\n    const value = quotientOp(a, b);\n    const transform = value == null || isNaN(value) ? undefined : `scaleY(${value})`;\n    return {\n      value,\n      overrideFrom: override,\n      transform\n    };\n  }\n};\nexport const defaultKeyframeOptions = {\n  duration: 333,\n  easing: `ease-in-out`\n};\nexport const defaultCssProperties = ['left', 'top', 'width', 'height', 'opacity', 'color', 'background'];\n// Dirty checks the value received from the `guard` option.\nconst isDirty = (value, previous) => {\n  if (Array.isArray(value)) {\n    // Dirty-check arrays by item\n    if (Array.isArray(previous) && previous.length === value.length && value.every((v, i) => v === previous[i])) {\n      return false;\n    }\n  } else if (previous === value) {\n    // Dirty-check non-arrays by identity\n    return false;\n  }\n  return true;\n};\n// Mapping of node on which the `animate` directive is used to the `animate` directive.\n// Used to get the ancestor `animate` animations (which are used to modify\n// `animate` transforms), done by ascending the DOM.\nconst nodeToAnimateMap = new WeakMap();\n/**\n * `animate` directive class. Animates a node's position between renders.\n */\nexport class Animate extends AsyncDirective {\n  constructor(part) {\n    super(part);\n    this._parentNode = null;\n    this._nextSibling = null;\n    this._shouldAnimate = true;\n    this.shouldLog = false;\n    if (part.type === PartType.CHILD) {\n      throw new Error('The `animate` directive must be used in attribute position.');\n    }\n    this.createFinished();\n  }\n  createFinished() {\n    var _this$resolveFinished;\n    (_this$resolveFinished = this.resolveFinished) === null || _this$resolveFinished === void 0 || _this$resolveFinished.call(this);\n    this.finished = new Promise(r => {\n      this._resolveFinished = r;\n    });\n  }\n  async resolveFinished() {\n    var _this$_resolveFinishe;\n    (_this$_resolveFinishe = this._resolveFinished) === null || _this$_resolveFinishe === void 0 || _this$_resolveFinishe.call(this);\n    this._resolveFinished = undefined;\n  }\n  render(_options) {\n    return nothing;\n  }\n  getController() {\n    return controllerMap.get(this._host);\n  }\n  isDisabled() {\n    var _this$getController;\n    return this.options.disabled || ((_this$getController = this.getController()) === null || _this$getController === void 0 ? void 0 : _this$getController.disabled);\n  }\n  update(part, [options]) {\n    const firstUpdate = this._host === undefined;\n    if (firstUpdate) {\n      var _part$options;\n      this._host = (_part$options = part.options) === null || _part$options === void 0 ? void 0 : _part$options.host;\n      this._host.addController(this);\n      this.element = part.element;\n      nodeToAnimateMap.set(this.element, this);\n    }\n    this.optionsOrCallback = options;\n    if (firstUpdate || typeof options !== 'function') {\n      this._setOptions(options);\n    }\n    return this.render(options);\n  }\n  // TODO(sorvell): instead of a function/object, just use an object that the\n  // user can mutate and create accessors for the data that do lookups as needed.\n  // We're doing this every hostUpdate anyway and these lookups are fast.\n  _setOptions(options) {\n    var _options2, _options3, _options3$properties;\n    options = (_options2 = options) !== null && _options2 !== void 0 ? _options2 : {};\n    // Mixin controller options.\n    const controller = this.getController();\n    if (controller !== undefined) {\n      options = {\n        ...controller.defaultOptions,\n        ...options\n      };\n      options.keyframeOptions = {\n        ...controller.defaultOptions.keyframeOptions,\n        ...options.keyframeOptions\n      };\n    }\n    // Ensure there are some properties to animation and some animation options.\n    (_options3$properties = (_options3 = options).properties) !== null && _options3$properties !== void 0 ? _options3$properties : _options3.properties = defaultCssProperties;\n    this.options = options;\n  }\n  // Measures and returns metrics for the element's bounding box and styling\n  _measure() {\n    const props = {};\n    const bounds = this.element.getBoundingClientRect();\n    const computedStyle = getComputedStyle(this.element);\n    this.options.properties.forEach(p => {\n      var _bounds$p;\n      const v = (_bounds$p = bounds[p]) !== null && _bounds$p !== void 0 ? _bounds$p : !transformProps[p] ? computedStyle[p] : undefined;\n      const asNum = Number(v);\n      props[p] = isNaN(asNum) ? String(v) : asNum;\n    });\n    return props;\n  }\n  // Returns true if a `animate` should be started.\n  _canStart() {\n    let dirty = true,\n      value = undefined;\n    if (this.options.guard) {\n      value = this.options.guard();\n      dirty = isDirty(value, this._previousValue);\n    }\n    this._shouldAnimate = this._host.hasUpdated && !this.isDisabled() && !this.isAnimating() && dirty && this.element.isConnected;\n    if (this._shouldAnimate) {\n      // Copy the value if it's an array so that if it's mutated we don't forget\n      // what the previous values were.\n      this._previousValue = Array.isArray(value) ? Array.from(value) : value;\n    }\n    return this._shouldAnimate;\n  }\n  hostUpdate() {\n    // TODO(sorvell): If options will change that will affect measuring,\n    // then the user must pass a callback which can be called at update time.\n    if (typeof this.optionsOrCallback === 'function') {\n      this._setOptions(this.optionsOrCallback());\n    }\n    if (this._canStart()) {\n      var _this$_parentNode;\n      this._fromValues = this._measure();\n      // Record parent and nextSibling used to re-attach node when animating \"out\"\n      this._parentNode = (_this$_parentNode = this._parentNode) !== null && _this$_parentNode !== void 0 ? _this$_parentNode : this.element.parentNode;\n      this._nextSibling = this.element.nextSibling;\n    }\n  }\n  async hostUpdated() {\n    if (!this._shouldAnimate || !this.element.isConnected || this.options.skipInitial && !this.isHostRendered) {\n      return;\n    }\n    this.prepare();\n    // Wait for rendering so any sub-elements have a chance to render.\n    await animationFrame;\n    let frames;\n    const ancestors = this._getAncestors();\n    // These inherit from ancestors. This allows easier synchronization of\n    // child `animate`s within ancestor `animate`s.\n    const animationOptions = this._calculateKeyframeOptions(this.options.keyframeOptions, ancestors);\n    const toValues = this._measure();\n    // Normal or inverse scale\n    if (this._fromValues !== undefined) {\n      const {\n        from,\n        to\n      } = this._applyAncestorAdjustments(this._fromValues, toValues, ancestors);\n      this.log('measured', [this._fromValues, toValues, from, to]);\n      frames = this.calculateKeyframes(from, to);\n      // \"In\" `animate`.\n    } else {\n      const disconnected = disconnectedProps.get(this.options.inId);\n      if (disconnected) {\n        // use disconnected data only once.\n        disconnectedProps.delete(this.options.inId);\n        const {\n          from,\n          to\n        } = this._applyAncestorAdjustments(disconnected, toValues, ancestors);\n        frames = this.calculateKeyframes(from, to);\n        // \"merge\" with \"in\" frames\n        frames = this.options.in ? [{\n          ...this.options.in[0],\n          ...frames[0]\n        }, ...this.options.in.slice(1), frames[1]] : frames;\n        // adjust z so always on top...\n        z++;\n        frames.forEach(f => f['zIndex'] = z);\n      } else if (this.options.in) {\n        frames = [...this.options.in, {}];\n      }\n    }\n    noAwait(this.animate(frames, animationOptions));\n  }\n  resetStyles() {\n    if (this._styles !== undefined) {\n      var _this$_styles;\n      this.element.setAttribute('style', (_this$_styles = this._styles) !== null && _this$_styles !== void 0 ? _this$_styles : '');\n      this._styles = undefined;\n    }\n  }\n  commitStyles() {\n    var _this$webAnimation, _this$webAnimation2;\n    this._styles = this.element.getAttribute('style');\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (_this$webAnimation = this.webAnimation) === null || _this$webAnimation === void 0 || _this$webAnimation.commitStyles();\n    (_this$webAnimation2 = this.webAnimation) === null || _this$webAnimation2 === void 0 || _this$webAnimation2.cancel();\n  }\n  reconnected() {}\n  // Experimental animate out functionality.\n  async disconnected() {\n    var _this$_parentNode2;\n    if (!this._shouldAnimate) {\n      return;\n    }\n    if (this.options.id !== undefined) {\n      disconnectedProps.set(this.options.id, this._fromValues);\n    }\n    if (this.options.out === undefined) {\n      return;\n    }\n    this.prepare();\n    await animationFrame();\n    if ((_this$_parentNode2 = this._parentNode) !== null && _this$_parentNode2 !== void 0 && _this$_parentNode2.isConnected) {\n      // put element back in DOM\n      const ref = this._nextSibling && this._nextSibling.parentNode === this._parentNode ? this._nextSibling : null;\n      this._parentNode.insertBefore(this.element, ref);\n      // Optionally move element back to its position before it was detached.\n      if (this.options.stabilizeOut) {\n        // Measure current position after re-attaching.\n        const shifted = this._measure();\n        this.log('stabilizing out');\n        // TODO(sorvell): these nudges could conflict with existing styling\n        // or animation but setting left/top should be rare, especially via\n        // animation.\n        const left = this._fromValues['left'] - shifted['left'];\n        const top = this._fromValues['top'] - shifted['top'];\n        const isStatic = getComputedStyle(this.element).position === 'static';\n        if (isStatic && (left !== 0 || top !== 0)) {\n          this.element.style.position = 'relative';\n        }\n        if (left !== 0) {\n          this.element.style.left = left + 'px';\n        }\n        if (top !== 0) {\n          this.element.style.top = top + 'px';\n        }\n      }\n    }\n    // These inherit from ancestors. This allows easier synchronization of\n    // child `animate`s within ancestor `animate`s.\n    const keyframeOptions = this._calculateKeyframeOptions(this.options.keyframeOptions);\n    await this.animate(this.options.out, keyframeOptions);\n    this.element.remove();\n  }\n  prepare() {\n    this.createFinished();\n  }\n  start() {\n    var _this$options$onStart, _this$options;\n    (_this$options$onStart = (_this$options = this.options).onStart) === null || _this$options$onStart === void 0 || _this$options$onStart.call(_this$options, this);\n  }\n  didFinish(didAnimate) {\n    if (didAnimate) {\n      var _this$options$onCompl, _this$options2;\n      (_this$options$onCompl = (_this$options2 = this.options).onComplete) === null || _this$options$onCompl === void 0 || _this$options$onCompl.call(_this$options2, this);\n    }\n    this._fromValues = undefined;\n    this.animatingProperties = undefined;\n    this.frames = undefined;\n    this.resolveFinished();\n  }\n  _getAncestors() {\n    const ancestors = [];\n    for (let p = this.element.parentNode; p; p = (_p2 = p) === null || _p2 === void 0 ? void 0 : _p2.parentNode) {\n      var _p2;\n      const a = nodeToAnimateMap.get(p);\n      if (a && !a.isDisabled() && a) {\n        ancestors.push(a);\n      }\n    }\n    return ancestors;\n  }\n  get isHostRendered() {\n    const hostRendered = renderedHosts.has(this._host);\n    if (!hostRendered) {\n      this._host.updateComplete.then(() => {\n        renderedHosts.add(this._host);\n      });\n    }\n    return hostRendered;\n  }\n  _calculateKeyframeOptions(options, ancestors = this._getAncestors()) {\n    // merges this `animate`'s options over ancestor options over defaults\n    const keyframeOptions = {\n      ...defaultKeyframeOptions\n    };\n    ancestors.forEach(a => Object.assign(keyframeOptions, a.options.keyframeOptions));\n    Object.assign(keyframeOptions, options);\n    return keyframeOptions;\n  }\n  // Adjust position based on ancestor scaling.\n  _applyAncestorAdjustments(from, to, ancestors) {\n    from = {\n      ...from\n    };\n    to = {\n      ...to\n    };\n    const ancestorProps = ancestors.map(a => a.animatingProperties).filter(a => a !== undefined);\n    let dScaleX = 1;\n    let dScaleY = 1;\n    if (ancestorProps !== undefined) {\n      // gather scaling data for ancestors\n      ancestorProps.forEach(a => {\n        if (a['width']) {\n          dScaleX = dScaleX / a['width'];\n        }\n        if (a['height']) {\n          dScaleY = dScaleY / a['height'];\n        }\n      });\n      // Move position by ancestor scaling amount.\n      if (from['left'] !== undefined && to['left'] !== undefined) {\n        from['left'] = dScaleX * from['left'];\n        to['left'] = dScaleX * to['left'];\n      }\n      if (from['top'] !== undefined && to['top'] !== undefined) {\n        from['top'] = dScaleY * from['top'];\n        to['top'] = dScaleY * to['top'];\n      }\n    }\n    return {\n      from,\n      to\n    };\n  }\n  calculateKeyframes(from, to, center = false) {\n    const fromFrame = {};\n    const toFrame = {};\n    let hasFrames = false;\n    const props = {};\n    for (const p in to) {\n      const f = from[p],\n        t = to[p];\n      if (p in transformProps) {\n        const tp = transformProps[p];\n        if (f === undefined || t === undefined) {\n          continue;\n        }\n        const op = tp(f, t);\n        if (op.transform !== undefined) {\n          var _fromFrame$transform;\n          props[p] = op.value;\n          hasFrames = true;\n          fromFrame['transform'] = `${(_fromFrame$transform = fromFrame['transform']) !== null && _fromFrame$transform !== void 0 ? _fromFrame$transform : ''} ${op['transform']}`;\n          if (op.overrideFrom !== undefined) {\n            Object.assign(fromFrame, op.overrideFrom);\n          }\n        }\n      } else if (f !== t && f !== undefined && t !== undefined) {\n        hasFrames = true;\n        fromFrame[p] = f;\n        toFrame[p] = t;\n      }\n    }\n    fromFrame['transformOrigin'] = toFrame['transformOrigin'] = center ? 'center center' : 'top left';\n    this.animatingProperties = props;\n    return hasFrames ? [fromFrame, toFrame] : undefined;\n  }\n  async animate(frames, options = this.options.keyframeOptions) {\n    this.start();\n    this.frames = frames;\n    let didAnimate = false;\n    if (!this.isAnimating() && !this.isDisabled()) {\n      if (this.options.onFrames) {\n        this.frames = frames = this.options.onFrames(this);\n        this.log('modified frames', frames);\n      }\n      if (frames !== undefined) {\n        this.log('animate', [frames, options]);\n        didAnimate = true;\n        this.webAnimation = this.element.animate(frames, options);\n        const controller = this.getController();\n        noAwait(controller === null || controller === void 0 ? void 0 : controller.add(this));\n        try {\n          await this.webAnimation.finished;\n        } catch (e) {\n          // cancelled.\n        }\n        controller === null || controller === void 0 || controller.remove(this);\n      }\n    }\n    this.didFinish(didAnimate);\n    return didAnimate;\n  }\n  isAnimating() {\n    var _this$webAnimation3, _this$webAnimation4;\n    return ((_this$webAnimation3 = this.webAnimation) === null || _this$webAnimation3 === void 0 ? void 0 : _this$webAnimation3.playState) === 'running' || ((_this$webAnimation4 = this.webAnimation) === null || _this$webAnimation4 === void 0 ? void 0 : _this$webAnimation4.pending);\n  }\n  log(message, data) {\n    if (this.shouldLog && !this.isDisabled()) {\n      console.log(message, this.options.id, data);\n    }\n  }\n}\n/**\n * Used in an async function to mark a promise that we're deliberately not\n * awaiting.\n */\nfunction noAwait(_p) {}\n/**\n * The `animate` directive animates a node's layout between renders.\n * It will perform a \"tweening\" animation between the two states based on\n * the options given. In addition, elements can animate when they initially\n * render to DOM and when they are removed.\n *\n * Options include:\n * * animationOptions:  configure animation via standard KeyframeAnimationOptions\n * * properties: list of properties to animate, defaults to\n * ['left', 'top','width', 'height', 'opacity', 'color', 'background']\n * * disabled: disables animation\n * * guard: function producing values that must change for the `animate` to run\n * * in: keyframes to use when animating in\n * * out: keyframes to use when animating out\n * * skipInitial: skip animating in the first time\n * * id: used to link to other `animate`s via `inId`\n * * inId: id of the `animate` to render from when animating in\n * * onStart: run when the `animate` starts\n * * onComplete: run when the `animate` completes\n * * onFrames: run when the frames are produces, use to modify frames\n */\nexport const animate = directive(Animate);","map":{"version":3,"names":["nothing","directive","PartType","AsyncDirective","controllerMap","AnimateController","z","disconnectedProps","Map","renderedHosts","WeakSet","animationFrame","Promise","resolve","requestAnimationFrame","flyBelow","transform","opacity","flyAbove","flyLeft","flyRight","none","fadeOut","fade","fadeIn","fadeInSlow","offset","diffOp","a","b","v","undefined","quotientOp","transformProps","left","value","isNaN","top","width","override","overrideFrom","height","defaultKeyframeOptions","duration","easing","defaultCssProperties","isDirty","previous","Array","isArray","length","every","i","nodeToAnimateMap","WeakMap","Animate","constructor","part","_parentNode","_nextSibling","_shouldAnimate","shouldLog","type","CHILD","Error","createFinished","_this$resolveFinished","resolveFinished","call","finished","r","_resolveFinished","_this$_resolveFinishe","render","_options","getController","get","_host","isDisabled","_this$getController","options","disabled","update","firstUpdate","_part$options","host","addController","element","set","optionsOrCallback","_setOptions","_options2","_options3","_options3$properties","controller","defaultOptions","keyframeOptions","properties","_measure","props","bounds","getBoundingClientRect","computedStyle","getComputedStyle","forEach","p","_bounds$p","asNum","Number","String","_canStart","dirty","guard","_previousValue","hasUpdated","isAnimating","isConnected","from","hostUpdate","_this$_parentNode","_fromValues","parentNode","nextSibling","hostUpdated","skipInitial","isHostRendered","prepare","frames","ancestors","_getAncestors","animationOptions","_calculateKeyframeOptions","toValues","to","_applyAncestorAdjustments","log","calculateKeyframes","disconnected","inId","delete","in","slice","f","noAwait","animate","resetStyles","_styles","_this$_styles","setAttribute","commitStyles","_this$webAnimation","_this$webAnimation2","getAttribute","webAnimation","cancel","reconnected","_this$_parentNode2","id","out","ref","insertBefore","stabilizeOut","shifted","isStatic","position","style","remove","start","_this$options$onStart","_this$options","onStart","didFinish","didAnimate","_this$options$onCompl","_this$options2","onComplete","animatingProperties","_p2","push","hostRendered","has","updateComplete","then","add","Object","assign","ancestorProps","map","filter","dScaleX","dScaleY","center","fromFrame","toFrame","hasFrames","t","tp","op","_fromFrame$transform","onFrames","e","_this$webAnimation3","_this$webAnimation4","playState","pending","message","data","console","_p"],"sources":["../src/animate.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport {LitElement, ReactiveControllerHost} from 'lit';\nimport {nothing, AttributePart} from 'lit/html.js';\nimport {directive, PartInfo, PartType} from 'lit/directive.js';\nimport {AsyncDirective} from 'lit/async-directive.js';\nimport {controllerMap} from './animate-controller.js';\nexport {AnimateController} from './animate-controller.js';\n\nexport type CSSValues = {\n  [index: string]: string | number;\n};\n\nexport type CSSPropertiesList = string[];\n\n// zIndex for \"in\" animations\nlet z = 0;\n\nconst disconnectedProps = new Map<unknown, CSSValues>();\nconst renderedHosts = new WeakSet<ReactiveControllerHost>();\n\nexport type Options = {\n  // Options used for the animation\n  keyframeOptions?: KeyframeAnimationOptions;\n  // List of css properties to animate\n  properties?: CSSPropertiesList;\n  // if `true`, the `animate` is disabled\n  disabled?: boolean;\n  // Callback run to produce a value which is dirty checked to determine if animation should run.\n  guard?: () => unknown;\n  // Id for this `animate`; used to link to other `animate`s via e.g. `inId`\n  id?: unknown;\n  // Set to the `animate` id to map to when rendering \"in\"\n  inId?: unknown;\n  // Keyframes to use when animating \"in\"\n  in?: Keyframe[];\n  // Keyframes to use when animating \"out\"\n  out?: Keyframe[];\n  // Set to true to match DOM position when animating \"out\"\n  stabilizeOut?: boolean;\n  // Skips animation when initially rendering\n  skipInitial?: boolean;\n  // Callback run when the `animate` animation starts\n  onStart?: (animate: Animate) => void;\n  // Callback run when the animation is complete\n  onComplete?: (animate: Animate) => void;\n  // Callback run to modify frames used to animate\n  onFrames?: (animate: Animate) => Keyframe[] | undefined;\n};\n\nexport const animationFrame = () =>\n  new Promise((resolve) => requestAnimationFrame(resolve));\n\n// Presets for animating \"in\" and \"out\" of the DOM.\nexport const flyBelow = [{transform: 'translateY(100%) scale(0)', opacity: 0}];\nexport const flyAbove = [{transform: 'translateY(-100%) scale(0)', opacity: 0}];\nexport const flyLeft = [{transform: 'translateX(-100%) scale(0)', opacity: 0}];\nexport const flyRight = [{transform: 'translateX(100%) scale(0)', opacity: 0}];\nexport const none = [{}];\nexport const fadeOut = [{opacity: 0}];\nexport const fade = fadeOut;\nexport const fadeIn = [{opacity: 0}, {opacity: 1}];\nexport const fadeInSlow = [\n  {opacity: 0},\n  {opacity: 0.25, offset: 0.75},\n  {opacity: 1},\n];\n\nconst diffOp = (a: number, b: number) => {\n  const v = a - b;\n  return v === 0 ? undefined : v;\n};\nconst quotientOp = (a: number, b: number) => {\n  const v = a / b;\n  return v === 1 ? undefined : v;\n};\n\n// Computes a transform given a before and after input for given properties.\nexport const transformProps: {\n  [p: string]: (\n    a: number,\n    b: number\n  ) => {\n    value?: number;\n    transform?: string;\n    overrideFrom?: {[k: string]: string};\n  };\n} = {\n  left: (a: number, b: number) => {\n    const value = diffOp(a, b);\n    const transform =\n      value == null || isNaN(value) ? undefined : `translateX(${value}px)`;\n    return {value, transform};\n  },\n  top: (a: number, b: number) => {\n    const value = diffOp(a, b);\n    const transform =\n      value == null || isNaN(value) ? undefined : `translateY(${value}px)`;\n    return {value, transform};\n  },\n  width: (a: number, b: number) => {\n    let override: {} | undefined = undefined;\n    // 'To' values of 0 would cause `value` to be Infinity. Instead we override\n    // `b` to be 1 and add 1px as an override of width.\n    if (b === 0) {\n      b = 1;\n      override = {width: '1px'};\n    }\n    const value = quotientOp(a, b);\n    const transform =\n      value == null || isNaN(value) ? undefined : `scaleX(${value})`;\n    return {value, overrideFrom: override, transform};\n  },\n  height: (a: number, b: number) => {\n    let override: {} | undefined = undefined;\n    // 'To' values of 0 would cause `value` to be Infinity. Instead we override\n    // `b` to be 1 and add 1px as an override of height.\n    if (b === 0) {\n      b = 1;\n      override = {height: '1px'};\n    }\n    const value = quotientOp(a, b);\n    const transform =\n      value == null || isNaN(value) ? undefined : `scaleY(${value})`;\n    return {value, overrideFrom: override, transform};\n  },\n};\n\nexport const defaultKeyframeOptions: KeyframeAnimationOptions = {\n  duration: 333,\n  easing: `ease-in-out`,\n};\n\nexport const defaultCssProperties: CSSPropertiesList = [\n  'left',\n  'top',\n  'width',\n  'height',\n  'opacity',\n  'color',\n  'background',\n];\n\n// Dirty checks the value received from the `guard` option.\nconst isDirty = (value: unknown, previous: unknown) => {\n  if (Array.isArray(value)) {\n    // Dirty-check arrays by item\n    if (\n      Array.isArray(previous) &&\n      previous.length === value.length &&\n      value.every((v, i) => v === (previous as Array<unknown>)[i])\n    ) {\n      return false;\n    }\n  } else if (previous === value) {\n    // Dirty-check non-arrays by identity\n    return false;\n  }\n  return true;\n};\n\n// Mapping of node on which the `animate` directive is used to the `animate` directive.\n// Used to get the ancestor `animate` animations (which are used to modify\n// `animate` transforms), done by ascending the DOM.\nconst nodeToAnimateMap = new WeakMap<Node, Animate>();\n\n/**\n * `animate` directive class. Animates a node's position between renders.\n */\nexport class Animate extends AsyncDirective {\n  private _host?: LitElement;\n  private _fromValues?: CSSValues;\n  private _parentNode: Element | null = null;\n  private _nextSibling: Node | null = null;\n  private _shouldAnimate = true;\n  private _previousValue: unknown;\n  private _styles?: string | undefined | null;\n  element!: HTMLElement;\n\n  shouldLog = false;\n  animatingProperties?: CSSValues;\n  frames?: Keyframe[];\n  webAnimation?: Animation;\n  options!: Options;\n  optionsOrCallback?: (() => Options) | Options;\n\n  finished!: Promise<void>;\n  private _resolveFinished?: () => void;\n\n  constructor(part: PartInfo) {\n    super(part);\n    if (part.type === PartType.CHILD) {\n      throw new Error(\n        'The `animate` directive must be used in attribute position.'\n      );\n    }\n    this.createFinished();\n  }\n\n  createFinished() {\n    this.resolveFinished?.();\n    this.finished = new Promise((r) => {\n      this._resolveFinished = r;\n    });\n  }\n\n  async resolveFinished() {\n    this._resolveFinished?.();\n    this._resolveFinished = undefined;\n  }\n\n  render(_options?: (() => Options) | Options) {\n    return nothing;\n  }\n\n  getController() {\n    return controllerMap.get(this._host!);\n  }\n\n  isDisabled() {\n    return this.options.disabled || this.getController()?.disabled;\n  }\n\n  override update(part: AttributePart, [options]: Parameters<this['render']>) {\n    const firstUpdate = this._host === undefined;\n    if (firstUpdate) {\n      this._host = part.options?.host as LitElement;\n      this._host.addController(this);\n      this.element = part.element;\n      nodeToAnimateMap.set(this.element, this);\n    }\n    this.optionsOrCallback = options;\n    if (firstUpdate || typeof options !== 'function') {\n      this._setOptions(options as Options);\n    }\n    return this.render(options);\n  }\n\n  // TODO(sorvell): instead of a function/object, just use an object that the\n  // user can mutate and create accessors for the data that do lookups as needed.\n  // We're doing this every hostUpdate anyway and these lookups are fast.\n  private _setOptions(options?: Options) {\n    options = options ?? {};\n    // Mixin controller options.\n    const controller = this.getController();\n    if (controller !== undefined) {\n      options = {\n        ...controller.defaultOptions,\n        ...options,\n      };\n      options.keyframeOptions = {\n        ...controller.defaultOptions.keyframeOptions,\n        ...options.keyframeOptions,\n      };\n    }\n    // Ensure there are some properties to animation and some animation options.\n    options!.properties ??= defaultCssProperties;\n    this.options = options;\n  }\n\n  // Measures and returns metrics for the element's bounding box and styling\n  private _measure() {\n    const props: CSSValues = {};\n    const bounds = this.element.getBoundingClientRect();\n    const computedStyle = getComputedStyle(this.element);\n    this.options.properties!.forEach((p) => {\n      const v =\n        bounds[p as keyof typeof bounds] ??\n        (!transformProps[p as keyof typeof transformProps]\n          ? computedStyle[p as keyof CSSStyleDeclaration]\n          : undefined);\n      const asNum = Number(v);\n      props[p] = isNaN(asNum) ? String(v) : asNum;\n    });\n    return props;\n  }\n\n  // Returns true if a `animate` should be started.\n  private _canStart() {\n    let dirty = true,\n      value = undefined;\n    if (this.options.guard) {\n      value = this.options.guard();\n      dirty = isDirty(value, this._previousValue);\n    }\n    this._shouldAnimate =\n      this._host!.hasUpdated &&\n      !this.isDisabled() &&\n      !this.isAnimating() &&\n      dirty &&\n      this.element.isConnected;\n    if (this._shouldAnimate) {\n      // Copy the value if it's an array so that if it's mutated we don't forget\n      // what the previous values were.\n      this._previousValue = Array.isArray(value) ? Array.from(value) : value;\n    }\n    return this._shouldAnimate;\n  }\n\n  hostUpdate() {\n    // TODO(sorvell): If options will change that will affect measuring,\n    // then the user must pass a callback which can be called at update time.\n    if (typeof this.optionsOrCallback === 'function') {\n      this._setOptions(this.optionsOrCallback());\n    }\n    if (this._canStart()) {\n      this._fromValues = this._measure();\n      // Record parent and nextSibling used to re-attach node when animating \"out\"\n      this._parentNode =\n        this._parentNode ?? (this.element.parentNode as Element);\n      this._nextSibling = this.element.nextSibling;\n    }\n  }\n\n  async hostUpdated() {\n    if (\n      !this._shouldAnimate ||\n      !this.element.isConnected ||\n      (this.options.skipInitial && !this.isHostRendered)\n    ) {\n      return;\n    }\n    this.prepare();\n    // Wait for rendering so any sub-elements have a chance to render.\n    await animationFrame;\n    let frames: Keyframe[] | undefined;\n    const ancestors = this._getAncestors();\n    // These inherit from ancestors. This allows easier synchronization of\n    // child `animate`s within ancestor `animate`s.\n    const animationOptions = this._calculateKeyframeOptions(\n      this.options.keyframeOptions,\n      ancestors\n    );\n    const toValues = this._measure();\n    // Normal or inverse scale\n    if (this._fromValues !== undefined) {\n      const {from, to} = this._applyAncestorAdjustments(\n        this._fromValues,\n        toValues,\n        ancestors\n      );\n      this.log('measured', [this._fromValues, toValues, from, to]);\n      frames = this.calculateKeyframes(from, to);\n      // \"In\" `animate`.\n    } else {\n      const disconnected = disconnectedProps.get(this.options.inId);\n      if (disconnected) {\n        // use disconnected data only once.\n        disconnectedProps.delete(this.options.inId);\n        const {from, to} = this._applyAncestorAdjustments(\n          disconnected!,\n          toValues,\n          ancestors\n        );\n        frames = this.calculateKeyframes(from, to);\n        // \"merge\" with \"in\" frames\n        frames = this.options.in\n          ? [\n              {...this.options.in[0], ...frames![0]},\n              ...this.options.in.slice(1),\n              frames![1],\n            ]\n          : frames;\n        // adjust z so always on top...\n        z++;\n        frames!.forEach((f) => (f['zIndex'] = z));\n      } else if (this.options.in) {\n        frames = [...this.options.in, {}];\n      }\n    }\n    noAwait(this.animate(frames, animationOptions));\n  }\n\n  resetStyles() {\n    if (this._styles !== undefined) {\n      this.element.setAttribute('style', this._styles ?? '');\n      this._styles = undefined;\n    }\n  }\n\n  commitStyles() {\n    this._styles = this.element.getAttribute('style');\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (this.webAnimation as any)?.commitStyles();\n    this.webAnimation?.cancel();\n  }\n\n  override reconnected() {}\n\n  // Experimental animate out functionality.\n  override async disconnected() {\n    if (!this._shouldAnimate) {\n      return;\n    }\n    if (this.options.id !== undefined) {\n      disconnectedProps.set(this.options.id, this._fromValues!);\n    }\n    if (this.options.out === undefined) {\n      return;\n    }\n    this.prepare();\n    await animationFrame();\n    if (this._parentNode?.isConnected) {\n      // put element back in DOM\n      const ref =\n        this._nextSibling && this._nextSibling.parentNode === this._parentNode\n          ? this._nextSibling\n          : null;\n      this._parentNode.insertBefore(this.element, ref);\n      // Optionally move element back to its position before it was detached.\n      if (this.options.stabilizeOut) {\n        // Measure current position after re-attaching.\n        const shifted = this._measure();\n        this.log('stabilizing out');\n        // TODO(sorvell): these nudges could conflict with existing styling\n        // or animation but setting left/top should be rare, especially via\n        // animation.\n        const left =\n          (this._fromValues!['left'] as number) - (shifted['left'] as number);\n        const top =\n          (this._fromValues!['top'] as number) - (shifted['top'] as number);\n        const isStatic = getComputedStyle(this.element).position === 'static';\n        if (isStatic && (left !== 0 || top !== 0)) {\n          this.element.style.position = 'relative';\n        }\n        if (left !== 0) {\n          this.element.style.left = left + 'px';\n        }\n        if (top !== 0) {\n          this.element.style.top = top + 'px';\n        }\n      }\n    }\n    // These inherit from ancestors. This allows easier synchronization of\n    // child `animate`s within ancestor `animate`s.\n    const keyframeOptions = this._calculateKeyframeOptions(\n      this.options.keyframeOptions\n    );\n    await this.animate(this.options.out, keyframeOptions);\n    this.element.remove();\n  }\n\n  prepare() {\n    this.createFinished();\n  }\n\n  start() {\n    this.options.onStart?.(this);\n  }\n\n  didFinish(didAnimate: boolean) {\n    if (didAnimate) {\n      this.options.onComplete?.(this);\n    }\n    this._fromValues = undefined;\n    this.animatingProperties = undefined;\n    this.frames = undefined;\n    this.resolveFinished();\n  }\n\n  private _getAncestors() {\n    const ancestors = [];\n    for (\n      let p: Node | null | undefined = this.element.parentNode;\n      p;\n      p = p?.parentNode\n    ) {\n      const a = nodeToAnimateMap.get(p!);\n      if (a && !a.isDisabled() && a) {\n        ancestors.push(a);\n      }\n    }\n    return ancestors;\n  }\n\n  protected get isHostRendered() {\n    const hostRendered = renderedHosts.has(this._host!);\n    if (!hostRendered) {\n      this._host!.updateComplete.then(() => {\n        renderedHosts.add(this._host!);\n      });\n    }\n    return hostRendered;\n  }\n\n  private _calculateKeyframeOptions(\n    options: KeyframeAnimationOptions | undefined,\n    ancestors: Animate[] = this._getAncestors()\n  ) {\n    // merges this `animate`'s options over ancestor options over defaults\n    const keyframeOptions = {...defaultKeyframeOptions};\n    ancestors.forEach((a) =>\n      Object.assign(keyframeOptions, a.options.keyframeOptions)\n    );\n    Object.assign(keyframeOptions, options);\n    return keyframeOptions;\n  }\n\n  // Adjust position based on ancestor scaling.\n  private _applyAncestorAdjustments(\n    from: CSSValues,\n    to: CSSValues,\n    ancestors: Animate[]\n  ) {\n    from = {...from};\n    to = {...to};\n    const ancestorProps = ancestors\n      .map((a) => a.animatingProperties)\n      .filter((a) => a !== undefined) as CSSValues[];\n    let dScaleX = 1;\n    let dScaleY = 1;\n    if (ancestorProps !== undefined) {\n      // gather scaling data for ancestors\n      ancestorProps.forEach((a) => {\n        if (a['width']) {\n          dScaleX = dScaleX / (a['width'] as number);\n        }\n        if (a['height']) {\n          dScaleY = dScaleY / (a['height'] as number);\n        }\n      });\n      // Move position by ancestor scaling amount.\n      if (from['left'] !== undefined && to['left'] !== undefined) {\n        from['left'] = dScaleX * (from['left'] as number);\n        to['left'] = dScaleX * (to['left'] as number);\n      }\n      if (from['top'] !== undefined && to['top'] !== undefined) {\n        from['top'] = dScaleY * (from['top'] as number);\n        to['top'] = dScaleY * (to['top'] as number);\n      }\n    }\n    return {from, to};\n  }\n\n  protected calculateKeyframes(from: CSSValues, to: CSSValues, center = false) {\n    const fromFrame: Keyframe = {};\n    const toFrame: Keyframe = {};\n    let hasFrames = false;\n    const props: CSSValues = {};\n    for (const p in to) {\n      const f = from[p],\n        t = to[p];\n      if (p in transformProps) {\n        const tp = transformProps[p as keyof typeof transformProps];\n        if (f === undefined || t === undefined) {\n          continue;\n        }\n        const op = tp(f as number, t as number);\n        if (op.transform !== undefined) {\n          props[p] = op.value!;\n          hasFrames = true;\n          fromFrame['transform'] = `${fromFrame['transform'] ?? ''} ${\n            op['transform']\n          }`;\n          if (op.overrideFrom !== undefined) {\n            Object.assign(fromFrame, op.overrideFrom);\n          }\n        }\n      } else if (f !== t && f !== undefined && t !== undefined) {\n        hasFrames = true;\n        fromFrame[p] = f;\n        toFrame[p] = t;\n      }\n    }\n    fromFrame['transformOrigin'] = toFrame['transformOrigin'] = center\n      ? 'center center'\n      : 'top left';\n    this.animatingProperties = props;\n    return hasFrames ? [fromFrame, toFrame] : undefined;\n  }\n\n  protected async animate(\n    frames: Keyframe[] | undefined,\n    options = this.options.keyframeOptions\n  ) {\n    this.start();\n    this.frames = frames;\n    let didAnimate = false;\n    if (!this.isAnimating() && !this.isDisabled()) {\n      if (this.options.onFrames) {\n        this.frames = frames = this.options.onFrames(this);\n        this.log('modified frames', frames);\n      }\n      if (frames !== undefined) {\n        this.log('animate', [frames, options]);\n        didAnimate = true;\n        this.webAnimation = this.element.animate(frames, options);\n        const controller = this.getController();\n        noAwait(controller?.add(this));\n        try {\n          await this.webAnimation.finished;\n        } catch (e) {\n          // cancelled.\n        }\n        controller?.remove(this);\n      }\n    }\n    this.didFinish(didAnimate);\n    return didAnimate;\n  }\n\n  protected isAnimating() {\n    return (\n      this.webAnimation?.playState === 'running' || this.webAnimation?.pending\n    );\n  }\n\n  log(message: string, data?: unknown) {\n    if (this.shouldLog && !this.isDisabled()) {\n      console.log(message, this.options.id, data);\n    }\n  }\n}\n\n/**\n * Used in an async function to mark a promise that we're deliberately not\n * awaiting.\n */\nfunction noAwait(_p: null | undefined | Promise<unknown>) {}\n\n/**\n * The `animate` directive animates a node's layout between renders.\n * It will perform a \"tweening\" animation between the two states based on\n * the options given. In addition, elements can animate when they initially\n * render to DOM and when they are removed.\n *\n * Options include:\n * * animationOptions:  configure animation via standard KeyframeAnimationOptions\n * * properties: list of properties to animate, defaults to\n * ['left', 'top','width', 'height', 'opacity', 'color', 'background']\n * * disabled: disables animation\n * * guard: function producing values that must change for the `animate` to run\n * * in: keyframes to use when animating in\n * * out: keyframes to use when animating out\n * * skipInitial: skip animating in the first time\n * * id: used to link to other `animate`s via `inId`\n * * inId: id of the `animate` to render from when animating in\n * * onStart: run when the `animate` starts\n * * onComplete: run when the `animate` completes\n * * onFrames: run when the frames are produces, use to modify frames\n */\nexport const animate = directive(Animate);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}