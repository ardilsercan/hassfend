{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport \"@material/mwc-button/mwc-button\";\nimport Cropper from \"cropperjs\";\n// @ts-ignore\nimport cropperCss from \"cropperjs/dist/cropper.css\";\nimport { css, html, LitElement, unsafeCSS } from \"lit\";\nimport { customElement, property, state, query } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport \"../../components/ha-dialog\";\nimport { haStyleDialog } from \"../../resources/styles\";\nexport let HaImagecropperDialog = _decorate([customElement(\"image-cropper-dialog\")], function (_initialize, _LitElement) {\n  class HaImagecropperDialog extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaImagecropperDialog,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_params\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_open\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [query(\"img\", true)],\n      key: \"_image\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_cropper\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"showDialog\",\n      value: function showDialog(params) {\n        this._params = params;\n        this._open = true;\n      }\n    }, {\n      kind: \"method\",\n      key: \"closeDialog\",\n      value: function closeDialog() {\n        var _this$_cropper;\n        this._open = false;\n        this._params = undefined;\n        (_this$_cropper = this._cropper) === null || _this$_cropper === void 0 || _this$_cropper.destroy();\n        this._cropper = undefined;\n      }\n    }, {\n      kind: \"method\",\n      key: \"updated\",\n      value: function updated(changedProperties) {\n        if (!changedProperties.has(\"_params\") || !this._params) {\n          return;\n        }\n        if (!this._cropper) {\n          this._image.src = URL.createObjectURL(this._params.file);\n          this._cropper = new Cropper(this._image, {\n            aspectRatio: this._params.options.aspectRatio,\n            viewMode: 1,\n            dragMode: \"move\",\n            minCropBoxWidth: 50,\n            ready: () => {\n              URL.revokeObjectURL(this._image.src);\n            }\n          });\n        } else {\n          this._cropper.replace(URL.createObjectURL(this._params.file));\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var _this$_params;\n        return html`<ha-dialog\n      @closed=${this.closeDialog}\n      scrimClickAction\n      escapeKeyAction\n      .open=${this._open}\n    >\n      <div\n        class=\"container ${classMap({\n          round: Boolean((_this$_params = this._params) === null || _this$_params === void 0 ? void 0 : _this$_params.options.round)\n        })}\"\n      >\n        <img alt=${this.hass.localize(\"ui.dialogs.image_cropper.crop_image\")} />\n      </div>\n      <mwc-button slot=\"secondaryAction\" @click=${this.closeDialog}>\n        ${this.hass.localize(\"ui.common.cancel\")}\n      </mwc-button>\n      <mwc-button slot=\"primaryAction\" @click=${this._cropImage}>\n        ${this.hass.localize(\"ui.dialogs.image_cropper.crop\")}\n      </mwc-button>\n    </ha-dialog>`;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_cropImage\",\n      value: function _cropImage() {\n        this._cropper.getCroppedCanvas().toBlob(blob => {\n          if (!blob) {\n            return;\n          }\n          const file = new File([blob], this._params.file.name, {\n            type: this._params.options.type || this._params.file.type\n          });\n          this._params.croppedCallback(file);\n          this.closeDialog();\n        }, this._params.options.type || this._params.file.type, this._params.options.quality);\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [haStyleDialog, css`\n        ${unsafeCSS(cropperCss)}\n        .container {\n          max-width: 640px;\n        }\n        img {\n          max-width: 100%;\n        }\n        .container.round .cropper-view-box,\n        .container.round .cropper-face {\n          border-radius: 50%;\n        }\n        .cropper-line,\n        .cropper-point,\n        .cropper-point.point-se::before {\n          background-color: var(--primary-color);\n        }\n      `];\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["Cropper","cropperCss","css","html","LitElement","unsafeCSS","customElement","property","state","query","classMap","haStyleDialog","HaImagecropperDialog","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","showDialog","params","_params","_open","closeDialog","_this$_cropper","undefined","_cropper","destroy","updated","changedProperties","has","_image","src","URL","createObjectURL","file","aspectRatio","options","viewMode","dragMode","minCropBoxWidth","ready","revokeObjectURL","replace","render","_this$_params","round","Boolean","hass","localize","_cropImage","getCroppedCanvas","toBlob","blob","File","name","type","croppedCallback","quality","static","styles"],"sources":["/Users/sercanardil/Desktop/frontend/src/dialogs/image-cropper-dialog/image-cropper-dialog.ts"],"sourcesContent":["import \"@material/mwc-button/mwc-button\";\nimport Cropper from \"cropperjs\";\n// @ts-ignore\nimport cropperCss from \"cropperjs/dist/cropper.css\";\nimport {\n  css,\n  CSSResultGroup,\n  html,\n  LitElement,\n  PropertyValues,\n  TemplateResult,\n  unsafeCSS,\n} from \"lit\";\nimport { customElement, property, state, query } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport \"../../components/ha-dialog\";\nimport { haStyleDialog } from \"../../resources/styles\";\nimport type { HomeAssistant } from \"../../types\";\nimport { HaImageCropperDialogParams } from \"./show-image-cropper-dialog\";\n\n@customElement(\"image-cropper-dialog\")\nexport class HaImagecropperDialog extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @state() private _params?: HaImageCropperDialogParams;\n\n  @state() private _open = false;\n\n  @query(\"img\", true) private _image!: HTMLImageElement;\n\n  private _cropper?: Cropper;\n\n  public showDialog(params: HaImageCropperDialogParams): void {\n    this._params = params;\n    this._open = true;\n  }\n\n  public closeDialog() {\n    this._open = false;\n    this._params = undefined;\n    this._cropper?.destroy();\n    this._cropper = undefined;\n  }\n\n  protected updated(changedProperties: PropertyValues) {\n    if (!changedProperties.has(\"_params\") || !this._params) {\n      return;\n    }\n    if (!this._cropper) {\n      this._image.src = URL.createObjectURL(this._params.file);\n      this._cropper = new Cropper(this._image, {\n        aspectRatio: this._params.options.aspectRatio,\n        viewMode: 1,\n        dragMode: \"move\",\n        minCropBoxWidth: 50,\n        ready: () => {\n          URL.revokeObjectURL(this._image!.src);\n        },\n      });\n    } else {\n      this._cropper.replace(URL.createObjectURL(this._params.file));\n    }\n  }\n\n  protected render(): TemplateResult {\n    return html`<ha-dialog\n      @closed=${this.closeDialog}\n      scrimClickAction\n      escapeKeyAction\n      .open=${this._open}\n    >\n      <div\n        class=\"container ${classMap({\n          round: Boolean(this._params?.options.round),\n        })}\"\n      >\n        <img alt=${this.hass.localize(\"ui.dialogs.image_cropper.crop_image\")} />\n      </div>\n      <mwc-button slot=\"secondaryAction\" @click=${this.closeDialog}>\n        ${this.hass.localize(\"ui.common.cancel\")}\n      </mwc-button>\n      <mwc-button slot=\"primaryAction\" @click=${this._cropImage}>\n        ${this.hass.localize(\"ui.dialogs.image_cropper.crop\")}\n      </mwc-button>\n    </ha-dialog>`;\n  }\n\n  private _cropImage() {\n    this._cropper!.getCroppedCanvas().toBlob(\n      (blob) => {\n        if (!blob) {\n          return;\n        }\n        const file = new File([blob], this._params!.file.name, {\n          type: this._params!.options.type || this._params!.file.type,\n        });\n        this._params!.croppedCallback(file);\n        this.closeDialog();\n      },\n      this._params!.options.type || this._params!.file.type,\n      this._params!.options.quality\n    );\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyleDialog,\n      css`\n        ${unsafeCSS(cropperCss)}\n        .container {\n          max-width: 640px;\n        }\n        img {\n          max-width: 100%;\n        }\n        .container.round .cropper-view-box,\n        .container.round .cropper-face {\n          border-radius: 50%;\n        }\n        .cropper-line,\n        .cropper-point,\n        .cropper-point.point-se::before {\n          background-color: var(--primary-color);\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"image-cropper-dialog\": HaImagecropperDialog;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}