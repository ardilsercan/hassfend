{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport { html, LitElement } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport \"../../components/ha-settings-row\";\nimport \"../../components/ha-switch\";\nimport { forwardHaptic } from \"../../data/haptics\";\nlet HaSetVibrateRow = _decorate([customElement(\"ha-set-vibrate-row\")], function (_initialize, _LitElement) {\n  class HaSetVibrateRow extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaSetVibrateRow,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"narrow\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        return html`\n      <ha-settings-row .narrow=${this.narrow}>\n        <span slot=\"heading\">\n          ${this.hass.localize(\"ui.panel.profile.vibrate.header\")}\n        </span>\n        <span slot=\"description\">\n          ${this.hass.localize(\"ui.panel.profile.vibrate.description\")}\n        </span>\n        <ha-switch\n          .checked=${this.hass.vibrate}\n          @change=${this._checkedChanged}\n        ></ha-switch>\n      </ha-settings-row>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_checkedChanged\",\n      value: async function _checkedChanged(ev) {\n        const vibrate = ev.target.checked;\n        if (vibrate === this.hass.vibrate) {\n          return;\n        }\n        fireEvent(this, \"hass-vibrate\", {\n          vibrate\n        });\n        forwardHaptic(\"light\");\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["html","LitElement","customElement","property","fireEvent","forwardHaptic","HaSetVibrateRow","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","type","Boolean","render","narrow","hass","localize","vibrate","_checkedChanged","ev","target","checked"],"sources":["/workspaces/frontend/src/panels/profile/ha-set-vibrate-row.ts"],"sourcesContent":["import { html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport \"../../components/ha-settings-row\";\nimport \"../../components/ha-switch\";\nimport type { HaSwitch } from \"../../components/ha-switch\";\nimport { forwardHaptic } from \"../../data/haptics\";\nimport type { HomeAssistant } from \"../../types\";\n\n@customElement(\"ha-set-vibrate-row\")\nclass HaSetVibrateRow extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ type: Boolean }) public narrow = false;\n\n  protected render(): TemplateResult {\n    return html`\n      <ha-settings-row .narrow=${this.narrow}>\n        <span slot=\"heading\">\n          ${this.hass.localize(\"ui.panel.profile.vibrate.header\")}\n        </span>\n        <span slot=\"description\">\n          ${this.hass.localize(\"ui.panel.profile.vibrate.description\")}\n        </span>\n        <ha-switch\n          .checked=${this.hass.vibrate}\n          @change=${this._checkedChanged}\n        ></ha-switch>\n      </ha-settings-row>\n    `;\n  }\n\n  private async _checkedChanged(ev: Event) {\n    const vibrate = (ev.target as HaSwitch).checked;\n    if (vibrate === this.hass.vibrate) {\n      return;\n    }\n    fireEvent(this, \"hass-vibrate\", {\n      vibrate,\n    });\n    forwardHaptic(\"light\");\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-set-vibrate-row\": HaSetVibrateRow;\n  }\n}\n"],"mappings":";AAAA,SAASA,IAAI,EAAEC,UAAU,QAAwB,KAAK;AACtD,SAASC,aAAa,EAAEC,QAAQ,QAAQ,gBAAgB;AACxD,SAASC,SAAS,QAAQ,6BAA6B;AACvD,OAAO,kCAAkC;AACzC,OAAO,4BAA4B;AAEnC,SAASC,aAAa,QAAQ,oBAAoB;AAAC,IAI7CC,eAAe,GAAAC,SAAA,EADpBL,aAAa,CAAC,oBAAoB,CAAC,aAAAM,WAAA,EAAAC,WAAA;EAApC,MACMH,eAAe,SAAAG,WAAA,CAAoB;IAAAC,YAAA,GAAAC,IAAA;MAAA,SAAAA,IAAA;MAAAH,WAAA;IAAA;EAgCzC;EAAC;IAAAI,CAAA,EAhCKN,eAAe;IAAAO,CAAA;MAAAC,IAAA;MAAAC,UAAA,GAClBZ,QAAQ,CAAC;QAAEa,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAC,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAE9BZ,QAAQ,CAAC;QAAEgB,IAAI,EAAEC;MAAQ,CAAC,CAAC;MAAAH,GAAA;MAAAC,MAAA;QAAA,OAAiB,KAAK;MAAA;IAAA;MAAAJ,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAElD,SAAAG,OAAA,EAAmC;QACjC,OAAOrB,IAAK;AAChB,iCAAiC,IAAI,CAACsB,MAAO;AAC7C;AACA,YAAY,IAAI,CAACC,IAAI,CAACC,QAAQ,CAAC,iCAAiC,CAAE;AAClE;AACA;AACA,YAAY,IAAI,CAACD,IAAI,CAACC,QAAQ,CAAC,sCAAsC,CAAE;AACvE;AACA;AACA,qBAAqB,IAAI,CAACD,IAAI,CAACE,OAAQ;AACvC,oBAAoB,IAAI,CAACC,eAAgB;AACzC;AACA;AACA,KAAK;MACH;IAAC;MAAAZ,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,eAAAQ,gBAA8BC,EAAS,EAAE;QACvC,MAAMF,OAAO,GAAIE,EAAE,CAACC,MAAM,CAAcC,OAAO;QAC/C,IAAIJ,OAAO,KAAK,IAAI,CAACF,IAAI,CAACE,OAAO,EAAE;UACjC;QACF;QACArB,SAAS,CAAC,IAAI,EAAE,cAAc,EAAE;UAC9BqB;QACF,CAAC,CAAC;QACFpB,aAAa,CAAC,OAAO,CAAC;MACxB;IAAC;EAAA;AAAA,GA/B2BJ,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}