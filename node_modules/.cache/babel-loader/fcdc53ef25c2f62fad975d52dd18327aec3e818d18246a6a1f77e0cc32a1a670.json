{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport { css, html, LitElement } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport \"../components/ha-svg-icon\";\nimport { brandsUrl } from \"../util/brands-url\";\nlet IntegrationBadge = _decorate([customElement(\"integration-badge\")], function (_initialize, _LitElement) {\n  class IntegrationBadge extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: IntegrationBadge,\n    d: [{\n      kind: \"field\",\n      decorators: [property()],\n      key: \"domain\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property()],\n      key: \"title\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean\n      })],\n      key: \"darkOptimizedIcon\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        reflect: true\n      })],\n      key: \"clickable\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        return html`\n      <div class=\"icon\">\n        <img\n          alt=\"\"\n          src=${brandsUrl({\n          domain: this.domain,\n          type: \"icon\",\n          darkOptimized: this.darkOptimizedIcon\n        })}\n          crossorigin=\"anonymous\"\n          referrerpolicy=\"no-referrer\"\n        />\n      </div>\n      <div class=\"title\">${this.title}</div>\n    `;\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return css`\n      :host {\n        display: inline-flex;\n        flex-direction: column;\n        text-align: center;\n        color: var(--primary-text-color);\n      }\n\n      img {\n        max-width: 100%;\n        max-height: 100%;\n      }\n\n      .icon {\n        position: relative;\n        margin: 0 auto 8px;\n        height: 40px;\n        width: 40px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n\n      .title {\n        min-height: 2.3em;\n        word-break: break-word;\n      }\n    `;\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","customElement","property","brandsUrl","IntegrationBadge","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","key","value","type","Boolean","reflect","render","domain","darkOptimized","darkOptimizedIcon","title","static","styles"],"sources":["/workspaces/frontend/src/onboarding/integration-badge.ts"],"sourcesContent":["import { css, CSSResultGroup, html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport \"../components/ha-svg-icon\";\nimport { brandsUrl } from \"../util/brands-url\";\n\n@customElement(\"integration-badge\")\nclass IntegrationBadge extends LitElement {\n  @property() public domain!: string;\n\n  @property() public title!: string;\n\n  @property({ type: Boolean }) public darkOptimizedIcon = false;\n\n  @property({ type: Boolean, reflect: true }) public clickable = false;\n\n  protected render(): TemplateResult {\n    return html`\n      <div class=\"icon\">\n        <img\n          alt=\"\"\n          src=${brandsUrl({\n            domain: this.domain,\n            type: \"icon\",\n            darkOptimized: this.darkOptimizedIcon,\n          })}\n          crossorigin=\"anonymous\"\n          referrerpolicy=\"no-referrer\"\n        />\n      </div>\n      <div class=\"title\">${this.title}</div>\n    `;\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      :host {\n        display: inline-flex;\n        flex-direction: column;\n        text-align: center;\n        color: var(--primary-text-color);\n      }\n\n      img {\n        max-width: 100%;\n        max-height: 100%;\n      }\n\n      .icon {\n        position: relative;\n        margin: 0 auto 8px;\n        height: 40px;\n        width: 40px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n\n      .title {\n        min-height: 2.3em;\n        word-break: break-word;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"integration-badge\": IntegrationBadge;\n  }\n}\n"],"mappings":";AAAA,SAASA,GAAG,EAAkBC,IAAI,EAAEC,UAAU,QAAwB,KAAK;AAC3E,SAASC,aAAa,EAAEC,QAAQ,QAAQ,gBAAgB;AACxD,OAAO,2BAA2B;AAClC,SAASC,SAAS,QAAQ,oBAAoB;AAAC,IAGzCC,gBAAgB,GAAAC,SAAA,EADrBJ,aAAa,CAAC,mBAAmB,CAAC,aAAAK,WAAA,EAAAC,WAAA;EAAnC,MACMH,gBAAgB,SAAAG,WAAA,CAAoB;IAAAC,YAAA,GAAAC,IAAA;MAAA,SAAAA,IAAA;MAAAH,WAAA;IAAA;EAyD1C;EAAC;IAAAI,CAAA,EAzDKN,gBAAgB;IAAAO,CAAA;MAAAC,IAAA;MAAAC,UAAA,GACnBX,QAAQ,CAAC,CAAC;MAAAY,GAAA;MAAAC,KAAA;IAAA;MAAAH,IAAA;MAAAC,UAAA,GAEVX,QAAQ,CAAC,CAAC;MAAAY,GAAA;MAAAC,KAAA;IAAA;MAAAH,IAAA;MAAAC,UAAA,GAEVX,QAAQ,CAAC;QAAEc,IAAI,EAAEC;MAAQ,CAAC,CAAC;MAAAH,GAAA;MAAAC,MAAA;QAAA,OAA4B,KAAK;MAAA;IAAA;MAAAH,IAAA;MAAAC,UAAA,GAE5DX,QAAQ,CAAC;QAAEc,IAAI,EAAEC,OAAO;QAAEC,OAAO,EAAE;MAAK,CAAC,CAAC;MAAAJ,GAAA;MAAAC,MAAA;QAAA,OAAoB,KAAK;MAAA;IAAA;MAAAH,IAAA;MAAAE,GAAA;MAAAC,KAAA,EAEpE,SAAAI,OAAA,EAAmC;QACjC,OAAOpB,IAAK;AAChB;AACA;AACA;AACA,gBAAgBI,SAAS,CAAC;UACdiB,MAAM,EAAE,IAAI,CAACA,MAAM;UACnBJ,IAAI,EAAE,MAAM;UACZK,aAAa,EAAE,IAAI,CAACC;QACtB,CAAC,CAAE;AACb;AACA;AACA;AACA;AACA,2BAA2B,IAAI,CAACC,KAAM;AACtC,KAAK;MACH;IAAC;MAAAX,IAAA;MAAAY,MAAA;MAAAV,GAAA;MAAAC,KAAA,EAED,SAAAU,OAAA,EAAoC;QAClC,OAAO3B,GAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;MACH;IAAC;EAAA;AAAA,GAxD4BE,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}