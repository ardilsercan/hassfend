{"ast":null,"code":"import { TimeScale } from \"chart.js\";\nexport class TimeLineScale extends TimeScale {\n  determineDataLimits() {\n    const options = this.options;\n    // @ts-ignore\n    const adapter = this._adapter;\n    const unit = options.time.unit || \"day\";\n    let {\n      min,\n      max\n    } = this.getUserBounds();\n    const chart = this.chart;\n\n    // Convert data to timestamps\n    chart.data.datasets.forEach((dataset, index) => {\n      if (!chart.isDatasetVisible(index)) {\n        return;\n      }\n      for (const data of dataset.data) {\n        let timestamp0 = adapter.parse(data.start, this);\n        let timestamp1 = adapter.parse(data.end, this);\n        if (timestamp0 > timestamp1) {\n          [timestamp0, timestamp1] = [timestamp1, timestamp0];\n        }\n        if (min > timestamp0 && timestamp0) {\n          min = timestamp0;\n        }\n        if (max < timestamp1 && timestamp1) {\n          max = timestamp1;\n        }\n      }\n    });\n\n    // In case there is no valid min/max, var's use today limits\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit);\n\n    // Make sure that max is strictly higher than min (required by the lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n}\nTimeLineScale.id = \"timeline\";\nTimeLineScale.defaults = {\n  position: \"bottom\",\n  tooltips: {\n    mode: \"nearest\"\n  },\n  ticks: {\n    autoSkip: true\n  }\n};","map":{"version":3,"names":["TimeScale","TimeLineScale","determineDataLimits","options","adapter","_adapter","unit","time","min","max","getUserBounds","chart","data","datasets","forEach","dataset","index","isDatasetVisible","timestamp0","parse","start","timestamp1","end","isFinite","isNaN","startOf","Date","now","endOf","Math","id","defaults","position","tooltips","mode","ticks","autoSkip"],"sources":["/Users/sercanardil/Desktop/frontend/src/components/chart/timeline-chart/timeline-scale.ts"],"sourcesContent":["import { TimeScale } from \"chart.js\";\nimport { TimeLineData } from \"./const\";\n\nexport class TimeLineScale extends TimeScale {\n  static id = \"timeline\";\n\n  static defaults = {\n    position: \"bottom\",\n    tooltips: {\n      mode: \"nearest\",\n    },\n    ticks: {\n      autoSkip: true,\n    },\n  };\n\n  determineDataLimits() {\n    const options = this.options;\n    // @ts-ignore\n    const adapter = this._adapter;\n    const unit = options.time.unit || \"day\";\n    let { min, max } = this.getUserBounds();\n\n    const chart = this.chart;\n\n    // Convert data to timestamps\n    chart.data.datasets.forEach((dataset, index) => {\n      if (!chart.isDatasetVisible(index)) {\n        return;\n      }\n      for (const data of dataset.data as TimeLineData[]) {\n        let timestamp0 = adapter.parse(data.start, this);\n        let timestamp1 = adapter.parse(data.end, this);\n        if (timestamp0 > timestamp1) {\n          [timestamp0, timestamp1] = [timestamp1, timestamp0];\n        }\n        if (min > timestamp0 && timestamp0) {\n          min = timestamp0;\n        }\n        if (max < timestamp1 && timestamp1) {\n          max = timestamp1;\n        }\n      }\n    });\n\n    // In case there is no valid min/max, var's use today limits\n    min =\n      isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit);\n\n    // Make sure that max is strictly higher than min (required by the lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,UAAU;AAGpC,OAAO,MAAMC,aAAa,SAASD,SAAS,CAAC;EAa3CE,mBAAmBA,CAAA,EAAG;IACpB,MAAMC,OAAO,GAAG,IAAI,CAACA,OAAO;IAC5B;IACA,MAAMC,OAAO,GAAG,IAAI,CAACC,QAAQ;IAC7B,MAAMC,IAAI,GAAGH,OAAO,CAACI,IAAI,CAACD,IAAI,IAAI,KAAK;IACvC,IAAI;MAAEE,GAAG;MAAEC;IAAI,CAAC,GAAG,IAAI,CAACC,aAAa,CAAC,CAAC;IAEvC,MAAMC,KAAK,GAAG,IAAI,CAACA,KAAK;;IAExB;IACAA,KAAK,CAACC,IAAI,CAACC,QAAQ,CAACC,OAAO,CAAC,CAACC,OAAO,EAAEC,KAAK,KAAK;MAC9C,IAAI,CAACL,KAAK,CAACM,gBAAgB,CAACD,KAAK,CAAC,EAAE;QAClC;MACF;MACA,KAAK,MAAMJ,IAAI,IAAIG,OAAO,CAACH,IAAI,EAAoB;QACjD,IAAIM,UAAU,GAAGd,OAAO,CAACe,KAAK,CAACP,IAAI,CAACQ,KAAK,EAAE,IAAI,CAAC;QAChD,IAAIC,UAAU,GAAGjB,OAAO,CAACe,KAAK,CAACP,IAAI,CAACU,GAAG,EAAE,IAAI,CAAC;QAC9C,IAAIJ,UAAU,GAAGG,UAAU,EAAE;UAC3B,CAACH,UAAU,EAAEG,UAAU,CAAC,GAAG,CAACA,UAAU,EAAEH,UAAU,CAAC;QACrD;QACA,IAAIV,GAAG,GAAGU,UAAU,IAAIA,UAAU,EAAE;UAClCV,GAAG,GAAGU,UAAU;QAClB;QACA,IAAIT,GAAG,GAAGY,UAAU,IAAIA,UAAU,EAAE;UAClCZ,GAAG,GAAGY,UAAU;QAClB;MACF;IACF,CAAC,CAAC;;IAEF;IACAb,GAAG,GACDe,QAAQ,CAACf,GAAG,CAAC,IAAI,CAACgB,KAAK,CAAChB,GAAG,CAAC,GAAGA,GAAG,GAAG,CAACJ,OAAO,CAACqB,OAAO,CAACC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAErB,IAAI,CAAC;IACzEG,GAAG,GAAGc,QAAQ,CAACd,GAAG,CAAC,IAAI,CAACe,KAAK,CAACf,GAAG,CAAC,GAAGA,GAAG,GAAG,CAACL,OAAO,CAACwB,KAAK,CAACF,IAAI,CAACC,GAAG,CAAC,CAAC,EAAErB,IAAI,CAAC;;IAE3E;IACA,IAAI,CAACE,GAAG,GAAGqB,IAAI,CAACrB,GAAG,CAACA,GAAG,EAAEC,GAAG,GAAG,CAAC,CAAC;IACjC,IAAI,CAACA,GAAG,GAAGoB,IAAI,CAACpB,GAAG,CAACD,GAAG,GAAG,CAAC,EAAEC,GAAG,CAAC;EACnC;AACF;AAnDaR,aAAa,CACjB6B,EAAE,GAAG,UAAU;AADX7B,aAAa,CAGjB8B,QAAQ,GAAG;EAChBC,QAAQ,EAAE,QAAQ;EAClBC,QAAQ,EAAE;IACRC,IAAI,EAAE;EACR,CAAC;EACDC,KAAK,EAAE;IACLC,QAAQ,EAAE;EACZ;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}