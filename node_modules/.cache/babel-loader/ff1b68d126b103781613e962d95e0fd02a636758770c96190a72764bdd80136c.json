{"ast":null,"code":"import _decorate from \"@babel/runtime/helpers/decorate\";\nimport \"@material/mwc-button/mwc-button\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport \"../../components/ha-dialog\";\nimport \"../../components/ha-formfield\";\nimport \"../../components/ha-switch\";\nimport { updateConfigEntry } from \"../../data/config_entries\";\nimport { haStyleDialog } from \"../../resources/styles\";\nimport { showAlertDialog } from \"../generic/show-dialog-box\";\nlet DialogConfigEntrySystemOptions = _decorate([customElement(\"dialog-config-entry-system-options\")], function (_initialize, _LitElement) {\n  class DialogConfigEntrySystemOptions extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: DialogConfigEntrySystemOptions,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_disableNewEntities\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_disablePolling\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_error\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_params\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [state()],\n      key: \"_submitting\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"method\",\n      key: \"showDialog\",\n      value: async function showDialog(params) {\n        this._params = params;\n        this._error = undefined;\n        this._disableNewEntities = params.entry.pref_disable_new_entities;\n        this._disablePolling = params.entry.pref_disable_polling;\n      }\n    }, {\n      kind: \"method\",\n      key: \"closeDialog\",\n      value: function closeDialog() {\n        this._error = \"\";\n        this._params = undefined;\n        fireEvent(this, \"dialog-closed\", {\n          dialog: this.localName\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this._params) {\n          return nothing;\n        }\n        return html`\n      <ha-dialog\n        open\n        @closed=${this.closeDialog}\n        .heading=${this.hass.localize(\"ui.dialogs.config_entry_system_options.title\", {\n          integration: this.hass.localize(`component.${this._params.entry.domain}.title`) || this._params.entry.domain\n        })}\n      >\n        ${this._error ? html` <div class=\"error\">${this._error}</div> ` : \"\"}\n        <ha-formfield\n          .label=${html`<p>\n              ${this.hass.localize(\"ui.dialogs.config_entry_system_options.enable_new_entities_label\")}\n            </p>\n            <p class=\"secondary\">\n              ${this.hass.localize(\"ui.dialogs.config_entry_system_options.enable_new_entities_description\", {\n          integration: this.hass.localize(`component.${this._params.entry.domain}.title`) || this._params.entry.domain\n        })}\n            </p>`}\n        >\n          <ha-switch\n            .checked=${!this._disableNewEntities}\n            @change=${this._disableNewEntitiesChanged}\n            .disabled=${this._submitting}\n            dialogInitialFocus\n          ></ha-switch>\n        </ha-formfield>\n\n        <ha-formfield\n          .label=${html`<p>\n              ${this.hass.localize(\"ui.dialogs.config_entry_system_options.enable_polling_label\")}\n            </p>\n            <p class=\"secondary\">\n              ${this.hass.localize(\"ui.dialogs.config_entry_system_options.enable_polling_description\", {\n          integration: this.hass.localize(`component.${this._params.entry.domain}.title`) || this._params.entry.domain\n        })}\n            </p>`}\n        >\n          <ha-switch\n            .checked=${!this._disablePolling}\n            @change=${this._disablePollingChanged}\n            .disabled=${this._submitting}\n          ></ha-switch>\n        </ha-formfield>\n        <mwc-button\n          slot=\"secondaryAction\"\n          @click=${this.closeDialog}\n          .disabled=${this._submitting}\n        >\n          ${this.hass.localize(\"ui.common.cancel\")}\n        </mwc-button>\n        <mwc-button\n          slot=\"primaryAction\"\n          @click=${this._updateEntry}\n          .disabled=${this._submitting}\n        >\n          ${this.hass.localize(\"ui.dialogs.config_entry_system_options.update\")}\n        </mwc-button>\n      </ha-dialog>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_disableNewEntitiesChanged\",\n      value: function _disableNewEntitiesChanged(ev) {\n        this._error = undefined;\n        this._disableNewEntities = !ev.target.checked;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_disablePollingChanged\",\n      value: function _disablePollingChanged(ev) {\n        this._error = undefined;\n        this._disablePolling = !ev.target.checked;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_updateEntry\",\n      value: async function _updateEntry() {\n        this._submitting = true;\n        const data = {\n          pref_disable_new_entities: this._disableNewEntities\n        };\n        data.pref_disable_polling = this._disablePolling;\n        try {\n          const result = await updateConfigEntry(this.hass, this._params.entry.entry_id, data);\n          if (result.require_restart) {\n            await showAlertDialog(this, {\n              text: this.hass.localize(\"ui.dialogs.config_entry_system_options.restart_home_assistant\")\n            });\n          }\n          this.closeDialog();\n        } catch (err) {\n          this._error = err.message || \"Unknown error\";\n        } finally {\n          this._submitting = false;\n        }\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return [haStyleDialog, css`\n        .error {\n          color: var(--error-color);\n        }\n      `];\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["css","html","LitElement","nothing","customElement","property","state","fireEvent","updateConfigEntry","haStyleDialog","showAlertDialog","DialogConfigEntrySystemOptions","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","attribute","key","value","showDialog","params","_params","_error","undefined","_disableNewEntities","entry","pref_disable_new_entities","_disablePolling","pref_disable_polling","closeDialog","dialog","localName","render","hass","localize","integration","domain","_disableNewEntitiesChanged","_submitting","_disablePollingChanged","_updateEntry","ev","target","checked","data","result","entry_id","require_restart","text","err","message","static","styles"],"sources":["/Users/sercanardil/Desktop/frontend/src/dialogs/config-entry-system-options/dialog-config-entry-system-options.ts"],"sourcesContent":["import \"@material/mwc-button/mwc-button\";\nimport { css, CSSResultGroup, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport \"../../components/ha-dialog\";\nimport \"../../components/ha-formfield\";\nimport \"../../components/ha-switch\";\nimport type { HaSwitch } from \"../../components/ha-switch\";\nimport {\n  ConfigEntryMutableParams,\n  updateConfigEntry,\n} from \"../../data/config_entries\";\nimport { haStyleDialog } from \"../../resources/styles\";\nimport type { HomeAssistant } from \"../../types\";\nimport { showAlertDialog } from \"../generic/show-dialog-box\";\nimport { ConfigEntrySystemOptionsDialogParams } from \"./show-dialog-config-entry-system-options\";\n\n@customElement(\"dialog-config-entry-system-options\")\nclass DialogConfigEntrySystemOptions extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @state() private _disableNewEntities!: boolean;\n\n  @state() private _disablePolling!: boolean;\n\n  @state() private _error?: string;\n\n  @state() private _params?: ConfigEntrySystemOptionsDialogParams;\n\n  @state() private _submitting = false;\n\n  public async showDialog(\n    params: ConfigEntrySystemOptionsDialogParams\n  ): Promise<void> {\n    this._params = params;\n    this._error = undefined;\n    this._disableNewEntities = params.entry.pref_disable_new_entities;\n    this._disablePolling = params.entry.pref_disable_polling;\n  }\n\n  public closeDialog(): void {\n    this._error = \"\";\n    this._params = undefined;\n    fireEvent(this, \"dialog-closed\", { dialog: this.localName });\n  }\n\n  protected render() {\n    if (!this._params) {\n      return nothing;\n    }\n\n    return html`\n      <ha-dialog\n        open\n        @closed=${this.closeDialog}\n        .heading=${this.hass.localize(\n          \"ui.dialogs.config_entry_system_options.title\",\n          {\n            integration:\n              this.hass.localize(\n                `component.${this._params.entry.domain}.title`\n              ) || this._params.entry.domain,\n          }\n        )}\n      >\n        ${this._error ? html` <div class=\"error\">${this._error}</div> ` : \"\"}\n        <ha-formfield\n          .label=${html`<p>\n              ${this.hass.localize(\n                \"ui.dialogs.config_entry_system_options.enable_new_entities_label\"\n              )}\n            </p>\n            <p class=\"secondary\">\n              ${this.hass.localize(\n                \"ui.dialogs.config_entry_system_options.enable_new_entities_description\",\n                {\n                  integration:\n                    this.hass.localize(\n                      `component.${this._params.entry.domain}.title`\n                    ) || this._params.entry.domain,\n                }\n              )}\n            </p>`}\n        >\n          <ha-switch\n            .checked=${!this._disableNewEntities}\n            @change=${this._disableNewEntitiesChanged}\n            .disabled=${this._submitting}\n            dialogInitialFocus\n          ></ha-switch>\n        </ha-formfield>\n\n        <ha-formfield\n          .label=${html`<p>\n              ${this.hass.localize(\n                \"ui.dialogs.config_entry_system_options.enable_polling_label\"\n              )}\n            </p>\n            <p class=\"secondary\">\n              ${this.hass.localize(\n                \"ui.dialogs.config_entry_system_options.enable_polling_description\",\n                {\n                  integration:\n                    this.hass.localize(\n                      `component.${this._params.entry.domain}.title`\n                    ) || this._params.entry.domain,\n                }\n              )}\n            </p>`}\n        >\n          <ha-switch\n            .checked=${!this._disablePolling}\n            @change=${this._disablePollingChanged}\n            .disabled=${this._submitting}\n          ></ha-switch>\n        </ha-formfield>\n        <mwc-button\n          slot=\"secondaryAction\"\n          @click=${this.closeDialog}\n          .disabled=${this._submitting}\n        >\n          ${this.hass.localize(\"ui.common.cancel\")}\n        </mwc-button>\n        <mwc-button\n          slot=\"primaryAction\"\n          @click=${this._updateEntry}\n          .disabled=${this._submitting}\n        >\n          ${this.hass.localize(\"ui.dialogs.config_entry_system_options.update\")}\n        </mwc-button>\n      </ha-dialog>\n    `;\n  }\n\n  private _disableNewEntitiesChanged(ev: Event): void {\n    this._error = undefined;\n    this._disableNewEntities = !(ev.target as HaSwitch).checked;\n  }\n\n  private _disablePollingChanged(ev: Event): void {\n    this._error = undefined;\n    this._disablePolling = !(ev.target as HaSwitch).checked;\n  }\n\n  private async _updateEntry(): Promise<void> {\n    this._submitting = true;\n    const data: ConfigEntryMutableParams = {\n      pref_disable_new_entities: this._disableNewEntities,\n    };\n    data.pref_disable_polling = this._disablePolling;\n    try {\n      const result = await updateConfigEntry(\n        this.hass,\n        this._params!.entry.entry_id,\n        data\n      );\n      if (result.require_restart) {\n        await showAlertDialog(this, {\n          text: this.hass.localize(\n            \"ui.dialogs.config_entry_system_options.restart_home_assistant\"\n          ),\n        });\n      }\n      this.closeDialog();\n    } catch (err: any) {\n      this._error = err.message || \"Unknown error\";\n    } finally {\n      this._submitting = false;\n    }\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyleDialog,\n      css`\n        .error {\n          color: var(--error-color);\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"dialog-config-entry-system-options\": DialogConfigEntrySystemOptions;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}