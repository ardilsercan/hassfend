{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _callSuper from \"@babel/runtime/helpers/callSuper\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _decorate from \"@babel/runtime/helpers/decorate\";\nvar _templateObject, _templateObject2, _templateObject3;\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport { html, LitElement } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { processEvent } from \"../../../../data/assist_pipeline\";\nimport \"./assist-render-pipeline-run\";\nexport var AssistPipelineEvents = _decorate([customElement(\"assist-render-pipeline-events\")], function (_initialize, _LitElement) {\n  var AssistPipelineEvents = /*#__PURE__*/function (_LitElement2) {\n    _inherits(AssistPipelineEvents, _LitElement2);\n    function AssistPipelineEvents() {\n      var _this;\n      _classCallCheck(this, AssistPipelineEvents);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, AssistPipelineEvents, [].concat(args));\n      _initialize(_assertThisInitialized(_this));\n      return _this;\n    }\n    return _createClass(AssistPipelineEvents);\n  }(_LitElement);\n  return {\n    F: AssistPipelineEvents,\n    d: [{\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        attribute: false\n      })],\n      key: \"events\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_processEvents\",\n      value: function value() {\n        return memoizeOne(function (events) {\n          var run;\n          events.forEach(function (event) {\n            run = processEvent(run, event);\n          });\n          return run;\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        var run = this._processEvents(this.events);\n        if (!run) {\n          if (this.events.length) {\n            return html(_templateObject || (_templateObject = _taggedTemplateLiteral([\"<ha-alert alert-type=\\\"error\\\">Error showing run</ha-alert>\\n          <ha-card>\\n            <ha-expansion-panel>\\n              <span slot=\\\"header\\\">Raw</span>\\n              <pre>\", \"</pre>\\n            </ha-expansion-panel>\\n          </ha-card>\"])), JSON.stringify(this.events, null, 2));\n          }\n          return html(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"<ha-alert alert-type=\\\"warning\\\"\\n        >There where no events in this run.</ha-alert\\n      >\"])));\n        }\n        return html(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n      <assist-render-pipeline-run\\n        .hass=\", \"\\n        .pipelineRun=\", \"\\n      ></assist-render-pipeline-run>\\n    \"])), this.hass, run);\n      }\n    }]\n  };\n}, LitElement);","map":{"version":3,"names":["html","LitElement","customElement","property","memoizeOne","processEvent","AssistPipelineEvents","_decorate","_initialize","_LitElement","_LitElement2","_inherits","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_assertThisInitialized","_createClass","F","d","kind","decorators","attribute","key","value","events","run","forEach","event","render","_processEvents","_templateObject","_taggedTemplateLiteral","JSON","stringify","_templateObject2","_templateObject3","hass"],"sources":["/workspaces/frontend/src/panels/config/voice-assistants/debug/assist-render-pipeline-events.ts"],"sourcesContent":["import { html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport {\n  PipelineRun,\n  PipelineRunEvent,\n  processEvent,\n} from \"../../../../data/assist_pipeline\";\nimport type { HomeAssistant } from \"../../../../types\";\nimport \"./assist-render-pipeline-run\";\n\n@customElement(\"assist-render-pipeline-events\")\nexport class AssistPipelineEvents extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public events!: PipelineRunEvent[];\n\n  private _processEvents = memoizeOne(\n    (events: PipelineRunEvent[]): PipelineRun | undefined => {\n      let run: PipelineRun | undefined;\n      events.forEach((event) => {\n        run = processEvent(run, event);\n      });\n      return run;\n    }\n  );\n\n  protected render(): TemplateResult {\n    const run = this._processEvents(this.events);\n    if (!run) {\n      if (this.events.length) {\n        return html`<ha-alert alert-type=\"error\">Error showing run</ha-alert>\n          <ha-card>\n            <ha-expansion-panel>\n              <span slot=\"header\">Raw</span>\n              <pre>${JSON.stringify(this.events, null, 2)}</pre>\n            </ha-expansion-panel>\n          </ha-card>`;\n      }\n      return html`<ha-alert alert-type=\"warning\"\n        >There where no events in this run.</ha-alert\n      >`;\n    }\n    return html`\n      <assist-render-pipeline-run\n        .hass=${this.hass}\n        .pipelineRun=${run}\n      ></assist-render-pipeline-run>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"assist-render-pipeline-events\": AssistPipelineEvents;\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;AAAA,SAASA,IAAI,EAAEC,UAAU,QAAwB,KAAK;AACtD,SAASC,aAAa,EAAEC,QAAQ,QAAQ,gBAAgB;AACxD,OAAOC,UAAU,MAAM,aAAa;AACpC,SAGEC,YAAY,QACP,kCAAkC;AAEzC,OAAO,8BAA8B;AAErC,WACaC,oBAAoB,GAAAC,SAAA,EADhCL,aAAa,CAAC,+BAA+B,CAAC,aAAAM,WAAA,EAAAC,WAAA;EAAA,IAClCH,oBAAoB,0BAAAI,YAAA;IAAAC,SAAA,CAAAL,oBAAA,EAAAI,YAAA;IAAA,SAAAJ,qBAAA;MAAA,IAAAM,KAAA;MAAAC,eAAA,OAAAP,oBAAA;MAAA,SAAAQ,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAAC,IAAA,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;QAAAF,IAAA,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;MAAA;MAAAP,KAAA,GAAAQ,UAAA,OAAAd,oBAAA,KAAAe,MAAA,CAAAJ,IAAA;MAAAT,WAAA,CAAAc,sBAAA,CAAAV,KAAA;MAAA,OAAAA,KAAA;IAAA;IAAA,OAAAW,YAAA,CAAAjB,oBAAA;EAAA,EAAAG,WAAA;EAAA;IAAAe,CAAA,EAApBlB,oBAAoB;IAAAmB,CAAA;MAAAC,IAAA;MAAAC,UAAA,GAC9BxB,QAAQ,CAAC;QAAEyB,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAC,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAC,UAAA,GAE9BxB,QAAQ,CAAC;QAAEyB,SAAS,EAAE;MAAM,CAAC,CAAC;MAAAC,GAAA;MAAAC,KAAA;IAAA;MAAAJ,IAAA;MAAAG,GAAA;MAAAC,KAAA,WAAAA,MAAA;QAAA,OAEN1B,UAAU,CACjC,UAAC2B,MAA0B,EAA8B;UACvD,IAAIC,GAA4B;UAChCD,MAAM,CAACE,OAAO,CAAC,UAACC,KAAK,EAAK;YACxBF,GAAG,GAAG3B,YAAY,CAAC2B,GAAG,EAAEE,KAAK,CAAC;UAChC,CAAC,CAAC;UACF,OAAOF,GAAG;QACZ,CACF,CAAC;MAAA;IAAA;MAAAN,IAAA;MAAAG,GAAA;MAAAC,KAAA,EAED,SAAAK,OAAA,EAAmC;QACjC,IAAMH,GAAG,GAAG,IAAI,CAACI,cAAc,CAAC,IAAI,CAACL,MAAM,CAAC;QAC5C,IAAI,CAACC,GAAG,EAAE;UACR,IAAI,IAAI,CAACD,MAAM,CAACf,MAAM,EAAE;YACtB,OAAOhB,IAAI,CAAAqC,eAAA,KAAAA,eAAA,GAAAC,sBAAA,mQAIEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACT,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;UAGnD;UACA,OAAO/B,IAAI,CAAAyC,gBAAA,KAAAA,gBAAA,GAAAH,sBAAA;QAGb;QACA,OAAOtC,IAAI,CAAA0C,gBAAA,KAAAA,gBAAA,GAAAJ,sBAAA,uIAEC,IAAI,CAACK,IAAI,EACFX,GAAG;MAGxB;IAAC;EAAA;AAAA,GArCuC/B,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}