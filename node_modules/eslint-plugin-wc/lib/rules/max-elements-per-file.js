"use strict";
/**
 * @fileoverview Enforces a maximum number of elements per file
 * @author James Garbutt <https://github.com/43081j>
 * @author Keith Cirkel <https://github.com/keithamus>
 */
Object.defineProperty(exports, "__esModule", { value: true });
const util_1 = require("../util");
//------------------------------------------------------------------------------
// Rule Definition
//------------------------------------------------------------------------------
const rule = {
    meta: {
        docs: {
            description: 'Enforces a maximum number of elements per file',
            url: 'https://github.com/43081j/eslint-plugin-wc/blob/master/docs/rules/max-elements-per-file.md'
        },
        messages: {
            tooMany: 'Only {{count}} element(s) should be defined per individual file'
        },
        schema: [
            {
                type: 'object',
                properties: {
                    max: {
                        type: 'integer',
                        minimum: 1
                    }
                }
            }
        ]
    },
    create(context) {
        // variables should be defined here
        const source = context.getSourceCode();
        const maxElements = context.options[0]?.max ?? 1;
        let elementCount = 0;
        //----------------------------------------------------------------------
        // Helpers
        //----------------------------------------------------------------------
        //----------------------------------------------------------------------
        // Public
        //----------------------------------------------------------------------
        return {
            'ClassDeclaration,ClassExpression': (node) => {
                if ((0, util_1.isCustomElement)(context, node, source.getJSDocComment(node)) &&
                    ++elementCount > maxElements) {
                    context.report({
                        node,
                        messageId: 'tooMany',
                        data: { count: maxElements }
                    });
                }
            }
        };
    }
};
exports.default = rule;
